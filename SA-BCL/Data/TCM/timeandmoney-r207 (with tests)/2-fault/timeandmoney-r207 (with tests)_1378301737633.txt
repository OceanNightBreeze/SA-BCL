#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (106,288) (73,209) (73,209) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 89 197 
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V ERROR java.lang.NullPointerException (106,288) (106,288) 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V ERROR java.lang.NullPointerException 89 
com.domainlanguage.time.TimeOfDayTest:testHashCode()V ERROR java.lang.NullPointerException 325 
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (106,288) (73,209) (73,209) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (106,288) (73,209) (73,209) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (106,288) (73,209) (73,209) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 89 197 146 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 80 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V | STATEMENT | 569 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> 1
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
238 1 100 2 101 1 331 1 67 1 284 2 349 1 215 1 193 1 287 1 174 2 15 3 367 3 
238 1 329 2 299 1 42 1 331 6 22 1 67 1 260 1 284 2 359 1 215 1 286 1 266 2 193 2 287 4 72 1 174 2 367 9 291 2 176 1 7 2 100 5 126 1 101 1 349 3 153 1 82 1 15 9 
238 1 329 2 299 1 42 1 331 6 22 1 67 1 260 1 284 2 359 1 215 1 286 1 266 2 193 2 287 4 72 1 174 2 367 9 291 2 176 1 7 2 100 5 126 1 101 1 349 3 153 1 82 1 15 9 
238 1 329 2 299 1 42 1 331 7 22 1 67 1 260 1 284 2 359 1 215 1 286 1 266 2 193 2 287 5 72 1 174 2 367 10 291 2 176 1 7 2 100 6 126 1 101 1 349 4 153 1 82 1 15 10 
238 1 329 2 299 1 42 1 331 4 22 1 67 1 260 1 284 2 359 1 215 1 286 1 266 2 193 2 287 3 72 1 174 2 367 7 291 1 176 1 7 2 100 4 126 1 101 1 349 2 82 1 15 7 
238 1 329 1 7 1 100 3 101 1 331 3 22 1 67 1 349 1 284 1 153 1 266 1 287 2 174 1 15 4 367 4 291 2 82 1 
238 1 329 1 100 1 7 1 101 1 42 1 67 1 274 1 284 1 34 1 359 1 333 1 193 1 174 1 15 2 367 2 
238 1 329 1 7 1 299 1 100 5 101 1 331 7 22 1 67 1 284 2 349 3 215 1 153 1 266 1 193 1 142 1 287 4 72 1 356 1 174 2 82 1 291 2 15 9 367 9 
238 1 329 1 7 1 299 1 100 5 101 1 331 7 22 1 67 1 284 2 349 3 215 1 153 1 266 1 193 1 142 1 287 4 72 1 356 1 174 2 82 1 291 2 15 9 367 9 
343 1 319 1 12 1 217 1 330 1 255 1 221 1 171 1 347 1 11 1 45 1 105 1 5 1 244 1 
78 1 
319 1 255 2 194 1 78 1 13 1 61 1 355 1 347 2 
30 2 20 1 255 5 78 1 347 5 319 2 191 1 164 2 249 1 207 1 323 1 194 1 253 1 295 2 13 1 61 2 377 1 366 1 62 1 
334 1 194 1 78 1 
246 2 78 1 378 1 
343 2 217 2 221 2 143 1 11 2 45 2 105 1 244 2 
328 1 86 1 45 2 303 1 302 1 360 1 217 2 3 1 168 1 192 2 169 1 221 3 195 2 222 1 143 1 290 1 244 2 343 3 96 2 29 1 52 1 31 2 198 1 179 1 148 1 11 2 105 1 348 1 228 1 294 1 182 1 107 1 321 1 234 2 235 1 184 1 237 1 
343 1 12 1 217 1 330 1 221 1 171 1 11 1 45 1 105 1 244 1 
343 1 368 1 32 1 255 1 311 1 78 1 347 1 217 1 373 1 194 1 221 1 171 1 144 1 224 1 
343 1 368 1 255 2 78 1 347 2 45 1 11 1 217 1 373 1 194 1 221 1 171 1 144 1 224 1 244 1 
319 1 255 1 41 1 61 1 347 1 
319 1 216 1 255 2 194 1 78 1 13 1 61 1 347 2 
255 1 61 1 347 1 
343 2 77 1 45 1 11 1 217 2 221 2 143 2 133 1 244 1 
40 1 256 1 120 1 
343 1 31 1 348 1 228 1 303 1 182 1 360 1 321 1 3 1 168 1 221 1 338 1 195 1 234 1 222 1 143 1 
343 2 39 1 31 1 256 1 348 1 45 1 11 1 303 1 228 1 182 1 360 1 217 1 321 1 3 1 168 1 221 2 195 1 254 1 234 1 222 1 
334 1 143 1 
343 3 217 3 221 3 254 1 143 1 11 3 45 3 244 1 
343 1 217 1 330 1 221 1 171 1 11 1 45 1 
343 1 217 1 77 1 221 1 171 1 11 1 45 1 133 1 244 1 
39 1 255 1 86 1 45 3 303 1 302 1 360 1 217 3 3 1 168 1 192 1 169 1 221 4 195 1 171 1 222 1 143 1 144 1 224 1 244 2 343 4 96 2 368 1 29 1 52 1 31 1 198 1 53 1 148 1 347 1 348 1 11 3 105 1 228 1 182 1 321 1 373 1 254 1 234 1 235 1 184 1 237 1 133 1 156 1 
343 2 217 2 32 1 221 2 254 1 143 1 23 1 11 1 45 1 
343 3 39 1 368 1 255 1 78 1 347 1 45 3 11 3 35 1 217 3 373 1 221 3 171 1 254 2 144 1 224 1 133 1 244 1 156 1 
343 2 217 2 40 1 256 1 221 2 254 1 11 2 45 2 133 1 244 1 
343 1 31 1 348 1 228 1 303 1 182 1 360 1 3 1 321 1 168 1 221 1 195 1 234 1 222 1 143 1 
343 1 31 1 272 1 348 1 228 1 303 1 182 1 360 1 321 1 324 1 168 1 221 1 195 1 234 1 143 1 
185 1 40 2 256 2 160 1 86 1 139 1 362 1 192 4 169 2 120 2 337 1 290 2 123 1 196 1 96 2 52 1 76 1 198 1 247 1 130 1 113 1 235 1 184 1 237 1 
343 1 217 1 373 1 221 1 171 1 54 1 11 1 45 1 
343 5 39 1 32 1 271 1 23 1 45 4 11 4 138 1 217 5 221 5 254 2 143 1 133 1 244 1 
343 2 217 2 330 1 221 2 54 1 171 1 11 2 45 2 
336 1 136 1 94 1 
18 1 336 2 102 1 374 1 136 2 173 1 
336 1 136 1 
336 1 136 1 
18 1 102 1 
18 1 102 1 
18 1 102 1 
336 1 297 1 136 1 
336 1 297 1 136 1 
336 1 297 1 136 1 
134 1 336 1 136 1 
134 1 336 1 136 1 
134 1 336 1 136 1 
175 1 245 2 255 2 147 1 84 2 273 1 78 1 181 2 347 2 106 1 25 2 353 2 209 1 73 1 
343 1 197 1 245 1 255 1 116 1 315 1 84 1 273 1 347 1 181 1 45 1 11 1 25 1 217 1 89 1 353 1 221 1 236 1 
333 1 329 2 266 1 233 2 81 1 
329 1 7 1 266 1 
333 1 329 1 7 1 
333 1 329 3 233 1 266 2 154 1 81 1 
333 1 329 2 233 1 266 1 314 1 81 1 
255 5 300 2 116 1 301 1 85 1 213 1 190 1 139 1 164 1 194 1 306 1 366 3 123 1 30 1 76 1 246 3 315 1 292 1 316 2 78 2 347 5 319 4 110 2 322 1 295 1 13 1 113 1 61 1 236 1 377 2 378 1 62 1 
1 1 255 9 300 6 157 5 116 4 41 5 44 1 190 2 139 3 164 2 218 1 194 1 306 2 366 8 123 3 341 1 30 2 76 3 246 9 292 3 316 6 78 5 347 9 275 1 319 7 129 1 207 1 322 1 295 2 13 1 113 3 61 6 377 6 378 3 62 1 
255 3 300 2 116 1 301 1 213 1 190 1 139 1 164 1 194 1 306 1 366 3 123 1 30 1 76 1 246 4 292 1 78 3 316 2 347 3 319 2 110 1 207 1 295 1 113 1 377 2 378 2 
255 4 300 4 116 2 301 1 213 1 190 1 139 2 164 1 218 1 194 1 306 1 366 5 123 2 30 1 76 2 246 7 292 2 78 4 316 4 347 4 275 1 319 3 129 1 110 2 207 1 295 1 113 2 377 4 378 3 
124 1 
334 1 321 1 90 1 
321 1 158 1 
321 1 303 1 
357 1 321 3 279 1 168 1 90 2 303 1 
321 1 168 1 303 1 
321 1 92 1 
196 3 210 1 145 1 76 1 313 1 159 1 202 1 318 1 2 1 332 1 362 2 192 7 169 3 4 2 296 1 113 1 132 1 290 4 
210 1 278 1 159 1 86 1 24 1 2 2 332 2 139 3 363 4 362 5 119 3 192 31 169 15 4 3 122 1 290 16 123 3 145 2 196 10 96 2 369 1 76 4 198 1 292 3 202 1 371 1 318 2 296 1 155 1 375 1 113 4 184 1 237 1 132 5 
210 1 86 2 2 1 332 1 362 3 192 9 169 4 4 2 307 1 290 5 145 1 196 4 96 4 76 1 198 2 103 1 202 1 318 1 375 1 296 1 113 1 184 2 237 2 132 1 
196 3 145 1 210 1 76 1 159 1 202 1 318 1 2 1 332 1 362 2 192 7 169 3 4 2 296 1 113 1 132 1 290 4 
196 3 145 1 210 1 76 1 159 1 202 1 318 1 2 1 332 1 362 2 192 7 169 3 4 2 296 1 113 1 132 1 290 4 
68 2 284 1 303 1 166 1 264 1 47 1 195 1 193 2 27 1 172 1 121 2 174 1 367 1 31 1 348 1 228 1 182 1 108 1 320 2 208 1 321 1 234 1 15 1 
329 2 65 1 117 1 68 1 284 1 333 1 263 1 335 1 266 1 195 1 193 1 121 1 174 1 367 1 7 1 31 1 101 1 57 1 227 1 348 1 228 1 320 1 79 1 154 1 234 1 15 1 
327 1 238 1 329 2 65 1 117 1 331 1 67 1 68 1 284 1 333 1 263 1 335 1 266 1 195 1 193 1 121 1 174 1 367 2 100 1 7 1 31 1 101 1 227 1 348 1 228 1 320 1 79 1 154 1 234 1 15 2 
238 1 329 2 65 1 117 1 331 2 67 1 68 1 284 1 333 1 335 1 266 1 195 1 193 1 121 1 174 1 367 3 344 1 100 1 7 1 31 1 57 1 227 1 348 1 228 1 320 1 108 1 79 1 154 1 234 1 15 3 
238 1 329 2 117 1 331 2 67 1 68 1 333 1 335 1 266 1 193 1 195 1 121 1 367 2 344 1 100 1 31 1 7 1 57 1 227 1 348 1 228 1 320 1 154 1 234 1 15 2 
280 1 
0 1 43 1 47 1 194 1 195 2 48 1 242 1 340 1 144 1 6 1 343 1 199 2 246 2 8 2 345 1 346 1 347 5 348 1 250 2 252 2 295 1 13 3 61 6 62 1 255 5 303 1 164 1 217 1 221 1 171 1 172 1 306 1 365 2 224 1 366 2 368 1 75 1 309 2 30 1 31 2 32 1 310 1 33 1 311 1 372 4 78 2 127 1 228 1 182 2 321 1 373 1 277 2 234 2 377 2 378 2 
343 1 0 1 368 1 32 1 33 1 255 3 311 1 8 1 372 2 347 3 217 1 373 1 48 1 221 1 171 1 13 1 355 1 61 2 144 1 340 1 224 1 6 1 
0 1 255 3 217 1 221 1 48 1 194 1 171 1 340 1 144 1 365 1 224 1 6 1 343 1 368 1 32 1 33 1 311 1 372 3 78 1 347 3 373 1 13 1 61 1 355 1 
0 1 255 3 217 1 221 1 48 1 194 1 171 1 340 1 144 1 365 1 224 1 6 1 343 1 368 1 32 1 33 1 311 1 8 1 372 3 78 1 347 3 373 1 252 1 13 1 355 1 61 2 
0 1 282 1 48 1 194 5 144 1 340 1 6 1 343 1 199 2 8 4 104 1 347 5 250 2 252 4 295 1 13 3 355 1 61 7 62 1 255 5 164 1 217 1 221 1 171 1 365 4 224 1 366 1 269 1 368 1 75 1 309 2 32 1 30 1 33 1 125 1 311 1 372 6 78 5 127 1 230 1 373 1 277 2 377 1 378 2 
0 1 48 1 194 1 242 1 144 1 340 1 6 1 343 1 199 2 246 2 8 2 347 4 250 2 252 2 295 1 13 2 61 4 62 1 255 4 164 1 217 1 221 1 171 1 365 2 224 1 366 1 75 1 368 1 309 2 32 1 30 1 33 1 311 1 372 4 78 2 127 1 373 1 277 2 377 1 378 2 
0 1 255 4 282 1 164 1 217 1 194 1 221 1 48 1 171 1 365 2 340 1 144 1 224 1 366 1 6 1 343 1 75 1 368 1 309 2 32 1 30 1 199 2 125 1 33 1 311 1 8 2 372 4 78 1 127 1 347 4 230 1 250 2 373 1 252 2 277 2 295 1 13 2 61 4 377 1 378 2 62 1 
0 1 255 4 282 1 164 1 217 1 194 1 221 1 48 1 171 1 365 2 340 1 144 1 224 1 366 1 6 1 343 1 75 1 368 1 309 2 32 1 30 1 199 2 125 1 33 1 311 1 8 2 372 4 78 1 127 1 347 4 230 1 250 2 373 1 252 2 277 2 295 1 13 2 61 4 377 1 378 2 62 1 
0 1 255 4 164 1 217 1 118 2 194 1 221 1 48 1 267 1 171 1 365 2 268 1 340 1 144 1 224 1 366 1 6 1 343 1 368 1 32 1 30 1 125 1 33 1 246 2 311 1 8 2 372 4 78 1 127 1 347 4 276 1 250 2 373 1 252 2 183 2 277 2 295 1 13 2 61 4 377 1 62 1 
0 1 255 4 282 1 164 1 217 1 194 1 221 1 48 1 171 1 340 1 144 1 365 3 224 1 366 1 6 1 343 1 75 1 368 1 309 2 30 1 32 1 199 2 125 1 33 1 311 1 8 3 372 5 78 1 104 1 127 1 347 4 230 1 250 2 373 1 252 3 277 2 295 1 13 2 61 5 377 1 378 2 62 1 
0 1 255 4 282 1 164 1 217 1 194 1 221 1 48 1 171 1 340 1 144 1 365 3 224 1 366 1 6 1 343 1 75 1 368 1 309 2 30 1 32 1 199 2 125 1 33 1 311 1 8 3 372 5 78 1 104 1 127 1 347 4 230 1 250 2 373 1 252 3 277 2 295 1 13 2 61 5 377 1 378 2 62 1 
0 1 255 4 164 1 217 1 118 2 194 1 48 1 221 1 242 1 171 1 365 2 340 1 144 1 268 1 224 1 366 1 6 1 343 1 368 1 30 1 32 1 33 1 246 2 311 1 8 2 372 4 78 1 127 1 347 4 250 2 373 1 252 2 183 2 277 2 295 1 13 2 61 4 377 1 62 1 
327 1 257 1 189 1 86 2 46 1 161 1 45 1 303 2 358 1 285 1 217 1 304 1 47 1 192 2 221 1 195 7 169 1 172 1 290 1 343 1 96 4 29 1 31 8 52 2 198 2 179 1 57 1 11 1 348 2 228 2 247 1 182 2 294 2 321 3 254 1 234 8 235 2 184 2 237 2 
40 1 256 1 86 1 45 1 139 1 217 1 362 1 192 3 120 1 221 1 169 2 244 1 123 1 290 1 196 1 343 1 96 2 97 1 52 1 198 1 76 1 292 1 317 1 11 1 235 1 113 1 184 1 133 1 237 1 
210 1 40 1 256 1 86 1 2 1 332 1 334 1 362 2 192 6 169 3 120 1 4 1 143 2 290 3 196 2 96 2 52 1 198 1 76 1 202 1 247 1 296 1 235 1 113 1 184 1 237 1 
278 1 40 4 256 13 21 1 86 2 24 2 139 1 362 1 363 4 192 17 119 3 169 7 120 13 143 1 290 10 123 3 196 2 96 4 29 1 52 1 198 2 76 3 179 1 292 3 226 1 317 1 231 1 206 1 235 2 113 1 184 2 132 1 237 2 
39 1 40 1 281 1 86 1 45 1 303 1 360 1 217 1 3 1 168 1 192 2 195 1 338 1 221 2 169 1 222 1 143 1 290 1 343 2 96 2 29 1 31 1 52 1 198 1 179 1 317 1 348 1 11 1 228 1 182 1 248 1 321 1 234 1 254 1 235 1 184 1 237 1 83 1 
39 1 40 7 86 3 45 1 2 1 332 1 139 2 3 2 192 20 195 3 4 1 143 2 290 10 343 3 196 8 96 6 51 2 52 3 198 3 292 2 202 1 56 2 57 1 11 1 348 2 152 1 296 1 254 1 113 3 210 1 64 1 256 7 302 2 303 2 70 1 163 2 360 2 217 1 362 4 168 2 169 10 221 3 170 2 120 7 222 2 123 2 29 1 31 3 76 3 179 1 317 1 228 2 182 1 321 2 234 3 235 3 184 3 237 3 132 4 
196 1 96 2 52 1 40 1 198 1 76 1 256 1 86 1 247 1 192 2 120 1 337 1 235 1 184 1 132 1 237 1 123 1 290 2 
196 1 185 1 96 2 52 1 40 1 198 1 256 1 86 1 247 1 139 1 362 1 192 2 120 1 169 2 235 1 113 1 184 1 237 1 
196 2 96 2 52 1 40 2 198 1 76 1 256 2 292 1 86 1 247 1 139 1 362 1 192 4 169 2 120 2 113 1 235 1 184 1 132 1 237 1 123 1 290 2 
196 1 96 2 52 1 40 1 198 1 76 1 256 1 86 1 304 1 192 2 120 1 337 1 235 1 184 1 132 1 237 1 123 1 290 2 
196 1 185 1 96 2 52 1 40 1 198 1 256 1 86 1 139 1 362 1 304 1 192 2 120 1 169 2 235 1 113 1 184 1 237 1 
196 2 96 2 52 1 40 2 198 1 76 1 256 2 292 1 86 1 139 1 362 1 304 1 192 4 169 2 120 2 113 1 235 1 184 1 132 1 237 1 123 1 290 2 
196 2 96 2 52 1 40 2 198 1 76 1 256 2 292 1 86 1 139 1 362 1 192 4 169 2 120 2 113 1 235 1 184 1 132 1 237 1 123 1 290 2 
86 1 303 1 302 1 360 1 3 1 168 1 192 2 195 1 221 1 169 1 222 1 143 1 290 1 343 1 96 2 29 1 31 1 52 1 198 1 179 1 348 1 228 1 182 1 321 1 234 1 235 1 184 1 237 1 
239 1 86 1 303 1 360 1 168 1 192 2 195 1 221 1 169 1 143 1 290 1 343 1 96 2 29 1 31 1 52 1 198 1 179 1 272 1 348 1 228 1 182 1 321 1 324 1 234 1 235 1 184 1 237 1 
196 2 96 2 52 1 40 2 198 1 76 1 256 2 292 1 86 1 317 1 139 1 362 1 192 4 169 2 120 2 113 1 235 1 184 1 132 1 237 1 123 1 290 2 
327 1 40 2 256 2 86 1 302 1 303 1 139 1 360 1 3 1 362 1 168 1 192 4 169 2 120 2 195 1 221 1 222 1 290 2 123 1 196 2 343 1 96 2 31 1 52 1 76 1 198 1 292 1 56 1 348 1 228 1 321 1 234 1 113 1 235 1 184 1 132 1 237 1 
40 1 256 1 86 1 45 1 139 1 217 1 192 3 169 1 221 1 120 1 244 1 123 1 290 2 196 1 343 1 96 2 52 1 198 1 76 1 292 1 317 1 11 1 131 1 113 1 235 1 184 1 132 1 133 1 237 1 
17 2 278 1 86 2 212 1 24 1 139 3 219 1 362 3 363 2 265 1 192 19 119 1 169 10 307 1 290 9 123 3 196 6 96 4 177 2 198 2 76 3 292 3 9 1 293 1 205 1 251 1 113 3 184 2 237 2 132 3 
17 4 278 2 86 3 212 1 214 1 241 1 139 2 165 1 362 2 265 1 363 2 192 26 119 2 169 12 307 1 290 14 123 3 196 4 96 6 177 1 198 3 76 3 292 3 201 1 9 2 293 1 151 1 352 1 251 2 375 2 113 2 184 3 132 2 237 3 
210 1 17 4 211 1 278 3 86 3 212 1 24 2 2 1 214 1 332 1 241 1 139 4 165 1 362 4 363 5 265 1 192 44 119 3 169 22 4 1 307 1 290 22 123 5 196 8 96 6 177 1 198 3 76 6 292 5 202 1 201 1 9 1 293 1 205 1 151 1 352 1 251 2 296 1 375 1 113 5 184 3 237 3 132 4 
210 1 17 4 211 1 278 3 86 4 212 1 24 2 2 1 214 1 332 1 241 1 139 4 165 1 362 5 363 5 265 1 192 43 119 3 169 21 4 1 307 1 290 22 123 5 196 8 96 8 177 1 198 4 76 6 292 5 202 1 201 1 9 1 293 1 205 1 151 1 352 1 251 2 296 1 375 2 113 5 184 4 237 4 132 3 
210 1 17 4 278 2 86 2 212 1 24 2 2 1 214 1 332 1 241 1 139 7 165 1 362 7 363 4 265 1 192 52 119 4 169 25 4 1 307 1 290 27 123 7 196 14 96 4 177 1 198 2 76 8 292 7 202 1 201 1 9 1 226 2 293 1 151 1 352 1 251 1 296 1 375 1 113 8 184 2 237 2 132 7 
106 1 25 1 245 1 353 1 181 1 288 1 
89 1 
25 1 245 1 353 1 325 1 181 1 
175 1 245 1 255 1 147 1 84 2 273 1 78 1 347 1 181 1 106 1 25 1 353 1 209 1 73 1 
175 1 245 1 255 1 147 1 84 2 273 1 78 1 347 1 181 1 106 1 25 1 353 1 209 1 73 1 
175 1 245 1 255 1 147 1 84 2 273 1 78 1 347 1 181 1 106 1 25 1 353 1 209 1 73 1 
80 1 
80 1 
178 1 
178 1 
186 1 91 1 
175 1 197 1 146 1 245 1 255 1 147 1 116 1 315 1 84 1 181 1 347 1 319 1 25 1 89 1 353 1 236 1 
80 1 
178 1 
257 1 86 1 46 1 303 1 217 2 141 1 192 2 221 2 169 1 195 2 339 1 342 1 290 1 343 2 96 2 29 1 31 2 52 1 198 1 179 1 149 1 317 1 348 1 228 1 294 2 321 1 234 2 235 1 376 1 184 1 237 1 
31 1 348 1 228 1 303 1 182 1 320 1 321 1 166 1 47 1 195 1 305 1 234 1 172 1 289 1 
329 2 7 1 31 1 180 1 117 1 57 1 348 1 228 1 333 1 335 1 320 1 87 1 79 1 266 1 154 1 195 1 305 1 234 1 
327 1 329 2 7 1 31 2 180 1 117 1 57 1 348 1 228 1 333 1 335 1 320 1 87 1 79 1 266 1 154 1 195 2 305 1 234 2 
298 1 329 2 7 1 31 1 180 1 117 1 57 1 348 1 228 1 333 1 335 1 320 1 79 1 266 1 154 1 195 1 234 1 
19 1 
30 1 78 1 164 1 249 1 194 1 295 1 253 1 377 1 366 1 62 1 
76 2 300 5 246 10 292 2 316 5 78 5 128 1 163 1 139 2 113 2 377 5 366 5 225 2 123 2 378 5 
255 1 194 1 78 1 13 1 61 1 347 1 
16 1 255 3 187 1 43 1 69 2 303 1 164 2 47 1 195 4 172 1 306 2 28 1 366 2 30 2 31 4 345 1 346 2 347 3 348 1 228 1 182 2 207 1 321 1 295 2 234 4 13 2 61 4 377 2 62 1 
334 1 249 1 194 1 253 1 78 1 377 1 366 1 
255 1 164 1 194 1 366 1 75 1 309 1 30 1 199 1 246 1 78 2 347 1 295 1 13 1 61 1 377 1 378 1 62 1 
327 1 279 1 139 2 194 2 195 3 90 2 92 2 144 2 50 1 246 12 292 2 346 1 347 5 348 3 249 1 59 1 253 1 295 4 13 3 61 5 113 2 62 4 115 2 255 5 158 3 300 6 258 2 69 1 303 3 163 2 164 4 220 2 168 3 167 1 26 2 306 2 28 1 366 9 225 2 123 2 270 2 30 4 31 3 76 2 316 6 78 8 128 2 228 4 182 1 36 2 321 10 234 3 377 8 378 6 
278 1 255 1 300 5 214 1 241 1 164 2 139 2 165 1 363 1 119 1 194 2 306 1 366 8 225 2 123 2 30 2 76 2 246 6 292 2 201 1 316 5 78 5 346 1 128 1 347 1 352 1 109 1 111 1 295 2 13 1 61 1 113 2 377 5 62 2 378 3 
330 1 255 1 188 1 45 1 2 1 332 1 164 1 217 1 221 1 171 1 366 2 5 1 225 2 244 1 343 1 30 1 76 2 202 1 128 1 347 1 105 1 11 1 230 1 12 1 295 1 113 1 377 2 62 1 
86 1 45 2 302 1 303 1 360 1 217 2 3 1 168 1 192 1 169 1 195 1 221 3 222 1 143 1 244 2 343 3 96 2 29 1 31 1 52 1 198 1 148 1 11 2 105 1 348 1 228 1 182 1 321 1 234 1 235 1 184 1 237 1 
30 1 300 2 246 4 316 2 78 4 346 1 164 1 194 2 4 1 295 1 306 1 377 2 366 1 378 2 62 1 
186 1 353 1 49 1 58 1 181 1 
353 1 93 1 181 1 
353 1 93 1 181 1 
353 1 93 1 181 1 
353 1 150 1 181 1 
353 1 150 1 181 1 
353 1 150 1 181 1 
353 1 181 1 
336 1 136 1 
196 5 96 2 198 1 76 2 188 1 202 1 86 1 2 2 332 2 362 3 192 10 169 5 113 2 184 1 237 1 132 2 307 1 290 5 
196 1 96 2 198 1 76 1 86 1 192 2 184 1 237 1 132 1 307 1 123 1 290 2 
196 2 96 2 198 1 76 1 292 1 86 1 139 1 362 1 192 4 169 2 113 1 184 1 237 1 132 1 307 1 123 1 290 2 
196 2 96 6 198 3 86 3 204 1 2 1 205 1 332 1 362 1 192 3 169 2 375 1 184 3 237 3 132 1 307 1 290 1 
210 1 278 1 86 5 24 1 2 3 332 3 139 3 363 4 362 7 192 34 119 3 169 18 4 1 364 1 122 1 307 1 290 16 123 3 196 12 96 10 369 1 198 5 76 5 292 3 202 2 204 1 205 1 296 1 375 2 155 1 113 5 184 5 237 5 132 5 
196 3 210 1 96 4 76 1 198 2 202 1 86 2 2 1 332 1 362 2 192 8 169 4 4 1 375 1 296 1 113 1 184 2 132 1 237 2 290 4 
210 1 196 2 76 1 202 1 2 1 332 1 334 1 362 2 192 6 169 3 4 1 296 1 113 1 290 3 
196 2 96 2 198 1 76 1 292 1 86 1 139 1 362 1 192 4 169 2 364 1 113 1 184 1 237 1 132 1 123 1 290 2 
196 2 278 1 76 1 292 1 24 1 139 1 362 1 363 2 192 7 119 1 169 4 113 1 132 1 290 3 123 1 
210 1 86 2 24 1 2 2 332 2 139 2 363 2 362 5 119 2 192 23 169 12 4 1 123 2 290 11 196 9 96 4 76 3 198 2 292 2 202 1 226 1 204 1 206 1 296 1 375 2 113 3 184 2 132 4 237 2 
363 1 192 1 169 1 
192 1 119 1 290 1 
196 3 96 2 198 1 76 1 292 1 86 1 163 1 139 1 362 2 192 6 169 3 364 1 113 1 184 1 237 1 132 1 123 1 290 3 
278 1 86 1 214 1 241 1 139 2 165 1 363 1 362 1 119 1 192 12 169 6 307 1 290 6 123 2 196 2 96 2 198 1 76 2 292 2 201 1 352 1 113 2 184 1 132 1 237 1 
196 2 76 1 202 1 2 1 332 1 362 1 192 6 169 3 113 1 132 1 290 3 
196 2 210 1 96 2 198 1 86 1 2 1 204 1 332 1 362 1 192 3 169 2 375 1 296 1 184 1 132 1 237 1 290 1 
210 1 278 1 86 1 24 1 2 1 332 1 241 1 362 2 363 2 119 1 192 11 169 5 4 1 307 1 290 6 123 1 196 2 96 2 198 1 76 2 292 1 202 1 296 1 113 1 184 1 237 1 
210 1 278 1 86 2 24 1 2 1 332 1 241 1 362 2 363 2 192 11 119 1 169 5 4 1 364 1 307 1 290 6 123 1 196 3 96 4 198 2 76 2 292 1 202 1 296 1 113 1 184 2 237 2 132 1 
210 1 278 1 86 3 2 1 214 1 332 1 241 1 139 2 165 1 363 1 362 3 119 1 192 19 169 10 4 1 364 1 307 1 290 9 123 2 196 4 96 6 198 3 76 3 292 2 202 1 201 1 352 1 296 1 375 1 113 3 184 3 132 1 237 3 
210 1 278 1 86 3 2 1 214 1 332 1 241 1 139 1 165 1 363 1 362 3 119 1 192 17 169 7 4 1 364 1 307 1 290 10 123 2 196 5 96 6 198 3 76 3 292 2 202 1 201 1 352 1 296 1 375 1 113 2 184 3 132 2 237 3 
210 1 278 1 86 1 24 1 2 1 332 1 241 1 362 2 363 2 119 1 192 11 169 5 4 1 307 1 290 6 123 1 196 2 96 2 198 1 76 2 292 1 202 1 296 1 113 1 184 1 237 1 
278 1 86 1 214 1 241 1 139 2 165 1 363 1 362 1 119 1 192 12 169 6 307 1 290 6 123 2 196 2 96 2 198 1 76 2 292 2 201 1 352 1 113 2 184 1 132 1 237 1 
210 1 278 1 86 4 2 1 214 1 332 1 241 1 139 1 165 1 363 1 362 3 192 18 119 1 169 8 4 1 364 1 307 1 290 10 123 2 196 5 96 8 198 4 76 3 292 2 202 1 201 1 352 1 296 1 375 2 113 2 184 4 132 2 237 4 
278 1 86 4 214 1 241 1 139 2 165 1 363 1 362 3 192 16 119 1 169 7 307 1 290 9 123 3 196 6 96 8 198 4 76 3 292 3 201 1 205 1 352 1 375 2 113 2 184 4 132 3 237 4 
210 2 196 6 76 1 202 1 2 3 332 3 362 3 192 7 169 4 296 1 113 1 132 3 290 3 
210 1 278 1 86 4 2 1 214 1 332 1 241 1 139 1 165 1 363 1 362 3 192 18 119 1 169 8 4 1 307 1 290 10 123 2 196 4 96 8 198 4 76 3 292 2 202 1 201 1 205 1 352 1 296 1 375 2 113 2 184 4 132 1 237 4 
343 1 217 1 32 1 221 1 354 1 143 1 23 1 
95 1 343 1 32 1 200 1 259 1 23 1 162 1 217 1 354 1 221 1 60 1 143 1 
327 1 63 1 31 4 203 1 348 1 228 1 303 1 182 1 321 1 47 1 195 4 234 4 172 1 
308 1 31 2 261 1 348 1 69 1 303 1 228 2 152 1 321 1 168 1 195 2 234 2 37 1 114 1 
333 1 182 1 335 1 329 1 7 1 31 1 195 1 234 1 348 1 228 1 
327 1 31 2 57 1 46 1 348 1 303 1 228 1 321 1 195 2 234 2 376 1 
327 1 31 5 203 1 189 1 46 1 348 2 69 1 303 2 228 2 182 1 358 1 321 3 47 1 195 4 172 1 234 5 
327 1 31 5 203 1 46 1 348 2 69 1 350 1 303 2 228 2 182 1 358 1 321 3 47 1 195 4 172 1 234 5 
182 1 334 1 321 1 31 1 47 1 195 1 172 1 234 1 348 1 228 1 303 1 
343 2 31 1 45 1 11 1 348 1 303 1 228 1 182 1 360 1 217 1 321 1 3 1 168 1 221 2 195 1 254 1 234 1 143 1 
343 2 368 1 31 1 45 1 11 2 348 1 303 2 228 1 69 1 36 1 360 1 217 2 321 3 3 1 168 2 373 1 221 2 195 1 92 1 171 1 254 1 234 1 143 1 
343 2 63 1 368 1 31 2 45 1 11 2 348 1 303 2 228 1 69 1 36 1 360 1 217 2 321 3 168 2 324 1 373 1 221 2 195 2 92 1 171 1 254 1 234 2 143 1 
63 1 31 3 255 2 158 1 55 1 78 1 347 2 348 1 303 1 228 1 69 1 182 1 36 1 321 4 168 1 194 1 195 3 90 1 92 1 234 3 144 1 61 1 243 1 
63 1 31 3 255 2 158 1 78 1 347 2 348 1 303 1 228 1 69 1 182 1 36 1 321 4 168 1 194 1 195 3 26 1 90 1 92 1 234 3 144 1 61 1 
285 1 31 1 195 1 234 1 348 1 228 1 
327 1 308 1 31 7 279 1 189 1 57 1 46 1 161 1 261 1 348 2 303 2 228 3 294 1 358 1 182 2 285 1 321 3 168 1 195 6 234 7 38 1 
210 1 327 1 40 1 256 1 86 2 45 1 2 1 303 1 302 1 332 1 360 1 217 1 3 1 362 2 168 1 192 6 120 1 169 3 221 2 195 1 170 1 4 1 222 1 143 2 290 3 342 1 196 2 343 2 96 4 52 2 31 1 76 1 198 2 202 1 56 1 317 1 348 1 11 1 228 1 321 1 296 1 254 1 234 1 113 1 235 2 184 2 237 2 
115 1 255 3 158 1 258 1 164 2 220 1 194 1 195 1 26 1 90 1 144 1 366 1 28 1 30 2 31 1 78 1 347 3 182 1 319 1 249 1 321 2 253 1 295 2 234 1 13 1 61 2 377 1 62 2 
327 1 31 2 279 1 348 1 303 1 228 2 285 1 59 1 321 2 168 1 90 1 195 2 234 2 
343 2 31 1 45 1 11 1 348 1 303 1 228 1 182 1 360 1 217 1 321 1 168 1 324 1 221 2 195 1 254 1 234 1 143 1 
308 1 31 1 279 1 261 1 348 1 69 1 303 1 228 2 321 1 168 1 195 1 234 1 38 1 
343 1 240 1 217 1 141 1 149 1 312 1 221 1 339 1 137 1 
351 1 135 1 137 1 
240 1 312 1 143 1 10 1 137 1 
368 1 240 2 255 2 135 1 312 2 78 1 137 1 10 2 347 2 319 1 351 1 373 1 194 1 171 1 71 1 143 1 144 1 224 1 156 1 
238 1 100 1 101 1 67 1 174 1 367 1 15 1 284 1 
238 2 100 3 331 2 67 2 284 1 349 1 359 1 232 1 140 1 112 1 287 1 174 1 15 4 367 4 
238 1 229 1 100 1 361 1 101 1 142 1 331 1 67 1 174 1 367 2 15 2 284 1 
238 1 100 1 101 1 67 1 284 1 262 1 359 2 232 2 140 1 174 1 15 3 367 3 
74 1 100 2 88 2 66 1 
101 1 14 1 174 1 367 1 15 1 284 1 
238 1 100 1 101 1 331 1 67 1 72 1 174 1 367 2 15 2 284 1 
283 1 
238 1 100 1 101 1 67 1 174 1 367 1 15 1 284 1 
238 1 334 1 100 1 67 1 
238 1 100 1 67 1 174 1 367 1 15 1 284 1 
193 1 68 1 367 1 
238 1 100 1 101 1 67 1 284 1 359 2 232 1 140 1 174 1 326 1 15 3 367 3 
238 1 100 1 331 1 67 1 174 1 291 1 367 2 15 2 284 1 
329 1 7 1 100 1 266 1 101 1 287 1 174 1 82 1 367 1 15 1 284 1 
100 1 101 1 67 1 174 1 367 1 15 1 284 1 
238 1 101 1 67 2 174 1 367 1 15 1 284 1 
100 1 99 1 101 1 370 1 67 1 284 2 223 1 174 2 15 2 367 2 
238 1 299 1 100 2 101 1 331 2 67 1 284 1 349 1 287 1 72 1 174 1 15 3 367 3 
238 1 329 2 100 1 98 1 7 1 101 1 331 1 67 1 284 1 333 1 154 1 266 1 174 1 15 2 367 2 
238 1 100 2 153 1 101 1 331 2 287 1 67 1 174 2 349 1 291 1 367 4 15 4 284 2 
359 1 238 1 100 1 101 1 331 1 72 1 67 1 174 1 367 3 15 3 284 1 
100 1 112 1 287 1 349 1 
100 1 67 1 

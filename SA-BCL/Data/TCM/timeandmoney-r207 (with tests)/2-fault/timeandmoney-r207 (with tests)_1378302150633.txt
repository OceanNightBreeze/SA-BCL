#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 166 291 147 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException (129,359) 92 144 5 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 166 254 168 324 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 166 60 168 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 166 254 168 324 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 166 254 168 324 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 166 254 168 324 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V ERROR java.lang.NullPointerException 166 
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 144 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 166 291 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 166 60 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z | STATEMENT | 4096 | stmt -> ;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7790 | return null
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 1 206 1 116 1 271 9 28 1 275 1 332 1 333 1 59 4 244 1 315 2 356 2 335 1 172 1 221 2 80 3 38 2 83 2 110 5 259 6 180 2 264 1 20 1 159 1 202 2 287 1 267 9 22 1 
347 1 206 1 116 1 271 9 28 1 275 1 332 1 333 1 59 4 244 1 315 2 356 2 335 1 172 1 221 2 80 3 83 2 38 2 110 5 259 6 180 2 264 1 20 1 159 1 202 2 287 1 267 9 22 1 
347 1 206 1 116 1 271 10 28 1 275 1 332 1 333 1 59 5 244 1 315 2 356 2 335 1 172 1 221 2 80 4 83 2 38 2 110 6 259 7 180 2 264 1 20 1 159 1 202 2 287 1 267 10 22 1 
347 1 206 1 116 1 271 7 28 1 275 1 333 1 59 3 244 1 315 2 356 2 335 1 172 1 221 1 80 2 83 2 38 2 110 4 259 4 180 2 264 1 20 1 159 1 202 2 287 1 267 7 22 1 
356 1 315 1 335 1 221 2 347 1 80 1 116 1 271 4 38 1 83 1 110 3 259 3 332 1 333 1 59 2 244 1 202 1 267 4 
315 1 356 1 335 1 36 1 271 2 38 1 110 1 275 1 163 1 180 1 333 1 244 1 202 1 267 2 287 1 126 1 
315 2 335 1 80 1 271 3 28 1 38 2 110 2 259 1 180 1 333 1 59 1 244 1 267 3 
206 1 347 1 116 1 271 9 28 1 187 1 332 1 333 1 59 4 244 1 315 2 356 1 335 1 221 2 80 3 320 1 38 2 83 1 110 5 259 7 180 1 159 1 202 1 267 9 
206 1 347 1 116 1 271 9 28 1 187 1 332 1 333 1 59 4 244 1 315 2 356 1 335 1 221 2 80 3 320 1 38 2 83 1 110 5 259 7 180 1 159 1 202 1 267 9 
121 1 266 1 197 1 
84 1 132 2 197 1 
54 2 331 1 78 2 90 2 14 1 177 2 69 2 192 2 
89 1 90 2 140 1 69 3 350 1 54 3 331 1 55 1 7 1 32 1 189 2 239 1 8 2 165 1 296 2 279 2 9 2 215 1 10 1 354 1 192 2 194 1 357 1 78 2 150 1 246 1 107 1 14 1 363 1 177 2 282 1 252 1 178 1 261 1 321 1 42 1 306 1 
54 1 78 1 90 1 212 1 143 1 14 1 177 1 255 1 69 1 192 1 
316 1 48 1 235 1 273 1 177 1 69 1 96 1 197 1 54 1 121 1 366 1 86 1 143 1 339 1 
316 1 78 1 90 1 235 2 273 1 177 1 69 1 96 1 197 1 54 1 121 1 366 2 86 1 143 1 192 1 
238 1 366 1 191 1 250 1 235 1 
238 1 121 1 284 1 366 2 191 1 235 2 243 1 197 1 
366 1 191 1 235 1 
78 1 90 1 235 1 14 1 175 1 177 1 255 1 69 1 54 1 238 1 366 1 212 1 143 1 192 1 
197 1 
238 1 121 1 366 2 191 1 235 2 243 1 70 1 197 1 
114 1 235 5 208 2 16 1 196 1 82 2 197 1 295 1 238 2 121 1 366 5 43 1 191 2 74 2 201 1 61 1 243 1 186 1 193 1 
331 1 266 1 
78 1 90 1 1 1 177 2 69 2 54 2 331 2 192 1 134 1 
270 1 359 1 92 1 
89 1 246 1 107 1 207 1 252 1 140 1 69 1 350 1 54 1 331 1 261 1 239 1 165 1 296 1 279 1 9 1 
89 1 78 1 90 1 246 1 359 1 107 1 252 1 177 1 140 1 69 2 350 1 276 1 54 2 261 1 239 1 165 1 296 1 279 1 45 1 9 1 
48 1 78 4 90 4 1 1 29 1 177 5 69 5 54 5 276 1 258 1 331 1 169 1 45 2 192 1 
54 2 78 2 90 2 212 1 143 1 177 2 69 2 283 1 
54 3 331 1 78 3 90 3 177 3 45 1 69 3 192 1 
54 1 78 1 90 1 212 1 143 1 177 1 69 1 
54 1 78 1 90 1 143 1 1 1 177 1 69 1 192 1 134 1 
89 1 90 3 1 1 235 1 273 1 140 1 69 4 96 1 350 1 54 4 276 1 331 1 55 1 7 1 32 1 189 1 239 1 8 2 165 1 143 1 296 1 279 1 9 1 215 1 10 1 192 2 316 1 357 1 78 3 246 1 150 1 107 1 14 1 363 1 252 1 177 3 179 1 261 1 366 1 42 1 40 1 86 1 45 1 306 1 
54 2 331 1 48 1 78 1 90 1 29 1 177 2 45 1 69 2 
316 1 78 3 90 3 1 1 235 1 273 1 177 3 69 3 96 1 197 1 276 1 54 3 56 1 366 1 86 1 40 1 143 1 45 2 192 1 
78 2 90 2 270 1 359 1 1 1 177 2 69 2 54 2 45 1 192 1 
89 1 246 1 107 1 252 1 140 1 69 1 350 1 54 1 331 1 261 1 239 1 165 1 296 1 279 1 9 1 
89 1 107 1 252 1 69 1 141 1 350 1 54 1 331 1 261 1 239 1 165 1 296 1 278 1 279 1 9 1 
92 2 270 2 7 1 55 2 189 4 164 1 8 2 145 1 299 1 215 1 10 1 194 2 357 1 359 2 129 1 251 1 363 1 301 1 253 1 42 1 232 1 203 1 305 1 204 1 
54 1 78 1 90 1 143 1 273 1 177 1 69 1 283 1 
248 1 12 1 
248 1 12 1 
98 1 330 1 
98 1 330 1 
98 1 330 1 
248 1 12 1 231 1 
248 1 12 1 231 1 
248 1 12 1 157 1 
102 1 98 1 248 2 262 1 12 2 330 1 
248 1 12 1 231 1 
63 1 248 1 12 1 
63 1 248 1 12 1 
63 1 248 1 12 1 
317 1 78 2 35 1 269 1 248 1 90 2 0 1 12 1 361 1 105 1 235 1 176 1 177 2 119 1 69 2 54 2 331 1 210 1 366 1 322 1 157 1 352 1 76 1 325 1 
103 1 269 2 248 2 35 1 0 3 12 2 235 2 174 1 119 2 197 1 53 1 198 2 262 1 366 2 85 1 338 1 352 2 46 1 325 2 
356 1 202 1 83 1 
356 1 202 1 163 1 
245 1 356 3 292 1 49 1 83 2 163 1 
245 1 356 2 327 1 49 1 83 1 163 1 
245 1 356 2 83 1 49 2 163 1 
135 2 114 2 235 5 208 1 295 1 210 1 238 4 121 1 211 1 191 1 297 2 74 1 314 1 243 1 76 1 317 1 219 1 108 1 301 1 253 1 82 1 197 2 84 1 303 2 366 5 43 3 132 3 183 1 370 1 344 1 203 1 204 1 
114 6 293 1 235 9 208 2 295 1 238 7 121 1 191 6 297 6 74 2 314 2 146 1 243 1 124 1 76 4 219 3 336 5 250 5 16 1 301 3 253 3 82 2 197 5 84 3 303 6 366 9 263 1 43 8 131 1 132 9 183 2 370 1 268 1 203 3 204 3 
135 1 114 2 235 3 208 1 238 2 121 1 211 1 74 1 314 1 297 2 76 1 219 1 108 1 16 1 301 1 253 1 82 1 197 3 84 2 303 2 366 3 43 3 132 4 183 1 203 1 204 1 
135 2 114 4 235 4 208 1 238 3 121 1 211 1 297 4 74 1 314 1 146 1 124 1 76 2 219 2 108 1 16 1 301 2 253 2 82 1 197 4 84 3 303 4 366 4 43 5 132 7 183 1 268 1 203 2 204 2 
107 1 229 1 266 1 
142 1 107 1 
227 1 
239 1 165 1 107 1 
351 1 107 1 
239 1 107 1 
239 1 290 1 165 1 107 3 229 2 364 1 
308 1 194 4 128 1 234 1 301 1 95 1 55 3 365 2 189 7 164 2 313 1 232 3 203 1 160 1 289 1 280 1 326 1 
308 1 194 4 128 1 234 1 301 1 95 1 55 3 365 2 189 7 164 2 313 1 232 3 203 1 160 1 289 1 280 1 326 1 
308 1 194 4 128 1 249 1 234 1 301 1 95 1 55 3 365 2 189 7 164 2 313 1 232 3 203 1 160 1 289 1 280 1 326 1 
308 2 55 1 194 2 189 3 365 1 291 1 166 1 234 1 369 1 147 1 101 1 
308 1 234 1 55 4 189 9 164 3 8 4 313 1 10 2 280 1 357 2 194 5 128 1 218 1 362 1 363 2 301 1 225 1 365 2 42 2 232 4 203 1 160 1 326 1 289 1 
292 1 27 1 117 1 271 2 294 1 4 1 163 1 333 1 296 1 244 1 279 1 9 1 315 1 356 2 247 1 335 1 195 1 130 1 223 1 252 1 83 1 38 1 66 1 110 1 259 1 180 1 261 1 41 1 202 1 267 2 
292 1 27 1 117 1 271 3 294 1 4 1 163 1 296 1 244 1 279 1 9 1 315 1 356 2 335 1 195 1 130 1 223 1 252 1 83 1 38 1 256 1 66 1 110 1 259 2 180 1 261 1 88 1 230 1 202 1 267 3 
292 1 27 1 117 1 271 2 294 1 4 1 163 1 296 1 244 1 279 1 9 1 356 2 335 1 195 1 252 1 83 1 66 1 110 1 259 2 180 1 261 1 88 1 230 1 202 1 267 2 
315 1 89 1 233 1 107 1 13 1 271 1 117 2 27 2 252 1 256 1 38 1 66 2 180 2 261 1 239 1 58 1 296 1 371 1 279 1 267 1 9 1 355 1 148 1 
292 1 27 1 117 1 271 1 294 1 4 1 163 1 333 1 296 1 279 1 9 1 315 1 356 2 195 1 130 1 223 1 252 1 83 1 38 1 66 1 180 1 261 1 41 1 230 1 202 1 267 1 
342 1 
89 2 48 1 136 1 328 4 235 5 138 1 3 1 93 2 96 1 295 1 54 1 239 1 191 6 296 2 143 1 243 3 9 2 13 1 107 1 252 1 156 2 197 2 260 1 261 1 339 1 307 2 67 1 346 2 114 2 208 1 30 2 273 1 274 1 69 1 121 1 74 1 279 2 353 2 125 1 355 1 316 1 217 1 360 2 318 1 222 1 177 1 82 1 84 2 366 5 285 1 43 2 86 1 132 2 183 1 184 1 
48 1 136 1 328 2 235 3 3 1 273 1 93 1 274 1 69 1 70 1 96 1 54 1 143 1 191 2 243 1 316 1 217 1 177 1 366 3 86 1 339 1 184 1 
48 1 136 1 328 3 235 3 3 1 273 1 30 1 274 1 69 1 70 1 96 1 54 1 121 1 191 1 143 1 243 1 316 1 217 1 177 1 197 1 366 3 86 1 339 1 184 1 
48 1 136 1 328 3 235 3 3 1 273 1 30 1 93 1 274 1 70 1 69 1 96 1 54 1 121 1 143 1 191 2 243 1 353 1 316 1 217 1 177 1 197 1 366 3 86 1 339 1 184 1 
346 2 48 1 114 1 136 1 328 6 348 1 235 5 208 1 3 1 30 4 273 1 236 1 93 4 274 1 70 1 69 1 96 1 295 1 54 1 121 5 191 7 143 1 74 1 243 3 353 4 316 1 217 1 360 2 177 1 82 1 156 2 197 5 84 2 260 1 366 5 285 1 200 1 43 1 199 1 86 1 339 1 184 1 340 1 307 2 
48 1 328 4 136 1 235 4 3 1 93 2 96 1 54 1 295 1 143 1 191 4 243 2 156 2 197 2 260 1 339 1 307 2 346 2 114 1 208 1 273 1 30 2 274 1 69 1 121 1 74 1 353 2 316 1 217 1 360 2 318 1 177 1 82 1 84 2 366 4 285 1 86 1 43 1 132 2 184 1 
346 2 48 1 114 1 136 1 328 4 235 4 3 1 208 1 30 2 273 1 93 2 236 1 274 1 69 1 96 1 54 1 295 1 121 1 191 4 143 1 74 1 243 2 353 2 316 1 217 1 360 2 177 1 82 1 156 2 197 1 84 2 260 1 366 4 285 1 200 1 43 1 86 1 199 1 339 1 184 1 307 2 
346 2 48 1 114 1 136 1 328 4 235 4 3 1 208 1 30 2 273 1 93 2 236 1 274 1 69 1 96 1 54 1 295 1 121 1 191 4 143 1 74 1 243 2 353 2 316 1 217 1 360 2 177 1 82 1 156 2 197 1 84 2 260 1 366 4 285 1 200 1 43 1 86 1 199 1 339 1 184 1 307 2 
48 1 23 1 114 1 136 1 328 4 235 4 3 1 208 1 30 2 273 1 93 2 274 1 69 1 96 1 54 1 295 1 121 1 240 1 334 2 191 4 143 1 74 1 243 2 353 2 316 1 217 1 360 2 15 1 177 1 82 1 156 2 197 1 226 2 260 1 366 4 200 1 43 1 86 1 132 2 339 1 184 1 
346 2 48 1 114 1 136 1 328 5 348 1 235 4 208 1 3 1 273 1 30 3 93 3 236 1 274 1 69 1 96 1 295 1 54 1 121 1 143 1 191 5 74 1 243 2 353 3 316 1 217 1 360 2 177 1 82 1 156 2 197 1 84 2 260 1 366 4 285 1 200 1 43 1 199 1 86 1 339 1 184 1 307 2 
346 2 48 1 114 1 136 1 328 5 348 1 235 4 208 1 3 1 273 1 30 3 93 3 236 1 274 1 69 1 96 1 295 1 54 1 121 1 143 1 191 5 74 1 243 2 353 3 316 1 217 1 360 2 177 1 82 1 156 2 197 1 84 2 260 1 366 4 285 1 200 1 43 1 199 1 86 1 339 1 184 1 307 2 
48 1 328 4 136 1 235 4 3 1 93 2 96 1 54 1 295 1 240 1 334 2 143 1 191 4 243 2 156 2 197 1 260 1 339 1 114 1 208 1 273 1 30 2 274 1 69 1 121 1 74 1 353 2 316 1 217 1 360 2 318 1 177 1 82 1 226 2 366 4 86 1 43 1 132 2 184 1 
270 1 92 1 7 1 55 3 331 2 189 6 164 2 8 2 313 1 145 1 215 1 10 1 280 1 357 1 194 3 128 1 359 1 363 1 301 1 365 1 42 1 266 1 232 2 203 1 326 1 289 1 
194 1 64 1 357 1 359 3 92 3 363 1 5 1 7 1 55 1 189 2 8 2 42 1 369 1 144 1 215 1 10 1 101 1 
89 1 90 1 270 1 207 1 140 1 31 1 69 2 350 1 54 2 276 1 331 1 7 1 55 1 189 2 239 1 165 1 8 2 213 1 296 1 279 1 9 1 215 1 10 1 64 1 78 1 357 1 194 1 246 1 107 1 363 1 252 1 177 1 261 1 321 1 42 1 45 1 185 1 306 1 
89 1 90 1 92 7 140 2 54 3 331 2 55 10 7 3 189 20 239 2 8 6 296 3 9 3 10 3 62 2 11 1 64 1 194 10 246 2 107 2 252 2 301 3 253 2 261 2 203 3 306 1 160 4 204 2 345 1 270 7 68 2 69 3 350 2 276 1 32 2 164 4 165 2 313 1 279 3 215 3 280 1 357 3 78 1 127 2 128 1 219 2 359 7 363 3 224 1 177 1 365 1 321 1 42 3 368 2 230 1 45 1 232 8 289 1 326 1 
89 2 90 1 329 1 209 1 69 1 54 1 6 1 7 2 55 1 189 2 239 2 8 4 296 8 33 1 75 1 145 1 279 8 9 7 215 2 10 2 354 2 355 1 216 1 78 1 357 2 194 1 247 1 171 1 107 3 13 1 363 2 177 1 252 2 261 2 321 1 42 2 230 1 45 1 306 1 
90 1 270 1 92 1 1 1 69 1 54 1 7 1 55 2 189 3 164 1 8 2 215 1 192 1 10 1 78 1 357 1 64 1 194 1 219 1 359 1 363 1 319 1 177 1 301 1 253 1 42 1 232 1 203 1 204 1 
357 1 194 2 270 1 359 1 92 1 363 1 301 1 7 1 189 2 8 2 42 1 145 1 232 1 215 1 160 1 10 1 305 1 204 1 
357 1 270 1 359 1 92 1 363 1 253 1 7 1 55 2 189 2 164 1 8 2 42 1 145 1 232 1 215 1 299 1 10 1 203 1 
92 2 270 2 7 1 55 2 189 4 164 1 8 2 145 1 215 1 10 1 194 2 357 1 219 1 359 2 363 1 301 1 253 1 42 1 232 2 160 1 203 1 204 1 
357 1 194 2 270 1 359 1 92 1 363 1 301 1 6 1 7 1 189 2 8 2 42 1 232 1 215 1 160 1 10 1 305 1 204 1 
357 1 270 1 359 1 92 1 363 1 253 1 6 1 7 1 55 2 189 2 164 1 8 2 42 1 232 1 215 1 299 1 10 1 203 1 
357 1 194 2 219 1 270 2 359 2 92 2 363 1 301 1 253 1 6 1 55 2 7 1 189 4 164 1 8 2 42 1 232 2 215 1 203 1 160 1 10 1 204 1 
357 1 194 2 219 1 270 2 359 2 92 2 363 1 301 1 253 1 55 2 7 1 189 4 164 1 8 2 42 1 232 2 215 1 203 1 160 1 10 1 204 1 
89 1 140 1 69 1 350 1 54 1 331 1 32 1 7 1 55 1 189 2 239 1 165 1 8 2 296 1 279 1 9 1 215 1 10 1 194 1 357 1 246 1 107 1 363 1 252 1 261 1 321 1 42 1 306 1 
89 1 162 1 69 1 141 1 350 1 54 1 331 1 7 1 55 1 189 2 239 1 165 1 8 2 296 1 278 1 279 1 9 1 215 1 10 1 194 1 357 1 107 1 363 1 252 1 261 1 321 1 42 1 306 1 
64 1 357 1 194 2 219 1 270 2 359 2 92 2 363 1 301 1 253 1 55 2 7 1 189 4 164 1 8 2 42 1 232 2 215 1 203 1 160 1 10 1 204 1 
270 2 92 2 140 1 69 1 350 1 54 1 55 2 32 1 7 1 189 4 164 1 239 1 165 1 8 2 296 1 279 1 9 1 215 1 10 1 194 2 127 1 357 1 246 1 247 1 219 1 359 2 107 1 363 1 301 1 252 1 253 1 261 1 42 1 232 2 203 1 160 1 204 1 
90 1 92 1 270 1 1 1 69 1 54 1 55 1 7 1 189 3 8 2 298 1 215 1 192 1 10 1 78 1 357 1 64 1 194 2 219 1 359 1 363 1 177 1 301 1 253 1 42 1 232 1 203 1 160 1 204 1 
194 2 357 1 173 1 362 1 363 1 254 1 349 1 55 2 189 4 8 2 42 1 166 1 168 1 369 1 324 1 10 1 101 1 
194 4 357 1 173 1 362 1 363 1 254 2 349 2 55 4 189 8 8 2 42 1 166 2 168 2 369 2 60 1 324 1 101 2 10 1 
194 2 357 1 173 1 362 1 363 1 254 1 349 1 55 2 189 4 8 2 42 1 166 1 168 1 369 1 324 1 10 1 101 1 
194 2 357 1 173 1 362 1 363 1 254 1 349 1 55 2 189 4 8 2 42 1 166 1 168 1 369 1 324 1 10 1 101 1 
194 2 357 1 173 1 362 1 363 1 254 1 349 1 55 2 189 4 8 2 42 1 166 1 168 1 369 1 324 1 10 1 101 1 
103 1 248 1 269 1 262 1 12 1 174 1 352 1 119 1 52 1 325 1 
157 1 361 1 
39 1 248 1 269 1 99 1 12 1 87 1 352 1 119 1 325 1 
97 1 231 1 
102 1 63 1 115 1 
103 1 35 1 269 1 248 1 0 2 12 1 235 1 174 1 119 1 197 1 53 1 198 1 262 1 366 1 338 1 352 1 46 1 325 1 
103 1 35 1 269 1 248 1 0 2 12 1 235 1 174 1 119 1 197 1 53 1 198 1 262 1 366 1 338 1 352 1 46 1 325 1 
103 1 35 1 269 1 248 1 0 2 12 1 235 1 174 1 119 1 197 1 53 1 198 1 262 1 366 1 338 1 352 1 46 1 325 1 
102 1 97 1 231 1 
102 1 97 1 231 1 
63 1 115 1 
102 1 63 1 115 1 
322 1 105 1 
269 1 90 2 0 1 235 1 119 1 69 2 54 2 331 1 238 1 210 1 352 1 76 1 317 1 78 2 248 1 12 1 361 1 105 1 281 1 176 1 177 2 198 1 366 1 322 1 157 1 338 1 325 1 
69 2 54 2 7 1 55 1 189 2 239 1 8 2 241 1 296 2 75 1 214 1 279 2 9 2 215 1 10 1 354 2 64 1 357 1 194 1 358 1 171 1 152 1 107 1 363 1 252 1 177 2 261 1 321 1 42 1 228 1 306 1 
356 2 247 1 292 1 81 1 106 1 294 1 309 1 223 1 4 1 252 1 83 1 66 1 163 1 261 1 296 2 230 1 202 1 279 2 9 2 
356 2 292 1 106 1 294 1 223 1 4 1 252 1 83 1 66 1 163 1 261 1 296 1 230 1 202 1 279 1 341 1 9 1 
89 1 107 1 13 1 309 1 252 1 139 1 66 1 261 1 239 1 296 1 279 1 9 1 148 1 355 1 
356 2 292 1 81 1 106 1 294 1 309 1 223 1 4 1 252 1 83 1 66 1 163 1 261 1 296 1 230 1 202 1 279 1 9 1 
288 1 
121 1 114 1 43 1 61 1 266 1 196 1 197 1 
346 1 114 1 235 1 208 1 82 1 197 2 295 1 84 1 121 1 366 1 285 1 43 1 191 1 132 1 74 1 243 1 307 1 
89 1 137 1 235 5 138 1 295 4 239 3 142 3 296 3 191 5 297 6 61 1 243 3 9 3 247 1 107 10 17 2 252 4 301 2 196 1 253 2 18 2 302 2 197 8 303 6 111 2 261 3 337 1 203 2 161 1 204 2 114 8 26 2 208 4 68 2 311 1 310 2 312 1 120 2 351 2 121 2 165 3 72 2 74 4 279 3 219 2 364 1 82 4 84 6 366 5 43 9 86 2 132 12 183 2 229 2 
114 5 25 1 235 1 138 1 208 2 295 2 121 2 190 1 73 1 166 1 191 1 297 5 74 2 243 1 60 1 101 1 219 2 17 1 301 2 82 2 253 2 18 2 197 5 303 5 84 3 366 1 181 1 43 8 21 1 132 6 183 1 369 1 133 1 203 2 204 2 
24 1 90 1 114 2 235 1 208 1 69 1 54 1 295 1 212 1 143 1 74 1 192 1 280 1 78 1 128 1 14 1 17 1 175 1 301 2 177 1 82 1 255 1 18 2 366 1 199 1 43 2 203 1 289 1 
114 1 208 1 196 1 82 1 197 1 295 1 121 1 43 1 74 1 61 1 
219 2 114 5 68 1 17 1 301 2 253 2 18 2 197 5 303 5 84 5 43 5 132 10 297 5 203 2 204 2 
121 1 366 1 235 1 191 1 243 1 197 1 
89 2 114 2 235 3 208 2 138 2 312 2 295 1 239 1 296 4 191 4 74 2 279 4 243 2 9 4 125 1 355 1 151 1 107 1 13 1 222 1 16 1 252 1 82 2 304 1 261 1 366 3 43 2 183 2 161 1 
89 1 90 2 140 1 69 3 350 1 54 3 331 1 55 1 32 1 7 1 189 1 239 1 8 2 165 1 296 1 279 1 9 1 215 1 192 2 10 1 357 1 78 2 150 1 246 1 107 1 14 1 363 1 177 2 252 1 261 1 42 1 306 1 
114 2 208 1 138 1 82 1 197 4 84 2 303 2 295 1 365 1 121 2 43 1 132 4 297 2 74 1 183 1 
300 1 352 1 119 1 
300 1 352 1 119 1 
103 1 105 1 352 1 119 1 51 1 
300 1 352 1 119 1 
44 1 352 1 119 1 
44 1 352 1 119 1 
44 1 352 1 119 1 
352 1 119 1 
248 1 12 1 
194 4 357 2 128 1 218 1 363 2 301 1 55 4 365 1 189 8 164 2 8 4 42 2 313 1 232 3 203 1 160 1 10 2 289 1 326 1 280 1 
194 3 128 1 301 1 55 3 365 1 189 6 164 2 313 1 266 1 232 2 203 1 326 1 280 1 289 1 
357 1 194 2 219 1 363 1 301 1 253 1 55 2 189 4 164 1 8 2 42 1 232 2 203 1 113 1 10 1 160 1 204 1 
194 1 55 1 189 2 166 1 369 1 101 1 
194 1 55 1 189 2 369 1 144 1 101 1 
55 1 189 1 101 1 
194 1 189 1 369 1 
357 1 194 3 219 1 363 1 68 1 301 1 253 1 55 3 189 6 164 2 8 2 42 1 232 3 10 1 113 1 160 1 203 1 204 1 
194 1 357 1 362 1 363 1 55 1 189 2 8 2 42 1 166 1 369 1 60 1 10 1 101 1 
194 3 128 1 301 1 55 3 189 6 164 1 232 2 203 1 160 1 289 1 280 1 
194 1 357 1 128 1 218 1 2 1 363 1 55 2 189 3 164 1 8 2 42 1 313 1 232 2 160 1 10 1 280 1 326 1 
357 1 194 5 24 1 128 2 362 1 363 1 301 2 55 5 189 10 164 3 8 2 42 1 232 5 10 1 160 2 203 2 280 2 289 1 
357 1 194 2 362 1 363 1 301 1 189 2 8 2 42 1 232 1 10 1 160 1 204 1 
357 1 194 2 219 1 362 1 363 1 301 1 253 1 55 2 189 4 164 1 8 2 42 1 232 2 203 1 10 1 160 1 204 1 
357 3 194 1 128 1 218 1 362 1 2 1 363 3 55 2 189 3 164 1 8 6 19 1 42 3 232 2 10 3 160 1 280 1 
194 1 357 3 291 1 362 1 363 3 55 1 189 2 8 6 42 3 19 1 166 1 369 1 10 3 113 1 101 1 
194 1 357 1 362 1 363 1 55 1 189 2 8 2 42 1 166 1 369 1 60 1 10 1 101 1 
194 1 357 2 362 1 363 2 55 1 189 2 8 4 42 2 166 1 369 1 60 1 113 1 10 2 101 1 
25 1 55 10 189 19 164 3 8 6 190 1 166 1 313 1 60 1 101 1 10 3 280 1 357 3 194 9 128 1 219 2 218 1 362 1 363 3 301 3 253 2 365 1 181 1 42 3 21 1 369 1 232 4 113 1 160 1 203 3 289 1 326 1 204 2 
194 1 357 1 362 1 363 1 55 1 189 2 8 2 42 1 166 1 369 1 60 1 10 1 101 1 
194 1 357 1 362 1 363 1 55 1 189 2 8 2 42 1 166 1 369 1 60 1 10 1 101 1 
25 1 55 6 189 12 164 1 8 2 190 1 166 1 60 1 101 1 10 1 357 1 194 6 219 2 362 1 363 1 301 2 253 2 181 1 42 1 21 1 369 1 232 2 160 1 203 2 204 2 
194 1 357 2 362 1 363 2 55 1 189 2 8 4 42 2 166 1 369 1 60 1 10 2 113 1 101 1 
194 1 357 2 362 1 363 2 55 1 189 2 8 4 19 1 42 2 166 1 369 1 60 1 10 2 101 1 
194 3 128 3 301 1 55 4 189 7 164 3 313 2 232 6 203 1 160 3 326 1 280 3 289 1 
194 1 357 2 362 1 363 2 55 1 189 2 8 4 19 1 42 2 166 1 369 1 60 1 10 2 101 1 
54 1 331 1 48 1 29 1 177 1 69 1 94 1 
205 1 48 1 220 1 29 1 177 1 94 1 69 1 54 1 331 1 265 1 100 1 112 1 
89 1 261 1 239 1 107 1 13 1 296 1 252 1 266 1 279 1 9 1 355 1 
89 1 78 1 90 1 107 1 252 1 177 1 140 1 69 2 350 1 54 2 331 1 261 1 239 1 165 1 296 1 279 1 45 1 9 1 
78 1 90 2 26 1 107 3 273 1 252 1 177 2 312 1 140 1 69 2 96 1 350 1 351 1 54 2 331 1 261 1 239 2 165 2 143 1 296 1 279 1 45 1 9 1 
90 2 26 1 273 1 188 1 312 1 69 2 141 1 96 1 350 1 54 2 351 1 331 1 239 2 165 2 296 2 143 1 279 2 9 2 78 1 107 3 177 2 252 1 261 1 45 1 
89 1 26 1 235 2 237 1 188 1 312 1 351 1 239 1 121 1 165 1 142 1 191 1 296 3 279 3 9 3 107 4 154 1 252 1 197 1 261 1 366 2 86 1 229 1 
89 1 26 1 235 2 107 4 252 1 188 1 312 1 302 1 197 1 351 1 261 1 121 1 239 1 366 2 165 1 86 1 142 1 296 3 191 1 229 1 279 3 9 3 
261 1 296 1 33 1 252 1 279 1 9 1 
89 2 216 1 247 1 107 3 329 1 364 1 252 3 209 1 50 1 71 1 57 1 261 2 239 2 165 1 296 7 33 1 75 1 230 1 279 7 9 6 354 1 
90 1 92 1 140 1 54 2 7 2 55 3 331 2 189 6 239 1 8 4 296 1 9 1 10 2 64 1 194 3 246 1 247 1 107 1 252 1 301 1 261 1 203 1 270 1 69 2 350 1 32 1 164 2 165 1 313 1 279 1 215 2 280 1 127 1 357 2 78 1 128 1 358 1 359 1 363 2 177 1 365 1 42 2 368 1 45 1 232 2 326 1 289 1 
89 1 114 1 235 3 208 2 120 1 295 2 238 1 121 1 72 1 142 1 296 1 191 2 74 2 61 1 279 1 243 1 9 1 107 2 196 1 82 2 302 1 197 1 111 1 366 3 43 1 86 1 229 1 161 1 
247 1 107 2 364 1 252 2 261 1 239 1 337 1 165 1 296 2 229 1 33 1 279 2 9 2 
89 1 247 1 13 1 107 1 252 1 188 1 261 1 239 1 296 4 279 4 9 4 77 1 355 1 
104 1 153 1 107 1 224 1 252 2 312 1 50 1 71 1 261 1 239 1 165 1 296 2 279 2 9 2 
356 1 89 1 261 1 296 1 294 1 202 1 252 1 279 1 9 1 163 1 
261 1 247 1 239 1 107 1 296 2 75 1 214 1 230 1 252 1 279 2 9 2 
89 1 247 1 13 1 107 3 329 1 252 2 312 1 209 1 261 2 239 2 296 5 75 1 279 5 9 4 77 1 355 1 
89 1 247 1 13 1 107 3 252 2 312 1 209 1 257 1 261 2 239 2 296 5 75 1 279 5 9 4 77 1 355 1 
89 1 78 1 90 1 107 1 252 1 177 1 69 2 141 1 350 1 54 2 331 1 261 1 239 1 165 1 296 1 279 1 45 1 9 1 
107 1 364 1 252 2 312 1 50 1 71 1 57 1 261 1 239 1 165 1 296 1 279 1 9 1 
331 1 34 1 367 1 182 1 118 1 
316 1 149 1 34 2 235 2 118 2 273 1 96 1 197 1 331 1 238 1 121 1 366 2 86 1 40 1 367 1 167 1 143 1 277 1 182 2 
54 1 34 1 241 1 152 1 228 1 367 1 182 1 177 1 69 1 
149 1 167 1 367 1 
335 1 244 1 266 1 110 1 
315 1 335 1 271 1 244 1 267 1 38 1 110 1 
180 1 27 1 271 1 
315 1 335 1 91 1 271 3 38 1 110 1 275 2 333 1 158 1 244 1 267 3 47 1 
259 1 315 1 335 1 221 1 271 2 244 1 267 2 38 1 110 1 
315 1 356 1 347 1 271 1 38 1 83 1 110 1 333 1 59 1 202 1 267 1 
315 1 333 1 271 1 244 1 267 1 38 1 110 1 
315 1 335 1 333 1 271 1 244 2 267 1 38 1 
315 2 271 2 109 1 38 2 110 1 333 1 123 1 244 1 286 1 267 2 
315 1 335 1 206 1 80 1 271 3 38 1 110 2 259 2 333 1 159 1 59 1 244 1 267 3 
356 2 315 1 335 1 292 1 271 2 38 1 83 1 110 1 163 1 259 1 333 1 244 1 202 1 267 2 343 1 
315 2 335 1 221 1 80 1 271 4 38 2 110 2 259 2 332 1 333 1 59 1 244 1 267 4 
315 1 335 1 333 1 271 1 244 1 267 1 38 1 110 1 
315 1 335 2 91 1 80 1 37 1 271 4 38 1 275 1 110 3 259 2 59 1 244 2 47 1 267 4 
259 1 315 1 335 1 333 1 79 1 271 2 65 1 244 1 267 2 320 1 38 1 110 1 
315 1 335 1 91 2 271 3 38 1 110 1 275 2 333 1 122 1 244 1 47 1 267 3 
272 2 155 1 110 2 170 1 
315 1 333 1 242 1 271 1 267 1 38 1 
259 1 315 1 335 1 333 1 206 1 271 2 244 1 267 2 38 1 110 1 
323 1 
315 1 335 1 333 1 271 1 244 1 267 1 38 1 110 1 
315 1 335 1 206 1 271 3 38 1 275 1 110 1 259 1 333 1 244 1 267 3 
80 1 37 1 59 1 110 1 
244 1 110 1 

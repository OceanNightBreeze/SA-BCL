#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (103,178) (104,367) (104,367) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (103,178) (104,367) (104,367) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (103,178) (104,367) (104,367) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (103,178) (104,367) (104,367) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (103,178) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (103,178) 314 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (103,178) 314 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.RuntimeException 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String; | RETURN | 1613 | return null
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money; | ASSIGN | 415 | = null
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
321 1 69 1 203 1 25 2 51 1 103 1 283 1 372 1 104 1 114 1 313 1 367 1 292 2 178 1 21 1 88 1 
321 1 69 1 203 1 25 2 51 1 103 1 283 1 372 1 104 1 114 1 313 1 367 1 292 2 178 1 21 1 88 1 
321 1 69 1 203 1 25 2 51 1 103 1 283 1 372 1 104 1 114 1 313 1 367 1 292 2 178 1 21 1 88 1 
321 1 69 1 203 1 25 2 51 1 103 1 283 1 372 1 104 1 114 1 313 1 367 1 292 2 178 1 21 1 88 1 
344 1 69 1 25 4 347 2 51 1 322 1 283 1 372 1 291 2 172 1 80 3 313 1 197 1 292 4 143 1 198 1 145 3 88 1 
321 1 69 1 203 1 25 2 322 1 372 1 283 1 172 1 313 1 368 1 292 2 145 1 101 1 296 1 21 1 88 1 
69 1 292 1 25 1 372 1 178 1 88 1 
80 1 69 1 314 1 233 1 292 2 25 2 372 1 178 1 88 1 
80 1 69 1 314 1 233 1 292 2 25 2 372 1 178 1 88 1 
218 1 251 1 252 1 
257 2 32 1 251 1 
138 2 99 1 191 1 139 2 378 2 270 2 157 2 193 2 
0 1 162 1 215 1 359 1 191 1 334 1 336 1 363 1 70 1 73 2 193 2 6 2 138 3 99 1 31 1 75 1 33 1 175 2 116 1 139 2 316 2 279 1 319 1 179 1 281 1 14 1 153 2 156 1 157 2 83 1 242 1 378 3 269 1 108 1 19 1 270 2 287 1 
256 1 138 1 191 1 115 1 139 1 273 1 378 1 270 1 157 1 193 1 
68 1 13 1 273 1 300 1 64 1 157 1 303 1 138 1 158 1 327 1 378 1 251 1 252 1 255 1 
68 1 13 1 273 1 64 1 157 1 193 1 138 1 158 1 327 2 139 1 378 1 251 1 252 1 270 1 255 2 
39 1 327 1 361 1 338 1 255 1 
39 1 327 2 90 1 251 1 252 1 338 1 254 1 255 2 
327 1 338 1 255 1 
256 1 39 1 191 1 335 1 273 1 157 1 193 1 138 1 115 1 327 1 139 1 378 1 270 1 255 1 
251 1 
39 1 327 2 246 1 251 1 252 1 338 1 254 1 255 2 
190 1 39 2 164 2 338 2 223 1 247 1 312 1 106 1 263 1 81 2 8 1 327 5 232 1 76 2 251 1 252 1 379 1 254 1 255 5 
0 1 14 1 181 1 153 1 363 1 156 1 157 1 193 1 82 1 6 1 138 2 33 1 175 1 378 2 269 1 279 1 108 1 270 1 148 1 179 1 
99 1 218 1 
157 2 193 1 224 1 138 2 99 2 174 1 139 1 378 2 270 1 
130 1 148 1 27 1 
0 1 14 1 153 1 363 1 156 1 6 1 138 1 99 1 33 1 175 1 378 1 269 1 279 1 108 1 320 1 179 1 
138 3 99 1 181 1 139 1 378 3 270 3 157 3 193 3 
138 1 115 1 273 1 378 1 270 1 157 1 193 1 
224 1 138 1 174 1 139 1 273 1 378 1 270 1 157 1 193 1 
0 1 68 1 359 1 191 1 273 1 336 1 363 1 70 1 73 2 193 3 6 1 138 4 99 1 31 1 174 1 75 1 33 1 175 1 116 1 139 2 316 1 279 1 319 1 255 1 179 1 281 1 13 1 14 1 181 1 153 1 64 1 156 1 157 3 326 1 82 1 242 1 158 1 327 1 267 1 378 4 269 1 108 1 270 3 287 1 
138 2 99 1 181 1 378 2 300 1 26 1 270 1 157 2 193 1 
68 1 13 1 181 2 273 1 64 1 157 3 193 3 82 1 138 3 174 1 315 1 158 1 327 1 267 1 139 1 378 3 251 1 270 3 255 1 
181 1 157 2 193 2 138 2 174 1 130 1 139 1 378 2 270 2 148 1 
0 1 14 1 153 1 363 1 156 1 6 1 138 1 99 1 33 1 175 1 378 1 269 1 279 1 108 1 179 1 
0 1 14 1 299 1 153 1 363 1 6 1 138 1 99 1 277 1 33 1 175 1 378 1 269 1 108 1 179 1 
332 1 217 1 364 1 70 1 73 2 27 2 55 1 31 1 75 1 116 2 316 4 200 1 77 1 148 2 281 1 149 1 205 1 43 1 126 1 242 1 130 2 243 1 19 2 287 1 
138 1 273 1 378 1 64 1 270 1 157 1 248 1 193 1 
181 2 362 1 300 1 26 1 157 5 193 4 82 1 376 1 138 5 99 1 174 1 139 1 378 5 270 4 
138 2 115 1 273 1 378 2 270 2 248 1 157 2 193 2 
236 1 365 1 
236 1 365 1 
85 1 275 1 
85 1 275 1 
85 1 275 1 
236 1 52 1 365 1 
236 1 52 1 365 1 
306 1 236 1 365 1 
54 1 236 2 85 1 365 2 275 1 38 1 
236 1 52 1 365 1 
245 1 236 1 365 1 
245 1 236 1 365 1 
245 1 236 1 365 1 
110 1 288 2 236 2 167 1 365 2 71 2 72 1 93 1 54 1 94 2 327 2 251 1 317 1 119 2 146 1 20 3 357 1 147 2 255 2 
288 1 2 1 365 1 71 1 193 2 93 1 138 2 99 1 342 1 119 1 147 1 255 1 258 1 236 1 42 1 157 2 107 1 327 1 306 1 378 2 356 1 270 2 20 1 244 1 
313 1 51 1 283 1 
313 1 283 1 101 1 
30 1 298 1 134 1 51 2 283 3 101 1 
298 1 134 1 51 1 58 1 283 2 101 1 
298 2 134 1 51 1 283 2 101 1 
161 1 190 3 164 1 163 1 133 1 364 1 338 1 247 2 366 2 171 1 32 1 232 1 76 1 100 1 251 2 252 1 254 1 200 1 255 5 121 2 257 3 39 4 60 1 346 1 42 1 43 1 81 1 240 2 107 1 327 5 243 1 244 1 
190 8 164 2 361 5 219 1 364 3 338 6 247 6 366 6 171 3 250 1 32 3 232 1 76 2 100 2 251 5 34 1 252 1 199 1 254 1 200 3 255 9 11 1 257 9 39 7 60 2 346 1 43 3 155 5 106 1 81 2 240 6 107 4 327 9 243 3 380 1 
161 1 190 3 163 1 164 1 364 1 247 2 366 2 171 1 32 2 76 1 100 1 251 3 252 1 200 1 255 3 121 1 39 2 60 1 257 4 43 1 106 1 81 1 240 2 107 1 327 3 243 1 
161 1 190 5 164 1 163 1 364 2 247 4 366 4 171 2 32 3 76 1 100 1 251 4 252 1 34 1 199 1 200 2 255 4 121 2 257 7 60 1 39 3 43 2 106 1 81 1 240 4 107 2 327 4 243 2 380 1 
286 1 218 1 363 1 
363 1 349 1 
204 1 
33 1 363 1 
0 1 109 1 286 2 33 1 140 1 363 3 
0 1 33 1 363 1 
363 1 358 1 
310 1 360 1 151 1 89 1 63 1 364 1 351 1 225 2 55 3 228 1 116 3 316 7 19 4 200 1 77 2 271 1 49 1 
310 1 360 1 151 1 89 1 63 1 364 1 351 1 225 2 55 3 228 1 116 3 316 7 19 4 200 1 77 2 271 1 49 1 
310 1 360 1 151 1 89 1 63 1 364 1 92 1 351 1 225 2 55 3 228 1 116 3 316 7 19 4 200 1 77 2 271 1 49 1 
310 1 360 1 89 1 364 4 73 2 225 3 171 3 55 10 29 3 228 1 31 1 116 15 316 31 200 4 77 5 281 1 151 2 16 1 63 2 259 1 43 3 350 1 351 5 186 1 285 1 84 1 242 1 353 4 243 3 19 16 271 2 49 2 287 1 381 1 
310 1 360 1 89 1 364 1 73 4 225 2 55 4 31 2 116 4 316 9 200 1 77 3 281 2 151 1 63 1 375 1 351 1 84 1 242 2 307 1 19 5 287 2 49 1 271 1 
69 1 166 1 25 2 51 1 172 1 313 1 6 1 7 1 74 1 30 1 195 1 175 1 292 2 36 1 35 1 145 1 101 1 61 1 14 1 153 1 322 1 154 1 260 1 372 1 283 2 80 1 329 1 108 1 21 1 88 1 
69 1 166 1 25 3 51 1 91 1 172 1 313 1 6 1 74 1 30 1 195 1 175 1 292 3 36 1 35 1 145 1 101 1 202 1 61 1 14 1 153 1 322 1 79 1 154 1 260 1 372 1 283 2 80 2 108 1 21 1 
166 1 25 2 51 1 172 1 6 1 74 1 313 1 30 1 195 1 175 1 292 2 36 1 145 1 101 1 202 1 61 1 14 1 153 1 322 1 79 1 260 1 283 2 80 2 108 1 21 1 
69 1 25 1 166 2 111 1 363 1 91 1 3 1 28 1 6 1 97 1 195 2 196 1 33 1 175 1 292 1 36 2 78 1 14 1 153 1 372 1 269 1 108 1 21 2 
69 1 166 1 25 1 51 1 313 1 6 1 7 1 74 1 30 1 195 1 175 1 292 1 36 1 35 1 101 1 202 1 61 1 14 1 153 1 154 1 260 1 372 1 283 2 108 1 21 1 88 1 
235 1 
190 2 136 4 338 6 137 2 247 2 95 2 6 2 138 1 251 2 252 1 254 3 295 1 255 5 201 2 257 2 60 1 345 1 150 1 13 1 14 1 153 2 300 1 64 1 261 1 157 1 303 1 159 2 158 1 269 2 213 1 108 1 68 1 164 1 273 1 363 1 28 1 32 2 33 1 278 1 232 1 175 2 76 1 176 1 78 1 284 1 81 1 187 1 241 1 327 5 129 2 188 1 328 1 378 1 331 2 189 2 
68 1 345 1 13 1 246 1 136 2 273 1 300 1 338 2 64 1 137 1 157 1 303 1 138 1 158 1 327 3 188 1 176 1 378 1 213 1 254 1 295 1 255 3 
68 1 246 1 273 1 136 3 338 1 138 1 176 1 251 1 252 1 295 1 254 1 255 3 345 1 13 1 300 1 64 1 157 1 303 1 158 1 327 3 188 1 378 1 213 1 189 1 
68 1 246 1 273 1 136 3 338 2 137 1 95 1 138 1 176 1 251 1 252 1 254 1 295 1 255 3 345 1 13 1 300 1 64 1 157 1 303 1 158 1 327 3 188 1 378 1 213 1 189 1 
190 1 246 1 136 6 338 7 137 4 247 1 95 4 138 1 194 1 251 5 252 5 254 3 295 1 255 5 201 2 345 1 13 1 150 1 300 1 64 1 157 1 303 1 158 1 159 2 213 1 272 1 68 1 164 1 273 1 32 2 232 1 176 1 76 1 180 1 183 1 81 1 327 5 188 1 129 2 328 1 378 1 330 1 331 2 189 4 
190 1 136 4 338 4 247 1 137 2 95 2 138 1 251 2 252 1 295 1 254 2 255 4 201 2 345 1 257 2 13 1 150 1 300 1 64 1 157 1 303 1 158 1 159 2 213 1 68 1 164 1 273 1 32 2 232 1 176 1 76 1 81 1 241 1 327 4 188 1 129 2 328 1 378 1 331 2 189 2 
190 1 68 1 164 1 273 1 136 4 338 4 137 2 247 1 95 2 138 1 32 2 232 1 176 1 76 1 251 1 252 1 254 2 295 1 255 4 201 2 180 1 345 1 150 1 13 1 300 1 64 1 157 1 303 1 81 1 159 2 158 1 327 4 129 2 188 1 328 1 378 1 330 1 213 1 331 2 189 2 272 1 
190 1 68 1 164 1 273 1 136 4 338 4 137 2 247 1 95 2 138 1 32 2 232 1 176 1 76 1 251 1 252 1 254 2 295 1 255 4 201 2 180 1 345 1 150 1 13 1 300 1 64 1 157 1 303 1 81 1 159 2 158 1 327 4 129 2 188 1 328 1 378 1 330 1 213 1 331 2 189 2 272 1 
190 1 68 1 164 1 192 1 273 1 136 4 338 4 137 2 247 1 95 2 138 1 232 1 176 1 76 1 251 1 142 2 252 1 254 2 295 1 144 1 255 4 201 2 257 2 180 1 345 1 150 1 13 1 300 1 64 1 128 2 157 1 303 1 81 1 352 1 158 1 327 4 188 1 378 1 213 1 331 2 189 2 
190 1 68 1 164 1 273 1 136 5 338 5 247 1 137 3 95 3 138 1 32 2 232 1 76 1 176 1 251 1 252 1 254 2 295 1 255 4 201 2 180 1 345 1 150 1 13 1 300 1 64 1 157 1 183 1 81 1 303 1 159 2 158 1 327 4 129 2 188 1 328 1 378 1 330 1 213 1 331 2 272 1 189 3 
190 1 68 1 164 1 273 1 136 5 338 5 247 1 137 3 95 3 138 1 32 2 232 1 76 1 176 1 251 1 252 1 254 2 295 1 255 4 201 2 180 1 345 1 150 1 13 1 300 1 64 1 157 1 183 1 81 1 303 1 159 2 158 1 327 4 129 2 188 1 328 1 378 1 330 1 213 1 331 2 272 1 189 3 
190 1 192 1 136 4 338 4 247 1 137 2 95 2 138 1 142 2 251 1 252 1 295 1 254 2 255 4 201 2 345 1 257 2 13 1 150 1 300 1 64 1 157 1 303 1 158 1 213 1 68 1 164 1 273 1 232 1 176 1 76 1 128 2 81 1 241 1 327 4 188 1 378 1 331 2 189 2 
310 1 332 1 360 1 218 1 89 1 364 1 70 1 73 2 27 1 225 1 55 2 31 1 99 2 75 1 116 3 316 6 77 2 200 1 148 1 281 1 242 1 130 1 19 3 49 1 287 1 271 1 
309 1 215 1 289 1 364 2 70 1 73 4 27 11 171 2 55 2 9 1 29 3 99 1 31 2 75 2 116 6 118 1 316 14 319 1 77 1 200 1 148 11 281 2 301 1 43 1 351 1 186 1 285 1 242 2 353 3 130 4 243 2 19 8 287 2 
0 1 215 1 221 1 169 1 363 1 70 1 193 1 73 2 6 1 138 2 99 1 31 1 33 1 75 1 175 1 293 1 116 1 279 1 316 2 319 1 320 1 179 1 281 1 14 1 181 1 153 1 301 1 156 1 157 1 82 1 242 1 130 1 269 1 378 2 108 1 270 1 19 1 287 1 
0 2 89 1 336 2 339 2 193 1 6 3 55 8 138 3 99 2 98 2 10 1 200 3 148 7 202 1 14 2 153 3 301 1 156 2 157 1 207 1 351 4 269 1 108 2 270 1 160 2 19 10 271 1 310 1 215 1 360 1 363 2 364 3 70 3 73 6 27 7 225 1 171 2 31 3 75 3 33 2 175 3 116 10 316 20 279 2 77 4 319 1 179 2 281 3 181 1 43 2 44 1 82 1 242 3 130 7 378 3 243 2 46 2 49 1 287 3 
162 2 332 1 215 1 113 1 363 3 70 2 193 1 73 4 28 1 6 7 138 1 31 2 57 1 75 2 33 2 369 1 175 8 116 1 316 2 319 1 202 1 281 2 78 1 181 1 14 2 62 1 152 1 153 8 127 1 325 1 157 1 242 2 329 1 378 1 269 2 108 2 270 1 19 1 287 2 
364 1 70 1 27 1 193 1 73 2 171 1 55 1 138 1 31 1 174 1 75 1 139 1 116 2 316 3 77 1 200 1 148 1 281 1 124 1 301 1 43 1 157 1 242 1 130 1 378 1 243 1 270 1 19 1 287 1 
281 1 332 1 364 1 70 1 126 1 27 1 73 2 351 1 55 1 31 1 242 1 75 1 130 1 243 1 316 2 19 2 148 1 287 1 
281 1 332 1 205 1 43 1 70 1 27 1 73 2 55 1 31 1 242 1 75 1 130 1 116 2 316 2 77 1 200 1 148 1 287 1 
332 1 364 1 70 1 73 2 27 2 171 1 55 2 31 1 75 1 116 2 316 4 200 1 77 1 148 2 281 1 43 1 351 1 242 1 130 2 243 1 19 2 287 1 
281 1 62 1 364 1 70 1 126 1 27 1 73 2 351 1 55 1 31 1 242 1 75 1 130 1 243 1 316 2 19 2 148 1 287 1 
281 1 62 1 205 1 43 1 70 1 27 1 73 2 55 1 31 1 242 1 75 1 130 1 116 2 316 2 77 1 200 1 148 1 287 1 
364 1 70 1 73 2 27 2 171 1 55 2 31 1 75 1 116 2 316 4 200 1 77 1 148 2 281 1 62 1 43 1 351 1 242 1 130 2 243 1 19 2 287 1 
364 1 70 1 73 2 27 2 171 1 55 2 31 1 75 1 116 2 316 4 200 1 77 1 148 2 281 1 43 1 351 1 242 1 130 2 243 1 19 2 287 1 
0 1 215 1 336 1 363 1 70 1 73 2 6 1 138 1 99 1 31 1 33 1 75 1 175 1 116 1 316 2 279 1 319 1 179 1 281 1 14 1 153 1 156 1 242 1 269 1 378 1 108 1 19 1 287 1 
0 1 215 1 363 1 70 1 73 2 6 1 138 1 99 1 277 1 31 1 33 1 75 1 175 1 116 1 316 2 319 1 179 1 281 1 14 1 299 1 153 1 125 1 242 1 269 1 378 1 108 1 19 1 287 1 
364 1 70 1 73 2 27 2 171 1 55 2 31 1 75 1 116 2 316 4 200 1 77 1 148 2 281 1 301 1 43 1 351 1 242 1 130 2 243 1 19 2 287 1 
0 1 336 1 364 1 339 1 363 1 70 1 27 2 73 2 171 1 55 2 6 1 138 1 31 1 33 1 75 1 175 1 116 2 316 4 279 1 77 1 200 1 148 2 179 1 281 1 14 1 153 1 43 1 156 1 351 1 242 1 130 2 329 1 378 1 243 1 108 1 19 2 287 1 
364 1 70 1 193 1 73 2 27 1 171 1 55 1 138 1 31 1 174 1 75 1 116 1 139 1 316 3 200 1 148 1 281 1 43 1 301 1 157 1 351 1 242 1 130 1 378 1 243 1 270 1 19 2 308 1 287 1 
89 1 290 1 249 1 55 8 343 1 200 5 102 1 348 1 17 1 351 4 307 1 353 4 355 1 19 20 271 1 310 1 360 1 220 2 112 1 364 5 73 6 171 4 225 1 29 3 31 3 116 21 316 41 37 1 77 4 281 3 122 1 370 1 43 4 186 3 285 1 84 1 242 3 45 1 243 4 86 1 47 4 287 3 49 1 
310 1 360 1 89 1 220 2 112 1 290 1 364 5 73 8 225 1 249 1 171 4 55 7 29 3 31 4 116 18 316 38 343 1 77 4 37 1 200 4 102 1 281 4 122 1 370 1 348 1 17 1 43 3 351 3 186 3 84 2 285 1 242 4 45 1 353 4 307 1 243 4 355 1 86 1 19 20 47 4 271 1 49 1 287 4 
310 1 360 1 89 1 289 2 220 1 112 1 290 1 364 8 73 4 225 1 249 1 171 7 55 14 29 4 31 2 116 25 316 52 343 1 77 7 37 1 200 8 102 1 281 2 122 1 370 1 17 1 43 7 351 7 186 2 84 1 285 2 242 2 45 1 353 4 307 1 243 7 355 1 19 27 47 4 271 1 49 1 287 2 
220 1 112 2 364 3 73 4 249 1 171 3 55 6 29 1 31 2 116 10 316 19 77 3 37 1 200 3 102 1 281 2 348 1 43 3 323 1 351 3 186 1 285 1 242 2 353 2 307 1 243 3 355 1 19 9 47 2 287 2 
220 2 112 1 290 1 364 3 73 6 249 1 171 3 55 4 29 2 31 3 116 12 316 26 343 1 77 2 200 2 37 1 102 2 281 3 122 1 370 1 17 1 43 2 351 2 186 2 84 2 242 3 45 1 307 1 353 2 243 3 355 1 19 14 47 4 287 3 
54 1 288 1 41 1 236 1 119 1 365 1 146 1 71 1 357 1 147 1 
258 1 306 1 
230 1 288 1 50 1 236 1 119 1 365 1 71 1 147 1 237 1 
110 1 288 1 236 1 365 1 71 1 72 1 93 1 54 1 94 1 327 1 251 1 317 1 119 1 146 1 20 2 357 1 255 1 147 1 
110 1 288 1 236 1 365 1 71 1 72 1 93 1 54 1 94 1 327 1 251 1 317 1 119 1 146 1 20 2 357 1 255 1 147 1 
110 1 288 1 236 1 365 1 71 1 72 1 93 1 54 1 94 1 327 1 251 1 317 1 119 1 146 1 20 2 357 1 255 1 147 1 
117 1 52 1 38 1 
117 1 52 1 38 1 
245 1 18 1 
245 1 18 1 38 1 
342 1 356 1 
288 1 2 1 365 1 71 1 72 1 276 1 193 2 94 1 138 2 99 1 342 1 119 1 255 1 147 1 39 1 258 1 236 1 42 1 157 2 107 1 327 1 306 1 378 2 356 1 270 2 20 1 244 1 
117 1 52 1 
245 1 18 1 38 1 
162 2 215 1 113 1 363 1 70 1 53 1 73 2 6 2 138 2 96 1 31 1 33 1 75 1 369 1 175 2 116 1 316 2 319 1 280 1 281 1 14 1 153 2 301 1 324 1 157 2 242 1 265 1 378 2 108 1 19 1 287 1 
202 1 14 1 61 1 166 1 51 1 153 2 154 1 260 1 283 2 185 1 313 1 6 2 30 1 227 1 175 2 268 1 329 1 108 1 101 1 
202 1 61 1 14 1 166 1 51 1 153 1 154 1 260 1 283 2 313 1 6 1 30 1 227 1 305 1 175 1 108 1 101 1 
78 1 14 1 166 1 153 1 111 1 363 1 28 1 6 1 33 1 175 1 266 1 268 1 269 1 108 1 
202 1 61 1 14 1 166 1 51 1 153 1 154 1 260 1 283 2 185 1 313 1 6 1 30 1 227 1 175 1 268 1 108 1 101 1 
212 1 
190 1 218 1 251 1 252 1 223 1 247 1 312 1 
257 1 190 1 164 1 338 1 247 1 81 1 159 1 32 1 327 1 232 1 129 1 76 1 328 1 251 2 252 1 254 1 255 1 
0 3 190 9 1 2 338 5 247 8 6 3 98 2 56 1 251 8 252 2 59 2 254 3 200 2 255 5 60 2 257 12 14 3 153 3 349 3 269 1 354 2 108 4 358 2 214 2 109 1 68 2 164 4 168 2 222 1 363 10 364 2 223 1 312 1 366 6 226 1 171 2 173 2 32 6 278 1 33 3 232 4 175 3 76 4 318 2 40 1 182 1 43 2 81 4 240 6 286 2 327 5 377 2 329 1 243 2 
190 8 164 2 1 2 170 1 338 1 364 2 247 5 366 5 171 2 29 1 32 3 278 1 232 2 76 2 251 5 252 2 254 1 343 1 200 2 255 1 60 1 257 6 122 1 370 1 17 1 43 2 81 2 186 1 240 5 209 1 327 1 45 1 353 1 354 1 243 2 
310 1 190 2 164 1 191 1 165 1 335 1 273 1 1 2 364 2 247 2 193 1 138 1 115 1 232 1 76 1 139 1 200 1 255 1 256 1 157 1 81 1 327 1 378 1 354 1 270 1 271 1 49 1 272 1 
190 1 164 1 223 1 312 1 247 1 81 1 232 1 76 1 251 1 252 1 
257 10 190 5 1 2 43 2 364 2 247 5 366 5 171 2 240 5 98 1 32 5 354 1 243 2 251 5 200 2 
327 1 251 1 252 1 338 1 254 1 255 1 
190 2 164 2 363 1 338 4 247 2 28 1 6 4 56 1 33 1 278 2 232 1 175 4 76 2 254 2 255 3 60 2 40 2 78 1 14 1 153 4 261 1 106 1 239 1 81 2 187 1 208 1 327 3 269 2 108 1 
0 1 359 1 191 1 336 1 363 1 70 1 73 2 193 2 6 1 138 3 99 1 31 1 33 1 75 1 175 1 116 1 139 2 316 1 279 1 319 1 179 1 281 1 14 1 153 1 156 1 157 2 242 1 269 1 378 3 108 1 270 2 287 1 
257 4 60 1 190 1 164 1 247 2 366 2 225 1 81 1 240 2 32 2 278 1 232 1 76 1 251 4 252 2 
371 1 119 1 147 1 
371 1 119 1 147 1 
22 1 342 1 119 1 357 1 147 1 
371 1 119 1 147 1 
337 1 119 1 147 1 
337 1 119 1 147 1 
337 1 119 1 147 1 
119 1 147 1 
236 1 365 1 
310 1 360 1 89 1 364 1 73 2 225 1 55 2 29 1 31 1 116 4 316 8 343 1 200 1 77 2 281 1 186 1 242 1 353 1 307 1 19 4 287 1 49 1 271 1 
310 1 216 1 360 1 89 1 364 2 73 4 225 1 171 1 55 3 29 1 31 2 116 5 316 11 343 1 200 1 77 2 281 2 351 1 186 1 285 1 242 2 353 2 307 1 243 1 19 6 271 1 49 1 287 2 
310 1 216 1 360 1 89 1 364 3 73 6 225 1 171 2 55 4 29 1 31 3 116 10 316 19 343 1 200 3 77 3 281 3 122 1 370 1 17 1 43 2 351 1 186 1 84 1 242 3 45 1 353 1 307 1 243 2 19 9 271 1 49 1 287 3 
310 1 216 1 360 1 89 1 364 3 73 6 225 1 171 2 55 5 29 1 31 3 116 7 316 17 343 1 200 2 77 3 281 3 122 1 370 1 17 1 43 1 351 2 186 1 84 1 242 3 45 1 353 1 307 1 243 2 19 10 271 1 49 1 287 3 
310 1 360 1 89 1 364 1 73 2 225 1 55 2 29 1 31 1 116 4 316 8 343 1 200 1 77 2 281 1 186 1 242 1 353 1 307 1 19 4 287 1 49 1 271 1 
364 2 73 2 171 2 55 2 29 1 31 1 116 6 316 12 343 1 200 2 77 1 281 1 122 1 370 1 17 1 43 2 351 1 186 1 242 1 45 1 353 1 307 1 243 2 19 6 287 1 
310 1 216 1 360 1 89 1 364 3 73 8 225 1 171 2 55 5 29 1 31 4 116 8 316 18 343 1 200 2 77 3 281 4 122 1 370 1 17 1 43 1 351 2 186 1 84 2 242 4 45 1 353 1 307 1 243 2 19 10 271 1 49 1 287 4 
364 3 73 8 171 3 55 6 29 1 31 4 116 7 316 16 343 1 200 2 77 3 281 4 122 1 370 1 348 1 17 1 43 2 351 3 186 1 84 2 242 4 45 1 353 1 307 1 243 3 19 9 287 4 
310 1 360 1 89 2 364 1 351 3 55 6 116 4 316 7 19 3 200 1 77 3 49 3 271 3 
310 1 360 1 89 1 364 3 73 8 225 1 171 2 55 4 29 1 31 4 116 8 316 18 343 1 200 2 77 3 281 4 122 1 370 1 348 1 17 1 43 1 351 1 186 1 84 2 242 4 45 1 353 1 307 1 243 2 19 10 271 1 49 1 287 4 
310 1 281 2 360 1 89 1 364 1 73 4 225 1 351 1 55 3 84 1 31 2 242 2 116 4 316 8 19 4 200 1 77 2 287 2 49 1 271 1 
310 1 218 1 360 1 89 1 364 1 225 1 55 2 116 3 316 6 19 3 77 2 200 1 49 1 271 1 
281 1 216 1 43 1 364 1 73 2 171 1 351 1 55 2 31 1 242 1 116 2 243 1 316 4 19 2 77 1 200 1 287 1 
43 1 364 1 171 1 351 1 186 1 55 2 29 1 285 1 353 2 116 4 243 1 316 7 19 3 77 1 200 1 
310 1 360 1 89 1 289 1 364 3 73 4 225 1 171 2 55 9 29 2 31 2 116 12 118 1 316 23 200 3 77 5 234 1 281 2 43 2 351 4 285 1 84 2 242 2 353 2 243 2 19 11 271 2 49 2 287 2 
353 1 116 1 316 1 
29 1 316 1 19 1 
281 1 216 1 43 1 364 1 73 2 171 1 351 1 55 3 31 1 98 1 242 1 116 3 243 1 316 6 19 3 200 1 77 2 287 1 
364 2 73 2 171 2 55 2 29 1 31 1 116 6 316 12 343 1 200 2 77 1 281 1 122 1 370 1 17 1 43 2 351 1 186 1 242 1 45 1 353 1 307 1 243 2 19 6 287 1 
310 1 364 1 351 1 55 2 116 3 316 6 19 3 200 1 77 1 49 1 271 1 
281 1 360 1 89 1 73 2 351 1 55 2 84 1 31 1 242 1 116 2 316 3 19 1 77 1 234 1 271 1 49 1 287 1 
310 1 281 1 165 1 364 2 73 2 351 2 55 5 31 1 242 1 307 1 116 5 316 10 19 5 77 3 200 2 287 1 49 2 271 2 
281 1 364 1 73 2 351 1 55 1 31 1 242 1 307 1 243 1 316 2 19 2 287 1 
281 1 43 1 364 1 73 2 171 1 351 1 55 2 31 1 242 1 307 1 116 2 243 1 316 4 19 2 77 1 200 1 287 1 
281 3 348 1 73 6 351 1 55 2 84 1 31 3 242 3 307 1 116 2 316 3 19 1 77 1 234 1 287 3 49 1 271 1 
310 2 216 1 360 1 89 1 364 5 73 10 225 1 171 3 55 12 29 3 31 5 116 18 316 34 200 5 77 7 234 1 281 5 16 1 348 1 43 3 350 1 351 5 186 1 84 2 285 1 242 5 353 4 307 1 243 3 19 16 271 3 49 3 381 1 287 5 
138 1 99 1 378 1 294 1 300 1 26 1 157 1 
120 1 177 1 131 1 374 1 262 1 
28 1 6 1 78 1 14 1 218 1 33 1 175 1 153 1 269 1 108 1 363 1 
0 1 181 1 14 1 153 1 363 1 157 1 193 1 6 1 138 2 99 1 33 1 175 1 378 2 269 1 279 1 108 1 270 1 179 1 
0 2 40 1 181 1 14 1 273 1 153 1 64 1 363 3 157 2 193 1 6 1 138 2 99 1 158 1 33 2 175 1 378 2 279 1 108 1 59 1 270 2 358 1 179 1 
0 2 273 1 363 3 193 1 6 2 138 2 99 1 277 1 33 2 175 2 59 1 179 1 40 1 14 1 181 1 153 2 64 1 157 2 158 1 378 2 108 1 270 2 48 1 358 1 
0 1 68 1 338 1 363 4 6 3 33 1 175 3 251 1 252 1 59 1 255 2 40 1 14 1 153 3 123 1 349 1 286 1 327 2 210 1 269 1 108 1 48 1 358 1 
0 1 214 1 68 1 40 1 14 1 153 3 349 1 363 4 338 1 6 3 286 1 33 1 327 2 175 3 269 1 251 1 252 1 108 1 59 1 255 2 48 1 358 1 
6 1 14 1 175 1 153 1 108 1 127 1 
0 1 162 1 202 1 109 1 12 1 14 2 152 1 153 7 363 3 127 1 325 1 6 6 65 1 57 1 33 2 369 1 175 7 329 1 269 2 66 1 108 3 
0 1 89 1 336 1 339 1 193 1 6 1 55 2 138 2 99 2 200 1 148 1 14 1 153 1 301 1 156 1 157 1 108 1 270 1 19 3 271 1 310 1 360 1 363 1 364 1 70 2 73 4 27 1 225 1 31 2 75 2 33 1 175 1 116 3 279 1 316 6 77 2 179 1 281 2 181 1 324 1 242 2 130 1 329 1 378 2 46 1 287 2 49 1 
214 1 190 1 68 1 164 2 168 1 363 2 338 2 223 1 247 1 312 1 6 1 173 1 56 1 232 2 175 1 76 2 251 1 252 1 318 1 254 1 255 3 39 1 153 1 349 1 81 2 286 1 327 3 269 1 
0 1 109 1 14 1 182 1 153 2 363 2 127 1 6 2 286 1 33 1 175 2 329 1 108 2 
78 1 14 1 282 1 153 4 363 1 28 1 6 4 33 1 175 4 269 1 329 1 108 1 48 1 
0 1 40 1 14 1 153 2 363 1 44 1 184 1 5 1 6 2 65 1 33 1 175 2 66 1 108 2 
313 1 6 1 14 1 175 1 153 1 269 1 260 1 283 1 108 1 101 1 
280 1 202 1 14 1 153 2 363 1 6 2 33 1 175 2 369 1 329 1 108 1 
40 1 78 1 14 2 282 1 152 1 153 5 363 3 325 1 28 1 6 4 33 2 175 5 369 1 269 1 329 1 108 2 
40 1 78 1 14 2 282 1 153 5 363 3 325 1 28 1 6 4 229 1 33 2 175 5 369 1 269 1 329 1 108 2 
0 1 181 1 14 1 153 1 363 1 157 1 193 1 6 1 138 2 99 1 277 1 33 1 175 1 378 2 269 1 108 1 270 1 179 1 
0 1 109 1 40 1 12 1 14 1 153 1 363 1 6 1 65 1 33 1 175 1 66 1 108 2 
340 1 99 1 231 1 211 1 67 1 
68 1 39 1 13 1 15 1 273 1 135 1 64 1 340 1 99 1 158 1 327 2 231 2 267 1 141 1 211 2 251 1 252 1 67 2 255 2 
340 1 138 1 96 1 265 1 231 1 378 1 211 1 157 1 53 1 
340 1 141 1 135 1 
172 1 218 1 322 1 145 1 
172 1 69 1 292 1 25 1 322 1 372 1 145 1 
195 1 292 1 21 1 
69 1 321 2 24 1 25 3 322 1 372 1 311 1 172 1 292 3 87 1 145 1 88 1 
172 1 80 1 69 1 292 2 25 2 322 1 291 1 372 1 145 1 
313 1 69 1 197 1 292 1 25 1 51 1 347 1 283 1 372 1 145 1 88 1 
172 1 69 1 292 1 25 1 372 1 145 1 88 1 
172 2 69 1 292 1 25 1 322 1 372 1 88 1 
23 1 69 2 25 2 274 1 372 2 238 1 172 1 292 2 145 1 88 1 
344 1 69 1 25 3 347 1 322 1 372 1 172 1 80 2 304 1 292 3 145 2 88 1 132 1 
69 1 25 2 51 1 322 1 283 2 372 1 206 1 172 1 80 1 313 1 30 1 292 2 145 1 101 1 88 1 
344 1 69 2 25 4 347 1 322 1 372 2 291 1 172 1 80 2 292 4 143 1 145 2 88 1 
172 1 69 1 292 1 25 1 322 1 372 1 145 1 88 1 
344 1 321 1 69 1 24 1 25 4 347 1 322 2 311 1 372 1 373 1 172 2 80 2 292 4 145 3 
69 1 333 1 25 2 322 1 372 1 4 1 172 1 80 1 292 2 233 1 145 1 88 1 
69 1 321 2 24 1 25 3 322 1 372 1 311 2 172 1 292 3 145 1 253 1 88 1 
105 2 145 2 302 1 297 1 
69 1 264 1 292 1 25 1 372 1 88 1 
172 1 80 1 69 1 292 2 25 2 322 1 372 1 145 1 132 1 88 1 
341 1 
172 1 69 1 292 1 25 1 322 1 372 1 145 1 88 1 
69 1 321 1 25 3 322 1 372 1 80 1 172 1 292 3 145 1 88 1 132 1 
344 1 347 1 145 1 373 1 
172 1 145 1 

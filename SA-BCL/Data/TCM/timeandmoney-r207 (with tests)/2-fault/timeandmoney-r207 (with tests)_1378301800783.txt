#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (160,260) (160,260) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (160,260) (160,260) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (160,260) (160,260) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (160,260) (160,260) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 245 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 245 49 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 245 49 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (121,123,302) (130,331,338) (130,331,338) (130,331,338) 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (121,123,302) (130,331,338) (130,331,338) (130,331,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (121,123,302) (130,331,338) (130,331,338) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (121,123,302) (130,331,338) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (121,123,302) (121,123,302) (121,123,302) 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (121,123,302) (121,123,302) (121,123,302) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (121,123,302) (121,123,302) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 330 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio; | RETURN | 1258 | return null
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1427 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
67 3 93 1 273 1 223 1 25 1 344 1 366 3 11 2 62 1 194 2 332 1 258 1 298 2 
67 1 11 1 260 1 93 1 369 1 253 1 16 1 25 1 107 1 160 1 298 1 366 1 
67 1 11 1 260 1 93 1 369 1 253 1 16 1 25 1 107 1 160 1 298 1 366 1 
67 1 11 1 260 1 93 1 369 1 253 1 16 1 25 1 107 1 160 1 298 1 366 1 
67 1 11 1 260 1 93 1 369 1 253 1 16 1 25 1 107 1 160 1 298 1 366 1 
67 2 11 1 93 1 273 1 245 1 315 1 16 1 344 1 194 1 44 1 298 1 366 2 
67 2 211 1 93 1 148 1 333 1 72 1 25 1 119 1 366 2 162 1 11 1 253 1 194 1 332 1 258 1 298 1 
67 7 5 1 93 1 245 1 182 1 273 3 344 5 223 1 25 1 44 1 366 7 11 2 62 2 315 1 16 1 49 1 283 1 194 3 298 2 
67 7 5 1 93 1 245 1 182 1 273 3 344 5 223 1 25 1 44 1 366 7 11 2 62 2 315 1 16 1 49 1 283 1 194 3 298 2 
359 1 22 1 318 1 154 1 278 1 224 1 323 1 354 1 292 1 250 1 110 1 284 1 145 1 37 1 
73 1 
353 1 82 1 154 2 73 1 354 1 351 1 284 2 168 1 
301 1 214 1 353 2 154 5 73 1 263 2 185 1 354 2 188 1 328 1 257 1 329 1 179 1 206 2 111 2 351 1 284 5 180 1 168 1 
134 1 73 1 351 1 
266 1 73 1 346 2 
318 2 22 2 110 2 278 2 323 2 292 2 145 1 20 1 
92 1 272 2 91 1 318 3 222 2 278 2 279 1 323 2 199 1 45 1 280 2 232 2 233 1 145 1 20 1 22 2 212 1 23 1 55 1 128 1 291 1 264 1 292 2 10 2 132 1 189 1 268 1 191 1 339 1 110 3 296 1 193 1 66 1 316 1 242 1 88 1 243 1 
250 1 318 1 22 1 110 1 278 1 323 1 224 1 292 1 145 1 37 1 
113 1 318 1 149 1 53 1 154 1 157 1 278 1 73 1 367 1 250 1 267 1 110 1 351 1 284 1 
113 1 22 1 318 1 149 1 53 1 154 2 278 1 73 1 323 1 292 1 250 1 267 1 110 1 351 1 284 2 
353 1 154 1 354 1 284 1 377 1 
353 1 320 1 154 2 73 1 354 1 351 1 284 2 168 1 
353 1 154 1 284 1 
318 2 22 1 278 2 323 1 159 1 292 1 110 2 122 1 20 2 
170 1 289 1 290 1 
272 1 91 1 318 1 150 1 23 1 222 1 279 1 128 1 10 1 189 1 268 1 339 1 110 1 66 1 88 1 20 1 
91 1 272 1 170 1 22 1 318 2 23 1 222 1 278 1 279 1 128 1 376 1 292 1 10 1 189 1 268 1 339 1 110 2 342 1 66 1 88 1 
134 1 20 1 
318 3 22 3 110 3 278 3 323 1 376 1 292 3 20 1 
250 1 318 1 22 1 110 1 278 1 292 1 37 1 
250 1 318 1 22 1 110 1 122 1 278 1 323 1 159 1 292 1 
92 1 91 1 113 1 272 1 318 4 222 1 278 3 279 1 323 2 199 1 45 1 280 2 250 1 232 1 233 1 284 1 287 1 145 1 20 1 212 1 22 3 149 1 23 1 53 1 55 1 154 1 128 1 186 1 159 1 376 1 292 3 10 1 189 1 267 1 268 1 191 1 339 1 110 4 193 1 342 1 66 1 316 1 88 1 243 1 
367 1 318 2 22 1 63 1 110 2 278 2 376 1 292 1 20 1 
113 1 22 3 318 3 149 1 53 1 154 1 278 3 323 1 73 1 186 1 159 1 376 2 292 3 250 1 267 1 110 3 342 1 284 1 102 1 
170 1 22 2 318 2 278 2 323 1 290 1 376 1 159 1 292 2 110 2 
272 1 91 1 318 1 23 1 222 1 279 1 128 1 10 1 189 1 268 1 339 1 110 1 66 1 88 1 20 1 
272 1 91 1 318 1 23 1 222 1 279 1 128 1 345 1 10 1 252 1 339 1 110 1 66 1 88 1 20 1 
92 1 170 2 172 1 137 1 115 1 43 1 45 2 280 2 200 1 368 1 140 1 233 1 232 4 3 1 289 2 290 2 191 1 296 2 193 1 65 1 34 1 300 1 316 1 243 1 
250 1 149 1 318 1 22 1 110 1 278 1 166 1 292 1 
22 4 318 5 373 1 278 5 323 1 376 2 159 1 292 4 227 1 367 1 63 1 110 5 342 1 20 1 
250 1 318 2 22 2 110 2 278 2 166 1 292 2 37 1 
98 1 203 1 78 1 
99 1 198 1 196 1 203 2 78 2 176 1 
203 1 78 1 
203 1 78 1 
196 1 176 1 
196 1 176 1 
196 1 176 1 
203 1 78 1 117 1 
203 1 78 1 117 1 
203 1 78 1 117 1 
203 1 237 1 78 1 
203 1 237 1 78 1 
203 1 237 1 78 1 
171 1 6 3 124 2 70 1 7 1 154 2 321 1 73 1 138 1 295 2 229 2 99 1 203 2 165 2 235 1 78 2 284 2 381 1 299 2 
318 2 70 1 278 2 347 1 98 1 203 1 350 1 78 1 284 1 79 1 18 1 20 1 22 2 6 1 124 1 104 1 154 1 292 2 295 1 60 1 110 2 165 1 87 1 299 1 
360 2 333 1 119 1 131 1 16 1 208 1 
16 1 
211 1 333 1 119 1 
333 1 16 2 119 1 288 1 
360 1 333 1 8 1 119 1 131 1 16 1 208 1 
301 1 303 1 115 1 324 1 73 2 346 3 347 1 140 1 204 2 350 1 205 1 179 2 206 1 284 5 351 1 285 2 3 1 259 1 313 1 353 1 153 1 154 5 54 2 263 1 354 4 185 3 265 1 266 1 65 1 87 1 111 1 168 1 
301 1 40 1 115 3 73 5 346 9 177 1 347 4 140 3 178 1 204 6 329 1 179 6 206 2 284 9 351 1 285 6 3 3 209 1 259 2 313 1 353 6 153 3 154 9 126 5 263 2 354 7 185 8 377 5 265 2 266 3 190 1 65 3 111 2 358 1 168 1 
73 3 324 1 115 1 346 4 347 1 140 1 204 2 205 1 329 1 206 1 179 2 351 1 284 3 285 2 3 1 259 1 154 3 54 1 153 1 263 1 354 2 185 3 265 1 266 2 65 1 111 1 
73 4 324 1 115 2 346 7 347 2 140 2 178 1 204 4 329 1 205 1 206 1 179 4 351 1 284 4 285 4 3 2 259 1 154 4 54 2 153 2 263 1 185 5 354 3 265 1 266 3 190 1 65 2 111 1 358 1 
114 1 
201 1 339 1 134 1 
339 1 247 1 
339 1 128 1 
201 2 370 1 339 3 128 1 241 1 66 1 
339 1 128 1 66 1 
339 1 30 1 
103 1 274 1 276 2 125 1 105 1 334 1 137 3 42 1 249 1 187 1 45 3 140 1 349 1 296 4 232 7 34 2 3 1 36 1 
92 1 274 1 276 3 42 2 115 3 137 10 249 1 116 3 45 15 280 2 306 4 349 2 140 4 233 1 232 31 286 1 352 1 3 4 103 2 153 3 105 1 334 2 106 1 262 1 187 5 108 1 337 1 191 1 296 16 65 3 34 5 36 1 316 1 221 1 
92 1 274 1 276 2 42 2 137 4 326 1 45 6 139 1 280 2 349 1 140 3 233 1 232 14 3 3 103 2 334 1 105 2 187 1 335 1 191 1 296 8 34 3 316 1 36 1 
103 1 274 1 276 2 105 1 334 1 137 3 42 1 249 1 187 1 45 3 140 1 349 1 296 4 232 7 34 2 3 1 36 1 
103 1 274 1 276 2 105 1 334 1 137 3 42 1 249 1 187 1 45 3 140 1 349 1 296 4 232 7 34 2 3 1 36 1 
91 1 272 1 67 1 13 2 222 1 279 1 366 1 120 1 141 2 146 1 52 1 215 1 25 2 56 2 128 1 10 1 239 1 11 1 356 1 339 1 357 1 298 1 88 1 
91 1 67 1 272 1 93 1 13 1 333 1 222 1 25 1 56 1 119 1 118 1 97 1 130 1 366 1 10 1 11 1 121 1 338 1 141 1 16 1 76 1 331 1 88 1 298 1 288 1 
91 1 67 1 272 1 93 1 13 1 333 1 222 1 25 1 56 1 119 1 118 1 161 1 130 1 366 1 10 1 11 1 121 1 338 1 141 1 16 1 76 1 331 1 88 1 298 1 288 1 
91 1 67 2 272 1 13 1 333 1 222 1 344 1 25 1 56 1 119 1 118 1 97 1 130 1 239 1 366 2 10 1 11 1 121 1 141 1 16 1 76 1 331 1 88 1 298 1 288 1 382 1 
91 1 67 1 272 1 13 1 333 1 222 1 344 1 25 1 56 1 119 1 118 1 97 1 366 1 10 1 121 1 141 1 16 1 331 1 88 1 288 1 382 1 
89 1 
301 1 91 1 95 1 304 2 346 2 2 1 250 1 311 1 206 1 351 1 146 1 52 1 149 1 213 4 353 6 314 2 53 1 156 2 154 5 157 1 263 1 265 1 10 2 266 2 267 1 110 1 111 1 168 3 68 2 272 2 113 1 318 1 317 1 222 2 279 2 278 1 73 2 322 1 325 1 228 1 367 1 14 1 371 1 179 2 284 5 181 1 21 1 128 1 185 2 27 2 378 2 294 2 339 1 240 1 88 1 
113 1 318 1 317 1 278 1 322 1 2 1 367 1 228 1 250 1 284 3 181 1 149 1 213 2 353 2 53 1 82 1 154 3 157 1 378 1 267 1 110 1 168 1 
113 1 318 1 317 1 278 1 322 1 73 1 2 1 367 1 228 1 250 1 284 3 351 1 181 1 149 1 213 3 353 1 53 1 82 1 154 3 157 1 27 1 267 1 110 1 168 1 
113 1 318 1 317 1 278 1 322 1 73 1 304 1 2 1 367 1 228 1 250 1 284 3 351 1 181 1 149 1 213 3 353 2 82 1 53 1 154 3 157 1 378 1 27 1 267 1 110 1 168 1 
39 1 301 1 304 4 2 1 250 1 206 1 351 5 213 6 149 1 353 7 53 1 314 2 154 5 156 2 157 1 263 1 266 2 267 1 110 1 111 1 168 3 113 1 68 2 317 1 318 1 278 1 322 1 73 5 228 1 367 1 14 1 234 1 179 1 284 5 181 1 82 1 83 1 185 1 378 4 27 4 294 2 240 1 380 1 38 1 
301 1 304 2 2 1 346 2 250 1 206 1 351 1 213 4 149 1 353 4 53 1 314 2 154 4 156 2 157 1 263 1 266 2 267 1 110 1 111 1 168 2 113 1 68 2 317 1 318 1 278 1 322 1 73 2 367 1 228 1 14 1 371 1 179 1 284 4 181 1 185 1 294 2 378 2 27 2 240 1 
68 2 113 1 39 1 301 1 318 1 317 1 278 1 73 1 322 1 304 2 2 1 367 1 228 1 250 1 14 1 179 1 206 1 351 1 284 4 181 1 149 1 213 4 353 4 314 2 53 1 156 2 154 4 83 1 157 1 263 1 185 1 27 2 378 2 294 2 266 2 267 1 240 1 110 1 111 1 380 1 168 2 
68 2 113 1 39 1 301 1 318 1 317 1 278 1 73 1 322 1 304 2 2 1 367 1 228 1 250 1 14 1 179 1 206 1 351 1 284 4 181 1 149 1 213 4 353 4 314 2 53 1 156 2 154 4 83 1 157 1 263 1 185 1 27 2 378 2 294 2 266 2 267 1 240 1 110 1 111 1 380 1 168 2 
113 1 301 1 318 1 317 1 278 1 73 1 322 1 74 2 304 2 305 1 346 2 2 1 367 1 228 1 250 1 14 1 230 1 179 1 206 1 351 1 284 4 181 1 149 1 213 4 353 4 53 1 156 2 154 4 157 1 263 1 185 1 27 2 378 2 294 2 163 2 267 1 110 1 64 1 111 1 380 1 168 2 
68 2 301 1 39 1 113 1 318 1 317 1 278 1 73 1 322 1 304 3 2 1 367 1 228 1 250 1 14 1 179 1 206 1 234 1 351 1 284 4 181 1 149 1 213 5 353 5 314 2 53 1 156 2 154 4 83 1 157 1 263 1 185 1 294 2 378 3 27 3 266 2 267 1 240 1 110 1 111 1 380 1 168 2 
68 2 301 1 39 1 113 1 318 1 317 1 278 1 73 1 322 1 304 3 2 1 367 1 228 1 250 1 14 1 179 1 206 1 234 1 351 1 284 4 181 1 149 1 213 5 353 5 314 2 53 1 156 2 154 4 83 1 157 1 263 1 185 1 294 2 378 3 27 3 266 2 267 1 240 1 110 1 111 1 380 1 168 2 
301 1 305 1 304 2 2 1 346 2 250 1 206 1 351 1 213 4 149 1 353 4 53 1 154 4 156 2 157 1 263 1 163 2 267 1 110 1 111 1 168 2 113 1 317 1 318 1 278 1 322 1 73 1 74 2 367 1 228 1 14 1 371 1 179 1 284 4 181 1 185 1 294 2 378 2 27 2 
91 2 272 8 92 2 69 1 318 1 275 1 71 1 222 8 278 1 279 2 174 1 43 1 45 1 97 1 280 4 233 2 232 2 80 1 146 1 52 1 22 1 55 1 128 2 376 1 291 2 161 1 292 1 10 7 132 1 339 3 191 2 110 1 296 1 193 2 297 1 33 1 88 2 316 2 243 2 
92 1 170 1 318 1 197 1 278 1 137 1 323 1 115 1 45 2 280 2 140 1 233 1 232 3 3 1 22 1 153 1 289 1 290 1 159 1 292 1 217 1 191 1 110 1 296 1 193 1 65 1 34 1 316 1 243 1 
92 1 170 1 103 1 274 1 276 1 105 1 289 1 137 2 42 1 290 1 43 1 45 3 280 2 140 1 191 1 232 6 296 3 233 1 134 1 193 1 34 2 3 1 316 1 36 1 243 1 20 2 
92 2 170 11 197 1 137 2 115 2 365 1 116 3 45 6 306 3 280 4 140 1 233 2 232 14 101 1 352 1 286 1 3 2 20 1 183 1 55 1 153 2 289 11 290 4 187 1 84 1 132 1 191 2 296 8 193 1 65 1 34 1 316 2 243 2 
91 1 272 1 92 1 318 2 197 1 222 1 279 1 278 1 45 1 280 2 251 1 233 1 232 2 20 1 22 1 150 1 23 1 24 1 55 1 155 1 128 1 290 1 376 1 292 1 10 1 132 1 189 1 268 1 339 1 191 1 110 2 296 1 193 1 342 1 66 1 88 1 316 1 243 1 
92 3 91 2 197 1 42 1 137 8 1 1 45 10 97 1 202 2 140 3 3 3 4 2 103 1 212 2 55 1 153 2 105 1 59 1 10 3 268 2 110 3 65 2 66 2 316 3 272 3 170 7 318 3 362 1 274 1 276 1 12 2 222 3 279 1 278 1 115 2 280 6 233 3 232 20 20 2 22 1 23 2 184 2 289 7 128 2 290 7 376 1 187 4 292 1 132 1 189 2 191 3 339 2 296 10 342 1 193 3 34 4 36 1 88 2 243 3 
92 1 170 1 137 1 289 1 115 1 290 1 43 1 187 1 280 2 200 1 191 1 232 2 233 1 296 2 193 1 316 1 3 1 243 1 
92 1 170 1 137 1 289 1 290 1 43 1 45 2 280 2 191 1 140 1 232 2 233 1 193 1 65 1 34 1 316 1 300 1 243 1 
92 1 170 2 153 1 137 2 289 2 115 1 290 2 43 1 187 1 45 2 280 2 140 1 191 1 232 4 233 1 296 2 193 1 65 1 34 1 316 1 3 1 243 1 
92 1 170 1 137 1 289 1 115 1 290 1 187 1 280 2 200 1 191 1 232 2 233 1 296 2 193 1 33 1 316 1 3 1 243 1 
92 1 170 1 137 1 289 1 290 1 45 2 280 2 191 1 140 1 232 2 233 1 193 1 33 1 65 1 34 1 316 1 300 1 243 1 
92 1 170 2 153 1 137 2 289 2 115 1 290 2 187 1 45 2 280 2 140 1 191 1 232 4 233 1 296 2 193 1 65 1 33 1 34 1 316 1 3 1 243 1 
92 1 170 2 153 1 137 2 289 2 115 1 290 2 187 1 45 2 280 2 140 1 191 1 233 1 296 2 232 4 193 1 65 1 34 1 316 1 3 1 243 1 
91 1 272 1 92 1 318 1 222 1 279 1 45 1 280 2 232 2 233 1 20 1 212 1 23 1 55 1 128 1 10 1 132 1 189 1 268 1 339 1 191 1 110 1 296 1 193 1 66 1 88 1 316 1 243 1 
91 1 169 1 272 1 92 1 318 1 222 1 279 1 345 1 45 1 280 2 252 1 232 2 233 1 20 1 23 1 55 1 128 1 10 1 132 1 339 1 191 1 110 1 296 1 193 1 66 1 88 1 316 1 243 1 
92 1 170 2 197 1 153 1 137 2 289 2 115 1 290 2 187 1 45 2 280 2 140 1 191 1 232 4 233 1 296 2 193 1 65 1 34 1 316 1 3 1 243 1 
91 1 272 1 92 1 170 2 318 1 12 1 222 1 137 2 115 1 45 2 280 2 140 1 232 4 233 1 3 1 212 1 23 1 153 1 289 2 290 2 128 1 187 1 161 1 10 1 189 1 268 1 339 1 191 1 110 1 296 2 193 1 65 1 34 1 66 1 88 1 316 1 243 1 
92 1 170 1 318 1 197 1 278 1 137 1 323 1 115 1 45 1 280 2 140 1 233 1 232 3 17 1 3 1 22 1 153 1 289 1 290 1 187 1 159 1 292 1 191 1 110 1 296 2 193 1 65 1 316 1 243 1 
92 2 136 1 363 1 115 3 137 6 326 1 116 1 45 10 306 2 280 4 47 1 140 3 233 2 232 19 282 1 352 1 286 1 3 3 153 3 158 2 9 1 187 3 191 2 341 1 340 2 269 1 296 9 65 3 34 3 316 2 
92 3 244 1 363 2 137 4 115 3 326 1 116 2 45 12 225 1 280 6 306 2 47 1 140 2 233 3 232 26 282 1 352 2 236 1 3 3 152 1 153 3 158 4 9 2 216 1 187 2 337 2 191 3 340 1 341 1 296 14 65 2 34 2 195 1 316 3 
92 3 244 1 136 1 137 8 42 1 45 21 306 4 47 1 140 5 352 3 3 5 103 1 152 1 153 4 105 1 9 1 158 4 216 1 219 1 65 4 316 3 363 2 274 1 276 1 115 4 326 1 116 3 225 1 280 6 232 41 233 3 282 1 286 1 236 1 187 4 337 1 191 3 341 1 340 1 296 20 34 4 195 1 36 1 
92 4 244 1 136 1 274 1 363 2 276 1 42 1 115 4 137 7 326 1 116 3 225 1 45 18 306 4 280 8 47 1 140 4 233 4 232 38 282 1 352 3 286 1 236 1 3 5 103 1 152 1 153 4 105 1 216 1 158 4 9 1 187 3 337 2 191 4 340 1 341 1 296 20 219 1 65 3 34 4 195 1 36 1 316 4 
92 2 244 1 274 1 363 1 276 1 42 1 115 7 137 14 326 1 116 4 225 1 45 25 306 4 280 4 47 1 140 8 233 2 232 52 282 1 352 2 286 2 236 1 3 8 103 1 183 2 152 1 153 7 105 1 216 1 158 4 9 1 187 7 337 1 191 2 340 1 341 1 296 27 65 7 34 7 195 1 36 1 316 2 
295 1 171 1 99 1 124 1 203 1 165 1 138 1 78 1 299 1 238 1 
60 1 98 1 
295 1 46 1 310 1 124 1 203 1 277 1 165 1 78 1 299 1 
171 1 6 2 124 1 70 1 7 1 154 1 73 1 138 1 295 1 229 1 99 1 203 1 165 1 235 1 284 1 78 1 381 1 299 1 
171 1 6 2 124 1 70 1 7 1 154 1 73 1 138 1 295 1 229 1 99 1 203 1 165 1 235 1 284 1 78 1 381 1 299 1 
171 1 6 2 124 1 70 1 7 1 154 1 73 1 138 1 295 1 229 1 99 1 203 1 165 1 235 1 284 1 78 1 381 1 299 1 
198 1 261 1 117 1 
198 1 261 1 117 1 
237 1 144 1 
198 1 237 1 144 1 
104 1 18 1 
318 2 278 2 229 1 347 1 98 1 203 1 312 1 350 1 284 1 78 1 79 1 18 1 20 1 22 2 6 1 124 1 7 1 104 1 154 1 354 1 292 2 295 1 60 1 110 2 165 1 87 1 299 1 
261 1 117 1 
198 1 237 1 144 1 
91 1 272 2 92 1 318 2 275 1 197 1 222 2 278 2 174 1 45 1 281 1 280 2 327 1 233 1 232 2 51 1 55 1 128 1 291 2 293 1 10 2 132 1 339 1 191 1 110 2 296 1 193 1 343 1 88 1 316 1 243 1 
91 1 272 1 52 1 13 1 222 1 279 1 128 1 10 1 61 1 356 1 339 1 167 1 88 1 146 1 
91 1 272 1 302 1 123 1 13 1 333 1 222 1 119 1 118 1 97 1 10 1 61 1 121 1 16 1 76 1 88 1 288 1 
91 1 272 2 302 1 123 1 13 1 333 1 222 2 119 1 161 1 118 1 97 1 10 2 61 1 121 1 16 1 76 1 88 1 288 1 
272 1 91 1 123 1 13 1 333 1 222 1 119 1 118 1 97 1 109 1 10 1 121 1 16 1 76 1 88 1 288 1 
142 1 
301 1 214 1 73 1 263 1 185 1 328 1 206 1 111 1 179 1 351 1 
246 2 153 2 115 2 73 5 185 5 346 10 266 5 140 2 31 1 204 5 65 2 179 5 285 5 3 2 4 1 
353 1 154 1 73 1 351 1 284 1 168 1 
91 1 301 1 272 4 222 4 279 2 325 2 311 1 77 1 329 1 206 2 179 2 284 3 146 1 52 1 21 1 353 4 154 3 374 1 128 1 263 2 185 2 265 2 10 4 339 1 86 2 133 1 111 2 88 1 168 2 
214 1 328 1 134 1 73 1 185 1 179 1 351 1 
301 1 68 1 353 1 314 1 154 1 73 2 263 1 185 1 346 1 266 1 240 1 206 1 111 1 179 1 351 1 284 1 168 1 
91 4 301 4 246 2 247 3 94 1 346 12 201 2 308 2 140 2 100 1 204 6 206 4 351 2 143 2 3 2 4 2 214 1 353 5 154 5 153 2 263 4 57 2 161 1 265 2 10 3 266 6 267 2 220 2 65 2 111 4 66 3 168 3 272 3 271 1 222 3 279 1 173 2 73 8 115 2 325 1 328 1 370 1 372 2 179 8 284 5 285 6 128 3 185 9 339 10 30 2 86 1 133 1 31 2 88 3 
301 2 244 1 246 2 319 1 73 5 115 2 325 1 116 1 225 1 346 6 306 1 15 1 140 2 204 5 206 2 179 5 284 1 351 2 285 5 352 1 236 1 3 2 353 1 154 1 153 2 263 2 185 8 216 1 265 1 266 3 31 1 65 2 111 2 195 1 168 1 
301 1 39 1 359 1 318 1 246 2 278 1 42 1 224 1 323 1 250 1 140 1 206 1 179 2 284 1 3 2 145 1 103 1 22 1 154 1 105 1 263 1 185 2 292 1 335 1 31 1 110 1 111 1 37 1 
272 1 91 1 92 1 318 3 222 1 279 1 278 2 323 2 199 1 45 1 280 2 232 1 233 1 145 1 20 1 22 2 212 1 23 1 55 1 128 1 292 2 10 1 189 1 268 1 191 1 339 1 110 3 193 1 66 1 316 1 88 1 243 1 
301 1 276 1 73 4 263 1 185 1 325 1 265 1 346 4 266 2 204 2 179 2 206 1 111 1 351 2 285 2 
295 1 124 1 104 1 256 1 138 1 
295 1 124 1 375 1 
295 1 124 1 375 1 
295 1 124 1 375 1 
295 1 124 1 50 1 
295 1 124 1 50 1 
295 1 124 1 50 1 
295 1 124 1 
203 1 78 1 
92 1 103 2 105 1 42 2 137 5 326 1 187 2 45 5 335 1 280 2 191 1 140 2 233 1 296 5 232 10 34 3 316 1 3 2 
92 1 115 1 137 1 326 1 187 1 280 2 191 1 233 1 296 2 232 2 316 1 3 1 
92 1 153 1 137 2 115 1 326 1 187 1 45 2 280 2 140 1 191 1 233 1 296 2 232 4 65 1 34 1 316 1 3 1 
92 3 103 1 136 1 42 1 137 2 326 1 0 1 187 1 45 2 280 6 337 1 191 3 232 3 233 3 296 1 34 1 316 3 
92 5 274 1 136 1 276 1 42 3 115 3 137 12 326 1 0 1 116 3 45 18 306 4 280 10 140 5 233 5 232 34 352 1 286 1 3 5 103 3 153 3 105 2 262 1 187 5 108 1 337 2 191 5 296 16 65 3 34 7 35 1 36 1 316 5 221 1 
92 2 103 1 274 1 276 1 105 1 137 3 42 1 187 1 45 4 280 4 337 1 140 1 191 2 232 8 296 4 233 2 34 2 3 1 316 2 36 1 
103 1 274 1 276 1 105 1 42 1 137 2 45 3 140 1 134 1 296 3 232 6 34 2 36 1 3 1 
92 1 153 1 137 2 115 1 187 1 45 2 280 2 140 1 191 1 233 1 296 2 232 4 65 1 34 1 35 1 316 1 3 1 
153 1 115 1 137 2 116 1 187 1 45 4 306 2 140 1 232 7 296 3 65 1 34 1 352 1 286 1 3 1 
92 2 274 1 276 1 42 2 137 9 115 2 365 1 116 2 0 1 45 12 306 2 280 4 140 3 232 23 233 2 286 1 3 3 103 2 183 1 153 2 105 1 187 4 337 2 191 2 296 11 65 2 34 5 36 1 316 2 
232 1 45 1 306 1 
232 1 296 1 116 1 
92 1 153 1 115 1 137 3 187 1 45 3 280 2 191 1 140 1 233 1 232 6 296 3 65 1 34 2 35 1 316 1 3 1 4 1 
92 1 244 1 115 2 137 2 326 1 116 1 45 6 225 1 306 1 280 2 140 2 232 12 233 1 352 1 236 1 3 2 153 2 216 1 187 1 191 1 296 6 65 2 34 1 195 1 316 1 
103 1 105 1 42 1 137 2 187 1 45 3 140 1 296 3 232 6 34 1 3 1 
92 1 103 1 274 1 137 2 42 1 187 1 0 1 45 2 280 2 337 1 191 1 296 1 232 3 233 1 34 1 316 1 36 1 
92 1 274 1 276 1 42 1 137 2 326 1 116 1 45 4 306 1 280 2 140 1 232 8 233 1 352 1 3 1 103 1 105 1 216 1 191 1 296 4 34 2 316 1 36 1 
92 2 274 1 276 1 42 1 115 1 137 3 326 1 116 1 45 5 306 2 280 4 140 1 232 11 233 2 352 1 286 1 3 2 103 1 153 1 105 1 216 1 187 1 191 2 296 6 34 2 35 1 36 1 316 2 
92 3 244 1 274 1 276 1 42 1 115 2 137 4 326 1 116 1 45 10 225 1 306 1 280 6 140 3 232 19 233 3 352 1 236 1 3 3 103 1 153 2 105 1 216 1 187 1 337 1 191 3 296 9 65 2 34 3 35 1 195 1 36 1 316 3 
92 3 244 1 274 1 276 1 42 1 115 2 137 5 326 1 116 1 45 7 225 1 306 1 280 6 140 2 232 17 233 3 352 1 236 1 3 3 103 1 153 2 105 1 216 1 187 2 337 1 191 3 296 10 65 1 34 3 35 1 195 1 36 1 316 3 
92 1 274 1 276 1 42 1 137 2 326 1 116 1 45 4 306 1 280 2 140 1 232 8 233 1 352 1 3 1 103 1 105 1 216 1 191 1 296 4 34 2 316 1 36 1 
92 1 244 1 115 2 137 2 326 1 116 1 45 6 225 1 306 1 280 2 140 2 232 12 233 1 352 1 236 1 3 2 153 2 216 1 187 1 191 1 296 6 65 2 34 1 195 1 316 1 
92 4 244 1 274 1 276 1 42 1 115 2 137 5 326 1 116 1 45 8 225 1 306 1 280 8 140 2 232 18 233 4 352 1 236 1 3 3 103 1 153 2 105 1 216 1 187 2 337 2 191 4 296 10 65 1 34 3 195 1 35 1 36 1 316 4 
92 4 244 1 136 1 115 3 137 6 326 1 116 1 45 7 225 1 306 1 280 8 140 2 232 16 233 4 352 1 236 1 3 3 153 3 216 1 187 3 337 2 191 4 296 9 65 2 34 3 195 1 316 4 
103 3 274 2 105 1 42 3 137 6 187 3 45 4 140 1 232 7 296 3 34 3 36 1 3 1 
92 4 244 1 274 1 136 1 276 1 42 1 115 2 137 4 326 1 116 1 45 8 225 1 306 1 280 8 140 2 232 18 233 4 352 1 236 1 3 3 103 1 153 2 105 1 216 1 187 1 337 2 191 4 296 10 65 1 34 3 195 1 36 1 316 4 
367 1 318 1 110 1 63 1 278 1 226 1 20 1 
318 1 278 1 175 1 226 1 367 1 28 1 48 1 63 1 110 1 255 1 20 1 19 1 
91 1 272 4 52 1 222 4 279 1 128 1 161 1 10 4 379 1 339 1 88 1 146 1 147 1 
272 2 91 2 362 1 222 2 248 1 364 1 128 1 10 2 339 1 86 1 218 1 66 1 88 1 90 1 
211 1 91 1 272 1 333 1 222 1 279 1 119 1 88 1 118 1 10 1 
91 1 272 2 275 1 339 1 222 2 128 1 88 1 161 1 293 1 97 1 10 2 
272 5 91 2 52 1 275 1 222 5 279 1 128 2 161 1 10 4 379 1 339 3 86 1 297 1 80 1 88 2 146 1 
272 5 91 2 52 1 275 1 151 1 222 5 279 1 128 2 161 1 10 4 379 1 339 3 86 1 297 1 88 2 146 1 
91 1 272 1 52 1 339 1 134 1 222 1 279 1 128 1 88 1 146 1 10 1 
91 1 272 1 22 1 318 2 23 1 222 1 278 1 279 1 128 1 376 1 292 1 10 1 268 1 339 1 110 2 66 1 88 1 20 1 
91 1 272 1 149 1 22 2 318 2 23 1 53 1 222 1 173 1 278 2 128 2 376 1 292 1 10 1 250 1 268 1 30 1 339 3 110 2 86 1 66 2 88 1 20 1 
272 2 91 1 318 2 222 2 278 2 173 1 250 1 252 1 147 1 20 1 22 2 149 1 23 1 53 1 128 2 376 1 292 1 10 2 339 3 30 1 86 1 110 2 66 2 88 1 
91 1 272 3 353 1 247 1 154 2 222 3 279 1 173 1 73 1 128 1 307 1 10 3 201 1 267 1 30 1 164 1 339 4 86 1 351 1 66 1 284 2 88 1 147 1 
91 1 272 3 353 1 247 1 154 2 222 3 279 1 173 1 73 1 128 1 10 3 201 1 267 1 30 1 339 4 86 1 220 1 351 1 66 1 284 2 88 1 147 1 
91 1 272 1 69 1 222 1 88 1 10 1 
272 7 91 3 69 1 275 1 71 1 222 7 279 2 128 2 291 1 161 1 97 1 10 6 370 1 339 3 231 1 218 1 297 1 66 1 80 1 88 2 90 1 
92 2 91 1 197 1 42 1 137 2 45 3 202 1 140 1 3 1 212 1 103 1 105 1 161 1 10 1 268 1 110 2 66 1 316 2 272 1 170 1 318 2 274 1 12 1 276 1 222 1 278 1 280 4 233 2 232 6 20 2 22 1 23 1 289 1 290 1 128 1 376 1 292 1 189 1 191 2 339 1 296 3 343 1 193 2 34 2 88 1 36 1 243 2 
272 1 301 2 247 1 222 1 279 1 73 1 201 1 328 1 308 1 372 1 179 1 206 2 351 1 284 3 214 1 353 2 154 3 263 2 57 1 185 1 354 1 10 1 267 1 339 2 133 1 220 1 111 2 168 1 
272 2 271 1 91 2 69 1 222 2 128 1 161 1 10 2 201 1 370 1 339 2 66 1 88 1 
91 1 272 1 22 1 318 2 23 1 222 1 278 1 279 1 128 1 376 1 292 1 10 1 252 1 339 1 110 2 66 1 88 1 20 1 
272 1 91 2 222 1 128 1 10 1 370 1 339 1 86 1 231 1 218 1 66 1 88 1 90 1 
318 1 278 1 355 1 281 1 327 1 85 1 348 1 110 1 51 1 
81 1 85 1 309 1 
210 1 85 1 348 1 355 1 20 1 
210 2 113 1 149 1 81 1 53 1 154 2 73 1 58 1 354 1 186 1 355 2 250 1 267 1 85 1 309 1 348 2 351 1 284 2 20 1 
67 1 11 1 93 1 194 1 332 1 258 1 298 1 366 1 
67 4 273 1 361 1 72 1 344 2 366 4 11 1 62 1 270 1 194 3 332 2 258 2 298 1 135 1 
67 2 93 1 344 1 96 1 129 1 366 2 11 1 283 1 194 1 332 1 298 1 258 1 
67 3 11 1 93 1 361 2 72 2 254 1 194 1 332 1 258 1 298 1 135 1 366 3 
29 2 41 1 194 2 207 1 
67 1 11 1 93 1 127 1 298 1 366 1 
67 2 11 1 93 1 182 1 344 1 194 1 332 1 258 1 298 1 366 2 
26 1 
67 1 11 1 93 1 194 1 332 1 258 1 298 1 366 1 
134 1 194 1 332 1 258 1 
67 1 11 1 194 1 332 1 258 1 298 1 366 1 
67 1 141 1 25 1 
67 3 11 1 93 1 361 1 72 2 32 1 194 1 332 1 258 1 298 1 135 1 366 3 
67 2 11 1 344 1 194 1 44 1 332 1 258 1 298 1 366 2 
67 1 11 1 93 1 273 1 315 1 16 1 194 1 298 1 366 1 
67 1 11 1 93 1 194 1 332 1 298 1 366 1 
67 1 11 1 93 1 332 2 258 1 298 1 366 1 
67 2 93 1 366 2 11 2 336 1 192 1 194 1 332 1 298 2 112 1 
67 3 93 1 5 1 182 1 273 1 344 2 366 3 11 1 62 1 194 2 332 1 258 1 298 1 
67 1 11 1 93 1 333 1 16 1 330 1 298 1 119 1 288 1 366 1 
67 4 93 1 273 1 344 2 75 1 44 1 366 4 11 2 62 1 194 2 332 1 258 1 298 2 
67 3 93 1 182 1 344 1 72 1 366 3 11 1 194 1 298 1 258 1 332 1 
62 1 273 1 270 1 194 1 
194 1 332 1 

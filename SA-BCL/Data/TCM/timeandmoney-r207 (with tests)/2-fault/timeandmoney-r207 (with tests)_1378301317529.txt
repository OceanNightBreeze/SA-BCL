#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 287 244 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V | STATEMENT | 577 | stmt -> ;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
262 1 136 1 167 1 315 9 237 1 289 3 343 1 114 1 153 1 240 2 317 1 52 1 92 9 54 1 33 1 35 4 174 5 137 6 175 1 58 1 98 2 100 2 140 1 42 2 249 2 61 2 19 2 84 1 
262 1 136 1 167 1 315 9 237 1 289 3 343 1 114 1 153 1 240 2 317 1 52 1 92 9 54 1 33 1 35 4 174 5 137 6 175 1 58 1 98 2 100 2 42 2 140 1 249 2 61 2 19 2 84 1 
262 1 136 1 167 1 315 10 237 1 289 4 343 1 114 1 153 1 240 2 317 1 52 1 92 10 54 1 33 1 35 5 174 6 137 7 175 1 58 1 98 2 100 2 42 2 140 1 249 2 61 2 19 2 84 1 
262 1 136 1 167 1 315 7 237 1 289 2 343 1 114 1 153 1 240 2 317 1 52 1 92 7 33 1 35 3 174 4 137 4 175 1 58 1 98 2 100 1 42 2 140 1 249 2 61 2 19 2 84 1 
262 1 100 2 136 1 289 1 315 4 249 1 42 1 240 1 61 1 19 1 52 1 92 4 54 1 33 1 137 3 35 2 174 3 175 1 
98 1 136 1 237 1 315 2 103 1 249 1 114 1 196 1 240 1 61 1 19 1 52 1 92 2 174 1 175 1 191 1 
98 1 136 1 315 3 289 1 240 2 317 1 61 2 52 1 92 3 35 1 174 2 137 1 175 1 
262 1 136 1 289 3 315 9 151 1 343 1 240 2 317 1 52 1 92 9 94 1 54 1 33 1 35 4 137 7 174 5 175 1 98 1 100 2 42 1 249 1 61 2 19 1 84 1 
262 1 136 1 289 3 315 9 151 1 343 1 240 2 317 1 52 1 92 9 94 1 54 1 33 1 35 4 137 7 174 5 175 1 98 1 100 2 42 1 249 1 61 2 19 1 84 1 
172 1 131 1 341 1 
172 1 362 1 134 2 
186 1 11 2 268 1 353 2 5 2 281 2 286 2 285 2 
268 1 51 1 347 1 225 1 5 2 296 2 7 1 349 2 203 1 202 1 205 2 118 1 36 1 352 1 11 2 156 1 353 3 179 1 123 1 104 1 356 1 250 2 17 1 186 1 213 2 252 1 110 1 143 1 281 2 22 1 21 1 190 1 46 1 82 1 284 1 286 3 285 2 
11 1 268 1 353 1 216 1 5 1 281 1 344 1 3 1 286 1 285 1 
353 1 259 1 332 1 341 1 344 1 292 1 142 1 172 1 115 1 146 1 279 1 324 1 285 1 286 1 
11 1 353 1 259 1 332 1 341 1 344 1 292 2 142 1 172 1 5 1 146 1 324 2 281 1 285 1 286 1 
32 1 95 1 324 1 81 1 292 1 
172 1 251 1 32 1 95 1 324 2 341 1 292 2 257 1 
95 1 324 1 292 1 
11 1 353 1 344 1 3 1 292 1 268 1 216 1 32 1 5 1 324 1 281 1 135 1 285 1 286 1 
172 1 
172 1 251 1 32 1 95 1 150 1 324 2 341 1 292 2 
329 1 354 1 121 1 74 1 341 1 27 1 340 2 26 1 223 2 292 5 276 1 172 1 322 1 251 1 161 1 32 2 95 2 324 5 201 2 
353 2 113 1 179 1 123 1 356 1 28 1 250 1 51 1 213 1 143 1 347 1 80 1 5 1 7 1 281 1 21 1 349 1 284 1 285 1 286 2 
186 1 131 1 
11 1 353 2 319 1 186 2 5 1 282 1 281 1 285 2 286 2 
139 1 6 1 28 1 
353 1 87 1 179 1 123 1 356 1 250 1 186 1 213 1 51 1 143 1 347 1 7 1 349 1 21 1 284 1 286 1 
11 1 186 1 353 3 113 1 5 3 281 3 286 3 285 3 
353 1 5 1 281 1 344 1 3 1 286 1 285 1 
319 1 11 1 353 1 5 1 281 1 282 1 344 1 286 1 285 1 
259 1 113 1 344 1 292 1 51 1 268 1 347 1 225 1 5 3 296 2 7 1 324 1 349 1 203 1 205 1 36 1 352 1 11 2 156 1 353 4 40 1 179 1 332 1 123 1 104 1 356 1 250 1 142 1 186 1 213 1 252 1 110 1 143 1 80 1 146 1 282 1 281 3 21 1 46 1 82 1 64 1 284 1 286 4 285 3 
186 1 353 2 113 1 5 1 115 1 281 1 60 1 286 2 285 2 
11 1 353 3 259 1 113 2 40 1 332 1 344 1 292 1 142 1 172 1 80 1 5 3 146 1 324 1 282 1 281 3 297 1 285 3 286 3 
11 1 353 2 113 1 139 1 5 2 281 2 282 1 28 1 286 2 285 2 
353 1 179 1 123 1 356 1 250 1 186 1 213 1 51 1 143 1 347 1 7 1 349 1 21 1 284 1 286 1 
328 1 353 1 123 1 250 1 186 1 213 1 214 1 51 1 143 1 347 1 7 1 349 1 21 1 284 1 286 1 
264 1 28 2 152 1 4 1 294 1 6 2 296 2 173 1 205 4 352 1 156 1 139 2 247 1 59 1 104 1 274 1 158 1 17 2 252 1 18 1 110 1 46 2 82 1 311 1 
259 1 353 1 5 1 313 1 281 1 344 1 286 1 285 1 
11 1 353 5 260 1 113 2 60 1 43 1 186 1 5 4 80 1 115 1 281 4 282 1 285 5 286 5 
353 2 313 1 5 2 281 2 344 1 3 1 286 2 285 2 
192 1 361 1 
192 1 361 1 
335 1 147 1 
335 1 147 1 
335 1 147 1 
192 1 361 1 211 1 
192 1 361 1 211 1 
192 1 361 1 211 1 
192 1 120 1 361 1 
192 2 331 1 361 2 335 1 147 1 90 1 
192 1 222 1 361 1 
192 1 222 1 361 1 
192 1 222 1 361 1 
258 1 65 1 66 1 192 2 261 1 159 2 359 3 292 2 90 1 172 1 129 1 277 2 361 2 324 2 164 1 45 1 8 2 350 2 63 2 
192 1 292 1 5 2 324 1 350 1 8 1 326 1 353 2 120 1 14 1 41 1 333 1 359 1 159 1 186 1 129 1 277 1 132 1 20 1 361 1 281 2 256 1 285 2 286 2 
19 1 249 1 42 1 
19 1 249 1 191 1 
19 3 238 1 42 2 210 1 191 1 226 1 
19 2 238 1 42 1 191 1 226 1 207 1 
19 2 238 1 42 1 191 1 226 2 
340 1 341 1 264 1 88 1 223 1 292 5 320 1 172 2 198 1 32 4 95 1 348 1 324 5 173 1 201 1 329 2 39 1 247 1 121 3 333 1 41 1 141 2 16 1 251 1 161 1 132 1 217 2 362 1 134 3 311 1 47 1 148 2 
27 1 341 1 340 2 264 3 195 1 223 2 292 9 172 5 320 1 198 3 199 1 32 7 95 6 324 9 173 3 201 2 329 6 39 2 12 5 247 3 121 8 41 4 141 6 128 1 16 2 105 1 251 1 304 1 161 1 253 1 217 6 362 3 134 9 81 5 311 3 
341 1 340 1 27 1 264 1 88 1 223 1 292 3 172 3 198 1 32 2 348 1 324 3 173 1 201 1 329 2 39 1 121 3 247 1 41 1 141 2 16 1 217 2 362 2 134 4 311 1 148 1 
341 1 340 1 27 1 264 2 88 1 195 1 223 1 292 4 172 4 198 2 32 3 348 1 324 4 173 2 201 1 329 4 39 1 121 5 247 2 41 2 141 4 16 1 105 1 253 1 217 4 362 3 134 7 311 2 148 2 
131 1 143 1 176 1 
143 1 75 1 
321 1 
143 1 7 1 
300 1 143 3 347 1 7 1 176 2 219 1 
143 1 347 1 7 1 
143 1 62 1 
86 2 13 1 330 1 247 1 59 3 355 1 316 1 264 1 124 1 17 4 294 2 30 1 307 1 189 1 46 3 205 7 177 1 
86 2 13 1 330 1 247 1 59 3 355 1 316 1 264 1 124 1 17 4 294 2 30 1 307 1 189 1 46 3 205 7 177 1 
86 2 13 1 330 1 247 1 59 3 355 1 316 1 264 1 124 1 17 4 294 2 30 1 307 1 189 1 46 3 205 7 177 1 37 1 
86 3 149 4 316 1 264 4 294 5 198 3 30 2 296 2 173 3 205 31 177 1 352 1 156 1 209 3 330 2 13 5 178 1 247 4 59 10 101 1 355 2 104 1 124 1 302 1 185 1 17 16 252 1 108 1 78 1 307 2 189 1 218 1 46 15 311 3 
86 2 112 1 316 1 264 1 294 3 30 1 296 4 205 9 352 2 156 2 330 1 13 1 247 1 59 4 355 1 104 2 124 1 185 1 17 5 252 2 44 1 307 1 189 1 46 4 
193 1 1 1 136 1 315 2 240 1 293 1 51 1 52 1 92 2 69 1 96 1 56 1 174 1 137 1 349 1 175 1 351 1 98 1 249 1 42 1 210 1 250 1 15 1 213 1 61 1 19 2 21 1 283 1 191 1 235 1 
136 1 315 3 240 1 171 1 293 1 51 1 92 3 69 1 70 1 96 1 56 1 174 1 349 1 137 2 175 1 351 1 98 1 249 1 42 1 210 1 250 1 15 1 213 1 61 1 19 2 308 1 21 1 283 1 191 1 235 1 
136 1 315 2 171 1 293 1 51 1 92 2 96 1 56 1 174 1 349 1 137 2 175 1 98 1 210 1 42 1 249 1 250 1 15 1 213 1 19 2 308 1 21 1 283 1 191 1 235 1 
315 1 169 1 240 1 51 1 92 1 70 1 7 1 349 1 117 1 98 2 138 1 245 1 250 1 15 2 213 1 61 1 305 1 143 1 163 1 21 1 283 2 235 2 284 1 
1 1 315 1 240 1 293 1 51 1 52 1 92 1 69 1 96 1 56 1 349 1 351 1 98 1 249 1 42 1 210 1 250 1 15 1 213 1 61 1 19 2 308 1 21 1 283 1 191 1 235 1 
166 1 
259 1 287 1 340 1 344 1 169 1 223 1 292 3 51 1 115 1 95 2 324 3 7 1 349 2 201 1 9 1 244 1 353 1 329 1 39 1 332 1 121 1 248 1 250 2 142 1 337 1 213 2 251 1 130 1 305 1 161 1 143 1 360 1 146 1 279 1 21 1 284 2 286 1 285 1 24 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 150 1 248 1 344 1 292 3 142 1 251 1 337 1 146 1 95 1 115 1 324 3 279 1 9 1 286 1 285 1 
244 1 259 1 353 1 287 1 332 1 248 1 340 1 344 1 223 1 292 2 142 1 337 1 161 1 146 1 115 1 324 2 279 1 201 1 9 1 286 1 285 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 344 1 292 2 142 1 337 1 146 1 115 1 324 2 279 1 9 1 285 1 286 1 
244 1 259 1 353 1 287 1 332 1 248 1 340 1 344 1 223 1 292 2 142 1 337 1 161 1 146 1 115 1 324 2 279 1 201 1 9 1 286 1 285 1 
86 1 156 1 139 1 247 1 59 2 355 1 316 1 264 1 104 1 28 1 124 1 152 1 186 2 17 3 294 2 252 1 131 1 110 1 307 1 6 1 296 2 189 1 46 3 205 6 82 1 352 1 
149 3 264 1 28 11 294 1 198 2 91 1 6 11 296 4 71 1 173 2 203 1 205 14 352 2 156 2 209 3 13 1 139 4 178 1 59 2 247 2 104 2 302 1 160 1 186 1 17 8 252 2 110 2 280 1 22 1 46 6 310 1 82 1 311 1 
87 1 113 1 48 1 51 1 269 1 347 1 5 1 7 1 296 2 349 1 203 1 205 2 352 1 353 2 156 1 139 1 179 1 123 1 356 1 104 1 250 1 160 1 186 1 213 1 17 1 252 1 143 1 110 1 232 1 80 1 281 1 21 1 22 1 46 1 82 1 284 1 286 2 285 1 
86 1 316 1 264 3 50 2 51 2 225 2 5 1 6 7 7 2 173 2 228 2 139 7 13 4 179 2 59 8 104 3 184 1 186 2 17 10 110 3 143 2 339 2 189 1 281 1 22 1 21 2 284 1 285 1 286 3 113 1 28 7 294 4 198 2 347 2 296 6 349 3 203 1 205 20 299 1 352 3 156 3 353 3 247 3 123 2 355 1 356 2 357 2 250 3 124 1 126 1 160 1 213 3 252 3 308 1 307 1 80 1 46 10 82 3 311 2 
193 1 113 1 169 1 152 1 51 2 5 1 296 4 7 2 349 7 203 1 205 2 206 1 118 2 352 2 119 1 353 1 156 2 104 2 301 1 250 8 183 1 213 8 17 1 252 2 305 1 109 1 143 3 110 2 79 1 308 1 281 1 21 2 22 1 111 1 46 1 82 2 284 2 286 1 285 1 
264 1 28 1 294 1 198 1 5 1 6 1 296 2 173 1 205 3 352 1 11 1 156 1 353 1 139 1 59 1 247 1 104 1 160 1 17 1 252 1 110 1 233 1 282 1 281 1 46 2 82 1 311 1 285 1 286 1 
156 1 13 1 139 1 59 1 247 1 104 1 28 1 152 1 17 2 252 1 18 1 110 1 6 1 296 2 173 1 205 2 82 1 352 1 
156 1 139 1 59 1 104 1 264 1 28 1 152 1 158 1 294 1 252 1 110 1 6 1 296 2 205 2 46 2 82 1 311 1 352 1 
264 1 28 2 152 1 294 1 198 1 6 2 296 2 173 1 205 4 352 1 156 1 139 2 13 1 247 1 59 2 104 1 17 2 252 1 110 1 46 2 82 1 311 1 
156 1 13 1 139 1 59 1 247 1 104 1 28 1 17 2 252 1 18 1 109 1 110 1 6 1 296 2 173 1 205 2 82 1 352 1 
156 1 139 1 59 1 104 1 264 1 28 1 158 1 294 1 252 1 109 1 110 1 6 1 296 2 205 2 46 2 82 1 311 1 352 1 
264 1 28 2 294 1 198 1 6 2 296 2 173 1 205 4 352 1 156 1 139 2 13 1 247 1 59 2 104 1 17 2 252 1 109 1 110 1 46 2 82 1 311 1 
264 1 28 2 294 1 198 1 6 2 296 2 173 1 205 4 352 1 156 1 139 2 13 1 247 1 59 2 104 1 17 2 252 1 110 1 46 2 82 1 311 1 
51 1 347 1 225 1 7 1 296 2 349 1 203 1 205 2 352 1 353 1 156 1 179 1 123 1 356 1 104 1 250 1 17 1 186 1 213 1 252 1 143 1 110 1 22 1 21 1 46 1 82 1 284 1 286 1 
51 1 347 1 7 1 296 2 349 1 203 1 205 2 352 1 328 1 353 1 156 1 123 1 104 1 250 1 17 1 186 1 214 1 213 1 252 1 143 1 110 1 22 1 21 1 46 1 82 1 284 1 85 1 286 1 
264 1 28 2 294 1 198 1 6 2 296 2 173 1 205 4 352 1 156 1 139 2 13 1 247 1 59 2 104 1 160 1 17 2 252 1 110 1 46 2 82 1 311 1 
193 1 264 1 28 2 51 1 294 1 198 1 347 1 225 1 6 2 7 1 296 2 173 1 349 1 205 4 352 1 353 1 156 1 13 1 139 2 179 1 59 2 247 1 123 1 356 1 104 1 250 1 17 2 213 1 252 1 143 1 110 1 339 1 21 1 46 2 82 1 311 1 286 1 
264 1 28 1 198 1 5 1 6 1 296 2 173 1 327 1 205 3 352 1 11 1 156 1 353 1 13 1 139 1 59 1 247 1 104 1 160 1 17 2 252 1 110 1 282 1 281 1 46 1 82 1 311 1 285 1 286 1 
312 2 149 2 2 1 314 1 263 1 264 3 290 2 294 3 198 3 296 4 200 1 173 3 205 19 352 2 156 2 209 1 13 3 178 1 247 3 59 6 104 2 302 1 77 1 107 1 17 9 252 2 44 1 338 1 46 10 311 3 
312 1 0 1 149 2 2 1 314 2 194 1 168 1 264 2 263 1 290 4 154 1 294 2 198 3 296 6 200 1 173 3 57 1 205 26 352 3 156 3 209 2 13 2 178 2 59 4 247 3 104 3 185 2 107 2 17 14 252 3 44 1 234 1 46 12 311 2 
86 1 0 1 312 1 314 1 2 1 168 1 316 1 264 5 263 1 173 4 57 1 13 4 178 3 59 8 104 3 185 1 17 20 107 2 234 1 189 1 149 4 288 1 194 1 290 4 154 1 294 4 198 4 296 6 200 1 205 41 352 3 156 3 209 3 247 5 355 1 124 1 302 1 77 1 252 3 44 1 307 1 46 21 311 4 
86 1 312 1 0 1 149 4 288 1 2 1 314 1 194 1 316 1 168 1 263 1 264 4 290 4 154 1 294 4 198 4 296 8 200 1 173 4 57 1 205 38 352 4 156 4 209 3 13 3 178 3 247 5 59 7 355 1 104 4 124 1 302 1 185 2 77 1 107 2 17 20 252 4 44 1 307 1 189 1 234 1 46 18 311 3 
86 1 312 1 0 1 149 4 2 1 314 1 194 1 316 1 168 1 263 1 264 8 290 4 154 1 294 7 198 7 296 4 71 2 200 1 173 7 57 1 205 52 352 2 156 2 209 4 13 7 178 2 247 8 59 14 355 1 104 2 124 1 302 2 185 1 107 1 17 27 252 2 44 1 307 1 189 1 234 1 46 25 311 7 
65 1 192 1 277 1 361 1 164 1 242 1 350 1 8 1 159 1 90 1 
120 1 256 1 
192 1 277 1 254 1 361 1 239 1 350 1 8 1 159 1 155 1 
65 1 66 1 192 1 261 1 159 1 359 2 292 1 90 1 172 1 129 1 277 1 361 1 324 1 164 1 45 1 8 1 350 1 63 1 
65 1 66 1 192 1 261 1 159 1 359 2 292 1 90 1 172 1 129 1 277 1 361 1 324 1 164 1 45 1 8 1 350 1 63 1 
65 1 66 1 192 1 261 1 159 1 359 2 292 1 90 1 172 1 129 1 277 1 361 1 324 1 164 1 45 1 8 1 350 1 63 1 
331 1 145 1 211 1 
331 1 145 1 211 1 
222 1 243 1 
222 1 331 1 243 1 
20 1 14 1 
192 1 292 1 266 1 32 1 5 2 324 1 350 1 8 1 326 1 353 2 120 1 14 1 41 1 333 1 159 1 359 1 186 1 277 1 132 1 20 1 361 1 281 2 45 1 256 1 63 1 286 2 285 2 
145 1 211 1 
222 1 331 1 243 1 
51 1 295 1 7 1 296 2 349 2 325 1 203 1 205 2 206 1 118 2 352 1 353 2 156 1 246 1 104 1 250 2 160 1 127 1 213 2 17 1 252 1 143 1 110 1 21 1 22 1 111 1 46 1 165 1 82 1 286 2 285 2 
193 1 249 1 42 1 210 1 250 2 15 1 303 1 51 1 213 2 241 1 19 2 93 1 69 1 308 1 96 1 56 1 21 1 349 2 191 1 
249 1 42 1 210 1 76 1 250 1 15 1 213 1 51 1 19 2 93 1 69 1 308 1 96 1 56 1 349 1 21 1 191 1 
245 1 250 1 169 1 15 1 51 1 213 1 241 1 305 1 143 1 7 1 21 1 349 1 97 1 284 1 
249 1 42 1 210 1 250 1 15 1 303 1 213 1 241 1 51 1 19 2 93 1 69 1 308 1 96 1 56 1 21 1 349 1 191 1 
323 1 
172 1 322 1 329 1 131 1 121 1 341 1 276 1 
340 1 341 1 223 1 292 1 172 2 31 1 95 1 324 1 201 1 329 1 72 1 121 1 125 1 251 1 161 1 362 1 134 1 
264 2 223 4 318 2 322 1 51 3 172 8 95 5 7 3 324 5 173 2 176 2 228 2 329 8 180 2 141 6 182 1 275 2 276 1 187 1 143 10 144 2 146 2 62 2 21 4 284 1 236 1 193 1 25 2 341 2 340 4 342 2 291 1 292 5 346 2 198 2 347 3 201 4 349 3 300 1 39 2 121 9 247 2 75 3 250 3 212 1 213 3 251 3 130 1 161 4 217 6 162 2 362 6 134 12 311 2 
0 1 149 1 25 1 194 1 168 1 340 2 341 2 264 2 223 2 292 1 154 1 29 1 172 5 198 2 95 1 324 1 173 2 201 2 57 1 329 5 39 1 209 1 178 1 121 8 247 2 141 5 251 1 130 1 161 2 144 2 217 5 362 3 188 1 134 6 311 2 
25 1 340 1 264 1 344 1 3 1 223 1 89 1 292 1 268 1 197 1 5 1 324 1 201 1 11 1 353 1 329 2 247 2 121 2 355 1 161 1 216 1 144 2 307 1 189 1 281 1 135 1 286 1 285 1 
329 1 121 1 340 1 341 1 223 1 276 1 322 1 172 1 161 1 201 1 
329 5 25 1 247 2 121 5 264 2 141 5 172 5 198 2 144 2 217 5 362 5 173 2 134 10 311 2 228 1 
172 1 251 1 95 1 324 1 341 1 292 1 
27 1 340 2 169 1 223 2 292 3 224 1 51 1 95 4 7 1 324 3 201 2 349 4 329 2 39 2 121 2 250 4 182 2 213 4 251 2 130 2 305 1 161 1 143 1 187 1 360 1 133 1 21 1 284 2 24 1 
268 1 51 1 225 1 347 1 5 2 296 2 7 1 349 1 203 1 205 1 36 1 352 1 11 2 156 1 353 3 179 1 123 1 356 1 104 1 250 1 186 1 213 1 252 1 143 1 110 1 281 2 21 1 46 1 82 1 284 1 286 3 285 2 
86 1 329 2 39 1 121 1 340 1 341 2 141 2 223 1 172 4 130 1 161 1 217 2 362 2 134 4 201 1 
106 1 350 1 159 1 
106 1 350 1 159 1 
106 1 350 1 159 1 
65 1 14 1 230 1 350 1 159 1 
298 1 350 1 159 1 
298 1 350 1 159 1 
298 1 350 1 159 1 
350 1 159 1 
192 1 361 1 
86 1 156 2 13 1 247 1 59 3 316 1 355 1 264 1 104 2 124 1 185 1 17 4 294 2 252 2 307 1 296 4 189 1 46 4 205 8 352 2 
86 1 59 2 247 1 316 1 355 1 264 1 124 1 17 3 131 1 294 2 307 1 189 1 46 3 205 6 
156 1 13 1 59 2 247 1 264 1 104 1 17 2 294 1 252 1 198 1 278 1 296 2 173 1 46 2 205 4 311 1 352 1 
209 1 149 2 13 1 178 1 247 1 59 2 264 1 302 1 17 3 294 1 198 1 173 1 46 4 205 7 311 1 
86 1 149 2 316 1 264 3 294 5 198 2 296 4 173 2 71 1 116 1 205 23 352 2 156 2 209 2 13 4 59 9 247 3 355 2 104 2 124 1 302 1 185 2 17 11 252 2 307 2 280 1 189 1 46 12 311 2 
149 1 205 1 46 1 
17 1 209 1 205 1 
156 1 13 1 247 1 59 3 104 1 264 1 17 3 252 1 294 2 198 1 278 1 296 2 173 1 46 3 205 6 311 1 352 1 228 1 
0 1 149 1 194 1 168 1 264 2 154 1 294 1 198 2 296 2 173 2 205 12 57 1 352 1 156 1 209 1 13 1 178 1 247 2 59 2 104 1 17 6 252 1 44 1 46 6 311 2 
13 1 247 1 59 2 355 1 264 1 17 3 294 1 307 1 189 1 205 6 46 3 
156 1 13 1 59 2 355 1 316 1 104 1 124 1 185 1 17 1 294 1 252 1 307 1 296 2 116 1 46 2 205 3 352 1 
156 1 13 2 59 5 247 2 355 2 104 1 264 2 17 5 252 1 197 1 294 3 44 1 307 2 296 2 189 1 205 10 46 5 352 1 
156 1 13 1 247 1 59 1 104 1 17 2 252 1 44 1 296 2 173 1 205 2 352 1 
156 1 13 1 59 2 247 1 264 1 104 1 17 2 294 1 252 1 44 1 198 1 296 2 173 1 46 2 205 4 311 1 352 1 
156 3 13 1 59 2 355 1 104 3 185 1 77 1 17 1 252 3 294 1 44 1 307 1 296 6 116 1 46 2 205 3 352 3 
86 1 149 4 316 1 264 5 294 7 198 3 296 10 173 3 116 1 205 34 352 5 156 5 209 3 13 5 178 1 101 1 247 5 59 12 355 3 104 5 124 1 302 1 185 2 77 1 17 16 108 1 252 5 78 1 44 1 307 3 278 1 189 2 46 18 311 3 
86 1 149 1 194 1 316 1 264 1 294 2 296 2 205 8 352 1 156 1 209 1 178 1 247 1 59 2 355 1 104 1 124 1 17 4 252 1 44 1 307 1 189 1 46 4 
86 1 149 2 194 1 316 1 264 1 294 2 198 1 296 4 173 1 205 11 352 2 156 2 209 1 13 1 178 1 247 2 59 3 355 1 104 2 124 1 302 1 17 6 252 2 44 1 307 1 278 1 189 1 46 5 
86 1 0 1 149 1 194 1 316 1 168 1 264 3 154 1 294 3 198 2 296 6 173 2 205 19 57 1 352 3 156 3 209 1 13 1 178 1 247 3 59 4 355 1 104 3 124 1 185 1 17 9 252 3 44 1 307 1 278 1 189 1 46 10 311 2 
86 1 0 1 149 1 194 1 316 1 168 1 264 2 154 1 294 3 198 2 296 6 173 2 205 17 57 1 352 3 156 3 209 1 13 2 178 1 247 3 59 5 355 1 104 3 124 1 185 1 17 10 252 3 44 1 307 1 278 1 189 1 46 7 311 1 
86 1 149 1 194 1 316 1 264 1 294 2 296 2 205 8 352 1 156 1 209 1 178 1 247 1 59 2 355 1 104 1 124 1 17 4 252 1 44 1 307 1 189 1 46 4 
0 1 149 1 194 1 168 1 264 2 154 1 294 1 198 2 296 2 173 2 205 12 57 1 352 1 156 1 209 1 13 1 178 1 247 2 59 2 104 1 17 6 252 1 44 1 46 6 311 2 
86 1 0 1 149 1 194 1 316 1 168 1 264 2 154 1 294 3 198 2 296 8 173 2 57 1 205 18 352 4 156 4 209 1 13 2 178 1 247 3 59 5 355 1 104 4 124 1 185 2 17 10 252 4 44 1 307 1 278 1 189 1 46 8 311 1 
0 1 149 1 194 1 168 1 264 2 154 1 294 3 198 3 296 8 173 3 57 1 205 16 352 4 156 4 209 1 13 3 178 1 247 3 59 6 104 4 185 2 77 1 17 9 252 4 44 1 46 7 311 2 
13 3 59 6 247 1 316 1 355 3 264 1 124 2 17 3 294 3 307 3 189 1 46 4 205 7 
86 1 0 1 149 1 194 1 316 1 168 1 264 2 154 1 294 3 198 2 296 8 173 2 57 1 205 18 352 4 156 4 209 1 13 1 178 1 247 3 59 4 355 1 104 4 124 1 185 2 77 1 17 10 252 4 44 1 307 1 189 1 46 8 311 1 
186 1 353 1 115 1 102 1 60 1 286 1 285 1 
186 1 353 1 270 1 115 1 181 1 102 1 334 1 265 1 60 1 286 1 285 1 38 1 
51 1 213 1 305 1 131 1 143 1 7 1 21 1 349 1 169 1 250 1 284 1 
353 2 113 1 123 1 356 1 250 1 186 1 213 1 51 1 143 1 347 1 5 1 7 1 281 1 21 1 349 1 284 1 285 1 286 2 
259 1 113 1 344 1 51 1 347 2 5 1 7 2 349 1 353 2 123 1 356 1 250 1 182 1 275 1 142 1 186 1 213 1 143 3 62 1 281 2 21 1 286 2 285 2 
259 1 113 1 344 1 51 1 347 2 5 1 7 2 349 2 353 2 273 1 123 1 250 2 182 1 275 1 142 1 186 1 214 1 213 2 143 3 62 1 281 2 21 1 286 2 285 2 
273 1 122 1 341 1 75 1 250 3 275 1 182 1 292 2 172 1 213 3 51 1 143 4 347 1 146 1 95 1 62 1 7 1 324 2 21 1 349 3 176 1 271 1 284 1 
273 1 180 1 341 1 75 1 250 3 275 1 182 1 292 2 172 1 213 3 51 1 143 4 347 1 146 1 95 1 62 1 7 1 324 2 21 1 349 3 176 1 284 1 
51 1 213 1 119 1 21 1 349 1 250 1 
119 1 300 1 193 1 73 1 301 1 250 7 183 1 213 7 68 1 51 2 143 3 79 1 347 1 308 1 7 2 349 6 21 3 111 1 118 1 284 2 363 1 
86 1 113 1 193 1 316 1 264 1 28 1 50 1 51 1 294 2 347 1 225 1 5 1 6 1 7 1 296 4 349 1 205 6 352 2 353 2 156 2 139 1 246 1 179 1 247 1 59 2 123 1 355 1 104 2 356 1 250 1 124 1 160 1 186 2 17 3 213 1 252 2 143 1 110 2 307 1 339 1 189 1 281 1 21 1 46 3 82 2 286 2 285 1 
341 1 340 2 342 1 223 2 292 3 318 1 172 1 322 1 32 1 95 2 324 3 349 1 201 2 176 1 329 1 180 1 121 1 75 1 250 1 276 1 213 1 251 1 161 2 187 1 143 2 146 1 162 1 284 1 
119 1 300 1 193 1 250 2 291 1 213 2 51 1 143 2 347 1 7 1 349 2 21 2 176 1 
193 1 273 1 250 4 169 1 213 4 51 1 305 1 143 1 7 1 21 1 349 4 10 1 284 1 
157 1 73 1 250 2 182 1 184 1 213 2 68 1 51 1 143 1 53 1 347 1 7 1 349 2 21 2 
51 1 213 1 19 1 56 1 249 1 21 1 349 1 250 1 191 1 284 1 
193 1 250 2 213 2 51 1 143 1 308 1 7 1 349 2 21 1 111 1 165 1 
193 1 169 1 250 5 182 1 183 1 213 5 51 2 305 1 143 3 79 1 7 2 349 4 21 2 111 1 10 1 284 1 
193 1 169 1 250 5 182 1 183 1 213 5 51 2 305 1 143 3 55 1 7 2 349 4 21 2 111 1 10 1 284 1 
353 2 113 1 123 1 250 1 186 1 213 1 214 1 51 1 143 1 347 1 5 1 7 1 281 1 21 1 349 1 284 1 285 1 286 2 
300 1 73 1 250 1 182 1 213 1 68 1 51 1 143 1 347 1 7 1 349 1 21 2 363 1 
186 1 204 1 170 1 345 1 227 1 
259 1 40 1 332 1 341 1 344 1 292 2 170 2 142 1 345 2 267 1 336 1 186 1 172 1 32 1 146 1 324 2 204 2 227 1 23 1 
353 1 295 1 325 1 170 1 227 1 345 1 286 1 285 1 127 1 
23 1 227 1 336 1 
131 1 136 1 174 1 175 1 
61 1 92 1 136 1 315 1 174 1 175 1 240 1 
98 1 315 1 283 1 
61 1 52 1 92 3 255 1 136 1 237 2 315 3 49 1 174 1 175 1 358 1 240 1 
61 1 92 2 100 1 136 1 315 2 174 1 137 1 175 1 240 1 
315 1 42 1 249 1 240 1 61 1 19 1 52 1 92 1 33 1 35 1 174 1 
61 1 52 1 92 1 136 1 315 1 174 1 240 1 
61 1 52 1 92 1 136 2 315 1 175 1 240 1 
208 1 136 1 315 2 67 1 240 2 61 2 52 1 92 2 174 1 272 1 
136 1 315 3 289 1 343 1 240 1 61 1 52 1 92 3 137 2 35 1 174 2 175 1 84 1 
136 1 315 2 210 1 42 1 249 1 240 1 61 1 19 2 52 1 92 2 174 1 137 1 175 1 191 1 83 1 
100 1 136 1 315 4 289 1 240 2 61 2 52 1 92 4 54 1 137 2 35 1 174 2 175 1 
61 1 52 1 92 1 136 1 315 1 174 1 175 1 240 1 
237 1 136 2 315 4 289 1 49 1 358 1 240 1 61 1 92 4 34 1 137 2 35 1 174 3 175 2 
220 1 136 1 315 2 240 1 61 1 52 1 92 2 94 1 309 1 174 1 137 1 175 1 
61 1 52 1 306 1 92 3 136 1 237 2 315 3 49 2 174 1 175 1 358 1 240 1 
215 1 221 1 174 2 231 2 
61 1 52 1 92 1 315 1 229 1 240 1 
61 1 52 1 92 2 136 1 315 2 174 1 137 1 343 1 175 1 240 1 
99 1 
61 1 52 1 92 1 136 1 315 1 174 1 175 1 240 1 
315 3 237 1 136 1 343 1 240 1 61 1 52 1 92 3 137 1 174 1 175 1 
289 1 34 1 174 1 35 1 
136 1 174 1 

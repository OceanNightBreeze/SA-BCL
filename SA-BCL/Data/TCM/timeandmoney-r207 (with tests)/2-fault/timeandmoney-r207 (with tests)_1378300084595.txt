#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3602 | return null
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
180 2 1 1 67 1 220 1 30 1 304 1 156 1 184 1 349 2 350 5 224 2 11 2 288 2 164 1 226 2 369 9 191 1 42 1 230 6 141 2 233 4 116 1 235 1 241 1 177 1 360 1 211 9 362 3 
1 1 180 2 67 1 220 1 30 1 304 1 156 1 184 1 349 2 350 5 224 2 11 2 288 2 164 1 226 2 369 9 191 1 42 1 230 6 141 2 233 4 116 1 235 1 241 1 177 1 360 1 211 9 362 3 
1 1 180 2 67 1 220 1 30 1 304 1 156 1 184 1 349 2 350 6 224 2 11 2 288 2 164 1 226 2 369 10 191 1 42 1 230 7 141 2 233 5 116 1 235 1 241 1 177 1 360 1 211 10 362 4 
1 1 180 1 67 1 30 1 304 1 156 1 184 1 349 2 350 4 224 2 11 2 288 2 164 1 226 2 369 7 191 1 42 1 230 4 141 2 233 3 116 1 235 1 241 1 177 1 360 1 211 7 362 2 
369 4 180 2 67 1 230 3 220 1 304 1 141 1 233 2 184 1 349 1 116 1 350 3 11 1 288 1 211 4 164 1 362 1 226 1 
369 2 191 1 333 1 304 1 141 1 184 1 349 1 355 1 350 1 224 1 241 1 288 1 211 2 164 1 150 1 226 1 
369 3 230 1 304 1 233 1 184 1 349 2 235 1 350 2 224 1 288 2 211 3 164 1 362 1 
180 2 125 1 67 1 220 1 304 1 156 1 184 1 349 2 350 5 69 1 224 1 11 1 288 2 164 1 226 1 369 9 42 1 230 7 233 4 141 1 116 1 235 1 211 9 362 3 
180 2 125 1 67 1 220 1 304 1 156 1 184 1 349 2 350 5 69 1 224 1 11 1 288 2 164 1 226 1 369 9 42 1 230 7 233 4 141 1 116 1 235 1 211 9 362 3 
217 1 378 1 351 1 
215 2 378 1 281 1 
265 1 238 2 246 1 300 2 109 2 88 2 316 2 122 2 
346 2 201 1 29 1 246 1 300 2 109 2 280 1 155 1 161 1 287 1 308 1 88 3 87 1 35 1 368 1 330 2 265 1 207 1 193 1 46 1 208 2 316 2 52 1 19 1 21 2 96 1 337 1 238 3 340 1 274 1 377 1 198 1 102 1 123 2 122 2 213 1 381 1 
82 1 238 1 246 1 153 1 300 1 109 1 88 1 316 1 138 1 122 1 
82 1 217 1 17 1 348 1 279 1 318 1 238 1 378 1 276 1 178 1 88 1 327 1 122 1 64 1 
82 1 217 1 300 1 17 2 109 1 348 1 279 1 316 1 238 1 378 1 276 1 178 1 327 2 88 1 122 1 
254 1 342 1 17 1 327 1 315 1 
254 1 217 1 342 1 197 1 17 2 378 1 327 2 133 1 
342 1 17 1 327 1 
82 1 28 1 153 1 246 1 17 1 300 1 109 1 316 1 254 1 238 1 327 1 88 1 138 1 122 1 
378 1 
82 1 28 1 217 1 246 1 153 1 300 1 17 2 109 1 316 1 254 1 238 1 197 1 342 1 344 1 378 1 88 1 327 2 138 1 122 1 
83 1 217 1 140 2 371 1 17 5 195 1 183 1 204 1 174 1 254 2 175 1 134 1 197 1 342 2 378 1 327 5 136 2 137 1 227 2 
265 1 351 1 
124 1 265 2 300 1 109 1 316 1 238 2 88 2 80 1 122 2 
272 1 261 1 22 1 
330 1 265 1 201 1 46 1 208 1 247 1 21 1 238 1 340 1 274 1 161 1 377 1 88 1 87 1 102 1 381 1 
330 1 201 1 46 1 323 1 109 1 208 1 301 1 316 1 21 1 272 1 238 2 340 1 274 1 377 1 161 1 87 1 88 2 102 1 122 1 381 1 
265 1 238 3 300 1 323 1 109 3 88 3 316 3 122 3 
82 1 238 1 109 1 88 1 316 1 138 1 122 1 
124 1 82 1 238 1 300 1 109 1 88 1 80 1 316 1 122 1 
346 1 82 1 201 1 246 1 300 2 109 3 323 1 219 1 348 1 279 1 301 1 280 1 161 1 287 1 308 1 87 1 88 4 327 1 35 1 330 1 265 1 207 1 193 1 17 1 46 1 208 1 316 3 52 1 21 1 115 1 96 1 337 1 238 4 340 1 274 1 377 1 276 1 178 1 80 1 102 1 123 2 122 3 213 1 381 1 
297 1 265 1 238 2 109 1 323 1 88 2 316 1 122 2 64 1 
82 1 300 1 17 1 323 2 109 3 348 1 301 1 279 1 316 3 115 1 238 3 378 1 178 1 276 1 80 1 327 1 88 3 163 1 122 3 
300 1 323 1 109 2 316 2 22 1 272 1 238 2 80 1 88 2 122 2 
330 1 265 1 201 1 46 1 208 1 21 1 238 1 340 1 161 1 377 1 274 1 88 1 87 1 102 1 381 1 
330 1 265 1 201 1 107 1 46 1 208 1 21 1 238 1 340 1 377 1 274 1 88 1 102 1 151 1 381 1 
346 4 66 1 321 1 216 1 29 2 280 1 128 1 132 1 253 1 205 1 287 1 35 2 261 2 168 1 15 1 16 1 207 1 193 1 52 1 142 1 22 2 337 1 272 2 123 2 
82 1 228 1 238 1 109 1 276 1 88 1 316 1 122 1 
297 1 265 1 43 1 300 1 323 2 109 4 301 1 316 4 56 1 238 5 88 5 80 1 122 5 64 1 
228 1 82 1 238 2 109 2 88 2 316 2 138 1 122 2 
222 1 154 1 
222 1 154 1 
331 1 34 1 
331 1 34 1 
331 1 34 1 
222 1 62 1 154 1 
222 1 62 1 154 1 
222 1 108 1 154 1 
222 2 331 1 319 1 34 1 154 2 68 1 
222 1 62 1 154 1 
222 1 237 1 154 1 
222 1 237 1 154 1 
222 1 237 1 154 1 
353 2 65 2 229 1 17 2 5 1 154 2 68 1 86 1 373 1 222 2 98 2 236 2 271 3 24 2 378 1 99 1 243 1 327 2 189 1 
265 1 65 1 108 1 3 1 17 1 109 2 154 1 316 2 53 1 335 1 86 1 282 1 222 1 98 1 236 1 176 1 271 1 238 2 24 1 88 2 327 1 148 1 122 2 289 1 
11 1 141 1 226 1 
141 1 150 1 226 1 
11 2 48 1 361 1 150 1 317 1 226 3 
11 1 48 1 71 1 150 1 317 1 226 2 
11 1 48 2 150 1 317 1 226 2 
215 3 66 1 217 1 3 1 128 1 129 1 281 1 204 3 254 4 285 1 134 1 136 1 327 5 36 1 168 1 38 2 227 1 289 1 15 1 140 1 17 5 54 2 76 2 336 1 175 2 342 1 197 1 378 2 148 1 380 1 103 1 363 1 
215 9 0 1 66 3 217 1 128 3 281 3 204 8 254 7 285 3 134 1 135 1 327 9 136 2 168 3 38 6 289 4 227 2 15 3 140 2 17 9 195 1 315 5 20 1 54 6 336 2 338 1 175 6 342 6 197 1 378 5 149 1 380 2 296 1 345 5 103 1 
215 4 66 1 217 1 128 1 281 2 204 3 254 2 285 1 136 1 327 3 36 1 168 1 227 1 289 1 38 2 15 1 140 1 17 3 195 1 336 1 76 1 54 2 175 2 378 3 380 1 363 1 
215 7 66 2 217 1 128 2 281 3 204 5 254 3 285 2 136 1 327 4 36 1 168 2 38 4 227 1 289 2 15 2 140 1 17 4 195 1 54 4 336 1 76 2 338 1 175 4 378 4 149 1 380 1 296 1 363 1 
192 1 274 1 351 1 
311 1 274 1 
85 1 
340 1 274 1 
192 2 59 1 340 1 274 3 377 1 147 1 
340 1 274 1 377 1 
274 1 45 1 
346 7 66 1 29 4 334 2 128 1 305 1 132 2 205 3 256 1 10 1 293 1 23 1 209 1 35 3 200 1 244 1 263 1 
346 7 66 1 29 4 334 2 128 1 305 1 132 2 205 3 256 1 10 1 293 1 23 1 209 1 35 3 200 1 244 1 263 1 
346 7 66 1 29 4 334 2 128 1 305 1 132 2 186 1 205 3 10 1 256 1 293 1 23 1 209 1 35 3 200 1 244 1 263 1 
346 31 66 4 181 4 29 16 280 1 128 4 130 3 305 2 132 5 255 1 10 1 9 1 256 2 285 3 205 10 35 15 259 1 260 1 352 1 168 3 263 2 15 3 39 1 207 1 334 3 52 1 337 1 293 2 23 5 209 1 200 1 244 1 123 2 105 1 
346 9 66 1 29 5 280 2 128 1 248 1 305 1 132 3 256 1 205 4 10 1 35 4 263 1 39 1 207 2 334 2 52 2 337 2 77 1 293 1 23 1 244 1 200 1 123 4 
214 1 202 1 304 1 184 1 349 1 350 1 366 1 283 1 224 1 70 1 11 1 162 1 288 1 164 1 264 1 226 2 330 1 369 2 291 1 194 1 46 1 230 1 208 1 141 1 21 1 359 1 211 2 361 1 102 1 150 1 
214 1 304 1 184 1 349 1 350 1 366 1 283 1 224 1 11 1 162 1 288 1 114 1 264 1 226 2 330 1 369 3 290 1 291 1 194 1 46 1 230 2 208 1 141 1 21 1 359 1 361 1 211 3 63 1 102 1 150 1 
214 1 304 1 184 1 350 1 366 1 283 1 224 1 11 1 162 1 226 2 330 1 369 2 290 1 291 1 46 1 230 2 208 1 21 1 141 1 359 1 211 2 361 1 63 1 102 1 150 1 
369 1 330 1 201 1 41 1 46 1 231 1 208 1 94 1 21 1 234 1 349 1 366 2 283 2 224 2 340 1 274 1 240 1 162 2 199 1 114 1 288 1 211 1 102 1 
214 1 202 1 349 1 366 1 283 1 224 1 11 1 162 1 288 1 164 1 264 1 226 2 330 1 369 1 291 1 194 1 46 1 208 1 141 1 21 1 359 1 211 1 361 1 63 1 102 1 150 1 
266 1 
201 2 298 1 348 1 249 1 204 2 157 2 158 4 257 1 309 1 170 2 17 5 75 2 208 2 21 2 175 2 318 1 274 1 275 1 276 1 178 1 122 1 215 2 82 1 217 1 278 2 324 2 279 1 281 2 134 1 32 1 327 5 136 1 88 1 187 2 37 1 227 1 330 2 140 1 44 1 46 1 231 1 95 1 336 1 97 1 374 1 55 1 238 1 340 1 343 2 197 3 342 6 378 2 199 1 102 1 64 1 
82 1 298 1 324 1 348 1 279 1 158 2 257 1 32 1 88 1 327 3 44 1 17 3 318 1 238 1 275 1 342 2 197 1 344 1 276 1 178 1 122 1 64 1 
82 1 217 1 298 1 348 1 279 1 158 3 257 1 32 1 88 1 327 3 44 1 17 3 318 1 238 1 342 1 275 1 343 1 197 1 344 1 276 1 178 1 378 1 122 1 64 1 
82 1 298 1 324 1 348 1 279 1 158 3 257 1 32 1 88 1 327 3 187 1 44 1 17 3 318 1 238 1 197 1 275 1 342 2 343 1 344 1 276 1 178 1 122 1 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 7 1 204 1 157 2 158 4 257 1 170 2 17 5 75 2 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 28 1 217 1 278 2 322 1 324 4 279 1 221 1 281 2 32 1 134 1 88 2 327 5 136 1 187 4 138 1 37 1 227 1 140 1 44 1 55 1 238 2 146 1 197 3 342 7 343 2 344 1 378 1 100 1 64 1 
298 1 348 1 204 1 157 2 158 4 257 1 170 2 17 4 75 2 318 1 175 1 275 1 178 1 276 1 122 1 82 1 215 2 217 1 278 2 324 2 279 1 281 2 134 1 32 1 88 1 327 4 136 1 187 2 37 1 227 1 140 1 44 1 95 1 55 1 238 1 197 2 342 4 343 2 378 2 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 7 1 204 1 157 2 158 4 257 1 170 2 17 4 75 2 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 28 1 217 1 278 2 324 2 279 1 281 2 134 1 32 1 327 4 88 2 136 1 187 2 138 1 37 1 227 1 140 1 44 1 55 1 238 2 146 1 197 2 342 4 343 2 378 1 100 1 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 7 1 204 1 157 2 158 4 257 1 170 2 17 4 75 2 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 28 1 217 1 278 2 324 2 279 1 281 2 134 1 32 1 327 4 88 2 136 1 187 2 138 1 37 1 227 1 140 1 44 1 55 1 238 2 146 1 197 2 342 4 343 2 378 1 100 1 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 252 2 204 1 157 2 158 4 257 1 170 2 17 4 18 1 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 215 2 28 1 217 1 324 2 279 1 134 1 32 1 327 4 88 2 136 1 89 2 187 2 90 1 138 1 37 1 227 1 370 1 140 1 44 1 238 2 197 2 342 4 343 2 378 1 100 1 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 7 1 204 1 157 2 158 5 257 1 170 2 17 4 75 2 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 28 1 217 1 278 2 324 3 279 1 221 1 281 2 32 1 134 1 327 4 88 2 136 1 187 3 138 1 37 1 227 1 140 1 44 1 55 1 238 2 146 1 343 3 342 5 197 2 378 1 100 1 64 1 
246 1 153 1 298 1 300 1 109 1 348 1 7 1 204 1 157 2 158 5 257 1 170 2 17 4 75 2 316 1 318 1 175 1 275 1 178 1 276 1 122 2 82 2 28 1 217 1 278 2 324 3 279 1 221 1 281 2 32 1 134 1 327 4 88 2 136 1 187 3 138 1 37 1 227 1 140 1 44 1 55 1 238 2 146 1 343 3 342 5 197 2 378 1 100 1 64 1 
298 1 348 1 252 2 204 1 157 2 158 4 257 1 170 2 17 4 318 1 175 1 275 1 178 1 276 1 122 1 82 1 215 2 217 1 324 2 279 1 134 1 32 1 88 1 327 4 136 1 89 2 187 2 37 1 227 1 370 1 140 1 44 1 95 1 238 1 197 2 342 4 343 2 378 1 64 1 
346 6 321 1 66 1 29 3 280 1 128 1 132 2 10 1 205 2 287 1 351 1 35 3 261 1 263 1 265 2 207 1 193 1 334 1 52 1 22 1 337 1 272 1 293 1 244 1 200 1 123 2 
346 14 66 1 181 3 29 8 280 2 128 2 130 3 132 1 250 1 205 2 9 1 285 2 287 2 35 6 260 1 261 11 368 1 168 2 265 1 15 1 207 2 193 1 268 1 52 2 22 4 337 2 117 1 272 11 23 1 119 1 210 1 123 4 213 1 
346 2 201 1 29 1 109 1 323 1 347 1 301 1 280 1 247 1 223 1 161 1 287 1 87 1 88 2 35 1 368 1 330 1 265 1 312 1 207 1 193 1 46 1 208 1 316 1 21 1 52 1 22 1 337 1 238 2 340 1 274 1 377 1 210 1 102 1 122 1 123 2 381 1 213 1 
346 20 201 1 66 3 109 1 301 1 8 1 10 1 205 8 160 1 161 2 308 2 261 7 168 2 263 1 265 2 15 2 207 3 208 3 316 1 21 3 22 7 272 7 274 2 23 4 210 1 123 6 122 1 213 1 29 10 323 1 280 3 128 3 132 4 285 2 287 3 33 2 88 3 87 2 35 10 368 1 330 3 92 1 193 3 46 2 372 2 334 1 52 3 51 2 337 3 238 3 339 2 340 2 293 1 377 2 63 1 200 1 244 1 102 2 381 2 
346 2 201 2 321 1 29 1 109 1 323 1 218 1 280 2 155 2 70 1 287 2 88 1 35 1 91 1 368 1 330 8 207 2 193 2 46 2 208 8 231 1 314 1 316 1 21 7 52 2 143 1 337 2 239 1 238 1 340 2 118 1 274 3 199 1 63 1 102 2 122 1 123 4 179 1 213 1 
346 3 66 1 29 1 300 1 109 1 280 1 128 1 132 1 205 1 285 1 287 1 88 1 35 2 261 1 168 1 15 1 207 1 193 1 316 1 52 1 22 1 337 1 357 1 272 1 238 1 80 1 210 1 123 2 122 1 
346 2 321 1 216 1 29 2 193 1 207 1 280 1 52 1 128 1 22 1 337 1 205 1 272 1 23 1 287 1 261 1 123 2 168 1 
346 2 15 1 321 1 66 1 16 1 193 1 207 1 280 1 52 1 132 1 22 1 337 1 205 1 272 1 287 1 35 2 261 1 123 2 
346 4 321 1 66 1 29 2 280 1 128 1 132 1 285 1 205 2 287 1 35 2 261 2 168 1 15 1 207 1 193 1 52 1 22 2 337 1 272 2 23 1 123 2 
346 2 216 1 29 2 193 1 207 1 218 1 280 1 52 1 128 1 22 1 337 1 205 1 272 1 23 1 287 1 261 1 123 2 168 1 
346 2 15 1 66 1 16 1 193 1 207 1 218 1 280 1 52 1 132 1 22 1 337 1 205 1 272 1 287 1 35 2 261 1 123 2 
346 4 66 1 29 2 218 1 280 1 128 1 132 1 285 1 205 2 287 1 35 2 261 2 168 1 15 1 207 1 193 1 52 1 22 2 337 1 272 2 23 1 123 2 
346 4 66 1 29 2 280 1 128 1 132 1 285 1 205 2 287 1 35 2 261 2 168 1 15 1 207 1 193 1 52 1 22 2 337 1 272 2 23 1 123 2 
346 2 201 1 29 1 280 1 161 1 308 1 287 1 87 1 88 1 35 1 368 1 330 1 265 1 193 1 207 1 46 1 208 1 21 1 52 1 337 1 238 1 340 1 377 1 274 1 102 1 123 2 381 1 213 1 
346 2 201 1 107 1 29 1 280 1 287 1 88 1 35 1 368 1 328 1 330 1 265 1 193 1 207 1 46 1 208 1 21 1 52 1 337 1 238 1 340 1 377 1 274 1 102 1 123 2 151 1 381 1 213 1 
346 4 66 1 29 2 280 1 128 1 132 1 285 1 205 2 287 1 35 2 261 2 168 1 15 1 207 1 193 1 52 1 22 2 337 1 272 2 23 1 210 1 123 2 
346 4 66 1 29 2 280 1 128 1 132 1 205 2 285 1 70 1 161 1 308 1 287 1 87 1 88 1 35 2 261 2 168 1 330 1 15 1 193 1 207 1 46 1 208 1 21 1 52 1 22 2 337 1 272 2 339 1 238 1 340 1 377 1 274 1 23 1 102 1 123 2 381 1 
346 3 66 1 29 2 300 1 109 1 280 1 128 1 205 1 285 1 287 1 88 1 35 1 261 1 168 1 329 1 15 1 207 1 193 1 316 1 52 1 22 1 337 1 272 1 238 1 23 1 80 1 210 1 123 2 122 1 
346 41 26 1 364 1 66 5 181 4 29 20 4 1 126 1 280 3 203 2 128 5 130 3 132 4 10 1 9 1 285 4 205 8 286 1 307 1 326 1 112 1 35 21 260 3 166 1 168 4 263 1 39 1 15 4 207 3 50 1 334 1 232 1 52 3 173 4 337 3 77 1 78 1 293 1 23 4 25 1 200 1 244 1 123 6 
346 38 26 1 364 1 66 4 181 4 29 20 4 1 126 1 280 4 203 2 128 5 130 3 132 4 10 1 9 1 285 4 205 7 286 1 307 1 326 1 112 1 35 18 260 3 166 1 168 4 263 1 39 2 15 3 207 4 50 1 334 1 232 1 52 4 173 4 337 4 77 1 78 1 293 1 23 3 25 1 200 1 244 1 123 8 
346 52 26 1 364 1 66 8 181 4 29 27 4 1 126 1 280 2 203 1 128 8 130 4 132 7 10 1 9 2 285 7 205 14 286 1 307 1 326 1 112 1 35 25 260 2 166 1 168 7 263 1 39 1 15 7 207 2 334 1 52 2 173 4 337 2 77 1 78 1 293 1 119 2 23 7 25 1 200 1 244 1 123 4 
346 19 26 1 364 1 66 3 181 2 29 9 303 1 280 2 203 1 128 3 130 1 132 3 9 1 285 3 205 6 286 1 112 2 35 10 260 1 166 1 168 3 15 3 207 2 50 1 52 2 173 2 337 2 77 1 23 3 123 4 
346 26 26 1 364 1 66 2 29 14 181 2 4 1 126 1 280 3 203 2 128 3 130 2 132 2 205 4 285 3 286 2 307 1 326 1 112 1 35 12 260 2 166 1 168 3 39 2 15 2 207 3 52 3 173 4 337 3 77 1 78 1 23 2 25 1 123 6 
98 1 222 1 84 1 236 1 65 1 24 1 5 1 154 1 68 1 189 1 
176 1 108 1 
98 1 222 1 236 1 65 1 73 1 24 1 258 1 154 1 262 1 
353 1 65 1 17 1 5 1 154 1 68 1 86 1 373 1 222 1 98 1 236 1 271 2 24 1 378 1 99 1 243 1 327 1 189 1 
353 1 65 1 17 1 5 1 154 1 68 1 86 1 373 1 222 1 98 1 236 1 271 2 24 1 378 1 99 1 243 1 327 1 189 1 
353 1 65 1 17 1 5 1 154 1 68 1 86 1 373 1 222 1 98 1 236 1 271 2 24 1 378 1 99 1 243 1 327 1 189 1 
319 1 62 1 104 1 
319 1 62 1 104 1 
237 1 306 1 
237 1 319 1 306 1 
282 1 53 1 
65 1 3 1 108 1 109 2 154 1 254 1 222 1 282 1 88 2 327 1 289 1 265 1 353 1 17 1 316 2 53 1 335 1 98 1 270 1 236 1 271 1 176 1 238 2 24 1 99 1 148 1 122 2 
62 1 104 1 
237 1 319 1 306 1 
346 2 29 1 280 1 155 2 365 1 111 1 287 1 88 2 225 1 35 1 113 1 91 1 368 1 330 2 207 1 193 1 46 1 208 2 52 1 21 2 143 1 337 1 238 2 340 1 274 1 210 1 102 1 379 1 122 2 123 2 213 1 
330 2 291 1 194 1 46 1 208 2 141 1 21 2 366 1 31 1 70 1 11 1 359 1 120 1 361 1 102 1 63 1 150 1 165 1 226 2 
330 1 291 1 194 1 267 1 46 1 208 1 141 1 21 1 366 1 11 1 359 1 120 1 361 1 63 1 102 1 150 1 226 2 
330 1 201 1 46 1 208 1 231 1 21 1 234 1 366 1 31 1 340 1 325 1 274 1 199 1 102 1 
330 1 291 1 194 1 46 1 208 1 141 1 21 1 366 1 31 1 11 1 359 1 120 1 361 1 63 1 102 1 150 1 165 1 226 2 
139 1 
174 1 175 1 83 1 217 1 378 1 351 1 204 1 
215 1 217 1 278 1 281 1 204 1 134 1 136 1 327 1 227 1 140 1 17 1 75 1 55 1 175 1 197 1 342 1 378 2 
201 1 66 2 6 1 204 9 70 1 159 1 12 2 167 2 168 2 15 2 311 3 17 5 208 3 21 3 172 2 356 2 174 1 175 8 274 10 178 2 121 1 212 1 81 2 83 1 215 12 217 2 182 2 128 2 281 6 285 2 367 1 134 4 136 4 327 5 227 4 38 6 330 3 140 4 192 2 45 2 46 4 51 2 336 2 54 6 374 1 58 2 340 3 377 3 147 1 342 5 197 3 378 8 102 3 152 2 
215 6 66 2 217 2 181 1 4 1 126 1 128 2 130 1 281 3 204 8 285 2 134 2 326 1 327 1 136 2 260 1 168 2 38 5 227 2 15 2 140 2 17 1 336 1 54 5 196 1 374 1 175 5 78 1 58 2 375 1 342 1 197 1 378 5 25 1 81 1 
82 1 66 1 28 1 153 1 246 1 300 1 109 1 128 2 204 2 134 1 88 1 136 1 327 1 138 1 263 1 227 1 140 1 17 1 74 1 316 1 175 2 58 2 238 1 146 1 293 1 200 1 122 1 81 1 
83 1 140 1 217 1 204 1 174 1 175 1 134 1 378 1 136 1 227 1 
215 10 15 2 66 2 51 1 128 2 54 5 281 5 204 5 175 5 58 2 285 2 378 5 168 2 81 1 38 5 
217 1 17 1 342 1 197 1 378 1 327 1 
245 1 201 2 249 1 204 2 134 1 367 1 136 2 327 3 227 2 330 4 140 2 17 3 46 1 195 1 208 4 231 1 21 4 336 2 97 1 374 2 175 2 340 1 274 1 342 4 197 2 199 1 101 1 212 2 102 1 
346 1 201 1 246 1 300 2 109 2 280 1 161 1 308 1 287 1 88 3 87 1 35 1 330 1 265 1 193 1 207 1 46 1 208 1 316 2 52 1 21 1 96 1 337 1 238 3 340 1 377 1 274 1 102 1 123 2 122 2 213 1 381 1 
215 4 140 1 217 2 334 1 54 2 281 2 336 1 204 1 374 1 175 2 134 1 378 4 136 1 38 2 227 1 
98 1 27 1 65 1 
98 1 27 1 65 1 
98 1 354 1 65 1 5 1 53 1 
98 1 27 1 65 1 
98 1 284 1 65 1 
98 1 284 1 65 1 
98 1 284 1 65 1 
98 1 65 1 
222 1 154 1 
346 8 66 1 181 1 29 4 4 1 280 1 128 1 130 1 132 2 10 1 205 2 35 4 260 1 263 1 207 1 334 1 52 1 337 1 77 1 293 1 244 1 200 1 123 2 
346 11 66 1 181 2 29 6 4 1 127 1 280 2 128 2 130 1 132 2 10 1 9 1 285 1 205 3 35 5 260 1 168 1 263 1 207 2 334 1 52 2 337 2 77 1 293 1 23 1 200 1 244 1 123 4 
346 19 66 3 181 1 29 9 4 1 127 1 126 1 280 3 128 3 130 1 132 3 10 1 285 2 205 4 326 1 35 10 260 1 168 2 263 1 15 2 39 1 207 3 334 1 52 3 337 3 77 1 78 1 293 1 23 1 25 1 200 1 244 1 123 6 
346 17 66 2 181 1 29 10 4 1 127 1 126 1 280 3 128 3 130 1 132 3 10 1 285 2 205 5 326 1 35 7 260 1 168 2 263 1 39 1 15 1 207 3 334 1 52 3 337 3 77 1 78 1 293 1 23 2 25 1 200 1 244 1 123 6 
346 8 66 1 181 1 29 4 4 1 280 1 128 1 130 1 132 2 10 1 205 2 35 4 260 1 263 1 207 1 334 1 52 1 337 1 77 1 293 1 244 1 200 1 123 2 
346 12 66 2 181 1 29 6 4 1 126 1 280 1 128 2 130 1 132 1 285 2 205 2 326 1 35 6 260 1 168 2 15 2 207 1 52 1 337 1 77 1 78 1 23 1 25 1 123 2 
346 18 66 2 181 1 29 10 4 1 126 1 127 1 280 4 128 3 130 1 132 3 10 1 285 2 205 5 326 1 35 8 260 1 168 2 263 1 15 1 39 2 207 4 334 1 52 4 337 4 77 1 78 1 293 1 23 2 25 1 200 1 244 1 123 8 
346 16 66 2 181 1 29 9 4 1 126 1 280 4 128 3 130 1 132 3 285 3 205 6 326 1 35 7 260 1 168 3 15 2 39 2 207 4 50 1 52 4 337 4 77 1 78 1 23 3 25 1 123 8 
346 7 66 1 29 3 128 1 132 3 10 2 205 6 293 3 23 3 35 4 244 1 200 1 263 3 
346 18 66 2 181 1 29 10 4 1 126 1 280 4 128 3 130 1 132 3 10 1 285 2 205 4 326 1 35 8 260 1 168 2 263 1 15 1 39 2 207 4 50 1 334 1 52 4 337 4 77 1 78 1 293 1 23 1 25 1 200 1 244 1 123 8 
346 8 39 1 66 1 29 4 207 2 334 1 280 2 128 1 52 2 132 2 337 2 205 3 10 1 293 1 23 1 35 4 200 1 244 1 123 4 263 1 
346 6 66 1 29 3 334 1 128 1 132 2 10 1 205 2 293 1 35 3 351 1 244 1 200 1 263 1 
346 4 15 1 66 1 29 2 207 1 127 1 280 1 52 1 128 1 132 1 337 1 205 2 285 1 23 1 35 2 123 2 168 1 
346 7 15 1 66 1 181 2 29 3 128 1 130 1 132 1 9 1 285 1 205 2 23 1 35 4 260 1 168 1 
346 23 66 3 29 11 181 2 280 2 128 3 130 2 250 1 132 5 10 1 205 9 285 2 9 1 35 12 168 2 263 2 15 2 39 2 207 2 313 1 334 1 52 2 337 2 293 2 23 4 119 1 200 1 244 1 123 4 
346 1 181 1 35 1 
346 1 29 1 130 1 
346 6 15 1 66 1 29 3 207 1 127 1 280 1 52 1 51 1 128 1 132 2 337 1 285 1 205 3 23 1 35 3 123 2 168 1 
346 12 66 2 181 1 29 6 4 1 126 1 280 1 128 2 130 1 132 1 285 2 205 2 326 1 35 6 260 1 168 2 15 2 207 1 52 1 337 1 77 1 78 1 23 1 25 1 123 2 
346 6 66 1 29 3 128 1 132 1 205 2 293 1 23 1 35 3 200 1 263 1 
346 3 39 1 29 1 207 1 313 1 280 1 52 1 132 1 337 1 205 2 10 1 293 1 23 1 35 2 244 1 123 2 263 1 
346 10 66 2 29 5 207 1 74 1 280 1 52 1 128 2 132 3 337 1 77 1 205 5 293 2 23 2 35 5 200 1 123 2 263 2 
346 2 29 2 207 1 280 1 52 1 128 1 337 1 77 1 205 1 23 1 123 2 168 1 
346 4 15 1 66 1 29 2 207 1 280 1 52 1 128 1 132 1 337 1 77 1 205 2 285 1 23 1 35 2 123 2 168 1 
346 3 39 1 29 1 207 3 313 1 50 1 280 3 52 3 132 1 337 3 77 1 205 2 293 1 23 1 35 2 123 6 263 1 
346 34 66 5 181 4 29 16 127 1 280 5 128 5 130 3 132 7 255 1 10 1 9 1 285 3 205 12 35 18 352 1 260 1 168 3 263 3 39 2 15 3 207 5 313 1 50 1 334 1 52 5 337 5 77 1 293 3 23 5 200 2 244 1 123 10 105 1 
297 1 265 1 238 1 171 1 88 1 122 1 64 1 
297 1 265 1 171 1 49 1 269 1 144 1 238 1 376 1 79 1 88 1 122 1 64 1 
330 1 201 1 340 1 274 1 46 1 199 1 231 1 208 1 351 1 102 1 21 1 
330 1 265 1 201 1 46 1 323 1 109 1 208 1 316 1 21 1 238 2 340 1 274 1 377 1 88 2 87 1 102 1 122 1 381 1 
82 1 109 1 323 1 348 1 87 1 88 2 12 1 330 1 265 1 45 1 46 1 208 1 316 2 21 1 238 2 340 2 377 2 274 3 276 1 102 1 212 1 122 2 381 1 
82 1 109 1 323 1 348 1 88 2 12 1 330 2 265 1 45 1 46 1 208 2 316 2 21 2 238 2 340 2 377 2 274 3 276 1 102 1 212 1 122 2 151 1 320 1 381 1 
330 3 201 1 40 1 311 1 217 1 192 1 45 1 17 2 46 1 208 3 302 1 21 3 340 1 377 1 274 4 342 1 378 1 178 1 12 1 327 2 212 1 102 1 320 1 
330 3 201 1 311 1 217 1 192 1 45 1 17 2 46 1 208 3 182 1 21 3 340 1 377 1 274 4 342 1 378 1 178 1 12 1 327 2 212 1 102 1 320 1 
330 1 118 1 46 1 208 1 102 1 21 1 
169 1 330 7 201 2 46 3 208 7 314 1 155 1 21 6 143 1 70 1 239 1 340 2 118 1 147 1 377 1 274 3 242 1 294 1 63 1 102 2 179 1 
346 6 66 1 29 3 109 1 323 1 280 2 128 1 132 2 205 2 10 1 70 1 161 1 287 2 308 1 88 2 87 1 35 3 261 1 263 1 330 1 265 2 207 2 193 2 46 1 208 1 372 1 334 1 316 1 52 2 21 1 22 1 337 2 272 1 238 2 339 1 340 1 293 1 274 1 377 1 210 1 200 1 244 1 102 1 379 1 122 1 123 4 381 1 
83 1 201 1 217 1 182 1 204 1 254 1 134 2 367 1 136 2 327 3 227 2 330 1 311 1 140 2 192 1 17 3 208 1 21 1 356 1 172 1 174 1 175 1 274 2 342 2 197 1 378 1 178 1 152 1 
330 2 192 1 46 2 208 2 21 2 6 1 70 1 340 1 118 1 147 1 377 1 274 2 102 1 
330 4 201 1 46 1 208 4 231 1 21 4 145 1 70 1 340 1 274 1 199 1 102 1 320 1 
169 1 330 2 46 2 208 2 47 1 21 2 160 1 340 1 377 1 274 1 294 1 212 1 102 1 14 1 
330 1 291 1 201 1 46 1 208 1 141 1 102 1 21 1 150 1 226 1 
330 2 46 1 208 2 21 2 143 1 70 1 340 1 111 1 274 1 63 1 102 1 
330 5 201 1 46 2 231 1 208 5 314 1 21 4 143 1 145 1 70 1 340 2 274 3 199 1 212 1 102 2 179 1 
330 5 201 1 72 1 46 2 231 1 208 5 314 1 21 4 143 1 145 1 70 1 340 2 274 3 199 1 212 1 102 2 
330 1 265 1 201 1 46 1 323 1 109 1 208 1 316 1 21 1 238 2 340 1 274 1 377 1 88 2 102 1 122 1 151 1 381 1 
169 1 330 1 46 2 208 1 21 1 340 1 147 1 377 1 274 1 242 1 294 1 212 1 102 1 
238 1 93 1 60 1 358 1 88 1 225 1 113 1 122 1 365 1 
93 1 299 1 131 1 
265 1 93 1 341 1 60 1 358 1 
265 1 82 1 217 1 93 1 299 1 17 2 348 1 279 1 131 1 115 1 251 1 254 1 358 2 60 2 341 2 378 1 178 1 276 1 327 2 
351 1 304 1 184 1 350 1 
369 1 211 1 288 1 304 1 184 1 349 1 350 1 
283 1 224 1 211 1 
369 3 191 2 304 1 349 1 184 1 350 1 277 1 288 1 211 3 164 1 190 1 206 1 
369 2 180 1 230 1 211 2 288 1 304 1 184 1 349 1 350 1 
369 1 67 1 233 1 141 1 349 1 350 1 11 1 288 1 211 1 164 1 226 1 
369 1 211 1 288 1 304 1 164 1 349 1 350 1 
369 1 211 1 288 1 304 2 164 1 184 1 349 1 
369 2 304 1 349 2 350 1 57 1 13 1 288 2 211 2 164 1 295 1 
369 3 42 1 230 2 304 1 156 1 233 1 184 1 349 1 350 2 288 1 211 3 164 1 362 1 
369 2 230 1 304 1 141 1 184 1 349 1 350 1 273 1 11 1 288 1 211 2 361 1 164 1 150 1 226 2 
369 4 180 1 230 2 220 1 304 1 233 1 184 1 349 2 350 2 288 2 211 4 164 1 362 1 
369 1 211 1 288 1 304 1 164 1 184 1 349 1 350 1 
369 4 191 1 2 1 230 2 304 2 233 1 184 2 349 1 350 3 277 1 211 4 288 1 362 1 206 1 
369 2 106 1 125 1 230 1 304 1 349 1 184 1 350 1 61 1 288 1 211 2 164 1 
369 3 191 2 277 2 211 3 288 1 304 1 164 1 184 1 188 1 349 1 350 1 206 1 
332 1 110 1 350 2 310 2 
369 1 211 1 288 1 164 1 349 1 185 1 
369 2 42 1 230 1 211 2 288 1 304 1 164 1 184 1 349 1 350 1 
292 1 
369 1 211 1 288 1 304 1 164 1 184 1 349 1 350 1 
369 3 191 1 42 1 230 1 211 3 288 1 304 1 164 1 184 1 349 1 350 1 
2 1 233 1 362 1 350 1 
304 1 350 1 

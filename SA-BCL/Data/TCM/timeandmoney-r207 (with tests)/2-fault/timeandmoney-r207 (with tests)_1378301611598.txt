#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (3,356) (3,356) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (3,356) (3,356) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (3,356) (3,356) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (3,356) (3,356) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 939 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
356 1 83 1 116 1 108 1 69 1 202 1 216 1 3 1 360 1 294 1 273 1 
356 1 83 1 116 1 108 1 69 1 202 1 216 1 3 1 360 1 294 1 273 1 
356 1 83 1 116 1 108 1 69 1 202 1 216 1 3 1 360 1 294 1 273 1 
356 1 83 1 116 1 108 1 69 1 202 1 216 1 3 1 360 1 294 1 273 1 
202 4 209 3 226 1 324 1 366 1 116 1 83 1 95 1 177 3 108 4 117 1 157 2 233 1 283 2 273 1 274 1 158 1 235 1 
202 2 209 1 226 1 261 1 294 1 203 1 116 1 83 1 204 1 95 1 108 2 216 1 97 1 233 1 273 1 274 1 
202 3 209 2 226 1 294 1 116 1 83 2 177 1 108 3 157 1 369 1 273 2 274 1 158 1 
56 1 209 5 306 1 337 1 83 2 116 1 366 1 117 1 85 1 283 2 369 1 202 9 226 1 294 1 324 1 177 7 95 1 108 9 157 4 233 1 273 2 274 1 158 3 235 1 
56 1 209 5 306 1 337 1 83 2 116 1 366 1 117 1 85 1 283 2 369 1 202 9 226 1 294 1 324 1 177 7 95 1 108 9 157 4 233 1 273 2 274 1 158 3 235 1 
298 1 37 1 91 1 
365 2 37 1 358 1 
47 2 367 2 281 1 75 2 29 2 293 2 151 2 58 1 
361 1 132 1 238 1 161 2 1 1 76 1 75 3 53 1 29 3 55 2 163 1 189 1 277 2 165 1 58 1 79 1 34 2 193 2 310 1 367 3 281 1 312 1 248 1 223 2 372 1 293 2 373 1 225 1 151 3 89 2 354 1 231 2 47 2 296 1 23 1 72 1 359 1 271 1 300 1 183 1 329 1 
47 1 21 1 367 1 281 1 75 1 29 1 293 1 163 1 239 1 151 1 
121 1 66 1 320 1 75 1 292 1 123 1 163 1 151 1 91 1 79 1 367 1 37 1 38 1 329 1 
121 1 123 2 75 1 292 1 293 1 29 1 163 1 151 1 91 1 79 1 47 1 367 1 37 1 38 2 329 1 
93 1 123 1 270 1 38 1 252 1 
93 1 74 1 123 2 37 1 270 1 340 1 38 2 91 1 
123 1 270 1 38 1 
123 1 75 1 293 1 29 1 163 1 239 1 151 1 93 1 47 1 21 1 367 1 281 1 38 1 141 1 
37 1 
323 1 93 1 74 1 123 2 37 1 270 1 38 2 91 1 
111 1 222 1 276 2 147 1 74 1 123 5 257 1 260 1 91 1 93 2 7 1 82 2 37 1 270 2 38 5 39 2 73 1 26 1 253 1 
298 1 58 1 
75 2 293 1 29 1 151 2 58 2 47 1 138 1 367 2 128 1 
288 1 149 1 130 1 
161 1 75 1 76 1 223 1 53 1 29 1 55 1 373 1 163 1 189 1 151 1 89 2 277 2 58 1 79 1 34 2 296 1 367 1 23 1 312 1 181 1 329 1 
0 1 161 1 53 1 75 2 76 1 55 1 29 2 189 1 163 1 277 2 79 1 34 2 367 2 312 1 118 1 223 1 293 1 373 1 149 1 151 2 89 2 296 1 23 1 329 1 
47 1 367 3 75 3 29 3 293 3 151 3 118 1 58 1 
367 1 75 1 29 1 293 1 163 1 239 1 151 1 
47 1 138 1 367 1 75 1 29 1 293 1 163 1 151 1 128 1 
361 1 0 1 132 1 161 1 1 1 52 1 76 1 53 1 75 4 29 4 55 1 189 1 163 2 277 2 165 1 58 1 79 2 34 2 193 1 138 1 367 4 281 1 38 1 312 1 118 1 41 1 121 1 248 1 292 1 123 1 223 1 372 1 373 1 293 3 225 1 151 4 89 2 231 2 47 2 296 1 23 1 359 1 300 1 183 1 329 2 
66 1 339 1 367 2 75 2 29 1 293 1 151 2 118 1 58 1 
121 1 0 1 52 1 123 1 75 3 292 1 293 3 29 3 163 1 151 3 79 1 279 1 47 1 138 1 367 3 37 1 38 1 118 2 329 1 
288 1 75 2 293 2 29 2 149 1 151 2 47 1 138 1 367 2 118 1 
161 1 75 1 76 1 223 1 53 1 29 1 55 1 373 1 163 1 189 1 151 1 89 2 277 2 58 1 79 1 34 2 296 1 367 1 23 1 312 1 329 1 
161 1 75 1 76 1 223 1 29 1 55 1 163 1 190 1 189 1 151 1 89 2 277 2 58 1 79 1 34 2 296 1 367 1 23 1 312 1 195 1 329 1 
361 1 362 1 191 1 165 2 278 1 35 1 193 4 310 2 370 1 288 2 170 1 68 1 248 1 146 1 372 1 149 2 225 1 231 2 94 1 327 1 359 1 377 1 183 1 130 2 
367 1 75 1 29 1 293 1 163 1 151 1 229 1 329 1 
0 1 221 1 66 1 75 5 293 4 29 4 151 5 58 1 47 1 138 1 339 1 367 5 357 1 118 2 
367 2 75 2 29 2 293 2 163 1 239 1 151 2 229 1 
154 1 143 1 
154 1 143 1 
102 1 142 1 
102 1 142 1 
102 1 142 1 
154 1 114 1 143 1 
154 1 143 1 98 1 
154 2 102 1 25 1 142 1 307 1 143 2 
154 1 114 1 143 1 
154 1 114 1 143 1 
154 1 333 1 143 1 
154 1 333 1 143 1 
154 1 333 1 143 1 
122 2 123 2 173 2 135 2 164 1 90 1 364 1 30 1 353 2 153 1 154 2 20 3 37 1 38 2 232 1 25 1 11 1 129 2 143 2 
51 1 112 1 122 1 75 2 123 1 293 2 29 2 173 1 151 2 135 1 57 1 30 1 58 1 325 1 154 1 125 1 20 1 367 2 109 1 38 1 196 1 129 1 143 1 98 1 
95 1 117 1 233 1 
95 1 233 1 261 1 
95 3 117 2 282 1 311 1 227 1 261 1 
95 2 117 1 282 1 311 1 261 1 246 1 
95 2 117 1 282 2 311 1 261 1 
51 1 112 1 276 1 74 1 258 1 191 1 259 1 57 1 192 1 35 1 365 3 243 1 82 1 37 2 39 1 38 5 169 2 370 1 119 1 145 2 222 3 123 5 152 1 91 1 93 4 22 2 327 1 178 1 270 1 358 1 26 2 253 1 
302 1 112 4 276 2 257 1 54 1 74 1 258 1 191 3 192 2 6 1 35 3 365 9 82 2 37 5 38 9 39 2 140 1 169 6 370 3 220 5 42 1 222 8 123 9 152 2 91 1 93 7 22 6 327 3 178 3 270 6 358 3 252 5 275 1 26 6 253 1 
112 1 276 1 257 1 191 1 259 1 192 1 35 1 365 4 243 1 82 1 37 3 39 1 38 3 169 2 370 1 145 1 222 3 123 3 152 1 91 1 93 2 22 2 327 1 178 1 358 2 26 2 
302 1 112 2 276 1 257 1 191 2 259 1 192 1 35 2 365 7 6 1 82 1 243 1 37 4 39 1 38 4 169 4 370 2 145 2 222 5 123 4 152 1 91 1 93 3 22 4 327 2 178 2 358 3 275 1 26 4 
298 1 351 1 277 1 
13 1 277 1 
17 1 
277 1 34 1 
290 1 351 2 89 1 77 1 277 3 34 1 
89 1 277 1 34 1 
297 1 277 1 
170 3 362 2 304 1 319 1 191 1 375 1 165 3 322 1 193 7 310 4 327 1 126 1 269 1 179 2 168 1 205 1 182 1 
170 3 362 2 304 1 319 1 191 1 375 1 165 3 322 1 193 7 310 4 327 1 126 1 269 1 179 2 168 1 205 1 182 1 
170 3 362 2 304 1 319 1 191 1 375 1 165 3 322 1 193 7 310 4 327 1 126 1 269 1 179 2 168 1 217 1 205 1 182 1 
361 1 255 1 304 2 362 5 305 4 191 4 165 15 115 1 35 3 193 31 310 16 341 1 139 1 168 1 370 3 40 3 63 1 170 10 319 2 200 1 248 1 372 1 375 1 322 2 231 2 126 2 327 4 178 3 269 5 179 3 205 1 182 1 301 1 183 1 
361 2 255 1 362 3 304 1 191 1 165 4 81 1 193 9 310 5 166 1 168 1 170 4 248 2 319 1 372 2 375 1 322 1 231 4 327 1 126 1 269 1 179 2 182 1 183 2 
27 1 161 1 55 1 335 1 189 1 209 1 261 1 137 1 83 1 116 1 117 1 344 1 104 1 105 1 316 1 223 1 202 2 226 1 294 1 227 1 267 1 177 1 95 2 108 2 23 1 96 1 233 1 273 1 274 1 254 1 
27 1 161 1 55 1 335 1 189 1 209 1 261 1 83 1 117 1 344 1 105 1 316 1 64 1 223 1 202 3 150 1 226 1 227 1 294 1 267 1 177 2 95 2 108 3 23 1 96 1 233 1 272 1 273 1 274 1 254 1 
27 1 161 1 55 1 189 1 209 1 261 1 117 1 105 1 316 1 64 1 223 1 202 2 150 1 226 1 294 1 227 1 267 1 177 2 95 2 108 2 23 1 96 1 233 1 274 1 254 1 
287 1 171 1 27 2 161 1 223 1 202 1 55 1 189 1 134 1 277 1 294 2 267 2 34 1 83 1 23 1 108 1 342 1 312 1 272 1 273 1 144 1 219 1 316 2 
27 1 161 1 55 1 335 1 189 1 261 1 137 1 83 1 116 1 117 1 344 1 105 1 316 1 64 1 223 1 202 1 294 1 227 1 267 1 95 2 108 1 23 1 96 1 233 1 273 1 254 1 
176 1 
331 1 276 1 55 2 189 1 134 1 136 2 277 1 60 1 9 1 342 1 285 4 14 1 347 1 65 2 66 1 292 1 249 2 70 1 151 1 152 1 107 1 295 2 250 1 355 2 23 1 24 1 358 2 26 2 253 1 161 2 74 3 75 1 163 1 32 1 79 1 34 1 365 2 82 1 367 1 37 2 38 5 39 1 312 2 315 1 371 2 121 1 222 2 123 5 223 2 320 1 91 1 270 6 127 1 378 2 329 1 
75 1 74 1 163 1 32 1 79 1 367 1 38 3 285 2 347 1 14 1 121 1 66 1 292 1 320 1 123 3 151 1 323 1 250 1 270 2 24 1 378 1 329 1 
75 1 74 1 163 1 32 1 79 1 367 1 37 1 38 3 285 3 347 1 14 1 121 1 66 1 292 1 320 1 123 3 151 1 91 1 323 1 250 1 355 1 270 1 24 1 329 1 
74 1 75 1 163 1 32 1 79 1 367 1 37 1 38 3 285 3 347 1 14 1 121 1 66 1 65 1 292 1 320 1 123 3 151 1 91 1 323 1 250 1 355 1 270 2 24 1 378 1 329 1 
331 1 276 1 136 2 240 1 285 6 14 1 347 1 65 4 66 1 289 1 292 1 249 2 151 1 70 1 295 2 250 1 355 4 299 1 24 1 358 2 253 1 26 1 74 3 75 1 163 1 32 1 79 1 367 1 82 1 37 5 38 5 39 1 368 1 88 1 121 1 371 2 222 1 123 5 320 1 91 5 323 1 270 7 378 4 329 1 
331 1 276 1 136 2 9 1 285 4 14 1 347 1 66 1 65 2 292 1 249 2 151 1 70 1 295 2 250 1 355 2 24 1 358 2 253 1 26 1 75 1 74 2 163 1 32 1 79 1 365 2 367 1 82 1 37 2 38 4 39 1 121 1 371 2 222 1 123 4 320 1 91 1 270 4 378 2 329 1 
331 1 276 1 74 2 75 1 163 1 136 2 32 1 79 1 367 1 82 1 37 1 39 1 38 4 368 1 285 4 347 1 14 1 88 1 371 2 121 1 222 1 65 2 66 1 292 1 320 1 123 4 249 2 70 1 151 1 91 1 295 2 250 1 355 2 299 1 270 4 24 1 358 2 378 2 26 1 329 1 253 1 
331 1 276 1 74 2 75 1 163 1 136 2 32 1 79 1 367 1 82 1 37 1 39 1 38 4 368 1 285 4 347 1 14 1 88 1 371 2 121 1 222 1 65 2 66 1 292 1 320 1 123 4 249 2 70 1 151 1 91 1 295 2 250 1 355 2 299 1 270 4 24 1 358 2 378 2 26 1 329 1 253 1 
276 1 74 2 75 1 163 1 136 2 32 1 79 1 365 2 367 1 213 1 82 1 37 1 39 1 38 4 368 1 285 4 318 2 347 1 14 1 371 2 121 1 222 1 65 2 349 1 66 1 292 1 320 1 123 4 321 1 70 1 151 1 91 1 18 2 250 1 355 2 270 4 24 1 378 2 26 1 329 1 253 1 
331 1 276 1 74 2 75 1 163 1 136 2 32 1 79 1 82 1 367 1 37 1 39 1 38 4 368 1 285 5 347 1 14 1 88 1 371 2 121 1 222 1 66 1 289 1 65 3 292 1 320 1 123 4 249 2 70 1 151 1 91 1 295 2 250 1 355 3 299 1 270 5 24 1 358 2 378 3 26 1 253 1 329 1 
331 1 276 1 74 2 75 1 163 1 136 2 32 1 79 1 82 1 367 1 37 1 39 1 38 4 368 1 285 5 347 1 14 1 88 1 371 2 121 1 222 1 66 1 289 1 65 3 292 1 320 1 123 4 249 2 70 1 151 1 91 1 295 2 250 1 355 3 299 1 270 5 24 1 358 2 378 3 26 1 253 1 329 1 
276 1 136 2 9 1 285 4 14 1 347 1 349 1 66 1 65 2 292 1 151 1 70 1 18 2 250 1 355 2 24 1 253 1 26 1 75 1 74 2 163 1 32 1 79 1 365 2 367 1 82 1 37 1 38 4 39 1 318 2 121 1 371 2 222 1 123 4 320 1 91 1 270 4 378 2 329 1 
361 1 304 1 362 2 191 1 165 3 58 2 193 6 310 3 168 1 288 1 170 2 248 1 149 1 372 1 225 1 375 1 231 2 94 1 298 1 126 1 327 1 179 1 359 1 182 1 183 1 130 1 
361 2 1 1 362 1 332 1 305 3 191 1 165 6 58 1 115 1 35 1 193 14 310 8 139 1 370 2 40 3 286 1 170 2 288 4 172 1 248 2 372 2 149 11 225 2 354 1 231 4 327 2 269 1 178 2 359 1 234 1 381 1 183 2 130 11 
0 1 1 1 53 1 55 1 189 1 277 2 5 1 58 1 193 2 286 1 288 1 248 1 293 1 151 2 354 1 296 1 23 1 359 1 361 1 161 1 75 2 76 1 29 2 163 1 165 1 79 1 34 2 310 1 367 2 84 1 312 1 118 1 120 1 223 1 372 1 373 1 225 1 89 2 231 2 181 1 183 1 329 1 
0 1 1 1 53 2 55 3 189 2 191 3 277 4 58 2 193 20 197 1 286 1 64 1 288 7 16 2 248 3 293 1 149 7 151 3 354 1 296 2 23 2 359 3 300 2 361 3 161 3 304 1 362 4 75 3 363 2 76 2 29 3 163 2 165 10 211 2 79 2 212 2 34 4 35 2 310 10 367 3 312 1 168 1 86 1 118 1 370 2 170 8 223 3 372 3 373 2 225 3 89 4 375 1 231 6 326 1 126 1 327 3 269 4 178 2 179 1 182 1 183 3 130 7 329 2 
361 2 161 8 1 1 75 1 29 1 55 8 334 1 189 2 134 1 277 3 78 1 165 1 34 2 193 2 280 1 367 1 310 1 312 2 342 1 104 1 245 1 118 1 15 1 64 1 248 2 223 7 293 1 372 2 151 1 225 2 354 1 231 4 268 1 94 1 23 2 359 2 271 2 183 2 184 1 
361 1 362 1 75 1 29 1 191 1 165 2 35 1 138 1 193 3 367 1 310 1 370 1 265 1 286 1 170 1 288 1 248 1 149 1 293 1 372 1 225 1 151 1 231 2 47 1 327 1 178 1 359 1 130 1 183 1 
361 1 170 1 288 1 248 1 146 1 149 1 372 1 225 1 231 2 193 2 94 1 310 2 327 1 269 1 359 1 370 1 130 1 183 1 
361 1 170 1 288 1 362 1 248 1 149 1 372 1 225 1 191 1 165 2 231 2 35 1 193 2 94 1 359 1 377 1 130 1 183 1 
361 1 362 1 191 1 165 2 35 1 193 4 310 2 370 1 288 2 170 2 248 1 372 1 149 2 225 1 231 2 94 1 327 1 178 1 269 1 359 1 183 1 130 2 
361 1 170 1 288 1 248 1 146 1 149 1 372 1 225 1 231 2 193 2 310 2 327 1 269 1 359 1 370 1 130 1 183 1 184 1 
361 1 170 1 288 1 362 1 248 1 149 1 372 1 225 1 191 1 165 2 231 2 35 1 193 2 359 1 377 1 130 1 183 1 184 1 
361 1 362 1 191 1 165 2 35 1 193 4 310 2 370 1 288 2 170 2 248 1 372 1 149 2 225 1 231 2 327 1 178 1 269 1 359 1 183 1 130 2 184 1 
361 1 362 1 191 1 165 2 35 1 193 4 310 2 370 1 288 2 170 2 248 1 372 1 149 2 225 1 231 2 327 1 178 1 269 1 359 1 183 1 130 2 
361 1 161 1 1 1 53 1 76 1 75 1 55 1 29 1 189 1 163 1 277 2 165 1 58 1 79 1 34 2 193 2 310 1 367 1 312 1 248 1 223 1 372 1 373 1 151 1 225 1 89 2 354 1 231 2 296 1 23 1 359 1 300 1 183 1 329 1 
361 1 161 1 1 1 76 1 75 1 55 1 29 1 189 1 190 1 163 1 277 2 165 1 58 1 79 1 34 2 193 2 310 1 367 1 312 1 195 1 248 1 223 1 372 1 151 1 225 1 89 2 354 1 231 2 296 1 23 1 359 1 110 1 183 1 329 1 
361 1 362 1 191 1 165 2 35 1 193 4 310 2 370 1 286 1 288 2 170 2 248 1 372 1 149 2 225 1 231 2 327 1 178 1 269 1 359 1 183 1 130 2 
361 1 161 1 362 1 53 1 363 1 76 1 75 1 55 1 29 1 189 1 163 1 191 1 277 2 165 2 79 1 34 2 35 1 193 4 310 2 367 1 370 1 104 1 170 2 288 2 248 1 223 1 149 2 372 1 373 1 151 1 225 1 89 2 231 2 296 1 327 1 269 1 178 1 23 1 359 1 300 1 130 2 183 1 329 1 
361 1 75 1 29 1 191 1 165 1 35 1 138 1 193 3 367 1 310 2 370 1 345 1 286 1 170 1 288 1 248 1 293 1 372 1 149 1 225 1 151 1 231 2 47 1 327 1 269 1 178 1 359 1 183 1 130 1 
361 2 131 2 362 3 2 2 305 2 191 3 165 10 115 1 35 3 80 1 81 1 59 1 193 19 310 9 215 1 214 1 139 1 370 3 40 1 170 6 248 2 372 2 231 4 327 3 178 3 269 3 180 1 382 1 159 1 183 2 
361 3 131 1 255 2 362 2 2 4 305 2 191 2 165 12 101 1 35 2 80 2 81 1 59 1 193 26 310 14 8 1 139 2 313 1 370 3 40 2 170 4 248 3 372 3 230 1 231 6 175 1 155 1 327 3 269 2 178 3 180 1 382 2 159 1 183 3 
131 1 2 4 191 5 101 1 193 41 59 1 8 1 139 3 198 1 248 3 155 1 159 1 361 3 255 1 362 4 304 1 305 4 165 21 115 1 35 4 81 1 80 2 310 20 214 1 313 1 168 1 370 4 40 3 170 8 372 3 375 1 230 1 231 6 175 1 327 5 126 1 269 4 178 4 179 1 180 1 182 1 183 3 382 1 
361 4 131 1 255 2 304 1 362 4 2 4 305 4 191 4 165 18 101 1 115 1 35 3 80 2 81 1 59 1 193 38 310 20 8 1 214 1 139 3 168 1 313 1 370 4 40 3 198 1 170 7 248 4 372 4 375 1 230 1 231 8 175 1 155 1 126 1 327 5 178 4 269 3 179 1 180 1 182 1 382 1 159 1 183 4 
361 2 131 1 255 1 304 1 362 7 2 4 332 2 305 4 191 8 165 25 101 1 115 2 35 7 80 1 81 1 59 1 193 52 310 27 8 1 139 2 168 1 313 1 370 7 40 4 170 14 248 2 372 2 375 1 230 1 231 4 175 1 155 1 126 1 327 8 178 7 269 7 179 1 180 1 182 1 382 1 159 1 183 2 
154 1 122 1 173 1 135 1 25 1 90 1 129 1 308 1 143 1 153 1 
109 1 98 1 
154 1 122 1 28 1 173 1 10 1 135 1 379 1 129 1 143 1 
122 1 123 1 173 1 135 1 90 1 364 1 30 1 353 1 153 1 154 1 20 2 37 1 38 1 232 1 25 1 11 1 129 1 143 1 
122 1 123 1 173 1 135 1 90 1 364 1 30 1 353 1 153 1 154 1 20 2 37 1 38 1 232 1 25 1 11 1 129 1 143 1 
122 1 123 1 173 1 135 1 90 1 364 1 30 1 353 1 153 1 154 1 20 2 37 1 38 1 232 1 25 1 11 1 129 1 143 1 
328 1 307 1 114 1 
328 1 307 1 114 1 
333 1 61 1 
333 1 61 1 307 1 
125 1 196 1 
112 1 51 1 75 2 29 2 135 1 57 1 58 1 367 2 38 1 11 1 196 1 143 1 122 1 123 1 293 2 173 1 151 2 352 1 353 1 93 1 154 1 325 1 20 1 125 1 109 1 129 1 98 1 
328 1 114 1 
333 1 61 1 307 1 
361 1 161 2 1 1 75 2 55 2 189 1 277 1 78 1 165 1 34 1 193 2 280 1 367 2 310 1 286 1 317 1 199 1 248 1 223 2 224 1 372 1 225 1 151 2 354 1 231 2 48 1 23 1 359 1 49 1 271 2 183 1 
64 1 161 2 27 1 223 2 55 2 189 1 227 1 261 1 4 1 263 1 95 2 117 1 23 1 96 1 233 1 344 1 104 1 12 1 254 1 
64 1 348 1 161 1 27 1 223 1 55 1 189 1 227 1 261 1 95 2 117 1 23 1 96 1 233 1 344 1 12 1 254 1 
161 1 27 1 171 1 223 1 55 1 189 1 134 1 277 1 263 1 34 1 241 1 23 1 312 1 342 1 
64 1 161 1 27 1 223 1 55 1 189 1 227 1 261 1 4 1 263 1 95 2 117 1 23 1 96 1 233 1 344 1 12 1 254 1 
218 1 
111 1 222 1 298 1 147 1 37 1 91 1 26 1 
331 1 276 1 74 1 365 1 82 1 37 2 39 1 38 1 222 1 123 1 249 1 91 1 295 1 270 1 358 1 26 1 253 1 
185 1 133 2 276 4 187 2 55 3 189 4 191 2 277 10 104 1 103 2 13 3 290 1 147 1 350 2 152 2 351 2 297 2 22 6 23 3 358 6 253 4 160 2 26 8 111 1 256 2 161 3 76 2 74 3 162 2 212 2 34 3 365 12 35 2 82 4 37 8 39 4 38 5 312 1 169 6 370 2 87 1 315 1 121 2 222 9 43 1 223 3 123 5 44 1 89 3 91 2 327 2 178 2 270 5 330 1 
276 2 74 1 187 2 162 1 305 1 191 2 31 1 365 6 35 2 82 2 8 1 37 5 38 1 39 2 139 1 313 1 169 5 370 2 40 1 315 1 222 8 123 1 152 1 91 2 376 1 230 1 175 1 22 5 155 1 327 2 178 2 270 1 358 3 253 2 26 5 
304 1 276 1 187 2 75 1 29 1 162 1 163 1 239 1 191 1 367 1 82 1 281 1 39 1 38 1 168 1 141 1 222 2 123 1 124 1 293 1 151 1 47 1 21 1 126 1 327 2 299 1 253 1 26 2 
111 1 222 1 276 1 147 1 91 1 82 1 37 1 39 1 253 1 26 1 
222 5 187 2 162 1 191 2 212 1 365 10 35 2 22 5 327 2 178 2 37 5 358 5 169 5 370 2 26 5 
123 1 74 1 37 1 270 1 38 1 91 1 
161 4 276 2 257 1 74 2 55 4 189 1 134 1 113 1 277 1 34 1 82 2 60 1 39 2 38 3 312 2 342 1 87 2 315 2 222 2 223 4 123 3 148 1 44 1 107 1 152 2 23 1 270 4 253 1 26 2 
361 1 161 1 132 1 1 1 76 1 75 3 53 1 55 1 29 3 189 1 163 1 277 2 165 1 58 1 79 1 34 2 193 1 367 3 281 1 312 1 248 1 223 1 372 1 293 2 373 1 225 1 151 3 89 2 231 2 47 2 296 1 23 1 359 1 300 1 183 1 329 1 
222 1 276 1 152 1 91 2 365 4 22 2 82 1 179 1 37 4 39 1 358 2 169 2 26 2 253 1 315 1 
173 1 135 1 210 1 
125 1 173 1 135 1 100 1 90 1 
173 1 135 1 210 1 
173 1 135 1 210 1 
173 1 135 1 336 1 
173 1 135 1 336 1 
173 1 135 1 336 1 
173 1 135 1 
154 1 143 1 
361 2 170 3 255 1 362 2 248 2 304 1 372 2 191 1 375 1 165 4 231 4 193 8 310 4 327 1 126 1 269 1 179 1 168 1 182 1 183 2 
193 6 170 2 310 3 327 1 362 2 126 1 304 1 298 1 179 1 191 1 168 1 375 1 165 3 182 1 
361 1 170 2 291 1 362 1 248 1 372 1 191 1 165 2 35 1 231 2 193 4 310 2 327 1 178 1 269 1 370 1 183 1 
170 2 362 1 305 2 191 1 165 4 115 1 35 1 193 7 310 3 327 1 178 1 269 1 139 1 370 1 40 1 
361 2 255 2 304 2 362 5 332 1 305 2 191 3 165 12 115 1 35 2 193 23 309 1 310 11 168 1 370 2 40 2 170 9 248 2 372 2 375 1 231 4 126 2 327 3 269 4 178 2 179 1 234 1 182 1 183 2 
193 1 305 1 165 1 
193 1 310 1 40 1 
361 1 170 3 291 1 248 1 362 2 372 1 191 1 165 3 212 1 231 2 35 1 193 6 310 3 327 1 178 1 269 1 370 1 183 1 
361 1 362 1 305 1 191 2 165 6 35 2 193 12 81 1 310 6 8 1 139 1 313 1 370 2 40 1 170 2 248 1 372 1 230 1 231 2 175 1 155 1 327 2 269 1 178 2 183 1 
170 2 304 1 362 1 191 1 165 3 193 6 310 3 327 1 126 1 269 1 168 1 
361 1 170 2 255 1 362 1 304 1 248 1 372 1 375 1 165 2 231 2 309 1 193 3 310 1 126 1 269 1 182 1 183 1 
361 1 170 5 248 1 304 2 362 3 372 1 124 1 191 2 165 5 231 2 81 1 193 10 310 5 126 2 327 2 269 2 168 1 183 1 
361 1 170 1 248 1 372 1 231 2 81 1 193 2 310 2 327 1 269 1 370 1 183 1 
361 1 170 2 362 1 248 1 372 1 191 1 165 2 35 1 231 2 81 1 193 4 310 2 327 1 178 1 269 1 370 1 183 1 
361 3 255 1 170 2 248 3 304 1 362 1 372 3 165 2 231 6 309 1 193 3 81 1 310 1 126 1 269 1 214 1 183 3 
361 5 255 2 304 3 362 7 305 4 191 5 165 18 115 1 35 3 309 1 81 1 193 34 310 16 214 1 139 1 168 2 370 3 40 3 63 1 170 12 291 1 200 1 248 5 372 5 375 1 231 10 126 3 327 5 178 3 269 5 179 1 182 1 301 1 183 5 
361 1 304 1 362 2 305 1 191 1 165 4 193 8 81 1 310 4 139 1 313 1 168 1 40 1 170 2 248 1 372 1 375 1 231 2 327 1 126 1 179 1 182 1 183 1 
361 2 362 2 304 1 305 2 191 1 165 5 115 1 193 11 81 1 310 6 139 1 168 1 313 1 370 1 40 1 170 3 291 1 248 2 372 2 375 1 231 4 126 1 327 2 178 1 269 1 179 1 182 1 183 2 
361 3 255 1 304 1 362 3 305 1 191 3 165 10 35 2 193 19 81 1 310 9 8 1 139 1 168 1 313 1 370 2 40 1 170 4 291 1 248 3 372 3 375 1 230 1 231 6 175 1 155 1 126 1 327 3 269 1 178 2 179 1 182 1 183 3 
361 3 255 1 304 1 362 3 305 1 191 2 165 7 35 1 193 17 81 1 310 10 8 1 139 1 168 1 313 1 370 2 40 1 170 5 291 1 248 3 372 3 375 1 230 1 231 6 175 1 155 1 126 1 327 3 269 2 178 2 179 1 182 1 183 3 
361 1 304 1 362 2 305 1 191 1 165 4 193 8 81 1 310 4 139 1 313 1 168 1 40 1 170 2 248 1 372 1 375 1 231 2 327 1 126 1 179 1 182 1 183 1 
361 1 362 1 305 1 191 2 165 6 35 2 193 12 81 1 310 6 8 1 139 1 313 1 370 2 40 1 170 2 248 1 372 1 230 1 231 2 175 1 155 1 327 2 269 1 178 2 183 1 
361 4 255 2 304 1 362 3 305 1 191 2 165 8 35 1 193 18 81 1 310 10 8 1 139 1 168 1 313 1 370 2 40 1 170 5 291 1 248 4 372 4 375 1 230 1 231 8 175 1 155 1 126 1 327 3 269 2 178 2 179 1 182 1 183 4 
361 4 255 2 362 3 305 1 191 2 165 7 35 2 193 16 81 1 310 9 8 1 214 1 139 1 313 1 370 3 40 1 170 6 248 4 372 4 230 1 231 8 175 1 155 1 327 3 269 3 178 3 183 4 
170 6 304 3 362 3 191 1 375 2 165 4 193 7 310 3 126 3 327 1 269 3 168 1 182 1 
361 4 255 2 304 1 362 3 305 1 191 2 165 8 35 1 193 18 81 1 310 10 8 1 214 1 139 1 168 1 313 1 370 2 40 1 170 4 248 4 372 4 375 1 230 1 231 8 175 1 155 1 126 1 327 3 269 1 178 2 179 1 182 1 183 4 
367 1 66 1 339 1 75 1 151 1 58 1 237 1 
66 1 75 1 151 1 46 1 262 1 58 1 339 1 367 1 50 1 314 1 380 1 237 1 
161 1 298 1 23 1 223 1 55 1 189 1 342 1 134 1 312 1 277 1 34 1 
161 1 76 1 75 2 223 1 293 1 29 2 55 1 373 1 163 1 189 1 151 2 89 2 277 2 58 1 79 1 34 2 296 1 367 2 23 1 312 1 118 1 329 1 
161 1 75 1 223 1 293 1 29 1 55 1 373 1 163 1 189 1 151 2 89 1 277 1 58 1 34 1 296 1 367 2 23 1 284 1 118 1 87 1 
161 1 75 1 223 1 293 1 29 1 55 1 163 1 189 1 190 1 151 2 89 1 277 1 58 1 34 1 296 1 367 2 23 1 284 1 118 1 87 1 
13 1 121 1 161 3 76 1 123 2 223 3 188 1 55 3 189 1 89 1 351 1 277 4 91 1 34 1 242 1 297 1 23 1 37 1 270 1 38 2 156 1 312 1 87 1 
13 1 121 1 161 3 76 1 123 2 223 3 55 3 350 1 189 1 89 1 351 1 277 4 91 1 34 1 242 1 297 1 23 1 37 1 270 1 38 2 312 1 87 1 
15 1 161 1 23 1 223 1 55 1 189 1 
15 1 207 1 64 1 161 7 290 1 223 6 55 7 334 1 189 3 89 1 277 3 33 1 34 2 268 1 280 1 23 2 271 1 312 2 104 1 245 1 236 1 
53 1 55 1 189 1 191 1 277 2 58 2 193 6 104 1 286 1 288 1 248 2 149 1 293 1 151 2 296 1 23 1 359 2 300 1 361 2 161 1 304 1 362 2 363 1 75 2 76 1 29 2 163 1 165 3 211 1 79 1 34 2 367 2 310 3 168 1 118 1 170 2 223 1 373 1 372 2 225 2 89 2 375 1 231 4 48 1 126 1 327 1 179 1 182 1 130 1 183 2 329 1 
111 1 256 1 161 1 276 2 74 1 55 1 277 2 82 2 37 1 39 2 38 3 312 1 103 1 13 1 121 1 222 1 147 1 223 1 123 3 350 1 44 1 351 1 91 1 93 1 270 2 26 1 253 2 160 1 
15 1 185 1 161 2 290 1 223 2 55 2 189 2 351 1 89 1 277 2 34 1 23 1 104 1 
161 4 223 4 55 4 189 1 134 1 277 1 34 1 242 1 23 1 36 1 312 1 342 1 104 1 
161 2 223 2 55 2 189 2 89 1 277 1 33 1 34 1 244 1 23 1 62 1 86 1 87 1 236 1 
161 1 95 1 23 1 223 1 55 1 189 1 312 1 233 1 261 1 254 1 
64 1 280 1 161 2 23 1 223 2 224 1 55 2 189 1 277 1 104 1 34 1 
161 5 223 4 55 5 189 2 334 1 134 1 277 3 34 2 268 1 280 1 23 2 36 1 342 1 312 1 104 1 87 1 
161 5 223 4 55 5 189 2 334 1 134 1 45 1 277 3 34 2 280 1 23 2 36 1 342 1 312 1 104 1 87 1 
161 1 76 1 75 2 223 1 293 1 29 2 55 1 163 1 189 1 190 1 151 2 89 2 277 2 58 1 79 1 34 2 296 1 367 2 23 1 312 1 118 1 329 1 
207 1 161 1 290 1 223 1 55 1 189 2 89 1 277 1 33 1 34 1 23 1 87 1 236 1 
199 1 75 1 151 1 19 1 367 1 167 1 49 1 206 1 317 1 
194 1 71 1 167 1 
19 1 167 1 343 1 206 1 58 1 
121 1 52 1 123 2 292 1 163 1 91 1 58 1 79 1 174 1 93 1 19 2 71 1 194 1 37 1 38 2 167 1 343 2 206 2 329 1 
298 1 209 1 226 1 274 1 
83 1 108 1 202 1 209 1 226 1 273 1 274 1 
202 1 294 1 316 1 
83 1 116 1 108 3 202 3 209 1 97 2 226 1 374 1 273 1 274 1 264 1 92 1 
83 1 177 1 108 2 202 2 209 1 283 1 226 1 273 1 274 1 
324 1 83 1 116 1 95 1 117 1 108 1 202 1 157 1 209 1 233 1 273 1 
83 1 116 1 108 1 202 1 209 1 273 1 274 1 
83 1 116 1 108 1 202 1 226 1 273 1 274 2 
303 1 67 1 202 2 209 1 251 1 116 1 83 2 108 2 273 2 274 1 
202 3 306 1 209 2 226 1 337 1 116 1 83 1 177 2 108 3 157 1 273 1 274 1 158 1 
99 1 202 2 209 1 226 1 261 1 227 1 116 1 83 1 95 2 177 1 108 2 117 1 233 1 273 1 274 1 
202 4 209 2 226 1 116 1 83 2 366 1 177 2 108 4 157 1 283 1 273 2 274 1 158 1 
83 1 116 1 108 1 202 1 209 1 226 1 273 1 274 1 
202 4 209 3 226 2 374 1 264 1 83 1 177 2 108 4 157 1 97 1 273 1 274 2 158 1 247 1 
346 1 202 2 56 1 209 1 226 1 116 1 83 1 177 1 108 2 273 1 274 1 106 1 
186 1 202 3 209 1 226 1 374 2 264 1 116 1 83 1 108 3 97 2 273 1 274 1 
266 1 338 1 201 2 209 2 
83 1 116 1 208 1 108 1 202 1 273 1 
83 1 116 1 177 1 108 2 202 2 209 1 306 1 226 1 273 1 274 1 
228 1 
83 1 116 1 108 1 202 1 209 1 226 1 273 1 274 1 
83 1 116 1 177 1 108 3 202 3 306 1 209 1 97 1 226 1 273 1 274 1 
157 1 209 1 158 1 247 1 
209 1 274 1 

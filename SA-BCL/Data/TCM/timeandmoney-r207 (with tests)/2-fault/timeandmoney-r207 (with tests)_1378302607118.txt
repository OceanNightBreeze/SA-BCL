#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 1231 | return null
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 4619 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
39 4 317 1 160 2 345 2 320 1 365 1 62 3 91 1 300 2 95 1 29 1 244 2 31 1 119 2 275 1 32 2 73 6 374 1 122 1 98 1 173 1 155 9 77 2 53 1 130 5 55 1 339 1 314 9 
39 4 317 1 345 2 160 2 320 1 365 1 62 3 91 1 300 2 95 1 29 1 244 2 31 1 119 2 275 1 32 2 73 6 374 1 122 1 98 1 173 1 155 9 77 2 53 1 130 5 55 1 339 1 314 9 
39 5 317 1 345 2 160 2 320 1 365 1 62 4 91 1 300 2 95 1 29 1 244 2 31 1 119 2 275 1 32 2 73 7 374 1 122 1 98 1 173 1 155 10 77 2 53 1 130 6 55 1 339 1 314 10 
39 3 317 1 345 2 160 1 320 1 365 1 62 2 91 1 300 2 95 1 29 1 244 2 31 1 119 2 32 2 73 4 374 1 122 1 98 1 173 1 155 7 77 2 53 1 130 4 55 1 339 1 314 7 
244 1 39 2 119 1 275 1 73 3 345 1 160 2 374 1 98 1 365 1 62 1 77 1 155 4 53 1 130 3 55 1 314 4 300 1 
119 1 32 1 345 1 374 1 219 1 289 1 6 1 365 1 77 1 155 2 91 1 130 1 55 1 314 2 300 1 95 1 
39 1 317 1 32 1 73 1 345 2 374 1 365 1 62 1 77 2 155 3 130 2 55 1 314 3 
244 1 274 1 31 1 39 4 119 1 275 1 317 1 32 1 73 7 160 2 345 2 374 1 98 1 209 1 365 1 62 3 77 2 155 9 53 1 130 5 55 1 339 1 314 9 300 1 
244 1 274 1 31 1 39 4 119 1 275 1 317 1 32 1 73 7 160 2 345 2 374 1 98 1 209 1 365 1 62 3 77 2 155 9 53 1 130 5 55 1 339 1 314 9 300 1 
216 1 114 1 380 1 
349 1 171 2 114 1 
96 2 285 2 181 2 263 2 80 1 271 2 174 1 41 2 
177 1 285 2 262 2 229 1 287 1 230 1 181 2 318 1 263 2 137 1 264 1 110 1 41 2 268 1 239 1 165 1 326 1 191 1 9 1 271 3 47 2 70 1 96 3 303 1 150 1 360 1 252 2 254 1 202 1 80 1 282 1 313 1 81 1 105 2 174 1 175 1 342 2 
96 1 285 1 24 1 181 1 263 1 2 1 80 1 136 1 271 1 41 1 
216 1 284 1 96 1 33 1 250 1 263 1 2 1 265 1 114 1 226 1 54 1 7 1 241 1 271 1 
216 1 284 2 285 1 96 1 33 2 181 1 263 1 2 1 265 1 41 1 114 1 226 1 7 1 241 1 271 1 
284 1 157 1 261 1 238 1 33 1 
216 1 284 2 157 1 238 1 114 1 33 2 258 1 132 1 
284 1 238 1 33 1 
157 1 284 1 285 1 96 1 33 1 181 1 263 1 2 1 136 1 41 1 24 1 270 1 80 1 271 1 
114 1 
216 1 284 2 157 1 238 1 114 1 33 2 121 1 132 1 
216 1 157 2 284 5 228 1 178 1 59 1 33 5 108 1 12 1 21 2 52 2 128 1 238 2 213 1 269 2 114 1 353 1 132 1 156 1 
70 1 285 1 96 2 262 1 230 1 150 1 181 1 263 1 251 1 252 1 268 1 239 1 326 1 313 1 81 1 271 2 215 1 175 1 301 1 342 1 
380 1 174 1 
96 2 285 1 181 1 263 2 41 1 310 1 101 1 271 2 174 2 
8 1 251 1 291 1 
70 1 96 1 262 1 150 1 230 1 252 1 235 1 268 1 239 1 326 1 313 1 81 1 271 1 174 1 342 1 175 1 
285 4 96 5 195 1 181 4 250 1 263 5 208 1 41 1 310 1 237 1 271 5 174 1 215 2 301 1 
96 1 285 1 24 1 181 1 263 1 2 1 271 1 87 1 
96 3 285 3 181 3 263 3 271 3 174 1 215 1 41 1 
96 1 285 1 24 1 181 1 263 1 2 1 271 1 
96 1 285 1 310 1 101 1 181 1 263 1 2 1 271 1 41 1 
284 1 177 1 285 3 262 1 229 1 287 1 230 1 318 1 181 3 263 3 137 1 2 1 4 1 264 1 265 1 110 1 41 2 268 1 239 1 165 1 326 1 7 1 241 1 271 4 215 1 301 1 47 1 117 1 70 1 96 4 33 1 150 1 252 1 310 1 226 1 202 1 313 1 282 1 80 1 81 1 105 2 174 1 175 1 342 1 
96 2 285 1 195 1 181 1 250 1 263 2 271 2 174 1 215 1 
284 1 285 3 96 3 33 1 181 3 263 3 2 1 4 1 265 1 41 1 310 1 114 1 338 1 226 1 7 1 241 1 271 3 215 2 301 1 
285 2 96 2 181 2 263 2 251 1 291 1 41 1 310 1 271 2 215 1 
70 1 96 1 262 1 150 1 230 1 252 1 268 1 239 1 326 1 313 1 81 1 271 1 174 1 342 1 175 1 
70 1 96 1 262 1 150 1 230 1 252 1 15 1 129 1 326 1 313 1 81 1 271 1 174 1 342 1 175 1 
260 1 177 1 344 1 287 1 137 2 264 1 110 1 291 2 165 1 295 1 8 2 352 1 9 2 10 1 47 4 332 1 304 1 372 1 197 1 251 2 153 1 202 1 105 2 20 1 
87 1 
276 1 134 1 
276 1 134 1 
163 1 198 1 
163 1 198 1 
163 1 198 1 
276 1 134 1 100 1 
276 1 134 1 217 1 
163 1 65 1 276 2 134 2 198 1 220 1 
276 1 134 1 100 1 
276 1 134 1 100 1 
276 1 134 1 123 1 
276 1 134 1 123 1 
276 1 134 1 123 1 
284 1 82 1 285 2 57 1 134 1 181 2 263 2 86 1 321 1 351 1 271 2 144 1 193 1 96 2 30 1 276 1 357 1 33 1 172 1 217 1 335 1 223 1 201 1 174 1 
284 2 82 1 57 2 97 2 330 1 276 2 134 2 33 2 172 2 126 1 65 1 335 2 88 1 114 1 141 1 351 3 166 1 379 1 144 2 
244 1 119 1 300 1 
119 1 289 1 300 1 
244 2 146 1 356 1 289 1 300 3 111 1 
244 1 146 1 356 1 107 1 289 1 300 2 
244 1 146 2 356 1 289 1 300 2 
284 5 157 4 178 1 344 1 108 3 21 1 86 1 322 1 349 1 112 1 238 1 269 1 295 1 294 2 114 2 10 1 193 1 243 2 216 1 171 3 371 1 357 1 196 1 33 5 120 1 12 2 197 1 52 1 224 1 281 2 19 1 132 1 
284 9 157 7 228 1 261 5 178 1 344 3 60 1 108 8 21 2 349 3 112 1 238 6 90 1 269 2 113 1 295 3 114 5 167 1 298 5 10 3 193 4 243 6 48 1 216 1 171 9 33 9 120 3 12 6 197 3 52 2 224 2 281 6 38 1 19 2 132 1 
157 2 284 3 228 1 344 1 108 3 21 1 322 1 349 2 269 1 295 1 114 3 294 1 193 1 10 1 243 2 216 1 371 1 171 4 33 3 120 1 12 2 197 1 52 1 224 1 281 2 19 1 
284 4 157 3 228 1 344 2 108 5 21 1 322 1 349 3 90 1 269 1 113 1 295 2 114 4 294 2 167 1 193 2 10 2 243 4 216 1 171 7 371 1 33 4 120 2 12 4 197 2 52 1 224 1 281 4 19 1 
326 1 380 1 221 1 
326 1 234 1 
106 1 
326 1 230 1 175 1 
326 1 94 1 
326 1 175 1 
337 1 326 3 230 1 92 1 221 2 175 1 
50 1 1 1 344 1 40 1 137 3 197 1 375 1 153 2 376 1 185 2 187 1 64 1 280 1 352 3 9 4 283 1 47 7 
50 1 1 1 344 1 40 1 137 3 197 1 375 1 153 2 376 1 185 2 187 1 64 1 280 1 352 3 9 4 283 1 47 7 
50 1 1 1 72 1 344 1 40 1 137 3 197 1 375 1 153 2 376 1 185 2 187 1 64 1 280 1 352 3 9 4 283 1 47 7 
56 1 177 1 84 1 1 1 344 4 40 2 61 1 137 15 264 1 288 4 110 1 185 3 187 1 64 5 212 1 140 1 165 1 295 3 352 10 9 16 10 3 47 31 50 2 71 1 120 3 197 4 375 1 74 3 153 5 376 2 125 1 280 2 105 2 283 1 
177 2 1 1 344 1 40 1 137 4 264 2 110 2 185 2 293 1 187 1 64 1 165 2 369 1 352 4 9 5 47 9 50 1 71 1 197 1 375 1 153 3 376 1 280 1 105 4 
262 1 345 1 232 1 289 1 365 1 111 1 211 1 300 2 27 1 242 1 244 1 119 1 32 1 73 1 374 1 34 1 218 1 252 1 155 2 77 1 127 1 130 1 312 1 55 1 313 1 81 1 314 2 176 1 205 1 342 1 
262 1 345 1 232 1 184 1 289 1 111 1 267 1 211 1 300 2 27 1 244 1 119 1 32 1 73 2 374 1 218 1 252 1 155 3 77 1 127 1 130 1 312 1 55 1 313 1 257 1 81 1 314 3 176 1 205 1 342 1 
262 1 232 1 289 1 111 1 267 1 300 2 27 1 244 1 119 1 32 1 73 2 374 1 218 1 252 1 155 2 127 1 130 1 55 1 313 1 257 1 81 1 314 2 176 1 205 1 342 1 
70 1 49 1 262 1 32 2 305 1 345 1 183 1 184 1 252 1 36 1 77 1 155 1 326 1 313 1 81 1 296 1 314 1 273 1 175 1 176 2 342 1 205 2 27 2 
262 1 345 1 232 1 289 1 365 1 111 1 211 1 300 2 27 1 242 1 244 1 119 1 32 1 218 1 252 1 155 1 77 1 127 1 312 1 313 1 257 1 81 1 314 1 176 1 205 1 342 1 
350 1 
284 5 83 1 178 1 179 1 231 2 2 1 347 2 186 1 349 2 238 6 7 1 46 1 241 1 297 1 93 1 354 2 96 1 245 2 305 1 248 1 12 2 250 1 151 1 199 2 252 2 14 4 52 1 54 1 313 1 262 2 316 1 108 2 263 1 21 1 265 1 162 2 269 1 114 2 326 1 327 1 168 1 271 1 216 1 70 2 370 1 171 2 33 5 36 1 377 2 224 1 226 1 81 1 132 3 175 1 342 2 
284 3 179 1 263 1 2 1 347 1 265 1 238 2 7 1 327 1 168 1 241 1 271 1 93 1 96 1 33 3 250 1 151 1 121 1 14 2 226 1 54 1 132 1 
284 3 179 1 263 1 2 1 265 1 162 1 238 1 114 1 7 1 327 1 168 1 241 1 271 1 93 1 216 1 96 1 33 3 250 1 151 1 121 1 14 3 226 1 54 1 132 1 
284 3 179 1 263 1 2 1 347 1 265 1 162 1 238 2 114 1 7 1 327 1 168 1 241 1 271 1 93 1 216 1 96 1 33 3 250 1 121 1 151 1 14 3 377 1 226 1 54 1 132 1 
284 5 179 1 178 1 231 2 2 1 347 4 233 1 349 2 238 7 7 1 241 1 297 1 93 1 354 2 96 1 245 2 250 1 12 1 151 1 14 6 199 2 16 1 52 1 54 1 108 1 263 1 21 1 265 1 109 1 162 4 367 1 269 1 114 5 327 1 168 1 271 1 328 1 216 5 370 1 33 5 121 1 377 4 226 1 132 3 
284 4 178 1 179 1 231 2 2 1 347 2 186 1 349 2 238 4 7 1 241 1 297 1 93 1 354 2 96 1 245 2 250 1 12 1 151 1 14 4 199 2 52 1 54 1 108 1 263 1 21 1 265 1 162 2 269 1 114 2 327 1 168 1 271 1 370 1 216 1 171 2 33 4 377 2 226 1 132 2 
284 4 179 1 178 1 231 2 108 1 263 1 2 1 347 2 233 1 21 1 265 1 109 1 162 2 349 2 238 4 269 1 367 1 114 1 7 1 327 1 168 1 241 1 297 1 271 1 93 1 354 2 216 1 370 1 96 1 245 2 33 4 12 1 250 1 151 1 199 2 14 4 52 1 377 2 226 1 54 1 132 2 
284 4 179 1 178 1 231 2 108 1 263 1 2 1 347 2 233 1 21 1 265 1 109 1 162 2 349 2 238 4 269 1 367 1 114 1 7 1 327 1 168 1 241 1 297 1 271 1 93 1 354 2 216 1 370 1 96 1 245 2 33 4 12 1 250 1 151 1 199 2 14 4 52 1 377 2 226 1 54 1 132 2 
284 4 179 1 178 1 135 1 108 1 263 1 2 1 347 2 21 1 265 1 109 1 162 2 238 4 269 1 114 1 7 1 327 1 168 1 241 1 169 2 297 1 271 1 93 1 216 1 96 1 171 2 245 2 33 4 373 2 12 1 250 1 151 1 278 1 199 2 14 4 52 1 377 2 226 1 378 1 54 1 132 2 
284 4 178 1 179 1 231 2 108 1 263 1 2 1 21 1 347 3 233 1 265 1 109 1 162 3 349 2 238 5 269 1 367 1 114 1 7 1 327 1 168 1 241 1 297 1 271 1 93 1 354 2 328 1 216 1 370 1 96 1 245 2 33 4 12 1 250 1 151 1 199 2 14 5 52 1 377 3 226 1 54 1 132 2 
284 4 178 1 179 1 231 2 108 1 263 1 2 1 21 1 347 3 233 1 265 1 109 1 162 3 349 2 238 5 269 1 367 1 114 1 7 1 327 1 168 1 241 1 297 1 271 1 93 1 354 2 328 1 216 1 370 1 96 1 245 2 33 4 12 1 250 1 151 1 199 2 14 5 52 1 377 3 226 1 54 1 132 2 
284 4 178 1 179 1 135 1 2 1 347 2 186 1 238 4 7 1 241 1 297 1 93 1 96 1 245 2 250 1 12 1 151 1 14 4 199 2 52 1 54 1 108 1 263 1 21 1 265 1 162 2 269 1 114 1 327 1 168 1 271 1 169 2 216 1 171 2 33 4 373 2 377 2 226 1 132 2 
177 1 1 1 344 1 287 1 137 3 264 1 291 1 110 1 185 1 187 1 165 1 352 2 8 1 9 3 47 6 50 1 372 1 197 1 375 1 251 1 153 2 376 1 202 1 380 1 105 2 174 2 
177 2 56 1 229 1 344 1 287 2 137 6 288 3 264 2 110 2 291 4 64 1 42 1 164 1 165 2 43 1 295 1 352 2 8 11 9 8 10 2 47 14 120 2 197 2 360 1 251 11 74 3 153 1 125 1 18 1 202 1 105 4 174 1 362 1 
177 1 285 1 262 1 229 1 230 1 287 1 181 1 263 1 137 1 264 1 235 1 291 1 110 1 268 1 239 1 165 1 43 1 326 1 271 2 9 1 215 1 26 1 301 1 47 2 70 1 96 2 150 1 308 1 360 1 252 1 17 1 202 1 313 1 81 1 105 2 174 1 175 1 342 1 
285 1 177 3 1 1 229 1 344 3 181 1 287 3 230 2 137 10 291 7 185 1 187 1 239 2 43 1 295 2 45 2 8 7 352 8 9 10 10 2 301 1 47 20 96 3 50 1 149 1 150 2 197 3 360 1 252 3 251 7 253 2 153 4 311 1 202 3 313 2 257 1 105 6 364 2 262 3 318 2 263 1 264 3 110 3 268 2 64 4 165 3 326 2 272 1 271 3 215 1 70 1 120 2 375 1 333 2 376 1 81 2 174 2 342 3 175 2 
315 1 343 1 285 1 177 2 262 8 229 1 181 1 287 2 263 1 137 1 264 2 110 2 138 1 66 1 165 2 326 3 68 1 271 1 9 1 215 1 47 2 70 2 96 1 303 2 372 1 305 1 34 1 360 1 252 7 99 1 222 1 36 1 202 2 313 2 257 1 81 2 105 4 342 8 175 2 
285 1 177 1 344 1 287 1 181 1 263 1 137 2 264 1 291 1 110 1 41 1 165 1 43 1 295 1 352 1 8 1 271 1 9 1 10 1 47 3 96 1 120 1 197 1 251 1 153 1 310 1 202 1 227 1 105 2 
177 1 304 1 372 1 287 1 197 1 264 1 251 1 291 1 110 1 64 1 165 1 202 1 352 1 8 1 105 2 9 2 10 1 47 2 
260 1 177 1 372 1 344 1 287 1 137 2 264 1 251 1 291 1 110 1 153 1 165 1 295 1 202 1 352 1 8 1 105 2 47 2 
177 1 344 1 372 1 287 1 120 1 137 2 197 1 264 1 251 2 291 2 110 1 153 1 64 1 165 1 295 1 202 1 352 2 8 2 105 2 9 2 10 1 47 4 
315 1 177 1 304 1 287 1 197 1 264 1 251 1 291 1 110 1 64 1 165 1 202 1 352 1 8 1 105 2 9 2 10 1 47 2 
315 1 260 1 177 1 344 1 287 1 137 2 264 1 251 1 291 1 110 1 153 1 165 1 295 1 202 1 352 1 8 1 105 2 47 2 
315 1 177 1 344 1 287 1 120 1 137 2 197 1 264 1 251 2 291 2 110 1 153 1 64 1 165 1 295 1 202 1 352 2 8 2 105 2 9 2 10 1 47 4 
177 1 344 1 287 1 120 1 137 2 197 1 264 1 251 2 291 2 110 1 153 1 64 1 165 1 295 1 202 1 352 2 8 2 105 2 9 2 10 1 47 4 
177 1 262 1 229 1 230 1 318 1 287 1 137 1 264 1 110 1 268 1 239 1 165 1 326 1 9 1 271 1 47 2 70 1 96 1 150 1 360 1 252 1 202 1 313 1 81 1 105 2 174 1 175 1 342 1 
177 1 262 1 229 1 230 1 287 1 137 1 264 1 110 1 165 1 326 1 9 1 271 1 47 2 70 1 96 1 150 1 360 1 15 1 252 1 129 1 202 1 313 1 81 1 105 2 174 1 175 1 259 1 342 1 
177 1 344 1 287 1 120 1 137 2 197 1 264 1 251 2 291 2 110 1 153 1 64 1 43 1 165 1 295 1 202 1 352 2 8 2 105 2 9 2 10 1 47 4 
177 1 364 1 262 1 344 1 230 1 318 1 287 1 137 2 264 1 291 2 110 1 268 1 64 1 239 1 165 1 295 1 326 1 352 2 8 2 9 2 271 1 10 1 47 4 96 1 150 1 120 1 197 1 34 1 251 2 252 1 153 1 202 1 313 1 81 1 105 2 342 1 175 1 
285 1 177 1 344 1 287 1 181 1 263 1 137 1 319 1 264 1 110 1 291 1 41 1 64 1 165 1 43 1 295 1 352 1 8 1 271 1 9 2 10 1 47 3 96 1 120 1 197 1 251 1 310 1 202 1 105 2 
177 2 56 1 133 1 344 3 137 10 288 2 85 1 264 2 348 1 110 2 188 2 293 1 64 3 165 2 295 3 115 1 352 6 9 9 10 3 28 1 116 2 47 19 147 1 359 1 120 3 197 3 74 1 153 3 125 1 105 4 
177 3 133 2 344 2 137 12 85 2 264 3 288 2 348 1 110 3 63 1 188 1 293 1 64 2 165 3 295 2 115 1 352 4 143 1 9 14 192 1 10 3 302 1 116 4 47 26 71 2 359 1 120 3 197 3 74 2 200 1 153 2 125 2 334 1 105 6 
177 3 133 1 1 1 344 5 182 1 137 21 85 2 288 4 348 1 185 1 293 1 187 1 188 1 295 4 352 8 143 1 9 20 192 1 10 4 47 41 302 1 50 1 359 1 197 5 153 4 200 1 105 6 56 1 264 3 110 3 63 1 64 4 165 3 115 1 28 1 116 4 71 1 120 4 375 1 74 3 376 1 125 3 334 1 
177 4 56 1 133 1 1 1 344 4 182 1 137 18 288 4 85 2 264 4 348 1 110 4 185 1 63 1 188 1 187 1 293 1 64 3 165 4 295 3 115 1 352 7 143 1 9 20 192 1 10 4 28 1 302 1 116 4 47 38 50 1 71 2 359 1 120 4 197 5 375 1 74 3 200 1 153 4 376 1 334 1 125 3 105 8 
177 2 56 2 133 1 1 1 344 8 137 25 288 4 85 1 264 2 348 1 110 2 185 1 63 1 188 1 187 1 293 1 64 7 165 2 295 7 115 1 352 14 143 1 9 27 192 1 10 7 302 1 116 4 47 52 50 1 71 1 359 1 120 7 197 8 375 1 74 4 200 1 153 7 376 1 334 1 125 2 105 4 362 2 
57 1 65 1 335 1 330 1 276 1 134 1 172 1 166 1 144 1 194 1 
217 1 321 1 
363 1 57 1 335 1 276 1 134 1 214 1 172 1 144 1 139 1 
249 1 100 1 
79 1 220 1 123 1 
82 1 284 1 57 1 97 1 330 1 276 1 33 1 134 1 172 1 65 1 335 1 88 1 114 1 141 1 351 2 166 1 379 1 144 1 
82 1 284 1 57 1 97 1 330 1 276 1 33 1 134 1 172 1 65 1 335 1 88 1 114 1 141 1 351 2 166 1 379 1 144 1 
82 1 284 1 57 1 97 1 330 1 276 1 33 1 134 1 172 1 65 1 335 1 88 1 114 1 141 1 351 2 166 1 379 1 144 1 
249 1 220 1 100 1 
249 1 220 1 100 1 
79 1 123 1 
79 1 220 1 123 1 
30 1 201 1 
284 1 157 1 57 1 285 2 134 1 181 2 263 2 86 1 321 1 351 1 271 2 144 1 193 1 96 2 30 1 97 1 276 1 357 1 33 1 172 1 217 1 335 1 223 1 201 1 256 1 379 1 174 1 
177 1 262 2 229 1 287 1 263 2 137 1 264 1 290 1 110 1 43 1 165 1 326 1 299 1 271 2 9 1 47 2 96 2 303 2 11 1 148 1 360 1 252 2 99 1 76 1 222 1 202 1 313 1 81 1 105 2 175 1 342 2 
244 1 119 1 262 2 232 1 34 1 289 1 252 2 161 1 111 1 236 1 211 1 127 1 313 1 203 1 81 1 257 1 300 2 342 2 176 1 
244 1 119 1 262 1 232 1 289 1 252 1 111 1 236 1 211 1 127 1 366 1 313 1 257 1 81 1 300 2 342 1 176 1 
70 1 355 1 262 1 49 1 305 1 252 1 161 1 36 1 326 1 313 1 81 1 175 1 342 1 176 1 
244 1 119 1 262 1 232 1 289 1 252 1 161 1 111 1 236 1 211 1 127 1 313 1 203 1 257 1 81 1 300 2 342 1 176 1 
103 1 
216 1 213 1 114 1 108 1 12 1 353 1 380 1 
284 1 178 1 108 1 231 1 21 1 349 1 238 1 269 1 114 2 354 1 370 1 216 1 171 1 33 1 12 1 52 1 132 1 
284 5 178 4 286 1 344 2 230 1 234 3 292 1 349 6 89 1 238 5 295 2 92 1 7 2 353 1 46 1 10 2 243 6 12 8 197 2 252 2 253 2 52 4 102 2 361 1 255 2 313 2 262 2 108 9 21 4 323 2 22 2 213 1 269 4 326 6 114 8 329 2 216 2 70 1 171 12 33 5 120 2 34 1 221 2 75 2 279 2 224 2 281 6 81 1 132 3 175 1 342 2 
284 1 58 1 178 2 344 2 108 8 288 1 21 2 63 1 349 3 238 1 269 2 114 5 295 2 46 1 143 1 192 1 10 2 302 1 243 5 216 2 118 1 171 6 33 1 120 2 12 5 197 2 74 1 75 1 52 2 125 1 334 1 224 1 255 2 281 5 132 1 
284 1 285 1 178 1 344 1 108 2 181 1 263 1 2 1 136 1 21 1 266 1 41 1 269 1 367 1 24 1 270 1 271 1 96 1 50 1 33 1 12 2 197 2 375 1 75 1 376 1 52 1 255 2 80 1 
216 1 178 1 108 1 12 1 21 1 52 1 269 1 213 1 114 1 353 1 
171 10 344 2 120 2 108 5 12 5 197 2 75 1 253 1 349 5 255 2 114 5 295 2 281 5 10 2 243 5 
216 1 284 1 238 1 114 1 33 1 132 1 
83 1 284 3 228 1 262 4 316 1 178 1 108 2 21 2 238 4 269 2 368 1 189 1 326 1 67 2 46 2 70 2 33 3 305 1 12 2 252 4 52 2 36 1 361 1 224 2 313 1 81 1 132 2 175 1 342 4 
285 2 177 1 262 1 229 1 181 2 318 1 230 1 287 1 263 2 137 1 264 1 110 1 41 2 268 1 239 1 165 1 326 1 271 3 47 1 70 1 96 3 150 1 252 1 202 1 80 1 282 1 313 1 81 1 105 2 174 1 342 1 175 1 
216 2 171 4 178 1 108 1 12 2 21 1 185 1 52 1 349 2 269 1 224 1 114 4 281 2 46 1 243 2 
57 1 144 1 51 1 
30 1 57 1 247 1 166 1 144 1 
57 1 144 1 51 1 
57 1 144 1 51 1 
57 1 152 1 144 1 
57 1 152 1 144 1 
57 1 152 1 144 1 
57 1 144 1 
276 1 134 1 
177 2 1 1 50 1 71 1 344 1 197 1 137 4 375 1 264 2 110 2 153 2 185 1 376 1 187 1 64 1 165 2 352 3 9 4 105 4 47 8 
1 1 50 1 344 1 137 3 197 1 375 1 153 2 185 1 376 1 187 1 352 2 380 1 9 3 47 6 
177 1 344 1 120 1 137 2 197 1 13 1 264 1 110 1 153 1 64 1 165 1 295 1 352 2 105 2 9 2 10 1 47 4 
56 1 344 1 120 1 137 4 197 1 288 2 74 1 153 1 125 1 64 1 295 1 352 2 9 3 10 1 47 7 
56 1 177 2 1 1 344 3 137 12 288 2 264 2 110 2 185 1 187 1 64 4 164 1 165 2 295 2 44 1 352 9 9 11 10 2 47 23 50 2 71 2 120 2 197 3 375 1 74 2 153 5 376 2 105 4 362 1 
137 1 288 1 47 1 
9 1 74 1 47 1 
177 1 344 1 120 1 137 3 197 1 264 1 13 1 110 1 253 1 153 2 64 1 165 1 295 1 352 3 105 2 9 3 10 1 47 6 
177 1 344 2 137 6 288 1 264 1 110 1 63 1 293 1 64 1 165 1 295 2 352 2 143 1 9 6 192 1 10 2 47 12 302 1 120 2 197 2 74 1 153 1 125 1 334 1 105 2 
50 1 344 1 197 1 137 3 375 1 153 1 376 1 64 1 352 2 9 3 47 6 
177 1 50 1 1 1 71 1 137 2 264 1 110 1 153 1 376 1 187 1 64 1 165 1 44 1 352 2 9 1 105 2 47 3 
177 1 50 2 344 2 137 5 197 2 375 1 264 1 110 1 266 1 153 3 376 2 293 1 64 2 165 1 352 5 105 2 9 5 47 10 
177 1 197 1 264 1 110 1 293 1 64 1 165 1 352 1 105 2 9 2 10 1 47 2 
177 1 344 1 120 1 137 2 197 1 264 1 110 1 153 1 293 1 64 1 165 1 295 1 352 2 105 2 9 2 10 1 47 4 
177 3 50 1 71 1 137 2 264 3 110 3 153 1 376 1 293 1 64 1 165 3 44 1 352 2 105 6 9 1 28 1 47 3 
177 5 56 1 84 1 1 1 344 5 137 18 288 4 264 5 110 5 185 1 187 1 293 1 64 5 212 1 140 1 165 5 295 3 44 1 352 12 9 16 10 3 28 1 47 34 50 3 71 2 120 3 197 5 375 2 13 1 74 3 153 7 376 3 125 1 105 10 
177 1 1 1 344 1 137 4 288 1 264 1 110 1 185 1 293 1 187 1 165 1 352 2 9 4 47 8 50 1 197 1 375 1 74 1 153 2 376 1 125 1 334 1 105 2 
177 2 56 1 1 1 344 1 137 5 288 2 264 2 110 2 185 1 187 1 293 1 64 1 165 2 352 3 9 6 10 1 47 11 50 1 120 1 197 2 375 1 13 1 74 1 153 2 376 1 125 1 334 1 105 4 
177 3 1 1 344 3 137 10 288 1 264 3 110 3 185 1 63 1 187 1 293 1 64 1 165 3 295 2 352 4 143 1 9 9 192 1 10 2 302 1 47 19 50 1 71 1 120 2 197 3 375 1 13 1 74 1 153 3 376 1 125 1 334 1 105 6 
177 3 1 1 344 2 137 7 288 1 264 3 110 3 185 1 63 1 187 1 293 1 64 2 165 3 295 1 352 5 143 1 9 10 192 1 10 2 47 17 302 1 50 1 71 1 120 2 197 3 375 1 13 1 74 1 153 3 376 1 125 1 334 1 105 6 
177 1 1 1 344 1 137 4 288 1 264 1 110 1 185 1 293 1 187 1 165 1 352 2 9 4 47 8 50 1 197 1 375 1 74 1 153 2 376 1 125 1 334 1 105 2 
177 1 344 2 137 6 288 1 264 1 110 1 63 1 293 1 64 1 165 1 295 2 352 2 143 1 9 6 192 1 10 2 47 12 302 1 120 2 197 2 74 1 153 1 125 1 334 1 105 2 
177 4 1 1 344 2 137 8 288 1 264 4 110 4 185 1 63 1 187 1 293 1 64 2 165 4 295 1 352 5 143 1 9 10 192 1 10 2 302 1 47 18 50 1 71 2 120 2 197 3 375 1 13 1 74 1 153 3 376 1 125 1 334 1 105 8 
177 4 344 2 137 7 288 1 264 4 110 4 63 1 293 1 64 3 165 4 295 2 352 6 143 1 9 9 192 1 10 3 28 1 302 1 47 16 71 2 120 3 197 3 74 1 153 3 125 1 334 1 105 8 
1 1 50 3 344 1 137 4 197 1 375 1 153 3 376 3 187 2 64 3 352 6 9 3 47 7 
177 4 1 1 344 2 137 8 288 1 264 4 110 4 185 1 63 1 187 1 293 1 64 1 165 4 295 1 352 4 143 1 9 10 192 1 10 2 28 1 302 1 47 18 50 1 71 2 120 2 197 3 375 1 74 1 153 3 376 1 125 1 334 1 105 8 
96 1 195 1 240 1 263 1 250 1 271 1 174 1 
96 1 195 1 207 1 250 1 263 1 5 1 307 1 336 1 240 1 271 1 174 1 170 1 
70 1 36 1 262 1 326 1 305 1 313 1 81 1 380 1 252 1 175 1 342 1 
70 1 285 1 96 2 262 1 230 1 150 1 181 1 263 1 252 1 268 1 326 1 313 1 81 1 271 2 174 1 215 1 175 1 342 1 
285 1 262 1 181 2 230 2 263 2 2 1 265 1 268 1 326 3 67 1 241 1 271 2 94 1 215 1 145 1 96 2 150 1 252 1 313 1 81 1 174 1 342 1 175 2 
285 1 262 2 181 2 230 2 263 2 2 1 265 1 325 1 326 3 67 1 241 1 271 2 94 1 215 1 145 1 96 2 150 1 15 1 252 2 313 1 81 1 174 1 342 2 175 2 
70 1 216 1 145 1 284 2 262 3 358 1 33 2 230 1 252 3 234 1 221 1 238 1 325 1 114 1 78 1 326 4 7 1 67 1 313 1 81 1 94 1 175 1 342 3 
70 1 216 1 145 1 284 2 262 3 33 2 230 1 252 3 234 1 221 1 238 1 325 1 114 1 326 4 7 1 67 1 313 1 81 1 94 1 329 1 175 1 342 3 
262 1 66 1 313 1 81 1 252 1 342 1 
70 2 343 1 303 1 262 7 277 1 230 1 34 1 306 1 252 6 138 1 99 1 23 1 66 1 326 3 92 1 68 1 313 3 257 1 81 2 342 7 175 2 
285 1 177 2 1 1 344 1 181 1 287 2 230 1 137 3 291 1 185 1 187 1 239 1 43 1 352 2 8 1 299 1 9 3 47 6 96 2 50 1 150 1 197 1 252 1 251 1 153 2 202 2 313 1 105 4 364 1 262 1 318 1 263 1 264 2 110 2 268 1 165 2 326 1 271 2 215 1 34 1 375 1 333 1 376 1 81 1 174 2 342 1 175 1 
284 3 157 1 262 1 178 2 108 1 21 2 234 1 22 1 238 2 213 1 269 2 114 1 326 2 7 1 353 1 329 1 216 1 70 1 33 3 12 1 252 1 221 1 52 2 279 1 102 1 361 1 132 1 342 1 
262 1 286 1 230 1 252 1 221 1 66 1 326 2 92 1 313 2 81 1 342 1 175 1 106 1 
70 1 262 4 305 1 34 1 252 4 309 1 36 1 325 1 326 1 313 1 81 1 342 4 175 1 
262 2 149 1 230 1 306 1 252 2 23 1 326 1 67 1 104 1 313 2 81 1 340 1 342 2 175 1 
70 1 119 1 262 1 232 1 313 1 81 1 289 1 300 1 252 1 342 1 
262 2 34 1 252 2 99 1 76 1 326 1 313 1 257 1 81 1 342 2 175 1 
70 1 343 1 262 5 305 1 34 1 252 4 138 1 309 1 99 1 36 1 326 3 67 1 313 2 81 2 342 5 175 2 
70 1 343 1 262 5 305 1 34 1 252 4 309 1 99 1 36 1 225 1 326 3 67 1 313 2 81 2 342 5 175 2 
70 1 285 1 96 2 262 1 230 1 150 1 181 1 263 1 252 1 15 1 326 1 313 1 81 1 271 2 174 1 215 1 175 1 342 1 
262 1 277 1 230 1 306 1 252 1 23 1 326 1 92 1 67 1 313 2 81 1 342 1 175 1 
154 1 190 1 3 1 204 1 174 1 
216 1 157 1 284 2 33 2 2 1 3 2 4 1 265 1 154 1 114 1 226 1 7 1 190 2 241 1 131 1 204 2 174 1 341 1 381 1 
96 1 148 1 11 1 263 1 3 1 290 1 154 1 204 1 271 1 
154 1 341 1 381 1 
130 1 374 1 55 1 380 1 
155 1 77 1 130 1 345 1 374 1 55 1 314 1 
155 1 32 1 27 1 
0 1 155 3 77 1 91 2 130 1 345 1 374 1 55 1 25 1 314 3 210 1 365 1 
155 2 77 1 130 1 73 1 160 1 345 1 374 1 55 1 314 2 
244 1 39 1 119 1 345 1 365 1 77 1 155 1 53 1 130 1 314 1 300 1 
155 1 77 1 130 1 345 1 374 1 314 1 365 1 
155 1 77 1 345 1 374 2 55 1 314 1 365 1 
155 2 77 2 331 1 130 1 345 2 142 1 374 1 346 1 314 2 365 1 
31 1 39 1 73 2 345 1 374 1 365 1 62 1 77 1 155 3 130 2 55 1 339 1 314 3 
244 1 119 1 73 1 345 1 374 1 289 1 35 1 365 1 111 1 77 1 155 2 130 1 55 1 314 2 300 2 
39 1 275 1 73 2 345 2 160 1 374 1 365 1 62 1 77 2 155 4 130 2 55 1 314 4 
155 1 77 1 130 1 345 1 374 1 55 1 314 1 365 1 
0 1 39 1 73 2 345 1 374 2 62 1 324 1 155 4 77 1 91 1 130 3 25 1 55 2 314 4 
246 1 73 1 345 1 374 1 209 1 365 1 77 1 155 2 130 1 55 1 37 1 314 2 
158 1 0 2 345 1 374 1 365 1 77 1 155 3 91 2 130 1 25 1 55 1 314 3 
69 1 159 2 130 2 206 1 
155 1 77 1 345 1 314 1 124 1 365 1 
31 1 155 2 77 1 130 1 73 1 345 1 374 1 55 1 314 2 365 1 
180 1 
155 1 77 1 130 1 345 1 374 1 55 1 314 1 365 1 
31 1 73 1 345 1 374 1 365 1 77 1 155 3 91 1 130 1 55 1 314 3 
324 1 39 1 130 1 62 1 
130 1 374 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3486 | 0 -> -1
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | OPERATOR | 2411 | < -> ==
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
285 9 234 2 259 1 58 1 63 1 26 1 197 1 268 1 201 3 29 5 297 6 172 1 177 1 344 1 51 1 366 1 34 2 301 1 142 1 184 1 277 9 252 1 253 2 328 2 229 2 19 2 153 2 333 4 
285 9 234 2 259 1 58 1 63 1 26 1 197 1 268 1 201 3 29 5 297 6 172 1 177 1 344 1 51 1 366 1 34 2 301 1 142 1 184 1 277 9 252 1 253 2 328 2 229 2 19 2 153 2 333 4 
285 10 234 2 259 1 58 1 63 1 26 1 197 1 268 1 201 4 29 6 297 7 172 1 177 1 344 1 51 1 366 1 34 2 301 1 142 1 184 1 277 10 252 1 253 2 328 2 229 2 19 2 153 2 333 5 
285 7 234 2 259 1 63 1 26 1 197 1 268 1 201 2 29 4 297 4 172 1 177 1 344 1 51 1 366 1 34 2 301 1 142 1 184 1 277 7 252 1 253 1 328 2 229 2 19 2 153 2 333 3 
177 1 285 4 234 1 259 1 58 1 34 1 301 1 26 1 277 4 253 2 328 1 268 1 229 1 201 1 297 3 29 3 153 1 333 2 
177 1 285 2 234 1 259 1 84 1 60 1 34 1 63 1 26 1 277 2 197 1 229 1 29 1 66 1 19 1 153 1 
177 1 285 3 234 2 259 1 26 1 277 3 252 1 229 2 201 1 29 2 297 1 19 1 333 1 
285 9 234 2 259 1 58 1 26 1 268 1 201 3 297 7 29 5 172 1 177 1 347 1 34 1 301 1 184 1 323 1 277 9 252 1 253 2 328 1 229 2 19 1 153 1 333 4 
285 9 234 2 259 1 58 1 26 1 268 1 201 3 297 7 29 5 172 1 177 1 347 1 34 1 301 1 184 1 323 1 277 9 252 1 253 2 328 1 229 2 19 1 153 1 333 4 
367 1 336 1 250 1 
168 1 
200 2 188 1 65 2 193 2 371 1 122 2 187 2 91 2 
3 2 41 1 310 1 156 1 216 1 290 1 193 2 62 1 131 1 108 2 7 1 200 2 240 1 65 3 295 1 265 1 135 1 341 1 91 2 74 1 371 1 303 2 206 1 187 2 188 1 327 1 95 1 352 2 99 1 282 1 283 1 18 1 122 3 355 2 82 1 308 1 233 1 
200 1 188 1 50 1 132 1 65 1 193 1 122 1 187 1 91 1 125 1 
50 1 334 1 61 1 24 1 86 1 336 1 250 1 160 1 143 1 187 1 147 1 65 1 316 1 122 1 
50 1 334 1 86 1 336 1 250 1 193 1 160 2 143 1 187 1 147 2 200 1 65 1 316 1 122 1 91 1 
154 1 98 1 160 1 130 1 147 1 
154 1 336 1 250 1 160 2 130 1 190 1 31 1 147 2 
160 1 130 1 147 1 
154 1 50 1 193 1 160 1 205 1 187 1 147 1 188 1 200 1 132 1 65 1 122 1 125 1 91 1 
336 1 
154 1 336 1 250 1 160 2 130 1 278 1 31 1 147 2 
154 2 49 1 369 1 311 2 336 1 250 1 194 2 160 5 222 2 130 2 147 5 227 1 353 1 110 1 305 1 213 1 321 1 31 1 309 1 
367 1 371 1 
343 1 193 1 371 2 187 2 119 1 200 1 65 2 122 2 91 1 
287 1 346 1 221 1 
3 1 156 1 192 1 371 1 303 1 131 1 206 1 108 1 327 1 65 1 95 1 265 1 283 1 18 1 122 1 82 1 
287 1 3 1 156 1 193 1 303 1 206 1 131 1 187 1 108 1 200 1 327 1 65 2 95 1 265 1 283 1 18 1 122 2 82 1 365 1 114 1 
200 3 65 3 193 3 371 1 122 3 365 1 187 3 91 1 
200 1 50 1 132 1 65 1 193 1 122 1 187 1 
343 1 200 1 50 1 65 1 193 1 122 1 187 1 91 1 119 1 
334 1 3 1 41 1 156 1 216 1 86 1 193 3 62 1 160 1 131 1 108 1 7 1 200 3 240 1 65 4 265 1 316 1 135 1 341 1 365 1 114 1 91 2 115 1 50 1 371 1 303 1 143 1 206 1 187 3 119 1 147 1 188 1 327 1 95 1 352 2 99 1 283 1 18 1 122 4 355 1 354 1 82 1 308 1 233 1 
200 1 65 2 24 1 193 1 371 1 122 2 263 1 365 1 187 2 
334 1 50 1 86 1 336 1 193 3 105 1 160 1 143 1 187 3 119 1 147 1 200 3 65 3 316 1 122 3 354 1 365 2 114 1 91 1 
287 1 200 2 65 2 346 1 193 2 122 2 365 1 187 2 91 1 119 1 
3 1 156 1 371 1 303 1 131 1 206 1 108 1 327 1 65 1 95 1 265 1 283 1 18 1 122 1 82 1 
3 1 156 1 371 1 303 1 223 1 131 1 206 1 108 1 293 1 327 1 65 1 95 1 283 1 18 1 122 1 
286 1 287 2 1 1 335 1 41 2 158 1 216 1 290 2 6 1 62 1 107 1 7 1 164 1 240 1 169 1 221 2 346 2 72 1 352 2 97 1 329 1 355 4 308 1 233 1 
200 1 50 1 65 1 86 1 193 1 122 1 187 1 210 1 
70 1 24 1 193 4 371 1 263 1 207 1 187 5 119 1 200 4 65 5 122 5 365 2 114 1 91 1 
200 2 50 1 132 1 65 2 193 2 122 2 187 2 210 1 
94 1 152 1 
94 1 152 1 
359 1 279 1 
359 1 279 1 
359 1 279 1 
94 1 37 1 152 1 
94 1 37 1 152 1 
78 1 94 1 152 1 
166 1 140 1 94 2 359 1 152 2 279 1 
94 1 37 1 152 1 
33 1 94 1 152 1 
33 1 94 1 152 1 
33 1 94 1 152 1 
53 2 43 1 336 1 94 2 160 2 185 1 238 2 116 2 224 1 226 2 147 2 374 1 166 1 81 1 124 1 152 2 319 1 173 3 247 2 
193 2 160 1 238 1 200 2 361 1 65 2 267 1 173 1 319 1 67 1 53 1 371 1 94 1 141 1 116 1 187 2 208 1 226 1 147 1 373 1 78 1 376 1 122 2 152 1 
328 1 34 1 153 1 
34 1 66 1 153 1 
328 2 368 1 34 3 330 1 66 1 292 1 
328 1 368 1 34 2 66 1 215 1 292 1 
328 1 368 2 34 2 66 1 292 1 
1 1 154 4 155 1 158 1 104 1 311 1 336 2 159 1 194 1 160 5 130 1 45 1 110 3 267 1 168 3 242 1 67 1 176 1 31 1 179 1 138 2 369 2 250 1 15 2 222 1 147 5 373 1 97 1 305 1 329 1 256 1 357 2 
1 3 154 7 158 3 104 3 311 2 336 5 87 1 159 3 194 2 160 9 130 6 45 2 27 1 362 1 110 8 111 1 168 9 242 1 31 1 92 5 49 1 179 2 138 6 369 6 13 1 250 1 15 6 222 2 147 9 373 4 97 3 98 5 305 1 57 1 329 3 
1 1 154 2 155 1 158 1 104 2 311 1 336 3 194 1 159 1 160 3 45 1 110 3 168 4 49 1 179 1 138 2 369 2 250 1 15 2 222 1 147 3 373 1 97 1 329 1 256 1 357 1 
1 2 154 3 155 1 158 2 104 3 311 1 336 4 194 1 159 2 160 4 45 1 27 1 362 1 110 5 111 1 168 7 49 1 179 1 138 4 369 4 250 1 15 4 222 1 147 4 373 2 97 2 329 2 256 1 357 2 
156 1 367 1 331 1 
126 1 156 1 
102 1 
156 1 206 1 
180 1 156 3 283 1 121 1 331 2 206 1 
156 1 283 1 206 1 
156 1 21 1 
335 3 41 3 72 2 158 1 322 1 5 1 290 4 337 1 360 2 145 1 97 1 219 1 318 1 355 7 231 1 244 1 90 1 
335 3 41 3 72 2 158 1 322 1 5 1 290 4 337 1 360 2 145 1 97 1 219 1 318 1 355 7 231 1 244 1 90 1 
335 3 41 3 72 2 158 1 322 1 5 1 290 4 337 1 360 2 145 1 350 1 97 1 219 1 318 1 355 7 231 1 244 1 90 1 
1 3 335 10 41 15 5 2 216 1 289 1 158 4 42 1 290 16 129 1 159 3 337 1 360 3 339 1 7 1 240 1 219 1 318 5 244 2 90 2 178 4 72 5 322 2 36 1 145 1 352 2 79 3 97 4 329 3 231 1 355 31 284 1 308 1 100 1 
335 4 41 4 158 1 216 2 5 1 290 5 360 2 337 1 7 2 240 2 219 1 318 1 244 1 68 1 90 1 72 3 322 1 36 1 145 1 280 1 352 4 97 1 355 9 308 2 
285 2 234 1 2 1 3 1 259 1 26 1 108 1 29 1 297 1 66 1 175 1 177 1 34 2 303 1 348 1 277 2 118 1 77 1 328 1 228 1 327 1 212 1 229 1 18 1 330 1 377 1 123 1 19 1 153 1 258 1 
285 3 234 1 2 1 3 1 26 1 108 1 363 1 29 1 297 2 66 1 175 1 203 1 177 1 137 1 34 2 303 1 348 1 277 3 118 1 328 1 228 1 327 1 212 1 229 1 18 1 330 1 377 1 19 1 153 1 258 1 
285 2 2 1 3 1 26 1 108 1 363 1 29 1 297 2 66 1 175 1 203 1 177 1 34 2 303 1 277 2 118 1 327 1 328 1 212 1 18 1 330 1 377 1 19 1 153 1 258 1 
248 1 71 1 285 1 137 1 234 1 3 1 156 1 313 1 303 1 161 1 206 1 277 1 118 2 108 1 327 1 95 1 18 1 229 1 80 1 377 2 19 2 12 1 258 2 
285 1 234 1 2 1 3 1 259 1 108 1 363 1 66 1 175 1 34 2 303 1 348 1 277 1 118 1 328 1 228 1 327 1 212 1 229 1 18 1 330 1 377 1 123 1 19 1 153 1 258 1 
358 1 
127 1 3 2 334 1 86 1 336 2 44 2 194 1 130 6 198 1 46 2 342 2 248 1 50 1 250 1 303 2 55 1 143 1 206 1 147 5 95 2 305 1 18 1 214 1 261 2 156 1 59 1 61 1 24 1 104 2 311 1 313 1 160 5 108 2 65 1 316 1 110 2 168 2 174 2 320 1 113 1 31 3 220 2 179 1 369 2 73 1 183 1 324 2 222 1 187 1 38 4 225 1 327 1 122 1 232 1 39 1 
334 1 50 1 59 1 61 1 24 1 86 1 55 1 160 3 130 2 324 1 143 1 278 1 38 2 187 1 147 3 225 1 65 1 316 1 122 1 232 1 113 1 31 1 
334 1 59 1 24 1 61 1 86 1 336 1 160 3 130 1 46 1 65 1 316 1 113 1 31 1 50 1 250 1 55 1 143 1 278 1 187 1 38 3 225 1 147 3 122 1 232 1 
334 1 59 1 24 1 61 1 86 1 336 1 160 3 130 2 46 1 65 1 316 1 113 1 31 1 220 1 50 1 250 1 55 1 143 1 324 1 278 1 187 1 38 3 225 1 147 3 122 1 232 1 
334 1 86 1 336 5 44 2 194 1 130 7 196 1 46 4 342 2 50 1 250 5 55 1 143 1 147 5 56 1 305 1 214 1 261 2 59 1 61 1 24 1 311 1 104 2 160 5 65 1 316 1 110 1 174 2 320 1 113 1 31 3 220 4 369 1 181 1 76 1 275 1 324 4 222 1 278 1 38 6 187 1 225 1 122 1 232 1 
127 1 334 1 86 1 336 1 44 2 194 1 130 4 46 2 342 2 50 1 250 1 55 1 143 1 147 4 305 1 214 1 261 2 59 1 24 1 61 1 311 1 104 2 160 4 65 1 316 1 110 1 168 2 174 2 320 1 113 1 31 2 220 2 369 1 222 1 324 2 38 4 187 1 225 1 122 1 232 1 
261 2 334 1 59 1 24 1 61 1 104 2 86 1 311 1 336 1 44 2 194 1 160 4 130 4 196 1 46 2 65 1 316 1 110 1 174 2 320 1 113 1 31 2 342 2 220 2 50 1 369 1 181 1 250 1 55 1 324 2 222 1 143 1 187 1 38 4 225 1 147 4 56 1 305 1 122 1 214 1 232 1 
261 2 334 1 59 1 24 1 61 1 104 2 86 1 311 1 336 1 44 2 194 1 160 4 130 4 196 1 46 2 65 1 316 1 110 1 174 2 320 1 113 1 31 2 342 2 220 2 50 1 369 1 181 1 250 1 55 1 324 2 222 1 143 1 187 1 38 4 225 1 147 4 56 1 305 1 122 1 214 1 232 1 
334 1 59 1 24 1 61 1 86 1 311 1 336 1 44 2 194 1 160 4 130 4 196 1 46 2 133 2 65 1 316 1 110 1 269 2 168 2 113 1 31 2 342 2 220 2 50 1 369 1 250 1 182 1 55 1 324 2 222 1 143 1 325 1 187 1 38 4 225 1 147 4 96 1 305 1 122 1 214 1 232 1 
261 2 334 1 59 1 24 1 61 1 104 2 311 1 86 1 336 1 44 2 194 1 160 4 196 1 130 5 46 3 65 1 316 1 110 1 174 2 320 1 113 1 31 2 342 2 220 3 50 1 369 1 181 1 250 1 76 1 55 1 222 1 143 1 324 3 187 1 38 5 225 1 147 4 56 1 305 1 122 1 214 1 232 1 
261 2 334 1 59 1 24 1 61 1 104 2 311 1 86 1 336 1 44 2 194 1 160 4 196 1 130 5 46 3 65 1 316 1 110 1 174 2 320 1 113 1 31 2 342 2 220 3 50 1 369 1 181 1 250 1 76 1 55 1 222 1 143 1 324 3 187 1 38 5 225 1 147 4 56 1 305 1 122 1 214 1 232 1 
127 1 334 1 59 1 61 1 24 1 311 1 86 1 44 1 194 1 160 2 133 1 65 1 316 1 110 1 168 1 113 1 342 1 50 1 369 1 55 1 222 1 143 1 325 1 187 1 38 2 225 1 147 2 305 1 122 1 214 1 232 1 
287 1 335 2 41 3 5 1 216 1 158 1 290 3 62 1 337 1 360 1 7 1 240 1 219 1 169 1 346 1 221 1 367 1 72 2 322 1 371 2 145 1 352 2 97 1 355 6 308 1 233 1 
287 11 1 2 335 2 41 6 236 1 216 2 158 2 290 8 62 1 159 2 163 1 7 2 240 2 295 1 296 1 318 1 112 1 178 3 221 11 346 4 72 1 371 1 352 4 79 3 97 1 99 1 329 1 355 14 284 1 308 2 100 1 20 1 233 2 
3 1 236 1 41 1 156 1 262 1 216 1 192 1 193 1 290 1 62 1 131 1 108 1 7 1 200 1 65 2 240 1 265 1 295 1 136 1 365 1 114 1 346 1 52 1 371 1 303 1 206 1 187 1 327 1 95 1 352 2 99 1 283 1 18 1 122 2 355 2 82 1 308 1 233 1 
287 7 1 2 3 3 335 8 41 10 236 1 235 2 5 1 193 1 290 10 337 1 131 2 200 1 7 3 240 3 48 2 295 1 135 2 204 1 346 7 303 3 145 1 144 1 206 2 95 1 352 6 97 3 99 1 18 2 355 20 308 3 156 2 216 3 158 3 62 3 159 2 360 1 108 3 65 3 265 2 363 1 219 1 167 2 318 4 365 1 114 1 221 7 72 4 322 1 273 1 371 2 187 1 327 2 283 2 122 3 230 2 329 2 82 2 233 3 
191 1 3 8 41 1 156 3 23 1 4 1 216 2 312 1 193 1 290 1 313 1 62 2 108 8 200 1 7 2 65 1 240 2 295 1 363 1 88 1 169 1 246 1 365 1 248 1 303 7 206 2 77 1 187 1 327 2 95 2 352 4 99 1 282 2 18 2 122 1 189 1 355 2 308 2 233 2 
287 1 1 1 335 1 236 1 41 2 216 1 158 1 193 1 290 1 62 1 159 1 7 1 200 1 240 1 65 1 91 1 346 1 221 1 72 1 35 1 187 1 119 1 352 2 97 1 122 1 329 1 355 3 308 1 233 1 
287 1 1 1 335 1 346 1 221 1 216 1 158 1 290 2 62 1 7 1 164 1 240 1 352 2 318 1 355 2 169 1 308 1 233 1 
287 1 286 1 335 1 346 1 221 1 41 2 72 1 216 1 62 1 7 1 240 1 352 2 97 1 329 1 355 2 169 1 308 1 233 1 
1 1 287 2 335 2 41 2 158 1 216 1 290 2 159 1 62 1 7 1 240 1 318 1 169 1 221 2 346 2 72 1 352 2 97 1 329 1 355 4 308 1 233 1 
287 1 1 1 335 1 346 1 221 1 216 1 158 1 290 2 62 1 7 1 164 1 240 1 352 2 318 1 88 1 355 2 308 1 233 1 
287 1 286 1 335 1 346 1 221 1 41 2 72 1 216 1 62 1 7 1 240 1 352 2 97 1 88 1 329 1 355 2 308 1 233 1 
1 1 287 2 335 2 41 2 158 1 216 1 290 2 159 1 62 1 7 1 240 1 88 1 318 1 221 2 346 2 72 1 352 2 97 1 329 1 355 4 308 1 233 1 
1 1 287 2 335 2 41 2 158 1 216 1 290 2 159 1 62 1 7 1 240 1 318 1 221 2 346 2 72 1 352 2 97 1 329 1 355 4 308 1 233 1 
3 1 41 1 156 1 216 1 290 1 62 1 131 1 108 1 7 1 65 1 240 1 295 1 265 1 135 1 371 1 303 1 206 1 327 1 95 1 352 2 99 1 283 1 18 1 122 1 355 2 82 1 308 1 233 1 
3 1 41 1 156 1 216 1 290 1 62 1 131 1 108 1 293 1 7 1 65 1 240 1 295 1 9 1 371 1 303 1 223 1 206 1 327 1 95 1 352 2 99 1 283 1 18 1 122 1 355 2 308 1 233 1 
1 1 287 2 335 2 236 1 41 2 158 1 216 1 290 2 159 1 62 1 7 1 240 1 318 1 221 2 346 2 72 1 352 2 97 1 329 1 355 4 308 1 233 1 
287 2 1 1 335 2 3 1 41 2 156 1 158 1 216 1 290 2 62 1 159 1 131 1 108 1 7 1 65 1 240 1 265 1 318 1 135 1 346 2 221 2 72 1 303 1 206 1 77 1 327 1 352 2 97 1 283 1 18 1 329 1 230 1 122 1 355 4 82 1 308 1 233 1 
1 1 287 1 335 1 40 1 41 1 236 1 216 1 158 1 193 1 290 2 62 1 159 1 7 1 200 1 240 1 65 1 318 1 91 1 221 1 346 1 187 1 119 1 352 2 97 1 329 1 122 1 355 3 308 1 233 1 
1 3 335 6 41 10 216 2 158 3 25 2 290 9 159 3 7 2 294 1 340 1 240 2 318 3 298 1 270 2 178 2 72 3 299 1 14 1 280 1 148 1 352 4 79 1 97 3 329 3 355 19 284 1 308 2 100 1 257 1 
1 3 335 4 41 12 85 1 157 1 216 3 158 3 25 4 290 14 159 3 314 1 7 3 294 2 340 1 240 3 318 2 270 1 298 1 178 2 345 1 72 2 299 1 36 2 280 1 326 1 148 2 352 6 97 2 79 2 329 2 355 26 308 3 100 2 356 1 
1 4 335 8 41 21 85 1 5 1 290 20 337 1 7 3 340 1 294 2 240 3 298 1 345 1 299 1 145 1 352 6 148 1 97 5 355 41 308 3 100 3 356 1 257 1 158 5 216 3 157 1 25 4 159 4 314 1 360 1 219 1 318 4 270 1 178 4 72 4 322 1 36 1 280 1 326 1 79 3 329 4 284 1 378 1 
1 4 335 7 41 18 5 1 85 1 157 1 216 4 158 5 25 4 290 20 159 4 314 1 360 1 337 1 7 4 294 2 340 1 240 4 219 1 318 3 270 1 298 1 178 4 345 1 72 4 299 1 322 1 36 2 145 1 326 1 280 1 148 1 352 8 79 3 97 4 329 3 355 38 284 1 378 1 308 4 100 3 257 1 356 1 
1 7 335 14 41 25 5 1 85 1 157 1 216 2 158 8 25 4 290 27 159 7 314 1 360 1 337 1 7 2 294 1 340 1 240 2 219 1 318 7 112 2 270 1 298 1 178 4 345 1 72 7 299 1 322 1 36 1 145 1 326 1 280 1 148 1 352 4 79 4 97 8 329 7 355 52 284 2 308 2 100 2 356 1 
239 1 166 1 53 1 43 1 81 1 94 1 152 1 238 1 116 1 226 1 
361 1 78 1 
53 1 307 1 171 1 94 1 152 1 238 1 116 1 372 1 226 1 
53 1 43 1 336 1 94 1 160 1 238 1 116 1 224 1 147 1 226 1 374 1 166 1 81 1 124 1 319 1 152 1 173 2 247 1 
53 1 43 1 336 1 94 1 160 1 238 1 116 1 224 1 147 1 226 1 374 1 166 1 81 1 124 1 319 1 152 1 173 2 247 1 
53 1 43 1 336 1 94 1 160 1 238 1 116 1 224 1 147 1 226 1 374 1 166 1 81 1 124 1 319 1 152 1 173 2 247 1 
260 1 140 1 37 1 
260 1 140 1 37 1 
33 1 254 1 
33 1 140 1 254 1 
376 1 141 1 
154 1 193 2 160 1 238 1 361 1 200 2 65 2 134 1 267 1 173 1 67 1 247 1 53 1 371 1 94 1 141 1 116 1 208 1 187 2 147 1 226 1 373 1 78 1 376 1 122 2 124 1 152 1 
260 1 37 1 
33 1 140 1 254 1 
191 1 3 2 236 1 41 1 156 1 216 1 290 1 62 1 108 2 7 1 199 1 65 2 8 1 240 1 295 1 245 1 246 1 139 1 370 1 303 2 206 1 187 2 327 1 352 2 99 1 282 2 18 1 122 2 355 2 308 1 233 1 
2 1 3 2 34 2 303 2 64 1 77 1 108 2 109 1 328 1 327 1 228 1 363 1 18 1 330 1 66 1 332 1 153 1 175 1 258 1 
2 1 3 1 34 2 303 1 64 1 108 1 328 1 228 1 327 1 351 1 363 1 18 1 330 1 66 1 153 1 175 1 258 1 
248 1 3 1 156 1 313 1 303 1 161 1 206 1 108 1 109 1 28 1 327 1 95 1 18 1 258 1 
2 1 3 1 34 2 303 1 64 1 108 1 109 1 328 1 327 1 228 1 363 1 18 1 330 1 66 1 332 1 153 1 175 1 258 1 
151 1 
353 1 110 1 367 1 369 1 336 1 250 1 321 1 
261 1 104 1 311 1 336 1 194 1 160 1 130 1 110 1 168 1 174 1 320 1 31 1 369 1 250 1 222 1 147 1 305 1 
1 1 126 2 334 1 3 1 156 4 158 1 288 1 311 2 159 1 194 2 264 1 160 2 162 1 130 2 108 1 48 1 165 1 110 2 168 2 89 1 31 1 179 1 138 2 369 3 15 2 303 1 222 2 206 1 147 2 327 2 281 1 95 1 306 1 305 2 283 1 121 1 18 1 331 1 
1 2 178 1 345 1 138 5 157 1 158 2 369 4 311 1 159 2 194 1 15 5 314 1 222 1 326 1 97 2 79 1 110 6 305 1 329 2 168 3 100 1 356 1 
0 1 5 1 158 2 311 1 193 1 194 1 160 1 337 1 200 1 132 1 65 1 110 2 91 1 50 1 322 1 369 2 181 1 222 1 117 2 205 1 187 1 147 1 188 1 97 1 305 1 122 1 83 1 125 1 
369 1 311 1 250 1 336 1 194 1 222 1 353 1 110 1 305 1 321 1 
1 1 138 2 158 1 369 2 104 2 336 2 159 1 15 2 97 1 110 2 168 4 329 1 
336 1 250 1 160 1 130 1 147 1 31 1 
3 4 156 1 311 2 313 1 194 2 160 3 130 4 198 1 108 4 218 1 110 2 202 2 31 2 248 1 49 1 179 2 369 2 73 2 274 1 303 4 222 2 206 1 147 3 327 1 95 2 305 1 18 1 150 1 39 1 
3 1 41 1 156 1 216 1 193 2 62 1 131 1 108 1 200 2 7 1 240 1 65 3 265 1 135 1 341 1 91 2 371 1 303 1 206 1 187 2 188 1 327 1 95 1 352 2 99 1 283 1 18 1 122 3 355 1 82 1 308 1 233 1 
179 1 138 1 369 1 311 1 73 1 250 1 336 1 194 1 222 1 110 1 305 1 168 1 
302 1 238 1 116 1 
302 1 238 1 116 1 
81 1 141 1 106 1 238 1 116 1 
302 1 238 1 116 1 
364 1 238 1 116 1 
364 1 238 1 116 1 
364 1 238 1 116 1 
238 1 116 1 
94 1 152 1 
335 3 41 4 72 2 158 1 216 2 5 1 322 1 290 4 36 1 360 1 337 1 145 1 7 2 240 2 352 4 97 1 219 1 318 1 355 8 308 2 
335 2 41 3 367 1 72 2 5 1 322 1 158 1 290 3 360 1 337 1 145 1 97 1 219 1 355 6 
1 1 335 2 41 2 72 1 216 1 158 1 290 2 159 1 7 1 240 1 352 2 97 1 329 1 318 1 355 4 308 1 69 1 
1 1 178 2 335 2 41 4 72 1 158 1 290 3 159 1 97 1 79 1 329 1 318 1 355 7 284 1 100 1 
1 2 335 9 41 12 5 2 158 3 216 2 290 11 159 2 360 1 337 1 338 1 163 1 7 2 240 2 219 1 318 4 112 1 178 2 72 5 322 2 36 2 145 1 352 4 79 2 97 3 329 2 355 23 284 1 308 2 
178 1 41 1 355 1 
79 1 290 1 355 1 
1 1 335 3 41 3 72 2 216 1 158 1 290 3 159 1 7 1 240 1 48 1 352 2 97 1 318 1 329 1 355 6 308 1 69 1 
1 2 335 2 41 6 216 1 158 2 157 1 290 6 159 2 314 1 7 1 240 1 318 1 178 1 345 1 72 1 326 1 280 1 352 2 79 1 97 2 329 2 355 12 308 1 100 1 356 1 
335 2 41 3 72 1 158 1 5 1 322 1 290 3 337 1 97 1 318 1 355 6 
335 2 41 2 72 1 322 1 5 1 216 1 290 1 36 1 145 1 338 1 7 1 240 1 352 2 219 1 318 1 355 3 308 1 
335 5 41 5 72 3 216 1 5 2 322 2 158 2 290 5 337 1 7 1 280 1 240 1 352 2 97 2 318 2 355 10 83 1 308 1 
1 1 335 1 216 1 158 1 290 2 280 1 7 1 240 1 352 2 318 1 355 2 308 1 
1 1 335 2 41 2 72 1 216 1 158 1 290 2 159 1 280 1 7 1 240 1 352 2 97 1 329 1 318 1 355 4 308 1 
335 2 41 2 72 1 216 3 5 1 322 1 290 1 36 1 338 1 280 1 7 3 240 3 352 6 318 1 355 3 308 3 257 1 
1 3 335 12 41 18 5 3 289 1 216 5 158 5 42 1 290 16 159 3 360 1 337 2 338 1 339 1 7 5 240 5 219 1 318 5 69 1 178 4 72 7 322 3 36 2 145 1 280 1 352 10 79 3 97 5 329 3 355 34 284 1 308 5 100 1 257 1 
335 2 41 4 158 1 216 1 5 1 290 4 360 1 337 1 7 1 240 1 219 1 178 1 72 2 322 1 145 1 326 1 280 1 352 2 97 1 79 1 355 8 308 1 100 1 
1 1 335 3 41 5 5 1 216 2 158 2 290 6 159 1 360 1 337 1 7 2 240 2 219 1 318 1 69 1 178 2 72 2 322 1 145 1 326 1 280 1 352 4 97 1 79 1 355 11 284 1 308 2 100 1 
1 2 335 4 41 10 5 1 216 3 158 3 157 1 290 9 159 2 314 1 360 1 337 1 7 3 240 3 219 1 318 1 69 1 178 1 345 1 72 3 322 1 36 1 145 1 326 1 280 1 352 6 79 1 97 3 329 2 355 19 308 3 100 1 356 1 
1 2 335 5 41 7 5 1 216 3 158 3 157 1 290 10 159 2 314 1 360 1 337 1 7 3 240 3 219 1 318 2 69 1 178 1 345 1 72 3 322 1 36 1 145 1 326 1 280 1 352 6 79 1 97 2 329 1 355 17 308 3 100 1 356 1 
335 2 41 4 158 1 216 1 5 1 290 4 360 1 337 1 7 1 240 1 219 1 178 1 72 2 322 1 145 1 326 1 280 1 352 2 97 1 79 1 355 8 308 1 100 1 
1 2 335 2 41 6 216 1 158 2 157 1 290 6 159 2 314 1 7 1 240 1 318 1 178 1 345 1 72 1 326 1 280 1 352 2 79 1 97 2 329 2 355 12 308 1 100 1 356 1 
1 2 335 5 41 8 5 1 157 1 216 4 158 3 290 10 159 2 314 1 360 1 337 1 7 4 240 4 219 1 318 2 69 1 178 1 345 1 72 3 322 1 36 2 145 1 326 1 280 1 352 8 79 1 97 2 329 1 355 18 308 4 100 1 356 1 
1 3 335 6 41 7 157 1 216 4 158 3 290 9 159 3 314 1 7 4 240 4 318 3 178 1 345 1 72 3 36 2 326 1 280 1 352 8 79 1 97 2 329 2 355 16 308 4 100 1 257 1 356 1 
335 6 41 4 72 3 5 3 322 3 158 1 290 3 337 1 145 2 97 1 219 1 318 3 355 7 
1 2 335 4 41 8 5 1 157 1 216 4 158 3 290 10 159 2 314 1 360 1 337 1 7 4 240 4 219 1 318 1 178 1 345 1 72 3 322 1 36 2 145 1 326 1 280 1 352 8 79 1 97 2 329 1 355 18 308 4 100 1 257 1 356 1 
65 1 24 1 371 1 122 1 263 1 30 1 187 1 
24 1 371 1 263 1 209 1 187 1 304 1 65 1 266 1 122 1 255 1 30 1 22 1 
248 1 327 1 3 1 95 1 156 1 367 1 18 1 313 1 303 1 206 1 108 1 
3 1 156 1 193 1 371 1 303 1 206 1 131 1 187 1 108 1 200 1 327 1 65 2 95 1 265 1 283 1 18 1 122 2 365 1 
50 1 3 1 156 3 86 1 193 1 371 1 303 1 143 1 206 2 131 1 187 2 108 1 200 2 17 1 327 1 65 2 265 1 283 2 18 1 122 2 202 1 21 1 365 1 
3 2 156 3 86 1 193 1 131 1 108 2 293 1 200 2 65 2 202 1 365 1 50 1 93 1 371 1 303 2 143 1 206 2 187 2 327 1 17 1 283 2 18 1 122 2 21 1 
126 1 3 3 334 1 156 4 336 1 160 2 130 1 108 3 170 1 202 1 75 1 93 1 250 1 303 3 206 1 147 2 327 1 17 1 95 1 283 1 18 1 331 1 21 1 
126 1 334 1 3 3 156 4 93 1 336 1 250 1 303 3 264 1 160 2 130 1 206 1 147 2 108 3 17 1 327 1 95 1 283 1 18 1 202 1 331 1 21 1 
327 1 3 1 23 1 18 1 303 1 108 1 
3 7 156 3 32 1 23 1 4 1 312 1 300 1 303 6 206 2 77 1 349 1 108 7 327 3 95 2 282 1 363 1 283 1 121 1 18 2 189 1 246 1 
287 1 3 1 335 2 236 1 41 3 5 1 193 1 290 3 337 1 131 1 200 1 7 2 240 2 135 1 346 1 139 1 303 1 145 1 206 1 352 4 97 1 18 1 355 6 308 2 156 1 216 2 158 1 62 2 360 1 108 1 65 2 265 1 219 1 167 1 365 1 221 1 72 2 322 1 371 2 77 1 187 1 327 1 283 1 230 1 122 2 82 1 233 2 
126 1 154 1 3 1 334 1 156 2 311 2 336 1 194 2 264 1 160 3 162 1 130 2 108 1 110 1 89 1 321 1 31 1 369 1 250 1 274 1 303 1 222 2 147 3 281 1 95 1 353 1 305 2 331 1 
3 2 156 2 23 1 303 2 206 1 77 1 108 2 327 2 165 1 283 1 121 1 18 1 331 1 
248 1 3 4 156 1 93 1 313 1 303 4 206 1 77 1 108 4 327 1 95 1 18 1 317 1 
204 1 3 2 156 1 32 1 300 1 237 1 217 1 303 2 206 1 108 2 327 2 283 1 18 1 202 1 
327 1 3 1 95 1 34 1 18 1 66 1 303 1 153 1 175 1 108 1 
3 2 156 1 370 1 303 2 206 1 77 1 108 2 327 1 363 1 18 1 246 1 
248 1 3 5 156 3 312 1 313 1 303 4 206 2 77 1 108 5 327 2 95 1 18 2 317 1 189 1 202 1 246 1 
248 1 3 5 156 3 312 1 313 1 303 4 251 1 206 2 77 1 108 5 327 2 95 1 18 2 317 1 202 1 246 1 
3 1 156 1 193 1 371 1 303 1 206 1 131 1 187 1 108 1 200 1 293 1 327 1 65 2 95 1 283 1 18 1 122 2 365 1 
3 1 156 1 32 1 300 1 303 1 206 1 349 1 108 1 327 2 283 1 121 1 18 1 202 1 
211 1 375 1 371 1 195 1 291 1 
154 1 334 1 50 1 86 1 336 1 250 1 371 1 160 2 195 2 143 1 146 1 291 2 147 2 47 1 211 2 375 1 316 1 354 1 271 1 
195 1 291 1 187 1 199 1 8 1 65 1 375 1 122 1 245 1 
47 1 375 1 271 1 
177 1 367 1 29 1 26 1 
177 1 285 1 234 1 229 1 29 1 26 1 277 1 
19 1 277 1 118 1 
285 3 177 1 234 1 259 1 128 1 63 2 26 1 16 1 277 3 241 1 229 1 29 1 
177 1 253 1 285 2 234 1 229 1 29 1 297 1 26 1 277 2 
285 1 234 1 259 1 34 1 277 1 328 1 268 1 229 1 29 1 153 1 333 1 
177 1 285 1 234 1 259 1 229 1 29 1 277 1 
177 2 285 1 234 1 259 1 229 1 26 1 277 1 
177 1 285 2 272 1 234 2 259 1 277 2 186 1 149 1 229 2 29 1 
177 1 285 3 234 1 259 1 26 1 184 1 277 3 229 1 201 1 297 2 29 2 172 1 333 1 
177 1 285 2 234 1 259 1 34 2 26 1 277 2 328 1 229 1 330 1 29 1 297 1 66 1 10 1 153 1 
177 1 285 4 234 2 259 1 58 1 26 1 277 4 253 1 229 2 201 1 297 2 29 2 333 1 
177 1 285 1 234 1 259 1 229 1 29 1 26 1 277 1 
177 2 285 4 234 1 128 1 63 1 26 2 16 1 277 4 229 1 201 1 243 1 297 2 29 3 333 1 
177 1 285 2 234 1 259 1 54 1 26 1 323 1 315 1 277 2 229 1 29 1 297 1 
285 3 177 1 234 1 259 1 128 2 63 2 26 1 16 1 277 3 229 1 29 1 101 1 
103 1 29 2 276 2 11 1 
285 1 234 1 259 1 120 1 229 1 277 1 
177 1 285 2 234 1 259 1 229 1 29 1 297 1 26 1 184 1 277 2 
249 1 
177 1 285 1 234 1 259 1 229 1 29 1 26 1 277 1 
285 3 177 1 234 1 259 1 63 1 26 1 184 1 277 3 229 1 297 1 29 1 
201 1 243 1 29 1 333 1 
177 1 29 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 55 351 67 318 277 192 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 55 351 67 318 277 192 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 55 351 67 318 277 192 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 55 351 67 318 277 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 33 67 318 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 55 351 67 318 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 723 | 1 -> -1
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
44 5 137 1 339 1 139 1 194 2 301 2 341 1 73 2 196 1 288 2 82 1 150 1 291 4 85 2 11 1 12 9 36 1 253 1 37 1 308 9 41 1 182 6 225 1 273 1 211 2 68 3 377 2 213 1 
44 5 137 1 339 1 139 1 194 2 341 1 73 2 301 2 196 1 288 2 82 1 150 1 291 4 85 2 11 1 12 9 36 1 253 1 37 1 308 9 41 1 182 6 225 1 273 1 211 2 68 3 377 2 213 1 
44 6 137 1 339 1 139 1 194 2 341 1 73 2 301 2 196 1 288 2 82 1 150 1 291 5 85 2 11 1 12 10 36 1 253 1 37 1 308 10 41 1 182 7 225 1 273 1 211 2 68 4 377 2 213 1 
44 4 137 1 339 1 139 1 194 2 341 1 73 2 301 1 196 1 288 2 82 1 150 1 291 3 85 2 11 1 12 7 36 1 253 1 37 1 308 7 41 1 182 4 225 1 273 1 211 2 68 2 377 2 
12 4 44 3 36 1 137 1 339 1 308 4 194 1 182 3 73 1 301 2 196 1 273 1 211 1 288 1 68 1 377 1 291 2 213 1 
44 1 12 2 137 1 37 1 308 2 41 1 282 1 194 1 73 1 196 1 61 1 273 1 288 1 345 1 377 1 85 1 
12 3 44 2 137 1 308 3 182 1 73 2 196 1 273 1 288 2 68 1 291 1 85 1 11 1 
44 5 137 1 339 1 139 1 194 1 73 2 301 2 196 1 288 2 291 4 85 1 11 1 12 9 36 1 201 1 308 9 182 7 370 1 225 1 273 1 211 1 68 3 377 1 213 1 
44 5 137 1 339 1 139 1 194 1 73 2 301 2 196 1 288 2 291 4 85 1 11 1 12 9 36 1 201 1 308 9 182 7 370 1 225 1 273 1 211 1 68 3 377 1 213 1 
7 1 236 1 237 1 
138 1 287 2 236 1 
306 2 50 2 202 1 34 2 361 1 92 2 116 2 207 2 
191 2 357 1 193 1 240 1 5 1 360 1 361 1 268 1 326 2 48 1 50 3 343 1 199 1 305 2 365 1 246 1 34 3 116 2 306 2 16 1 255 1 202 1 184 2 204 2 257 1 92 2 372 1 371 1 207 2 296 1 313 1 355 1 374 1 96 1 229 1 132 1 134 1 
306 1 336 1 50 1 224 1 245 1 34 1 361 1 92 1 116 1 207 1 
223 1 154 1 236 1 309 1 158 1 92 1 324 1 7 1 242 1 50 1 316 1 8 1 34 1 245 1 
223 1 306 1 154 1 236 1 92 1 207 1 324 2 7 1 242 1 50 1 316 1 8 2 34 1 245 1 116 1 
324 1 8 1 322 1 122 1 311 1 
324 2 7 1 272 1 236 1 8 2 322 1 122 1 340 1 
324 1 8 1 322 1 
306 1 224 1 122 1 361 1 92 1 207 1 324 1 336 1 50 1 8 1 278 1 245 1 34 1 116 1 
236 1 
324 2 7 1 272 1 171 1 236 1 8 2 322 1 122 1 
298 1 272 1 369 2 163 1 300 1 164 1 236 1 238 1 122 2 322 2 159 2 324 5 108 1 284 1 7 1 49 1 126 2 8 5 251 1 
237 1 202 1 
306 1 156 1 202 2 92 2 207 1 50 2 187 1 34 2 116 1 
347 1 71 1 18 1 
191 1 357 1 193 1 202 1 184 1 74 1 371 1 296 1 50 1 343 1 199 1 305 1 365 1 34 1 246 1 134 1 
306 1 50 3 202 1 330 1 34 3 92 3 116 3 207 3 
336 1 50 1 245 1 34 1 92 1 116 1 207 1 
306 1 50 1 187 1 156 1 245 1 34 1 92 1 116 1 207 1 
191 1 357 1 193 1 5 1 360 1 361 1 268 1 324 1 326 2 242 1 218 1 50 4 343 1 8 1 199 1 365 1 305 1 246 1 34 4 330 1 245 1 116 3 223 1 176 1 306 2 154 1 16 1 255 1 202 1 184 1 204 1 257 1 371 1 92 3 207 3 296 1 297 1 313 1 316 1 374 1 187 1 96 1 229 1 134 1 
13 1 50 2 309 1 202 1 34 2 330 1 92 2 116 1 207 1 
223 1 306 1 176 1 154 1 236 1 214 1 92 3 207 3 324 1 297 1 242 1 50 3 316 1 187 1 8 1 245 1 330 2 34 3 116 3 
306 1 347 1 18 1 92 2 207 2 50 2 187 1 330 1 34 2 116 2 
191 1 357 1 193 1 202 1 184 1 371 1 296 1 50 1 343 1 199 1 305 1 365 1 34 1 246 1 134 1 
191 1 357 1 193 1 202 1 184 1 371 1 296 1 50 1 186 1 199 1 305 1 34 1 356 1 246 1 134 1 
46 1 71 2 5 1 47 1 268 1 326 2 173 1 175 1 347 2 55 1 294 1 255 1 204 4 18 2 209 1 313 1 208 1 23 1 374 1 130 1 96 1 229 2 132 2 378 1 
264 1 316 1 50 1 245 1 34 1 92 1 116 1 207 1 
191 1 347 1 357 1 193 1 184 1 371 1 92 1 207 1 296 1 297 1 50 2 343 1 199 1 305 1 365 1 246 1 330 1 34 2 116 1 134 1 
306 1 13 1 309 1 202 1 92 5 207 4 297 1 50 5 275 1 187 1 133 1 330 2 34 5 116 4 
264 1 336 1 50 2 245 1 34 2 92 2 116 2 207 2 
195 1 366 1 
195 1 366 1 
160 1 3 1 
160 1 3 1 
160 1 3 1 
195 1 366 1 174 1 
195 1 366 1 323 1 
160 1 79 1 3 1 169 1 195 2 366 2 
195 1 366 1 174 1 
195 1 366 1 174 1 
195 1 366 1 367 1 
195 1 366 1 367 1 
195 1 366 1 367 1 
263 2 165 1 254 2 236 1 181 1 169 1 295 1 195 2 227 2 324 2 269 2 65 1 8 2 304 2 149 1 366 2 115 1 329 3 279 1 
252 1 254 1 202 1 195 1 323 1 92 2 31 1 227 1 207 2 324 1 269 1 50 2 24 1 8 1 188 1 25 1 259 1 189 1 304 1 366 1 34 2 115 1 329 1 116 2 
211 1 194 1 377 1 
194 1 377 1 61 1 
373 1 211 2 57 1 194 3 266 1 61 1 
373 1 216 1 211 1 57 1 194 2 61 1 
373 2 211 1 57 1 194 2 61 1 
262 2 69 1 138 1 300 1 236 2 322 1 30 2 324 5 302 1 7 1 284 3 287 3 8 5 251 2 252 1 369 1 272 1 55 1 294 1 180 1 122 4 351 1 159 1 353 2 93 1 126 1 276 1 23 1 24 1 130 1 25 1 230 1 
190 1 236 1 322 1 361 1 324 2 7 1 50 1 8 2 53 1 245 1 34 1 248 1 116 1 306 1 224 1 122 2 311 1 92 1 207 1 336 1 278 1 
262 2 138 2 236 3 30 2 324 3 7 1 302 1 284 3 49 1 287 4 8 3 251 2 369 1 55 1 294 1 180 1 122 2 351 1 159 1 353 1 276 1 126 1 23 1 24 1 130 1 230 1 
262 4 138 3 236 4 30 4 324 4 7 1 302 1 284 5 287 7 49 1 8 4 251 4 86 1 369 1 55 2 294 2 180 1 122 3 226 1 351 2 159 1 353 2 126 1 276 1 23 2 24 2 130 2 26 1 230 1 
237 1 246 1 231 1 
20 1 246 1 
21 1 
357 1 246 1 
70 1 357 1 199 1 246 3 231 2 123 1 
357 1 199 1 246 1 
212 1 246 1 
72 1 294 1 310 1 47 3 6 1 203 1 204 7 62 2 315 1 172 1 23 1 95 1 112 1 161 1 229 3 132 4 378 2 
72 1 294 1 310 1 47 3 6 1 203 1 204 7 62 2 315 1 172 1 23 1 95 1 112 1 161 1 229 3 132 4 378 2 
117 1 72 1 294 1 310 1 47 3 6 1 203 1 204 7 62 2 315 1 172 1 23 1 95 1 112 1 161 1 229 3 132 4 378 2 
281 1 321 1 72 1 140 1 5 1 6 1 47 10 75 3 268 1 326 2 270 1 172 1 112 2 111 1 55 3 294 4 255 1 310 2 351 3 204 31 203 2 206 4 62 3 313 1 315 1 161 2 23 4 95 5 130 3 229 15 98 1 131 1 132 16 378 5 
72 1 5 2 29 1 47 4 6 1 268 2 326 4 270 1 172 1 112 1 294 1 255 2 310 1 204 9 203 1 62 2 313 2 23 1 161 1 95 1 375 1 229 4 132 5 378 3 
44 1 100 1 191 1 137 1 2 1 194 2 266 1 73 1 196 1 283 1 144 1 288 1 305 1 85 1 12 2 333 1 334 1 308 2 179 1 182 1 184 1 371 1 60 1 61 1 296 1 273 1 211 1 125 1 377 1 99 1 
44 1 191 1 1 1 166 1 2 1 194 2 266 1 73 1 141 1 196 1 283 1 288 1 305 1 85 1 12 3 333 1 334 1 308 3 179 1 182 2 184 1 371 1 60 1 61 1 296 1 273 1 211 1 125 1 377 1 99 1 
44 1 191 1 1 1 2 1 194 2 266 1 141 1 196 1 305 1 85 1 12 2 333 1 308 2 179 1 182 2 184 1 371 1 60 1 61 1 296 1 273 1 211 1 125 1 377 1 99 1 
35 1 12 1 191 1 15 1 166 1 308 1 357 1 40 1 193 1 179 2 73 1 184 1 371 1 296 1 78 1 125 2 52 1 364 1 288 1 305 1 246 1 85 2 99 2 
333 1 12 1 334 1 137 1 1 1 191 1 2 1 308 1 179 1 194 2 266 1 73 1 184 1 371 1 61 1 60 1 283 1 296 1 211 1 144 1 125 1 288 1 305 1 377 1 85 1 99 1 
376 1 
300 1 107 1 7 1 51 2 50 1 342 2 52 1 8 5 220 1 305 2 223 1 272 3 349 1 309 1 17 1 184 2 59 2 19 1 316 1 126 1 127 1 128 1 319 2 230 1 135 1 191 2 138 2 236 2 357 1 193 2 322 6 324 5 363 1 284 2 242 1 287 2 78 1 327 1 81 2 83 1 332 1 246 1 34 1 245 1 251 2 369 1 154 1 155 2 39 2 158 1 159 1 256 4 371 1 92 1 296 1 
322 2 107 1 363 1 324 3 242 1 171 1 50 1 8 3 83 1 34 1 245 1 223 1 154 1 272 1 349 1 39 1 309 1 158 1 256 2 92 1 19 1 316 1 
236 1 322 1 107 1 363 1 324 3 7 1 242 1 171 1 50 1 8 3 81 1 83 1 34 1 245 1 223 1 154 1 272 1 349 1 309 1 158 1 256 3 92 1 19 1 316 1 
236 1 322 2 107 1 363 1 324 3 7 1 171 1 242 1 50 1 342 1 8 3 81 1 83 1 34 1 245 1 223 1 272 1 154 1 349 1 39 1 309 1 158 1 256 3 92 1 19 1 316 1 
300 1 107 1 7 5 171 1 50 1 51 2 342 4 8 5 223 1 272 3 307 1 349 1 309 1 178 1 59 2 19 1 316 1 126 1 127 1 319 2 27 1 138 2 236 5 322 7 324 5 363 1 284 1 242 1 81 4 83 1 245 1 34 1 332 1 250 1 251 1 154 1 369 1 155 2 89 1 39 4 158 1 256 6 159 1 92 1 
300 1 107 1 7 1 50 1 51 2 342 2 8 4 223 1 272 2 349 1 309 1 59 2 19 1 316 1 126 1 127 1 128 1 319 2 138 2 236 2 322 4 324 4 363 1 284 1 242 1 287 2 81 2 83 1 245 1 34 1 332 1 251 1 154 1 369 1 155 2 39 2 158 1 256 4 159 1 92 1 
27 1 138 2 300 1 236 1 322 4 107 1 363 1 324 4 7 1 284 1 242 1 51 2 50 1 342 2 8 4 81 2 83 1 332 1 34 1 245 1 251 1 223 1 272 2 369 1 154 1 155 2 89 1 39 2 349 1 309 1 178 1 158 1 256 4 159 1 59 2 92 1 19 1 316 1 126 1 127 1 319 2 
27 1 138 2 300 1 236 1 322 4 107 1 363 1 324 4 7 1 284 1 242 1 51 2 50 1 342 2 8 4 81 2 83 1 332 1 34 1 245 1 251 1 223 1 272 2 369 1 154 1 155 2 89 1 39 2 349 1 309 1 178 1 158 1 256 4 159 1 59 2 92 1 19 1 316 1 126 1 127 1 319 2 
300 1 236 1 105 2 322 4 107 1 363 1 324 4 7 1 284 1 242 1 287 2 50 1 342 2 8 4 81 2 221 2 83 1 332 1 34 1 245 1 251 1 223 1 272 2 369 1 154 1 120 1 39 2 349 1 309 1 178 1 158 1 256 4 159 1 59 2 42 1 92 1 19 1 316 1 126 1 319 2 43 1 
27 1 138 2 300 1 236 1 322 5 107 1 363 1 324 4 7 1 284 1 242 1 51 2 50 1 342 3 8 4 81 3 83 1 332 1 34 1 245 1 251 1 250 1 223 1 272 2 369 1 154 1 155 2 89 1 349 1 39 3 309 1 178 1 158 1 159 1 256 5 59 2 92 1 19 1 316 1 126 1 127 1 319 2 
27 1 138 2 300 1 236 1 322 5 107 1 363 1 324 4 7 1 284 1 242 1 51 2 50 1 342 3 8 4 81 3 83 1 332 1 34 1 245 1 251 1 250 1 223 1 272 2 369 1 154 1 155 2 89 1 349 1 39 3 309 1 178 1 158 1 159 1 256 5 59 2 92 1 19 1 316 1 126 1 127 1 319 2 
300 1 236 1 105 2 322 4 107 1 363 1 324 4 7 1 284 1 242 1 287 2 50 1 342 2 8 4 81 2 221 2 83 1 332 1 34 1 245 1 251 1 223 1 272 2 369 1 154 1 39 2 349 1 309 1 158 1 159 1 256 4 59 2 92 1 19 1 316 1 126 1 128 1 319 2 43 1 
237 1 72 1 71 1 5 1 6 1 47 2 268 1 326 2 172 1 112 1 347 1 294 1 255 1 310 1 202 2 18 1 204 6 62 1 313 1 208 1 374 1 23 1 96 1 229 3 132 3 378 2 
280 1 45 1 71 11 358 1 240 1 5 2 47 2 75 3 268 2 326 4 111 1 347 11 14 1 55 2 294 1 255 2 202 1 351 2 204 14 18 4 257 1 206 3 313 2 95 1 374 2 23 2 96 1 130 1 260 1 229 6 98 1 132 8 378 1 
191 1 357 1 104 1 193 1 358 1 5 1 359 1 240 1 74 1 268 1 326 2 50 2 343 1 199 1 365 1 305 1 246 1 34 2 330 1 116 1 255 1 202 1 183 1 184 1 18 1 204 2 371 1 92 1 257 1 207 1 296 1 297 1 313 1 374 1 96 1 229 1 132 1 134 1 
1 1 299 2 265 1 5 3 6 1 47 8 268 3 172 1 50 3 112 1 343 2 305 3 116 1 347 7 56 2 55 2 310 1 351 2 184 3 18 7 62 1 313 3 23 3 66 1 130 2 229 10 132 10 134 2 191 3 320 2 72 1 357 2 71 7 193 1 239 1 358 1 240 1 360 2 326 6 199 2 365 2 330 1 34 3 246 2 88 2 294 3 255 3 202 2 204 20 257 1 92 1 371 2 207 1 296 2 297 1 374 3 95 4 96 3 378 4 
100 1 338 1 1 1 235 1 191 8 357 2 193 2 5 2 240 1 268 2 326 4 50 1 78 1 219 1 52 1 198 1 305 8 34 1 330 1 246 3 116 1 121 1 255 2 184 7 204 2 92 1 371 2 257 1 207 1 296 2 208 1 313 2 94 1 274 1 355 2 374 2 96 2 229 1 132 1 
71 1 358 1 5 1 47 1 268 1 326 2 50 1 222 1 34 1 116 1 306 1 347 1 55 1 294 1 255 1 351 1 18 1 204 3 92 1 207 1 313 1 187 1 374 1 23 1 96 1 130 1 229 2 132 1 378 1 
46 1 347 1 55 1 71 1 255 1 5 1 47 1 18 1 204 2 268 1 208 1 326 2 313 1 95 1 374 1 23 1 96 1 132 2 
347 1 71 1 294 1 255 1 5 1 47 1 18 1 204 2 268 1 208 1 326 2 313 1 374 1 96 1 130 1 229 2 173 1 378 1 
71 2 5 1 47 2 268 1 326 2 347 2 55 1 294 1 255 1 351 1 204 4 18 2 313 1 208 1 23 1 374 1 95 1 96 1 130 1 229 2 132 2 378 1 
46 1 347 1 55 1 71 1 255 1 5 1 47 1 18 1 204 2 268 1 326 2 313 1 95 1 219 1 374 1 23 1 96 1 132 2 
347 1 71 1 294 1 255 1 5 1 47 1 18 1 204 2 268 1 326 2 313 1 219 1 374 1 96 1 130 1 229 2 173 1 378 1 
71 2 5 1 47 2 268 1 326 2 219 1 347 2 55 1 294 1 255 1 351 1 204 4 18 2 313 1 23 1 374 1 95 1 96 1 130 1 229 2 132 2 378 1 
347 2 55 1 71 2 294 1 255 1 5 1 351 1 47 2 18 2 204 4 268 1 326 2 313 1 95 1 374 1 23 1 130 1 96 1 229 2 132 2 378 1 
191 1 357 1 193 1 240 1 5 1 360 1 268 1 326 2 50 1 343 1 199 1 365 1 305 1 246 1 34 1 255 1 202 1 184 1 204 2 371 1 257 1 296 1 313 1 374 1 96 1 229 1 132 1 134 1 
191 1 357 1 193 1 240 1 5 1 268 1 326 2 50 1 199 1 305 1 246 1 34 1 255 1 202 1 184 1 204 2 371 1 257 1 296 1 313 1 186 1 374 1 96 1 228 1 229 1 132 1 356 1 134 1 
71 2 358 1 5 1 47 2 268 1 326 2 347 2 55 1 294 1 255 1 351 1 204 4 18 2 313 1 23 1 374 1 95 1 96 1 130 1 229 2 132 2 378 1 
100 1 320 1 191 1 71 2 357 1 5 1 360 1 47 2 268 1 326 2 50 1 343 1 199 1 365 1 305 1 246 1 34 1 347 2 55 1 294 1 255 1 351 1 184 1 18 2 204 4 371 1 296 1 313 1 95 1 23 1 374 1 130 1 96 1 229 2 132 2 378 1 134 1 
71 1 358 1 5 1 47 1 268 1 326 2 50 1 34 1 116 1 306 1 347 1 55 1 294 1 255 1 351 1 204 3 18 1 92 1 207 1 313 1 124 1 95 1 187 1 374 1 23 1 130 1 96 1 229 1 132 2 
337 3 192 1 5 3 241 1 47 4 75 3 268 3 270 1 326 6 217 1 33 1 145 1 111 1 148 2 292 1 152 1 38 1 55 4 294 3 255 3 351 4 312 1 204 30 206 4 313 3 23 4 95 2 375 1 277 1 130 3 67 1 229 15 318 1 98 3 132 15 378 2 
337 3 192 1 5 3 241 1 47 5 75 3 268 3 270 1 326 6 217 1 33 1 145 1 111 1 148 2 292 1 152 1 38 1 55 4 294 3 255 3 351 4 312 1 204 30 206 4 313 3 23 4 95 2 375 1 277 1 130 3 67 1 229 15 318 1 98 3 132 15 378 3 
337 2 280 2 192 1 72 1 5 1 241 1 6 1 47 10 75 4 268 1 326 2 172 1 33 1 112 1 111 2 148 1 38 1 55 6 294 6 255 1 310 1 351 6 312 1 204 41 62 1 206 4 313 1 23 7 95 4 375 1 277 1 130 5 67 1 229 19 318 1 98 2 132 22 378 6 
337 2 192 1 5 2 47 6 75 1 268 2 326 4 217 2 111 1 148 1 292 1 152 1 38 1 55 3 294 3 255 2 351 3 204 19 206 2 314 1 313 2 23 3 95 3 375 1 277 1 130 3 229 10 98 1 132 9 378 3 
337 2 192 1 5 2 241 1 47 1 75 2 268 2 270 1 326 4 33 1 148 2 38 1 55 2 294 1 255 2 351 2 204 17 312 1 206 2 313 2 23 2 375 1 277 2 130 1 67 1 229 8 98 2 318 1 132 9 378 1 
269 1 32 1 254 1 181 1 169 1 304 1 149 1 195 1 366 1 227 1 
323 1 31 1 
143 1 269 1 102 1 254 1 147 1 304 1 195 1 366 1 227 1 
263 1 254 1 236 1 181 1 169 1 295 1 195 1 227 1 324 1 269 1 65 1 8 1 304 1 149 1 366 1 115 1 329 2 279 1 
263 1 254 1 236 1 181 1 169 1 295 1 195 1 227 1 324 1 269 1 65 1 8 1 304 1 149 1 366 1 115 1 329 2 279 1 
263 1 254 1 236 1 181 1 169 1 295 1 195 1 227 1 324 1 269 1 65 1 8 1 304 1 149 1 366 1 115 1 329 2 279 1 
79 1 267 1 174 1 
79 1 267 1 174 1 
64 1 367 1 
64 1 79 1 367 1 
188 1 189 1 
263 1 195 1 323 1 31 1 324 1 269 1 50 2 8 1 113 1 304 1 366 1 34 2 329 1 116 2 252 1 254 1 202 1 122 1 92 2 227 1 207 2 24 1 259 1 25 1 188 1 189 1 279 1 
267 1 174 1 
64 1 79 1 367 1 
235 1 191 2 357 1 358 1 5 1 240 1 268 1 326 2 109 1 271 1 50 2 344 1 305 2 246 1 34 2 153 1 255 1 91 1 184 2 204 2 371 1 92 2 257 1 296 1 313 1 274 1 355 2 374 1 96 1 229 1 132 1 
333 1 100 1 334 1 1 1 191 2 2 1 179 1 194 2 266 1 184 2 58 1 371 1 61 1 296 1 211 1 305 2 114 1 377 1 247 1 
333 1 334 1 1 1 191 1 2 1 179 1 194 2 266 1 184 1 371 1 61 1 296 1 211 1 289 1 305 1 114 1 377 1 
136 1 191 1 15 1 357 1 193 1 179 1 184 1 371 1 296 1 78 1 52 1 305 1 246 1 247 1 
333 1 334 1 1 1 191 1 2 1 179 1 194 2 266 1 184 1 58 1 371 1 61 1 296 1 211 1 305 1 114 1 377 1 247 1 
234 1 
298 1 284 1 7 1 163 1 236 1 237 1 251 1 
138 1 300 1 236 2 322 1 324 1 284 1 7 1 51 1 287 1 8 1 251 1 369 1 272 1 155 1 159 1 126 1 127 1 
298 1 262 6 100 1 163 1 299 2 300 4 4 1 170 1 7 2 8 5 305 3 223 2 272 3 55 2 352 2 351 2 184 3 123 1 20 3 126 4 23 2 22 2 129 2 130 2 317 1 230 2 231 2 233 2 191 3 138 6 357 3 236 8 193 1 322 5 30 6 324 5 284 9 287 12 327 1 328 1 200 2 199 3 244 2 246 10 331 2 251 8 369 4 294 2 159 4 371 4 296 3 258 2 212 2 97 1 
262 4 138 3 300 2 236 4 322 1 241 1 30 4 75 1 324 1 284 5 7 1 33 1 287 6 8 1 200 1 251 3 272 1 369 2 55 1 294 1 350 1 351 1 159 2 312 1 206 1 126 2 23 1 130 1 67 1 98 1 318 1 
300 1 72 1 361 1 324 1 303 1 284 2 50 1 112 1 8 1 200 2 245 1 34 1 116 1 251 2 369 1 306 1 89 1 294 1 224 1 310 1 159 1 92 1 207 1 336 1 126 1 22 1 23 2 278 1 
298 1 369 1 163 1 300 1 236 1 159 1 7 1 284 1 126 1 251 1 
262 5 299 1 138 5 55 2 236 5 294 2 351 2 30 5 284 5 287 10 22 1 23 2 130 2 200 2 251 5 
324 1 7 1 272 1 236 1 8 1 322 1 
135 1 191 4 300 1 357 1 4 1 193 2 322 4 324 3 284 2 49 1 78 1 327 2 52 1 8 3 220 1 305 4 246 1 251 2 369 2 272 2 118 1 159 2 184 4 371 1 296 1 126 2 317 2 230 2 232 1 
191 1 357 1 193 1 5 1 360 1 361 1 268 1 326 2 50 3 343 1 199 1 305 1 365 1 34 3 246 1 116 2 306 2 16 1 255 1 202 1 184 1 204 1 257 1 92 2 371 1 207 2 296 1 313 1 374 1 96 1 229 1 134 1 
262 2 369 1 138 2 300 1 236 4 30 2 159 1 62 1 284 1 7 2 287 4 126 1 327 1 230 1 251 2 
254 1 261 1 227 1 
210 1 254 1 181 1 188 1 227 1 
254 1 261 1 227 1 
254 1 261 1 227 1 
254 1 348 1 227 1 
254 1 348 1 227 1 
254 1 348 1 227 1 
254 1 227 1 
195 1 366 1 
72 1 294 1 255 2 5 2 310 1 47 3 6 1 204 8 62 1 268 2 326 4 313 2 270 1 172 1 23 1 95 1 112 1 229 4 132 4 378 2 
172 1 23 1 112 1 72 1 237 1 294 1 229 3 310 1 132 3 47 2 6 1 204 6 378 2 62 1 
0 1 55 1 294 1 255 1 5 1 351 1 47 2 204 4 268 1 326 2 313 1 23 1 95 1 130 1 229 2 132 2 378 1 
55 1 294 1 351 1 47 2 204 7 75 1 206 2 111 1 23 1 95 1 130 1 229 4 98 1 132 3 378 1 
280 1 72 1 5 2 6 1 47 9 75 2 268 2 270 2 326 4 172 1 112 2 111 1 368 1 55 2 14 1 294 3 255 2 310 2 351 2 204 23 62 1 206 2 313 2 95 4 23 3 130 2 229 12 132 11 378 5 
229 1 204 1 206 1 
132 1 204 1 75 1 
0 1 299 1 55 1 294 1 255 1 5 1 351 1 47 3 204 6 268 1 313 1 326 2 23 1 95 1 130 1 229 3 132 3 378 2 
55 2 294 1 255 1 5 1 351 2 241 1 47 1 312 1 204 10 75 1 268 1 206 1 326 2 313 1 33 1 23 2 375 1 130 1 67 1 229 4 318 1 98 1 132 6 378 1 
72 1 294 1 310 1 47 2 204 6 23 1 112 1 95 1 229 3 132 3 378 1 
368 1 255 1 310 1 5 1 47 2 6 1 204 3 268 1 270 1 326 2 313 1 172 1 95 1 112 1 229 2 132 1 378 1 
72 1 5 1 6 1 47 2 75 1 268 1 326 2 172 1 112 1 294 1 255 1 310 1 204 8 62 1 206 1 313 1 23 1 375 1 229 4 98 1 318 1 132 4 378 2 
0 1 72 1 5 2 6 1 47 3 75 1 268 2 326 4 172 1 112 1 111 1 55 1 294 1 255 2 310 1 351 1 204 11 62 1 206 2 313 2 23 2 95 1 375 1 229 5 98 1 318 1 132 6 378 2 
55 2 294 1 255 2 5 2 351 2 241 1 47 1 312 1 204 11 75 1 268 2 206 1 270 1 326 4 313 2 33 1 23 2 375 1 130 1 67 1 229 5 318 1 98 1 132 6 378 1 
55 2 294 1 255 1 5 1 351 2 241 1 47 1 312 1 204 10 75 1 268 1 206 1 326 2 313 1 33 1 23 2 375 1 130 1 67 1 229 4 318 1 98 1 132 6 378 1 
72 1 5 1 6 1 47 2 75 1 268 1 326 2 172 1 112 1 294 1 255 1 310 1 204 8 62 1 206 1 313 1 23 1 375 1 229 4 98 1 318 1 132 4 378 2 
55 2 294 1 255 1 5 1 351 2 241 1 47 1 312 1 204 10 75 1 268 1 206 1 326 2 313 1 33 1 23 2 375 1 130 1 67 1 229 4 318 1 98 1 132 6 378 1 
0 1 5 3 241 1 47 1 75 1 268 3 326 6 270 1 33 1 55 2 294 1 255 3 351 2 204 11 312 1 206 1 313 3 23 2 375 1 130 1 67 1 229 5 98 1 318 1 132 6 378 1 
5 3 241 1 47 2 75 1 268 3 326 6 270 1 33 1 292 1 55 2 294 1 255 3 351 2 204 11 312 1 206 1 313 3 23 2 375 1 130 1 67 1 229 5 98 1 318 1 132 6 378 2 
72 1 294 1 310 3 6 1 47 6 204 7 172 2 112 3 95 3 23 1 229 4 132 3 378 3 
5 3 241 1 47 1 75 1 268 3 326 6 270 1 33 1 292 1 55 2 294 1 255 3 351 2 204 11 312 1 206 1 313 3 23 2 375 1 130 1 67 1 229 5 98 1 318 1 132 6 378 1 
72 1 294 2 255 1 5 1 310 2 47 5 204 10 268 1 303 1 313 1 326 2 112 2 95 2 23 2 375 1 229 5 132 5 378 3 
55 1 255 1 5 1 47 1 204 2 268 1 326 2 313 1 23 1 95 1 375 1 132 2 
55 1 294 1 255 1 5 1 351 1 47 2 204 4 268 1 326 2 313 1 23 1 95 1 375 1 130 1 229 2 132 2 378 1 
368 1 255 3 5 3 310 1 47 2 204 3 268 3 270 1 326 6 313 3 112 1 95 1 375 1 229 2 132 1 292 1 378 1 
0 1 281 1 321 1 72 2 140 1 5 5 6 1 47 12 75 3 268 5 270 2 326 10 172 1 112 3 111 1 292 1 368 1 55 3 294 5 255 5 310 3 351 3 204 34 62 1 206 4 313 5 23 5 95 5 375 1 130 3 229 18 98 1 132 16 378 7 
13 1 293 1 50 1 309 1 202 1 34 1 92 1 
101 1 293 1 13 1 309 1 202 1 106 1 92 1 50 1 243 1 80 1 346 1 34 1 
296 1 191 1 78 1 52 1 357 1 237 1 193 1 305 1 184 1 246 1 371 1 
191 1 357 1 193 1 202 1 184 1 371 1 92 1 207 1 296 1 50 2 343 1 199 1 305 1 246 1 330 1 34 2 116 1 134 1 
154 1 191 1 357 2 202 1 184 1 371 1 92 2 207 2 296 1 212 1 316 1 50 2 343 1 199 2 317 1 305 1 245 1 246 3 330 1 34 2 233 1 116 1 134 1 
191 2 357 2 50 2 199 2 9 1 305 2 34 2 330 1 246 3 245 1 116 1 154 1 202 1 184 2 92 2 371 1 207 2 296 1 316 1 212 1 317 1 356 1 233 1 134 1 
191 3 167 1 357 1 236 1 193 1 322 1 324 2 76 1 7 1 8 2 199 1 9 1 305 3 246 4 223 1 184 3 371 1 296 1 20 1 212 1 317 1 231 1 233 1 
223 1 191 3 236 1 357 1 193 1 322 1 184 3 371 1 324 2 20 1 296 1 7 1 212 1 258 1 8 2 199 1 317 1 9 1 305 3 246 4 233 1 231 1 
296 1 191 1 198 1 305 1 184 1 371 1 
100 1 338 1 1 1 235 1 191 7 357 2 121 1 193 2 184 6 371 3 123 1 296 2 185 1 355 1 94 1 110 1 198 1 199 1 54 1 305 7 246 3 
100 1 5 2 6 1 47 2 268 2 50 2 172 1 112 1 343 1 305 1 116 1 347 1 56 1 310 1 184 1 18 1 62 1 313 2 23 1 229 3 132 3 134 1 320 1 191 1 357 1 72 1 71 1 358 1 360 1 326 4 199 1 365 1 330 1 34 2 246 1 153 1 294 1 255 2 202 2 204 6 92 1 371 1 207 1 296 1 374 2 96 2 378 2 
298 1 163 1 191 1 300 2 236 1 4 1 193 1 322 2 324 3 284 1 7 1 8 3 244 1 305 1 331 1 246 2 251 1 223 1 369 2 272 1 122 1 352 1 184 1 159 2 20 1 258 1 126 2 231 1 
100 1 191 2 357 1 184 2 371 2 123 1 296 1 198 1 97 1 199 1 305 2 246 2 231 1 
100 1 191 4 357 1 168 1 193 1 184 4 371 1 296 1 78 1 52 1 9 1 305 4 246 1 
191 2 177 1 335 1 357 1 239 1 184 2 371 2 296 1 185 1 317 1 199 1 54 1 305 2 246 1 
296 1 191 1 2 1 193 1 194 1 305 1 184 1 377 1 371 1 61 1 
296 1 100 1 235 1 1 1 191 2 357 1 344 1 305 2 184 2 246 1 371 1 
100 1 191 5 235 1 357 2 168 1 193 1 121 1 184 4 371 2 296 2 94 1 78 1 52 1 317 1 305 5 246 3 
100 1 191 5 235 1 357 2 168 1 193 1 121 1 184 4 371 2 296 2 78 1 52 1 317 1 305 5 10 1 246 3 
191 1 357 1 193 1 202 1 184 1 371 1 92 1 207 1 296 1 50 2 199 1 305 1 246 1 330 1 34 2 356 1 116 1 134 1 
191 1 357 1 184 1 371 2 123 1 296 1 185 1 110 1 317 1 199 1 54 1 305 1 246 1 
354 1 119 1 109 1 50 1 271 1 90 1 91 1 34 1 92 1 
77 1 146 1 90 1 
354 1 119 1 90 1 202 1 362 1 
223 1 154 1 176 1 119 2 236 1 90 1 202 1 122 1 362 2 197 1 324 2 7 1 77 1 354 2 242 1 316 1 146 1 8 2 245 1 
44 1 273 1 237 1 196 1 
44 1 12 1 273 1 308 1 288 1 73 1 196 1 
12 1 125 1 85 1 
44 1 12 3 137 1 308 3 41 2 157 1 28 1 73 1 63 1 196 1 273 1 288 1 
44 1 12 2 273 1 308 2 288 1 182 1 301 1 73 1 196 1 
44 1 12 1 211 1 137 1 339 1 308 1 288 1 194 1 73 1 377 1 291 1 
44 1 12 1 273 1 137 1 308 1 288 1 73 1 
12 1 273 2 137 1 308 1 288 1 73 1 196 1 
44 1 12 2 162 1 137 1 308 2 73 2 215 1 273 1 288 2 151 1 
12 3 44 2 137 1 308 3 139 1 225 1 182 2 73 1 196 1 273 1 288 1 68 1 291 1 
44 1 12 2 137 1 308 2 194 2 182 1 266 1 73 1 196 1 61 1 325 1 273 1 211 1 288 1 377 1 
12 4 44 2 137 1 308 4 182 2 73 2 301 1 196 1 273 1 288 2 68 1 291 1 213 1 
44 1 12 1 273 1 137 1 308 1 288 1 73 1 196 1 
12 4 44 3 87 1 308 4 41 1 157 1 182 2 73 1 63 1 196 2 273 2 288 1 68 1 291 1 
44 1 12 2 137 1 308 2 370 1 182 1 73 1 196 1 285 1 273 1 288 1 84 1 
44 1 12 3 137 1 308 3 41 2 157 1 73 1 63 2 196 1 273 1 286 1 288 1 
44 2 103 1 290 2 142 1 
12 1 137 1 308 1 288 1 73 1 205 1 
44 1 12 2 273 1 137 1 308 2 139 1 288 1 182 1 73 1 196 1 
249 1 
44 1 12 1 273 1 137 1 308 1 288 1 73 1 196 1 
44 1 12 3 273 1 137 1 308 3 139 1 41 1 288 1 182 1 73 1 196 1 
44 1 87 1 68 1 291 1 
44 1 273 1 

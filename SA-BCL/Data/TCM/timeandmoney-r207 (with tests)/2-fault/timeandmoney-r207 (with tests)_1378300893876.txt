#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 100 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | STATEMENT | 497 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
188 1 324 9 17 5 189 2 62 2 23 1 118 1 193 2 164 2 140 2 69 4 203 1 6 6 123 1 122 1 147 2 286 1 152 9 341 1 369 1 371 1 180 2 342 1 56 1 130 1 251 1 88 1 112 3 
188 1 324 9 17 5 189 2 62 2 23 1 193 2 118 1 164 2 140 2 69 4 203 1 6 6 123 1 122 1 147 2 286 1 152 9 341 1 369 1 371 1 180 2 342 1 56 1 130 1 251 1 88 1 112 3 
188 1 324 10 17 6 189 2 62 2 23 1 193 2 118 1 164 2 140 2 69 5 203 1 6 7 123 1 122 1 147 2 286 1 152 10 341 1 369 1 371 1 180 2 342 1 56 1 130 1 251 1 88 1 112 4 
188 1 324 7 17 4 189 2 62 2 23 1 193 2 118 1 164 2 140 2 69 3 203 1 6 4 123 1 147 1 286 1 152 7 341 1 369 1 371 1 180 2 342 1 56 1 130 1 251 1 88 1 112 2 
324 4 17 3 189 1 62 1 152 4 23 1 193 1 164 1 69 2 180 1 56 1 112 1 88 1 6 3 123 1 122 1 147 2 286 1 
17 1 324 2 189 1 62 1 152 2 80 1 162 1 118 1 164 1 140 1 180 1 342 1 56 1 174 1 88 1 123 1 
17 2 324 3 189 2 152 3 371 1 69 1 140 1 6 1 112 1 180 2 88 1 123 1 56 1 
324 9 17 5 189 2 62 1 23 1 193 1 164 1 69 4 140 1 203 1 6 7 123 1 147 2 122 1 286 1 152 9 30 1 369 1 371 1 180 2 296 1 56 1 112 3 88 1 
324 9 17 5 189 2 62 1 23 1 193 1 164 1 69 4 140 1 203 1 6 7 123 1 147 2 122 1 286 1 152 9 30 1 369 1 371 1 180 2 296 1 56 1 112 3 88 1 
201 1 40 1 248 1 
151 2 40 1 37 1 
149 1 12 2 116 2 186 2 54 2 59 1 270 2 357 2 
20 1 116 2 165 1 356 2 195 1 328 2 357 2 242 2 27 1 337 1 98 1 175 1 5 1 284 1 362 1 149 1 290 1 266 2 366 1 125 1 208 2 54 2 179 1 270 3 181 1 11 1 85 1 209 1 12 2 231 1 275 1 319 1 186 3 15 1 59 1 302 1 60 1 
149 1 254 1 12 1 116 1 211 1 186 1 54 1 270 1 357 1 182 1 
61 1 352 1 40 1 292 1 373 1 25 1 270 1 331 1 357 1 201 1 97 1 211 1 186 1 76 1 
61 1 40 1 292 2 116 1 54 1 373 1 25 2 270 1 357 1 201 1 12 1 97 1 211 1 186 1 76 1 
305 1 264 1 292 1 309 1 25 1 
305 1 201 1 264 1 40 1 292 2 372 1 312 1 25 2 
305 1 292 1 25 1 
149 1 254 1 264 1 292 1 116 1 54 1 25 1 270 1 313 1 182 1 357 1 12 1 211 1 186 1 
40 1 
305 1 201 1 264 1 40 1 292 2 312 1 25 2 222 1 
305 2 264 2 114 1 40 1 292 5 81 2 340 2 65 1 312 1 25 5 218 1 196 2 226 1 375 1 334 1 274 1 201 1 144 1 87 1 
59 1 248 1 
41 1 116 1 192 1 54 1 270 2 357 2 12 1 186 2 59 2 
170 1 253 1 148 1 
266 1 366 1 125 1 208 1 356 1 104 1 270 1 85 1 231 1 275 1 337 1 98 1 186 1 175 1 59 1 284 1 
366 1 266 1 125 1 116 1 208 1 82 1 54 1 356 1 270 2 357 1 85 1 231 1 275 1 337 1 98 1 175 1 186 2 284 1 148 1 363 1 
277 1 116 4 192 1 82 2 54 4 270 5 331 1 357 5 12 1 186 5 237 1 59 1 363 1 77 1 
254 1 36 1 116 2 211 1 186 2 54 2 270 2 357 2 
12 1 116 3 82 1 186 3 54 3 59 1 270 3 357 3 
254 1 116 1 211 1 186 1 54 1 270 1 357 1 
41 1 12 1 116 1 192 1 211 1 186 1 54 1 270 1 357 1 
61 1 20 1 116 3 192 1 165 1 356 1 43 1 328 2 25 1 357 3 242 1 337 1 97 1 98 1 175 1 5 1 284 1 362 1 363 1 76 1 149 1 290 1 366 1 266 1 125 1 292 1 208 1 82 1 31 1 54 3 179 1 373 1 270 4 181 1 85 1 12 2 231 1 275 1 319 1 211 1 186 4 15 1 59 1 302 1 
277 1 116 1 82 1 186 2 54 1 59 1 270 2 331 1 357 2 
61 1 40 1 292 1 116 3 192 1 82 2 54 3 31 1 25 1 373 1 270 3 357 3 12 1 97 1 211 1 320 1 186 3 363 1 76 1 
116 2 192 1 82 1 54 2 270 2 357 2 12 1 186 2 253 1 148 1 
266 1 366 1 125 1 208 1 356 1 270 1 85 1 275 1 231 1 337 1 98 1 186 1 175 1 59 1 284 1 
266 1 366 1 208 1 356 1 270 1 85 1 336 1 275 1 231 1 337 1 173 1 186 1 175 1 59 1 284 1 
351 1 19 1 20 1 191 1 165 1 194 1 195 2 328 2 242 4 170 2 95 1 362 1 148 2 150 1 52 1 263 1 290 1 181 2 127 1 319 1 322 1 302 1 253 2 348 1 
36 1 116 1 211 1 186 1 54 1 76 1 270 1 357 1 
360 1 24 1 
360 1 24 1 
136 1 325 1 
136 1 325 1 
136 1 325 1 
240 1 360 1 24 1 
240 1 360 1 24 1 
10 1 360 1 24 1 
136 1 325 1 360 2 24 2 83 1 301 1 
240 1 360 1 24 1 
360 1 24 1 176 1 
360 1 24 1 176 1 
360 1 24 1 176 1 
51 1 18 1 10 1 291 1 292 1 206 1 116 2 138 1 24 1 54 2 294 1 256 1 257 1 25 1 270 2 94 1 34 1 357 2 71 1 108 1 204 1 360 1 186 2 59 1 
223 1 40 1 9 1 206 2 292 2 24 2 281 1 256 1 257 2 25 2 94 2 142 2 108 2 233 1 204 3 360 2 283 1 301 1 29 1 
62 1 193 1 164 1 
62 1 162 1 164 1 
156 1 177 1 162 1 193 2 164 3 297 1 
177 1 162 1 193 1 164 2 45 1 297 1 
177 1 162 1 193 1 164 2 297 2 
305 1 18 1 351 1 40 2 138 1 196 1 25 5 197 2 258 1 201 1 71 1 143 1 144 3 287 1 150 1 151 3 264 4 368 2 81 1 292 5 101 1 340 1 312 1 126 2 105 1 375 2 273 1 274 1 58 1 322 1 37 1 348 1 
305 6 351 3 40 5 218 1 25 9 196 2 199 1 201 1 169 1 71 4 143 2 309 5 144 8 287 1 150 3 151 9 264 7 368 6 292 9 81 2 101 2 340 2 178 1 312 1 126 6 375 6 273 3 274 1 129 1 86 1 235 5 322 3 37 3 89 1 348 3 
351 1 40 3 196 1 25 3 218 1 197 1 201 1 71 1 143 1 144 3 150 1 151 4 264 2 81 1 292 3 101 1 368 2 340 1 105 1 126 2 375 2 273 1 58 1 322 1 37 2 348 1 
351 2 40 4 196 1 25 4 218 1 197 2 199 1 201 1 169 1 71 2 143 1 144 5 150 2 151 7 264 3 368 4 81 1 292 4 101 1 340 1 178 1 126 4 105 1 375 4 273 2 58 1 322 2 37 3 348 2 
231 1 111 1 248 1 
231 1 132 1 
212 1 
85 1 231 1 175 1 
231 1 96 1 
85 1 231 1 
85 1 249 1 63 1 231 3 175 1 111 2 
79 1 150 1 263 2 39 1 255 1 102 2 247 1 195 4 181 3 242 7 127 3 183 1 184 1 250 1 259 1 109 1 348 1 
79 1 150 1 263 2 39 1 255 1 102 2 247 1 195 4 181 3 242 7 127 3 183 1 184 1 250 1 259 1 109 1 348 1 
79 1 150 1 263 2 39 1 255 1 102 2 247 1 195 4 181 3 242 7 127 3 183 1 184 1 250 1 259 1 109 1 146 1 348 1 
304 1 278 1 135 1 351 3 20 1 39 2 255 1 165 1 328 2 195 16 333 1 242 31 73 1 260 3 259 2 362 1 311 1 79 5 150 4 263 5 8 1 102 3 247 2 181 15 273 3 127 10 183 1 250 1 184 2 109 1 322 3 302 1 348 4 90 4 
20 2 39 1 165 2 255 1 328 4 195 5 242 9 259 1 362 2 79 1 150 1 263 3 365 1 8 1 102 2 247 1 181 4 127 4 183 1 250 1 184 1 252 1 302 2 348 1 
17 1 324 2 189 1 62 1 162 1 193 1 139 1 119 1 164 2 356 1 140 1 330 1 308 1 243 1 6 1 284 1 123 1 152 2 266 1 366 1 208 1 180 1 295 1 56 1 315 1 156 1 88 1 187 1 161 1 323 1 
17 1 324 3 189 1 62 1 113 1 162 1 22 1 193 1 139 1 119 1 164 2 356 1 140 1 330 1 26 1 6 2 284 1 123 1 152 3 266 1 366 1 208 1 180 1 295 1 56 1 315 1 156 1 187 1 161 1 323 1 
17 1 324 2 62 1 162 1 22 1 139 1 193 1 164 2 140 1 356 1 330 1 26 1 6 2 284 1 123 1 152 2 266 1 366 1 208 1 295 1 56 1 156 1 187 1 161 1 323 1 
324 1 189 1 113 1 354 1 152 1 137 1 366 1 266 1 208 1 139 2 140 2 356 1 180 1 295 2 85 1 231 1 172 1 275 1 14 1 321 1 284 1 187 2 124 1 
324 1 189 1 62 1 162 1 22 1 193 1 139 1 119 1 164 2 356 1 140 1 330 1 243 1 284 1 152 1 266 1 366 1 208 1 180 1 295 1 315 1 156 1 88 1 187 1 161 1 323 1 
267 1 
133 2 40 1 2 1 196 1 92 1 46 2 143 1 144 2 99 2 284 1 151 2 292 4 207 2 340 1 208 2 14 1 305 6 354 1 215 2 355 2 356 2 120 1 25 4 121 2 261 1 266 2 366 1 81 1 268 1 312 3 271 1 375 2 314 1 274 1 85 1 316 2 35 1 275 2 231 1 236 1 276 1 37 2 
305 2 133 1 35 1 292 2 261 1 312 1 25 2 271 1 222 1 
35 1 292 1 261 1 99 1 25 1 46 1 271 1 
133 1 305 2 292 2 312 1 25 2 271 1 46 1 316 1 35 1 261 1 99 1 222 1 
133 4 91 1 40 2 327 1 196 1 46 3 200 1 201 2 144 1 99 3 149 1 292 4 207 2 340 1 54 1 12 1 211 1 305 7 254 1 353 1 215 2 116 1 355 2 25 4 357 1 121 2 171 1 261 1 222 1 81 1 312 3 271 1 270 1 375 1 314 1 313 1 182 1 274 1 316 4 35 1 186 1 276 1 37 2 
133 2 305 4 40 2 215 2 355 2 2 1 196 1 25 3 46 2 201 1 121 2 144 1 261 1 99 2 151 2 81 1 292 3 207 2 340 1 312 2 271 1 314 1 375 1 274 1 316 2 35 1 276 1 37 2 
133 2 305 4 91 1 40 1 215 2 355 2 327 1 196 1 25 3 46 2 201 1 200 1 121 2 261 1 144 1 99 2 207 2 81 1 292 3 340 1 312 2 271 1 314 1 375 1 274 1 316 2 35 1 276 1 37 2 
133 2 305 4 91 1 40 1 215 2 355 2 327 1 196 1 25 3 46 2 201 1 200 1 121 2 261 1 144 1 99 2 207 2 81 1 292 3 340 1 312 2 271 1 314 1 375 1 274 1 316 2 35 1 276 1 37 2 
133 2 305 4 239 1 91 1 40 1 215 2 196 1 25 3 46 2 201 1 121 2 261 1 144 1 99 2 151 2 81 1 292 3 340 1 153 2 312 2 271 1 374 1 375 1 274 1 316 2 128 1 35 1 300 2 276 1 
305 5 133 3 353 1 91 1 40 1 215 2 355 2 327 1 25 3 196 1 46 3 201 1 200 1 121 2 261 1 144 1 99 3 207 2 292 3 81 1 340 1 312 2 271 1 314 1 375 1 274 1 316 3 35 1 37 2 276 1 
305 5 133 3 353 1 91 1 40 1 215 2 355 2 327 1 25 3 196 1 46 3 201 1 200 1 121 2 261 1 144 1 99 3 207 2 292 3 81 1 340 1 312 2 271 1 314 1 375 1 274 1 316 3 35 1 37 2 276 1 
133 2 305 4 40 1 215 2 2 1 196 1 25 3 46 2 201 1 121 2 261 1 144 1 99 2 151 2 81 1 292 3 340 1 153 2 312 2 271 1 375 1 374 1 274 1 316 2 35 1 300 2 276 1 
20 1 191 1 255 1 165 1 328 2 195 3 242 6 170 1 148 1 362 1 150 1 263 2 290 1 102 1 247 1 248 1 181 3 127 2 183 1 250 1 184 1 319 1 302 1 59 2 253 1 348 1 
135 1 351 2 20 2 279 1 165 2 328 4 195 8 242 14 170 11 361 1 260 3 362 2 148 11 311 1 79 1 150 2 263 1 290 2 179 1 181 6 11 1 273 2 127 2 229 1 159 1 131 1 319 1 322 1 59 1 302 2 253 4 348 1 90 3 
20 1 116 1 216 1 165 1 356 1 328 2 195 1 357 1 242 2 337 1 361 1 98 1 175 1 284 1 362 1 363 1 339 1 366 1 266 1 290 1 125 1 208 1 82 1 54 1 104 1 179 1 270 2 181 1 11 1 85 1 231 1 275 1 319 1 186 2 59 1 302 1 238 1 253 1 
328 6 195 10 242 20 337 2 98 2 284 2 148 7 289 1 150 3 290 3 208 3 102 1 54 1 247 1 11 1 250 1 16 1 15 2 59 2 302 3 253 7 348 3 351 2 20 3 22 1 116 1 255 1 165 3 68 1 356 3 357 1 358 2 170 7 361 1 175 2 363 1 362 3 79 4 263 4 266 3 366 2 125 2 82 1 179 1 270 3 272 2 181 10 376 2 273 2 85 2 127 8 183 1 275 1 231 2 184 1 319 3 186 3 322 2 378 2 
354 1 20 2 22 1 116 1 191 1 165 2 356 8 328 4 195 1 141 1 357 1 198 1 242 2 308 1 48 1 284 2 50 1 362 2 205 1 246 1 366 2 266 8 290 2 208 7 82 1 54 1 179 1 270 1 181 1 11 1 209 2 85 2 231 3 275 2 319 2 14 1 186 1 213 1 302 2 
350 1 351 1 20 1 116 1 192 1 165 1 328 2 195 1 357 1 242 3 170 1 361 1 148 1 362 1 150 1 263 1 290 1 54 1 270 1 181 2 273 1 127 1 12 1 319 1 186 1 322 1 302 1 253 1 348 1 
79 1 150 1 351 1 20 1 290 1 191 1 165 1 328 2 195 2 242 2 127 1 170 1 95 1 319 1 302 1 253 1 148 1 362 1 
263 1 20 1 19 1 290 1 191 1 165 1 328 2 181 2 242 2 127 1 170 1 319 1 322 1 302 1 253 1 148 1 362 1 348 1 
351 1 20 1 191 1 165 1 195 2 328 2 242 4 170 2 362 1 148 2 79 1 150 1 263 1 290 1 181 2 273 1 127 2 319 1 322 1 302 1 253 2 348 1 
79 1 150 1 351 1 20 1 290 1 165 1 328 2 195 2 141 1 242 2 127 1 170 1 95 1 319 1 302 1 253 1 148 1 362 1 
263 1 20 1 19 1 290 1 165 1 328 2 141 1 181 2 242 2 127 1 170 1 319 1 322 1 302 1 253 1 148 1 362 1 348 1 
351 1 20 1 165 1 195 2 328 2 141 1 242 4 170 2 362 1 148 2 79 1 150 1 263 1 290 1 181 2 273 1 127 2 319 1 322 1 302 1 253 2 348 1 
351 1 20 1 165 1 195 2 328 2 242 4 170 2 362 1 148 2 79 1 150 1 263 1 290 1 181 2 273 1 127 2 319 1 322 1 302 1 253 2 348 1 
20 1 165 1 356 1 195 1 328 2 242 2 337 1 98 1 175 1 284 1 362 1 366 1 266 1 290 1 125 1 208 1 179 1 270 1 181 1 11 1 85 1 275 1 231 1 319 1 186 1 15 1 59 1 302 1 
20 1 165 1 356 1 195 1 328 2 242 2 336 1 337 1 173 1 175 1 284 1 362 1 245 1 366 1 266 1 290 1 208 1 179 1 270 1 181 1 11 1 85 1 275 1 231 1 319 1 186 1 59 1 302 1 
351 1 20 1 165 1 195 2 328 2 242 4 170 2 361 1 362 1 148 2 79 1 150 1 263 1 290 1 181 2 273 1 127 2 319 1 322 1 302 1 253 2 348 1 
351 1 20 1 165 1 356 1 195 2 328 2 242 4 170 2 308 1 337 1 98 1 175 1 284 1 148 2 362 1 79 1 150 1 263 1 366 1 266 1 290 1 125 1 208 1 270 1 272 1 181 2 273 1 127 2 85 1 231 1 319 1 186 1 322 1 15 1 302 1 253 2 348 1 
351 1 20 1 116 1 192 1 165 1 328 2 195 2 357 1 242 3 170 1 361 1 362 1 148 1 79 1 150 1 290 1 54 1 270 1 181 1 273 1 127 1 230 1 12 1 319 1 186 1 322 1 302 1 253 1 348 1 
135 1 351 3 20 2 163 1 165 2 328 4 195 9 307 1 242 19 202 2 47 2 220 1 260 1 362 2 311 1 79 3 150 3 263 3 365 1 32 1 84 1 181 10 273 3 127 6 298 1 322 3 302 2 348 3 90 2 379 1 
135 2 351 3 20 3 163 1 326 1 165 3 328 6 195 14 242 26 202 4 47 1 220 1 260 2 310 1 362 3 79 2 150 3 263 2 365 1 8 2 265 1 155 1 84 2 181 12 273 3 127 4 158 1 298 1 344 1 322 2 302 3 348 2 379 2 90 2 
135 3 326 1 195 20 328 6 242 41 202 4 47 1 150 5 8 1 102 1 155 1 247 1 298 1 158 1 250 1 344 1 302 3 348 5 351 4 20 3 165 3 255 1 163 1 307 1 260 3 220 1 310 1 221 1 362 3 311 1 79 4 263 4 365 1 265 1 84 2 181 21 273 4 127 8 183 1 184 1 322 4 379 1 90 4 
135 3 351 4 20 4 163 1 255 1 326 1 165 4 328 8 195 20 307 1 242 38 202 4 47 1 220 1 260 3 221 1 310 1 362 4 311 1 79 3 150 5 263 4 365 1 8 2 265 1 102 1 155 1 247 1 84 2 181 18 273 4 127 7 158 1 298 1 183 1 184 1 250 1 344 1 322 3 302 4 348 4 90 4 379 1 
135 2 351 7 20 2 163 1 255 1 326 1 165 2 328 4 195 27 242 52 202 4 47 1 220 1 260 4 310 1 362 2 311 2 79 7 150 8 263 7 365 1 8 1 265 1 102 1 155 1 247 1 84 1 181 25 273 7 127 14 158 1 298 1 183 1 184 1 250 1 344 1 131 2 322 7 302 2 348 8 90 4 379 1 
223 1 108 1 206 1 360 1 24 1 4 1 301 1 257 1 94 1 29 1 
10 1 34 1 
168 1 108 1 219 1 13 1 206 1 360 1 24 1 257 1 94 1 
240 1 318 1 
83 1 176 1 53 1 
223 1 40 1 9 1 292 1 206 1 24 1 256 1 257 1 25 1 94 1 142 1 108 1 233 1 204 2 360 1 283 1 301 1 29 1 
223 1 40 1 9 1 292 1 206 1 24 1 256 1 257 1 25 1 94 1 142 1 108 1 233 1 204 2 360 1 283 1 301 1 29 1 
223 1 40 1 9 1 292 1 206 1 24 1 256 1 257 1 25 1 94 1 142 1 108 1 233 1 204 2 360 1 283 1 301 1 29 1 
240 1 318 1 83 1 
240 1 318 1 83 1 
176 1 53 1 
83 1 176 1 53 1 
51 1 294 1 
18 1 116 2 138 1 24 1 257 1 25 1 94 1 357 2 142 1 71 1 204 1 360 1 51 1 264 1 9 1 291 1 10 1 292 1 206 1 154 1 54 2 294 1 270 2 34 1 108 1 186 2 59 1 
190 1 20 1 165 1 356 2 328 2 195 1 357 2 332 1 242 2 361 1 284 1 48 1 362 1 288 1 205 1 366 1 266 2 290 1 208 2 179 1 227 1 270 2 181 1 11 1 85 1 377 1 209 2 231 1 319 1 186 2 302 1 
62 1 162 1 366 1 266 2 22 1 21 1 193 1 208 2 164 2 356 2 217 1 295 1 330 1 315 1 156 1 308 1 284 1 285 1 323 1 
7 1 62 1 162 1 266 1 366 1 22 1 21 1 193 1 208 1 164 2 356 1 295 1 330 1 315 1 156 1 284 1 323 1 
354 1 366 1 266 1 208 1 356 1 295 1 85 1 231 1 275 1 14 1 338 1 284 1 285 1 124 1 
62 1 162 1 266 1 366 1 22 1 21 1 193 1 208 1 164 2 356 1 217 1 295 1 330 1 315 1 156 1 284 1 285 1 323 1 
262 1 
334 1 201 1 40 1 144 1 226 1 248 1 375 1 
305 1 40 2 355 1 196 1 25 1 201 1 144 1 151 1 81 1 207 1 292 1 340 1 312 1 375 1 314 1 274 1 37 1 
40 8 1 2 196 4 334 1 201 2 143 2 97 2 96 2 144 9 244 2 284 4 150 2 151 12 292 5 340 4 208 3 157 1 106 1 249 1 346 2 111 2 348 2 349 2 305 5 351 2 115 2 67 2 356 3 25 5 166 2 167 1 358 2 308 1 175 3 74 1 366 3 266 3 81 4 368 6 224 2 268 1 312 3 226 1 126 6 375 8 273 2 274 4 85 3 231 10 275 1 232 1 322 2 132 3 37 6 
305 1 135 1 351 2 40 5 25 1 196 2 166 1 201 2 143 1 260 1 75 1 144 8 310 1 150 2 151 6 265 1 292 1 368 5 81 2 340 2 268 1 155 1 312 1 126 5 375 5 273 2 274 2 158 1 344 1 346 2 322 2 160 1 37 3 348 2 90 1 
254 1 116 1 196 1 25 1 166 1 357 1 200 1 144 2 149 1 150 2 81 1 292 1 340 1 293 1 54 1 247 1 270 1 375 2 313 1 182 1 274 1 12 1 183 1 184 1 211 1 186 1 346 2 348 1 
40 1 81 1 340 1 196 1 226 1 375 1 334 1 274 1 201 1 144 1 
150 2 351 2 151 10 40 5 368 5 126 5 166 1 375 5 273 2 358 1 144 5 346 2 322 2 37 5 348 2 
305 1 201 1 40 1 292 1 312 1 25 1 
305 4 354 1 42 1 356 4 218 1 196 2 25 3 92 1 143 2 74 1 144 2 284 1 366 1 266 4 81 2 292 3 340 2 208 4 268 2 312 2 375 2 274 1 157 2 85 1 231 1 275 2 14 1 236 1 303 1 
20 1 116 2 165 1 356 1 328 2 357 2 242 1 337 1 98 1 175 1 5 1 284 1 362 1 149 1 266 1 366 1 290 1 125 1 208 1 54 2 179 1 270 3 181 1 85 1 12 2 275 1 231 1 319 1 186 3 15 1 59 1 302 1 
151 4 40 4 368 2 81 1 340 1 268 1 102 1 196 1 126 2 375 2 274 1 201 2 143 1 144 1 37 2 
108 1 145 1 257 1 
108 1 145 1 257 1 
51 1 57 1 108 1 257 1 29 1 
108 1 145 1 257 1 
108 1 345 1 257 1 
108 1 345 1 257 1 
108 1 345 1 257 1 
108 1 257 1 
360 1 24 1 
79 1 150 1 263 2 20 2 8 1 165 2 255 1 102 1 195 4 328 4 247 1 181 4 242 8 127 3 183 1 250 1 184 1 302 2 362 2 348 1 
242 6 150 1 127 2 263 2 183 1 184 1 250 1 255 1 102 1 195 3 247 1 248 1 348 1 181 3 
79 1 150 1 263 1 351 1 20 1 306 1 165 1 328 2 195 2 181 2 273 1 242 4 127 2 322 1 302 1 362 1 348 1 
79 1 150 1 263 1 135 1 351 1 195 3 181 4 273 1 242 7 127 2 260 1 322 1 348 1 90 2 311 1 
351 2 20 2 255 1 165 2 195 11 328 4 242 23 260 2 362 2 311 1 79 4 150 3 263 5 8 2 102 1 247 2 181 12 273 2 127 9 229 1 183 1 184 2 250 1 131 1 322 2 110 1 302 2 348 3 90 2 
242 1 181 1 90 1 
242 1 260 1 195 1 
79 1 150 1 351 1 263 2 20 1 306 1 165 1 328 2 195 3 181 3 273 1 358 1 242 6 127 3 322 1 302 1 362 1 348 1 
135 1 351 2 20 1 165 1 328 2 195 6 242 12 260 1 310 1 362 1 79 1 150 2 263 1 365 1 265 1 155 1 181 6 273 2 127 2 158 1 344 1 322 2 302 1 348 2 90 1 
79 1 150 1 263 1 195 3 247 1 181 3 242 6 127 2 183 1 184 1 348 1 
79 1 263 1 20 1 8 1 255 1 165 1 195 1 247 1 328 2 181 2 242 3 127 2 184 1 250 1 110 1 302 1 362 1 
79 2 150 2 263 3 20 1 365 1 165 1 293 1 328 2 247 2 195 5 181 5 242 10 127 5 183 1 184 2 302 1 362 1 348 2 
79 1 150 1 351 1 365 1 20 1 165 1 328 2 195 2 242 2 127 1 302 1 362 1 
79 1 150 1 263 1 351 1 365 1 20 1 165 1 328 2 195 2 181 2 273 1 242 4 127 2 322 1 302 1 362 1 348 1 
79 1 263 1 365 1 20 3 8 1 165 3 328 6 247 1 195 1 181 2 307 1 242 3 127 2 184 1 110 1 302 3 362 3 
304 1 278 1 135 1 351 3 20 5 306 1 255 1 165 5 328 10 195 16 333 1 307 1 242 34 260 3 362 5 311 1 79 5 150 5 263 7 365 1 8 2 102 1 247 3 181 18 273 3 127 12 183 2 184 3 250 1 110 1 322 3 302 5 348 5 90 4 
135 1 20 1 165 1 255 1 328 2 195 4 242 8 260 1 362 1 150 1 263 2 365 1 102 1 155 1 247 1 181 4 127 2 183 1 250 1 184 1 302 1 348 1 90 1 
135 1 351 1 20 2 306 1 255 1 165 2 328 4 195 6 242 11 260 1 362 2 311 1 79 1 150 2 263 2 365 1 102 1 155 1 247 1 181 5 273 1 127 3 183 1 184 1 250 1 302 2 348 1 90 2 
135 1 351 2 20 3 306 1 255 1 165 3 328 6 195 9 242 19 260 1 310 1 362 3 79 1 150 3 263 3 365 1 265 1 8 1 102 1 155 1 247 1 181 10 273 2 127 4 158 1 183 1 184 1 250 1 344 1 322 2 302 3 348 3 90 1 
135 1 351 2 20 3 306 1 255 1 165 3 328 6 195 10 242 17 260 1 310 1 362 3 79 2 150 3 263 3 365 1 8 1 265 1 102 1 155 1 247 1 181 7 273 2 127 5 158 1 183 1 184 1 250 1 344 1 322 1 302 3 348 2 90 1 
135 1 20 1 165 1 255 1 328 2 195 4 242 8 260 1 362 1 150 1 263 2 365 1 102 1 155 1 247 1 181 4 127 2 183 1 250 1 184 1 302 1 348 1 90 1 
135 1 351 2 20 1 165 1 328 2 195 6 242 12 260 1 310 1 362 1 79 1 150 2 263 1 365 1 265 1 155 1 181 6 273 2 127 2 158 1 344 1 322 2 302 1 348 2 90 1 
135 1 351 2 20 4 306 1 255 1 165 4 328 8 195 10 242 18 260 1 310 1 362 4 79 2 150 3 263 3 365 1 265 1 8 2 102 1 155 1 247 1 181 8 273 2 127 5 158 1 183 1 184 1 250 1 344 1 322 1 302 4 348 2 90 1 
135 1 351 3 20 4 165 4 328 8 195 9 242 16 307 1 260 1 310 1 362 4 79 3 150 3 263 3 365 1 265 1 8 2 155 1 181 7 273 3 127 6 158 1 344 1 322 2 302 4 348 2 90 1 
79 3 150 1 263 3 255 2 247 3 195 3 181 4 242 7 127 6 183 1 250 1 184 3 348 1 
135 1 351 2 20 4 255 1 165 4 328 8 195 10 242 18 307 1 260 1 310 1 362 4 79 1 150 3 263 3 365 1 265 1 8 2 102 1 155 1 247 1 181 8 273 2 127 4 158 1 183 1 184 1 250 1 344 1 322 1 302 4 348 2 90 1 
277 1 72 1 186 1 59 1 270 1 331 1 357 1 
277 1 64 1 55 1 225 1 270 1 331 1 357 1 210 1 72 1 186 1 59 1 347 1 
85 1 354 1 366 1 266 1 231 1 275 1 208 1 14 1 356 1 284 1 248 1 
266 1 366 1 116 1 125 1 208 1 82 1 54 1 356 1 270 2 357 1 85 1 231 1 275 1 337 1 175 1 186 2 59 1 284 1 
61 1 116 1 356 1 357 2 337 1 96 1 175 2 284 1 76 1 366 1 266 1 125 1 208 1 82 1 54 2 270 2 157 1 85 2 231 3 211 1 186 2 59 1 349 1 
61 1 116 1 356 2 357 2 336 1 337 1 96 1 175 2 284 1 49 1 76 1 366 1 266 2 208 2 82 1 54 2 270 2 157 1 85 2 231 3 211 1 186 2 59 1 349 1 
305 1 40 1 356 3 25 2 93 1 201 1 96 1 97 1 175 1 284 1 49 1 366 1 266 3 292 2 208 3 228 1 157 1 85 1 231 4 275 1 111 1 132 1 349 1 
305 1 115 1 40 1 266 3 366 1 292 2 208 3 356 3 25 2 85 1 157 1 201 1 275 1 231 4 97 1 96 1 175 1 284 1 111 1 49 1 132 1 349 1 
366 1 266 1 246 1 208 1 356 1 284 1 
246 1 266 7 366 2 22 1 117 1 208 6 356 7 198 1 209 1 343 1 249 1 85 2 28 1 308 1 275 2 231 3 175 1 213 1 48 1 284 3 50 1 
20 2 116 1 255 1 165 2 356 1 195 3 328 4 357 1 242 6 170 1 308 1 337 1 361 1 98 1 175 1 284 1 148 1 362 2 150 1 263 2 366 1 290 2 266 1 125 1 208 1 82 1 102 1 54 1 247 1 227 1 270 2 272 1 181 3 376 1 127 2 85 1 183 1 231 1 184 1 250 1 319 2 186 2 15 1 59 2 302 2 253 1 348 1 
305 2 115 1 40 1 1 1 356 1 196 2 25 3 334 1 201 1 97 1 144 1 74 1 244 1 264 1 266 1 81 2 292 3 208 1 340 2 224 1 312 1 226 1 375 1 274 2 275 1 231 2 111 1 132 1 
246 1 266 2 366 1 208 2 356 2 249 1 85 1 308 1 232 1 231 2 175 1 111 1 284 2 
134 1 354 1 266 4 366 1 208 4 356 4 85 1 275 1 308 1 231 1 14 1 284 1 49 1 
266 2 366 1 117 1 208 2 356 2 157 1 343 1 85 1 231 1 299 1 185 1 175 1 16 1 284 2 
62 1 162 1 366 1 266 1 275 1 208 1 164 1 356 1 284 1 323 1 
266 2 366 1 22 1 208 2 356 2 377 1 85 1 308 1 231 1 48 1 284 1 
134 1 354 1 266 5 366 2 208 4 356 5 198 1 157 1 85 2 275 1 308 1 231 3 14 1 48 1 284 2 50 1 
134 1 354 1 266 5 366 2 208 4 356 5 269 1 198 1 157 1 85 2 275 1 308 1 231 3 14 1 48 1 284 2 
266 1 366 1 116 1 208 1 82 1 54 1 356 1 270 2 357 1 85 1 336 1 231 1 275 1 337 1 175 1 186 2 59 1 284 1 
266 1 366 1 117 1 208 1 356 1 343 1 157 1 249 1 85 1 28 1 231 1 175 1 284 2 
359 1 44 1 3 1 59 1 282 1 
100 1 264 1 292 1 241 1 103 1 3 1 25 1 
190 1 186 1 3 1 44 1 270 1 288 1 357 1 332 1 282 1 
61 1 100 1 241 1 31 1 3 1 44 1 373 1 282 1 359 1 97 1 211 1 76 1 
17 1 123 1 248 1 56 1 
17 1 324 1 189 1 152 1 180 1 123 1 56 1 
152 1 140 1 187 1 
17 1 324 3 189 1 152 3 367 1 180 1 342 2 56 1 107 1 88 1 123 1 78 1 
17 1 324 2 189 1 152 2 6 1 180 1 123 1 147 1 56 1 
17 1 324 1 189 1 62 1 152 1 193 1 164 1 69 1 180 1 88 1 286 1 
17 1 324 1 189 1 152 1 180 1 88 1 56 1 
324 1 189 1 152 1 180 1 88 1 123 1 56 2 
17 1 324 2 189 2 152 2 364 1 180 2 33 1 56 1 335 1 88 1 
17 2 324 3 189 1 203 1 152 3 369 1 69 1 112 1 6 2 180 1 88 1 123 1 56 1 
17 1 324 2 189 1 62 1 152 2 162 1 280 1 193 1 164 2 180 1 56 1 156 1 88 1 6 1 123 1 
324 4 17 2 189 2 152 4 69 1 180 2 56 1 88 1 6 2 112 1 123 1 122 1 147 1 
17 1 324 1 189 1 152 1 180 1 88 1 123 1 56 1 
324 4 17 3 189 1 152 4 367 1 69 1 180 1 342 1 56 2 107 1 6 2 112 1 123 2 214 1 
17 1 324 2 189 1 38 1 152 2 180 1 296 1 56 1 70 1 88 1 6 1 123 1 
17 1 324 3 189 1 0 1 152 3 367 2 180 1 342 2 56 1 107 1 88 1 123 1 
17 2 317 2 370 1 234 1 
324 1 189 1 152 1 329 1 180 1 88 1 
17 1 324 2 189 1 152 2 369 1 6 1 180 1 88 1 123 1 56 1 
66 1 
17 1 324 1 189 1 152 1 180 1 88 1 123 1 56 1 
324 3 17 1 189 1 152 3 369 1 180 1 342 1 56 1 6 1 88 1 123 1 
17 1 69 1 112 1 214 1 
17 1 56 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (117,202) (117,202) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.base.RatioTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (71,312,359) (162,206,278) (162,206,278) (162,206,278) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (71,312,359) (162,206,278) (162,206,278) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (71,312,359) (162,206,278) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (71,312,359) (162,206,278) (162,206,278) (162,206,278) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 84 268 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (71,312,359) (71,312,359) (71,312,359) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (71,312,359) (71,312,359) 
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (71,312,359) (71,312,359) (71,312,359) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 296 
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio; | RETURN | 1382 | return null
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set; | RETURN | 511 | return null
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
3 1 248 2 55 1 340 1 59 1 311 1 346 1 289 2 122 1 183 2 348 1 315 2 102 1 230 3 125 1 317 9 352 1 147 1 65 1 11 9 258 2 191 2 105 5 321 2 130 4 298 1 112 6 242 1 
3 1 248 2 55 1 340 1 59 1 311 1 346 1 289 2 122 1 183 2 348 1 102 1 230 3 315 2 125 1 317 9 352 1 147 1 65 1 258 2 11 9 191 2 105 5 321 2 130 4 298 1 112 6 242 1 
3 1 248 2 55 1 340 1 59 1 311 1 346 1 289 2 122 1 183 2 348 1 102 1 230 4 315 2 125 1 317 10 352 1 147 1 65 1 258 2 11 10 191 2 105 6 321 2 130 5 298 1 112 7 242 1 
3 1 248 2 55 1 340 1 311 1 346 1 289 2 122 1 183 2 348 1 102 1 230 2 315 1 125 1 317 7 352 1 147 1 65 1 258 2 11 7 191 2 105 4 321 2 130 3 298 1 112 4 242 1 
317 4 352 1 65 1 11 4 258 1 3 1 191 1 105 3 321 1 130 2 340 1 59 1 289 1 112 3 183 1 230 1 315 2 242 1 
125 1 317 1 11 1 3 1 191 1 202 1 248 1 14 1 183 1 117 1 
3 1 248 1 339 1 340 1 59 1 289 1 122 1 123 1 183 2 348 1 230 3 315 2 317 9 352 1 147 1 65 1 11 9 258 1 191 2 105 5 321 1 130 4 112 7 242 1 
3 1 248 1 339 1 340 1 59 1 289 1 122 1 123 1 183 2 348 1 230 3 315 2 317 9 352 1 147 1 65 1 11 9 258 1 191 2 105 5 321 1 130 4 112 7 242 1 
317 3 352 1 11 3 3 1 191 2 105 2 248 1 130 1 340 1 122 1 112 1 183 2 230 1 
243 1 244 1 148 1 
323 1 243 1 124 2 
195 1 355 1 110 2 236 2 265 2 64 2 34 2 144 2 
19 1 1 1 53 1 271 1 272 2 4 2 178 1 97 1 203 1 144 2 337 1 223 1 118 2 224 1 207 1 313 2 64 3 34 3 212 2 232 1 353 1 186 1 168 1 261 1 195 1 301 1 355 1 137 1 108 1 109 1 110 2 236 2 265 2 277 1 111 1 73 1 307 1 
46 1 355 1 110 1 236 1 356 1 265 1 292 1 64 1 34 1 144 1 
293 1 20 1 243 1 259 1 13 1 106 1 148 1 46 1 110 1 151 1 34 1 64 1 16 1 15 1 
20 2 243 1 259 1 13 1 106 1 144 1 148 1 46 1 236 1 110 1 151 1 265 1 34 1 64 1 15 2 
20 1 358 1 70 1 15 1 219 1 
273 1 20 2 243 1 90 1 358 1 148 1 15 2 219 1 
20 1 358 1 15 1 
20 1 157 1 144 1 46 1 355 1 356 1 236 1 110 1 265 1 292 1 34 1 64 1 219 1 15 1 
243 1 
273 1 20 2 243 1 358 1 148 1 15 2 219 1 18 1 
280 1 20 5 166 1 243 1 247 1 116 1 148 1 273 1 161 2 205 1 136 2 62 1 74 1 196 1 238 2 358 2 219 2 15 5 220 1 
39 1 19 1 232 1 257 1 186 1 272 1 4 1 144 1 337 1 224 1 301 1 108 1 207 1 236 1 110 1 111 1 253 1 34 2 64 2 212 1 
195 1 244 1 
176 1 159 1 144 1 195 2 110 2 236 1 265 1 34 2 64 2 
39 1 38 1 234 1 
19 1 232 1 186 1 272 1 4 1 337 1 195 1 224 1 301 1 207 1 108 1 347 1 111 1 64 1 34 1 212 1 
195 1 257 1 110 3 236 3 265 1 64 3 34 3 144 3 
46 1 110 1 236 1 292 1 64 1 34 1 144 1 
46 1 176 1 110 1 236 1 265 1 159 1 64 1 34 1 144 1 
19 1 1 1 20 1 271 1 272 1 4 1 178 1 97 1 159 1 203 1 144 3 337 1 223 1 118 1 224 1 207 1 313 2 253 1 64 4 34 4 212 1 232 1 257 1 186 1 259 1 168 1 170 1 86 1 13 1 106 1 195 1 46 1 301 1 355 1 108 1 109 1 110 3 236 3 151 1 265 2 111 1 73 1 15 1 307 1 
195 1 293 1 257 1 110 2 236 1 246 1 64 2 34 2 144 1 
20 1 257 2 141 1 243 1 259 1 170 1 13 1 159 1 106 1 144 3 46 1 236 3 110 3 151 1 265 1 253 1 34 3 64 3 15 1 
39 1 234 1 257 1 110 2 236 2 265 1 159 1 64 2 34 2 144 2 
232 1 19 1 186 1 272 1 4 1 337 1 195 1 224 1 301 1 207 1 108 1 111 1 64 1 34 1 212 1 
232 1 19 1 272 1 190 1 4 1 195 1 224 1 301 1 207 1 108 1 111 1 328 1 64 1 34 1 212 1 
39 2 38 2 40 1 231 1 1 1 294 1 199 1 168 1 271 1 261 2 295 1 87 1 223 1 118 4 234 2 135 1 225 1 48 1 109 2 304 1 313 2 73 1 182 1 307 1 
46 1 259 1 110 1 236 1 64 1 34 1 144 1 36 1 
293 1 257 2 246 1 159 1 144 4 28 1 195 1 30 1 236 4 110 5 265 1 253 1 34 5 64 5 
46 1 110 2 236 2 292 1 64 2 34 2 36 1 144 2 
266 1 297 1 
266 1 297 1 
318 1 72 1 
318 1 72 1 
318 1 72 1 
266 1 263 1 297 1 
266 1 263 1 297 1 
179 1 266 1 297 1 
51 1 351 1 318 1 72 1 266 2 297 2 
266 1 263 1 297 1 
332 1 266 1 297 1 
332 1 266 1 297 1 
332 1 266 1 297 1 
351 1 20 2 243 1 334 2 336 1 215 1 129 2 297 2 286 1 275 1 250 2 251 1 9 2 266 2 83 1 155 2 329 3 255 1 15 2 
75 1 20 1 334 1 52 1 144 2 179 1 250 1 288 1 9 1 226 1 82 1 34 2 64 2 255 1 192 1 297 1 195 1 88 1 236 2 110 2 266 1 329 1 155 1 15 1 
258 1 289 1 321 1 
14 1 
14 1 
14 1 
14 1 
75 1 20 5 52 1 243 2 199 1 245 1 98 2 161 1 273 1 58 1 225 1 31 2 146 2 208 1 226 1 182 1 124 3 166 3 42 1 233 1 69 1 262 1 148 1 323 1 135 1 136 1 238 1 196 1 358 1 15 5 219 4 220 2 
333 1 20 9 283 1 77 1 243 5 199 3 245 2 98 6 273 1 161 2 205 1 225 3 31 6 208 2 226 4 182 3 124 9 166 8 167 5 42 3 262 1 70 5 148 1 323 3 150 1 135 3 136 2 237 1 89 1 358 6 196 1 238 2 15 9 219 7 220 6 
20 3 243 3 199 1 245 1 98 2 161 1 58 1 205 1 225 1 31 2 146 1 208 1 226 1 182 1 124 4 166 3 42 1 233 1 148 1 323 2 135 1 136 1 238 1 219 2 15 3 220 2 
333 1 20 4 283 1 243 4 199 2 245 1 98 4 161 1 205 1 58 1 225 2 31 4 146 2 208 1 226 2 182 2 124 7 166 5 42 2 233 1 148 1 323 3 135 2 136 1 237 1 238 1 15 4 219 3 220 4 
19 1 244 1 171 1 
19 1 187 1 
21 1 
224 1 19 1 
224 1 287 1 19 3 108 1 171 2 360 1 
224 1 19 1 108 1 
19 1 235 1 
201 1 261 4 295 2 87 3 299 1 118 7 135 1 225 1 109 3 163 1 81 1 33 1 227 1 306 1 63 1 330 2 316 1 
201 1 261 4 295 2 87 3 299 1 118 7 135 1 225 1 109 3 163 1 81 1 33 1 227 1 306 1 63 1 330 2 316 1 
198 1 201 1 261 4 295 2 87 3 299 1 118 7 135 1 225 1 109 3 163 1 81 1 33 1 227 1 306 1 63 1 330 2 316 1 
1 1 199 3 201 1 271 1 27 1 223 1 118 31 99 3 225 4 163 2 81 1 313 2 210 1 227 1 33 2 182 3 63 5 349 1 316 2 10 1 66 4 188 1 42 3 85 1 261 16 295 5 87 10 299 2 135 4 109 15 264 1 306 1 330 3 307 1 
1 2 201 1 271 2 45 1 261 5 295 3 87 4 223 2 299 1 118 9 135 1 225 1 109 4 345 1 264 1 163 1 81 1 313 4 33 1 306 1 63 1 330 2 316 1 307 2 
317 1 185 1 11 1 3 1 335 1 191 1 272 1 68 1 4 1 248 1 222 1 71 1 162 1 206 1 207 1 111 1 165 1 278 1 228 1 14 1 183 1 212 1 
103 1 317 2 185 1 11 2 191 1 272 1 68 1 4 1 248 1 222 1 149 1 71 1 162 1 207 1 111 1 165 1 278 1 228 1 14 1 112 1 183 1 212 1 184 1 
103 1 317 1 185 1 11 1 272 1 68 1 4 1 248 1 222 1 71 1 162 1 207 1 111 1 228 1 14 1 112 1 212 1 184 1 
19 1 317 1 232 1 185 2 11 1 191 1 272 1 68 2 4 1 248 2 149 1 224 1 133 1 134 1 309 1 207 1 153 1 111 1 228 2 229 1 183 1 314 1 212 1 
317 1 185 1 11 1 3 1 191 1 272 1 68 1 4 1 248 1 222 1 71 1 162 1 206 1 207 1 111 1 165 1 278 1 228 1 14 1 183 1 212 1 184 1 
92 1 
19 1 20 3 95 1 24 1 272 2 245 1 4 2 285 1 161 1 273 1 224 1 121 1 309 1 207 1 64 1 34 1 212 2 84 1 127 1 293 1 232 2 166 1 259 1 13 1 106 1 46 1 136 1 151 1 110 1 153 1 154 1 111 1 238 1 196 1 358 2 16 1 15 3 17 1 268 1 220 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 3 259 1 24 1 13 1 106 1 285 1 46 1 273 1 151 1 110 1 154 1 358 1 64 1 34 1 15 3 16 1 84 1 18 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 161 1 136 1 151 1 110 1 154 1 196 1 238 1 64 1 34 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 151 1 110 1 154 1 34 1 64 1 15 2 16 1 84 1 268 1 
127 1 293 1 20 2 259 1 24 1 13 1 106 1 285 1 46 1 161 1 136 1 151 1 110 1 154 1 196 1 238 1 64 1 34 1 15 2 16 1 84 1 268 1 
1 1 244 1 201 1 271 1 223 1 118 6 225 1 163 1 81 1 313 2 39 1 40 1 38 1 168 1 261 3 295 2 87 2 299 1 195 2 234 1 135 1 109 3 73 1 306 1 330 1 307 1 
1 2 199 1 271 2 27 1 97 1 223 2 118 14 99 3 225 1 313 4 182 2 63 1 38 11 39 11 66 3 188 1 42 2 168 1 193 1 261 8 295 1 87 2 194 1 195 1 234 4 135 2 137 1 109 6 49 1 138 1 73 2 267 1 307 2 
19 1 1 1 272 1 271 1 4 1 97 1 144 1 337 1 223 1 224 1 118 2 207 1 347 1 313 2 253 1 64 2 34 2 212 1 232 1 41 1 257 1 186 1 43 1 168 1 261 1 322 1 195 1 301 1 234 1 108 1 137 1 49 1 110 1 236 1 109 1 111 1 73 1 307 1 
1 3 272 3 271 3 4 3 178 2 5 2 97 1 144 1 223 3 224 2 225 3 313 6 182 2 63 4 64 3 184 1 232 1 186 2 195 2 234 7 327 1 108 2 109 10 236 1 110 1 111 2 73 3 330 1 19 2 199 2 201 1 25 2 337 2 338 2 249 1 118 20 207 2 80 2 163 1 81 1 253 1 34 3 212 3 38 7 39 7 257 1 42 2 168 3 261 10 295 4 87 8 299 1 301 2 135 3 137 1 49 1 306 1 139 1 307 3 
281 1 19 3 1 2 94 1 335 1 272 8 271 2 4 7 97 1 144 1 223 2 118 2 224 2 341 1 309 1 207 2 313 4 291 1 64 1 34 1 212 8 184 1 40 1 126 1 232 2 257 1 353 2 168 2 261 1 324 1 137 1 110 1 236 1 109 1 153 1 111 2 73 2 305 1 307 2 
93 1 1 1 199 1 271 1 159 1 144 1 223 1 118 3 225 1 313 2 182 1 34 1 64 1 39 1 38 1 42 1 168 1 261 1 295 1 87 1 234 1 135 1 49 1 236 1 110 1 109 2 265 1 73 1 307 1 
39 1 38 1 40 1 1 1 168 1 271 1 261 2 87 1 223 1 118 2 234 1 135 1 48 1 313 2 73 1 182 1 63 1 307 1 
39 1 38 1 40 1 1 1 294 1 199 1 168 1 271 1 295 1 87 1 223 1 118 2 234 1 225 1 109 2 313 2 73 1 307 1 
1 1 199 1 271 1 223 1 118 4 225 1 313 2 182 1 63 1 40 1 38 2 39 2 42 1 168 1 261 2 295 1 87 2 234 2 135 1 109 2 73 1 307 1 
39 1 38 1 1 1 168 1 271 1 261 2 87 1 223 1 118 2 234 1 324 1 135 1 48 1 313 2 73 1 182 1 63 1 307 1 
39 1 38 1 1 1 294 1 199 1 168 1 271 1 295 1 87 1 223 1 118 2 234 1 324 1 225 1 109 2 313 2 73 1 307 1 
1 1 199 1 271 1 223 1 118 4 225 1 313 2 182 1 63 1 38 2 39 2 42 1 168 1 261 2 295 1 87 2 234 2 135 1 324 1 109 2 73 1 307 1 
1 1 199 1 271 1 223 1 118 4 225 1 313 2 182 1 63 1 38 2 39 2 42 1 168 1 261 2 295 1 87 2 234 2 135 1 109 2 73 1 307 1 
19 1 1 1 272 1 271 1 4 1 178 1 97 1 337 1 223 1 118 2 224 1 207 1 313 2 34 1 64 1 212 1 232 1 186 1 168 1 261 1 195 1 301 1 137 1 108 1 109 1 111 1 73 1 307 1 
19 1 1 1 272 1 271 1 4 1 97 1 223 1 118 2 224 1 207 1 313 2 34 1 64 1 212 1 232 1 190 1 168 1 261 1 132 1 195 1 301 1 137 1 108 1 109 1 111 1 73 1 328 1 307 1 
1 1 199 1 271 1 223 1 118 4 225 1 313 2 182 1 63 1 38 2 39 2 42 1 168 1 261 2 295 1 87 2 234 2 135 1 49 1 109 2 73 1 307 1 
19 1 1 1 199 1 335 1 272 1 271 1 4 1 178 1 337 1 223 1 118 4 224 1 225 1 207 1 80 1 313 2 182 1 63 1 34 1 64 1 212 1 39 2 38 2 186 1 42 1 168 1 261 2 295 1 87 2 234 2 301 1 135 1 108 1 109 2 111 1 73 1 307 1 
1 1 199 1 271 1 159 1 144 1 223 1 118 3 225 1 313 2 182 1 63 1 34 1 64 1 38 1 39 1 42 1 168 1 44 1 261 2 87 1 234 1 135 1 109 1 49 1 236 1 110 1 265 1 73 1 307 1 
1 3 284 1 200 1 199 4 201 1 142 2 271 3 26 1 27 1 143 1 221 1 223 3 118 41 7 1 79 1 99 3 344 1 225 5 345 1 163 1 81 1 313 6 182 4 63 4 211 1 66 4 104 1 188 3 42 4 261 20 295 4 87 8 299 1 174 1 326 4 217 1 135 5 109 21 264 1 306 1 330 1 140 1 307 3 
1 4 284 1 200 1 199 3 201 1 142 2 271 4 26 1 27 1 143 1 221 1 223 4 118 38 7 1 79 1 99 3 344 1 225 4 345 1 163 1 81 1 313 8 182 4 63 3 211 1 66 4 104 1 188 3 42 4 261 20 295 4 87 7 299 1 174 1 326 4 217 1 135 5 109 18 264 2 306 1 330 1 140 1 307 4 
1 2 284 1 200 1 199 7 201 1 142 1 271 2 26 1 27 2 143 1 223 2 118 52 7 1 79 1 99 4 344 1 225 8 345 1 163 1 81 1 313 4 182 7 63 7 66 4 104 1 188 2 42 7 261 27 295 7 87 14 299 1 174 1 326 4 217 1 135 8 109 25 264 1 138 2 306 1 330 1 140 1 307 2 
1 2 284 1 199 3 142 1 271 2 27 1 223 2 118 19 79 1 7 2 99 1 225 3 345 1 313 4 182 3 63 3 211 1 66 2 104 1 188 1 42 3 261 9 295 3 87 6 326 2 217 1 135 3 218 1 109 10 307 2 
1 3 284 2 200 1 199 2 142 2 271 3 26 1 143 1 223 3 118 26 7 1 79 1 99 2 344 1 225 2 345 1 313 6 182 3 63 2 104 1 66 2 188 2 42 3 261 14 295 2 87 4 174 1 326 4 217 1 135 3 109 12 264 2 140 1 307 3 
351 1 250 1 334 1 9 1 266 1 83 1 336 1 155 1 156 1 297 1 
179 1 88 1 
175 1 250 1 334 1 9 1 164 1 266 1 155 1 331 1 297 1 
351 1 20 1 243 1 334 1 336 1 215 1 129 1 297 1 286 1 250 1 251 1 9 1 266 1 83 1 155 1 329 2 255 1 15 1 
351 1 20 1 243 1 334 1 336 1 215 1 129 1 297 1 286 1 250 1 251 1 9 1 266 1 83 1 155 1 329 2 255 1 15 1 
351 1 20 1 243 1 334 1 336 1 215 1 129 1 297 1 286 1 250 1 251 1 9 1 266 1 83 1 155 1 329 2 255 1 15 1 
51 1 8 1 263 1 
51 1 8 1 263 1 
332 1 152 1 
51 1 332 1 152 1 
288 1 82 1 
75 1 20 1 334 1 52 1 144 2 286 1 179 1 250 1 288 1 9 1 226 1 82 1 64 2 34 2 192 1 129 1 354 1 297 1 195 1 88 1 236 2 110 2 266 1 155 1 329 1 15 1 219 1 
8 1 263 1 
51 1 332 1 152 1 
19 1 1 1 272 2 271 1 4 2 97 1 223 1 224 1 6 1 118 2 120 1 207 1 313 2 291 1 64 2 34 2 212 2 126 1 353 2 168 1 169 1 261 1 128 1 137 1 49 1 110 2 109 1 111 1 73 1 50 1 307 1 
23 1 335 1 272 2 4 2 222 1 71 1 207 1 312 1 111 1 165 1 228 1 14 1 359 1 212 2 184 1 
272 1 4 1 222 1 71 1 207 1 181 1 165 1 111 1 228 1 14 1 359 1 212 1 184 1 
19 1 232 1 23 1 272 1 4 1 131 1 224 1 309 1 207 1 153 1 111 1 228 1 212 1 314 1 
23 1 272 1 4 1 222 1 71 1 207 1 312 1 165 1 111 1 228 1 14 1 359 1 212 1 184 1 
260 1 
280 1 166 1 243 1 244 1 74 1 148 1 220 1 
20 1 243 2 78 1 161 1 273 1 35 1 124 1 166 1 276 1 148 1 323 1 136 1 238 1 196 1 358 1 15 1 220 1 
0 2 2 1 272 3 4 3 177 1 98 6 224 3 57 2 273 3 225 2 61 1 182 2 232 1 187 3 13 2 148 2 323 6 108 3 235 2 111 3 74 1 197 2 196 4 238 4 17 1 15 5 279 2 280 1 19 10 20 5 22 2 243 8 335 1 199 2 245 2 338 2 161 4 343 2 342 2 207 4 31 6 290 1 256 1 212 3 124 12 166 9 42 2 171 2 172 2 135 2 136 4 358 5 360 1 220 8 
20 1 22 2 243 5 200 1 199 2 245 1 143 1 204 1 98 5 273 1 161 2 99 1 342 1 344 1 31 5 225 2 182 2 124 6 12 1 166 8 66 1 188 1 42 2 148 2 323 3 174 1 135 2 136 2 358 1 238 2 196 2 140 1 17 1 15 1 220 5 
20 1 22 2 157 1 115 1 144 1 161 1 342 1 225 1 163 1 292 1 64 1 34 1 166 2 214 1 46 1 299 1 355 1 135 2 136 1 356 1 236 1 110 1 265 1 238 1 196 1 306 1 15 1 220 2 
19 1 1 1 271 1 272 1 4 1 178 1 97 1 203 1 144 2 337 1 223 1 118 1 224 1 207 1 313 2 64 3 34 3 212 1 232 1 186 1 168 1 195 1 301 1 355 1 108 1 109 1 110 2 236 2 265 2 111 1 73 1 307 1 
166 1 243 4 245 1 148 2 98 2 323 2 161 1 31 2 136 1 196 1 238 1 330 1 17 1 124 4 220 2 
280 1 166 1 243 1 148 1 161 1 136 1 196 1 238 1 74 1 220 1 
166 5 22 2 243 5 42 2 199 2 338 1 98 5 323 5 342 1 135 2 31 5 225 2 182 2 220 5 124 10 
273 1 20 1 243 1 358 1 148 1 15 1 
19 1 20 3 95 1 272 4 245 2 4 4 224 1 161 2 273 2 205 1 121 1 309 1 207 1 60 1 61 2 256 1 212 4 232 2 166 2 302 1 136 2 153 1 111 1 238 2 196 1 358 4 17 2 15 3 220 2 
250 1 54 1 155 1 
250 1 54 1 155 1 
250 1 101 1 83 1 82 1 155 1 
250 1 54 1 155 1 
250 1 155 1 240 1 
250 1 155 1 240 1 
250 1 155 1 240 1 
250 1 155 1 
266 1 297 1 
1 1 66 1 200 1 188 1 201 1 271 1 261 4 295 2 87 2 223 1 299 1 118 8 99 1 135 1 225 1 345 1 109 4 163 1 81 1 313 2 306 1 330 1 307 1 
1 2 200 1 201 1 271 2 27 1 160 1 223 2 118 11 99 1 225 1 345 1 163 1 81 1 313 4 182 1 63 1 66 2 188 1 42 1 261 6 295 2 87 3 299 1 135 2 109 5 306 1 330 1 307 2 
1 3 200 1 199 2 201 1 271 3 143 1 160 1 223 3 118 19 99 1 344 1 225 3 345 1 163 1 81 1 313 6 182 2 63 1 66 1 188 1 42 2 261 9 295 3 87 4 299 1 174 1 135 3 109 10 264 1 306 1 330 1 140 1 307 3 
1 3 200 1 199 1 201 1 271 3 143 1 160 1 223 3 118 17 99 1 225 2 344 1 345 1 163 1 81 1 313 6 182 2 63 2 66 1 188 1 42 2 261 10 295 3 87 5 299 1 174 1 135 3 109 7 264 1 306 1 330 1 140 1 307 3 
1 1 66 1 200 1 188 1 201 1 271 1 261 4 295 2 87 2 223 1 299 1 118 8 99 1 135 1 225 1 345 1 109 4 163 1 81 1 313 2 306 1 330 1 307 1 
1 1 200 1 199 2 271 1 143 1 223 1 118 12 99 1 225 2 344 1 345 1 313 2 182 2 63 1 66 1 188 1 42 2 261 6 295 1 87 2 174 1 135 2 109 6 140 1 307 1 
1 4 200 1 199 1 201 1 271 4 143 1 160 1 223 4 118 18 99 1 344 1 225 2 345 1 163 1 81 1 313 8 182 2 63 2 66 1 188 1 42 2 261 10 295 3 87 5 299 1 174 1 135 3 109 8 264 2 306 1 330 1 140 1 307 4 
1 4 200 1 199 2 271 4 143 1 223 4 118 16 99 1 344 1 225 2 345 1 313 8 182 3 63 3 211 1 66 1 188 1 42 3 261 9 295 3 87 6 174 1 135 3 109 7 264 2 140 1 307 4 
201 1 261 3 295 3 87 6 118 7 299 3 135 1 225 1 109 4 163 3 81 2 63 3 306 1 
1 4 200 1 199 1 201 1 271 4 143 1 223 4 118 18 99 1 344 1 225 2 345 1 163 1 81 1 313 8 182 2 63 1 211 1 66 1 188 1 42 2 261 10 295 3 87 4 299 1 174 1 135 3 109 8 264 2 306 1 330 1 140 1 307 4 
1 2 271 2 201 1 261 4 295 2 87 3 223 2 118 8 299 1 135 1 225 1 109 4 264 1 163 1 313 4 81 1 306 1 63 1 330 1 307 2 
244 1 201 1 261 3 295 2 87 2 299 1 118 6 135 1 225 1 109 3 163 1 81 1 306 1 330 1 
1 1 199 1 42 1 271 1 261 2 295 1 87 2 160 1 223 1 118 4 135 1 225 1 109 2 313 2 182 1 63 1 307 1 
66 2 199 1 188 1 42 1 27 1 261 3 295 1 87 2 118 7 99 1 135 1 225 1 109 4 182 1 63 1 
76 1 1 2 199 2 201 1 271 2 27 1 223 2 118 23 99 2 225 3 163 2 81 1 313 4 182 2 63 4 66 2 42 2 261 11 295 5 87 9 299 2 135 3 109 12 264 2 138 1 306 1 330 1 267 1 307 2 
118 1 66 1 109 1 
118 1 99 1 261 1 
1 1 42 1 199 1 271 1 261 3 295 2 87 3 160 1 338 1 223 1 118 6 135 1 225 1 109 3 313 2 182 1 63 1 307 1 
1 1 200 1 199 2 271 1 143 1 223 1 118 12 99 1 225 2 344 1 345 1 313 2 182 2 63 1 66 1 188 1 42 2 261 6 295 1 87 2 174 1 135 2 109 6 140 1 307 1 
261 3 295 1 87 2 118 6 299 1 135 1 225 1 109 3 163 1 306 1 63 1 
76 1 1 1 271 1 201 1 261 1 295 1 87 2 223 1 299 1 118 3 109 2 264 1 163 1 81 1 313 2 63 1 307 1 
1 1 214 1 271 1 261 5 295 3 87 5 223 1 299 2 118 10 135 2 225 2 345 1 109 5 163 2 313 2 63 2 306 1 307 1 
1 1 271 1 261 2 87 1 223 1 118 2 135 1 345 1 313 2 182 1 63 1 307 1 
1 1 199 1 42 1 271 1 261 2 295 1 87 2 223 1 118 4 135 1 225 1 109 2 345 1 313 2 182 1 63 1 307 1 
76 1 1 3 271 3 261 1 295 1 87 2 223 3 118 3 299 1 109 2 345 1 264 1 163 1 313 6 63 1 211 1 307 3 
76 1 1 5 199 3 201 1 271 5 27 1 160 1 223 5 118 34 99 3 225 5 345 1 163 3 81 1 313 10 210 1 182 3 63 5 211 1 349 1 10 1 66 4 188 1 42 3 261 16 295 7 87 12 299 3 135 5 109 18 264 2 306 2 330 1 307 5 
195 1 119 1 293 1 110 1 246 1 64 1 34 1 
293 1 67 1 246 1 216 1 195 1 119 1 310 1 110 1 209 1 34 1 64 1 241 1 
224 1 19 1 232 1 309 1 207 1 244 1 153 1 272 1 111 1 4 1 212 1 
19 1 232 1 257 1 272 1 4 1 144 1 337 1 195 1 224 1 301 1 108 1 207 1 236 1 110 1 111 1 34 2 64 2 212 1 
19 3 272 1 4 1 144 1 337 1 224 2 207 1 61 1 64 2 34 2 212 1 257 1 259 1 195 1 46 1 301 1 108 2 235 1 110 2 236 2 151 1 111 1 279 1 
19 3 272 2 4 2 144 1 29 1 224 2 207 1 61 1 64 2 34 2 212 2 257 1 259 1 190 1 195 1 46 1 301 1 108 2 235 1 110 2 236 2 151 1 111 1 279 1 
19 4 20 2 243 1 272 3 4 3 29 1 224 1 180 1 207 1 61 1 212 3 232 1 187 1 13 1 171 1 148 1 325 1 108 1 235 1 111 1 358 1 15 2 279 1 
0 1 232 1 19 4 20 2 243 1 187 1 272 3 13 1 4 3 171 1 148 1 29 1 224 1 235 1 108 1 207 1 61 1 111 1 358 1 279 1 15 2 212 3 
341 1 207 1 272 1 111 1 4 1 212 1 
281 1 126 1 232 2 19 3 270 1 353 1 94 1 335 1 189 1 272 7 4 6 224 2 341 1 108 1 207 3 111 2 305 1 360 1 212 7 184 1 213 1 
1 2 272 1 271 2 4 1 178 1 144 1 223 2 224 1 225 1 313 4 64 2 186 1 195 2 234 1 108 1 236 1 110 1 109 3 111 1 73 2 330 1 19 1 335 1 25 1 201 1 337 1 118 6 207 1 80 1 163 1 81 1 34 2 212 1 38 1 39 1 257 1 169 1 168 2 261 3 295 2 87 2 299 1 301 1 135 1 49 1 306 1 307 2 
280 1 0 1 19 2 20 3 243 1 272 1 4 1 161 2 57 1 273 1 343 1 256 1 212 1 232 1 166 1 187 1 13 1 171 1 148 1 136 2 74 1 238 2 196 2 197 1 358 2 15 3 219 1 220 1 
224 1 19 2 341 1 207 2 108 1 335 1 272 2 111 1 290 1 4 2 171 1 360 1 212 2 
269 1 232 1 19 1 335 1 272 4 4 4 29 1 224 1 309 1 207 1 153 1 111 1 212 4 
19 1 270 1 189 1 272 2 4 2 249 1 224 1 145 1 108 1 207 2 61 1 111 1 91 1 212 2 
232 1 207 1 272 1 111 1 4 1 14 1 222 1 212 1 
126 1 19 1 335 1 272 2 4 2 128 1 224 1 207 1 111 1 212 2 184 1 
269 1 281 1 232 1 126 1 19 3 335 1 272 5 4 4 224 2 309 1 207 2 153 1 61 1 111 2 305 1 212 5 
269 1 232 1 126 1 19 3 335 1 308 1 272 5 4 4 224 2 309 1 207 2 153 1 61 1 111 2 305 1 212 5 
19 1 232 1 257 1 272 1 190 1 4 1 144 1 195 1 224 1 301 1 108 1 207 1 236 1 110 1 111 1 34 2 64 2 212 1 
19 1 270 1 189 1 272 1 4 1 224 1 108 1 207 2 61 1 111 1 360 1 212 1 213 1 
56 1 6 1 120 1 274 1 110 1 34 1 64 1 350 1 50 1 
274 1 319 1 107 1 
195 1 274 1 158 1 56 1 350 1 
20 2 243 1 259 1 170 1 13 1 319 1 158 2 106 1 148 1 107 1 56 2 195 1 46 1 274 1 151 1 32 1 219 1 15 2 350 2 
340 1 352 1 244 1 105 1 
340 1 317 1 352 1 11 1 191 1 105 1 183 1 
185 1 317 1 248 1 
317 3 352 1 11 3 3 1 191 1 105 1 320 1 298 2 300 1 340 1 113 1 183 1 
340 1 317 2 352 1 11 2 191 1 105 1 112 1 183 1 315 1 
317 1 11 1 258 1 3 1 191 1 105 1 321 1 130 1 289 1 183 1 242 1 
340 1 317 1 11 1 3 1 191 1 105 1 183 1 
340 2 317 1 352 1 11 1 3 1 191 1 183 1 
340 1 317 2 47 1 11 2 3 1 303 1 191 2 105 1 239 1 183 2 
317 3 352 1 147 1 11 3 3 1 191 1 105 2 130 1 340 1 112 2 183 1 348 1 230 1 
317 1 11 1 3 1 191 1 296 1 14 1 183 1 
317 4 352 1 11 4 3 1 191 2 105 2 130 1 340 1 59 1 112 2 183 2 315 1 230 1 
340 1 317 3 352 1 11 3 3 1 191 1 105 1 112 1 183 1 348 1 298 1 
282 1 105 1 130 1 230 1 
340 1 105 1 
340 1 317 1 352 1 11 1 3 1 191 1 105 1 183 1 
317 4 352 2 282 1 11 4 191 1 105 3 320 1 130 1 298 1 340 2 113 1 112 2 183 1 230 1 
317 2 114 1 352 1 11 2 3 1 191 1 105 1 339 1 340 1 100 1 112 1 183 1 
317 3 352 1 11 3 3 1 191 1 105 1 320 1 298 2 340 1 357 1 113 2 183 1 
252 2 105 2 96 1 254 1 
317 1 11 1 3 1 191 1 183 1 37 1 
340 1 317 2 352 1 11 2 3 1 191 1 105 1 112 1 183 1 348 1 
173 1 
340 1 317 1 352 1 11 1 3 1 191 1 105 1 183 1 

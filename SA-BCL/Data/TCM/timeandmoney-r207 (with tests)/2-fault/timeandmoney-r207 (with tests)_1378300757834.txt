#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 778 | 0 -> -1
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | OPERATOR | 3101 | == -> >=
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
192 1 234 5 193 2 332 1 308 9 309 1 8 1 31 1 237 1 51 1 360 1 316 2 73 1 363 2 221 1 270 2 320 3 20 9 299 6 276 1 249 4 278 2 126 1 82 1 111 1 187 1 327 2 303 2 
192 1 234 5 193 2 332 1 308 9 309 1 8 1 31 1 237 1 51 1 360 1 316 2 73 1 363 2 221 1 270 2 320 3 20 9 299 6 276 1 249 4 278 2 126 1 82 1 111 1 187 1 327 2 303 2 
192 1 234 6 193 2 332 1 308 10 309 1 8 1 31 1 237 1 51 1 360 1 316 2 73 1 363 2 221 1 270 2 320 4 20 10 299 7 276 1 249 5 278 2 126 1 82 1 111 1 187 1 327 2 303 2 
192 1 234 4 193 2 332 1 308 7 309 1 8 1 31 1 237 1 51 1 360 1 316 2 73 1 363 2 221 1 270 2 320 2 20 7 299 4 276 1 249 3 278 2 126 1 82 1 187 1 327 2 303 1 
234 3 320 1 20 4 299 3 308 4 332 1 309 1 249 2 278 1 31 1 237 1 111 1 187 1 327 1 316 1 303 2 363 1 270 1 
234 1 193 1 20 2 308 2 309 1 373 1 237 1 41 1 82 1 279 1 51 1 187 1 327 1 316 1 363 1 270 1 
234 2 193 1 320 1 20 3 299 1 308 3 309 1 249 1 237 1 187 1 316 2 73 1 363 2 
234 5 193 1 308 9 332 1 309 1 31 1 237 1 73 1 316 2 363 2 270 1 320 3 20 9 299 7 151 1 276 1 249 4 278 1 126 1 111 1 187 1 327 1 303 2 114 1 
234 5 193 1 308 9 332 1 309 1 31 1 237 1 73 1 316 2 363 2 270 1 320 3 20 9 299 7 151 1 276 1 249 4 278 1 126 1 111 1 187 1 327 1 303 2 114 1 
324 1 244 1 364 1 
371 1 364 1 125 2 
57 2 37 2 301 1 120 2 261 1 77 2 164 2 10 2 
190 2 354 1 261 1 286 1 10 2 310 1 30 1 48 1 71 1 335 1 312 1 359 1 120 2 14 1 337 1 57 2 37 2 178 1 149 1 298 1 105 2 301 1 274 1 77 3 322 1 78 1 110 1 277 1 251 1 374 2 81 1 130 1 186 2 84 2 208 1 164 3 189 1 
57 1 76 1 37 1 261 1 77 1 10 1 231 1 33 1 120 1 164 1 
0 1 106 1 77 1 10 1 343 1 324 1 265 1 32 1 33 1 72 1 142 1 143 1 164 1 364 1 
57 1 37 1 0 1 77 1 10 1 343 1 324 1 265 2 32 1 33 1 72 2 142 1 120 1 164 1 364 1 
265 1 128 1 83 1 72 1 285 1 
324 1 265 2 83 1 329 1 72 2 44 1 285 1 364 1 
265 1 83 1 72 1 
57 1 76 1 37 1 261 1 285 1 77 1 10 1 265 1 231 1 33 1 72 1 346 1 120 1 164 1 
364 1 
324 1 265 2 83 1 329 1 72 2 285 1 364 1 122 1 
318 2 198 1 212 1 342 1 167 1 329 1 285 2 227 1 7 1 324 1 265 5 357 2 290 1 291 1 83 2 72 5 254 2 325 1 364 1 
244 1 301 1 
57 1 37 1 301 1 77 2 10 2 33 1 120 1 15 1 16 1 164 2 210 1 
181 1 152 1 36 1 
105 1 301 1 77 1 78 1 277 1 310 1 374 1 71 1 48 1 335 1 312 1 85 1 84 1 208 1 164 1 189 1 
57 3 37 1 301 1 77 3 10 3 12 1 33 1 120 3 15 1 164 3 
57 1 231 1 33 1 120 1 77 1 164 1 10 1 
57 1 37 1 77 1 10 1 33 1 120 1 164 1 16 1 210 1 
190 1 0 1 354 1 261 1 214 1 10 3 310 1 30 1 265 1 48 1 71 1 335 1 312 1 12 1 32 1 33 1 72 1 142 1 14 1 120 3 337 1 338 1 57 3 37 2 149 1 298 1 105 1 301 1 274 1 77 4 78 1 38 1 110 1 277 1 343 1 251 1 374 1 130 1 186 2 84 1 208 1 164 4 210 1 189 1 
57 1 12 1 106 1 301 1 120 1 267 1 77 2 164 2 10 2 
57 3 37 1 0 1 214 1 77 3 153 1 10 3 343 1 265 1 12 2 32 1 33 1 72 1 142 1 120 3 164 3 364 1 210 1 338 1 
57 2 37 1 152 1 77 2 10 2 12 1 120 2 164 2 210 1 36 1 
105 1 301 1 77 1 78 1 277 1 310 1 374 1 71 1 48 1 312 1 335 1 84 1 208 1 164 1 189 1 
105 1 301 1 107 1 77 1 78 1 310 1 374 1 71 1 48 1 312 1 335 1 84 1 206 1 164 1 189 1 
190 4 352 1 354 1 6 1 116 1 30 1 311 1 49 1 359 2 36 2 341 1 149 1 298 1 181 2 273 1 246 1 152 2 109 1 110 2 25 1 251 1 130 1 186 2 163 1 
57 1 33 1 120 1 89 1 77 1 164 1 10 1 343 1 
57 1 105 1 214 1 77 2 78 1 10 1 310 1 277 1 48 1 71 1 374 1 335 1 312 1 12 1 84 1 120 1 208 1 164 2 36 1 189 1 
57 2 37 1 301 1 77 2 10 2 12 1 33 1 120 2 15 1 164 2 210 1 
57 2 231 1 33 1 120 2 89 1 77 2 164 2 10 2 
129 1 100 1 
129 1 100 1 
60 1 95 1 
60 1 95 1 
60 1 95 1 
295 1 129 1 100 1 
295 1 129 1 100 1 
129 1 100 1 171 1 
129 2 100 2 91 1 60 1 348 1 95 1 
295 1 129 1 100 1 
129 1 100 1 224 1 
129 1 100 1 224 1 
129 1 100 1 224 1 
100 2 222 1 19 1 103 2 199 1 1 2 194 2 94 2 203 1 39 1 11 3 265 2 117 1 356 2 129 2 72 2 348 1 269 1 364 1 
1 1 47 1 171 1 94 1 11 1 10 2 70 1 265 1 117 1 356 1 358 1 72 1 241 1 120 2 57 2 100 1 103 1 321 1 245 1 301 1 77 2 129 1 164 2 133 1 
327 1 270 1 278 1 
327 1 270 1 373 1 
176 1 177 1 196 1 270 3 278 2 373 1 
176 1 255 1 196 1 270 2 278 1 373 1 
176 1 196 2 270 2 278 1 373 1 
167 1 329 1 28 1 2 1 284 2 285 4 70 1 6 1 265 5 357 1 311 1 72 5 364 2 146 1 318 1 198 2 245 1 150 1 275 1 371 1 109 1 227 3 125 3 25 1 324 1 157 1 83 1 254 1 347 2 113 2 280 1 133 1 
329 1 167 1 28 2 284 6 195 1 285 7 6 3 287 1 265 9 357 2 311 3 72 9 141 1 364 5 146 3 243 1 318 2 198 6 248 1 275 2 372 1 371 3 109 3 204 5 227 8 125 9 25 3 324 1 128 5 83 6 254 2 325 1 347 6 280 1 133 4 
28 1 284 2 285 2 6 1 265 3 357 1 311 1 72 3 364 3 146 1 318 1 198 2 150 1 275 1 371 2 109 1 227 3 125 4 324 1 25 1 157 1 254 1 325 1 347 2 113 1 133 1 
28 1 284 4 285 3 6 2 265 4 357 1 311 2 72 4 141 1 364 4 146 2 318 1 198 4 150 1 248 1 275 1 371 3 372 1 109 2 227 5 125 7 324 1 25 2 157 1 254 1 347 4 325 1 113 2 133 2 
127 1 244 1 335 1 
335 1 136 1 
43 1 
335 1 312 1 
127 2 48 1 46 1 335 3 312 1 59 1 
48 1 335 1 312 1 
335 1 235 1 
294 1 190 7 66 1 200 2 170 1 6 1 110 3 116 3 311 1 359 4 161 1 293 1 63 1 163 2 90 1 131 1 366 1 
294 1 190 7 66 1 200 2 170 1 6 1 110 3 116 3 311 1 359 4 161 1 293 1 63 1 163 2 90 1 131 1 366 1 
294 1 190 7 66 1 200 2 170 1 6 1 110 3 116 3 311 1 375 1 359 4 161 1 293 1 63 1 163 2 90 1 131 1 366 1 
191 4 190 31 66 2 170 1 137 1 6 4 116 10 236 1 30 1 311 4 359 16 293 5 55 1 366 2 146 3 294 1 271 1 123 1 104 1 200 3 298 1 109 3 110 15 25 3 251 1 229 1 130 1 186 2 161 1 63 2 163 5 90 2 131 1 132 3 
294 1 190 9 66 1 200 2 298 2 170 1 6 1 116 4 110 4 236 1 30 2 251 2 311 1 130 2 359 5 186 4 63 1 293 1 163 3 268 1 90 1 131 1 99 1 366 1 
234 1 193 1 308 2 355 1 309 1 217 1 216 1 237 1 71 1 96 1 316 1 363 1 270 2 147 1 177 1 20 2 299 1 124 1 105 1 61 1 78 1 278 1 373 1 374 1 156 1 84 1 187 1 207 1 327 1 209 1 
351 1 234 1 193 1 308 3 355 1 309 1 216 1 237 1 71 1 96 1 316 1 363 1 74 1 270 2 147 1 177 1 20 3 124 1 105 1 299 2 61 1 78 1 278 1 373 1 374 1 155 1 84 1 207 1 327 1 209 1 
351 1 234 1 193 1 308 2 309 1 216 1 237 1 71 1 96 1 74 1 270 2 147 1 177 1 20 2 124 1 105 1 299 2 78 1 373 1 278 1 374 1 84 1 207 1 327 1 209 1 
193 2 92 1 308 1 71 1 312 1 335 1 316 1 363 1 296 1 20 1 105 1 124 2 78 1 226 1 374 1 155 1 84 1 159 1 160 1 42 1 207 2 209 2 189 1 
351 1 193 1 308 1 355 1 216 1 71 1 96 1 316 1 363 1 270 2 147 1 177 1 20 1 124 1 105 1 61 1 78 1 278 1 373 1 374 1 156 1 84 1 187 1 207 1 327 1 209 1 
304 1 
0 1 329 3 330 2 138 1 10 1 335 1 142 1 143 1 54 2 242 1 198 2 105 2 106 1 21 1 23 1 343 1 253 2 254 1 164 1 166 1 258 2 167 1 307 1 265 5 71 1 357 1 312 1 32 1 33 1 72 5 364 2 175 2 318 1 223 1 179 1 180 4 275 1 77 1 371 2 78 1 226 1 227 2 125 2 228 1 324 1 323 2 374 2 83 6 84 2 326 2 86 1 42 1 379 1 188 1 189 2 
166 1 0 1 329 1 180 2 106 1 77 1 23 1 10 1 343 1 228 1 265 3 253 1 32 1 83 2 33 1 72 3 142 1 143 1 164 1 379 1 122 1 242 1 
0 1 166 1 329 1 10 1 265 3 32 1 33 1 72 3 142 1 143 1 364 1 242 1 122 1 180 3 106 1 77 1 23 1 228 1 343 1 324 1 83 1 326 1 164 1 379 1 
0 1 166 1 329 1 330 1 10 1 265 3 32 1 33 1 72 3 142 1 143 1 364 1 122 1 242 1 180 3 106 1 77 1 23 1 228 1 343 1 324 1 253 1 83 2 326 1 164 1 379 1 
0 1 329 3 330 4 10 1 142 1 143 1 54 2 242 1 56 1 198 1 106 1 21 1 23 1 343 1 253 4 254 1 164 1 64 1 166 1 258 2 167 1 168 1 265 5 357 1 218 1 32 1 33 1 72 5 364 5 122 1 175 2 318 1 368 1 179 1 180 6 77 1 371 2 227 1 228 1 324 5 323 2 83 7 326 4 379 1 
0 1 329 2 330 2 10 1 142 1 143 1 54 2 242 1 198 1 106 1 21 1 23 1 343 1 253 2 254 1 164 1 166 1 258 2 167 1 307 1 265 4 357 1 32 1 33 1 72 4 364 2 175 2 318 1 179 1 180 4 77 1 371 2 227 1 228 1 125 2 323 2 324 1 83 4 326 2 379 1 
0 1 166 1 258 2 329 2 167 1 330 2 168 1 10 1 265 4 357 1 32 1 33 1 72 4 142 1 143 1 54 2 364 1 242 1 56 1 175 2 318 1 198 1 179 1 180 4 106 1 21 1 77 1 371 2 227 1 23 1 228 1 343 1 324 1 323 2 253 2 83 4 254 1 326 2 64 1 164 1 379 1 
0 1 166 1 258 2 329 2 167 1 330 2 168 1 10 1 265 4 357 1 32 1 33 1 72 4 142 1 143 1 54 2 364 1 242 1 56 1 175 2 318 1 198 1 179 1 180 4 106 1 21 1 77 1 371 2 227 1 23 1 228 1 343 1 324 1 323 2 253 2 83 4 254 1 326 2 64 1 164 1 379 1 
0 1 166 1 329 2 167 1 330 2 10 1 264 1 265 4 357 1 32 1 33 1 72 4 142 1 173 2 143 1 54 2 364 1 242 1 175 2 318 1 198 1 180 4 106 1 21 1 77 1 227 1 23 1 125 2 228 1 343 1 324 1 230 1 253 2 83 4 232 2 254 1 326 2 64 1 164 1 379 1 378 1 
0 1 166 1 258 2 329 2 167 1 330 3 168 1 10 1 265 4 357 1 32 1 33 1 72 4 142 1 143 1 54 2 364 1 56 1 242 1 175 2 318 1 368 1 198 1 179 1 180 5 106 1 21 1 77 1 371 2 227 1 23 1 228 1 343 1 324 1 323 2 253 3 83 5 254 1 326 3 64 1 164 1 379 1 
0 1 166 1 258 2 329 2 167 1 330 3 168 1 10 1 265 4 357 1 32 1 33 1 72 4 142 1 143 1 54 2 364 1 56 1 242 1 175 2 318 1 368 1 198 1 179 1 180 5 106 1 21 1 77 1 371 2 227 1 23 1 228 1 343 1 324 1 323 2 253 3 83 5 254 1 326 3 64 1 164 1 379 1 
166 1 0 1 329 2 167 1 307 1 330 2 10 1 264 1 265 4 357 1 32 1 33 1 72 4 142 1 173 2 143 1 54 2 364 1 242 1 175 2 318 1 198 1 180 4 106 1 21 1 77 1 227 1 23 1 125 2 228 1 343 1 324 1 253 2 83 4 232 2 254 1 326 2 164 1 379 1 
294 1 244 1 190 6 149 1 66 1 200 1 181 1 298 1 301 2 246 1 354 1 170 1 152 1 6 1 110 3 116 2 30 1 251 1 311 1 130 1 359 3 186 2 63 1 163 2 131 1 36 1 
191 3 190 14 169 1 354 1 137 1 286 1 6 1 116 2 30 2 311 2 359 8 219 1 293 1 315 1 35 1 337 1 36 11 146 2 271 1 149 2 298 2 181 11 301 1 152 4 109 2 110 6 25 1 251 2 130 2 186 4 163 1 132 3 305 1 
190 2 354 1 214 1 286 1 10 1 310 1 30 1 48 1 71 1 288 1 335 1 312 1 12 1 359 1 362 1 120 1 337 1 57 1 149 1 298 1 105 1 301 1 152 1 77 2 78 1 277 1 110 1 374 1 251 1 130 1 186 2 84 1 85 1 87 1 208 1 164 2 189 1 305 1 
190 20 286 1 6 3 10 1 48 2 12 1 335 2 14 2 293 4 144 2 337 1 146 2 294 1 57 1 340 2 149 3 200 1 298 3 201 1 105 3 301 2 152 7 109 2 110 10 250 2 25 2 251 3 62 1 112 1 63 1 208 2 163 4 164 3 305 1 351 1 27 2 66 1 170 1 354 3 214 1 310 2 116 8 30 3 71 2 312 2 311 3 359 10 120 1 36 7 181 7 77 3 78 2 277 2 374 3 130 3 186 6 84 3 131 1 189 1 
351 1 190 2 29 1 354 2 286 1 263 1 10 1 217 1 30 2 71 2 12 1 335 3 312 2 359 1 13 1 120 1 337 1 57 1 178 2 149 2 272 1 298 2 300 1 105 7 246 1 77 1 78 2 226 1 110 1 374 8 251 2 130 2 186 4 84 8 42 1 257 1 164 1 377 1 189 2 
190 3 354 1 10 1 6 1 116 1 30 1 311 1 359 1 220 1 120 1 36 1 146 1 57 1 37 1 149 1 181 1 298 1 152 1 77 1 109 1 110 2 25 1 251 1 130 1 186 2 163 1 164 1 210 1 305 1 
190 2 149 1 181 1 298 1 246 1 354 1 152 1 109 1 116 1 30 1 251 1 49 1 311 1 130 1 186 2 359 2 293 1 36 1 
190 2 149 1 181 1 298 1 246 1 354 1 273 1 152 1 6 1 116 1 110 2 30 1 25 1 251 1 130 1 186 2 163 1 36 1 
190 4 354 1 6 1 116 2 30 1 311 1 359 2 293 1 146 1 36 2 149 1 298 1 181 2 246 1 152 2 109 1 110 2 25 1 251 1 130 1 186 2 163 1 
190 2 149 1 181 1 298 1 354 1 152 1 109 1 116 1 30 1 251 1 49 1 311 1 130 1 186 2 359 2 293 1 377 1 36 1 
190 2 149 1 181 1 298 1 354 1 273 1 152 1 6 1 116 1 110 2 30 1 25 1 251 1 130 1 186 2 163 1 377 1 36 1 
190 4 354 1 6 1 116 2 30 1 311 1 359 2 293 1 146 1 36 2 149 1 298 1 181 2 152 2 109 1 110 2 25 1 251 1 130 1 186 2 163 1 377 1 
190 4 354 1 6 1 116 2 30 1 311 1 359 2 293 1 146 1 36 2 149 1 298 1 181 2 152 2 109 1 110 2 25 1 251 1 130 1 186 2 163 1 
190 2 354 1 286 1 310 1 30 1 48 1 71 1 312 1 335 1 359 1 14 1 337 1 149 1 298 1 105 1 301 1 77 1 78 1 277 1 110 1 374 1 251 1 130 1 186 2 84 1 208 1 164 1 189 1 
190 2 354 1 286 1 310 1 30 1 48 1 71 1 312 1 335 1 359 1 337 1 149 1 298 1 105 1 301 1 107 1 77 1 78 1 110 1 374 1 251 1 130 1 186 2 84 1 206 1 162 1 164 1 189 1 
190 4 354 1 6 1 116 2 30 1 311 1 359 2 293 1 146 1 36 2 149 1 298 1 181 2 152 2 109 1 110 2 25 1 251 1 130 1 186 2 163 1 305 1 
190 4 354 1 6 1 116 2 310 1 217 1 30 1 48 1 71 1 311 1 312 1 335 1 359 2 293 1 14 1 36 2 146 1 149 1 181 2 298 1 105 1 152 2 77 1 78 1 109 1 110 2 277 1 250 1 25 1 374 1 251 1 130 1 186 2 84 1 208 1 163 1 164 1 
190 3 354 1 6 1 10 1 116 1 139 1 30 1 311 1 359 2 293 1 120 1 146 1 36 1 57 1 37 1 149 1 298 1 181 1 77 1 152 1 109 1 110 1 25 1 251 1 130 1 186 2 164 1 210 1 305 1 
191 2 190 19 282 1 259 1 283 1 137 1 4 2 6 3 116 6 30 2 311 3 359 9 52 1 293 3 174 1 99 1 367 2 146 3 271 1 370 1 298 2 202 1 109 3 110 10 25 3 251 2 130 2 186 4 163 3 132 1 
65 1 190 26 191 2 282 1 211 1 67 1 259 1 283 2 115 1 4 4 6 2 116 4 236 2 30 3 238 1 311 3 359 14 361 1 293 2 99 1 367 1 146 3 271 2 370 2 298 3 202 1 109 3 110 12 25 2 251 3 130 3 186 6 163 2 132 2 
281 1 190 41 191 4 282 1 283 1 137 1 4 4 6 5 236 1 238 1 52 1 293 4 99 1 146 4 294 1 200 1 298 3 202 1 109 4 110 21 25 4 251 3 63 1 163 4 65 1 211 1 67 1 66 1 259 1 115 1 170 1 116 8 30 3 311 5 359 20 361 1 367 1 271 3 370 2 130 3 186 6 132 3 131 1 
65 1 281 1 191 4 190 38 282 1 211 1 66 1 67 1 259 1 115 1 283 1 170 1 137 1 4 4 6 4 116 7 236 2 30 4 238 1 311 5 359 20 52 1 361 1 293 3 99 1 367 1 146 4 294 1 271 3 200 1 370 2 298 4 202 1 109 4 110 18 25 3 251 4 130 4 186 8 63 1 163 4 131 1 132 3 
65 1 191 4 190 52 282 1 211 1 66 1 67 1 259 1 115 1 283 1 170 1 137 2 4 4 6 8 116 14 236 1 30 2 238 1 311 8 359 27 219 2 361 1 293 7 99 1 367 1 146 7 294 1 271 2 200 1 370 1 298 2 202 1 109 7 110 25 25 7 251 2 130 2 186 4 63 1 163 7 131 1 132 4 
356 1 129 1 100 1 222 1 103 1 1 1 348 1 94 1 203 1 317 1 
241 1 171 1 
356 1 129 1 100 1 34 1 103 1 1 1 94 1 68 1 80 1 
100 1 222 1 19 1 103 1 1 1 194 1 94 1 203 1 39 1 11 2 117 1 265 1 356 1 129 1 72 1 348 1 269 1 364 1 
100 1 222 1 19 1 103 1 1 1 194 1 94 1 203 1 39 1 11 2 117 1 265 1 356 1 129 1 72 1 348 1 269 1 364 1 
100 1 222 1 19 1 103 1 1 1 194 1 94 1 203 1 39 1 11 2 117 1 265 1 356 1 129 1 72 1 348 1 269 1 364 1 
295 1 266 1 91 1 
295 1 266 1 91 1 
172 1 224 1 
172 1 91 1 224 1 
358 1 47 1 
194 1 1 1 47 1 285 1 171 1 94 1 11 1 70 1 10 2 265 1 356 1 358 1 72 1 241 1 120 2 269 1 57 2 100 1 103 1 321 1 245 1 301 1 77 2 129 1 345 1 164 2 133 1 
295 1 266 1 
172 1 91 1 224 1 
190 2 213 1 354 1 286 1 263 1 10 2 30 1 71 1 335 1 312 1 314 1 359 1 53 1 337 1 365 1 148 1 178 2 149 1 272 1 298 1 105 2 77 2 78 1 110 1 374 2 251 1 130 1 186 2 84 2 164 2 305 1 
351 1 26 1 147 1 177 1 105 2 124 1 61 1 78 1 79 1 278 1 373 1 334 1 217 1 71 1 374 2 96 1 84 2 327 1 270 2 
351 1 147 1 177 1 105 1 124 1 61 1 78 1 215 1 79 1 278 1 373 1 374 1 71 1 96 1 84 1 327 1 270 2 
105 1 124 1 78 1 226 1 334 1 71 1 374 1 335 1 312 1 84 1 159 1 42 1 145 1 189 1 
351 1 26 1 147 1 177 1 105 1 124 1 61 1 78 1 79 1 278 1 373 1 334 1 71 1 374 1 96 1 84 1 327 1 270 2 
121 1 
324 1 244 1 198 1 212 1 342 1 364 1 227 1 
258 1 167 1 329 1 265 1 357 1 72 1 364 2 318 1 198 1 179 1 371 1 227 1 125 1 323 1 324 1 83 1 254 1 
329 3 136 3 3 2 284 6 235 2 6 2 48 3 335 10 140 2 142 2 146 2 340 2 101 2 198 8 342 1 59 1 105 3 109 2 24 1 25 2 254 4 347 6 349 1 212 1 306 1 167 4 353 2 69 2 217 1 265 5 71 4 357 4 312 3 311 2 72 5 364 8 318 4 223 1 275 2 78 3 371 6 227 9 182 1 125 12 324 2 374 3 127 2 185 2 83 5 84 3 88 2 134 1 380 2 189 1 
65 1 191 1 67 1 329 1 167 2 353 1 115 1 284 5 6 2 265 1 238 1 357 2 311 2 72 1 361 1 364 5 146 2 318 2 339 1 271 1 223 1 101 2 198 5 275 1 108 1 371 3 109 2 227 8 125 6 25 2 324 2 83 1 254 2 347 5 132 1 
66 1 167 1 353 1 261 1 6 1 10 1 265 1 357 1 311 2 33 1 72 1 120 1 56 1 318 1 57 1 76 1 37 1 101 2 198 2 247 1 77 1 227 2 231 1 254 1 346 1 63 1 164 1 131 1 
318 1 212 1 198 1 342 1 167 1 227 1 324 1 357 1 254 1 364 1 
340 1 101 2 198 5 353 1 284 5 371 5 109 2 6 2 227 5 125 10 25 2 311 2 347 5 364 5 146 2 
324 1 265 1 83 1 72 1 329 1 364 1 
306 2 167 1 329 2 138 1 265 3 71 1 357 2 335 1 312 1 72 3 318 2 223 2 198 2 102 1 105 4 275 2 78 1 226 1 227 2 40 1 374 4 83 4 254 2 84 4 325 1 42 1 134 1 188 1 189 2 
190 1 261 1 354 1 10 2 310 1 30 1 71 1 48 1 312 1 335 1 120 2 14 1 337 1 57 2 37 2 149 1 298 1 105 1 301 1 274 1 77 3 78 1 110 1 277 1 251 1 374 1 130 1 186 2 84 1 208 1 164 3 189 1 
318 1 198 2 223 1 167 1 200 1 284 2 275 1 371 2 227 1 125 4 324 2 357 1 254 1 347 2 364 4 
356 1 1 1 98 1 
356 1 1 1 98 1 
356 1 358 1 50 1 1 1 203 1 
356 1 1 1 98 1 
356 1 184 1 1 1 
356 1 184 1 1 1 
356 1 184 1 1 1 
356 1 1 1 
129 1 100 1 
294 1 190 8 66 1 200 1 298 2 170 1 6 1 110 4 116 3 30 2 236 1 251 2 311 1 130 2 359 4 186 4 293 1 63 1 163 2 131 1 
294 1 244 1 190 6 66 1 200 1 170 1 6 1 110 3 116 2 311 1 359 3 63 1 163 2 131 1 
190 4 298 1 109 1 6 1 110 2 116 2 25 1 30 1 251 1 311 1 130 1 158 1 186 2 359 2 293 1 163 1 146 1 
271 1 191 2 190 7 137 1 109 1 6 1 110 4 116 2 25 1 311 1 359 3 293 1 163 1 132 1 146 1 
190 23 191 2 66 2 170 1 137 1 6 3 116 9 236 2 30 2 240 1 311 3 359 11 219 1 293 4 315 1 146 2 294 1 200 1 298 2 109 2 110 12 25 2 251 2 130 2 186 4 63 2 163 5 131 1 132 2 
190 1 191 1 110 1 
190 1 359 1 132 1 
340 1 190 6 298 1 109 1 6 1 110 3 116 3 30 1 25 1 251 1 311 1 130 1 186 2 158 1 359 3 293 1 163 2 146 1 
65 1 190 12 191 1 67 1 115 1 6 2 116 2 30 1 238 1 311 2 359 6 361 1 293 1 99 1 146 2 271 1 298 1 109 2 110 6 25 2 251 1 130 1 186 2 163 1 132 1 
190 6 66 1 6 1 110 3 116 2 311 1 359 3 63 1 293 1 163 1 131 1 
294 1 190 3 66 1 298 1 170 1 116 2 110 2 236 1 30 1 251 1 240 1 130 1 359 1 186 2 293 1 63 1 163 1 
190 10 66 2 298 1 247 1 6 2 116 5 110 5 30 1 251 1 311 2 130 1 186 2 359 5 63 2 293 2 163 3 131 1 99 1 
190 2 298 1 109 1 116 1 30 1 251 1 311 1 130 1 186 2 359 2 293 1 99 1 
190 4 298 1 109 1 6 1 110 2 116 2 25 1 30 1 251 1 311 1 130 1 186 2 359 2 293 1 163 1 99 1 146 1 
190 3 66 1 298 3 110 2 116 2 236 1 30 3 251 3 240 1 130 3 186 6 359 1 52 1 63 1 293 1 163 1 99 1 
191 4 190 34 66 3 170 1 137 1 6 5 116 12 236 2 30 5 240 1 311 5 359 16 52 1 293 5 55 1 99 1 146 3 294 1 271 1 200 1 104 1 298 5 109 3 110 18 25 3 251 5 229 1 130 5 158 1 186 10 63 3 163 7 131 2 132 3 
294 1 271 1 191 1 190 8 66 1 200 1 298 1 170 1 6 1 116 2 110 4 30 1 251 1 238 1 311 1 130 1 359 4 186 2 63 1 163 2 131 1 132 1 99 1 
190 11 191 2 66 1 170 1 137 1 6 1 116 3 30 2 238 1 311 2 359 6 293 1 99 1 146 1 294 1 271 1 200 1 298 2 109 1 110 5 251 2 130 2 186 4 158 1 63 1 163 2 131 1 132 1 
65 1 190 19 191 1 66 1 67 1 115 1 170 1 6 3 116 4 30 3 236 1 238 1 311 3 359 9 361 1 293 1 99 1 146 2 294 1 271 1 200 1 298 3 109 2 110 10 25 2 251 3 130 3 158 1 186 6 63 1 163 3 131 1 132 1 
65 1 190 17 191 1 66 1 67 1 115 1 170 1 6 2 116 5 236 1 30 3 238 1 311 3 359 10 361 1 293 2 99 1 146 2 294 1 271 1 200 1 298 3 109 2 110 7 25 1 251 3 130 3 158 1 186 6 63 1 163 3 131 1 132 1 
294 1 271 1 191 1 190 8 66 1 200 1 298 1 170 1 6 1 116 2 110 4 30 1 251 1 238 1 311 1 130 1 359 4 186 2 63 1 163 2 131 1 132 1 99 1 
65 1 190 12 191 1 67 1 115 1 6 2 116 2 30 1 238 1 311 2 359 6 361 1 293 1 99 1 146 2 271 1 298 1 109 2 110 6 25 2 251 1 130 1 186 2 163 1 132 1 
65 1 190 18 191 1 66 1 67 1 115 1 170 1 6 2 116 5 30 4 236 2 238 1 311 3 359 10 361 1 293 2 99 1 146 2 294 1 271 1 200 1 298 4 109 2 110 8 25 1 251 4 130 4 158 1 186 8 63 1 163 3 131 1 132 1 
65 1 190 16 191 1 67 1 115 1 6 2 116 6 30 4 236 2 238 1 311 3 359 9 52 1 361 1 293 3 99 1 146 3 271 1 298 4 109 3 110 7 25 2 251 4 130 4 186 8 163 3 132 1 
294 1 190 7 66 3 170 2 6 1 110 4 116 6 311 1 359 3 63 3 293 3 163 3 131 1 
65 1 190 18 191 1 66 1 67 1 115 1 170 1 6 2 116 4 30 4 236 2 238 1 311 3 359 10 52 1 361 1 293 1 99 1 146 2 294 1 271 1 200 1 298 4 109 2 110 8 25 1 251 4 130 4 186 8 63 1 163 3 131 1 132 1 
106 1 260 1 301 1 267 1 77 1 164 1 10 1 
260 1 106 1 301 1 77 1 5 1 9 1 10 1 233 1 292 1 267 1 164 1 165 1 
71 1 244 1 374 1 335 1 312 1 84 1 42 1 105 1 78 1 226 1 189 1 
57 1 105 1 301 1 77 2 78 1 10 1 310 1 277 1 48 1 71 1 374 1 335 1 312 1 12 1 84 1 120 1 164 2 189 1 
306 1 3 1 10 2 235 1 310 1 71 1 48 2 12 1 312 2 335 3 32 1 33 1 120 1 57 2 105 1 301 1 77 2 78 1 277 1 343 1 374 1 84 1 164 2 
306 1 3 1 262 1 10 2 235 1 310 1 71 1 48 2 12 1 312 2 335 3 32 1 33 1 120 1 57 2 105 2 301 1 77 2 78 1 343 1 374 2 84 2 206 1 164 2 
306 1 331 1 136 1 105 3 3 1 262 1 78 1 235 1 324 1 265 2 48 1 183 1 71 1 374 3 127 1 312 1 335 4 83 1 72 2 84 3 142 1 364 1 189 1 
306 1 136 1 105 3 3 1 262 1 78 1 235 1 324 1 265 2 48 1 71 1 374 3 127 1 312 1 335 4 140 1 83 1 72 2 84 3 142 1 364 1 189 1 
71 1 374 1 84 1 105 1 257 1 78 1 
59 1 105 1 78 1 239 1 374 1 344 1 48 1 71 2 312 1 335 1 84 1 18 1 189 1 
190 6 10 1 6 1 48 1 12 1 335 1 14 1 57 1 294 1 149 2 200 1 298 2 105 1 301 2 152 1 250 1 110 3 251 2 208 1 63 1 163 2 164 2 305 1 27 1 213 1 66 1 354 2 170 1 310 1 116 2 217 1 30 2 71 1 312 1 311 1 359 3 120 1 36 1 181 1 77 2 78 1 277 1 374 1 130 2 186 4 84 1 131 1 
212 1 167 2 329 1 136 1 285 1 69 1 265 3 357 2 335 2 140 1 72 3 142 1 364 1 318 2 198 1 342 1 105 1 227 1 324 1 374 1 127 1 185 1 83 2 254 2 84 1 134 1 189 1 380 1 
59 1 105 2 78 1 182 1 217 1 127 1 374 2 48 1 71 2 312 1 335 2 84 2 257 1 
105 4 262 1 78 1 226 1 217 1 71 1 374 4 252 1 312 1 335 1 84 4 42 1 189 1 
105 1 225 1 78 1 333 1 239 1 374 1 48 1 71 2 312 1 335 1 84 1 62 1 18 1 
71 1 147 1 374 1 84 1 105 1 327 1 78 1 270 1 373 1 189 1 
351 1 217 1 71 1 374 2 335 1 312 1 84 2 105 2 78 1 263 1 365 1 
306 1 105 4 300 1 29 1 78 2 226 1 263 1 217 1 374 5 71 2 252 1 312 2 335 3 84 5 42 1 189 1 
306 1 105 4 300 1 78 2 226 1 263 1 217 1 374 5 71 2 252 1 289 1 312 2 335 3 84 5 42 1 189 1 
57 1 105 1 301 1 77 2 78 1 10 1 310 1 48 1 71 1 374 1 335 1 312 1 12 1 84 1 206 1 120 1 164 2 189 1 
306 1 59 1 105 1 78 1 239 1 374 1 344 1 48 1 71 2 312 1 335 1 84 1 18 1 
148 1 135 1 314 1 376 1 53 1 77 1 164 1 10 1 205 1 
75 1 319 1 376 1 
135 1 328 1 301 1 376 1 205 1 
75 1 319 1 135 2 0 1 328 2 301 1 302 1 285 1 343 1 205 2 324 1 265 2 32 1 33 1 72 2 142 1 376 1 364 1 338 1 
237 1 244 1 234 1 309 1 
237 1 234 1 20 1 308 1 316 1 363 1 309 1 
193 1 308 1 209 1 
58 1 234 1 297 1 20 3 308 3 309 1 237 1 313 1 187 1 51 2 316 1 363 1 
237 1 234 1 20 2 299 1 308 2 303 1 316 1 363 1 309 1 
234 1 20 1 187 1 327 1 332 1 308 1 316 1 363 1 270 1 249 1 278 1 
234 1 20 1 187 1 308 1 316 1 363 1 309 1 
237 1 20 1 187 1 308 1 316 1 363 1 309 2 
118 1 234 1 20 2 187 1 97 1 308 2 316 2 45 1 363 2 309 1 
234 2 320 1 20 3 299 2 308 3 276 1 309 1 249 1 126 1 237 1 187 1 316 1 363 1 
177 1 234 1 20 2 299 1 308 2 309 1 373 1 278 1 237 1 187 1 327 1 316 1 350 1 363 1 270 2 
234 2 320 1 20 4 299 2 308 4 309 1 249 1 237 1 111 1 187 1 316 2 303 1 363 2 
237 1 234 1 20 1 187 1 308 1 316 1 363 1 309 1 
58 1 234 3 320 1 20 4 299 2 93 1 308 4 309 2 249 1 237 2 313 1 51 1 316 1 363 1 
237 1 119 1 234 1 20 2 187 1 299 1 336 1 308 2 316 1 114 1 363 1 309 1 
58 1 234 1 20 3 308 3 309 1 237 1 313 2 187 1 51 2 256 1 316 1 363 1 
234 2 197 2 17 1 154 1 
369 1 20 1 187 1 308 1 316 1 363 1 
237 1 234 1 20 2 187 1 299 1 308 2 316 1 363 1 276 1 309 1 
22 1 
237 1 234 1 20 1 187 1 308 1 316 1 363 1 309 1 
237 1 234 1 51 1 20 3 187 1 299 1 308 3 316 1 363 1 276 1 309 1 
234 1 320 1 93 1 249 1 
234 1 309 1 

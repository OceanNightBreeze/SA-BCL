#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 235 343 66 93 295 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 235 343 66 93 295 189 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 235 343 66 93 295 189 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 235 343 66 93 295 189 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 172 66 93 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 235 343 66 93 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7926 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2905 | stmt -> ;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
199 2 198 1 339 9 123 2 254 1 280 1 52 2 322 1 5 1 282 6 232 3 324 1 174 1 76 2 36 1 78 2 80 1 369 4 79 5 216 1 371 2 12 1 328 1 269 1 291 9 46 1 245 2 192 1 
199 2 198 1 339 9 123 2 254 1 280 1 52 2 322 1 5 1 282 6 232 3 324 1 174 1 76 2 36 1 78 2 80 1 369 4 79 5 216 1 371 2 12 1 328 1 269 1 291 9 46 1 245 2 192 1 
199 2 198 1 339 10 123 2 254 1 280 1 52 2 322 1 5 1 282 7 232 4 324 1 174 1 76 2 36 1 78 2 80 1 369 5 79 6 216 1 371 2 12 1 328 1 269 1 291 10 46 1 245 2 192 1 
199 2 198 1 339 7 123 1 254 1 280 1 52 2 322 1 5 1 282 4 232 2 324 1 174 1 76 2 78 2 80 1 369 3 79 4 216 1 371 2 12 1 328 1 269 1 291 7 46 1 245 2 192 1 
78 1 199 1 80 1 216 1 369 2 79 3 339 4 123 2 328 1 254 1 52 1 282 3 232 1 291 4 46 1 245 1 76 1 36 1 
78 1 79 1 80 1 371 1 12 1 339 2 254 1 52 1 322 1 27 1 291 2 354 1 46 1 245 1 76 1 356 1 
78 2 198 1 80 1 369 1 79 2 371 1 339 3 254 1 282 1 232 1 291 3 46 1 76 2 
198 1 199 1 339 9 123 2 2 1 254 1 52 1 282 7 232 3 53 1 174 1 76 2 36 1 78 2 80 1 369 4 79 5 216 1 371 1 328 1 291 9 46 1 245 1 192 1 
198 1 199 1 339 9 123 2 2 1 254 1 52 1 282 7 232 3 53 1 174 1 76 2 36 1 78 2 80 1 369 4 79 5 216 1 371 1 328 1 291 9 46 1 245 1 192 1 
73 1 212 1 321 1 
18 1 158 2 212 1 
127 2 374 2 274 2 338 2 117 1 95 1 263 2 359 2 
197 1 0 1 337 1 68 1 338 2 95 1 69 1 277 1 320 1 359 2 142 1 171 2 127 3 365 1 233 1 148 1 260 2 263 2 175 1 176 2 213 1 266 1 11 1 349 1 372 1 268 2 136 1 113 1 242 1 243 1 115 1 374 3 292 1 274 2 117 1 293 1 160 2 
127 1 374 1 274 1 338 1 117 1 125 1 263 1 220 1 359 1 104 1 
49 1 165 1 220 1 313 1 99 1 127 1 374 1 274 1 234 1 118 1 73 1 261 1 224 1 212 1 
49 2 165 1 338 1 359 1 220 1 313 2 99 1 127 1 374 1 274 1 118 1 73 1 263 1 224 1 212 1 
49 1 135 1 345 1 86 1 313 1 
132 1 49 2 345 1 179 1 73 1 86 1 313 2 212 1 
49 1 86 1 313 1 
49 1 338 1 125 1 220 1 313 1 359 1 127 1 374 1 345 1 274 1 117 1 34 1 263 1 104 1 
212 1 
132 1 49 2 345 1 73 1 86 1 313 2 325 1 212 1 
132 1 49 5 90 1 298 2 327 1 360 1 313 5 255 1 143 1 101 2 54 1 223 1 345 2 147 1 73 1 86 2 48 2 88 1 212 1 
95 1 321 1 
228 1 338 1 95 2 359 1 362 1 127 2 374 2 274 2 263 1 
8 1 3 1 194 1 
197 1 95 1 268 1 136 1 277 1 242 1 171 1 115 1 127 1 374 1 233 1 292 1 293 1 175 1 160 1 58 1 
336 1 127 3 374 3 274 3 338 3 95 1 263 3 359 1 
127 1 374 1 274 1 338 1 125 1 263 1 220 1 
228 1 362 1 127 1 374 1 274 1 338 1 263 1 220 1 359 1 
49 1 336 1 197 1 165 1 68 1 338 3 95 1 277 1 320 1 359 2 142 1 99 1 362 1 171 1 127 4 233 1 148 1 260 1 175 1 263 3 176 2 213 1 266 1 11 1 59 1 349 1 136 1 268 1 220 1 313 1 113 1 242 1 351 1 243 1 115 1 374 4 292 1 274 3 117 1 293 1 118 1 246 1 224 1 160 1 
161 1 336 1 127 2 374 2 274 2 338 1 95 1 234 1 263 1 
49 1 336 2 133 1 59 1 165 1 338 3 359 1 313 1 220 1 99 1 362 1 127 3 374 3 274 3 118 1 246 1 224 1 263 3 212 1 
362 1 336 1 127 2 374 2 274 2 338 2 3 1 263 2 359 1 194 1 
197 1 95 1 268 1 136 1 277 1 242 1 171 1 115 1 127 1 374 1 233 1 292 1 293 1 175 1 160 1 
197 1 95 1 268 1 136 1 186 1 171 1 115 1 17 1 127 1 374 1 233 1 292 1 293 1 175 1 160 1 
105 1 151 1 8 2 214 1 213 1 106 1 266 1 1 1 349 2 230 1 3 2 320 1 243 1 142 1 187 1 365 2 44 1 148 1 260 4 305 1 235 1 194 2 176 2 248 1 
127 1 374 1 274 1 338 1 118 1 263 1 378 1 220 1 
336 1 197 1 59 1 338 1 136 1 268 1 277 1 242 1 115 1 171 1 127 2 374 2 233 1 292 1 274 1 293 1 175 1 263 1 160 1 194 1 
161 1 336 2 59 1 338 4 95 1 359 1 362 1 127 5 353 1 374 5 274 5 234 1 263 4 306 1 
127 2 374 2 274 2 338 2 378 1 125 1 263 2 220 1 
56 1 130 1 
56 1 130 1 
350 1 38 1 
350 1 38 1 
350 1 38 1 
56 1 116 1 130 1 
249 1 56 1 130 1 
215 1 56 2 350 1 38 1 278 1 130 2 
56 1 116 1 130 1 
56 1 116 1 130 1 
56 1 259 1 130 1 
56 1 259 1 130 1 
56 1 259 1 130 1 
77 1 49 2 215 1 91 2 153 1 240 1 318 2 183 1 361 1 313 2 4 1 352 2 330 2 71 3 56 2 210 1 31 2 130 2 212 1 
49 1 195 1 249 1 91 1 338 2 318 1 95 1 4 1 71 1 281 1 208 1 127 2 56 1 323 1 31 1 263 2 130 1 313 1 352 1 374 2 274 2 139 1 140 1 296 1 
199 1 245 1 52 1 
354 1 245 1 52 1 
177 1 199 2 65 1 354 1 245 3 221 1 
177 1 199 1 65 1 354 1 245 2 342 1 
177 1 199 1 65 2 354 1 245 2 
49 5 250 1 298 1 340 1 341 1 343 1 281 1 101 1 72 1 323 1 345 4 147 1 73 1 235 1 212 2 308 1 132 1 106 1 327 3 180 2 311 1 313 5 40 2 187 1 18 1 158 3 86 1 379 2 48 1 88 2 296 1 248 1 
49 9 21 1 298 2 340 1 341 2 343 3 204 1 281 4 302 1 101 2 257 1 54 1 345 7 147 1 73 1 235 3 236 1 212 5 132 1 106 3 135 5 327 8 182 1 180 6 311 2 313 9 187 3 18 3 64 5 158 9 86 6 379 6 48 2 88 6 248 3 
49 3 250 1 298 1 341 1 343 1 281 1 101 1 72 1 54 1 345 2 73 1 235 1 212 3 106 1 327 3 180 2 311 1 313 3 40 1 187 1 18 2 158 4 48 1 379 2 88 2 248 1 
49 4 21 1 250 1 298 1 341 1 343 2 204 1 281 2 302 1 101 1 72 1 54 1 345 3 73 1 235 2 212 4 106 2 327 5 180 4 311 1 313 4 40 2 187 2 18 3 158 7 379 4 48 1 88 4 248 2 
310 1 233 1 321 1 
233 1 19 1 
167 1 
233 1 292 1 
310 2 326 1 233 3 292 1 293 1 227 1 
233 1 292 1 293 1 
233 1 276 1 
105 3 309 1 106 1 214 2 122 1 349 3 370 1 299 1 363 1 209 1 102 1 365 4 376 1 260 7 335 2 120 1 248 1 
105 3 309 1 106 1 214 2 122 1 349 3 370 1 299 1 363 1 209 1 102 1 365 4 376 1 260 7 335 2 120 1 248 1 
105 3 309 1 106 1 214 2 122 1 349 3 370 1 299 1 363 1 209 1 102 1 365 4 375 1 376 1 260 7 335 2 120 1 248 1 
229 3 122 1 319 1 202 1 343 3 299 2 142 1 170 4 363 1 102 1 209 2 173 1 365 16 366 1 7 1 148 1 260 31 235 3 176 2 264 1 105 10 309 1 106 4 214 5 213 1 370 2 349 15 289 1 243 1 187 3 376 5 335 3 120 2 248 4 
299 1 142 2 209 1 102 1 363 1 365 5 148 2 260 9 176 4 264 1 105 4 309 1 106 1 213 2 214 3 349 4 370 1 243 2 294 1 376 1 334 1 335 2 120 1 248 1 
199 1 297 1 339 2 25 1 254 1 203 1 52 1 282 1 171 1 144 1 175 1 76 1 78 1 368 1 79 1 80 1 371 1 268 1 219 1 221 1 14 1 115 1 157 1 291 2 354 1 46 1 245 2 332 1 377 1 160 1 
199 1 339 3 70 1 25 1 52 1 171 1 282 2 144 1 175 1 76 1 78 1 368 1 79 1 80 1 371 1 60 1 268 1 219 1 221 1 14 1 43 1 115 1 157 1 291 3 354 1 46 1 245 2 332 1 377 1 160 1 
199 1 339 2 70 1 25 1 52 1 171 1 282 2 175 1 368 1 79 1 80 1 371 1 268 1 219 1 221 1 14 1 43 1 115 1 157 1 291 2 354 1 46 1 245 2 332 1 160 1 
67 1 197 1 163 1 162 1 339 1 25 2 171 1 55 1 233 1 175 1 76 1 78 1 368 2 371 2 82 1 60 1 287 1 268 1 219 2 115 1 291 1 292 1 160 1 
199 1 339 1 25 1 254 1 203 1 52 1 171 1 144 1 175 1 76 1 78 1 368 1 371 1 268 1 219 1 221 1 14 1 43 1 115 1 157 1 291 1 354 1 245 2 332 1 377 1 160 1 
128 1 
49 5 197 2 298 1 206 2 99 1 101 1 258 2 55 1 57 1 147 1 146 1 304 4 261 1 347 1 212 2 265 2 9 1 217 1 268 2 311 1 313 5 220 1 115 1 315 2 18 2 158 2 274 1 118 1 224 1 160 2 226 1 165 1 166 1 279 1 231 1 171 2 29 1 127 1 233 1 234 1 73 1 35 1 175 1 132 3 239 1 327 2 287 1 288 2 41 2 374 1 292 1 333 2 86 6 48 1 88 2 
49 3 165 1 99 1 231 1 29 1 127 1 234 1 304 2 261 1 325 1 132 1 9 1 217 1 313 3 220 1 374 1 274 1 118 1 333 1 224 1 86 2 226 1 
49 3 165 1 99 1 231 1 29 1 127 1 234 1 304 3 73 1 261 1 325 1 212 1 132 1 9 1 217 1 313 3 220 1 41 1 374 1 274 1 118 1 86 1 224 1 226 1 
49 3 165 1 99 1 231 1 29 1 127 1 234 1 304 3 73 1 261 1 325 1 212 1 132 1 9 1 217 1 288 1 313 3 220 1 41 1 374 1 274 1 118 1 333 1 224 1 86 2 226 1 
49 5 298 1 201 1 206 2 99 1 101 1 303 1 258 2 57 1 147 1 146 1 304 6 261 1 212 5 265 2 9 1 217 1 267 1 220 1 313 5 18 2 315 2 274 1 118 1 224 1 226 1 165 1 231 1 29 1 127 1 234 1 73 5 325 1 132 3 81 1 327 1 288 4 41 4 374 1 333 4 86 7 48 1 87 1 88 1 
49 4 298 1 206 2 99 1 101 1 258 2 57 1 146 1 147 1 304 4 261 1 212 2 265 2 9 1 217 1 220 1 313 4 18 2 315 2 274 1 158 2 118 1 224 1 226 1 165 1 166 1 231 1 29 1 127 1 234 1 73 1 132 2 327 1 288 2 41 2 374 1 333 2 86 4 48 1 88 1 
49 4 165 1 298 1 206 2 99 1 231 1 29 1 101 1 127 1 258 2 57 1 146 1 234 1 147 1 73 1 304 4 261 1 212 1 132 2 265 2 9 1 217 1 81 1 327 1 267 1 288 2 313 4 220 1 41 2 315 2 18 2 374 1 274 1 118 1 333 2 86 4 224 1 87 1 48 1 88 1 226 1 
49 4 165 1 298 1 206 2 99 1 231 1 29 1 101 1 127 1 258 2 57 1 146 1 234 1 147 1 73 1 304 4 261 1 212 1 132 2 265 2 9 1 217 1 81 1 327 1 267 1 288 2 313 4 220 1 41 2 315 2 18 2 374 1 274 1 118 1 333 2 86 4 224 1 87 1 48 1 88 1 226 1 
49 4 165 1 298 1 206 2 99 1 231 1 29 1 101 1 127 1 57 1 234 1 147 1 73 1 304 4 261 1 237 1 74 1 212 1 132 2 265 2 9 1 217 1 327 1 288 2 313 4 220 1 270 1 41 2 374 1 191 2 158 2 274 1 118 1 333 2 86 4 224 1 193 2 87 1 48 1 88 1 226 1 
49 4 165 1 298 1 206 2 99 1 231 1 101 1 29 1 127 1 303 1 258 2 57 1 146 1 147 1 234 1 73 1 304 5 261 1 212 1 132 2 265 2 9 1 81 1 217 1 327 1 267 1 288 3 313 4 220 1 41 3 315 2 18 2 374 1 274 1 118 1 333 3 224 1 86 5 87 1 48 1 88 1 226 1 
49 4 165 1 298 1 206 2 99 1 231 1 101 1 29 1 127 1 303 1 258 2 57 1 146 1 147 1 234 1 73 1 304 5 261 1 212 1 132 2 265 2 9 1 81 1 217 1 327 1 267 1 288 3 313 4 220 1 41 3 315 2 18 2 374 1 274 1 118 1 333 3 224 1 86 5 87 1 48 1 88 1 226 1 
49 4 298 1 206 2 99 1 101 1 57 1 147 1 304 4 261 1 212 1 265 2 9 1 217 1 220 1 313 4 274 1 158 2 118 1 224 1 226 1 165 1 166 1 231 1 29 1 127 1 234 1 73 1 74 1 132 2 327 1 288 2 41 2 374 1 191 2 333 2 86 4 48 1 193 2 88 1 
95 2 3 1 299 1 320 1 321 1 142 1 102 1 363 1 365 3 148 1 305 1 260 6 176 2 105 2 309 1 8 1 213 1 214 2 106 1 266 1 370 1 349 3 243 1 194 1 335 1 248 1 
229 3 337 1 68 1 95 1 24 1 202 1 343 2 124 1 3 4 320 2 170 3 142 2 301 1 173 1 365 8 33 1 148 2 260 14 235 2 176 4 105 2 8 11 214 1 213 2 106 1 266 1 349 6 243 2 15 1 187 1 376 1 194 11 248 2 
197 1 336 1 68 1 337 1 338 1 95 1 277 1 3 1 320 1 142 1 171 1 127 2 365 1 233 1 33 1 148 1 260 2 175 1 263 1 307 1 176 2 58 1 213 1 266 1 59 1 349 1 136 1 268 1 329 1 242 1 243 1 115 1 374 2 292 1 274 1 293 1 119 1 160 1 
197 1 336 1 337 1 338 1 95 2 96 2 343 2 299 1 97 2 3 7 142 3 102 1 148 3 260 20 263 1 105 8 309 1 8 7 214 4 106 3 213 3 266 3 59 1 11 2 349 10 348 2 218 1 268 3 115 2 274 1 159 1 160 3 68 1 277 2 320 3 171 3 363 1 127 3 365 10 233 2 33 1 175 2 235 2 176 6 370 1 181 1 136 2 242 2 243 3 43 1 187 2 374 3 138 2 292 2 293 2 376 4 335 1 194 7 248 3 
336 1 197 2 141 1 297 1 337 1 68 1 94 1 338 1 69 2 320 2 142 2 171 7 127 1 365 1 55 1 233 3 32 1 148 2 305 1 260 2 129 1 263 1 175 2 285 1 176 4 213 2 266 2 349 1 287 1 268 8 243 2 43 1 115 2 374 1 373 1 274 1 292 2 160 8 247 1 
338 1 343 1 3 1 320 1 359 1 142 1 362 1 127 1 365 1 33 1 148 1 260 3 263 1 235 1 176 2 75 1 105 1 8 1 214 1 213 1 106 1 266 1 349 2 243 1 187 1 374 1 274 1 194 1 248 1 
105 1 8 1 213 1 266 1 1 1 3 1 320 1 243 1 142 1 365 2 148 1 376 1 260 2 305 1 235 1 194 1 176 2 248 1 
105 1 151 1 8 1 214 1 213 1 106 1 266 1 349 2 3 1 320 1 243 1 142 1 187 1 148 1 260 2 305 1 194 1 176 2 
343 1 3 2 320 1 142 1 365 2 148 1 305 1 260 4 235 1 176 2 105 2 8 2 213 1 106 1 214 1 266 1 349 2 243 1 187 1 376 1 194 2 248 1 
105 1 8 1 213 1 266 1 1 1 3 1 320 1 243 1 142 1 365 2 148 1 376 1 260 2 285 1 235 1 194 1 176 2 248 1 
105 1 151 1 8 1 214 1 213 1 106 1 266 1 349 2 3 1 320 1 243 1 142 1 187 1 148 1 260 2 285 1 194 1 176 2 
343 1 3 2 320 1 142 1 365 2 148 1 260 4 235 1 285 1 176 2 105 2 8 2 213 1 106 1 214 1 266 1 349 2 243 1 187 1 376 1 194 2 248 1 
343 1 3 2 320 1 142 1 365 2 148 1 260 4 235 1 176 2 105 2 8 2 213 1 106 1 214 1 266 1 349 2 243 1 187 1 376 1 194 2 248 1 
197 1 337 1 68 1 95 1 277 1 320 1 142 1 171 1 127 1 365 1 233 1 148 1 260 2 175 1 176 2 213 1 266 1 11 1 349 1 136 1 268 1 242 1 243 1 115 1 374 1 292 1 293 1 160 1 
197 1 337 1 68 1 95 1 320 1 142 1 171 1 127 1 365 1 233 1 148 1 260 2 175 1 176 2 213 1 266 1 349 1 136 1 268 1 186 1 243 1 115 1 17 1 188 1 374 1 292 1 293 1 160 1 
343 1 3 2 320 1 142 1 365 2 33 1 148 1 260 4 235 1 176 2 105 2 8 2 213 1 106 1 214 1 266 1 349 2 243 1 187 1 376 1 194 2 248 1 
297 1 96 1 343 1 3 2 277 1 320 1 142 1 171 1 127 1 365 2 233 1 148 1 260 4 175 1 235 1 176 2 105 2 8 2 214 1 106 1 213 1 266 1 11 1 349 2 136 1 268 1 242 1 243 1 115 1 187 1 374 1 292 1 293 1 376 1 160 1 194 2 248 1 
338 1 343 1 3 1 320 1 359 1 142 1 207 1 362 1 127 1 365 2 33 1 148 1 260 3 263 1 235 1 176 2 105 1 8 1 106 1 213 1 266 1 349 1 243 1 187 1 374 1 274 1 376 1 194 1 248 1 
229 1 202 1 343 3 170 2 142 2 26 1 173 1 365 9 148 2 260 19 235 3 238 2 176 4 105 6 214 3 213 2 106 3 152 1 349 10 111 1 241 2 243 2 156 1 187 3 189 1 244 1 295 1 376 3 334 1 248 3 
229 2 93 1 343 2 142 2 170 2 172 1 344 1 365 9 173 2 148 2 260 17 235 2 264 1 238 2 176 4 105 1 214 1 106 1 213 2 349 8 111 1 243 2 42 1 187 1 189 1 244 2 295 2 66 1 334 1 248 2 
229 3 93 1 202 1 343 4 168 1 170 4 142 3 172 1 344 1 173 3 365 15 148 3 260 30 235 4 264 1 238 3 176 6 105 4 214 2 213 3 106 3 152 1 349 15 111 1 241 1 243 3 42 1 156 1 187 3 189 1 244 2 295 1 66 1 376 2 334 1 248 4 
229 3 93 1 202 1 343 4 168 1 170 4 142 3 172 1 344 1 173 3 365 15 148 3 260 30 235 4 264 1 238 3 176 6 105 5 214 3 213 3 106 3 152 1 349 15 111 1 241 1 243 3 42 1 156 1 187 3 189 1 244 2 295 1 66 1 376 2 334 1 248 4 
229 4 93 1 24 2 202 2 343 6 299 1 170 4 142 1 363 1 102 1 172 1 344 1 173 2 365 22 148 1 260 41 235 6 238 2 176 2 105 10 309 1 214 6 213 1 106 6 370 1 349 19 111 1 243 1 42 1 187 5 189 1 244 1 295 1 66 1 376 4 334 1 335 1 248 7 
215 1 109 1 56 1 91 1 210 1 31 1 318 1 361 1 352 1 130 1 
249 1 139 1 
37 1 23 1 56 1 91 1 222 1 31 1 318 1 352 1 130 1 
49 1 215 1 91 1 153 1 240 1 318 1 183 1 361 1 4 1 313 1 352 1 330 1 71 2 56 1 210 1 31 1 130 1 212 1 
49 1 215 1 91 1 153 1 240 1 318 1 183 1 361 1 4 1 313 1 352 1 330 1 71 2 56 1 210 1 31 1 130 1 212 1 
49 1 215 1 91 1 153 1 240 1 318 1 183 1 361 1 4 1 313 1 352 1 330 1 71 2 56 1 210 1 31 1 130 1 212 1 
63 1 116 1 278 1 
63 1 116 1 278 1 
178 1 259 1 
178 1 259 1 278 1 
208 1 140 1 
49 1 195 1 249 1 91 1 338 2 318 1 95 1 28 1 71 1 281 1 208 1 127 2 56 1 323 1 345 1 31 1 263 2 130 1 183 1 313 1 352 1 330 1 374 2 274 2 139 1 140 1 296 1 
63 1 116 1 
178 1 259 1 278 1 
121 1 337 1 68 1 69 2 320 1 169 1 142 1 171 2 127 2 145 1 365 1 233 1 33 1 148 1 260 2 175 1 129 1 176 2 286 1 213 1 266 1 349 1 268 2 243 1 115 1 290 1 374 2 373 1 292 1 274 2 160 2 
199 1 368 1 297 1 50 1 92 1 268 2 51 1 52 1 221 1 14 1 115 1 43 1 171 2 144 1 157 1 354 1 245 2 175 1 160 2 
199 1 368 1 268 1 51 1 358 1 52 1 221 1 14 1 43 1 171 1 144 1 115 1 157 1 354 1 245 2 175 1 160 1 
67 1 197 1 368 1 50 1 287 1 268 1 98 1 115 1 171 1 55 1 233 1 292 1 175 1 160 1 
199 1 368 1 50 1 92 1 268 1 51 1 52 1 221 1 14 1 115 1 43 1 171 1 144 1 157 1 354 1 245 2 175 1 160 1 
252 1 
223 1 327 1 73 1 360 1 88 1 212 1 321 1 
49 1 298 1 101 1 258 1 146 1 147 1 73 1 212 2 132 1 327 1 313 1 18 1 315 1 158 1 86 1 48 1 88 1 
49 5 197 1 297 1 298 4 343 2 97 2 6 2 101 4 147 4 346 2 347 1 212 8 310 2 106 2 108 1 268 3 311 2 313 5 62 1 115 4 273 2 314 2 18 6 223 1 275 2 158 12 355 1 224 2 19 3 160 3 22 1 276 2 360 1 171 3 30 2 233 10 73 2 175 3 235 2 132 3 326 1 327 9 180 6 187 2 190 2 45 1 292 3 293 3 47 2 86 5 48 4 379 6 88 8 248 2 
49 1 229 2 196 1 298 2 93 1 202 1 24 1 343 3 170 2 101 2 172 1 344 1 173 1 147 2 73 1 235 3 346 3 212 6 132 1 106 3 327 10 180 7 313 1 42 1 187 3 18 7 158 12 66 1 86 1 379 7 48 2 88 6 248 3 
49 1 298 1 338 1 299 1 125 1 357 1 359 1 101 1 363 1 127 1 147 1 34 1 263 1 346 2 104 1 106 1 81 1 370 1 327 2 220 1 313 1 374 1 274 1 117 1 47 1 48 1 88 2 248 2 
298 1 327 1 360 1 101 1 223 1 147 1 73 1 48 1 88 1 212 1 
106 2 327 5 343 2 180 5 97 1 187 2 18 5 158 10 47 1 235 2 379 5 346 2 88 5 248 2 212 5 
132 1 49 1 73 1 86 1 313 1 212 1 
49 3 197 2 22 1 298 2 101 2 171 4 54 1 55 1 233 1 147 1 367 1 103 1 175 1 35 1 347 2 132 2 239 1 327 2 287 1 268 4 311 2 313 3 115 1 292 1 355 2 86 4 48 2 160 4 88 2 
197 1 68 1 338 2 95 1 277 1 320 1 359 2 142 1 171 1 127 3 233 1 148 1 260 1 263 2 175 1 176 2 213 1 266 1 11 1 349 1 268 1 136 1 113 1 242 1 243 1 115 1 374 3 274 2 292 1 117 1 293 1 160 1 
298 1 327 1 180 2 311 1 101 1 18 2 158 4 147 1 73 2 379 2 48 1 335 1 88 2 347 1 212 4 
31 1 39 1 352 1 
208 1 210 1 31 1 352 1 137 1 
31 1 39 1 352 1 
31 1 39 1 352 1 
31 1 284 1 352 1 
31 1 284 1 352 1 
31 1 284 1 352 1 
31 1 352 1 
56 1 130 1 
105 3 309 1 106 1 214 2 213 2 349 4 370 1 299 1 243 2 142 2 363 1 102 1 365 4 148 2 260 8 376 1 335 1 176 4 264 1 248 1 
105 2 309 1 214 2 106 1 349 3 370 1 299 1 321 1 102 1 363 1 365 3 260 6 335 1 248 1 
105 2 214 1 106 1 213 1 349 2 343 1 243 1 142 1 187 1 256 1 365 2 148 1 260 4 376 1 235 1 176 2 248 1 
105 2 229 1 214 1 106 1 349 4 202 1 343 1 170 2 187 1 173 1 365 3 260 7 376 1 235 1 248 1 
229 2 202 1 24 1 343 2 299 2 170 2 142 2 300 1 363 1 102 1 365 11 148 2 260 23 235 2 264 2 176 4 105 9 309 1 106 3 214 5 213 2 370 2 349 12 243 2 15 1 187 2 376 4 335 1 248 3 
349 1 260 1 170 1 
229 1 365 1 260 1 
105 3 213 1 106 1 214 2 349 3 343 1 97 1 243 1 142 1 256 1 187 1 365 3 148 1 260 6 376 1 235 1 176 2 248 1 
105 1 229 1 214 1 106 1 213 1 349 4 93 1 343 2 243 1 42 1 142 1 170 1 172 1 187 1 344 1 365 6 173 1 148 1 66 1 260 10 334 1 235 2 176 2 248 2 
105 2 214 1 106 1 363 1 365 3 370 1 349 3 376 1 299 1 260 6 248 1 
105 2 309 1 214 1 213 1 370 1 349 2 299 1 243 1 300 1 142 1 102 1 365 1 148 1 376 1 260 3 264 1 176 2 
105 5 213 1 214 3 106 2 370 2 349 5 299 2 357 1 243 1 142 1 363 1 365 5 148 1 376 2 260 10 334 1 176 2 248 2 
105 1 213 1 243 1 142 1 365 2 148 1 260 2 376 1 334 1 235 1 176 2 248 1 
105 2 214 1 106 1 213 1 349 2 343 1 243 1 142 1 187 1 365 2 148 1 260 4 376 1 334 1 235 1 176 2 248 1 
105 2 213 3 214 1 349 2 370 1 299 1 243 3 300 1 142 3 156 1 365 1 148 3 260 3 376 1 334 1 264 1 176 6 
229 3 319 1 202 1 343 3 299 3 300 1 170 4 142 5 363 2 102 1 256 1 173 1 365 16 366 1 148 5 260 34 235 3 264 2 176 10 105 12 309 1 213 5 106 5 214 7 370 3 349 18 289 1 243 5 156 1 187 3 376 5 334 1 335 1 248 5 
229 1 93 1 299 1 170 1 142 1 102 1 363 1 173 1 365 4 148 1 260 8 176 2 105 2 309 1 106 1 213 1 214 2 349 4 370 1 243 1 334 1 335 1 248 1 
229 1 93 1 202 1 343 1 299 1 170 2 142 2 363 1 102 1 256 1 173 1 365 6 148 2 260 11 235 1 176 4 105 3 309 1 106 1 214 2 213 2 370 1 349 5 243 2 376 1 334 1 335 1 248 2 
229 1 93 1 343 2 170 1 142 2 172 1 344 1 173 1 365 6 148 2 260 11 235 2 176 4 264 1 105 1 213 2 106 1 214 1 349 5 243 2 42 1 187 1 66 1 334 1 248 2 
105 1 229 1 214 1 106 1 213 1 349 4 93 1 343 2 243 1 42 1 142 1 170 1 172 1 187 1 344 1 365 6 173 1 148 1 66 1 260 10 334 1 235 2 176 2 248 2 
229 1 93 1 299 1 170 1 142 1 102 1 363 1 173 1 365 4 148 1 260 8 176 2 105 2 309 1 106 1 213 1 214 2 349 4 370 1 243 1 334 1 335 1 248 1 
105 1 229 1 214 1 106 1 213 1 349 4 93 1 343 2 243 1 42 1 142 1 170 1 172 1 187 1 344 1 365 6 173 1 148 1 66 1 260 10 334 1 235 2 176 2 248 2 
229 1 93 1 343 2 170 1 142 3 172 1 256 1 344 1 173 1 365 6 148 3 260 11 235 2 176 6 264 1 105 1 213 3 106 1 214 1 349 5 243 3 42 1 187 1 66 1 334 1 248 2 
229 1 93 1 343 2 170 1 142 3 172 1 344 1 173 1 365 6 148 3 260 11 235 2 176 6 264 1 105 2 213 3 106 1 214 2 349 5 243 3 42 1 156 1 187 1 66 1 334 1 248 2 
105 6 309 2 106 1 214 3 349 4 370 3 299 3 102 1 363 1 365 3 260 7 376 3 248 1 
229 1 93 1 343 2 170 1 142 3 172 1 344 1 173 1 365 6 148 3 260 11 235 2 176 6 264 1 105 1 213 3 106 1 214 1 349 5 243 3 42 1 156 1 187 1 66 1 334 1 248 2 
161 1 127 1 374 1 83 1 274 1 95 1 234 1 
161 1 89 1 95 1 253 1 271 1 61 1 205 1 127 1 374 1 83 1 274 1 234 1 
115 1 171 1 197 1 55 1 233 1 292 1 287 1 268 1 175 1 160 1 321 1 
336 1 197 1 338 1 95 1 136 1 268 1 277 1 115 1 171 1 127 2 374 2 233 1 292 1 274 1 293 1 263 1 175 1 160 1 
336 1 165 1 338 1 95 1 276 1 277 1 171 1 127 2 233 3 175 1 263 2 268 1 136 1 220 1 115 1 314 1 374 2 274 2 292 2 355 1 293 2 118 1 160 1 
336 1 165 1 338 1 95 1 276 1 171 2 127 2 233 3 175 1 263 2 268 2 136 1 220 1 184 1 186 1 115 1 314 1 374 2 274 2 292 2 355 1 293 2 118 1 160 2 
49 2 197 1 310 1 251 1 276 1 268 3 313 2 184 1 115 1 171 3 314 1 233 4 292 1 84 1 355 1 293 1 73 1 224 1 86 1 175 1 160 3 19 1 212 1 
49 2 197 1 310 1 276 1 268 3 313 2 184 1 115 1 171 3 314 1 190 1 233 4 292 1 355 1 293 1 73 1 224 1 86 1 175 1 160 3 19 1 212 1 
115 1 171 1 94 1 268 1 175 1 160 1 
197 2 326 1 141 1 297 1 94 1 69 1 268 7 43 1 171 6 115 3 233 3 32 1 292 2 293 1 129 1 175 2 160 7 150 1 316 1 247 1 317 1 
336 1 297 1 338 1 95 2 96 1 3 1 299 1 142 2 102 1 148 2 260 6 263 1 105 2 309 1 8 1 213 2 214 2 106 1 266 2 11 1 349 3 268 1 115 1 274 1 160 1 277 1 320 2 171 1 363 1 127 2 365 3 233 1 33 1 175 1 176 4 370 1 136 1 242 1 243 2 290 1 374 2 138 1 292 1 293 1 335 1 194 1 248 1 
49 3 197 1 22 1 298 2 360 1 6 1 171 1 101 2 30 1 345 1 233 2 147 2 73 1 212 1 132 1 310 1 327 1 268 1 313 3 273 1 190 1 223 1 86 2 224 1 160 1 48 2 19 1 88 1 
310 1 326 1 108 1 297 1 94 1 268 2 171 2 115 2 233 2 292 1 293 1 175 1 160 2 
197 1 10 1 297 1 287 1 268 4 184 1 115 1 171 4 55 1 233 1 292 1 175 1 160 4 
110 1 181 1 268 2 171 2 115 2 364 1 233 1 292 1 355 1 293 1 175 1 160 2 316 1 317 1 
115 1 171 1 197 1 354 1 245 1 268 1 175 1 160 1 52 1 14 1 
297 1 268 2 171 2 43 1 115 1 233 1 292 1 129 1 175 1 160 2 286 1 
197 1 10 1 297 1 141 1 287 1 268 5 171 4 115 2 55 1 233 3 292 2 355 1 129 1 175 2 160 5 247 1 
197 1 10 1 297 1 287 1 268 5 171 4 115 2 55 1 233 3 292 2 355 1 129 1 175 2 160 5 225 1 247 1 
336 1 197 1 338 1 95 1 136 1 268 1 186 1 115 1 171 1 127 2 374 2 233 1 292 1 274 1 293 1 263 1 175 1 160 1 
326 1 268 1 171 1 115 2 233 1 292 1 355 1 293 1 175 1 160 1 150 1 316 1 317 1 
121 1 107 1 127 1 374 1 145 1 274 1 331 1 149 1 169 1 
16 1 134 1 149 1 
107 1 164 1 95 1 331 1 149 1 
49 2 107 2 165 1 134 1 164 2 95 1 220 1 313 2 99 1 16 1 345 1 118 1 331 2 73 1 211 1 246 1 224 1 149 1 212 1 
79 1 80 1 46 1 321 1 
78 1 79 1 80 1 291 1 339 1 46 1 76 1 
371 1 291 1 219 1 
78 1 79 1 80 1 339 3 12 2 254 1 312 1 126 1 283 1 291 3 46 1 76 1 
282 1 78 1 79 1 80 1 291 2 339 2 46 1 123 1 76 1 
78 1 199 1 369 1 79 1 339 1 328 1 254 1 52 1 291 1 245 1 76 1 
78 1 79 1 80 1 291 1 339 1 254 1 76 1 
78 1 80 2 291 1 339 1 46 1 254 1 76 1 
78 2 79 1 80 1 339 2 254 1 185 1 114 1 272 1 291 2 76 2 
78 1 80 1 369 1 79 2 339 3 254 1 282 2 232 1 291 3 46 1 174 1 192 1 76 1 
78 1 199 1 79 1 80 1 339 2 254 1 52 1 221 1 155 1 282 1 291 2 354 1 46 1 245 2 76 1 
78 2 80 1 369 1 79 2 339 4 123 1 254 1 282 2 232 1 291 4 46 1 76 2 36 1 
78 1 79 1 80 1 291 1 339 1 46 1 254 1 76 1 
131 1 78 1 80 2 369 1 79 3 12 1 339 4 312 1 282 2 126 1 232 1 291 4 46 2 76 1 
78 1 79 1 80 1 339 2 254 1 100 1 154 1 282 1 53 1 291 2 46 1 76 1 
78 1 79 1 80 1 339 3 12 2 254 1 312 1 126 2 291 3 46 1 262 1 76 1 
79 2 85 1 13 2 20 1 
78 1 291 1 339 1 112 1 254 1 76 1 
282 1 78 1 79 1 80 1 291 2 339 2 46 1 174 1 254 1 76 1 
200 1 
78 1 79 1 80 1 291 1 339 1 46 1 254 1 76 1 
78 1 80 1 79 1 339 3 12 1 254 1 282 1 291 3 46 1 174 1 76 1 
131 1 79 1 369 1 232 1 
79 1 80 1 

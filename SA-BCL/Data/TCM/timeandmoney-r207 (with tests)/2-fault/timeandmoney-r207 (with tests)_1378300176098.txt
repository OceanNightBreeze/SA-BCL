#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | OPERATOR | 7412 | >= -> ==
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
266 6 19 5 99 1 269 2 354 2 205 1 274 1 49 1 276 2 135 1 360 1 57 1 162 3 332 9 217 1 333 2 87 2 255 9 188 1 62 1 190 1 239 2 63 1 287 1 168 1 316 1 262 2 15 4 
266 6 19 5 99 1 269 2 354 2 205 1 274 1 49 1 276 2 135 1 360 1 57 1 162 3 332 9 217 1 333 2 87 2 255 9 188 1 62 1 190 1 239 2 63 1 287 1 168 1 316 1 262 2 15 4 
266 7 19 6 99 1 269 2 354 2 205 1 274 1 49 1 276 2 135 1 360 1 57 1 162 4 332 10 217 1 333 2 87 2 255 10 188 1 62 1 190 1 239 2 63 1 287 1 168 1 316 1 262 2 15 5 
266 4 19 4 99 1 269 1 354 2 205 1 274 1 49 1 276 2 135 1 360 1 57 1 162 2 332 7 217 1 333 2 87 2 255 7 188 1 62 1 239 2 63 1 287 1 168 1 316 1 262 2 15 3 
266 3 135 1 19 3 57 1 162 1 332 4 269 2 87 1 333 1 255 4 354 1 62 1 190 1 63 1 168 1 276 1 262 1 15 2 
135 1 19 1 57 1 332 2 333 1 87 1 255 2 354 1 188 1 173 1 239 1 63 1 49 1 276 1 223 1 359 1 
266 1 135 1 19 2 57 1 162 1 332 3 333 2 255 3 239 1 63 1 287 1 276 2 15 1 
266 7 19 5 99 1 269 2 354 1 276 2 135 1 57 1 162 3 332 9 333 2 87 1 255 9 62 1 189 1 190 1 239 1 147 1 63 1 287 1 168 1 316 1 262 1 15 4 
266 7 19 5 99 1 269 2 354 1 276 2 135 1 57 1 162 3 332 9 333 2 87 1 255 9 62 1 189 1 190 1 239 1 147 1 63 1 287 1 168 1 316 1 262 1 15 4 
139 1 108 1 166 1 
208 2 139 1 372 1 
296 2 129 2 273 1 131 1 289 2 149 2 32 2 4 2 
71 1 1 1 153 2 42 1 124 2 367 1 125 1 201 2 4 3 103 1 296 2 129 2 29 1 355 1 273 1 130 1 131 1 251 1 373 1 32 3 303 1 56 1 10 1 363 1 143 1 335 1 12 2 113 1 312 1 91 1 64 1 289 2 241 1 149 2 193 2 119 1 122 1 
296 1 129 1 273 1 5 1 126 1 289 1 149 1 357 1 32 1 4 1 
72 1 139 1 280 1 126 1 218 1 4 1 111 1 371 1 166 1 221 1 296 1 7 1 83 1 32 1 
72 1 139 1 280 1 126 1 4 1 111 1 371 2 166 1 129 1 296 1 289 1 149 1 7 1 83 2 32 1 
275 1 127 1 83 1 177 1 371 1 
293 1 126 1 26 1 4 1 371 2 129 1 296 1 273 1 5 1 275 1 278 1 83 2 177 1 357 1 32 1 139 1 166 1 289 1 149 1 
275 1 83 1 371 1 
126 1 26 1 4 1 371 1 129 1 296 1 273 1 5 1 289 1 149 1 357 1 177 1 83 1 32 1 
139 1 
293 1 139 1 275 1 83 2 177 1 371 2 166 1 264 1 
267 1 293 1 136 1 139 1 25 2 377 1 249 2 371 5 166 1 128 1 324 2 82 1 275 2 229 1 106 1 177 2 83 5 291 1 121 1 
131 1 108 1 
129 1 296 2 198 1 131 2 289 1 149 1 230 1 32 2 4 2 
46 1 225 1 369 1 
152 1 367 1 10 1 363 1 201 1 4 1 143 1 12 1 113 1 91 1 64 1 131 1 193 1 251 1 32 1 373 1 
367 1 10 1 363 1 60 1 201 1 4 2 143 1 46 1 12 1 113 1 296 1 91 1 64 1 340 1 289 1 149 1 251 1 193 1 373 1 32 2 
331 1 60 2 4 5 221 1 144 1 191 1 296 5 129 1 340 1 289 4 131 1 149 4 230 1 32 5 
296 2 126 1 289 2 149 2 357 1 32 2 4 2 11 1 
129 1 296 3 131 1 289 3 149 3 60 1 32 3 4 3 
296 1 126 1 289 1 149 1 357 1 32 1 4 1 
296 1 129 1 198 1 126 1 289 1 149 1 230 1 32 1 4 1 
71 1 72 1 153 1 42 1 124 2 367 1 126 1 201 1 4 4 371 1 103 1 129 2 296 3 29 1 273 1 130 1 131 1 230 1 7 1 251 1 83 1 373 1 32 4 303 1 56 1 280 1 10 1 307 1 363 1 308 1 60 1 111 1 143 1 335 1 12 1 113 1 91 1 64 1 340 1 289 3 241 1 149 3 193 1 119 1 
191 1 296 2 131 1 289 1 149 1 60 1 32 2 4 2 221 1 
72 1 366 1 139 1 280 1 126 1 307 1 60 2 111 1 4 3 371 1 129 1 296 3 340 1 289 3 230 1 149 3 7 1 83 1 32 3 
60 1 369 1 4 2 46 1 129 1 296 2 289 2 230 1 149 2 32 2 
367 1 10 1 363 1 201 1 4 1 143 1 12 1 113 1 91 1 64 1 131 1 193 1 251 1 32 1 373 1 
367 1 201 1 4 1 143 1 12 1 80 1 113 1 91 1 64 1 314 1 131 1 193 1 251 1 32 1 373 1 
71 2 42 1 124 2 153 4 225 2 156 1 100 1 369 2 322 1 103 1 46 2 28 1 130 1 299 1 53 1 134 1 56 1 138 1 185 1 33 1 379 1 241 1 119 1 122 2 
296 1 280 1 126 1 289 1 149 1 32 1 4 1 11 1 
58 1 93 1 
58 1 93 1 
94 1 117 1 
94 1 117 1 
94 1 117 1 
58 1 163 1 93 1 
58 1 163 1 93 1 
58 1 155 1 93 1 
146 1 58 2 66 1 93 2 94 1 117 1 
58 1 163 1 93 1 
58 1 24 1 93 1 
58 1 24 1 93 1 
58 1 24 1 93 1 
20 1 349 1 247 1 155 1 4 2 371 1 202 1 296 2 131 1 83 1 32 2 374 1 213 1 179 1 214 1 58 1 334 1 142 1 337 1 148 1 289 2 149 2 93 1 265 1 
20 2 2 1 139 1 58 2 334 3 371 2 142 2 174 1 146 1 50 1 51 2 258 1 93 2 39 1 83 2 263 1 213 2 179 1 265 2 
87 1 262 1 354 1 
87 1 354 1 359 1 
196 1 73 1 227 1 262 2 354 3 359 1 
196 1 227 1 262 1 231 1 354 2 359 1 
196 2 227 1 262 1 354 2 359 1 
18 2 267 1 293 1 123 2 25 1 23 1 247 1 249 1 371 5 202 1 28 1 208 3 372 1 324 1 275 1 229 3 106 2 83 5 177 4 299 1 181 1 232 1 138 1 139 2 185 1 186 1 235 2 166 1 61 1 337 1 313 1 341 1 
0 1 18 6 293 1 267 1 224 1 123 6 23 1 25 2 127 5 247 4 295 5 249 2 371 9 28 3 208 9 372 3 324 2 275 6 326 1 229 8 106 6 83 9 177 7 299 3 181 3 136 1 232 2 138 3 139 5 185 3 166 1 61 2 310 1 65 1 38 1 
18 2 123 2 25 1 247 1 249 1 371 3 28 1 208 4 372 2 324 1 229 3 177 2 83 3 106 2 299 1 181 1 136 1 232 1 138 1 139 3 185 1 186 1 235 1 166 1 61 1 341 1 
18 4 123 4 224 1 25 1 247 2 249 1 371 4 28 2 208 7 372 3 324 1 229 5 83 4 177 3 106 4 299 2 181 2 136 1 232 1 138 2 139 4 185 2 186 1 235 2 166 1 61 1 310 1 341 1 38 1 
373 1 108 1 54 1 
197 1 373 1 
345 1 
91 1 373 1 143 1 
88 1 373 1 
373 1 143 1 
91 1 228 1 373 3 68 1 54 2 143 1 
71 3 137 1 153 7 216 1 281 1 75 1 156 2 236 2 220 1 322 3 28 1 311 1 290 1 327 1 299 1 96 1 122 4 
71 3 137 1 153 7 216 1 281 1 75 1 156 2 236 2 220 1 322 3 28 1 311 1 290 1 327 1 299 1 96 1 122 4 
71 3 137 1 153 7 216 1 281 1 75 1 156 2 236 2 220 1 322 3 167 1 28 1 311 1 290 1 327 1 299 1 96 1 122 4 
71 15 42 1 124 2 153 31 171 1 75 2 156 5 322 10 103 1 28 4 130 1 327 1 299 4 252 1 181 3 182 4 137 1 305 3 138 3 216 1 281 2 185 3 309 1 236 3 220 2 311 1 288 1 290 5 67 1 40 1 119 1 96 2 122 16 70 1 
71 4 42 2 124 4 153 9 75 1 156 3 322 4 103 2 28 1 130 2 327 1 299 1 137 1 216 1 281 1 236 2 219 1 220 1 338 1 290 1 119 2 96 1 122 5 70 1 
266 1 19 1 41 1 73 1 367 1 201 1 354 2 203 1 276 1 251 1 300 1 359 1 135 1 55 1 279 1 57 1 332 2 87 1 333 1 255 2 187 1 256 1 237 1 12 1 239 1 63 1 242 1 193 1 262 1 343 1 
266 2 19 1 73 1 367 1 350 1 201 1 354 2 203 1 276 1 251 1 359 1 158 1 135 1 55 1 253 1 279 1 332 3 87 1 333 1 255 3 187 1 256 1 237 1 12 1 239 1 63 1 242 1 193 1 262 1 343 1 
266 2 19 1 73 1 367 1 350 1 201 1 354 2 203 1 251 1 359 1 158 1 135 1 55 1 279 1 332 2 87 1 255 2 256 1 237 1 12 1 239 1 63 1 193 1 262 1 343 1 
55 2 253 1 367 1 332 1 141 1 248 1 333 1 255 1 201 1 256 2 143 1 203 2 12 1 113 1 239 2 13 1 380 1 276 1 251 1 105 1 193 1 373 1 292 1 
73 1 367 1 201 1 354 2 203 1 276 1 251 1 300 1 359 1 158 1 55 1 279 1 57 1 332 1 87 1 333 1 255 1 187 1 256 1 237 1 12 1 239 1 242 1 193 1 262 1 343 1 
211 1 
293 3 352 1 249 1 201 2 353 1 4 1 101 1 102 1 208 2 296 1 209 2 7 1 106 2 251 1 212 1 301 1 302 2 218 1 111 1 166 1 221 1 12 2 113 2 315 1 115 2 69 1 16 1 72 1 267 1 367 1 25 1 126 1 76 2 270 2 371 5 175 4 372 2 324 1 275 6 229 2 83 5 373 1 32 1 183 1 232 1 85 1 139 2 280 1 141 1 143 1 238 2 286 2 193 2 342 1 292 1 
72 1 293 1 280 1 126 1 352 1 353 1 218 1 111 1 4 1 371 3 102 1 221 1 238 1 175 2 296 1 275 2 7 1 83 3 32 1 342 1 264 1 301 1 
72 1 293 1 139 1 280 1 126 1 352 1 353 1 218 1 76 1 111 1 4 1 371 3 166 1 102 1 221 1 175 3 296 1 275 1 7 1 83 3 32 1 342 1 264 1 301 1 
72 1 293 1 126 1 352 1 353 1 4 1 76 1 371 3 102 1 175 3 296 1 275 2 7 1 83 3 32 1 301 1 139 1 280 1 218 1 111 1 166 1 221 1 238 1 115 1 342 1 264 1 
72 1 267 1 293 3 347 1 25 1 126 1 352 1 249 1 353 1 270 2 76 4 4 1 101 1 371 5 102 1 175 6 296 1 372 2 209 2 324 1 275 7 229 1 7 1 106 1 83 5 32 1 301 1 302 2 233 1 139 5 280 1 218 1 111 1 36 1 166 5 221 1 238 4 286 2 92 1 115 4 342 1 151 1 264 1 69 1 
293 2 352 1 249 1 353 1 4 1 101 1 102 1 296 1 208 2 209 2 7 1 106 1 212 1 301 1 302 2 218 1 111 1 166 1 221 1 115 2 69 1 72 1 267 1 126 1 25 1 270 2 76 2 371 4 175 4 372 2 324 1 275 4 229 1 83 4 32 1 139 2 280 1 238 2 286 2 342 1 
72 1 293 2 267 1 347 1 25 1 126 1 352 1 353 1 249 1 76 2 270 2 4 1 101 1 371 4 102 1 175 4 296 1 372 2 209 2 324 1 275 4 229 1 7 1 106 1 83 4 32 1 301 1 302 2 233 1 139 1 280 1 218 1 111 1 166 1 221 1 238 2 286 2 115 2 342 1 151 1 69 1 
72 1 293 2 267 1 347 1 25 1 126 1 352 1 353 1 249 1 76 2 270 2 4 1 101 1 371 4 102 1 175 4 296 1 372 2 209 2 324 1 275 4 229 1 7 1 106 1 83 4 32 1 301 1 302 2 233 1 139 1 280 1 218 1 111 1 166 1 221 1 238 2 286 2 115 2 342 1 151 1 69 1 
72 1 293 2 267 1 25 1 126 1 352 1 353 1 249 1 76 2 4 1 101 1 371 4 102 1 175 4 208 2 296 1 324 1 275 4 229 1 7 1 106 1 83 4 32 1 358 1 301 1 302 2 160 2 233 1 139 1 280 1 218 1 111 1 166 1 336 2 221 1 238 2 145 1 286 2 115 2 365 1 342 1 
72 1 293 2 267 1 347 1 25 1 126 1 352 1 249 1 353 1 270 2 4 1 76 3 101 1 371 4 102 1 175 5 296 1 372 2 209 2 324 1 275 5 229 1 7 1 106 1 83 4 32 1 301 1 302 2 233 1 139 1 280 1 218 1 111 1 166 1 36 1 221 1 238 3 286 2 115 3 342 1 151 1 69 1 
72 1 293 2 267 1 347 1 25 1 126 1 352 1 249 1 353 1 270 2 4 1 76 3 101 1 371 4 102 1 175 5 296 1 372 2 209 2 324 1 275 5 229 1 7 1 106 1 83 4 32 1 301 1 302 2 233 1 139 1 280 1 218 1 111 1 166 1 36 1 221 1 238 3 286 2 115 3 342 1 151 1 69 1 
72 1 293 2 267 1 25 1 126 1 352 1 353 1 249 1 76 2 4 1 101 1 371 4 102 1 175 4 208 2 296 1 324 1 275 4 229 1 7 1 106 1 83 4 32 1 212 1 301 1 302 2 160 2 139 1 280 1 218 1 111 1 166 1 336 2 221 1 238 2 286 2 115 2 365 1 342 1 
71 3 42 1 124 2 153 6 225 1 156 2 100 1 369 1 322 2 46 1 103 1 28 1 130 1 131 2 327 1 299 1 108 1 137 1 56 1 216 1 281 1 236 1 220 1 241 1 119 1 122 3 
71 6 42 2 124 4 153 14 225 11 171 1 154 1 156 1 369 4 322 2 103 2 46 11 28 1 81 1 130 2 131 1 299 2 181 2 303 1 182 3 110 1 56 1 305 3 138 2 185 1 312 1 240 1 381 1 288 1 290 1 241 2 119 2 122 8 
71 1 152 1 367 1 124 2 42 1 153 2 201 1 369 1 4 2 103 1 296 1 81 1 130 1 131 1 251 1 373 1 32 2 329 1 303 1 56 1 10 1 363 1 60 1 35 1 143 1 12 1 113 1 312 1 91 1 37 1 64 1 340 1 289 1 241 1 149 1 193 1 119 1 122 1 
42 3 153 20 156 4 201 3 4 3 103 3 46 7 296 1 251 2 107 2 299 3 158 1 8 2 303 1 254 2 56 3 362 2 216 1 10 2 363 2 60 1 220 1 12 3 113 1 312 1 64 2 119 3 122 10 71 10 124 6 367 2 225 7 369 7 322 8 28 3 81 1 130 3 131 2 328 1 327 1 32 3 373 2 181 2 137 1 138 2 281 1 185 2 236 1 335 2 143 2 91 2 340 1 289 1 241 3 290 4 149 1 243 1 193 3 244 1 
71 1 41 1 367 2 42 2 124 4 153 2 125 2 3 1 100 1 201 8 4 1 103 2 296 1 130 2 31 1 251 2 133 1 32 1 373 3 158 1 303 1 56 2 141 1 60 1 143 2 12 8 113 2 312 1 289 1 241 2 149 1 116 1 95 1 193 7 260 1 318 1 119 2 122 1 292 1 
71 2 320 1 225 1 42 1 124 2 153 3 156 1 369 1 4 1 322 1 46 1 103 1 28 1 129 1 296 1 81 1 130 1 230 1 32 1 299 1 181 1 56 1 138 1 185 1 289 1 241 1 149 1 119 1 122 1 
56 1 138 1 225 1 153 2 124 2 42 1 100 1 369 1 322 1 46 1 103 1 130 1 290 1 241 1 299 1 119 1 134 1 122 2 
71 2 56 1 225 1 153 2 124 2 42 1 185 1 156 1 100 1 369 1 322 1 46 1 103 1 28 1 379 1 130 1 241 1 119 1 
71 2 42 1 124 2 153 4 225 2 156 1 100 1 369 2 322 2 103 1 46 2 28 1 130 1 299 1 181 1 138 1 56 1 185 1 241 1 290 1 119 1 122 2 
56 1 138 1 225 1 153 2 124 2 42 1 369 1 322 1 46 1 103 1 130 1 290 1 241 1 133 1 299 1 119 1 134 1 122 2 
71 2 56 1 225 1 153 2 124 2 42 1 185 1 156 1 369 1 322 1 46 1 103 1 28 1 379 1 130 1 241 1 133 1 119 1 
71 2 42 1 124 2 153 4 225 2 156 1 369 2 322 2 103 1 46 2 28 1 130 1 133 1 299 1 181 1 138 1 56 1 185 1 241 1 290 1 119 1 122 2 
71 2 153 4 42 1 124 2 225 2 156 1 369 2 322 2 103 1 46 2 28 1 130 1 299 1 181 1 138 1 56 1 185 1 241 1 290 1 119 1 122 2 
71 1 153 2 367 1 124 2 42 1 201 1 4 1 103 1 130 1 131 1 251 1 373 1 32 1 303 1 56 1 10 1 363 1 143 1 335 1 12 1 113 1 312 1 91 1 64 1 241 1 193 1 119 1 122 1 
71 1 153 2 367 1 124 2 42 1 351 1 201 1 4 1 80 1 103 1 130 1 131 1 251 1 373 1 32 1 303 1 56 1 143 1 12 1 113 1 312 1 91 1 64 1 314 1 241 1 193 1 119 1 122 1 
71 2 42 1 124 2 153 4 225 2 156 1 369 2 322 2 103 1 46 2 28 1 81 1 130 1 299 1 181 1 138 1 56 1 185 1 241 1 290 1 119 1 122 2 
71 2 41 1 225 2 153 4 367 1 124 2 42 1 156 1 201 1 369 2 4 1 322 2 46 2 103 1 28 1 130 1 251 1 299 1 373 1 32 1 181 1 254 1 138 1 56 1 185 1 10 1 363 1 335 1 143 1 12 1 91 1 64 1 290 1 241 1 193 1 119 1 122 2 
71 1 42 1 124 2 153 3 225 1 4 1 369 1 322 1 103 1 46 1 28 1 129 1 296 1 81 1 130 1 230 1 32 1 299 1 181 1 375 1 56 1 138 1 185 1 289 1 290 1 241 1 149 1 119 1 122 2 
17 1 71 10 42 2 124 4 153 19 171 1 200 2 156 3 322 6 103 2 28 3 130 2 6 1 132 1 178 1 299 3 181 3 330 1 182 2 305 1 138 3 185 3 89 1 338 1 288 1 290 3 118 1 169 2 119 2 122 9 
17 1 71 12 42 3 124 6 153 26 171 2 156 2 200 4 43 1 322 4 103 3 28 2 130 3 132 2 178 1 299 3 181 3 182 2 305 2 138 3 184 1 185 2 234 1 283 1 89 1 338 1 339 1 290 2 150 1 118 2 169 1 119 3 70 2 122 14 
153 41 42 3 156 4 200 4 43 1 103 3 6 1 299 5 305 3 216 1 164 1 220 1 118 1 119 3 169 1 122 20 70 1 17 1 71 21 124 6 171 3 322 8 28 5 130 3 327 1 132 2 178 1 181 4 182 4 137 1 138 4 184 1 185 4 281 1 234 1 89 1 283 1 236 1 338 1 288 1 339 1 290 4 150 1 
17 1 71 18 42 4 124 8 153 38 171 3 200 4 156 4 43 1 322 7 103 4 28 4 130 4 6 1 327 1 132 2 178 1 299 5 181 4 182 4 137 1 305 3 138 4 216 1 184 1 281 1 185 3 234 1 164 1 236 1 283 1 89 1 220 1 338 1 339 1 288 1 290 3 150 1 118 1 169 1 119 4 70 2 122 20 
17 1 71 20 42 2 124 4 153 42 154 1 171 2 156 5 200 4 43 1 322 10 103 2 28 6 130 2 327 1 132 1 178 1 299 6 181 5 182 3 137 1 305 3 138 5 216 1 184 1 281 1 185 5 234 1 236 1 283 1 89 1 220 1 338 1 339 1 288 1 290 5 150 1 118 1 169 1 119 2 70 1 122 22 
174 1 245 1 146 1 20 1 58 1 93 1 39 1 213 1 142 1 265 1 
214 1 155 1 
20 1 58 1 30 1 93 1 165 1 213 1 27 1 142 1 265 1 
163 1 298 1 
66 1 24 1 259 1 
20 1 2 1 139 1 58 1 334 2 371 1 142 1 174 1 146 1 51 1 258 1 93 1 39 1 83 1 263 1 179 1 213 1 265 1 
20 1 2 1 139 1 58 1 334 2 371 1 142 1 174 1 146 1 51 1 258 1 93 1 39 1 83 1 263 1 179 1 213 1 265 1 
20 1 2 1 139 1 58 1 334 2 371 1 142 1 174 1 146 1 51 1 258 1 93 1 39 1 83 1 263 1 179 1 213 1 265 1 
66 1 163 1 298 1 
66 1 163 1 298 1 
24 1 259 1 
66 1 24 1 259 1 
349 1 148 1 
20 1 2 1 348 1 349 1 247 1 155 1 4 2 371 1 202 1 296 2 51 1 131 1 83 1 177 1 32 2 374 1 213 1 214 1 58 1 334 1 142 1 337 1 148 1 289 2 149 2 93 1 265 1 
71 1 346 1 367 1 124 2 42 1 153 2 125 2 3 1 201 2 4 2 103 1 296 2 81 1 130 1 104 1 251 1 373 1 32 2 180 1 215 1 303 1 56 1 143 1 12 2 312 1 241 1 193 2 318 1 119 1 194 1 122 1 
55 1 41 1 304 1 73 1 279 1 367 1 87 1 201 2 354 2 12 2 356 1 242 1 251 1 193 2 262 1 14 1 343 1 359 1 158 1 
55 1 304 1 73 1 279 1 367 1 87 1 201 1 354 2 45 1 12 1 242 1 193 1 251 1 262 1 343 1 359 1 158 1 
55 1 319 1 367 1 141 1 201 1 143 1 12 1 113 1 13 1 251 1 193 1 373 1 14 1 292 1 
55 1 304 1 73 1 279 1 367 1 87 1 201 1 354 2 12 1 356 1 242 1 193 1 251 1 262 1 14 1 343 1 359 1 158 1 
97 1 
128 1 139 1 82 1 229 1 106 1 108 1 166 1 
267 1 293 1 25 1 249 1 270 1 371 1 208 1 372 1 209 1 324 1 275 1 229 1 106 1 83 1 139 2 166 1 69 1 
41 1 293 3 197 3 249 4 201 3 208 12 251 3 106 8 107 2 299 2 54 2 159 1 161 1 9 2 111 2 166 2 12 3 113 1 257 2 315 1 364 2 267 4 18 6 123 6 367 4 25 4 172 2 228 1 371 5 78 2 128 1 28 2 372 6 324 4 82 1 275 5 229 9 277 1 83 5 373 10 84 1 181 2 232 2 138 2 139 8 185 2 282 2 88 2 34 1 90 2 143 3 91 3 192 2 193 3 
293 1 18 5 267 2 123 5 171 1 25 2 172 1 249 2 371 1 43 1 44 1 28 2 208 6 372 3 324 2 275 1 229 8 83 1 106 5 299 2 181 2 182 1 232 1 305 1 138 2 139 5 184 1 185 2 282 2 234 1 283 1 166 2 285 1 315 1 150 1 
267 1 347 1 126 1 25 1 172 1 249 1 26 1 4 1 371 1 28 1 129 1 296 1 273 1 5 1 324 1 229 2 357 1 83 1 106 2 32 1 299 2 216 1 281 1 282 2 220 1 284 1 289 1 149 1 
267 1 139 1 25 1 249 1 166 1 128 1 324 1 82 1 229 1 106 1 
181 2 18 5 123 5 138 2 139 5 185 2 172 1 282 2 28 2 208 10 372 5 229 5 106 5 107 1 299 2 
293 1 139 1 275 1 83 1 371 1 166 1 
16 1 267 1 293 2 367 1 25 2 249 2 201 4 79 1 371 3 48 1 324 2 275 4 229 2 251 1 106 2 83 3 373 1 84 2 183 1 159 1 136 1 232 2 141 1 143 1 12 4 113 2 315 2 193 4 292 1 
71 1 153 1 42 1 124 2 367 1 201 1 4 3 103 1 296 2 129 2 29 1 273 1 130 1 131 1 251 1 32 3 373 1 303 1 56 1 10 1 363 1 335 1 143 1 12 1 113 1 91 1 64 1 289 2 241 1 149 2 193 1 119 1 
18 2 267 1 123 2 232 1 139 4 25 1 249 1 236 1 166 2 208 4 372 2 324 1 315 1 229 1 106 2 
378 1 213 1 142 1 
378 1 213 1 142 1 
59 1 349 1 39 1 213 1 142 1 
378 1 213 1 142 1 
199 1 213 1 142 1 
199 1 213 1 142 1 
199 1 213 1 142 1 
213 1 142 1 
58 1 93 1 
71 4 137 1 153 8 124 4 42 2 216 1 281 1 156 2 236 1 220 1 322 3 103 2 28 1 130 2 290 1 327 1 299 1 119 2 122 4 70 1 
71 3 137 1 153 6 216 1 281 1 156 2 236 1 220 1 322 2 28 1 327 1 299 1 108 1 122 3 
181 1 71 2 138 1 124 2 42 1 153 4 185 1 156 1 322 2 103 1 28 1 207 1 130 1 290 1 299 1 119 1 122 2 
71 1 182 1 305 1 153 2 171 1 122 1 
71 12 153 25 124 2 42 1 154 1 156 4 322 8 103 1 28 5 130 1 327 1 299 5 181 2 182 2 137 1 138 2 305 2 216 2 281 2 185 2 236 1 220 2 284 1 240 1 288 1 290 4 119 1 122 13 70 1 
71 1 182 1 153 1 
305 1 153 1 122 1 
181 1 71 3 138 1 42 1 124 2 153 6 185 1 156 2 322 3 103 1 28 1 207 1 130 1 290 1 107 1 299 1 119 1 122 3 
71 6 153 12 42 1 124 2 171 1 156 1 43 1 322 2 103 1 28 2 130 1 299 2 181 2 182 1 305 1 138 2 184 1 185 2 234 1 283 1 338 1 290 1 150 1 119 1 122 6 
71 3 153 6 216 1 281 1 156 1 220 1 322 2 28 1 290 1 299 1 122 3 
71 2 137 1 153 3 124 2 42 1 281 1 156 1 220 1 322 2 103 1 130 1 290 1 327 1 52 1 119 1 122 1 70 1 
71 5 42 1 124 2 153 10 216 1 281 2 156 3 220 2 322 5 103 1 284 1 338 1 28 2 130 1 290 2 299 2 119 1 122 5 
138 1 124 2 42 1 153 2 322 1 103 1 338 1 130 1 290 1 299 1 119 1 122 2 
181 1 71 2 138 1 124 2 42 1 153 4 185 1 156 1 322 2 103 1 28 1 338 1 130 1 290 1 299 1 119 1 122 2 
71 2 153 3 124 6 42 3 281 1 156 1 220 1 322 2 103 3 338 1 130 3 6 1 290 1 52 1 119 3 70 1 122 1 
71 18 42 5 124 10 153 34 171 1 156 7 322 12 103 5 28 5 207 1 130 5 6 1 327 1 52 1 299 5 181 3 182 4 137 1 305 3 138 3 216 2 281 3 185 3 309 1 236 1 220 3 338 1 288 1 67 1 290 5 40 1 119 5 70 2 122 16 
71 4 153 8 42 1 124 2 171 1 156 2 322 2 103 1 28 1 130 1 327 1 299 1 182 1 137 1 305 1 216 1 281 1 234 1 236 1 220 1 338 1 119 1 122 4 
71 5 153 11 42 2 124 4 171 1 156 2 322 3 103 2 28 1 207 1 130 2 327 1 299 2 181 1 182 2 137 1 305 1 138 1 216 1 281 1 234 1 236 1 220 1 338 1 288 1 290 1 119 2 122 6 
71 10 153 19 42 3 124 6 171 1 156 3 43 1 322 4 103 3 28 3 207 1 130 3 327 1 299 3 181 2 182 1 137 1 305 1 138 2 216 1 184 1 281 1 185 2 234 1 236 1 283 1 220 1 338 1 290 1 150 1 119 3 122 9 70 1 
71 7 153 17 42 3 124 6 171 1 156 3 43 1 322 5 103 3 28 2 207 1 130 3 327 1 299 3 181 2 182 1 137 1 305 1 138 2 216 1 184 1 281 1 185 1 234 1 236 1 283 1 220 1 338 1 290 2 150 1 119 3 70 1 122 10 
71 4 153 8 42 1 124 2 171 1 156 2 322 2 103 1 28 1 130 1 327 1 299 1 182 1 137 1 305 1 216 1 281 1 234 1 236 1 220 1 338 1 119 1 122 4 
71 6 153 12 42 1 124 2 171 1 156 1 43 1 322 2 103 1 28 2 130 1 299 2 181 2 182 1 305 1 138 2 184 1 185 2 234 1 283 1 338 1 290 1 150 1 119 1 122 6 
71 8 153 18 42 4 124 8 171 1 156 3 43 1 322 5 103 4 28 2 207 1 130 4 327 1 299 3 181 2 182 1 137 1 305 1 138 2 216 1 184 1 281 1 185 1 234 1 236 1 283 1 220 1 338 1 290 2 150 1 119 4 122 10 70 2 
71 7 153 16 42 4 124 8 171 1 156 3 43 1 322 6 103 4 28 2 130 4 6 1 299 3 181 3 182 1 305 1 138 3 184 1 185 2 234 1 283 1 338 1 290 3 150 1 119 4 122 9 70 2 
71 4 137 2 153 7 216 1 281 3 156 3 220 3 322 6 28 1 290 3 327 1 299 1 122 3 
71 8 153 18 42 4 124 8 171 1 156 3 43 1 322 4 103 4 28 2 130 4 6 1 327 1 299 3 181 2 182 1 137 1 305 1 138 2 216 1 184 1 281 1 185 1 234 1 236 1 283 1 220 1 338 1 290 1 150 1 119 4 122 10 70 2 
191 1 296 1 98 1 131 1 32 1 4 1 221 1 
294 1 98 1 368 1 4 1 221 1 191 1 296 1 250 1 131 1 317 1 32 1 344 1 
12 1 113 1 367 1 141 1 251 1 201 1 193 1 373 1 108 1 143 1 292 1 
367 1 10 1 60 1 201 1 4 2 143 1 12 1 113 1 296 1 91 1 64 1 131 1 289 1 149 1 193 1 251 1 373 1 32 2 
367 1 126 1 201 1 4 2 296 2 131 1 7 1 251 1 32 2 373 3 84 1 280 1 10 1 9 1 60 1 88 1 143 2 12 1 91 2 64 1 289 1 149 2 193 1 
367 1 126 1 201 2 4 2 296 2 131 1 7 1 251 1 32 2 373 3 84 1 280 1 9 1 60 1 88 1 143 2 12 2 222 1 91 2 64 1 314 1 289 1 149 2 193 2 
84 1 197 1 139 1 367 1 376 1 9 1 88 1 321 1 201 3 111 1 371 2 166 1 143 1 12 3 113 1 222 1 91 1 275 1 83 2 193 3 251 1 373 4 54 1 
84 1 197 1 139 1 367 1 9 1 88 1 201 3 111 1 371 2 166 1 143 1 12 3 113 1 222 1 91 1 364 1 275 1 83 2 193 3 251 1 373 4 54 1 
12 1 367 1 251 1 201 1 193 1 260 1 
41 1 367 3 125 1 226 1 268 1 201 7 228 1 143 2 204 1 12 7 113 2 91 1 31 1 116 1 95 1 193 6 251 2 260 1 318 1 373 3 158 1 
41 1 346 1 42 2 153 6 156 2 201 1 4 2 103 2 46 1 296 1 251 1 299 1 254 1 56 2 362 1 216 1 10 1 363 1 60 1 220 1 12 1 64 1 119 2 122 3 71 3 124 4 367 1 225 1 369 1 322 2 28 1 81 1 130 2 131 2 327 1 32 2 373 1 137 1 281 1 236 1 335 1 143 1 91 1 289 1 241 2 149 1 193 1 
267 2 293 1 197 1 25 2 249 2 201 1 371 3 128 1 324 2 82 1 275 2 229 1 106 1 83 3 177 1 373 2 54 1 159 1 139 1 111 1 166 1 90 1 12 1 113 1 257 1 192 1 364 1 193 1 
41 1 367 2 201 2 228 1 143 1 12 2 91 1 277 1 193 2 251 1 260 1 373 2 54 1 
12 4 113 1 41 1 222 1 361 1 367 1 141 1 251 1 201 4 193 4 373 1 143 1 292 1 
84 1 367 2 22 1 268 1 201 2 143 1 204 1 12 2 91 1 210 1 328 1 193 2 251 1 373 1 
12 1 113 1 279 1 367 1 87 1 251 1 201 1 193 1 354 1 359 1 
180 1 41 1 367 1 201 2 143 1 12 2 193 2 251 1 318 1 373 1 158 1 
84 1 41 1 361 1 367 2 141 1 201 5 143 2 12 5 113 1 193 4 95 1 251 2 116 1 318 1 373 3 292 1 
84 1 41 1 109 1 361 1 367 2 141 1 201 5 143 2 12 5 113 1 193 4 251 2 116 1 318 1 373 3 292 1 
367 1 60 1 201 1 4 2 143 1 12 1 113 1 296 1 91 1 64 1 314 1 131 1 289 1 149 1 193 1 251 1 373 1 32 2 
84 1 367 2 226 1 268 1 201 1 228 1 143 1 204 1 12 1 91 1 193 1 251 1 373 1 
272 1 86 1 170 1 131 1 140 1 
195 1 72 1 86 2 139 1 280 1 170 1 126 1 74 1 140 2 307 1 111 1 371 2 166 1 272 2 131 1 325 1 7 1 177 1 83 2 
215 1 296 1 86 1 170 1 104 1 140 1 32 1 4 1 194 1 
170 1 74 1 325 1 
135 1 19 1 63 1 108 1 
135 1 19 1 63 1 332 1 276 1 333 1 255 1 
239 1 255 1 203 1 
323 1 135 1 19 1 63 1 57 1 49 2 332 3 157 1 276 1 333 1 255 3 271 1 
266 1 135 1 19 1 63 1 332 2 269 1 276 1 333 1 255 2 
19 1 57 1 332 1 333 1 87 1 255 1 354 1 168 1 276 1 262 1 15 1 
135 1 19 1 57 1 332 1 276 1 333 1 255 1 
135 2 63 1 57 1 332 1 276 1 333 1 255 1 
135 1 19 1 57 1 332 2 333 2 255 2 370 1 114 1 297 1 276 2 
266 2 135 1 19 2 57 1 99 1 162 1 332 3 333 1 255 3 63 1 316 1 276 1 15 1 
266 1 135 1 19 1 73 1 57 1 21 1 332 2 333 1 87 1 255 2 354 2 63 1 276 1 262 1 359 1 
266 2 135 1 19 2 57 1 162 1 332 4 269 1 333 2 255 4 190 1 63 1 276 2 15 1 
135 1 19 1 63 1 57 1 332 1 276 1 333 1 255 1 
266 2 135 2 19 3 162 1 332 4 333 1 255 4 77 1 271 1 323 1 63 2 49 1 276 1 15 1 
266 1 189 1 135 1 19 1 63 1 176 1 57 1 332 2 276 1 333 1 255 2 261 1 
323 1 135 1 19 1 63 1 57 1 49 2 332 3 276 1 333 1 255 3 271 2 120 1 
112 2 19 2 47 1 246 1 
206 1 57 1 332 1 276 1 333 1 255 1 
266 1 135 1 19 1 63 1 99 1 57 1 332 2 276 1 333 1 255 2 
306 1 
135 1 19 1 63 1 57 1 332 1 276 1 333 1 255 1 
266 1 135 1 19 1 99 1 63 1 57 1 49 1 332 3 276 1 333 1 255 3 
19 1 162 1 77 1 15 1 
135 1 19 1 

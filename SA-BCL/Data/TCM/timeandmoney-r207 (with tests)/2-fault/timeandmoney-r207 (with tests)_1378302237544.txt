#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (219,250) 290 (106,372) (106,372) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (219,250) 290 (106,372) (106,372) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (219,250) 290 (106,372) (106,372) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (219,250) 290 (106,372) (106,372) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1740 | if (x) -> if (!x)
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
250 1 49 1 372 1 211 1 33 1 14 1 106 1 321 1 172 1 290 1 246 1 
250 1 49 1 372 1 211 1 33 1 14 1 106 1 321 1 172 1 290 1 246 1 
250 1 49 1 372 1 211 1 33 1 14 1 106 1 321 1 172 1 290 1 246 1 
250 1 49 1 372 1 211 1 33 1 14 1 106 1 321 1 172 1 290 1 246 1 
309 3 256 1 187 1 19 1 196 2 296 1 14 4 125 3 224 2 225 1 351 1 49 1 366 1 6 1 33 1 338 1 172 4 246 1 
9 1 101 1 187 1 19 1 211 1 14 2 125 1 49 1 366 1 337 1 303 1 33 1 338 1 172 2 321 1 246 1 
309 1 219 1 187 1 196 1 211 1 14 3 125 2 225 1 49 2 366 1 33 1 172 3 246 2 
309 7 219 1 196 4 19 1 296 1 224 2 225 3 90 1 366 1 302 1 6 1 33 1 338 1 256 1 187 1 211 1 14 9 125 5 374 1 351 1 49 2 241 1 172 9 246 2 
309 7 219 1 196 4 19 1 296 1 224 2 225 3 90 1 366 1 302 1 6 1 33 1 338 1 256 1 187 1 211 1 14 9 125 5 374 1 351 1 49 2 241 1 172 9 246 2 
17 1 361 1 91 1 
323 1 10 2 361 1 
178 2 1 2 135 2 320 2 77 2 59 2 341 1 145 1 
1 2 22 2 103 1 333 1 59 3 316 1 178 3 299 1 111 1 135 2 320 2 336 1 117 1 341 1 119 1 138 1 184 1 139 1 188 1 12 1 349 1 126 1 235 1 190 2 289 1 15 1 261 1 97 1 168 1 141 2 77 2 306 1 218 1 193 1 267 2 145 1 100 2 
178 1 1 1 135 1 320 1 312 1 116 1 77 1 59 1 200 1 145 1 
17 1 361 1 23 1 362 1 59 1 108 1 28 1 178 1 135 1 116 1 78 1 39 1 379 1 42 1 
17 1 1 1 361 1 23 2 362 2 59 1 108 1 28 1 178 1 135 1 320 1 77 1 116 1 379 1 42 1 
30 1 23 1 362 1 131 1 109 1 
17 1 361 1 30 1 23 2 124 1 362 2 131 1 70 1 
30 1 23 1 362 1 
1 1 312 1 23 1 131 1 362 1 222 1 59 1 200 1 178 1 135 1 320 1 116 1 77 1 145 1 
361 1 
17 1 361 1 30 1 23 2 124 1 362 2 131 1 279 1 
17 1 361 1 23 5 124 1 131 2 362 5 348 1 327 1 160 1 46 2 201 1 233 2 291 1 335 1 355 1 51 2 30 2 369 1 281 1 
91 1 341 1 
1 1 59 2 232 1 178 2 135 2 320 1 77 1 170 1 341 2 
265 1 214 1 208 1 
22 1 12 1 333 1 59 1 316 1 289 1 178 1 299 1 141 1 336 1 218 1 117 1 341 1 267 1 119 1 308 1 
1 1 22 1 12 1 148 1 333 1 59 2 316 1 289 1 238 1 299 1 178 2 135 1 141 1 336 1 77 1 117 1 218 1 265 1 119 1 267 1 
1 4 148 2 212 1 59 5 375 1 238 1 178 5 135 5 378 1 320 1 77 4 170 1 341 1 39 1 
151 1 178 2 1 2 135 2 116 1 77 2 59 2 200 1 
178 3 1 3 135 3 320 1 148 1 77 3 59 3 341 1 
178 1 1 1 135 1 116 1 77 1 59 1 200 1 
178 1 1 1 135 1 320 1 116 1 77 1 170 1 59 1 232 1 
1 3 103 1 22 1 148 1 23 1 362 1 333 1 59 4 108 1 26 1 316 1 28 1 299 1 178 4 135 3 320 2 336 1 116 1 117 1 341 1 119 1 138 1 42 1 139 1 188 1 12 1 349 1 235 1 190 1 289 1 15 1 238 1 261 1 97 1 168 1 141 1 77 3 218 1 170 1 53 1 267 1 145 1 379 1 100 2 
178 2 1 1 135 2 77 1 148 1 59 2 341 1 39 1 375 1 
1 3 361 1 23 1 148 2 362 1 59 3 108 1 26 1 238 1 28 1 178 3 135 3 320 1 116 1 77 3 170 1 358 1 379 1 42 1 
1 2 148 1 59 2 214 1 178 2 135 2 320 1 77 2 170 1 265 1 
22 1 12 1 333 1 59 1 289 1 316 1 178 1 299 1 141 1 336 1 218 1 117 1 341 1 267 1 119 1 
22 1 12 1 333 1 59 1 289 1 316 1 178 1 141 1 336 1 117 1 341 1 267 1 119 1 207 1 344 1 
80 1 284 1 139 1 105 1 188 1 214 2 349 1 126 2 235 1 190 4 191 1 261 1 329 1 168 1 307 1 265 2 182 1 144 1 72 1 205 1 231 1 208 2 138 2 100 2 
178 1 151 1 1 1 135 1 116 1 77 1 59 1 379 1 
186 1 330 1 
186 1 330 1 
247 1 228 1 
247 1 228 1 
247 1 228 1 
186 1 330 1 314 1 
186 1 330 1 266 1 
247 1 228 1 186 2 113 1 330 2 315 1 
186 1 330 1 314 1 
186 1 330 1 314 1 
152 1 186 1 330 1 
152 1 186 1 330 1 
152 1 186 1 330 1 
310 1 311 1 1 2 23 1 84 1 362 1 59 2 149 1 298 1 178 2 135 2 341 1 68 1 204 1 183 1 322 1 283 1 186 1 76 1 216 1 77 2 264 1 330 1 266 1 
186 2 360 1 361 1 23 2 84 2 362 2 274 1 76 3 298 2 227 1 113 1 216 2 202 2 300 1 264 1 330 2 68 2 206 1 343 1 
256 1 19 1 338 1 
101 1 19 1 338 1 
256 2 209 1 101 1 19 3 254 1 277 1 
256 1 209 1 377 1 101 1 19 2 277 1 
256 1 209 2 101 1 19 2 277 1 
17 1 102 1 332 1 361 2 23 5 24 2 362 5 131 4 86 1 149 1 25 2 30 1 182 1 204 1 205 1 156 1 369 3 183 1 231 1 323 1 284 1 10 3 94 2 124 1 348 1 327 2 46 1 233 1 51 1 242 1 243 1 171 1 
268 1 17 1 332 3 361 5 23 9 24 6 362 9 131 7 149 4 109 5 317 1 252 5 30 6 31 1 367 1 182 3 205 3 369 8 231 3 323 3 284 3 10 9 43 1 94 6 124 1 348 1 160 1 327 6 46 2 233 2 167 1 51 2 242 1 243 2 171 2 
17 1 102 1 332 1 361 3 23 3 131 2 362 3 24 2 149 1 25 1 182 1 205 1 156 1 369 3 231 1 323 2 284 1 10 4 94 2 46 1 160 1 327 2 233 1 51 1 243 1 171 1 
17 1 268 1 102 1 332 2 361 4 23 4 24 4 362 4 131 3 149 2 25 2 367 1 182 2 205 2 156 1 369 5 231 2 323 3 284 2 10 7 43 1 94 4 46 1 160 1 327 4 233 1 51 1 243 1 171 1 
91 1 273 1 316 1 
37 1 316 1 
158 1 
336 1 333 1 316 1 
356 1 316 1 
333 1 316 1 
0 1 336 1 273 2 333 1 287 1 316 3 
80 2 284 1 11 1 104 1 132 1 313 1 107 1 126 4 190 7 275 2 142 1 34 1 144 3 231 1 370 1 138 3 40 1 
80 2 284 1 11 1 104 1 132 1 313 1 107 1 126 4 190 7 275 2 142 1 34 1 144 3 231 1 370 1 138 3 40 1 
80 2 284 1 11 1 104 1 259 1 132 1 313 1 107 1 126 4 190 7 275 2 142 1 34 1 144 3 231 1 370 1 138 3 40 1 
80 5 332 3 21 1 104 1 176 3 56 1 313 1 132 2 107 2 364 1 249 4 275 3 62 1 34 5 36 1 182 3 205 3 370 1 231 4 40 1 138 15 284 4 11 2 188 1 126 16 235 1 234 1 190 31 353 1 261 1 168 1 142 2 144 10 100 2 
80 3 104 1 132 1 107 1 275 2 62 1 34 1 339 1 231 1 370 1 138 4 40 1 284 1 11 1 188 2 45 1 126 5 235 2 190 9 261 2 168 2 142 1 144 4 100 4 
309 1 270 1 101 1 19 2 22 1 366 1 63 1 64 1 33 1 254 1 338 1 35 1 69 1 119 1 256 1 187 1 211 1 258 1 12 1 14 2 125 1 305 1 49 1 292 1 240 1 141 1 267 1 172 2 98 1 246 1 
309 2 270 1 101 1 19 2 22 1 110 1 366 1 63 1 64 1 254 1 338 1 69 1 119 1 230 1 256 1 187 1 211 1 12 1 14 3 125 1 127 1 305 1 49 1 292 1 240 1 141 1 267 1 172 3 98 1 246 1 
309 2 270 1 101 1 19 2 22 1 110 1 366 1 64 1 254 1 338 1 69 1 119 1 230 1 256 1 187 1 211 1 12 1 14 2 125 1 292 1 240 1 141 1 267 1 172 2 98 1 
270 2 22 1 55 1 333 1 316 1 119 1 368 1 211 2 12 1 14 1 304 1 127 1 289 1 352 1 166 1 49 1 240 2 141 1 169 1 267 1 172 1 98 2 246 1 
256 1 101 1 270 1 19 2 22 1 258 1 211 1 12 1 14 1 305 1 49 1 292 1 63 1 240 1 141 1 64 1 254 1 33 1 338 1 119 1 69 1 172 1 267 1 230 1 98 1 246 1 
143 1 
333 1 59 1 199 1 108 1 60 2 150 1 248 1 203 1 116 1 67 4 118 2 119 1 10 2 12 1 124 3 348 1 352 1 262 2 171 1 78 1 267 2 128 1 17 1 22 2 361 2 82 2 220 1 23 5 362 5 134 1 316 1 28 1 178 1 135 1 137 1 30 6 368 1 369 2 39 1 371 1 42 1 323 2 185 2 286 1 326 2 327 2 46 1 233 1 289 2 376 1 51 1 141 2 295 1 379 1 380 2 
23 3 362 3 59 1 108 1 28 1 178 1 135 1 137 1 30 2 116 1 67 2 279 1 39 1 42 1 286 1 124 1 376 1 78 1 128 1 295 1 379 1 380 1 
17 1 361 1 23 3 362 3 59 1 108 1 28 1 178 1 135 1 137 1 30 1 116 1 67 3 279 1 39 1 42 1 185 1 286 1 124 1 376 1 78 1 128 1 295 1 379 1 
17 1 361 1 23 3 362 3 59 1 108 1 28 1 178 1 135 1 137 1 30 2 116 1 67 3 279 1 39 1 42 1 185 1 124 1 286 1 326 1 376 1 78 1 128 1 295 1 379 1 380 1 
269 1 17 5 2 1 82 2 220 1 361 5 23 5 362 5 59 1 108 1 60 2 150 1 226 1 28 1 178 1 135 1 137 1 30 7 116 1 67 6 118 2 369 1 279 1 39 1 42 1 323 2 185 4 286 1 124 3 348 1 326 4 327 1 46 1 162 1 233 1 376 1 262 2 51 1 16 1 78 1 128 1 295 1 379 1 380 4 
17 1 361 2 82 2 220 1 23 4 362 4 59 1 199 1 108 1 60 2 150 1 28 1 178 1 135 1 137 1 30 4 116 1 67 4 118 2 369 1 39 1 42 1 323 2 185 2 10 2 124 2 286 1 326 2 348 1 327 1 46 1 233 1 376 1 262 2 51 1 78 1 128 1 295 1 379 1 380 2 
17 1 269 1 2 1 361 1 82 2 220 1 23 4 362 4 59 1 108 1 60 2 150 1 28 1 178 1 135 1 137 1 30 4 116 1 67 4 118 2 369 1 39 1 42 1 323 2 185 2 124 2 286 1 326 2 348 1 327 1 46 1 233 1 376 1 262 2 51 1 16 1 78 1 128 1 295 1 379 1 380 2 
17 1 269 1 2 1 361 1 82 2 220 1 23 4 362 4 59 1 108 1 60 2 150 1 28 1 178 1 135 1 137 1 30 4 116 1 67 4 118 2 369 1 39 1 42 1 323 2 185 2 124 2 286 1 326 2 348 1 327 1 46 1 233 1 376 1 262 2 51 1 16 1 78 1 128 1 295 1 379 1 380 2 
17 1 269 1 195 1 147 2 361 1 82 2 23 4 362 4 59 1 108 1 60 2 150 1 4 1 28 1 3 1 178 1 135 1 137 1 30 4 116 1 67 4 369 1 39 1 42 1 185 2 10 2 124 2 286 1 326 2 348 1 327 1 46 1 163 2 233 1 376 1 51 1 78 1 128 1 295 1 379 1 380 2 
17 1 269 1 2 1 361 1 82 2 220 1 23 4 362 4 59 1 108 1 60 2 150 1 28 1 178 1 135 1 137 1 30 5 116 1 67 5 118 2 369 1 39 1 42 1 323 2 185 3 124 2 286 1 348 1 326 3 327 1 46 1 162 1 233 1 376 1 262 2 51 1 16 1 78 1 128 1 295 1 379 1 380 3 
17 1 269 1 2 1 361 1 82 2 220 1 23 4 362 4 59 1 108 1 60 2 150 1 28 1 178 1 135 1 137 1 30 5 116 1 67 5 118 2 369 1 39 1 42 1 323 2 185 3 124 2 286 1 348 1 326 3 327 1 46 1 162 1 233 1 376 1 262 2 51 1 16 1 78 1 128 1 295 1 379 1 380 3 
17 1 147 2 361 1 82 2 23 4 362 4 59 1 199 1 108 1 60 2 150 1 28 1 4 1 178 1 135 1 137 1 30 4 116 1 67 4 369 1 39 1 42 1 185 2 10 2 124 2 286 1 326 2 348 1 327 1 46 1 163 2 233 1 376 1 51 1 78 1 128 1 295 1 379 1 380 2 
80 2 104 1 105 1 132 1 107 1 275 1 91 1 341 2 370 1 231 1 40 1 138 3 208 1 284 1 139 1 188 1 214 1 349 1 126 3 235 1 190 6 261 1 168 1 265 1 144 2 100 2 
80 1 332 2 176 3 197 1 249 3 34 1 36 1 182 2 341 1 205 1 231 1 138 6 208 11 345 1 284 2 139 2 188 2 159 1 349 1 214 4 126 8 235 2 165 1 234 1 190 14 15 1 261 2 50 1 168 2 265 11 193 1 144 2 100 4 
1 1 22 1 130 1 148 1 333 1 59 2 316 1 299 1 178 2 135 1 336 1 117 1 253 1 341 1 119 1 138 1 139 1 12 1 188 1 214 1 349 1 126 1 165 1 235 1 289 1 190 2 238 1 15 1 239 1 261 1 141 1 168 1 77 1 218 1 193 1 267 1 308 1 100 2 
1 1 332 2 103 2 104 1 148 1 333 2 59 3 107 1 299 2 336 2 117 2 341 2 119 2 205 2 208 7 346 2 12 2 349 3 214 7 126 10 165 1 15 1 261 3 260 2 168 3 77 1 218 2 265 7 267 3 80 4 18 1 22 3 132 1 316 2 275 1 178 3 135 1 29 2 229 2 34 4 182 2 230 1 370 1 231 3 40 1 138 10 284 3 324 1 139 3 44 1 188 3 235 3 289 1 190 20 238 1 141 3 193 1 144 8 100 6 
81 1 1 1 22 8 105 1 148 1 333 2 59 1 27 1 316 3 179 1 178 1 135 1 111 2 276 1 35 1 255 1 119 2 368 1 230 1 138 1 139 2 12 2 188 2 123 1 349 2 215 1 126 1 235 2 289 2 190 2 352 1 15 1 261 2 141 7 168 2 77 1 193 1 267 8 100 4 
80 1 1 1 332 1 59 1 178 1 135 1 320 1 154 1 182 1 205 1 231 1 208 1 138 2 284 1 139 1 188 1 214 1 349 1 126 1 235 1 165 1 190 3 261 1 168 1 77 1 265 1 170 1 144 1 100 2 
284 1 139 1 105 1 188 1 214 1 349 1 126 2 235 1 190 2 261 1 329 1 168 1 34 1 265 1 182 1 144 1 208 1 100 2 
80 1 139 1 105 1 188 1 214 1 349 1 235 1 190 2 261 1 168 1 265 1 144 1 72 1 205 1 231 1 208 1 100 2 138 2 
80 1 332 1 105 1 34 1 182 1 205 1 231 1 208 2 138 2 284 1 139 1 188 1 349 1 214 2 126 2 235 1 190 4 261 1 168 1 265 2 144 2 100 2 
81 1 284 1 139 1 188 1 214 1 349 1 126 2 235 1 190 2 261 1 329 1 168 1 34 1 265 1 182 1 144 1 208 1 100 2 
80 1 81 1 139 1 188 1 214 1 349 1 235 1 190 2 261 1 168 1 265 1 144 1 72 1 205 1 231 1 208 1 100 2 138 2 
81 1 80 1 332 1 34 1 182 1 205 1 231 1 208 2 138 2 284 1 139 1 188 1 349 1 214 2 126 2 235 1 190 4 261 1 168 1 265 2 144 2 100 2 
80 1 284 1 332 1 139 1 188 1 214 2 349 1 126 2 235 1 190 4 261 1 168 1 34 1 265 2 182 1 144 2 205 1 231 1 138 2 208 2 100 2 
103 1 22 1 333 1 59 1 316 1 299 1 178 1 336 1 117 1 341 1 119 1 138 1 139 1 12 1 188 1 349 1 126 1 235 1 190 2 289 1 15 1 261 1 141 1 168 1 218 1 193 1 267 1 100 2 
22 1 333 1 59 1 316 1 365 1 178 1 336 1 117 1 341 1 119 1 207 1 344 1 138 1 139 1 12 1 188 1 349 1 126 1 235 1 190 2 289 1 15 1 261 1 141 1 168 1 193 1 267 1 100 2 
80 1 332 1 34 1 182 1 205 1 231 1 208 2 138 2 284 1 139 1 188 1 349 1 214 2 126 2 235 1 165 1 190 4 261 1 168 1 265 2 144 2 100 2 
80 1 332 1 103 1 22 1 333 1 59 1 316 1 299 1 178 1 336 1 117 1 34 1 35 1 182 1 119 1 205 1 231 1 138 2 208 2 284 1 139 1 12 1 188 1 214 2 349 1 126 2 235 1 190 4 260 1 261 1 141 1 168 1 218 1 265 2 144 2 267 1 100 2 
1 1 332 1 59 1 133 1 178 1 135 1 320 1 34 1 182 1 205 1 231 1 138 1 208 1 284 1 139 1 188 1 349 1 214 1 126 2 235 1 165 1 190 3 261 1 168 1 77 1 170 1 265 1 144 1 100 2 
80 1 332 1 176 1 85 1 223 1 249 2 66 1 34 1 36 1 339 1 182 1 205 1 231 1 138 5 73 1 8 1 284 1 92 1 188 2 213 1 126 4 235 2 234 1 190 9 140 1 261 2 168 2 144 2 100 4 
80 1 332 2 176 2 198 1 58 1 85 2 223 2 62 2 249 2 318 1 319 1 32 1 34 1 339 1 36 2 340 1 182 2 205 1 231 1 138 9 73 3 8 1 284 2 92 1 188 3 74 1 213 1 126 11 235 3 190 20 261 3 168 3 144 2 100 6 
80 1 332 1 176 1 85 1 223 1 249 2 34 1 36 1 339 1 182 1 205 1 231 1 138 5 73 1 8 1 284 1 92 1 188 2 74 1 213 1 126 4 235 2 234 1 190 9 140 1 261 2 168 2 144 2 100 4 
80 1 332 1 176 1 85 1 223 1 249 2 34 1 36 1 339 1 182 1 205 1 231 1 138 5 73 1 8 1 284 1 92 1 188 2 74 1 213 1 126 4 235 2 234 1 190 9 140 1 261 2 168 2 144 2 100 4 
80 6 332 6 104 1 176 4 58 1 198 1 132 1 85 1 223 1 107 1 275 1 62 1 249 4 318 1 319 1 32 1 34 6 36 2 339 1 340 1 182 6 205 6 370 1 231 7 40 1 138 22 73 3 8 1 284 7 92 1 188 2 74 1 159 2 213 1 126 24 235 2 234 2 190 46 261 2 168 2 144 12 100 4 
227 1 186 1 113 1 216 1 300 1 84 1 330 1 68 1 48 1 298 1 
266 1 322 1 
186 1 216 1 263 1 347 1 84 1 330 1 79 1 68 1 298 1 
180 1 314 1 
152 1 112 1 315 1 
186 1 361 1 23 1 362 1 84 1 274 1 76 2 298 1 227 1 113 1 216 1 202 1 300 1 264 1 330 1 68 1 206 1 343 1 
186 1 361 1 23 1 362 1 84 1 274 1 76 2 298 1 227 1 113 1 216 1 202 1 300 1 264 1 330 1 68 1 206 1 343 1 
186 1 361 1 23 1 362 1 84 1 274 1 76 2 298 1 227 1 113 1 216 1 202 1 300 1 264 1 330 1 68 1 206 1 343 1 
180 1 314 1 315 1 
180 1 314 1 315 1 
152 1 112 1 
152 1 112 1 315 1 
283 1 310 1 
310 1 311 1 1 2 23 1 362 1 131 1 84 1 59 2 149 1 334 1 298 1 178 2 135 2 202 1 341 1 68 1 204 1 183 1 343 1 322 1 283 1 186 1 76 1 216 1 77 2 330 1 266 1 
129 1 146 1 22 2 333 1 59 2 27 1 87 1 316 1 88 1 178 2 135 2 111 2 119 1 138 1 139 1 12 1 188 1 123 1 349 1 126 1 165 1 235 1 190 2 15 1 261 1 168 1 141 2 193 1 267 2 245 1 100 2 
256 1 120 1 101 1 19 2 22 2 12 1 350 1 305 1 141 2 65 1 64 1 254 1 338 1 35 1 119 1 267 2 69 1 230 1 98 1 
256 1 7 1 101 1 19 2 22 1 12 1 350 1 305 1 141 1 64 1 254 1 338 1 267 1 69 1 119 1 230 1 98 1 
120 1 22 1 12 1 333 1 61 1 316 1 289 1 352 1 141 1 169 1 119 1 267 1 368 1 98 1 
256 1 120 1 101 1 19 2 22 1 12 1 350 1 305 1 141 1 65 1 64 1 254 1 338 1 119 1 267 1 69 1 230 1 98 1 
153 1 
291 1 17 1 335 1 361 1 91 1 327 1 369 1 
17 1 323 1 10 1 361 2 220 1 23 1 362 1 124 1 348 1 46 1 327 1 233 1 262 1 30 1 51 1 118 1 369 1 
332 2 333 3 108 2 335 1 336 3 119 4 205 2 121 2 10 12 346 2 12 3 124 3 348 4 356 2 171 2 267 3 173 2 17 2 271 1 20 2 22 3 361 8 221 1 23 5 362 5 24 6 273 2 134 1 316 10 30 5 35 1 37 3 182 2 369 9 231 2 41 2 282 1 323 6 284 2 94 6 46 4 327 8 287 1 233 4 47 2 289 1 236 1 237 1 291 1 51 4 141 3 331 2 54 2 99 2 
17 2 20 1 332 2 361 5 176 1 23 1 198 1 58 1 362 1 24 5 134 1 249 1 318 1 319 1 114 1 30 1 32 1 36 1 182 2 369 8 205 2 231 2 323 3 284 2 10 6 94 5 124 1 348 2 46 2 327 5 233 2 354 1 51 2 171 1 173 2 
1 1 20 1 312 1 23 1 362 1 132 1 59 1 222 1 200 1 107 1 178 1 135 1 320 1 116 1 71 1 369 2 231 1 40 1 284 2 348 1 46 1 327 2 233 1 51 1 77 1 16 1 145 1 173 2 
17 1 361 1 348 1 46 1 327 1 233 1 291 1 335 1 51 1 369 1 
284 2 323 5 10 10 20 1 332 2 346 1 94 5 361 5 24 5 327 5 182 2 205 2 369 5 173 2 231 2 
17 1 361 1 30 1 23 1 362 1 124 1 
22 4 221 2 23 3 362 3 333 1 316 1 134 2 115 1 203 1 30 4 119 1 368 1 369 2 371 1 282 1 12 1 124 2 75 1 348 1 160 1 46 2 327 2 233 2 289 2 352 1 51 2 141 4 171 2 267 4 
1 2 22 1 103 1 333 1 59 3 316 1 178 3 299 1 135 2 320 2 336 1 117 1 341 1 119 1 138 1 139 1 188 1 12 1 349 1 235 1 190 1 289 1 15 1 261 1 97 1 141 1 168 1 77 2 218 1 267 1 145 1 100 2 
323 2 17 2 10 4 94 2 361 4 24 2 348 1 327 2 46 1 233 1 134 1 275 1 51 1 171 1 369 1 
136 1 84 1 68 1 
227 1 283 1 84 1 161 1 68 1 
136 1 84 1 68 1 
136 1 84 1 68 1 
84 1 68 1 194 1 
84 1 68 1 194 1 
84 1 68 1 194 1 
84 1 68 1 
186 1 330 1 
80 2 284 1 104 1 188 2 132 1 107 1 126 4 235 2 190 8 275 1 62 1 261 2 168 2 34 1 144 3 231 1 370 1 40 1 138 4 100 4 
80 2 284 1 104 1 132 1 107 1 126 3 190 6 275 1 91 1 144 2 370 1 231 1 138 3 40 1 
80 1 284 1 332 1 188 1 126 2 235 1 288 1 190 4 261 1 168 1 34 1 182 1 144 2 205 1 231 1 138 2 100 2 
80 1 284 1 332 1 176 1 126 3 234 1 190 7 249 2 34 1 36 1 182 1 144 2 205 1 231 1 138 4 
80 5 332 2 104 1 176 2 132 2 107 2 275 1 249 2 62 2 34 4 182 2 205 2 370 1 231 3 40 1 138 12 284 3 188 2 159 1 126 11 234 1 235 2 190 23 261 2 50 1 168 2 144 9 359 1 100 4 
190 1 138 1 249 1 
176 1 126 1 190 1 
80 2 284 1 332 1 346 1 188 1 126 3 235 1 288 1 190 6 261 1 168 1 34 1 182 1 144 3 205 1 231 1 100 2 138 3 
80 1 332 2 176 1 198 1 58 1 249 1 319 1 318 1 32 1 34 1 36 1 339 1 182 2 205 2 231 2 138 6 284 2 188 1 126 6 235 1 190 12 261 1 168 1 144 2 100 2 
80 1 284 1 132 1 107 1 126 3 190 6 34 1 144 2 231 1 40 1 138 3 
80 1 104 1 188 1 132 1 107 1 126 1 235 1 190 3 62 1 261 1 168 1 34 1 144 2 370 1 359 1 138 2 100 2 
80 3 284 2 188 1 132 2 107 2 126 5 235 1 190 10 261 1 168 1 34 2 339 1 71 1 144 5 231 2 100 2 138 5 40 1 
284 1 188 1 126 2 235 1 190 2 261 1 168 1 34 1 339 1 182 1 144 1 100 2 
80 1 284 1 332 1 188 1 126 2 235 1 190 4 261 1 168 1 34 1 339 1 182 1 144 2 205 1 231 1 138 2 100 2 
80 1 188 3 132 1 107 1 126 1 235 3 190 3 62 1 140 1 261 3 168 3 34 1 339 1 144 2 359 1 138 2 100 6 
80 7 332 3 21 1 104 1 56 1 176 3 132 3 107 3 364 1 275 1 62 2 249 4 34 5 36 1 339 1 182 3 205 3 370 1 231 5 40 2 138 18 284 5 188 5 126 16 235 5 234 1 288 1 190 34 140 1 261 5 168 5 144 12 359 1 100 10 
80 2 176 1 104 1 198 1 132 1 107 1 275 1 249 1 36 1 339 1 231 1 370 1 138 4 40 1 284 1 188 1 126 4 235 1 190 8 261 1 168 1 144 2 100 2 
80 2 332 1 104 1 176 1 198 1 132 1 107 1 275 1 249 2 34 1 36 1 339 1 182 1 231 1 370 1 40 1 138 5 284 2 188 2 126 6 235 2 234 1 190 11 288 1 261 2 168 2 144 3 100 4 
80 3 332 2 104 1 176 1 198 1 58 1 132 1 107 1 275 1 249 1 62 1 318 1 319 1 32 1 34 1 36 1 339 1 182 2 205 2 370 1 231 3 40 1 138 10 284 3 188 3 126 9 235 3 288 1 190 19 261 3 168 3 144 4 100 6 
80 3 332 2 104 1 176 1 198 1 58 1 132 1 107 1 275 1 62 1 249 1 319 1 318 1 32 1 34 2 36 1 339 1 182 2 205 1 370 1 231 2 40 1 138 7 284 3 188 3 126 10 235 3 288 1 190 17 261 3 168 3 144 5 100 6 
80 2 176 1 104 1 198 1 132 1 107 1 275 1 249 1 36 1 339 1 231 1 370 1 138 4 40 1 284 1 188 1 126 4 235 1 190 8 261 1 168 1 144 2 100 2 
80 1 332 2 176 1 198 1 58 1 249 1 319 1 318 1 32 1 34 1 36 1 339 1 182 2 205 2 231 2 138 6 284 2 188 1 126 6 235 1 190 12 261 1 168 1 144 2 100 2 
80 3 332 2 104 1 176 1 198 1 58 1 132 1 107 1 275 1 249 1 62 2 318 1 319 1 32 1 34 2 36 1 339 1 182 2 205 1 370 1 231 2 40 1 138 8 284 3 188 4 126 10 235 4 190 18 288 1 261 4 168 4 144 5 100 8 
80 3 332 3 176 1 198 1 58 1 249 1 62 2 318 1 319 1 32 1 34 3 36 1 339 1 182 3 205 2 231 2 138 7 284 3 188 4 126 9 235 4 190 16 261 4 140 1 168 4 144 6 100 8 
80 3 284 1 104 1 132 3 107 3 126 3 190 7 34 3 144 6 231 1 370 2 138 4 40 1 
80 3 332 2 104 1 176 1 198 1 58 1 132 1 107 1 275 1 249 1 62 2 318 1 319 1 32 1 34 1 36 1 339 1 182 2 205 1 370 1 231 2 40 1 138 8 284 3 188 4 126 10 235 4 190 18 261 4 140 1 168 4 144 4 100 8 
178 1 135 1 13 1 59 1 341 1 39 1 375 1 
272 1 13 1 59 1 189 1 375 1 96 1 178 1 135 1 341 1 294 1 38 1 39 1 
22 1 141 1 12 1 91 1 333 1 119 1 368 1 267 1 316 1 352 1 289 1 
1 1 22 1 148 1 12 1 333 1 59 2 316 1 289 1 178 2 299 1 135 1 141 1 336 1 77 1 117 1 341 1 119 1 267 1 
1 1 22 1 221 1 148 1 333 2 59 2 316 3 299 1 178 2 135 2 336 2 116 1 117 1 341 1 119 1 42 1 12 1 356 1 141 1 77 2 267 1 54 1 379 1 
1 1 22 2 221 1 148 1 333 2 59 2 316 3 178 2 135 2 301 1 336 2 116 1 117 1 341 1 119 1 344 1 42 1 12 1 356 1 141 2 77 2 267 2 54 1 379 1 
17 1 22 3 361 1 221 1 23 2 362 2 273 1 333 1 108 1 316 4 301 1 30 1 336 1 37 1 119 1 155 1 12 1 289 1 356 1 192 1 141 3 267 3 54 1 
17 1 22 3 361 1 23 2 221 1 12 1 362 2 333 1 273 1 108 1 289 1 316 4 356 1 301 1 141 3 30 1 336 1 37 1 54 1 119 1 267 3 41 1 
22 1 141 1 12 1 119 1 267 1 215 1 
122 1 22 7 12 2 333 2 287 1 215 1 95 1 27 1 289 2 316 3 179 1 111 1 141 6 276 1 336 1 35 1 255 1 267 7 119 3 230 1 342 1 
1 1 103 1 104 1 148 1 333 1 59 2 107 1 299 1 336 1 117 1 119 1 341 2 208 1 12 1 214 1 349 2 126 3 165 1 260 1 261 2 168 2 77 1 218 1 265 1 267 1 80 2 22 1 132 1 88 1 316 1 275 1 178 2 135 1 29 1 35 1 370 1 231 1 40 1 138 3 284 1 139 2 188 2 235 2 190 6 141 1 144 2 100 4 
17 1 22 1 361 1 23 3 362 3 131 1 273 1 108 1 316 2 335 1 30 2 37 1 369 1 41 1 282 1 121 1 124 1 348 2 327 1 46 2 233 2 47 1 289 1 291 1 141 1 51 2 267 1 99 1 
22 2 12 1 273 1 333 1 287 1 215 1 237 1 316 2 141 2 336 1 35 1 267 2 119 2 
22 4 12 1 333 1 289 1 352 1 316 1 301 1 141 4 35 1 278 1 119 1 267 4 368 1 
122 1 22 2 221 1 44 1 12 1 333 1 95 1 89 1 316 1 251 1 141 2 336 1 267 2 119 2 
101 1 19 1 22 1 141 1 12 1 64 1 338 1 119 1 267 1 289 1 
22 2 141 2 12 1 333 1 35 1 119 1 267 2 230 1 27 1 245 1 316 1 
22 5 221 1 12 2 333 2 27 1 352 1 289 1 316 3 141 4 276 1 35 1 278 1 368 1 267 5 255 1 119 2 
22 5 221 1 57 1 12 2 333 2 27 1 352 1 289 1 316 3 141 4 276 1 35 1 278 1 368 1 267 5 119 2 
1 1 22 1 148 1 12 1 333 1 59 2 316 1 289 1 178 2 135 1 141 1 336 1 77 1 117 1 341 1 119 1 267 1 344 1 
122 1 22 1 221 1 12 1 333 1 287 1 95 1 316 1 141 1 336 1 267 1 119 2 342 1 
52 1 357 1 341 1 244 1 174 1 
175 1 17 1 210 1 361 1 23 2 131 1 362 2 108 1 373 1 26 1 28 1 116 1 52 2 357 1 341 1 244 2 379 1 174 2 42 1 
129 1 146 1 59 1 87 1 178 1 135 1 52 1 357 1 174 1 
210 1 357 1 373 1 
366 1 187 1 91 1 125 1 
49 1 366 1 187 1 14 1 125 1 172 1 246 1 
270 1 211 1 172 1 
257 1 187 1 177 1 14 3 125 1 49 1 366 1 217 1 337 2 33 1 172 3 246 1 
309 1 49 1 366 1 187 1 14 2 125 1 224 1 172 2 246 1 
256 1 49 1 19 1 196 1 33 1 338 1 14 1 125 1 172 1 351 1 246 1 
49 1 366 1 33 1 14 1 125 1 172 1 246 1 
49 1 366 2 187 1 33 1 14 1 172 1 246 1 
14 2 125 1 363 1 49 2 366 1 293 1 33 1 172 2 280 1 246 2 
309 2 187 1 196 1 14 3 125 2 225 1 374 1 49 1 366 1 241 1 33 1 172 3 246 1 
256 1 309 1 101 1 187 1 19 2 14 2 125 1 49 1 366 1 33 1 254 1 338 1 181 1 172 2 246 1 
309 2 187 1 196 1 14 4 296 1 125 2 224 1 225 1 49 2 366 1 33 1 172 4 246 2 
49 1 366 1 187 1 33 1 14 1 125 1 172 1 246 1 
309 2 257 1 187 2 196 1 177 1 14 4 125 3 328 1 225 1 49 1 366 2 337 1 172 4 246 1 
309 1 187 1 14 2 125 1 164 1 297 1 49 1 366 1 302 1 33 1 172 2 246 1 
49 1 257 2 366 1 187 1 337 2 157 1 33 1 177 1 14 3 125 1 172 3 246 1 
285 2 5 1 83 1 125 2 
49 1 33 1 325 1 14 1 172 1 246 1 
309 1 49 1 366 1 187 1 33 1 14 2 125 1 172 2 374 1 246 1 
93 1 
49 1 366 1 187 1 33 1 14 1 125 1 172 1 246 1 
309 1 49 1 366 1 187 1 337 1 33 1 14 3 125 1 172 3 374 1 246 1 
196 1 125 1 328 1 225 1 
366 1 125 1 

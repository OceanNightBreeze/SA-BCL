#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (188,270) (188,270) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (188,270) (188,270) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (188,270) (188,270) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (188,270) (188,270) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | RETURN | 994 | return null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
152 1 343 7 299 1 141 1 363 1 275 1 105 1 364 1 134 2 225 1 181 1 109 5 286 3 288 2 278 1 227 9 230 1 280 2 340 4 5 1 221 1 27 1 28 1 232 9 
152 1 343 7 299 1 141 1 363 1 275 1 105 1 364 1 134 2 225 1 181 1 109 5 286 3 288 2 278 1 227 9 230 1 280 2 5 1 340 4 221 1 27 1 28 1 232 9 
343 1 141 1 363 1 364 1 134 2 225 1 286 1 109 2 288 2 227 3 340 1 27 1 232 3 
24 1 288 1 227 1 111 1 141 1 188 1 270 1 275 1 28 1 225 1 134 1 48 1 232 1 
24 1 288 1 227 1 111 1 141 1 188 1 270 1 275 1 28 1 225 1 134 1 48 1 232 1 
24 1 288 1 227 1 111 1 141 1 188 1 270 1 275 1 28 1 225 1 134 1 48 1 232 1 
24 1 288 1 227 1 111 1 141 1 188 1 270 1 275 1 28 1 225 1 134 1 48 1 232 1 
152 1 343 3 299 1 141 1 363 1 275 1 105 1 134 1 286 1 181 1 109 3 288 1 227 4 280 2 340 2 27 1 28 1 232 4 
299 1 237 1 141 1 363 1 275 1 134 1 225 1 48 1 109 1 288 1 203 1 227 2 193 1 27 1 94 1 232 2 
103 1 334 1 80 1 354 1 132 1 259 1 355 1 44 1 304 1 34 1 358 1 167 1 267 1 329 1 
124 1 
103 2 80 2 124 1 335 1 15 1 31 1 330 1 34 1 
103 5 80 5 83 1 2 1 335 2 32 1 31 1 121 2 34 2 367 2 339 1 124 1 216 1 228 1 169 1 15 1 194 1 158 2 129 1 
209 1 64 1 117 1 318 1 259 2 45 1 68 1 144 1 289 1 267 3 219 1 239 1 368 2 148 2 77 1 8 2 329 1 351 1 294 1 244 2 296 1 334 2 354 3 223 1 132 2 250 1 373 1 372 2 305 1 304 2 180 1 374 1 376 1 86 1 337 1 307 1 18 1 
167 1 334 1 267 1 354 1 132 1 259 1 355 1 304 1 44 1 329 1 
175 1 103 1 80 1 354 1 161 1 132 1 31 1 47 1 285 1 253 1 167 1 124 1 324 1 267 1 
175 1 103 2 334 1 80 2 354 1 161 1 132 1 31 1 259 1 304 1 285 1 253 1 167 1 124 1 267 1 
103 1 246 1 80 1 335 1 34 1 
103 2 80 2 124 1 335 1 15 1 269 1 31 1 34 1 
103 1 80 1 335 1 
124 1 31 1 326 1 
361 1 252 2 124 1 
334 2 267 2 354 2 132 2 259 2 304 2 68 1 329 1 
334 3 176 1 267 3 354 3 132 3 259 1 304 3 68 1 
167 1 334 1 267 1 354 1 132 1 355 1 304 1 
167 1 349 1 334 1 267 1 354 1 132 1 259 1 304 1 322 1 
64 1 117 1 161 1 318 1 97 1 259 2 45 1 68 1 322 1 285 1 167 1 289 1 267 4 219 1 239 1 368 2 148 1 77 1 8 1 329 1 351 1 175 1 294 1 296 1 103 1 244 1 334 3 176 1 80 1 354 4 132 3 250 1 373 1 372 1 305 1 304 3 180 1 376 1 86 1 253 1 307 1 17 1 310 1 18 1 
334 1 176 1 324 1 267 2 354 2 132 2 33 1 304 1 68 1 
175 1 103 1 334 3 95 1 80 1 176 2 161 1 354 3 132 3 259 1 97 1 304 3 322 1 285 1 167 1 253 1 124 1 267 3 310 1 
334 2 176 1 308 1 1 1 267 2 354 2 132 2 259 1 304 2 322 1 
244 1 296 1 117 1 354 1 318 1 372 1 45 1 305 1 68 1 307 1 267 1 239 1 148 1 77 1 351 1 
244 1 296 1 117 1 354 1 372 1 305 1 68 1 200 1 191 1 307 1 267 1 239 1 148 1 77 1 351 1 
209 2 139 2 114 1 1 2 214 1 146 1 219 1 100 1 368 2 8 4 56 1 294 1 197 1 250 1 373 1 180 1 357 1 86 1 376 2 359 1 308 2 231 1 20 1 341 1 
167 1 334 1 267 1 354 1 132 1 143 1 304 1 285 1 
334 1 354 2 132 2 259 1 304 1 68 2 322 1 349 1 267 2 
139 1 308 1 1 1 
244 1 296 1 117 1 354 1 11 1 318 1 372 1 45 1 305 1 68 1 307 1 267 1 239 1 148 1 77 1 351 1 
334 4 176 2 84 1 354 5 132 5 259 1 33 1 304 4 68 1 322 1 324 1 267 5 310 1 241 1 
167 1 334 2 267 2 354 2 132 2 143 1 355 1 304 2 
296 1 244 1 117 1 334 1 176 1 1 1 354 2 318 1 132 1 372 1 305 1 304 1 45 1 307 1 267 2 310 1 239 1 148 1 77 1 351 1 
326 1 68 1 
257 1 319 1 369 1 
123 1 69 1 257 2 220 1 58 1 319 2 
257 1 319 1 
257 1 319 1 
69 1 58 1 
69 1 58 1 
69 1 58 1 
257 1 319 1 190 1 
257 1 319 1 190 1 
257 1 319 1 190 1 
257 1 319 1 39 1 
257 1 319 1 39 1 
257 1 319 1 39 1 
210 2 103 2 153 2 257 2 80 2 371 1 65 1 353 2 306 2 319 2 182 1 110 1 123 1 124 1 53 1 137 1 380 3 7 1 233 2 
210 1 257 1 187 1 212 1 119 1 319 1 68 1 265 1 267 2 99 1 7 1 369 1 103 1 334 2 153 1 80 1 354 2 248 1 132 2 336 1 304 2 306 1 380 1 233 1 
49 1 203 1 229 1 275 3 62 1 28 2 
203 1 229 1 41 1 275 2 62 1 28 1 
203 1 229 1 275 2 28 1 62 2 
299 1 275 1 28 1 
203 1 299 1 275 1 
361 1 187 1 236 2 119 1 362 2 121 1 146 1 367 1 52 1 216 2 124 2 169 1 170 1 292 1 99 1 325 1 240 2 100 1 6 1 150 1 56 1 103 5 197 1 80 5 335 1 31 1 32 3 34 4 252 3 59 1 15 1 158 1 
361 3 116 1 236 6 346 1 347 1 121 2 146 3 367 2 216 6 124 5 169 1 292 3 99 4 325 2 194 1 240 6 100 3 6 2 150 1 56 3 103 9 246 5 9 1 197 3 80 9 335 6 31 1 32 8 133 5 34 7 252 9 156 1 15 1 158 2 256 1 
361 2 236 2 362 1 121 1 146 1 52 1 367 1 124 3 216 2 99 1 292 1 325 1 194 1 100 1 240 2 6 1 56 1 103 3 197 1 80 3 31 1 32 3 34 2 252 4 59 1 158 1 
361 3 116 1 236 4 362 2 121 1 146 2 367 1 52 1 124 4 216 4 99 2 292 2 325 1 240 4 194 1 100 2 6 1 56 2 103 4 9 1 197 2 80 4 31 1 32 5 34 3 252 7 59 1 158 1 256 1 
305 1 77 1 
307 1 305 1 23 1 276 1 77 3 321 2 
331 1 
307 1 305 1 77 1 
77 1 4 1 
326 1 77 1 321 1 
13 1 77 1 
314 1 209 4 114 3 57 1 333 1 295 1 197 1 274 2 283 1 376 3 50 1 98 1 226 1 100 1 311 1 20 2 8 7 130 1 
209 16 114 10 283 1 42 1 320 4 50 5 146 3 98 2 292 3 368 2 100 4 222 3 8 31 130 1 56 3 295 1 57 2 333 2 294 1 197 4 274 3 177 1 250 1 180 1 86 1 376 15 338 1 226 2 311 1 89 1 20 5 342 1 21 1 313 1 
209 5 114 4 283 1 50 1 366 1 98 1 100 1 368 4 8 9 130 1 294 2 333 1 57 1 197 1 274 2 177 1 250 2 180 2 86 2 376 4 226 1 19 1 311 1 20 3 
209 4 114 3 57 1 333 1 295 1 197 1 274 2 283 1 376 3 50 1 98 1 226 1 100 1 311 1 20 2 8 7 130 1 
209 4 114 3 57 1 333 1 295 1 197 1 274 2 283 1 376 3 50 1 98 1 226 1 100 1 311 1 20 2 8 7 130 1 
244 1 117 1 211 1 372 1 305 1 106 2 260 1 225 2 134 1 155 2 288 1 266 1 227 1 16 1 147 1 239 1 90 1 148 1 127 1 77 1 195 2 351 1 232 1 
117 1 0 1 141 1 189 1 49 1 288 1 148 1 195 1 28 1 351 1 244 1 299 1 302 1 372 1 275 2 106 1 251 1 134 1 225 1 155 1 203 1 227 1 279 1 255 1 88 1 232 1 
117 1 343 1 0 1 141 1 363 1 189 1 120 1 49 1 288 1 148 1 27 1 195 1 28 1 351 1 244 1 299 1 302 1 372 1 275 2 106 1 251 1 134 1 225 1 155 1 109 1 203 1 227 2 279 1 88 1 232 2 
117 1 211 1 343 2 0 1 363 1 49 1 288 1 148 1 271 1 27 1 195 1 28 1 351 1 244 1 299 1 302 1 372 1 275 2 106 1 251 1 134 1 225 1 155 1 109 1 203 1 227 3 279 1 255 1 88 1 232 3 
117 1 343 2 363 1 49 1 148 1 271 1 27 1 195 1 28 1 351 1 244 1 299 1 372 1 275 2 106 1 251 1 225 1 155 1 109 1 203 1 227 2 279 1 255 1 88 1 232 2 
115 1 
96 1 282 1 285 1 47 1 287 1 51 1 149 2 196 3 151 2 243 2 103 4 298 2 354 1 154 5 253 1 15 2 160 1 158 1 208 1 361 2 161 1 121 1 167 1 367 1 124 1 324 1 216 1 26 1 267 1 169 1 218 1 173 3 175 1 80 4 131 1 335 5 132 1 32 1 31 1 224 3 92 1 381 1 
361 2 161 1 96 1 282 1 121 1 47 1 285 1 167 1 51 1 287 1 367 1 124 1 216 1 324 1 218 1 169 1 267 1 26 1 149 2 173 3 243 2 151 2 175 1 196 3 103 4 80 4 298 2 354 1 131 1 132 1 335 5 31 1 32 1 224 3 154 5 253 1 15 2 158 1 160 1 208 1 92 1 381 1 
185 2 96 1 285 1 47 1 287 1 55 1 151 2 196 2 103 4 298 2 354 1 154 4 253 1 252 2 15 2 158 1 160 1 208 1 161 1 121 1 167 1 367 1 324 1 216 1 124 1 267 1 169 1 26 1 71 1 328 2 173 2 175 1 80 4 131 1 132 1 335 4 32 1 31 1 224 2 
234 1 96 1 47 1 285 1 287 1 239 2 148 2 149 2 6 1 55 1 351 1 196 2 243 2 151 2 103 5 244 2 247 1 298 2 354 1 305 1 154 4 252 2 253 1 15 3 158 1 160 1 208 1 361 2 117 1 161 1 121 1 260 1 167 1 266 1 367 1 124 2 216 2 324 1 169 1 26 1 267 1 72 1 327 1 77 1 173 2 175 1 80 5 131 1 335 6 132 1 31 1 32 2 372 2 224 2 381 1 
161 1 96 1 47 1 285 1 167 1 287 1 324 1 267 1 26 1 173 1 330 1 175 1 103 3 80 3 354 1 132 1 335 2 154 2 253 1 15 1 160 1 208 1 
161 1 96 1 47 1 285 1 167 1 287 1 324 1 124 1 267 1 26 1 330 1 175 1 103 3 80 3 354 1 335 1 132 1 31 1 224 1 154 3 253 1 15 1 160 1 208 1 
161 1 96 1 47 1 285 1 167 1 287 1 324 1 124 1 267 1 26 1 330 1 173 1 175 1 196 1 103 3 80 3 354 1 132 1 335 2 31 1 224 1 154 3 253 1 15 1 160 1 208 1 
361 2 282 1 161 1 96 1 121 1 47 1 285 1 167 1 51 1 287 1 367 1 216 1 124 5 324 1 218 1 169 1 26 1 267 1 149 2 293 1 330 1 173 4 243 2 151 2 175 1 196 4 103 5 80 5 298 2 354 1 131 1 132 1 335 7 32 1 31 5 224 4 154 6 253 1 15 3 158 1 160 1 92 1 208 1 381 1 
96 1 285 1 47 1 287 1 149 2 55 1 151 2 243 2 196 2 103 4 298 2 354 1 154 4 253 1 252 2 15 2 158 1 160 1 208 1 361 2 161 1 121 1 167 1 367 1 324 1 216 1 124 2 267 1 169 1 26 1 173 2 175 1 80 4 131 1 132 1 335 4 32 1 31 1 224 2 381 1 
361 2 161 1 96 1 282 1 121 1 47 1 285 1 167 1 287 1 51 1 367 1 124 1 216 1 324 1 218 1 267 1 26 1 169 1 149 2 173 2 196 2 243 2 151 2 175 1 103 4 80 4 298 2 354 1 131 1 335 4 132 1 31 1 32 1 224 2 154 4 253 1 15 2 160 1 158 1 208 1 381 1 
361 2 161 1 96 1 282 1 121 1 47 1 285 1 167 1 287 1 51 1 367 1 124 1 216 1 324 1 218 1 267 1 26 1 169 1 149 2 173 2 196 2 243 2 151 2 175 1 103 4 80 4 298 2 354 1 131 1 335 4 132 1 31 1 32 1 224 2 154 4 253 1 15 2 160 1 158 1 208 1 381 1 
185 2 344 1 161 1 96 1 121 1 47 1 285 1 167 1 287 1 367 1 124 1 216 1 324 1 218 1 267 1 26 1 169 1 71 1 74 1 328 2 173 2 196 2 151 2 175 1 103 4 80 4 298 2 354 1 131 1 335 4 132 1 31 1 32 1 224 2 154 4 252 2 253 1 15 2 160 1 158 1 208 1 
209 1 281 1 64 1 117 2 120 1 144 2 260 1 262 1 266 1 267 1 219 2 350 1 239 2 148 8 368 4 77 3 8 2 351 2 244 7 294 2 334 1 176 1 354 1 132 1 223 1 372 8 250 2 373 2 304 1 305 2 180 2 277 1 86 2 376 1 377 1 359 1 60 1 309 1 255 1 
139 1 209 1 114 1 1 1 259 1 46 1 322 1 146 1 267 1 219 1 292 1 368 2 100 1 8 3 56 1 30 1 294 1 334 1 197 1 354 1 132 1 250 1 373 1 304 1 180 1 86 1 376 2 308 1 20 1 
63 1 209 1 64 1 117 1 318 1 45 1 213 1 68 1 168 1 267 2 219 1 239 1 148 1 368 2 77 1 8 2 351 1 30 1 296 1 244 1 294 1 334 1 176 1 11 1 354 2 132 1 223 1 372 1 373 1 250 1 305 1 304 1 180 1 86 1 376 1 307 1 308 1 310 1 
139 7 1 7 3 1 283 1 45 2 50 4 146 2 98 1 292 2 239 1 148 3 100 3 54 2 8 20 101 2 351 2 56 2 57 1 244 3 294 3 296 2 297 1 197 3 300 2 354 3 250 3 304 1 305 2 307 2 308 7 255 1 310 1 311 1 18 2 20 4 209 10 64 1 114 8 117 2 318 2 68 2 166 1 267 3 219 3 368 6 77 2 130 1 30 1 334 1 176 1 274 1 223 1 132 1 372 3 373 3 180 3 376 10 86 3 37 2 
139 1 209 2 114 1 294 1 1 1 373 1 250 1 180 1 214 1 86 1 50 1 359 1 146 1 308 1 219 1 368 2 100 1 8 2 
139 1 114 1 294 1 197 1 1 1 373 1 250 1 180 1 357 1 86 1 376 2 359 1 308 1 219 1 368 2 20 1 8 2 56 1 
209 2 139 2 114 2 1 2 50 1 146 1 219 1 292 1 100 1 368 2 8 4 56 1 294 1 197 1 250 1 373 1 180 1 86 1 376 2 359 1 308 2 20 1 
139 1 209 2 114 1 294 1 1 1 373 1 250 1 180 1 214 1 86 1 50 1 262 1 146 1 308 1 219 1 368 2 100 1 8 2 
139 1 114 1 294 1 197 1 1 1 373 1 250 1 180 1 357 1 86 1 376 2 262 1 308 1 219 1 368 2 20 1 8 2 56 1 
209 2 139 2 114 2 1 2 262 1 50 1 146 1 219 1 292 1 100 1 368 2 8 4 56 1 294 1 197 1 250 1 373 1 180 1 86 1 376 2 308 2 20 1 
209 2 139 2 114 2 1 2 50 1 146 1 219 1 292 1 100 1 368 2 8 4 56 1 294 1 197 1 250 1 373 1 180 1 86 1 376 2 308 2 20 1 
209 1 64 1 117 1 318 1 45 1 68 1 267 1 219 1 239 1 148 1 368 2 77 1 8 2 351 1 296 1 244 1 294 1 354 1 223 1 372 1 373 1 250 1 305 1 180 1 86 1 376 1 307 1 18 1 
209 1 64 1 117 1 68 1 191 1 267 1 219 1 239 1 148 1 368 2 77 1 8 2 351 1 296 1 244 1 294 1 354 1 223 1 372 1 373 1 250 1 305 1 180 1 200 1 86 1 376 1 307 1 159 1 
209 2 139 2 114 2 1 2 50 1 146 1 219 1 292 1 100 1 368 2 8 4 56 1 30 1 294 1 197 1 250 1 373 1 180 1 86 1 376 2 308 2 20 1 
139 2 209 2 114 2 117 1 1 2 318 1 45 1 120 1 50 1 146 1 267 1 219 1 292 1 100 1 148 1 368 2 77 1 8 4 101 1 56 1 351 1 296 1 244 1 294 1 197 1 354 1 372 1 373 1 250 1 305 1 180 1 376 2 86 1 307 1 308 2 18 1 20 1 
209 2 139 1 114 1 1 1 259 1 215 1 322 1 50 1 146 1 267 1 219 1 292 1 368 2 100 1 8 3 56 1 30 1 294 1 334 1 197 1 354 1 132 1 250 1 373 1 304 1 180 1 376 1 86 1 308 1 
139 1 209 3 114 2 57 1 294 1 197 1 274 1 1 1 283 1 373 1 250 1 180 1 68 2 376 3 86 1 359 1 98 1 308 1 219 1 100 1 311 1 368 2 326 1 20 2 8 6 130 1 
139 11 209 8 64 1 114 2 1 11 68 1 320 3 50 1 146 2 70 1 219 2 268 1 292 2 368 4 100 2 222 3 8 14 56 1 30 1 294 2 197 1 223 1 250 2 373 1 180 2 376 6 86 2 338 1 108 1 308 4 91 1 20 1 342 1 
209 9 114 6 235 1 258 2 43 1 320 2 164 1 50 3 366 1 146 3 292 3 368 4 100 3 222 1 8 19 174 1 56 3 294 2 197 3 10 1 82 1 199 2 250 2 180 2 85 1 86 2 376 10 338 1 20 3 342 1 
209 14 114 4 235 1 258 4 43 1 320 2 164 2 50 2 366 1 146 3 292 3 368 6 100 3 222 2 8 26 174 2 56 2 294 3 245 1 197 2 177 2 104 1 199 1 250 3 180 3 85 1 376 12 86 3 157 1 38 1 312 1 379 1 20 2 342 2 
209 20 114 8 235 1 283 1 258 4 43 1 320 4 164 1 50 4 366 1 146 4 98 1 292 4 368 6 100 5 222 3 8 41 130 1 174 2 56 4 57 1 294 3 245 1 197 5 81 1 82 1 274 1 177 1 104 1 199 1 250 3 180 3 85 1 86 3 376 21 338 1 157 1 311 1 38 1 312 1 379 1 20 4 342 3 
209 20 114 7 235 1 283 1 258 4 43 1 320 4 164 1 50 3 366 1 146 4 98 1 292 4 368 8 100 5 222 3 8 38 130 1 174 2 56 3 57 1 294 4 245 1 197 4 81 1 82 1 274 1 177 2 104 1 199 1 250 4 180 4 85 1 86 4 376 18 338 1 157 1 311 1 38 1 312 1 379 1 20 4 342 3 
209 27 114 14 235 1 283 1 258 4 43 1 320 4 164 1 50 7 366 1 146 7 98 1 292 7 368 4 100 8 222 4 8 52 130 1 174 1 56 7 57 1 294 2 245 1 197 8 274 1 177 1 104 1 199 1 250 2 180 2 85 1 86 2 376 25 338 2 157 1 311 1 91 2 38 1 312 1 379 1 20 7 342 2 
210 1 123 1 153 1 257 1 371 1 65 1 142 1 306 1 319 1 233 1 
212 1 369 1 
323 1 370 1 210 1 153 1 257 1 306 1 319 1 29 1 233 1 
103 1 210 1 153 1 80 1 257 1 371 1 65 1 353 1 306 1 319 1 182 1 110 1 123 1 124 1 53 1 380 2 7 1 233 1 
103 1 210 1 153 1 80 1 257 1 371 1 65 1 353 1 306 1 319 1 182 1 110 1 123 1 124 1 53 1 380 2 7 1 233 1 
103 1 210 1 153 1 80 1 257 1 371 1 65 1 353 1 306 1 319 1 182 1 110 1 123 1 124 1 53 1 380 2 7 1 233 1 
217 1 220 1 190 1 
217 1 220 1 190 1 
39 1 138 1 
220 1 39 1 138 1 
265 1 336 1 
210 1 257 1 187 1 212 1 119 1 319 1 68 1 265 1 267 2 99 1 369 1 103 1 153 1 334 2 80 1 353 1 354 2 248 1 132 2 336 1 306 1 304 2 14 1 34 1 182 1 380 1 233 1 
217 1 190 1 
220 1 39 1 138 1 
209 1 64 1 117 1 162 1 144 2 267 2 219 1 172 1 148 2 368 2 77 1 8 2 351 1 30 1 294 1 244 2 354 2 132 2 223 1 372 2 373 1 250 1 305 1 180 1 107 1 277 1 86 1 376 1 60 1 87 1 61 1 
244 1 117 1 79 1 372 1 305 1 106 1 260 1 266 1 239 1 148 1 128 1 127 1 77 1 351 1 
78 1 244 1 117 1 79 1 299 1 0 1 372 1 275 2 106 1 49 1 264 1 203 1 279 1 255 1 88 1 148 1 28 1 351 1 
78 1 244 2 117 1 79 1 299 1 0 1 372 2 275 2 106 1 120 1 49 1 264 1 203 1 279 1 255 1 88 1 148 2 28 1 351 1 
244 1 117 1 299 1 0 1 372 1 275 2 106 1 49 1 264 1 203 1 207 1 279 1 255 1 88 1 148 1 28 1 351 1 
238 1 
64 1 117 1 318 1 259 2 45 1 68 1 289 1 267 3 219 1 239 1 368 2 148 1 77 1 8 1 329 1 351 1 244 1 296 1 294 1 334 2 354 3 132 2 250 1 372 1 373 1 304 2 305 1 180 1 376 1 86 1 307 1 18 1 
361 2 274 1 236 2 32 1 31 2 121 1 252 4 367 1 216 2 124 4 169 1 240 2 158 1 6 1 327 1 
83 1 31 1 32 1 121 1 367 1 339 1 216 1 124 1 169 1 158 1 
361 5 197 2 236 5 32 5 365 1 252 10 146 2 216 5 124 5 292 2 378 2 100 2 240 5 54 1 56 2 
103 1 80 1 124 1 335 1 15 1 31 1 
234 1 117 1 118 1 121 2 260 1 367 2 266 1 216 2 169 1 72 1 239 2 194 1 148 4 6 2 77 1 327 2 351 1 244 4 103 3 80 3 178 1 335 4 372 4 32 2 305 1 375 1 135 2 15 2 158 2 
361 1 121 1 367 1 216 1 124 2 169 1 149 1 243 1 103 1 80 1 335 1 32 1 31 1 252 1 15 1 158 1 381 1 
236 6 4 2 146 2 292 2 239 1 148 3 240 6 100 2 6 2 54 2 102 1 351 3 56 2 244 3 103 5 197 2 12 2 305 3 356 2 13 3 252 12 307 3 205 2 15 3 158 4 361 6 117 4 315 1 161 2 317 2 120 1 121 4 23 1 321 2 365 2 367 4 124 8 216 8 169 4 125 2 75 1 126 2 327 1 77 10 80 5 83 1 178 1 335 5 31 2 32 9 372 3 135 1 339 1 378 2 
361 3 236 5 121 2 320 1 365 1 146 2 367 2 124 5 216 5 169 2 292 2 240 5 100 2 6 1 222 1 327 1 56 2 103 1 273 1 245 1 80 1 197 2 104 1 335 1 32 8 31 2 303 1 252 6 15 1 157 1 378 2 158 2 38 1 312 1 342 1 
259 1 44 1 121 1 365 1 167 1 51 1 367 1 98 1 216 2 267 1 169 1 100 2 329 1 57 1 103 1 334 1 80 1 197 1 354 1 132 1 32 2 355 1 304 1 358 1 206 1 378 2 158 1 311 1 
339 1 124 1 216 1 83 1 32 1 31 1 326 1 
210 1 371 1 291 1 336 1 306 1 
210 1 306 1 113 1 
210 1 306 1 113 1 
210 1 306 1 113 1 
210 1 112 1 306 1 
210 1 112 1 306 1 
210 1 112 1 306 1 
210 1 306 1 
257 1 319 1 
209 5 294 1 57 2 114 5 197 2 250 1 180 1 86 1 376 5 50 2 366 1 98 2 206 1 368 2 311 1 100 2 20 3 8 10 
209 2 294 1 114 1 250 1 180 1 86 1 50 1 366 1 146 1 368 2 100 1 8 2 
209 2 114 2 294 1 197 1 250 1 180 1 376 2 86 1 50 1 366 1 146 1 292 1 368 2 100 1 20 1 8 4 56 1 
209 1 294 3 57 1 114 2 177 1 82 1 345 1 250 3 180 3 376 2 86 3 50 1 366 1 98 1 368 6 20 1 8 3 
209 16 114 12 345 1 283 1 42 1 320 4 50 5 366 1 146 3 98 3 292 3 368 10 100 5 222 3 8 34 130 1 56 3 57 3 294 5 197 5 274 1 177 2 82 1 250 5 180 5 376 18 86 5 338 1 202 1 311 2 89 1 20 7 313 1 342 1 
209 4 114 2 283 1 320 1 366 1 98 1 100 1 368 2 222 1 8 8 130 1 294 1 57 1 197 1 274 1 104 1 250 1 180 1 376 4 86 1 311 1 20 2 342 1 
209 6 114 3 283 1 320 2 50 1 366 1 146 1 98 1 292 1 368 4 100 2 222 1 8 11 130 1 57 1 294 2 197 1 274 1 104 1 250 2 180 2 376 5 86 2 338 1 202 1 311 1 20 2 342 1 
209 9 114 4 283 1 320 1 50 1 366 1 146 2 98 1 292 2 368 6 100 3 222 1 8 19 130 1 56 2 57 1 294 3 245 1 197 3 274 1 104 1 177 1 250 3 180 3 376 10 86 3 202 1 157 1 311 1 38 1 312 1 20 3 342 1 
209 10 114 5 283 1 320 1 50 2 366 1 146 2 98 1 292 2 368 6 100 3 222 1 8 17 130 1 56 1 57 1 294 3 245 1 197 2 274 1 177 1 104 1 250 3 180 3 376 7 86 3 202 1 157 1 311 1 312 1 38 1 20 3 342 1 
209 4 114 2 283 1 320 1 366 1 98 1 100 1 368 2 222 1 8 8 130 1 294 1 57 1 197 1 274 1 104 1 250 1 180 1 376 4 86 1 311 1 20 2 342 1 
209 6 114 2 320 1 50 1 366 1 146 2 292 2 368 2 100 2 222 1 8 12 56 2 294 1 245 1 197 2 104 1 250 1 180 1 376 6 86 1 157 1 312 1 38 1 20 1 342 1 
209 10 114 5 283 1 320 1 50 2 366 1 146 2 98 1 292 2 368 8 100 3 222 1 8 18 130 1 56 1 57 1 294 4 245 1 197 2 274 1 104 1 177 2 250 4 180 4 376 8 86 4 202 1 157 1 311 1 38 1 312 1 20 3 342 1 
209 9 114 6 320 1 50 3 366 1 146 3 292 3 368 8 100 3 222 1 8 16 56 2 294 4 245 1 197 2 104 1 82 1 177 2 250 4 180 4 376 7 86 4 157 1 38 1 312 1 20 3 342 1 
209 3 57 3 114 6 197 1 283 1 376 4 50 3 98 3 311 1 100 1 20 3 8 7 130 2 
209 10 114 4 283 1 320 1 50 1 366 1 146 2 98 1 292 2 368 8 100 3 222 1 8 18 130 1 56 1 57 1 294 4 245 1 197 2 274 1 104 1 82 1 177 2 250 4 180 4 376 8 86 4 157 1 311 1 38 1 312 1 20 3 342 1 
209 4 114 3 294 2 57 1 197 1 274 1 177 1 283 1 250 2 180 2 376 4 86 2 50 1 98 1 100 1 311 1 368 4 20 2 8 8 130 1 
209 3 57 1 114 2 197 1 274 1 283 1 376 3 98 1 311 1 100 1 326 1 20 2 8 6 130 1 
209 2 114 2 294 1 197 1 250 1 180 1 376 2 86 1 202 1 50 1 146 1 292 1 368 2 100 1 20 1 8 4 56 1 
209 3 114 2 197 1 320 2 376 4 338 1 50 1 146 1 292 1 100 1 222 1 20 1 342 1 8 7 56 1 
209 11 114 9 345 1 283 1 320 2 50 4 146 2 98 2 292 2 100 3 368 4 222 2 8 23 130 1 56 2 57 2 294 2 197 3 274 1 177 2 250 2 180 2 376 12 86 2 338 1 108 1 311 1 91 1 20 5 
320 1 8 1 376 1 
209 1 222 1 8 1 
209 3 294 1 114 3 197 1 250 1 180 1 86 1 376 3 202 1 50 1 146 1 292 1 368 2 100 1 54 1 20 2 8 6 56 1 
209 6 114 2 320 1 50 1 366 1 146 2 292 2 368 2 100 2 222 1 8 12 56 2 294 1 245 1 197 2 104 1 250 1 180 1 376 6 86 1 157 1 312 1 38 1 20 1 342 1 
209 3 57 1 114 2 197 1 376 3 50 1 98 1 311 1 100 1 20 1 8 6 
209 1 114 2 57 1 294 1 177 1 345 1 283 1 250 1 180 1 376 2 86 1 50 1 98 1 368 2 20 1 8 3 130 1 
186 1 354 1 132 1 33 1 68 1 284 1 25 1 204 1 324 1 267 1 184 1 242 1 
204 1 324 1 267 1 354 1 132 1 33 1 68 1 
244 4 117 1 372 4 305 1 120 1 163 1 260 1 266 1 239 1 73 1 148 4 77 1 351 1 
244 2 352 1 117 2 3 1 372 2 305 1 135 1 201 1 307 1 136 1 290 1 148 2 77 1 351 1 
244 1 203 1 117 1 299 1 279 1 372 1 239 1 148 1 275 1 351 1 
244 2 117 1 372 2 305 1 162 1 120 1 60 1 255 1 148 2 77 1 351 1 
244 4 281 1 117 2 372 5 305 2 120 1 163 1 260 1 135 1 266 1 60 1 309 1 239 1 148 5 77 3 351 2 
244 4 117 2 66 1 372 5 305 2 120 1 163 1 260 1 135 1 266 1 60 1 309 1 239 1 148 5 77 3 351 2 
296 1 244 1 117 1 334 1 176 1 354 2 132 1 318 1 372 1 305 1 304 1 68 1 307 1 267 2 239 1 148 1 77 1 351 1 
296 1 244 1 117 1 334 1 176 1 354 2 132 2 318 1 372 1 305 2 304 2 356 1 68 1 4 1 285 1 167 1 253 1 135 1 307 2 267 2 148 1 77 3 351 1 
117 1 68 1 4 1 285 1 167 1 267 2 73 1 148 2 77 3 351 1 244 2 296 1 334 1 176 1 354 2 132 2 372 2 304 2 305 2 356 1 200 1 135 1 253 1 307 2 
117 1 161 1 4 1 321 1 124 1 239 1 73 1 148 3 76 1 77 4 351 1 244 3 103 2 80 2 335 1 249 1 372 3 31 1 305 1 356 1 13 1 135 1 307 1 
103 2 244 3 117 1 80 2 161 1 335 1 31 1 372 3 305 1 356 1 13 1 4 1 321 1 135 1 307 1 124 1 205 1 239 1 73 1 148 3 77 4 351 1 
244 1 117 1 372 1 148 1 351 1 377 1 
332 1 281 1 244 6 117 3 372 7 305 2 120 1 23 1 144 1 377 1 201 1 60 1 307 1 136 1 309 1 255 1 350 1 239 2 148 7 77 3 351 2 
139 1 209 3 114 2 117 1 1 1 283 1 318 1 45 1 120 1 68 2 98 1 267 2 219 2 100 1 368 4 148 1 77 1 8 6 101 1 130 1 351 1 30 1 57 1 296 1 294 2 244 1 334 1 197 1 176 1 274 1 300 1 354 2 132 1 373 2 250 2 372 1 305 1 304 1 180 2 376 3 86 2 307 1 308 1 87 1 311 1 18 1 20 2 
161 1 317 1 121 2 321 1 367 2 124 1 216 1 169 2 239 1 148 1 126 1 77 2 244 1 103 3 80 3 83 1 178 1 335 2 32 1 31 1 372 1 12 1 13 1 34 1 339 1 205 1 15 1 158 2 
244 2 315 1 117 2 372 2 305 1 120 1 23 1 321 1 377 1 307 1 148 2 77 2 351 1 
296 1 244 1 117 1 334 1 176 1 354 2 132 1 372 1 305 1 304 1 68 1 200 1 307 1 267 2 239 1 148 1 77 1 351 1 
332 1 244 1 117 2 372 1 305 1 23 1 135 1 201 1 307 1 136 1 148 1 77 1 351 1 
244 1 117 1 266 1 372 1 239 1 305 1 148 1 326 1 77 1 260 1 351 1 
145 1 267 1 354 1 61 1 301 1 132 1 172 1 107 1 93 1 
36 1 301 1 122 1 
145 1 301 1 198 1 68 1 93 1 
175 1 103 2 80 2 161 1 301 1 31 1 198 2 97 1 68 1 122 1 285 1 34 1 167 1 253 1 145 2 124 1 36 1 93 2 272 1 
109 1 288 1 343 1 227 3 237 1 141 1 363 1 221 1 27 1 134 1 232 3 
109 1 286 1 340 1 165 1 
109 1 27 1 
109 1 288 1 227 1 141 1 363 1 27 1 134 1 232 1 
343 2 237 1 363 2 179 1 134 1 165 1 286 1 109 3 288 1 227 4 340 1 27 2 183 1 232 4 
316 1 343 1 141 1 363 1 134 1 109 1 288 1 254 1 227 2 5 1 27 1 232 2 
141 1 237 2 363 1 179 1 134 1 109 1 288 1 227 3 171 1 27 1 183 2 232 3 
109 2 263 1 22 2 67 1 
288 1 40 1 227 1 141 1 134 1 232 1 
109 1 288 1 343 1 227 2 141 1 363 1 221 1 27 1 134 1 232 2 
360 1 
109 1 288 1 227 1 141 1 363 1 27 1 134 1 232 1 
109 1 363 1 326 1 27 1 
109 1 288 1 227 1 363 1 27 1 134 1 232 1 
195 1 225 1 232 1 
109 1 288 1 140 1 227 3 237 2 141 1 363 1 179 1 27 1 183 1 134 1 232 3 
109 1 288 1 343 1 227 2 280 1 363 1 27 1 134 1 232 2 
109 1 288 1 299 1 227 1 141 1 340 1 275 1 105 1 28 1 134 1 232 1 
109 1 288 1 227 1 141 1 27 1 134 1 232 1 
288 1 227 1 141 1 363 1 27 2 134 1 232 1 
109 1 288 2 192 1 227 2 141 1 348 1 27 1 134 2 261 1 232 2 
343 2 141 1 363 1 134 1 286 1 109 2 288 1 227 3 230 1 340 1 221 1 27 1 232 3 
343 1 299 1 141 1 363 1 275 2 134 1 109 1 49 1 288 1 203 1 227 2 35 1 27 1 28 1 232 2 
152 1 343 2 141 1 363 1 134 2 286 1 109 2 288 2 227 4 280 1 340 1 27 1 232 4 

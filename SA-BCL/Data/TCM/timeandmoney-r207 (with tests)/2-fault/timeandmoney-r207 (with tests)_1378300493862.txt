#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | OPERATOR | 4869 | - -> +
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z | CONDITION | 1125 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
343 1 71 1 160 5 279 9 326 1 371 2 236 2 77 1 285 2 107 1 303 4 191 1 111 9 34 6 82 1 356 1 145 2 11 1 335 1 147 2 292 1 150 1 247 3 382 1 96 1 127 2 45 2 101 1 
343 1 71 1 160 5 279 9 326 1 371 2 77 1 236 2 285 2 107 1 303 4 191 1 111 9 34 6 82 1 356 1 145 2 11 1 335 1 147 2 292 1 150 1 247 3 382 1 96 1 127 2 45 2 101 1 
343 1 71 1 160 6 279 10 326 1 371 2 77 1 236 2 285 2 107 1 303 5 191 1 111 10 34 7 82 1 356 1 145 2 11 1 335 1 147 2 292 1 150 1 247 4 382 1 96 1 127 2 45 2 101 1 
343 1 71 1 160 4 279 7 326 1 371 2 77 1 236 1 285 2 107 1 303 3 191 1 111 7 34 4 82 1 356 1 145 2 11 1 147 2 292 1 150 1 247 2 382 1 96 1 127 2 45 2 101 1 
343 1 356 1 145 1 335 1 160 3 147 1 279 4 371 1 236 2 285 1 107 1 247 1 382 1 303 2 191 1 127 1 111 4 34 3 
356 1 145 1 160 1 279 2 147 1 38 1 371 1 285 1 107 1 270 1 96 1 191 1 111 2 330 1 45 1 101 1 
356 1 145 2 160 2 279 3 285 2 107 1 150 1 247 1 303 1 191 1 111 3 34 1 45 1 
343 1 160 5 279 9 323 1 371 1 77 1 236 2 285 2 107 1 303 4 191 1 111 9 34 7 82 1 356 1 145 2 335 1 147 1 247 3 150 1 382 1 127 1 227 1 45 1 
343 1 160 5 279 9 323 1 371 1 77 1 236 2 285 2 107 1 303 4 191 1 111 9 34 7 82 1 356 1 145 2 335 1 147 1 247 3 150 1 382 1 127 1 227 1 45 1 
253 1 39 1 215 1 
351 2 210 1 39 1 
246 2 176 1 241 2 58 2 94 2 272 2 131 2 64 1 
102 1 104 1 367 1 49 1 74 1 347 2 208 1 349 1 134 2 52 1 213 1 288 1 8 1 84 1 168 2 143 1 241 3 58 2 265 1 379 2 197 1 223 1 225 1 64 1 294 1 312 1 246 3 176 1 123 1 94 2 126 1 272 2 67 1 44 1 320 1 364 2 131 2 
246 1 241 1 352 1 58 1 94 1 272 1 299 1 33 1 131 1 64 1 
159 1 241 1 50 1 119 1 299 1 39 1 301 1 283 1 246 1 297 1 43 1 215 1 305 1 131 1 
159 1 241 1 58 1 50 2 119 1 299 1 39 1 301 1 283 2 246 1 94 1 272 1 297 1 215 1 131 1 
258 1 278 1 50 1 3 1 283 1 
258 1 50 2 3 1 39 1 140 1 90 1 215 1 283 2 
258 1 50 1 283 1 
241 1 58 1 3 1 50 1 299 1 283 1 64 1 246 1 259 1 352 1 94 1 272 1 33 1 131 1 
39 1 
258 1 1 1 50 2 3 1 39 1 140 1 215 1 283 2 
10 2 85 1 291 1 358 1 25 1 3 2 50 5 368 1 324 1 39 1 300 1 370 2 283 5 122 1 258 2 328 1 212 2 140 1 215 1 
253 1 176 1 
209 1 246 2 176 2 241 2 58 1 14 1 94 1 272 1 131 2 
230 1 117 1 88 1 
290 1 241 1 49 1 379 1 197 1 225 1 208 1 294 1 312 1 246 1 134 1 176 1 126 1 320 1 364 1 84 1 
276 1 241 2 117 1 49 1 197 1 379 1 225 1 208 1 294 1 312 1 246 2 134 1 126 1 125 1 94 1 272 1 320 1 364 1 131 1 84 1 
276 2 241 5 58 1 220 1 246 5 209 1 176 1 94 4 125 1 383 1 272 4 43 1 289 1 131 5 
246 2 241 2 352 1 94 2 272 2 60 1 299 1 131 2 
276 1 246 3 176 1 241 3 58 1 94 3 272 3 131 3 
246 1 241 1 352 1 94 1 272 1 299 1 131 1 
246 1 209 1 241 1 14 1 58 1 94 1 272 1 299 1 131 1 
159 1 276 1 104 1 49 1 50 1 367 1 74 1 369 1 299 1 347 2 301 1 283 1 208 1 349 1 209 1 134 1 52 1 213 1 288 1 81 1 8 1 84 1 168 1 143 1 241 4 58 2 265 1 119 1 197 1 379 1 225 1 64 1 294 1 312 1 246 4 176 1 126 1 94 3 125 1 272 3 297 1 320 1 364 1 131 3 
246 2 276 1 176 1 241 2 94 1 220 1 272 1 43 1 131 2 
159 1 276 2 241 3 58 1 50 1 119 1 299 1 266 1 39 1 301 1 283 1 209 1 246 3 125 1 94 3 272 3 297 1 81 1 131 3 
276 1 230 1 241 2 58 1 117 1 209 1 246 2 94 2 272 2 131 2 
241 1 49 1 379 1 197 1 225 1 208 1 312 1 294 1 246 1 134 1 176 1 126 1 320 1 364 1 84 1 
355 1 241 1 379 1 197 1 225 1 208 1 312 1 294 1 246 1 134 1 176 1 154 1 320 1 364 1 84 1 
104 1 230 2 232 1 74 1 347 2 349 2 52 1 261 1 288 1 8 1 168 4 86 1 117 2 216 1 265 1 146 1 88 2 91 1 295 1 269 1 41 1 338 1 123 2 362 1 
246 1 241 1 94 1 272 1 119 1 60 1 299 1 131 1 
260 1 138 1 
260 1 138 1 
169 1 194 1 
169 1 194 1 
169 1 194 1 
306 1 260 1 138 1 
306 1 260 1 138 1 
183 1 260 1 138 1 
169 1 260 2 156 1 242 1 138 2 194 1 
306 1 260 1 138 1 
260 1 138 1 142 1 
260 1 138 1 142 1 
260 1 138 1 142 1 
183 1 298 1 50 1 27 1 133 1 283 1 260 1 188 1 137 1 138 1 56 1 6 1 374 1 241 2 243 1 246 2 268 1 176 1 94 2 361 1 272 2 251 1 131 2 22 1 
23 1 50 2 298 2 299 1 348 1 27 2 283 2 133 2 259 1 352 1 260 2 5 1 110 1 138 2 56 2 33 1 6 2 240 1 334 1 241 1 58 1 39 1 198 1 64 1 246 1 94 1 272 1 180 1 250 1 131 1 251 1 
147 1 127 1 371 1 
147 1 38 1 371 1 
322 1 42 1 127 2 129 1 38 1 371 3 
322 1 127 1 129 1 38 1 57 1 371 2 
322 1 127 1 129 2 38 1 371 2 
25 1 26 1 232 1 50 5 3 4 4 2 257 2 370 1 283 5 351 3 258 1 210 1 188 1 328 3 212 1 137 1 140 1 215 1 9 1 10 1 291 2 378 1 146 1 18 1 39 2 243 1 174 1 337 1 149 2 295 1 381 1 362 1 
206 1 25 1 232 3 278 5 48 1 50 9 3 7 324 1 4 6 370 2 283 9 351 9 258 6 210 3 328 8 212 2 140 1 215 1 83 1 9 2 10 2 36 1 375 1 291 6 378 1 146 3 18 3 243 4 39 5 174 2 149 6 295 3 362 3 317 1 203 5 
232 1 3 2 50 3 324 1 257 1 4 2 370 1 283 3 351 4 210 2 328 3 212 1 215 1 9 1 10 1 291 2 146 1 18 1 39 3 243 1 174 1 337 1 149 2 295 1 381 1 362 1 
206 1 232 2 50 4 3 3 324 1 4 4 257 2 370 1 283 4 351 7 210 3 328 5 212 1 215 1 83 1 9 1 10 1 36 1 291 4 146 2 18 2 39 4 243 2 174 1 337 1 149 4 295 2 381 1 362 2 
294 1 267 1 253 1 
294 1 46 1 
170 1 
294 1 225 1 84 1 
294 1 264 1 
294 1 84 1 
294 3 267 2 99 1 319 1 225 1 84 1 
168 7 195 2 12 1 344 1 216 2 232 1 16 1 255 1 293 1 235 1 349 3 295 1 269 3 79 1 123 4 124 1 353 1 
168 7 195 2 12 1 344 1 216 2 232 1 16 1 255 1 293 1 235 1 349 3 295 1 269 3 79 1 123 4 124 1 353 1 
168 7 195 2 344 1 12 1 59 1 216 2 232 1 16 1 255 1 293 1 235 1 349 3 295 1 269 3 79 1 123 4 124 1 353 1 
342 4 344 1 232 4 254 3 74 1 255 1 347 2 325 1 235 2 75 1 349 15 79 2 52 1 353 1 288 1 167 1 168 31 195 3 12 2 336 1 118 1 216 5 37 1 16 5 265 1 146 3 293 1 18 3 19 1 269 10 295 4 123 16 124 2 362 3 
344 1 232 1 74 2 255 1 347 4 75 1 235 1 349 4 164 1 79 1 52 2 288 2 113 1 168 9 195 2 12 1 216 3 265 2 16 1 293 1 295 1 269 4 123 5 124 1 
160 1 279 2 72 1 371 2 208 1 285 1 134 1 107 1 287 1 190 1 191 1 111 2 34 1 112 1 332 1 165 1 356 1 145 1 196 1 218 1 219 1 147 1 379 1 197 1 38 1 42 1 127 1 45 1 364 1 228 1 
160 1 279 3 72 1 281 1 371 2 208 1 285 1 134 1 287 1 190 1 191 1 111 3 331 1 34 2 112 1 332 1 165 1 356 1 145 1 219 1 147 1 379 1 197 1 38 1 151 1 42 1 127 1 45 1 364 1 228 1 
160 1 279 2 281 1 371 2 208 1 134 1 190 1 191 1 111 2 34 2 331 1 112 1 332 1 165 1 356 1 219 1 147 1 379 1 197 1 38 1 42 1 127 1 45 1 364 1 228 1 
279 1 208 1 285 1 134 1 190 2 111 1 192 1 165 2 84 1 145 1 219 2 197 1 379 1 199 1 294 1 151 1 177 1 152 1 68 1 320 1 45 2 274 1 364 1 
279 1 72 1 281 1 371 2 208 1 285 1 134 1 107 1 287 1 190 1 111 1 112 1 332 1 165 1 145 1 218 1 219 1 147 1 379 1 197 1 38 1 42 1 127 1 45 1 364 1 228 1 
340 1 
159 1 0 2 50 5 299 1 301 1 208 1 351 2 258 6 109 1 210 2 212 1 215 1 305 1 9 1 10 1 13 2 217 4 61 1 119 1 120 1 310 1 175 2 65 2 226 1 177 1 68 1 320 2 318 1 364 2 131 1 25 1 234 1 370 1 76 2 283 5 327 1 134 2 286 1 328 2 140 3 84 1 144 2 241 1 291 2 379 2 89 1 197 1 39 2 40 2 294 1 246 1 380 1 297 1 155 1 43 1 
159 1 0 1 241 1 1 1 217 2 50 3 119 1 299 1 234 1 120 1 301 1 283 3 246 1 258 2 286 1 155 1 297 1 43 1 140 1 318 1 305 1 131 1 
159 1 144 1 241 1 1 1 217 3 50 3 119 1 299 1 234 1 120 1 39 1 301 1 283 3 246 1 258 1 286 1 155 1 297 1 43 1 140 1 318 1 215 1 305 1 131 1 
159 1 0 1 1 1 50 3 299 1 234 1 301 1 283 3 76 1 258 2 286 1 140 1 215 1 305 1 144 1 241 1 217 3 119 1 120 1 39 1 246 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 4 1 1 47 1 50 5 299 1 301 1 258 7 210 2 212 1 215 5 305 1 10 1 13 2 217 6 119 1 61 1 120 1 175 2 65 2 363 1 318 1 131 1 25 1 234 1 370 1 76 4 283 5 286 1 372 1 328 1 140 3 144 4 241 1 291 1 39 5 40 2 246 1 380 1 95 1 153 1 155 1 297 1 43 1 
159 1 0 2 25 1 50 4 299 1 234 1 370 1 301 1 76 2 283 4 258 4 351 2 286 1 210 2 328 1 212 1 140 2 215 1 305 1 144 2 10 1 13 2 241 1 291 1 217 4 61 1 119 1 120 1 39 2 310 1 175 2 40 2 246 1 65 2 380 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 2 25 1 50 4 299 1 234 1 370 1 301 1 76 2 283 4 258 4 286 1 372 1 210 2 328 1 212 1 140 2 215 1 305 1 144 2 10 1 13 2 241 1 291 1 217 4 61 1 119 1 120 1 39 1 175 2 40 2 246 1 65 2 380 1 153 1 95 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 2 25 1 50 4 299 1 234 1 370 1 301 1 76 2 283 4 258 4 286 1 372 1 210 2 328 1 212 1 140 2 215 1 305 1 144 2 10 1 13 2 241 1 291 1 217 4 61 1 119 1 120 1 39 1 175 2 40 2 246 1 65 2 380 1 153 1 95 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 2 25 1 50 4 299 1 234 1 370 1 301 1 76 2 283 4 258 4 351 2 286 1 328 1 212 1 140 2 214 2 215 1 7 2 305 1 144 2 10 1 13 2 241 1 291 1 217 4 61 1 119 1 120 1 39 1 246 1 65 2 66 1 248 1 153 1 296 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 3 25 1 47 1 50 4 299 1 234 1 370 1 301 1 283 4 76 3 258 5 286 1 372 1 210 2 328 1 212 1 140 2 215 1 305 1 10 1 144 3 13 2 241 1 291 1 217 5 61 1 119 1 120 1 39 1 175 2 40 2 246 1 65 2 380 1 153 1 95 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 3 25 1 47 1 50 4 299 1 234 1 370 1 301 1 283 4 76 3 258 5 286 1 372 1 210 2 328 1 212 1 140 2 215 1 305 1 10 1 144 3 13 2 241 1 291 1 217 5 61 1 119 1 120 1 39 1 175 2 40 2 246 1 65 2 380 1 153 1 95 1 297 1 155 1 43 1 318 1 131 1 
159 1 0 2 25 1 50 4 299 1 234 1 370 1 301 1 76 2 283 4 258 4 351 2 286 1 328 1 212 1 140 2 214 2 215 1 7 2 305 1 144 2 10 1 13 2 241 1 291 1 217 4 61 1 119 1 120 1 39 1 310 1 246 1 65 2 66 1 297 1 155 1 43 1 318 1 131 1 
168 6 195 1 253 1 104 1 344 1 230 1 117 1 216 2 232 1 265 1 88 1 74 1 255 1 293 1 347 2 235 1 349 3 295 1 269 2 176 2 338 1 52 1 123 3 124 1 288 1 8 1 
158 1 342 3 366 1 104 2 230 4 232 2 254 3 74 2 325 1 347 4 349 6 52 2 213 1 288 2 8 1 168 14 117 11 336 1 359 1 216 1 16 1 265 2 17 1 146 1 88 11 18 2 223 1 269 2 314 1 295 1 176 1 123 8 362 2 
157 1 276 1 104 1 230 1 346 1 49 1 74 1 347 2 208 1 134 1 349 1 52 1 213 1 288 1 8 1 84 1 290 1 168 2 241 2 265 1 17 1 197 1 379 1 223 1 225 1 294 1 312 1 246 2 176 1 123 1 126 1 94 1 125 1 272 1 320 1 364 1 130 1 131 1 
252 1 344 1 104 3 49 2 255 1 347 6 106 2 208 2 349 10 52 3 213 1 8 3 168 20 117 7 216 4 17 1 265 3 16 4 18 2 223 1 225 2 312 2 269 8 176 2 315 2 123 10 124 1 125 1 126 2 272 1 362 2 316 1 320 1 364 3 131 1 276 1 230 7 232 3 74 3 281 1 235 1 134 3 288 3 84 2 143 2 195 1 241 3 376 2 146 2 88 7 379 3 197 2 293 1 294 2 246 3 295 3 94 1 100 2 341 1 
102 2 276 1 104 2 73 1 74 2 281 1 347 4 208 2 350 1 134 7 349 1 52 2 213 1 288 2 141 1 8 2 84 2 333 1 168 2 241 1 196 1 265 2 87 1 197 2 379 8 223 1 294 3 246 1 338 1 177 1 123 1 94 1 272 1 178 1 68 1 320 2 181 1 364 8 131 1 
104 1 230 1 232 1 74 1 347 2 209 1 349 2 52 1 288 1 8 1 168 3 241 1 117 1 58 1 216 1 265 1 17 1 146 1 88 1 18 1 173 1 246 1 269 1 295 1 123 1 94 1 272 1 362 1 131 1 
168 2 104 1 230 1 117 1 16 1 265 1 232 1 88 1 74 1 347 2 91 1 269 1 338 1 52 1 123 2 362 1 288 1 8 1 
168 2 104 1 230 1 117 1 216 1 265 1 146 1 88 1 74 1 347 2 349 2 269 1 295 1 338 1 52 1 261 1 288 1 8 1 
104 1 230 2 232 1 74 1 347 2 349 2 52 1 288 1 8 1 168 4 117 2 216 1 265 1 16 1 146 1 88 2 18 1 269 2 295 1 338 1 123 2 362 1 
168 2 333 1 104 1 230 1 117 1 16 1 265 1 232 1 88 1 74 1 347 2 91 1 269 1 52 1 123 2 362 1 288 1 8 1 
168 2 333 1 104 1 230 1 117 1 216 1 265 1 146 1 88 1 74 1 347 2 349 2 269 1 295 1 52 1 261 1 288 1 8 1 
104 1 230 2 232 1 74 1 347 2 349 2 52 1 288 1 8 1 333 1 168 4 117 2 216 1 265 1 16 1 146 1 88 2 18 1 269 2 295 1 123 2 362 1 
104 1 230 2 232 1 74 1 347 2 349 2 52 1 288 1 8 1 168 4 117 2 216 1 265 1 16 1 146 1 88 2 18 1 269 2 295 1 123 2 362 1 
104 1 49 1 74 1 347 2 208 1 134 1 349 1 52 1 213 1 288 1 8 1 84 1 168 2 143 1 241 1 265 1 197 1 379 1 223 1 225 1 312 1 294 1 246 1 176 1 123 1 126 1 320 1 364 1 
104 1 74 1 347 2 208 1 134 1 349 1 135 1 52 1 213 1 288 1 8 1 84 1 168 2 355 1 241 1 265 1 197 1 379 1 223 1 225 1 312 1 294 1 246 1 176 1 123 1 154 1 320 1 364 1 
104 1 230 2 232 1 74 1 347 2 349 2 52 1 288 1 8 1 168 4 117 2 216 1 265 1 17 1 16 1 146 1 88 2 18 1 269 2 295 1 123 2 362 1 
104 1 230 2 232 1 49 1 74 1 347 2 208 1 349 2 134 1 52 1 288 1 8 1 84 1 168 4 143 1 241 1 117 2 216 1 16 1 196 1 265 1 146 1 88 2 197 1 379 1 18 1 225 1 312 1 294 1 246 1 295 1 269 2 315 1 123 2 126 1 362 1 364 1 
104 1 230 1 232 1 74 1 347 2 349 1 209 1 52 1 288 1 8 1 168 3 241 1 58 1 117 1 16 1 265 1 17 1 146 1 88 1 18 1 311 1 246 1 295 1 269 1 123 2 94 1 272 1 362 1 131 1 
342 4 344 1 254 3 255 1 347 6 349 21 52 3 53 4 263 1 113 1 168 41 307 1 216 4 16 4 265 3 172 1 18 4 121 1 63 2 20 1 269 8 123 20 124 1 362 4 321 1 24 1 232 5 74 3 325 3 282 1 75 1 235 1 186 1 139 1 288 3 239 1 195 1 336 1 146 4 293 1 200 1 93 1 295 5 
342 4 321 1 24 1 344 1 232 5 254 3 74 4 255 1 325 3 347 8 235 1 75 2 282 1 349 18 186 1 52 4 53 4 139 1 263 1 288 4 113 1 168 38 195 1 239 1 307 1 336 1 216 4 265 4 16 3 146 3 172 1 293 1 18 4 63 2 121 1 20 1 200 1 93 1 269 7 295 4 123 20 124 1 362 4 
158 2 342 4 321 1 344 1 232 8 254 4 74 2 255 1 325 2 347 4 235 1 75 1 282 1 349 25 186 1 52 2 53 4 139 1 263 1 288 2 113 1 168 52 195 1 239 1 336 2 216 7 265 2 16 7 146 7 172 1 293 1 18 7 63 1 121 1 20 1 200 1 93 1 269 14 295 8 123 27 124 1 362 7 
342 2 321 1 24 1 232 3 254 1 74 2 325 1 347 4 282 1 349 10 52 2 53 2 139 2 288 2 113 1 168 19 336 1 216 3 265 2 16 3 146 3 172 1 18 3 244 1 63 1 121 1 269 6 295 3 123 9 362 3 
321 1 342 2 232 3 254 2 74 3 347 6 325 2 75 2 282 2 349 12 186 1 52 3 53 4 139 1 263 1 288 3 113 1 168 26 239 1 216 2 16 2 265 3 146 2 172 1 18 3 63 2 121 1 20 1 200 1 93 1 269 4 295 2 123 14 362 3 
334 1 298 1 348 1 133 1 30 1 260 1 5 1 56 1 138 1 6 1 250 1 
183 1 268 1 
237 1 260 1 231 1 298 1 138 1 56 1 224 1 6 1 133 1 
306 1 103 1 
280 1 242 1 142 1 
23 1 298 1 50 1 299 1 348 1 27 2 133 1 283 1 259 1 352 1 260 1 5 1 110 1 138 1 56 1 33 1 6 1 240 1 334 1 241 1 58 1 39 1 198 1 64 1 246 1 94 1 272 1 180 1 250 1 131 1 251 1 
23 1 298 1 50 1 299 1 348 1 27 2 133 1 283 1 259 1 352 1 260 1 5 1 110 1 138 1 56 1 33 1 6 1 240 1 334 1 241 1 58 1 39 1 198 1 64 1 246 1 94 1 272 1 180 1 250 1 131 1 251 1 
23 1 298 1 50 1 299 1 348 1 27 2 133 1 283 1 259 1 352 1 260 1 5 1 110 1 138 1 56 1 33 1 6 1 240 1 334 1 241 1 58 1 39 1 198 1 64 1 246 1 94 1 272 1 180 1 250 1 131 1 251 1 
306 1 103 1 242 1 
306 1 103 1 242 1 
280 1 142 1 
280 1 242 1 142 1 
361 1 374 1 
183 1 161 1 50 1 3 1 298 1 27 1 283 1 133 1 260 1 188 1 137 1 138 1 56 1 6 1 374 1 240 1 241 2 243 1 246 2 268 1 176 1 361 1 94 2 272 2 180 1 22 1 131 2 
102 2 104 1 73 1 162 1 74 1 347 2 208 1 302 1 349 1 134 2 52 1 55 1 213 1 304 1 288 1 8 1 84 1 168 2 241 2 265 1 17 1 197 1 379 2 223 1 294 1 246 2 123 1 181 1 364 2 182 1 131 2 
196 1 221 1 147 1 72 1 38 1 197 1 379 2 281 1 371 2 208 1 148 1 134 2 42 1 384 1 127 1 332 1 364 2 165 1 228 1 
116 1 221 1 147 1 72 1 38 1 379 1 197 1 281 1 371 2 208 1 134 1 42 1 127 1 332 1 364 1 165 1 228 1 
115 1 197 1 379 1 208 1 148 1 294 1 134 1 177 1 68 1 192 1 320 1 364 1 165 1 84 1 
221 1 147 1 72 1 38 1 197 1 379 1 281 1 371 2 148 1 208 1 134 1 42 1 384 1 127 1 332 1 364 1 165 1 228 1 
256 1 
253 1 291 1 358 1 328 1 39 1 300 1 215 1 
25 1 50 1 370 1 283 1 351 1 258 1 210 1 328 1 212 1 140 1 215 1 10 1 291 1 39 2 40 1 175 1 380 1 
159 2 46 3 105 1 207 1 50 5 4 6 300 1 208 3 258 5 351 12 210 6 212 4 262 1 264 2 215 2 166 1 9 2 10 4 358 1 308 2 222 2 18 2 309 1 225 3 267 2 226 1 362 2 320 1 319 1 364 3 277 2 25 4 232 2 370 4 283 5 134 3 373 2 32 2 328 9 140 3 35 2 84 3 291 8 196 1 377 2 146 2 197 4 379 3 39 8 294 10 149 6 295 2 98 2 100 2 
342 1 229 1 25 2 232 2 50 1 185 1 254 1 4 5 325 1 370 2 283 1 258 1 351 6 186 1 210 3 32 1 328 8 212 2 140 1 215 2 9 1 10 2 239 1 291 5 146 2 222 2 18 2 39 5 20 1 200 1 149 5 93 1 226 1 295 2 362 2 
25 1 232 2 50 1 299 1 370 1 235 1 283 1 259 1 352 1 372 1 32 1 328 2 136 1 212 1 33 1 10 1 241 1 291 2 58 1 222 2 293 1 64 1 246 1 295 1 124 1 94 1 272 1 131 1 
10 1 25 1 358 1 291 1 300 1 370 1 39 1 328 1 212 1 215 1 
291 5 232 2 146 2 222 2 18 2 4 5 39 5 149 5 351 10 295 2 210 5 32 1 328 5 362 2 100 1 
258 1 50 1 39 1 140 1 215 1 283 1 
105 2 25 1 345 1 50 3 324 1 370 2 283 3 208 1 134 4 109 1 258 4 187 1 328 2 212 2 140 2 84 1 9 2 10 2 291 2 197 1 89 1 379 4 309 1 294 1 226 2 177 1 68 1 320 2 364 4 
104 1 367 1 49 1 74 1 347 2 208 1 349 1 134 1 52 1 213 1 288 1 8 1 84 1 168 1 143 1 241 3 58 2 265 1 379 1 197 1 64 1 225 1 312 1 294 1 246 3 176 1 94 2 126 1 272 2 320 1 364 1 131 2 
195 1 10 1 291 2 25 1 4 2 370 1 39 4 149 2 351 4 226 1 210 2 328 1 212 1 215 2 9 1 
179 1 298 1 6 1 
179 1 298 1 6 1 
184 1 361 1 298 1 238 1 6 1 
179 1 298 1 6 1 
298 1 6 1 92 1 
298 1 6 1 92 1 
298 1 6 1 92 1 
298 1 6 1 
260 1 138 1 
342 1 344 1 232 1 254 1 74 1 255 1 325 1 347 2 235 1 349 4 52 1 288 1 113 1 168 8 195 1 216 2 265 1 293 1 93 1 295 1 269 2 123 4 124 1 
342 2 344 1 232 2 254 1 74 2 255 1 325 1 347 4 235 1 349 5 52 2 288 2 113 1 168 11 195 1 336 1 216 2 265 2 16 1 62 1 293 1 18 1 93 1 295 1 269 3 123 6 124 1 362 1 
342 1 344 1 232 3 254 1 74 3 255 1 325 1 347 6 235 1 75 1 349 10 186 1 52 3 288 3 113 1 168 19 195 1 239 1 216 3 16 1 265 3 146 2 62 1 293 1 18 2 20 1 200 1 93 1 295 3 269 4 123 9 124 1 362 2 
342 1 344 1 232 3 254 1 74 3 255 1 325 1 347 6 235 1 75 1 349 7 52 3 186 1 288 3 113 1 168 17 195 1 239 1 216 3 16 2 265 3 146 1 62 1 293 1 18 2 20 1 200 1 93 1 295 2 269 5 123 10 124 1 362 2 
342 1 344 1 232 1 254 1 74 1 255 1 325 1 347 2 235 1 349 4 52 1 288 1 113 1 168 8 195 1 216 2 265 1 293 1 93 1 295 1 269 2 123 4 124 1 
342 1 232 2 254 1 74 1 325 1 347 2 349 6 52 1 186 1 288 1 113 1 168 12 239 1 216 1 16 1 265 1 146 2 18 2 20 1 200 1 93 1 295 2 269 2 123 6 362 2 
342 1 344 1 232 3 254 1 74 4 255 1 325 1 347 8 235 1 75 2 349 8 186 1 52 4 288 4 113 1 168 18 195 1 239 1 216 3 16 2 265 4 146 1 62 1 293 1 18 2 20 1 200 1 93 1 295 2 269 5 123 10 124 1 362 2 
342 1 24 1 232 3 254 1 74 4 325 1 347 8 75 2 349 7 186 1 52 4 288 4 113 1 168 16 239 1 216 3 16 3 265 4 146 2 18 3 20 1 200 1 93 1 295 2 269 6 123 9 362 3 
168 7 344 2 216 3 16 3 232 1 255 1 293 1 235 3 349 4 295 1 269 6 123 3 124 3 
342 1 344 1 24 1 232 3 254 1 74 4 255 1 325 1 347 8 235 1 75 2 349 8 186 1 52 4 288 4 113 1 168 18 195 1 239 1 216 3 16 1 265 4 146 1 293 1 18 2 20 1 200 1 93 1 295 2 269 4 123 10 124 1 362 2 
168 8 195 1 344 1 216 2 232 1 16 1 265 2 74 2 255 1 293 1 347 4 75 1 235 1 349 4 295 1 269 3 52 2 123 4 124 1 288 2 
168 6 195 1 253 1 344 1 216 2 232 1 255 1 293 1 235 1 349 3 269 2 295 1 123 3 124 1 
168 4 216 1 265 1 232 1 16 1 146 1 74 1 62 1 347 2 18 1 349 2 295 1 269 2 52 1 123 2 362 1 288 1 
342 2 168 7 336 1 216 1 232 1 16 1 146 1 254 1 325 1 18 1 349 4 295 1 269 2 123 3 362 1 
342 2 158 1 344 1 366 1 232 3 254 2 74 2 255 1 347 4 235 2 75 2 349 12 108 1 52 2 288 2 168 23 195 1 336 1 216 5 16 4 265 2 146 2 293 1 18 2 269 9 295 3 123 11 124 2 362 2 
168 1 342 1 349 1 
168 1 123 1 254 1 
168 6 216 2 265 1 232 1 16 1 146 1 74 1 62 1 347 2 18 1 349 3 269 3 295 1 52 1 123 3 362 1 100 1 288 1 
342 1 232 2 254 1 74 1 325 1 347 2 349 6 52 1 186 1 288 1 113 1 168 12 239 1 216 1 16 1 265 1 146 2 18 2 20 1 200 1 93 1 295 2 269 2 123 6 362 2 
168 6 216 1 232 1 16 1 293 1 235 1 349 3 295 1 269 2 123 3 124 1 
168 3 344 1 216 1 16 1 265 1 74 1 255 1 347 2 235 1 75 1 349 2 269 2 108 1 52 1 123 1 124 1 288 1 
168 10 216 3 265 1 16 2 232 2 74 1 347 2 293 1 235 2 349 5 269 5 295 2 52 1 123 5 124 2 136 1 288 1 113 1 
168 2 265 1 232 1 16 1 74 1 347 2 269 1 52 1 123 2 362 1 288 1 113 1 
168 4 216 1 265 1 232 1 16 1 146 1 74 1 347 2 18 1 349 2 295 1 269 2 52 1 123 2 362 1 288 1 113 1 
168 3 24 1 216 1 265 3 16 1 74 3 347 6 75 1 235 1 349 2 108 1 269 2 52 3 123 1 124 1 288 3 113 1 
342 4 344 1 24 1 232 5 254 3 74 5 255 1 325 1 347 10 235 3 75 2 349 18 108 1 52 5 288 5 113 1 167 1 168 34 195 1 118 1 336 1 216 7 265 5 16 5 146 3 62 1 293 2 18 3 19 1 269 12 295 5 123 16 124 3 362 3 
246 1 176 1 241 1 205 1 220 1 43 1 131 1 
204 1 241 1 205 1 220 1 246 1 31 1 176 1 97 1 43 1 80 1 275 1 131 1 
294 1 253 1 134 1 177 1 68 1 197 1 379 1 320 1 364 1 208 1 84 1 
276 1 241 2 197 1 379 1 225 1 208 1 294 1 312 1 246 2 134 1 176 1 94 1 126 1 272 1 320 1 364 1 131 1 84 1 
276 1 241 2 105 1 377 1 119 1 299 1 197 1 379 1 301 1 225 2 208 1 294 3 312 1 246 2 134 1 176 1 94 2 126 1 272 1 264 1 364 1 131 2 84 2 
276 1 105 1 299 1 28 1 301 1 208 1 134 2 264 1 84 2 355 1 241 2 377 1 119 1 379 2 197 1 225 2 312 1 294 3 246 2 176 1 94 2 272 1 364 2 131 2 
365 1 159 1 46 1 105 1 50 2 28 1 283 2 208 1 134 3 258 1 329 1 264 1 215 1 84 1 377 1 379 3 197 1 39 1 225 1 294 4 267 1 320 1 364 3 
159 1 46 1 105 1 377 1 50 2 197 1 379 3 39 1 28 1 225 1 283 2 208 1 294 4 134 3 267 1 258 1 320 1 264 1 215 1 364 3 35 1 84 1 
134 1 350 1 197 1 379 1 364 1 208 1 
102 1 171 1 196 1 73 1 87 1 379 7 197 3 281 1 225 1 163 1 208 2 294 3 350 1 134 6 271 1 178 1 320 2 319 1 141 1 364 7 84 2 
276 1 344 1 104 2 230 1 232 1 49 1 74 2 255 1 347 4 235 1 208 1 106 1 302 1 349 3 134 1 52 2 288 2 8 2 84 1 168 6 143 1 195 1 241 2 117 1 216 2 265 2 17 1 196 1 88 1 197 1 379 1 293 1 225 1 294 1 312 1 246 2 295 1 269 2 176 2 315 1 123 3 124 1 94 1 126 1 272 1 364 1 131 1 
159 1 46 1 277 1 25 2 50 3 3 1 300 1 370 2 283 3 134 1 258 2 373 1 328 1 212 2 140 1 215 1 35 1 10 2 291 1 358 1 379 1 39 1 309 1 294 2 267 1 98 1 320 1 364 1 
196 1 207 1 379 2 197 2 225 1 208 1 294 2 267 1 350 1 134 2 319 1 364 2 84 1 
196 1 197 1 379 4 28 1 208 1 294 1 78 1 134 4 177 1 68 1 320 1 364 4 84 1 
105 1 233 1 379 2 197 2 225 1 163 1 208 1 294 1 134 2 271 1 316 1 69 1 364 2 84 1 
134 1 147 1 38 1 197 1 379 1 332 1 320 1 364 1 371 1 208 1 
294 1 134 2 196 1 73 1 197 1 379 2 281 1 364 2 182 1 208 1 84 1 
105 1 196 1 73 1 87 1 379 5 197 2 208 2 294 3 78 1 134 4 177 1 178 1 68 1 320 1 364 5 84 2 
105 1 196 1 73 1 379 5 197 2 29 1 208 2 294 3 78 1 134 4 177 1 178 1 68 1 320 1 364 5 84 2 
355 1 276 1 241 2 197 1 379 1 225 1 208 1 294 1 312 1 246 2 134 1 176 1 94 1 272 1 320 1 364 1 131 1 84 1 
105 1 171 1 379 1 197 2 225 1 163 1 208 1 294 1 134 1 271 1 319 1 364 1 84 1 
176 1 15 1 2 1 128 1 202 1 
159 1 15 2 2 2 132 1 3 1 50 2 119 1 299 1 39 1 301 1 283 2 201 1 176 1 211 1 128 2 297 1 202 1 81 1 215 1 
241 1 15 1 162 1 246 1 128 1 202 1 55 1 304 1 131 1 
201 1 211 1 202 1 
356 1 253 1 160 1 191 1 
285 1 356 1 145 1 160 1 191 1 279 1 111 1 
190 1 111 1 45 1 
145 1 356 1 160 1 279 3 51 1 285 1 107 1 96 2 191 1 111 3 114 1 354 1 
285 1 356 1 145 1 160 1 191 1 279 2 111 2 34 1 236 1 
343 1 145 1 160 1 279 1 147 1 371 1 285 1 107 1 303 1 127 1 111 1 
285 1 145 1 107 1 160 1 191 1 279 1 111 1 
285 1 356 1 145 1 107 1 191 2 279 1 111 1 
145 2 160 1 279 2 360 1 284 1 285 2 313 1 107 1 191 1 111 2 
356 1 145 1 160 2 279 3 77 1 285 1 107 1 247 1 303 1 191 1 111 3 34 2 82 1 
356 1 145 1 160 1 279 2 147 1 38 1 371 2 285 1 107 1 42 1 191 1 127 1 111 2 273 1 34 1 
356 1 145 2 335 1 160 2 279 4 236 1 285 2 107 1 247 1 303 1 191 1 111 4 34 2 
285 1 356 1 145 1 107 1 160 1 191 1 279 1 111 1 
356 2 145 1 160 3 279 4 51 1 245 1 285 1 247 1 303 1 96 1 191 2 111 4 34 2 114 1 
145 1 356 1 160 1 279 2 285 1 107 1 191 1 54 1 111 2 21 1 227 1 34 1 
145 1 356 1 160 1 279 3 51 2 285 1 107 1 96 2 191 1 111 3 249 1 114 1 
160 2 339 1 189 2 70 1 
285 1 145 1 107 1 357 1 279 1 111 1 
285 1 356 1 145 1 107 1 160 1 191 1 279 2 111 2 34 1 82 1 
193 1 
285 1 356 1 145 1 107 1 160 1 191 1 279 1 111 1 
285 1 356 1 145 1 107 1 160 1 96 1 191 1 279 3 111 3 34 1 82 1 
247 1 160 1 303 1 245 1 
160 1 191 1 

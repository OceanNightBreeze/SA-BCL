#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval; | ASSIGN | 1369 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
28 1 356 2 308 1 187 1 291 3 259 2 104 5 235 2 34 2 10 2 147 1 339 1 37 1 196 2 367 2 243 1 245 1 198 9 268 6 269 1 63 9 155 1 324 1 230 1 87 1 48 1 209 1 94 4 
28 1 356 2 308 1 187 1 291 3 259 2 104 5 34 2 235 2 10 2 147 1 339 1 37 1 196 2 367 2 243 1 245 1 198 9 268 6 269 1 63 9 155 1 324 1 230 1 87 1 48 1 209 1 94 4 
28 1 356 2 308 1 187 1 291 4 259 2 104 6 34 2 235 2 10 2 147 1 339 1 37 1 196 2 367 2 243 1 245 1 198 10 268 7 269 1 63 10 155 1 324 1 230 1 87 1 48 1 209 1 94 5 
28 1 356 2 308 1 187 1 291 2 259 2 104 4 34 2 235 1 10 2 147 1 339 1 37 1 196 2 367 2 243 1 245 1 198 7 268 4 269 1 63 7 155 1 230 1 87 1 48 1 209 1 94 3 
367 1 308 1 28 1 198 4 268 3 63 4 291 1 259 1 104 3 235 2 34 1 10 1 324 1 339 1 230 1 87 1 196 1 94 2 
367 1 355 1 245 1 308 1 356 1 198 2 63 2 216 1 259 1 104 1 10 1 339 1 230 1 196 1 39 1 209 1 
308 1 356 1 198 3 268 1 63 3 291 1 259 2 155 1 104 2 339 1 230 1 196 2 94 1 
356 1 308 1 28 1 4 1 291 3 259 2 104 5 235 2 34 1 10 1 339 1 196 2 367 1 243 1 268 7 81 1 198 9 269 1 63 9 155 1 324 1 230 1 87 1 94 4 
356 1 308 1 28 1 4 1 291 3 259 2 104 5 235 2 34 1 10 1 339 1 196 2 367 1 243 1 268 7 81 1 198 9 269 1 63 9 155 1 324 1 230 1 87 1 94 4 
108 1 357 1 361 1 
97 2 44 1 361 1 
21 2 281 2 124 1 370 2 262 1 183 2 67 2 242 2 
143 1 212 1 124 1 232 1 50 1 98 1 183 2 332 1 333 1 54 1 72 2 312 1 262 1 365 1 40 1 242 2 77 2 60 1 113 1 152 1 370 3 302 1 250 1 137 1 64 1 226 2 21 2 281 3 117 1 378 1 325 1 86 2 67 2 88 2 381 1 91 1 285 1 
21 1 53 1 281 1 124 1 370 1 183 1 67 1 290 1 223 1 242 1 
329 1 80 1 357 1 145 1 370 1 199 1 33 1 361 1 191 1 65 1 281 1 36 1 223 1 242 1 
329 1 80 2 357 1 370 1 183 1 33 2 361 1 21 1 191 1 65 1 281 1 36 1 67 1 223 1 242 1 
80 1 238 1 343 1 33 1 90 1 
80 2 357 1 30 1 238 1 55 1 33 2 90 1 361 1 
80 1 238 1 33 1 
80 1 124 1 172 1 370 1 183 1 290 1 33 1 53 1 21 1 281 1 67 1 90 1 223 1 242 1 
361 1 
80 2 124 1 30 1 357 1 370 1 172 1 183 1 301 1 290 1 33 2 361 1 21 1 53 1 281 1 238 1 67 1 90 1 223 1 242 1 
80 5 96 2 61 1 357 1 30 1 358 1 287 1 6 1 135 1 33 5 361 1 20 2 238 2 194 1 240 1 294 1 169 1 90 2 207 2 
108 1 262 1 
254 1 370 2 183 1 21 1 281 2 306 1 262 2 67 1 242 2 
129 1 286 1 57 1 
113 1 212 1 370 1 302 1 137 1 64 1 281 1 312 1 262 1 325 1 86 1 88 1 365 1 133 1 91 1 77 1 
212 1 113 1 370 2 302 1 102 1 137 1 64 1 21 1 129 1 281 2 312 1 325 1 351 1 86 1 365 1 67 1 88 1 91 1 242 1 77 1 
21 3 281 3 370 3 183 1 262 1 67 3 102 1 242 3 
21 1 281 1 370 1 67 1 290 1 223 1 242 1 
21 1 254 1 281 1 370 1 306 1 183 1 67 1 223 1 242 1 
329 1 212 1 124 1 232 1 50 1 98 1 183 2 332 1 333 1 102 1 33 1 54 1 72 1 191 1 36 1 312 1 262 1 365 1 223 1 242 3 77 1 60 1 113 1 80 1 152 1 370 4 302 1 321 1 137 1 64 1 226 2 21 3 65 1 281 4 378 1 306 1 325 1 351 1 86 1 67 3 88 1 120 1 91 1 285 1 
197 1 21 1 281 2 145 1 370 2 262 1 67 1 102 1 242 2 
329 1 80 1 370 3 183 1 102 2 321 1 33 1 361 1 21 3 191 1 65 1 281 3 36 1 306 1 376 1 351 1 67 3 223 1 242 3 
370 2 183 1 102 1 21 2 129 1 281 2 306 1 67 2 57 1 242 2 
113 1 212 1 370 1 302 1 137 1 64 1 281 1 312 1 262 1 325 1 86 1 88 1 365 1 91 1 77 1 
370 1 302 1 274 1 137 1 64 1 281 1 312 1 262 1 325 1 86 1 88 1 365 1 180 1 91 1 77 1 
286 2 232 1 332 2 184 1 333 1 72 4 129 2 296 1 57 2 14 1 59 1 60 1 244 1 152 1 115 1 248 1 84 1 348 1 177 1 226 2 373 1 117 2 378 1 285 1 
21 1 65 1 281 1 370 1 168 1 67 1 223 1 242 1 
197 1 145 1 370 5 183 1 288 1 102 2 21 4 281 5 306 1 262 1 229 1 351 1 67 4 242 5 
21 2 281 2 370 2 168 1 67 2 290 1 223 1 242 2 
41 1 345 1 
41 1 345 1 
283 1 100 1 
283 1 100 1 
283 1 100 1 
176 1 41 1 345 1 
176 1 41 1 345 1 
317 1 41 1 345 1 
267 1 283 1 100 1 41 2 322 1 345 2 
176 1 41 1 345 1 
225 1 41 1 345 1 
225 1 41 1 345 1 
225 1 41 1 345 1 
328 1 121 2 80 2 247 1 258 1 33 2 361 1 322 1 22 1 66 1 341 2 316 1 231 1 179 2 25 2 41 2 181 2 345 2 150 3 
121 1 330 1 255 1 256 1 5 1 33 1 52 1 105 1 262 1 41 1 150 1 345 1 242 2 80 1 317 1 370 2 21 2 281 2 228 1 66 1 67 2 25 1 179 1 181 1 
34 1 367 1 10 1 
367 1 10 1 355 1 
34 2 10 3 349 1 355 1 118 1 68 1 
34 1 10 2 349 1 355 1 272 1 68 1 
34 1 10 2 349 2 355 1 68 1 
330 1 96 1 0 1 357 1 287 1 97 1 5 1 31 1 257 1 6 3 184 1 289 2 33 4 361 1 337 1 74 1 194 1 14 1 42 1 80 4 116 1 20 1 84 1 177 1 278 1 228 1 89 1 90 4 207 1 
330 4 96 2 357 1 359 1 125 1 287 1 97 9 31 3 257 6 184 3 6 8 33 8 361 5 146 1 238 5 74 2 194 6 169 1 14 3 343 5 42 2 80 8 16 1 18 1 116 1 44 3 20 2 84 3 177 3 278 6 85 1 252 5 90 7 207 2 
330 1 96 1 0 1 357 1 97 4 31 1 257 2 6 3 184 1 289 1 33 3 361 3 337 1 74 1 194 2 169 1 14 1 42 1 80 3 44 2 20 1 84 1 177 1 278 2 90 2 207 1 
330 2 96 1 0 1 357 1 97 7 31 2 257 4 6 5 184 2 289 2 33 4 361 4 337 1 146 1 74 1 194 4 169 1 14 2 42 1 80 4 18 1 44 3 20 1 84 2 177 2 278 4 85 1 90 3 207 1 
108 1 326 1 91 1 
91 1 208 1 
320 1 
312 1 91 1 
312 1 326 2 264 1 91 3 64 1 93 1 
312 1 91 1 64 1 
200 1 91 1 
244 3 307 1 331 2 371 1 332 3 84 1 217 1 177 1 72 7 303 1 219 1 293 1 117 4 38 1 59 2 24 1 253 1 
244 3 307 1 331 2 371 1 332 3 84 1 217 1 177 1 72 7 303 1 219 1 293 1 117 4 38 1 59 2 24 1 253 1 
244 3 307 1 331 2 127 1 371 1 332 3 84 1 217 1 177 1 72 7 303 1 219 1 293 1 117 4 38 1 59 2 24 1 253 1 
307 2 331 3 3 1 232 1 31 3 332 15 184 3 7 1 334 1 160 1 217 2 72 31 293 2 219 5 38 1 14 3 59 5 78 1 244 10 60 1 15 4 371 1 347 1 84 4 226 2 277 3 177 4 303 1 305 1 378 1 117 16 24 2 285 1 253 1 
307 1 331 2 232 2 32 1 332 4 160 1 217 1 72 9 293 1 219 1 38 1 59 3 60 2 244 4 84 1 177 1 226 4 203 1 303 1 378 2 117 5 24 1 285 2 253 1 
355 1 308 1 356 1 259 1 104 1 34 1 218 1 10 2 261 1 164 1 339 1 313 1 365 1 196 1 77 1 367 1 346 1 268 1 198 2 273 1 63 2 275 1 137 1 45 1 280 1 230 1 86 1 118 1 88 1 380 1 
353 1 355 1 356 1 259 1 104 1 34 1 218 1 10 2 164 1 339 1 313 1 365 1 196 1 111 1 77 1 367 1 346 1 198 3 268 2 273 1 63 3 275 1 137 1 45 1 204 1 230 1 118 1 86 1 88 1 380 1 
353 1 355 1 356 1 104 1 34 1 218 1 10 2 164 1 339 1 313 1 365 1 111 1 77 1 367 1 198 2 268 2 273 1 63 2 275 1 137 1 45 1 230 1 86 1 118 1 88 1 
211 1 356 2 259 1 236 1 12 1 312 1 313 2 365 1 196 1 344 1 77 1 134 1 198 1 302 1 63 1 275 2 137 1 45 2 204 1 86 1 88 1 352 1 91 1 
353 1 367 1 346 1 355 1 356 1 308 1 198 1 273 1 63 1 275 1 137 1 259 1 45 1 34 1 10 2 218 1 164 1 261 1 118 1 86 1 313 1 365 1 380 1 88 1 196 1 77 1 
130 1 
329 1 96 1 145 1 287 1 97 2 6 2 9 2 106 2 191 1 236 1 109 1 238 6 194 2 195 4 340 2 242 1 199 1 302 2 20 1 65 1 119 2 23 1 207 1 29 1 357 1 30 3 214 1 128 2 33 5 361 2 35 1 36 1 312 1 167 2 365 1 132 1 315 1 223 1 76 1 77 2 42 1 265 1 134 1 80 5 370 1 174 1 44 2 137 1 282 2 281 1 47 1 86 2 379 1 88 2 91 1 
265 1 329 1 80 3 30 1 145 1 370 1 199 1 301 1 174 1 33 3 65 1 191 1 281 1 109 1 238 2 36 1 119 1 195 2 379 1 315 1 223 1 242 1 
329 1 145 1 357 1 30 1 33 3 361 1 191 1 109 1 238 1 36 1 167 1 195 3 315 1 223 1 242 1 265 1 80 3 370 1 199 1 301 1 174 1 65 1 281 1 379 1 
329 1 30 1 145 1 128 1 33 3 191 1 109 1 36 1 238 2 167 1 195 3 315 1 223 1 242 1 265 1 80 3 370 1 199 1 301 1 174 1 65 1 281 1 379 1 119 1 
329 1 96 1 145 1 287 1 183 1 6 1 290 1 233 1 53 1 9 2 106 2 191 1 109 1 238 7 239 1 194 1 195 4 340 2 242 2 199 1 301 1 153 1 201 1 20 1 21 1 65 1 119 4 67 1 207 1 124 1 357 1 30 3 128 4 33 5 361 1 36 1 167 2 132 1 315 1 223 2 76 1 265 1 80 5 172 1 370 2 174 1 44 2 281 2 282 2 139 1 379 1 
329 1 96 1 145 1 287 1 97 2 6 1 9 2 106 2 191 1 109 1 238 4 194 1 195 4 340 2 242 1 199 1 20 1 65 1 119 2 207 1 29 1 30 2 357 1 128 2 33 4 361 2 36 1 167 2 132 1 315 1 223 1 76 1 265 1 80 4 370 1 174 1 44 2 281 1 282 2 379 1 
329 1 96 1 357 1 30 2 145 1 287 1 128 2 6 1 33 4 361 1 9 2 106 2 191 1 109 1 238 4 36 1 239 1 167 2 194 1 195 4 340 2 132 1 315 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 153 1 174 1 201 1 44 2 20 1 65 1 282 2 281 1 119 2 379 1 207 1 
329 1 96 1 357 1 30 2 145 1 287 1 128 2 6 1 33 4 361 1 9 2 106 2 191 1 109 1 238 4 36 1 239 1 167 2 194 1 195 4 340 2 132 1 315 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 153 1 174 1 201 1 44 2 20 1 65 1 282 2 281 1 119 2 379 1 207 1 
329 1 96 1 357 1 30 2 145 1 287 1 97 2 99 1 128 2 6 1 33 4 361 1 9 2 191 1 192 1 109 1 238 4 36 1 167 2 194 1 195 4 263 2 340 2 315 1 110 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 154 2 153 1 174 1 20 1 65 1 281 1 119 2 379 1 207 1 
329 1 96 1 357 1 30 2 145 1 287 1 6 1 128 3 33 4 233 1 361 1 9 2 106 2 191 1 109 1 36 1 238 5 239 1 194 1 167 3 195 5 340 2 132 1 315 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 153 1 174 1 201 1 44 2 20 1 65 1 282 2 281 1 379 1 119 3 207 1 
329 1 96 1 357 1 30 2 145 1 287 1 6 1 128 3 33 4 233 1 361 1 9 2 106 2 191 1 109 1 36 1 238 5 239 1 194 1 167 3 195 5 340 2 132 1 315 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 153 1 174 1 201 1 44 2 20 1 65 1 282 2 281 1 379 1 119 3 207 1 
329 1 96 1 29 1 357 1 30 2 145 1 287 1 97 2 128 2 6 1 33 4 361 1 9 2 191 1 192 1 109 1 238 4 36 1 167 2 194 1 195 4 263 2 340 2 315 1 223 1 76 1 242 1 265 1 80 4 370 1 199 1 154 2 174 1 20 1 65 1 281 1 119 2 379 1 207 1 
331 1 286 1 232 1 332 3 333 1 217 1 72 6 129 1 108 1 262 2 57 1 38 1 59 2 60 1 244 2 152 1 248 1 84 1 226 2 177 1 303 1 378 1 117 3 24 1 285 1 253 1 
70 1 286 11 3 1 232 2 98 1 31 2 332 6 184 2 186 1 333 2 188 1 72 14 219 1 129 11 262 1 57 4 40 1 59 1 14 1 78 1 244 2 60 2 15 3 152 1 84 2 226 4 277 3 177 1 227 1 378 2 117 8 285 2 49 1 
212 1 2 1 232 1 98 1 332 1 333 1 102 1 188 1 72 2 312 1 262 1 365 1 133 1 57 1 342 1 40 1 77 1 242 1 113 1 60 1 152 1 370 2 302 1 137 1 64 1 21 1 226 2 281 2 378 1 117 1 325 1 86 1 351 1 88 1 67 1 91 1 285 1 69 1 
331 1 286 7 232 3 98 1 332 10 184 2 102 1 333 3 188 1 54 2 57 7 112 1 59 4 14 2 242 1 60 3 113 2 244 8 152 3 302 1 64 2 21 1 303 1 117 10 351 1 67 1 24 1 253 1 353 1 212 2 126 2 31 2 309 2 217 1 72 20 129 7 219 4 312 2 262 2 365 2 38 1 40 1 77 3 370 3 318 2 175 1 137 2 84 3 177 3 226 6 323 1 279 2 281 3 378 3 325 2 86 3 88 3 91 2 285 3 
353 1 232 2 360 1 98 1 332 1 102 1 333 2 161 1 162 1 72 2 336 1 236 1 338 1 312 2 148 1 365 2 40 1 242 1 77 7 60 2 134 1 370 1 152 2 302 2 248 1 137 2 21 1 226 4 280 1 281 1 378 2 117 1 86 8 141 1 67 1 88 8 381 2 91 3 285 2 
286 1 232 1 183 1 31 1 332 2 101 1 184 1 333 1 188 1 72 3 129 1 57 1 59 1 14 1 242 1 244 1 60 1 152 1 370 1 84 1 21 1 226 2 177 1 281 1 306 1 378 1 117 1 67 1 285 1 
244 1 60 1 286 1 152 1 232 1 184 1 248 1 333 1 84 1 226 2 373 1 72 2 219 1 129 1 378 1 117 2 57 1 285 1 
244 1 60 1 286 1 152 1 232 1 332 2 248 1 333 1 226 2 177 1 72 2 129 1 378 1 296 1 57 1 59 1 14 1 285 1 
244 2 60 1 286 2 152 1 232 1 31 1 332 2 184 1 248 1 333 1 84 1 177 1 226 2 72 4 219 1 129 2 378 1 117 2 57 2 59 1 14 1 285 1 
244 1 60 1 286 1 360 1 152 1 232 1 184 1 333 1 84 1 226 2 373 1 72 2 219 1 129 1 378 1 117 2 57 1 285 1 
244 1 60 1 286 1 360 1 152 1 232 1 332 2 333 1 226 2 177 1 72 2 129 1 378 1 296 1 57 1 59 1 14 1 285 1 
244 2 60 1 286 2 360 1 152 1 232 1 31 1 332 2 184 1 333 1 84 1 177 1 226 2 72 4 219 1 129 2 378 1 117 2 57 2 59 1 14 1 285 1 
244 2 60 1 286 2 152 1 232 1 31 1 332 2 184 1 333 1 84 1 177 1 226 2 72 4 219 1 129 2 378 1 117 2 57 2 59 1 14 1 285 1 
212 1 232 1 98 1 332 1 333 1 54 1 72 2 312 1 262 1 365 1 40 1 77 1 113 1 60 1 370 1 152 1 302 1 137 1 64 1 226 2 281 1 117 1 378 1 325 1 86 1 88 1 91 1 285 1 
232 1 98 1 332 1 333 1 335 1 72 2 312 1 262 1 365 1 40 1 77 1 60 1 370 1 152 1 274 1 302 1 137 1 64 1 226 2 281 1 117 1 378 1 325 1 86 1 88 1 180 1 91 1 285 1 
244 2 60 1 286 2 152 1 232 1 31 1 332 2 184 1 333 1 188 1 84 1 177 1 226 2 72 4 219 1 129 2 378 1 117 2 57 2 59 1 14 1 285 1 
212 1 286 2 232 1 31 1 332 2 184 1 333 1 54 1 72 4 219 1 129 2 312 1 365 1 57 2 59 1 14 1 77 1 244 2 113 1 60 1 370 1 152 1 137 1 84 1 64 1 177 1 226 2 279 1 280 1 281 1 117 2 378 1 325 1 86 1 88 1 91 1 285 1 
142 1 286 1 232 1 183 1 31 1 332 1 184 1 333 1 188 1 72 3 219 1 129 1 57 1 14 1 242 1 244 1 60 1 152 1 370 1 84 1 177 1 21 1 226 2 281 1 306 1 378 1 117 2 67 1 285 1 
327 1 354 1 331 1 3 1 232 3 31 4 332 21 184 4 160 1 217 1 363 1 163 1 72 41 219 4 237 1 295 2 38 1 59 4 14 4 299 1 171 1 78 3 60 3 244 8 15 4 270 4 271 1 114 1 319 1 83 1 84 5 226 6 203 1 156 1 277 3 177 5 157 1 303 1 378 3 117 20 24 1 285 3 253 1 
327 1 354 1 331 1 3 1 232 4 31 4 332 18 184 4 160 2 217 1 363 1 163 1 72 38 219 3 237 1 295 2 38 1 59 4 14 3 299 1 171 1 78 3 60 4 244 7 15 4 270 4 271 1 114 1 319 1 83 1 84 5 226 8 203 1 156 1 277 3 177 4 157 1 303 1 378 4 117 20 24 1 285 4 253 1 
327 1 354 1 331 1 3 2 232 2 31 7 332 25 184 7 160 1 217 1 363 1 163 1 72 52 219 7 237 1 295 1 38 1 59 7 14 7 171 1 78 2 60 2 244 14 15 4 270 4 271 1 114 1 83 1 84 8 226 4 203 1 156 1 277 4 177 8 157 1 227 2 303 1 378 2 117 27 24 1 285 2 253 1 
3 1 232 2 31 3 332 10 184 3 72 19 219 3 237 1 295 1 59 3 14 3 171 1 78 1 60 2 244 6 15 2 270 2 271 2 319 1 83 1 84 3 226 4 203 1 156 1 277 1 177 3 378 2 117 9 284 1 285 2 
327 1 354 1 232 3 31 3 332 12 184 3 160 2 363 1 163 1 72 26 219 2 237 1 295 2 59 2 14 2 171 2 78 2 244 4 60 3 15 2 270 4 271 1 114 1 83 1 84 3 177 2 226 6 203 1 156 1 277 2 157 1 378 3 117 14 285 3 
121 1 22 1 185 1 231 1 25 1 179 1 41 1 322 1 345 1 181 1 
317 1 256 1 
121 1 292 1 173 1 25 1 179 1 234 1 41 1 345 1 181 1 
328 1 121 1 80 1 247 1 258 1 33 1 361 1 322 1 22 1 66 1 341 1 231 1 179 1 25 1 41 1 181 1 345 1 150 2 
328 1 121 1 80 1 247 1 258 1 33 1 361 1 322 1 22 1 66 1 341 1 231 1 179 1 25 1 41 1 181 1 345 1 150 2 
328 1 121 1 80 1 247 1 258 1 33 1 361 1 322 1 22 1 66 1 341 1 231 1 179 1 25 1 41 1 181 1 345 1 150 2 
368 1 267 1 176 1 
368 1 267 1 176 1 
189 1 225 1 
189 1 267 1 225 1 
255 1 52 1 
121 1 330 1 255 1 213 1 256 1 5 1 258 1 33 1 52 1 105 1 262 1 341 1 41 1 345 1 150 1 242 2 80 1 317 1 370 2 21 2 281 2 228 1 67 2 90 1 25 1 179 1 181 1 
368 1 176 1 
189 1 267 1 225 1 
232 1 98 1 332 1 333 1 188 1 162 1 72 2 312 1 338 1 221 1 365 1 149 1 170 1 40 1 242 2 77 2 60 1 152 1 370 2 82 1 137 1 202 1 226 2 281 2 378 1 117 1 86 2 88 2 381 2 91 1 285 1 
353 1 367 1 346 1 355 1 137 1 34 1 190 1 8 1 10 2 280 1 218 1 164 1 220 1 118 1 86 2 313 1 365 1 88 2 77 2 
353 1 367 1 346 1 355 1 137 1 34 1 10 2 218 1 164 1 220 1 118 1 86 1 313 1 88 1 365 1 314 1 77 1 
134 1 302 1 137 1 190 1 236 1 312 1 86 1 313 1 365 1 88 1 91 1 344 1 77 1 298 1 
353 1 367 1 346 1 355 1 137 1 34 1 190 1 8 1 10 2 218 1 164 1 220 1 118 1 86 1 313 1 365 1 88 1 77 1 
366 1 
108 1 357 1 194 1 6 1 240 1 294 1 361 1 
80 1 96 1 357 1 30 1 287 1 97 1 6 1 33 1 44 1 361 2 20 1 106 1 282 1 238 1 194 1 132 1 207 1 
96 4 144 1 287 4 97 12 6 9 184 2 11 1 238 5 194 8 13 2 240 1 294 1 14 2 302 1 200 2 20 4 64 3 207 4 159 2 208 3 357 2 30 3 126 2 31 2 257 6 215 1 33 5 361 8 35 1 36 2 312 3 365 4 264 1 77 3 75 2 42 2 80 5 369 2 44 6 137 3 84 2 177 2 280 1 278 6 374 2 138 2 178 2 377 2 86 3 326 2 88 3 140 1 91 10 92 1 
354 1 96 2 30 1 357 2 287 2 97 6 31 2 257 5 6 8 184 2 33 1 361 5 363 1 163 1 35 1 238 1 73 1 194 5 14 2 241 1 42 1 78 1 80 1 15 1 369 2 114 1 44 3 20 2 84 2 277 1 177 2 278 5 157 1 138 1 207 2 
96 1 124 1 287 1 183 1 6 2 290 1 33 1 217 1 53 1 239 1 194 2 223 1 242 1 80 1 369 2 370 1 172 1 249 1 20 1 84 2 177 1 21 1 281 1 138 1 67 1 24 1 207 1 253 1 
96 1 357 1 287 1 6 1 20 1 361 1 194 1 294 1 240 1 207 1 
369 2 126 1 97 10 31 2 257 5 184 2 6 5 44 5 361 5 84 2 177 2 278 5 138 1 194 5 14 2 
80 1 357 1 30 1 238 1 33 1 361 1 
96 2 144 1 30 2 287 1 215 2 6 2 33 3 103 1 236 1 35 2 238 4 312 1 194 2 169 1 365 1 222 1 77 4 42 2 134 1 80 3 302 2 137 1 20 2 47 1 23 1 86 4 88 4 91 1 207 2 
212 1 124 1 232 1 50 1 98 1 183 2 332 1 333 1 54 1 72 1 312 1 262 1 365 1 77 1 242 2 113 1 60 1 370 3 152 1 302 1 137 1 64 1 226 2 21 2 281 3 378 1 325 1 86 1 88 1 67 2 91 1 285 1 
42 1 96 1 331 1 357 2 287 1 97 4 257 2 6 1 44 2 20 1 361 4 278 2 35 1 194 2 207 1 
310 1 25 1 179 1 
310 1 25 1 179 1 
27 1 22 1 255 1 25 1 179 1 
310 1 25 1 179 1 
19 1 25 1 179 1 
19 1 25 1 179 1 
19 1 25 1 179 1 
25 1 179 1 
41 1 345 1 
331 1 232 1 332 4 217 1 72 8 38 1 59 2 78 1 60 1 244 2 15 1 114 1 84 1 177 1 277 1 226 2 203 1 303 1 378 1 117 4 24 1 285 1 253 1 
331 1 3 1 232 2 31 1 332 5 184 1 217 1 72 11 219 1 38 1 59 2 78 1 60 2 244 3 15 2 114 1 84 2 177 1 203 1 226 4 277 1 303 1 375 1 378 2 117 6 24 1 285 2 253 1 
354 1 331 1 232 3 31 2 332 10 184 2 160 1 217 1 363 1 163 1 72 19 219 1 38 1 14 2 59 3 78 1 60 3 244 4 15 1 114 1 84 3 277 1 226 6 203 1 177 3 157 1 303 1 375 1 378 3 117 9 24 1 285 3 253 1 
354 1 331 1 232 3 31 2 332 7 184 2 160 1 217 1 163 1 363 1 72 17 219 2 38 1 14 1 59 3 78 1 60 3 244 5 15 1 114 1 84 3 277 1 226 6 203 1 177 2 157 1 303 1 375 1 378 3 117 10 24 1 285 3 253 1 
331 1 232 1 332 4 217 1 72 8 38 1 59 2 78 1 60 1 244 2 15 1 114 1 84 1 177 1 277 1 226 2 203 1 303 1 378 1 117 4 24 1 285 1 253 1 
354 1 232 1 31 2 332 6 184 2 163 1 363 1 72 12 219 1 14 2 59 1 78 1 60 1 244 2 15 1 114 1 84 2 277 1 226 2 203 1 177 2 157 1 378 1 117 6 285 1 
354 1 331 1 232 4 31 2 332 8 184 2 160 2 217 1 363 1 163 1 72 18 219 2 38 1 14 1 59 3 78 1 60 4 244 5 15 1 114 1 84 3 226 8 203 1 277 1 177 2 157 1 303 1 375 1 378 4 117 10 24 1 285 4 253 1 
354 1 232 4 31 3 332 7 184 3 160 2 363 1 163 1 72 16 219 3 14 2 59 3 78 1 60 4 244 6 15 1 114 1 319 1 84 3 203 1 226 8 277 1 177 2 157 1 378 4 117 9 285 4 
244 6 332 4 217 3 84 1 177 1 72 7 303 1 219 3 117 3 38 2 24 3 59 3 253 1 
354 1 331 1 232 4 31 2 332 8 184 2 160 2 217 1 363 1 163 1 72 18 219 1 38 1 14 1 59 3 78 1 60 4 244 4 15 1 114 1 319 1 84 3 203 1 226 8 277 1 177 2 157 1 303 1 378 4 117 10 24 1 285 4 253 1 
244 3 60 2 331 1 232 2 332 4 160 1 84 1 217 1 177 1 226 4 72 8 303 1 219 1 117 4 378 2 38 1 59 2 24 1 285 2 253 1 
244 2 331 1 332 3 217 1 84 1 177 1 303 1 72 6 108 1 117 3 38 1 24 1 59 2 253 1 
244 2 60 1 232 1 31 1 332 2 184 1 84 1 177 1 226 2 72 4 219 1 375 1 378 1 117 2 59 1 14 1 285 1 
78 1 244 2 15 2 3 1 31 1 332 4 184 1 84 1 177 1 277 1 72 7 219 1 117 3 59 1 14 1 
331 1 3 1 232 2 31 2 332 12 184 2 71 1 186 1 160 2 217 2 72 23 219 4 38 1 14 2 59 5 244 9 60 2 15 2 84 3 277 2 177 3 226 4 227 1 303 1 117 11 378 2 24 2 285 2 253 1 
72 1 15 1 332 1 
277 1 72 1 117 1 
60 1 244 3 232 1 126 1 31 1 332 3 184 1 84 1 226 2 177 1 72 6 219 1 375 1 378 1 117 3 14 1 59 2 285 1 
354 1 232 1 31 2 332 6 184 2 163 1 363 1 72 12 219 1 14 2 59 1 78 1 60 1 244 2 15 1 114 1 84 2 277 1 226 2 203 1 177 2 157 1 378 1 117 6 285 1 
244 2 332 3 84 1 217 1 177 1 72 6 219 1 117 3 24 1 59 1 253 1 
244 2 60 1 232 1 332 2 71 1 160 1 217 1 226 2 72 3 303 1 219 1 117 1 378 1 38 1 59 1 24 1 285 1 
60 1 244 5 232 1 332 5 249 1 217 2 84 2 226 2 203 1 177 2 72 10 219 2 378 1 117 5 24 2 59 3 285 1 253 1 
226 2 203 1 244 1 72 2 60 1 219 1 117 2 378 1 232 1 184 1 285 1 84 1 
244 2 60 1 232 1 31 1 332 2 184 1 84 1 177 1 203 1 226 2 72 4 219 1 378 1 117 2 59 1 14 1 285 1 
60 3 244 2 232 3 319 1 332 2 71 1 160 1 217 1 203 1 226 6 72 3 219 1 378 3 117 1 24 1 59 1 285 3 
331 1 3 1 232 5 31 3 332 18 71 1 184 3 7 1 160 2 217 3 72 34 219 5 38 1 14 3 59 7 78 1 60 5 244 12 15 4 347 1 319 1 84 5 226 10 203 1 277 3 177 5 303 1 375 1 305 1 378 5 117 16 24 3 285 5 253 2 
197 1 151 1 281 1 145 1 370 1 262 1 242 1 
151 1 197 1 79 1 246 1 145 1 370 1 165 1 281 1 262 1 56 1 58 1 242 1 
134 1 236 1 108 1 312 1 86 1 365 1 88 1 302 1 91 1 137 1 77 1 
212 1 370 2 302 1 102 1 137 1 64 1 21 1 281 2 312 1 262 1 325 1 86 1 365 1 67 1 88 1 91 1 242 1 77 1 
329 1 212 1 215 1 102 1 312 2 262 1 365 1 223 1 77 1 242 2 370 2 200 1 137 1 64 2 21 1 65 1 281 2 325 1 86 1 88 1 67 2 91 3 159 1 
329 1 215 1 102 1 312 2 262 1 365 1 223 1 77 2 242 2 370 2 274 1 200 1 137 1 64 2 21 1 65 1 205 1 281 2 325 1 86 2 88 2 67 2 91 3 159 1 
266 1 80 2 357 1 302 1 200 1 215 1 33 2 361 1 137 1 64 1 205 1 166 1 36 1 238 1 312 1 86 3 326 1 365 1 88 3 91 4 159 1 77 3 208 1 
80 2 357 1 302 1 200 1 215 1 33 2 361 1 137 1 64 1 205 1 36 1 238 1 312 1 86 3 13 1 326 1 365 1 88 3 91 4 159 1 77 3 208 1 
86 1 148 1 365 1 88 1 137 1 77 1 
353 1 122 1 123 1 51 1 302 2 137 2 161 1 64 1 280 1 336 1 338 1 312 2 148 1 86 7 141 1 88 7 365 3 381 1 264 1 91 3 77 6 
331 1 286 1 232 2 332 3 102 1 333 2 188 1 54 1 57 1 59 2 242 1 113 1 60 2 244 2 152 2 64 1 21 1 303 1 117 3 67 1 24 1 253 1 212 1 309 1 217 1 72 6 129 1 312 1 262 2 365 1 38 1 77 1 370 2 82 1 137 1 84 1 226 4 177 1 279 1 280 1 281 2 378 2 325 1 86 1 88 1 91 1 285 2 
96 2 144 1 357 1 30 1 287 2 6 1 33 3 361 1 238 2 36 1 194 1 13 1 240 1 294 1 77 1 75 1 80 3 302 1 20 2 374 1 178 1 86 1 326 1 88 1 90 1 91 2 207 2 208 1 
137 1 64 1 280 1 312 1 326 1 148 1 86 2 88 2 140 1 365 2 264 1 91 2 77 2 
134 1 302 1 137 1 280 1 107 1 205 1 236 1 312 1 86 4 365 1 88 4 91 1 77 4 
122 1 123 1 215 1 175 1 137 1 64 1 364 1 312 1 131 1 86 2 88 2 365 2 91 1 77 2 
367 1 10 1 355 1 164 1 86 1 365 1 88 1 302 1 137 1 77 1 
353 1 137 1 280 1 338 1 312 1 86 2 221 1 88 2 365 1 91 1 77 2 
134 1 215 1 302 1 137 2 280 1 107 1 336 1 236 1 338 1 312 2 86 5 88 5 141 1 365 2 91 3 77 4 
134 1 215 1 302 1 137 2 280 1 107 1 251 1 336 1 236 1 338 1 312 2 86 5 88 5 365 2 91 3 77 4 
370 2 302 1 274 1 102 1 137 1 64 1 21 1 281 2 312 1 262 1 325 1 86 1 365 1 67 1 88 1 91 1 242 1 77 1 
122 1 123 1 51 1 215 1 137 1 64 1 312 1 86 1 88 1 365 2 264 1 91 1 77 1 
26 1 281 1 193 1 370 1 149 1 170 1 206 1 242 1 202 1 
311 1 193 1 297 1 
26 1 193 1 262 1 206 1 372 1 
329 1 26 2 80 2 357 1 136 1 321 1 33 2 361 1 372 2 65 1 311 1 191 1 193 1 36 1 262 1 297 1 90 1 206 2 223 1 
108 1 339 1 230 1 104 1 
198 1 339 1 230 1 63 1 196 1 259 1 104 1 
356 1 63 1 275 1 
224 1 95 1 245 2 308 1 198 3 339 1 230 1 63 3 196 1 43 1 259 1 104 1 
235 1 268 1 198 2 339 1 230 1 63 2 196 1 259 1 104 1 
34 1 367 1 10 1 28 1 308 1 198 1 63 1 196 1 259 1 104 1 94 1 
308 1 198 1 339 1 63 1 196 1 259 1 104 1 
308 1 198 1 339 2 230 1 63 1 196 1 259 1 
276 1 182 1 308 1 17 1 198 2 339 1 63 2 196 2 259 2 104 1 
243 1 308 1 198 3 269 1 268 2 63 3 291 1 259 1 104 2 339 1 230 1 196 1 94 1 
367 1 355 1 308 1 198 2 268 1 63 2 259 1 104 1 34 1 10 2 260 1 339 1 230 1 118 1 196 1 
308 1 198 4 268 2 63 4 291 1 259 2 104 2 235 1 324 1 339 1 230 1 196 2 94 1 
308 1 198 1 339 1 230 1 63 1 196 1 259 1 104 1 
95 1 245 1 268 2 198 4 63 4 43 1 291 1 259 1 104 3 350 1 339 2 230 2 196 1 94 1 
210 1 300 1 308 1 198 2 81 1 268 1 63 2 259 1 104 1 339 1 230 1 196 1 
95 2 308 1 245 2 198 3 63 3 43 1 259 1 362 1 104 1 230 1 339 1 196 1 
1 1 304 2 62 1 104 2 
308 1 46 1 198 1 63 1 196 1 259 1 
243 1 308 1 268 1 198 2 339 1 230 1 63 2 196 1 259 1 104 1 
158 1 
308 1 198 1 339 1 230 1 63 1 196 1 259 1 104 1 
243 1 308 1 245 1 268 1 198 3 63 3 259 1 104 1 230 1 339 1 196 1 
350 1 291 1 104 1 94 1 
339 1 104 1 

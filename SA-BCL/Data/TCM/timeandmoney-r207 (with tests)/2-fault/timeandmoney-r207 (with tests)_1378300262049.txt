#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money; | RETURN | 7423 | return null
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3635 | 1 -> 2
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
232 2 86 4 234 1 21 1 212 1 364 2 315 2 286 2 365 1 126 1 242 9 322 1 244 1 179 1 181 3 200 9 355 1 270 1 36 2 133 6 221 1 71 5 377 1 75 1 227 2 278 1 104 2 47 1 
232 2 86 4 234 1 21 1 212 1 364 2 315 2 286 2 365 1 126 1 242 9 322 1 244 1 179 1 181 3 200 9 355 1 270 1 36 2 133 6 221 1 71 5 377 1 75 1 227 2 278 1 104 2 47 1 
232 2 86 5 234 1 21 1 212 1 364 2 315 2 286 2 365 1 126 1 242 10 322 1 244 1 179 1 181 4 200 10 355 1 270 1 36 2 133 7 221 1 71 6 377 1 75 1 227 2 278 1 104 2 47 1 
232 2 86 3 234 1 21 1 212 1 364 2 315 2 286 2 365 1 126 1 242 7 322 1 244 1 179 1 181 2 200 7 355 1 270 1 36 2 133 4 221 1 71 4 377 1 227 2 278 1 104 1 47 1 
86 2 355 1 21 1 212 1 36 1 315 1 364 1 133 3 286 1 71 3 242 4 75 1 227 1 322 1 181 1 104 2 200 4 47 1 
232 1 355 1 212 1 115 1 364 1 117 1 315 1 36 1 71 1 377 1 126 1 256 1 242 2 227 1 200 2 47 1 
232 1 86 1 355 1 212 1 364 2 365 1 133 1 71 2 242 3 227 2 181 1 200 3 47 1 
232 1 86 4 210 1 21 1 212 1 364 2 315 1 365 1 286 1 242 9 244 1 322 1 179 1 181 3 200 9 355 1 36 1 133 7 71 5 273 1 227 2 75 1 104 2 47 1 
232 1 86 4 210 1 21 1 212 1 364 2 315 1 365 1 286 1 242 9 244 1 322 1 179 1 181 3 200 9 355 1 36 1 133 7 71 5 273 1 227 2 75 1 104 2 47 1 
107 1 12 1 121 1 
118 1 107 1 339 2 
174 2 321 2 33 2 215 2 357 1 160 2 7 2 272 1 
51 1 363 2 262 2 4 1 237 2 7 2 240 1 197 1 174 3 321 2 8 1 292 1 324 1 215 3 29 1 327 1 157 1 67 1 33 2 94 1 38 1 299 2 357 1 70 1 39 1 160 2 272 1 185 1 223 1 74 1 274 1 141 1 209 1 279 1 80 2 337 1 122 1 
174 1 91 1 321 1 164 1 33 1 215 1 360 1 160 1 7 1 272 1 
341 1 107 1 54 1 6 1 160 1 174 1 164 1 119 1 165 1 215 1 305 1 12 1 26 1 113 1 
107 1 33 1 54 1 6 2 7 1 160 1 174 1 321 1 164 1 165 2 215 1 305 1 12 1 26 1 113 1 
334 1 249 1 165 1 5 1 6 1 
249 1 107 1 165 2 12 1 5 1 6 2 280 1 148 1 
249 1 165 1 6 1 
91 1 33 1 5 1 6 1 7 1 160 1 58 1 272 1 174 1 321 1 164 1 165 1 215 1 360 1 
107 1 
249 1 107 1 131 1 165 2 12 1 5 1 6 2 148 1 
156 1 249 2 343 1 107 1 3 1 328 1 330 2 5 2 6 5 271 1 148 1 226 1 139 1 165 5 140 1 378 2 12 1 191 1 201 2 
341 1 342 1 211 1 33 1 345 1 375 2 357 1 55 1 7 4 160 5 73 1 174 5 321 4 215 5 
173 1 174 2 321 2 164 1 215 2 360 1 160 2 7 2 
357 1 121 1 
93 1 33 1 357 2 160 2 7 1 73 1 174 2 321 1 215 2 
176 1 307 1 381 1 
51 1 157 1 262 1 4 1 94 1 299 1 357 1 39 1 174 1 303 1 274 1 8 1 215 1 80 1 279 1 122 1 
51 1 157 1 262 1 4 1 94 1 299 1 39 1 55 1 375 1 7 1 160 1 274 1 174 2 321 1 8 1 176 1 215 2 279 1 80 1 122 1 
174 3 321 3 33 1 215 3 357 1 375 1 160 3 7 3 
174 1 321 1 164 1 215 1 360 1 160 1 7 1 
93 1 174 1 321 1 164 1 33 1 215 1 160 1 7 1 73 1 
106 1 51 1 363 2 262 1 54 1 4 1 237 1 55 1 6 1 7 3 240 1 197 1 174 4 321 3 8 1 292 1 324 1 215 4 26 1 113 1 29 1 327 1 157 1 33 2 94 1 299 1 357 1 70 1 39 1 375 1 160 3 301 1 272 1 73 1 223 1 74 1 274 1 164 1 165 1 305 1 141 1 279 1 80 1 122 1 
174 2 341 1 321 1 345 1 215 2 357 1 375 1 160 2 7 1 
33 1 107 1 54 1 6 1 55 1 375 2 7 3 160 3 301 1 73 1 174 3 321 3 164 1 165 1 305 1 215 3 26 1 19 1 113 1 
174 2 321 2 33 1 176 1 215 2 375 1 160 2 7 2 73 1 381 1 
51 1 157 1 262 1 4 1 94 1 299 1 357 1 39 1 174 1 274 1 8 1 215 1 80 1 279 1 122 1 
283 1 51 1 157 1 262 1 34 1 94 1 299 1 357 1 174 1 274 1 8 1 215 1 80 1 279 1 122 1 
1 1 363 2 344 1 237 4 109 1 196 1 197 1 292 1 176 2 324 2 349 1 294 1 325 1 29 1 184 1 219 1 70 1 161 1 74 1 141 1 209 2 306 1 307 2 381 2 
173 1 174 1 321 1 164 1 215 1 160 1 7 1 113 1 
348 1 358 1 
348 1 358 1 
120 1 81 1 
120 1 81 1 
120 1 81 1 
348 1 231 1 358 1 
348 1 231 1 358 1 
311 1 348 1 358 1 
290 1 329 1 348 2 120 1 358 2 81 1 
348 1 231 1 358 1 
348 1 316 1 358 1 
348 1 316 1 358 1 
348 1 316 1 358 1 
310 1 311 1 313 1 6 1 7 2 88 1 174 2 321 2 9 1 175 1 348 1 215 2 245 1 326 1 66 1 183 1 357 1 358 1 160 2 206 1 165 1 43 1 45 1 44 1 
144 1 183 2 15 1 107 1 170 1 329 1 6 2 358 2 224 1 88 2 206 2 9 3 348 2 165 2 17 1 247 2 45 2 44 1 308 1 
36 1 315 1 286 1 
36 1 315 1 117 1 
16 1 99 1 22 1 315 3 117 1 286 2 
41 1 16 1 99 1 315 2 117 1 286 1 
99 1 16 2 315 2 117 1 286 1 
1 1 2 1 107 2 313 1 146 1 5 4 6 5 109 1 148 1 147 1 195 1 175 1 177 2 180 1 349 1 12 1 201 1 66 1 249 1 35 1 330 1 134 1 376 2 271 3 118 1 226 2 165 5 378 1 189 2 306 1 191 1 339 3 
282 1 1 3 125 1 107 5 146 2 5 7 6 9 109 3 148 1 195 2 243 1 175 4 177 6 349 3 25 1 12 1 155 5 201 2 249 6 328 1 35 1 330 2 134 3 271 8 207 1 118 3 334 5 226 6 101 1 165 9 378 2 189 6 306 3 191 1 339 9 
1 1 2 1 107 3 146 1 5 2 6 3 109 1 147 1 195 1 175 1 177 2 349 1 12 1 201 1 328 1 330 1 376 1 134 1 271 3 118 2 226 2 165 3 378 1 189 2 306 1 339 4 
1 2 2 1 107 4 125 1 146 1 5 3 6 4 109 2 147 1 195 1 175 2 177 4 349 2 12 1 25 1 201 1 328 1 330 1 376 2 134 2 271 5 207 1 118 3 226 4 165 4 378 1 189 4 306 2 339 7 
51 1 279 1 122 1 
51 1 332 1 
51 1 72 1 121 1 
51 1 297 1 
356 1 
51 1 122 1 
51 3 233 1 59 1 279 1 72 2 122 1 
0 1 49 1 1 1 344 2 116 1 237 7 222 1 100 1 323 2 324 3 349 1 294 3 209 4 18 1 154 1 338 1 217 1 
0 1 49 1 1 1 344 2 116 1 237 7 222 1 100 1 323 2 324 3 349 1 294 3 209 4 18 1 154 1 338 1 217 1 
0 1 49 1 1 1 344 2 116 1 237 7 222 1 100 1 323 2 324 3 349 1 294 3 18 1 209 4 154 1 338 1 217 1 114 1 
0 2 49 2 83 1 363 2 1 4 344 5 237 31 194 1 109 3 318 3 366 1 197 1 319 1 323 3 324 15 349 4 178 1 294 10 266 1 154 1 217 2 63 1 29 1 116 1 134 3 70 1 222 1 74 1 100 2 18 1 209 16 306 3 338 5 105 4 
49 1 0 1 52 1 1 1 363 4 344 3 237 9 197 2 323 2 324 4 349 1 294 4 266 1 217 1 29 2 116 1 70 2 222 1 74 2 100 1 209 5 18 1 79 1 338 1 
232 1 212 1 262 1 22 1 364 1 315 2 286 1 239 1 242 2 246 1 200 2 13 1 157 1 355 1 353 1 36 1 117 1 94 1 133 1 299 1 71 1 302 1 162 1 227 1 188 1 277 1 77 1 142 1 80 1 47 1 
232 1 212 1 262 1 22 1 364 1 315 2 286 1 239 1 242 3 246 1 200 3 28 1 13 1 269 1 157 1 355 1 353 1 36 1 117 1 94 1 299 1 133 2 71 1 302 1 162 1 227 1 229 1 77 1 142 1 80 1 
232 1 212 1 262 1 22 1 315 2 286 1 239 1 242 2 246 1 200 2 28 1 157 1 355 1 353 1 117 1 36 1 94 1 299 1 133 2 71 1 302 1 229 1 77 1 142 1 80 1 
232 2 51 1 53 1 269 1 203 1 157 1 262 1 364 1 94 1 299 1 23 1 239 2 302 2 242 1 227 1 8 1 102 1 246 2 80 1 200 1 371 1 122 1 64 1 
232 1 262 1 22 1 364 1 315 2 286 1 239 1 242 1 246 1 200 1 28 1 13 1 157 1 353 1 36 1 117 1 94 1 299 1 302 1 162 1 227 1 188 1 77 1 142 1 80 1 47 1 
167 1 
51 1 53 1 341 1 145 1 107 2 146 1 54 1 6 5 148 3 150 1 8 2 291 1 12 1 199 1 201 1 113 1 249 6 352 2 157 1 251 1 299 2 253 2 160 1 118 2 163 1 164 1 165 5 119 1 305 1 80 2 122 1 84 2 123 1 85 1 262 2 23 1 214 1 172 2 24 2 174 1 89 1 215 1 26 1 32 1 218 2 330 1 94 1 271 2 138 4 226 2 276 2 378 1 379 1 191 1 339 2 
341 1 145 1 54 1 6 3 214 1 148 1 24 1 174 1 291 1 215 1 26 1 113 1 249 2 32 1 131 1 160 1 138 2 163 1 164 1 119 1 165 3 305 1 
341 1 145 1 107 1 54 1 6 3 214 1 148 1 174 1 291 1 215 1 12 1 26 1 113 1 249 1 32 1 131 1 160 1 138 3 163 1 164 1 276 1 119 1 165 3 305 1 
341 1 145 1 107 1 54 1 6 3 214 1 148 1 24 1 174 1 291 1 215 1 12 1 26 1 113 1 249 2 32 1 131 1 160 1 253 1 138 3 163 1 164 1 276 1 119 1 165 3 305 1 
341 1 145 1 107 5 54 1 6 5 148 3 288 1 291 1 12 5 113 1 201 1 249 7 352 2 159 1 251 1 253 4 160 1 163 1 118 2 164 1 165 5 119 1 305 1 361 1 84 2 85 1 214 1 172 2 24 4 174 1 128 1 215 1 26 1 373 1 32 1 131 1 218 2 330 1 271 1 138 6 226 1 276 4 378 1 191 1 
341 1 145 1 107 2 54 1 6 4 148 2 150 1 291 1 12 1 113 1 201 1 249 4 352 2 251 1 160 1 253 2 163 1 118 2 164 1 165 4 119 1 305 1 84 2 85 1 214 1 172 2 24 2 174 1 215 1 26 1 32 1 218 2 330 1 271 1 138 4 226 1 276 2 378 1 191 1 339 2 
84 2 85 1 341 1 145 1 107 1 54 1 6 4 214 1 148 2 172 2 24 2 174 1 291 1 128 1 215 1 12 1 26 1 113 1 201 1 373 1 249 4 352 2 32 1 218 2 330 1 251 1 159 1 253 2 271 1 160 1 138 4 118 2 163 1 226 1 276 2 164 1 119 1 165 4 305 1 378 1 191 1 
84 2 85 1 341 1 145 1 107 1 54 1 6 4 214 1 148 2 172 2 24 2 174 1 291 1 128 1 215 1 12 1 26 1 113 1 201 1 373 1 249 4 352 2 32 1 218 2 330 1 251 1 159 1 253 2 271 1 160 1 138 4 118 2 163 1 226 1 276 2 164 1 119 1 165 4 305 1 378 1 191 1 
341 1 145 1 107 1 54 1 6 4 214 1 148 2 172 2 24 2 241 1 174 1 291 1 128 1 215 1 12 1 26 1 113 1 201 1 296 1 295 1 249 4 31 2 32 1 218 2 330 1 251 1 253 2 271 1 160 1 138 4 163 1 226 1 276 2 164 1 119 1 165 4 305 1 378 1 190 2 191 1 339 2 
84 2 85 1 341 1 145 1 107 1 54 1 6 4 214 1 148 2 172 2 24 3 174 1 291 1 128 1 215 1 12 1 26 1 201 1 113 1 373 1 249 5 352 2 32 1 218 2 330 1 251 1 159 1 271 1 160 1 253 3 138 5 118 2 163 1 226 1 164 1 276 3 119 1 165 4 378 1 305 1 191 1 361 1 
84 2 85 1 341 1 145 1 107 1 54 1 6 4 214 1 148 2 172 2 24 3 174 1 291 1 128 1 215 1 12 1 26 1 201 1 113 1 373 1 249 5 352 2 32 1 218 2 330 1 251 1 159 1 271 1 160 1 253 3 138 5 118 2 163 1 226 1 164 1 276 3 119 1 165 4 378 1 305 1 191 1 361 1 
341 1 145 1 107 1 54 1 6 4 148 2 150 1 291 1 12 1 113 1 201 1 296 1 249 4 251 1 160 1 253 2 163 1 164 1 165 4 119 1 305 1 214 1 172 2 24 2 174 1 215 1 26 1 32 1 31 2 218 2 330 1 271 1 138 4 226 1 276 2 378 1 191 1 190 2 339 2 
0 1 363 2 1 1 344 2 237 6 197 1 323 1 176 1 292 1 324 3 349 1 294 2 217 1 325 1 29 1 116 1 70 1 357 2 222 1 74 1 141 1 18 1 209 3 307 1 121 1 381 1 
363 4 1 2 344 1 237 14 194 1 109 2 240 1 171 1 318 3 320 1 197 2 319 1 292 1 176 11 324 6 349 1 294 2 90 1 29 2 67 1 357 1 70 2 134 2 74 2 97 1 103 1 141 2 209 8 307 11 306 1 338 1 105 3 381 4 
51 1 363 2 262 1 4 1 237 2 55 1 7 1 240 1 197 1 174 2 321 1 8 1 292 1 111 1 293 1 215 2 324 1 29 1 157 1 67 1 94 1 299 1 357 1 39 1 70 1 375 1 160 1 95 1 97 1 74 1 274 1 303 1 141 1 209 1 279 1 80 1 122 1 381 1 
0 1 51 2 1 3 344 4 4 2 237 20 55 1 7 1 109 2 240 1 197 3 8 1 292 3 349 3 294 8 350 1 157 2 67 1 116 1 299 3 357 2 70 3 160 1 254 2 74 3 18 1 209 10 80 3 307 7 306 2 122 2 363 6 262 3 174 3 321 1 323 1 176 7 324 10 215 3 182 1 28 1 27 2 217 1 268 1 29 3 94 2 375 1 39 2 134 2 222 1 223 2 225 2 97 1 274 2 335 2 141 3 279 2 338 4 381 7 
309 1 259 1 51 3 363 4 53 1 262 7 237 2 23 1 7 1 57 1 240 1 197 2 174 1 321 1 151 1 8 2 292 2 215 1 324 1 28 1 372 1 325 1 29 2 157 2 68 1 67 1 94 2 299 8 38 2 375 1 70 2 160 1 333 1 74 2 277 1 141 2 209 1 80 8 122 2 
363 2 1 1 344 1 237 3 7 1 109 1 197 1 174 1 321 1 176 1 292 1 215 1 324 2 349 1 294 1 61 1 29 1 33 1 70 1 134 1 160 1 73 1 74 1 97 1 141 1 209 1 307 1 306 1 381 1 
29 1 363 2 1 1 237 2 70 1 109 1 161 1 197 1 74 1 176 1 292 1 141 1 294 1 209 2 307 1 338 1 381 1 325 1 
29 1 363 2 344 1 184 1 237 2 70 1 197 1 74 1 176 1 292 1 324 2 141 1 349 1 294 1 307 1 306 1 381 1 325 1 
1 1 363 2 344 1 237 4 109 1 197 1 292 1 176 2 324 2 349 1 294 2 325 1 29 1 134 1 70 1 74 1 141 1 209 2 307 2 306 1 338 1 381 2 
29 1 363 2 1 1 237 2 70 1 57 1 109 1 161 1 197 1 74 1 176 1 292 1 141 1 294 1 209 2 307 1 338 1 381 1 
29 1 363 2 344 1 184 1 237 2 70 1 57 1 197 1 74 1 176 1 292 1 324 2 141 1 349 1 294 1 307 1 306 1 381 1 
1 1 363 2 344 1 237 4 109 1 57 1 197 1 292 1 176 2 324 2 349 1 294 2 29 1 134 1 70 1 74 1 141 1 209 2 307 2 306 1 338 1 381 2 
1 1 363 2 344 1 237 4 109 1 197 1 292 1 176 2 324 2 349 1 294 2 29 1 134 1 70 1 74 1 141 1 209 2 307 2 306 1 338 1 381 2 
51 1 363 2 262 1 4 1 237 2 240 1 197 1 174 1 8 1 292 1 215 1 324 1 29 1 157 1 67 1 94 1 299 1 357 1 39 1 70 1 223 1 74 1 274 1 141 1 209 1 279 1 80 1 122 1 
283 1 51 1 363 2 262 1 237 2 240 1 197 1 174 1 8 1 292 1 215 1 324 1 29 1 157 1 67 1 34 1 94 1 299 1 357 1 135 1 70 1 74 1 274 1 141 1 209 1 279 1 80 1 122 1 
1 1 363 2 344 1 237 4 109 1 197 1 292 1 176 2 324 2 349 1 294 2 29 1 134 1 70 1 74 1 97 1 141 1 209 2 307 2 306 1 338 1 381 2 
51 1 1 1 363 2 344 1 262 1 4 1 237 4 109 1 197 1 174 1 176 2 292 1 324 2 215 1 349 1 294 2 29 1 157 1 94 1 299 1 39 1 70 1 134 1 254 1 223 1 74 1 274 1 277 1 141 1 209 2 306 1 307 2 279 1 80 1 338 1 381 2 122 1 
363 2 1 1 237 3 7 1 109 1 197 1 174 1 321 1 292 1 176 1 324 1 215 1 349 1 294 1 29 1 33 1 70 1 134 1 160 1 73 1 359 1 74 1 97 1 141 1 209 2 306 1 307 1 338 1 381 1 
258 1 363 4 1 3 344 3 237 19 194 1 109 3 318 1 197 2 319 1 324 10 153 1 349 3 294 6 29 2 298 1 70 2 134 3 220 2 204 1 255 1 74 2 336 1 209 9 79 1 306 3 338 3 380 1 105 2 192 2 
50 1 258 2 363 6 1 3 284 1 344 2 237 26 193 1 194 2 109 3 318 2 197 3 346 1 324 12 349 2 153 1 266 2 294 4 29 3 69 1 298 1 70 3 134 3 220 1 255 1 96 1 74 3 336 2 209 14 79 1 306 2 338 2 105 2 192 4 
0 1 50 1 258 1 363 6 1 5 284 1 344 4 235 1 237 41 193 1 194 3 109 4 318 3 197 3 319 1 346 1 323 1 324 21 153 1 349 5 266 1 294 8 217 1 29 3 116 1 69 1 298 1 70 3 134 4 220 1 204 1 222 1 255 1 96 1 74 3 336 2 18 1 209 20 79 1 306 4 338 4 105 4 192 4 
0 1 50 1 258 1 363 8 1 5 284 1 344 4 235 1 237 38 193 1 194 3 109 4 318 3 197 4 319 1 346 1 323 1 324 18 153 1 349 4 266 2 294 7 217 1 29 4 116 1 69 1 298 1 70 4 134 4 220 1 204 1 222 1 255 1 96 1 74 4 336 2 18 1 209 20 79 1 306 3 338 3 105 4 192 4 
0 1 50 1 258 1 363 4 1 8 284 1 344 7 237 52 193 1 194 2 109 7 171 2 318 4 197 2 319 2 346 1 323 1 324 25 153 1 349 8 266 1 294 14 217 1 29 2 116 1 69 1 298 1 70 2 134 7 220 1 222 1 255 1 96 1 74 2 336 1 18 1 209 27 79 1 306 7 338 7 105 4 192 4 
231 1 42 1 
98 1 290 1 316 1 
206 1 183 1 329 1 348 1 17 1 267 1 358 1 45 1 308 1 88 1 
311 1 245 1 
206 1 183 1 369 1 228 1 285 1 348 1 358 1 45 1 88 1 
144 1 183 1 15 1 107 1 329 1 6 1 358 1 224 1 88 1 206 1 9 2 165 1 348 1 17 1 247 1 44 1 45 1 308 1 
144 1 183 1 15 1 107 1 329 1 6 1 358 1 224 1 88 1 206 1 9 2 165 1 348 1 17 1 247 1 44 1 45 1 308 1 
144 1 183 1 15 1 107 1 329 1 6 1 358 1 224 1 88 1 206 1 9 2 165 1 348 1 17 1 247 1 44 1 45 1 308 1 
290 1 231 1 42 1 
290 1 231 1 42 1 
98 1 316 1 
98 1 290 1 316 1 
43 1 326 1 
310 1 311 1 313 1 5 1 6 1 7 2 88 1 174 2 321 2 9 1 175 1 348 1 215 2 198 1 245 1 247 1 326 1 66 1 15 1 183 1 357 1 358 1 160 2 206 1 165 1 43 1 45 1 
51 1 259 1 20 1 363 2 262 2 237 2 56 1 240 1 197 1 174 2 151 1 292 1 215 2 324 1 62 1 29 1 157 1 67 1 94 1 331 1 299 2 38 2 70 1 160 2 97 1 74 1 304 1 141 1 209 1 80 2 122 1 
351 1 157 1 169 1 262 2 22 1 36 1 315 2 117 1 94 1 286 1 299 2 302 1 149 1 277 1 77 1 142 1 80 2 28 1 13 1 
157 1 262 1 22 1 36 1 315 2 117 1 94 1 286 1 299 1 302 1 149 1 77 1 142 1 80 1 28 1 13 1 168 1 
51 1 53 1 157 1 169 1 262 1 94 1 299 1 23 1 302 1 8 1 10 1 80 1 122 1 64 1 
351 1 157 1 169 1 262 1 22 1 36 1 315 2 117 1 94 1 286 1 299 1 302 1 149 1 77 1 142 1 80 1 28 1 13 1 
76 1 
226 1 343 1 107 1 3 1 12 1 271 1 121 1 
84 1 85 1 107 2 6 1 148 1 12 1 201 1 249 1 352 1 330 1 271 1 118 1 226 1 165 1 378 1 191 1 339 1 
51 10 1 2 343 1 3 1 107 8 236 1 146 2 108 2 6 5 109 2 148 3 8 1 59 1 349 2 12 2 199 1 60 2 248 2 201 4 65 2 297 3 249 5 157 4 299 3 252 1 300 1 72 2 118 6 165 5 305 2 78 2 80 3 306 2 122 3 260 2 314 1 262 3 213 2 127 2 177 6 27 2 132 1 330 4 94 3 134 2 271 9 332 2 226 8 277 1 378 4 189 6 279 3 191 4 339 12 
50 1 1 2 284 1 107 5 146 1 193 1 6 1 194 1 109 2 148 1 318 1 346 1 177 5 349 2 199 1 60 2 12 2 201 2 249 1 330 2 134 2 136 1 271 8 96 1 118 3 226 5 165 1 378 2 208 1 78 1 189 5 306 2 105 1 191 2 339 6 
0 1 1 2 6 1 7 1 58 1 174 1 321 1 215 1 349 1 60 2 201 1 217 1 91 1 33 1 330 1 159 1 271 2 160 1 272 1 222 1 275 1 226 2 164 1 165 1 378 1 78 1 360 1 191 1 
343 1 3 1 107 1 330 1 271 1 226 1 378 1 12 1 191 1 201 1 
1 2 107 5 134 2 109 2 271 5 118 5 226 5 177 5 349 2 78 1 60 2 189 5 306 2 27 1 339 10 
249 1 107 1 165 1 12 1 6 1 148 1 
123 1 51 1 53 1 314 2 262 4 146 2 6 3 23 1 148 2 8 2 370 1 199 2 201 2 249 4 157 1 328 1 132 1 330 2 94 1 299 4 271 2 40 1 226 2 165 3 378 2 379 1 80 4 191 1 122 1 
51 1 363 2 262 1 4 1 237 1 7 2 240 1 197 1 174 3 321 2 8 1 292 1 324 1 215 3 29 1 327 1 157 1 33 2 94 1 299 1 357 1 39 1 70 1 160 2 272 1 223 1 74 1 274 1 141 1 80 1 279 1 122 1 
107 4 146 1 330 1 271 1 118 2 226 2 323 1 177 2 378 1 189 2 12 2 199 1 191 1 201 1 339 4 
202 1 206 1 45 1 
202 1 206 1 45 1 
206 1 37 1 45 1 308 1 326 1 
202 1 206 1 45 1 
206 1 187 1 45 1 
206 1 187 1 45 1 
206 1 187 1 45 1 
206 1 45 1 
348 1 358 1 
29 2 0 1 1 1 363 4 344 2 116 1 237 8 70 2 222 1 197 2 74 2 323 1 324 4 349 1 209 4 294 3 266 1 18 1 338 1 217 1 
0 1 1 1 344 2 323 1 116 1 324 3 349 1 237 6 209 3 294 2 18 1 222 1 217 1 121 1 
29 1 363 2 1 1 344 1 237 4 70 1 134 1 109 1 317 1 197 1 74 1 324 2 349 1 294 2 209 2 306 1 338 1 
1 1 344 1 237 7 194 1 134 1 109 1 318 1 319 1 324 4 349 1 209 3 294 2 306 1 338 1 105 2 
0 2 1 3 363 4 344 5 237 23 109 2 318 2 171 1 367 1 319 1 197 2 323 1 324 12 349 3 294 9 266 2 217 2 90 1 29 2 116 1 134 2 70 2 222 1 74 2 18 1 209 11 306 2 338 4 105 2 
324 1 237 1 105 1 
237 1 209 1 318 1 
29 1 363 2 1 1 344 2 237 6 70 1 134 1 109 1 317 1 74 1 197 1 324 3 349 1 209 3 294 3 306 1 338 1 27 1 
50 1 363 2 1 2 344 1 284 1 237 12 193 1 194 1 109 2 318 1 197 1 346 1 324 6 349 2 294 2 29 1 70 1 134 2 96 1 74 1 209 6 79 1 306 2 338 1 105 1 
0 1 1 1 344 1 237 6 222 1 324 3 349 1 209 3 294 2 338 1 217 1 
0 1 29 1 363 2 344 1 116 1 237 3 70 1 367 1 197 1 74 1 324 2 209 1 294 2 18 1 266 1 338 1 217 1 
29 1 0 2 363 2 1 2 344 3 237 10 70 1 222 1 74 1 197 1 275 1 324 5 349 2 294 5 209 5 79 1 338 2 217 2 
29 1 363 2 1 1 237 2 70 1 109 1 197 1 74 1 209 2 294 1 79 1 338 1 
29 1 363 2 1 1 344 1 237 4 70 1 134 1 109 1 197 1 74 1 324 2 349 1 294 2 209 2 306 1 79 1 338 1 
29 3 0 1 363 6 344 1 237 3 70 3 204 1 367 1 197 3 74 3 324 2 266 1 294 2 209 1 79 1 338 1 217 1 
0 3 83 1 363 10 1 5 344 7 237 34 194 1 109 3 317 1 318 3 367 1 366 1 197 5 319 1 323 1 324 18 178 1 349 5 266 2 294 12 217 3 29 5 116 1 70 5 134 3 204 1 222 2 74 5 18 1 209 16 79 1 306 3 338 5 105 4 
50 1 0 1 1 1 363 2 344 2 237 8 194 1 318 1 197 1 323 1 324 4 349 1 294 2 217 1 29 1 116 1 70 1 222 1 74 1 209 4 18 1 79 1 105 1 
0 1 50 1 363 4 1 2 344 2 237 11 194 1 109 1 317 1 318 1 197 2 319 1 323 1 324 5 349 1 294 3 217 1 29 2 116 1 70 2 134 1 222 1 74 2 18 1 209 6 79 1 338 1 105 2 
0 1 50 1 363 6 1 3 344 3 284 1 237 19 193 1 194 1 109 2 317 1 318 1 197 3 346 1 323 1 324 10 349 3 294 4 266 1 217 1 29 3 116 1 70 3 134 2 222 1 96 1 74 3 18 1 209 9 79 1 306 2 338 1 105 1 
0 1 50 1 363 6 1 3 344 3 284 1 237 17 193 1 194 1 109 2 317 1 318 1 197 3 346 1 323 1 324 7 349 2 266 1 294 5 217 1 29 3 116 1 70 3 134 2 222 1 96 1 74 3 18 1 209 10 79 1 306 1 338 2 105 1 
50 1 0 1 1 1 363 2 344 2 237 8 194 1 318 1 197 1 323 1 324 4 349 1 294 2 217 1 29 1 116 1 70 1 222 1 74 1 209 4 18 1 79 1 105 1 
50 1 363 2 1 2 344 1 284 1 237 12 193 1 194 1 109 2 318 1 197 1 346 1 324 6 349 2 294 2 29 1 70 1 134 2 96 1 74 1 209 6 79 1 306 2 338 1 105 1 
0 1 50 1 363 8 1 3 284 1 344 3 237 18 193 1 194 1 109 2 317 1 318 1 197 4 346 1 323 1 324 8 349 2 294 5 266 2 217 1 29 4 116 1 70 4 134 2 222 1 96 1 74 4 18 1 209 10 79 1 306 1 338 2 105 1 
50 1 363 8 1 3 284 1 344 3 237 16 193 1 194 1 109 3 318 1 197 4 346 1 324 7 349 2 294 6 266 2 29 4 70 4 134 3 204 1 96 1 74 4 209 9 79 1 306 2 338 3 105 1 
0 3 1 1 344 3 116 1 237 7 222 1 324 4 349 1 18 2 294 6 209 3 338 3 217 3 
0 1 50 1 363 8 1 3 284 1 344 3 237 18 193 1 194 1 109 2 318 1 197 4 346 1 323 1 324 8 349 2 294 4 266 2 217 1 29 4 116 1 70 4 134 2 204 1 222 1 96 1 74 4 18 1 209 10 79 1 306 1 338 1 105 1 
174 1 341 1 345 1 215 1 357 1 160 1 216 1 
87 1 341 1 345 1 357 1 374 1 160 1 264 1 287 1 174 1 11 1 215 1 216 1 
283 1 51 1 157 1 262 1 94 1 299 1 357 1 375 1 7 1 160 1 274 1 174 2 321 1 8 1 215 2 279 1 80 1 122 1 
51 1 157 2 314 1 262 1 94 1 299 1 59 1 265 1 166 1 80 1 279 1 257 1 122 1 
51 1 53 1 157 1 8 1 262 1 94 1 299 1 23 1 80 1 121 1 122 1 
51 1 157 1 262 1 94 1 299 1 357 1 375 1 39 1 7 1 160 1 274 1 174 2 321 1 8 1 215 2 279 1 80 1 122 1 
51 3 260 1 262 1 314 1 7 1 174 2 321 2 215 2 26 1 113 1 157 1 94 1 299 1 357 1 39 1 375 1 160 2 332 1 274 1 164 1 80 1 279 2 122 2 
283 1 51 3 260 1 262 2 314 1 7 1 174 2 321 2 215 2 26 1 113 1 30 1 157 1 94 1 299 2 357 1 375 1 160 2 332 1 274 1 164 1 80 2 279 2 122 2 
51 4 260 1 107 1 262 2 314 1 6 2 7 1 58 1 174 1 321 1 8 1 347 1 215 1 12 1 91 1 249 1 297 1 250 1 157 1 33 1 94 1 299 2 160 1 272 1 72 1 332 1 164 1 165 2 305 1 360 1 80 2 279 1 122 1 
30 1 51 4 297 1 249 1 157 1 107 1 260 1 314 1 262 3 94 1 299 3 6 2 332 1 72 1 8 1 165 2 305 1 12 1 248 1 279 1 80 3 122 1 
157 1 262 1 94 1 299 1 80 1 372 1 
309 1 259 1 51 3 157 3 68 1 262 6 94 2 38 1 299 7 333 1 8 2 59 1 277 1 265 1 166 1 80 7 279 1 28 1 257 1 372 1 122 2 
0 1 51 1 1 1 344 2 4 1 237 6 7 1 197 2 292 2 349 1 294 2 62 1 157 1 116 1 299 1 70 2 357 2 160 1 254 1 74 2 18 1 209 3 80 1 307 1 122 1 363 4 262 1 174 2 321 1 323 1 176 1 215 2 324 3 217 1 29 2 94 1 39 1 375 1 222 1 223 1 97 1 274 1 335 1 277 1 141 2 279 1 381 1 
51 2 343 1 107 1 3 1 262 1 213 1 5 1 108 1 6 3 148 1 8 1 12 1 248 1 201 2 65 1 297 1 249 2 132 1 330 2 299 1 271 1 72 1 226 1 165 3 378 2 305 1 80 1 191 2 
51 2 157 2 262 2 236 1 94 1 299 2 72 1 59 1 277 1 80 2 279 1 372 1 122 1 
30 1 51 1 53 1 157 1 262 4 94 1 299 4 238 1 23 1 8 1 277 1 80 4 122 1 
362 1 51 1 157 2 314 1 262 2 94 1 299 2 110 1 166 1 80 2 279 1 257 1 350 1 122 1 
157 1 8 1 262 1 36 1 315 1 117 1 94 1 142 1 299 1 80 1 
259 1 51 1 157 1 262 2 331 1 94 1 299 2 277 1 80 2 28 1 122 1 
309 1 259 1 51 3 53 1 157 2 314 1 262 4 94 2 299 5 238 1 23 1 333 1 8 1 277 1 80 5 122 2 
259 1 51 3 53 1 157 2 314 1 262 4 94 2 299 5 238 1 23 1 137 1 333 1 8 1 277 1 80 5 122 2 
92 1 368 1 357 1 143 1 14 1 
92 2 107 1 312 1 54 1 5 1 357 1 6 2 301 1 186 1 368 1 164 1 165 2 305 1 12 1 230 1 26 1 143 2 113 1 14 2 
174 1 304 1 20 1 92 1 368 1 215 1 56 1 160 1 14 1 
186 1 368 1 312 1 
355 1 212 1 71 1 121 1 
242 1 227 1 355 1 212 1 364 1 71 1 200 1 
232 1 242 1 246 1 
340 1 355 1 212 1 364 1 71 1 126 1 242 2 227 1 289 1 152 1 200 2 46 1 47 1 
242 2 227 1 355 1 212 1 364 1 133 1 104 1 71 1 200 2 
86 1 364 1 315 1 36 1 286 1 71 1 242 1 227 1 322 1 200 1 47 1 
242 1 227 1 212 1 364 1 71 1 200 1 47 1 
242 1 227 1 355 1 212 2 364 1 200 1 47 1 
129 1 212 1 364 2 71 1 205 1 242 2 227 2 200 2 82 1 47 1 
86 1 355 1 212 1 364 1 133 2 71 2 242 3 227 1 244 1 179 1 181 1 200 3 47 1 
355 1 354 1 212 1 22 1 117 1 315 2 364 1 36 1 286 1 133 1 71 1 242 2 227 1 200 2 47 1 
86 1 355 1 212 1 364 2 133 2 71 2 242 4 227 2 75 1 104 1 181 1 200 4 47 1 
242 1 227 1 355 1 212 1 364 1 71 1 200 1 47 1 
340 1 86 1 355 2 212 2 364 1 133 2 71 3 126 1 242 4 289 1 227 1 181 1 200 4 46 1 
130 1 210 1 355 1 212 1 261 1 364 1 133 1 71 1 242 2 227 1 200 2 47 1 
340 1 281 1 355 1 212 1 364 1 71 1 126 2 242 3 227 1 289 2 200 3 47 1 
124 2 112 1 71 2 48 1 
242 1 227 1 364 1 158 1 200 1 47 1 
242 2 227 1 355 1 244 1 212 1 364 1 133 1 71 1 200 2 47 1 
263 1 
242 1 227 1 355 1 212 1 364 1 71 1 200 1 47 1 
126 1 242 3 227 1 244 1 355 1 212 1 364 1 133 1 71 1 200 3 47 1 
86 1 181 1 71 1 46 1 
212 1 71 1 

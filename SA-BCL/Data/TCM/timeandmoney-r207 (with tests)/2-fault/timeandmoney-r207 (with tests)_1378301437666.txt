#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 133 (159,256) (159,256) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 133 (159,256) (159,256) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 133 (159,256) (159,256) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 133 (159,256) (159,256) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 133 (46,195) (46,195) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (257,300,308,330) 174 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (257,300,308,330) 174 194 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (257,300,308,330) 174 194 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (52,225,359) (52,225,359) (52,225,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (52,225,359) (52,225,359) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (257,300,308,330) (257,300,308,330) (52,225,359) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (140,362) (140,362) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency; | RETURN | 9238 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
133 1 300 1 337 1 159 1 227 1 256 1 308 1 72 1 257 1 
133 1 300 1 337 1 159 1 227 1 256 1 308 1 72 1 257 1 
133 1 300 1 337 1 159 1 227 1 256 1 308 1 72 1 257 1 
133 1 300 1 337 1 159 1 227 1 256 1 308 1 72 1 257 1 
300 1 337 1 315 1 126 1 36 1 81 2 227 4 329 1 39 2 308 4 353 3 257 1 330 3 151 1 331 1 121 1 103 1 78 1 
133 1 300 1 337 1 126 1 46 1 227 1 367 1 308 1 72 1 195 1 257 1 
300 2 174 1 337 1 227 1 308 2 72 1 257 2 
300 2 138 1 174 1 337 1 227 2 308 3 72 1 194 1 257 2 330 1 
300 2 138 1 174 1 337 1 227 2 308 3 72 1 194 1 257 2 330 1 
282 1 152 1 122 1 
152 1 242 1 210 2 
169 2 350 2 144 2 229 2 223 2 263 1 40 2 224 1 
346 1 169 3 53 1 197 1 55 1 350 2 3 2 293 1 267 1 5 1 201 1 131 1 149 1 86 1 202 2 360 2 66 2 223 2 224 1 361 2 204 1 250 1 96 1 13 1 339 1 98 1 366 1 186 1 229 2 40 2 141 1 189 1 76 1 259 1 303 1 144 3 263 1 
203 1 105 1 169 1 18 1 350 1 144 1 229 1 223 1 40 1 224 1 
203 1 169 1 56 1 184 1 278 1 282 1 152 1 283 1 221 1 209 1 144 1 48 1 65 1 223 1 
203 1 169 1 350 1 56 1 184 1 229 1 40 1 282 1 152 1 283 2 221 2 144 1 48 1 65 1 223 1 
283 1 221 1 288 1 260 1 21 1 
282 1 152 1 283 2 221 2 288 1 139 1 260 1 187 1 
283 1 221 1 288 1 
203 1 105 1 169 1 350 1 229 1 40 1 283 1 6 1 18 1 221 1 260 1 144 1 223 1 224 1 
152 1 
282 1 152 1 217 1 283 2 221 2 288 1 139 1 260 1 
251 1 33 1 116 1 226 1 290 1 139 1 288 2 41 1 322 1 282 1 356 2 152 1 283 5 221 5 163 2 63 1 246 1 260 2 93 2 
169 3 196 1 350 1 144 3 229 3 223 3 263 1 40 3 
203 1 169 1 18 1 144 1 229 1 223 1 40 1 
203 1 0 1 169 1 124 1 350 1 144 1 229 1 223 1 40 1 
346 1 124 1 169 4 196 1 53 1 197 1 55 1 350 2 3 1 56 1 293 1 5 1 267 1 131 1 201 1 149 1 86 1 221 1 202 1 360 2 113 1 65 1 66 1 223 3 224 1 361 1 203 1 277 1 364 1 96 1 13 1 98 1 366 1 184 1 229 3 40 3 141 1 189 1 76 1 283 1 259 1 144 4 48 1 263 1 
169 2 196 1 209 1 144 2 229 1 136 1 223 2 263 1 40 1 
203 1 124 1 169 3 277 1 196 2 350 1 56 1 184 1 229 3 40 3 342 1 152 1 283 1 221 1 144 3 65 1 113 1 48 1 223 3 
124 1 169 2 196 1 350 1 291 1 229 2 40 2 343 1 144 2 223 2 
169 1 197 1 98 1 293 1 267 1 5 1 201 1 131 1 141 1 202 1 86 1 144 1 66 1 263 1 361 1 
169 1 70 1 197 1 293 1 5 1 201 1 131 1 244 1 141 1 202 1 86 1 144 1 66 1 263 1 361 1 
215 1 346 1 348 1 53 1 55 1 3 4 291 2 106 1 130 1 243 1 149 2 358 1 313 2 360 2 204 2 114 1 96 1 366 1 318 1 280 1 343 2 76 1 234 1 212 1 
203 1 169 1 56 1 144 1 229 1 223 1 40 1 16 1 
169 2 196 1 197 1 293 1 98 1 5 1 267 1 131 1 229 1 201 1 40 1 141 1 343 1 86 1 202 1 144 2 113 1 66 1 223 1 361 1 
122 1 263 1 
0 1 169 2 124 1 350 1 229 1 40 1 144 2 223 2 263 2 
343 1 291 1 313 1 
169 1 197 1 98 1 293 1 267 1 5 1 201 1 131 1 141 1 202 1 86 1 8 1 144 1 66 1 263 1 361 1 
169 5 124 1 196 2 350 1 219 1 229 4 40 4 309 1 209 1 144 5 113 1 136 1 223 5 263 1 
203 1 169 2 18 1 144 2 229 2 223 2 16 1 40 2 
297 1 327 1 292 1 
327 1 292 1 274 1 
327 1 292 1 274 1 
327 1 292 1 274 1 
327 1 292 1 
327 1 292 1 
332 1 58 1 
332 1 58 1 
332 1 58 1 
297 1 327 1 292 1 
297 1 327 1 292 1 
336 1 327 2 292 2 332 1 58 1 91 1 
327 1 292 1 148 1 
94 1 1 1 327 2 289 1 292 2 199 3 38 1 295 2 25 1 62 2 42 1 152 1 357 2 283 2 221 2 155 2 247 1 135 2 91 1 
169 2 50 1 327 1 292 1 199 1 148 1 354 1 62 1 357 1 221 1 155 1 29 1 135 1 223 2 68 1 94 1 229 2 40 2 281 1 283 1 144 2 238 1 214 1 263 1 
126 1 329 1 103 1 
126 1 329 1 367 1 
134 1 126 3 88 1 367 1 103 2 10 1 
134 1 126 2 88 1 367 1 103 1 319 1 
134 2 126 2 88 1 367 1 103 1 
215 1 50 1 348 1 171 1 288 1 242 1 129 1 130 1 220 1 311 2 356 1 152 2 221 5 270 2 156 1 248 1 93 1 178 1 114 1 33 1 226 2 139 1 34 1 281 1 282 1 322 3 283 5 163 1 17 2 260 4 210 3 238 1 
215 3 348 3 171 2 288 6 242 3 130 3 220 1 173 1 85 5 355 1 311 6 356 2 152 5 221 9 270 6 156 3 93 2 114 3 33 1 160 1 226 6 139 1 34 2 254 1 41 1 258 1 282 1 322 8 283 9 163 2 260 7 210 9 21 5 238 4 104 1 
215 1 348 1 171 1 242 2 129 1 130 1 356 1 311 2 152 3 221 3 270 2 248 1 156 1 93 1 114 1 34 1 226 2 41 1 282 1 322 3 283 3 163 1 17 1 260 2 210 4 238 1 
215 2 348 2 171 1 242 3 129 1 130 2 311 4 356 1 152 4 221 4 270 4 248 1 156 2 93 1 114 2 160 1 34 1 226 4 254 1 41 1 282 1 258 1 322 5 283 4 163 1 17 2 260 3 210 7 238 2 
141 1 86 1 
141 3 197 1 86 1 2 1 279 2 175 1 
141 1 122 1 279 1 
141 1 272 1 
57 1 
141 1 197 1 86 1 
141 1 276 1 
215 1 145 1 204 4 287 1 265 1 3 7 130 1 280 2 149 3 109 2 164 1 19 1 47 1 273 1 212 3 79 1 49 1 
215 1 145 1 204 4 287 1 265 1 3 7 130 1 280 2 149 3 109 2 164 1 19 1 47 1 273 1 212 3 79 1 49 1 
215 1 145 1 204 4 287 1 265 1 3 7 266 1 130 1 280 2 149 3 109 2 164 1 19 1 47 1 273 1 212 3 79 1 49 1 
145 2 346 1 239 4 215 4 348 3 55 1 287 1 3 31 265 2 130 4 107 1 149 15 109 3 333 1 112 1 273 1 360 2 156 3 31 1 204 16 314 1 114 3 96 1 97 1 366 1 340 1 280 5 302 3 164 5 19 2 47 1 212 10 79 1 49 2 
215 1 346 2 145 1 55 2 287 1 3 9 265 1 130 1 83 1 149 4 109 2 360 4 204 5 96 2 301 1 366 2 340 1 280 3 164 1 19 1 47 1 212 4 79 1 49 1 
146 1 52 1 126 2 329 1 351 1 5 1 308 2 131 1 330 1 202 1 312 1 359 1 10 1 66 1 361 1 300 1 337 1 225 1 338 1 227 1 367 1 368 1 72 1 257 1 190 1 77 1 103 1 
146 1 125 1 126 2 329 1 351 1 5 1 308 3 131 1 330 2 202 1 312 1 359 1 10 1 66 1 361 1 300 1 225 1 338 1 227 2 367 1 72 1 257 1 190 1 286 1 77 1 103 1 211 1 
146 1 126 2 338 1 227 1 329 1 5 1 351 1 367 1 308 2 131 1 72 1 330 2 202 1 190 1 286 1 312 1 359 1 103 1 10 1 211 1 66 1 361 1 
125 1 5 1 351 2 308 1 201 1 131 1 202 1 86 1 312 2 28 1 66 1 361 1 362 1 299 1 300 1 338 2 227 1 140 1 72 2 257 1 141 1 285 1 193 1 
146 1 52 1 126 2 329 1 351 1 5 1 308 1 131 1 202 1 312 1 359 1 10 1 66 1 361 1 300 1 337 1 225 1 338 1 227 1 367 1 72 1 257 1 190 1 286 1 77 1 103 1 
101 1 
198 1 288 6 56 1 328 4 242 2 4 1 5 1 201 2 152 2 202 2 334 2 66 2 65 1 249 1 69 1 203 1 205 1 73 2 75 1 163 1 345 1 261 1 209 1 210 2 213 2 304 2 169 1 306 1 82 1 131 1 310 2 356 1 86 1 221 5 90 1 223 1 93 1 361 2 33 1 139 3 226 2 34 1 35 1 184 1 278 1 141 1 282 1 322 2 283 5 285 1 324 2 192 2 144 1 193 1 48 1 
169 1 217 1 198 1 288 2 56 1 328 2 310 1 221 3 65 1 223 1 249 1 69 1 203 1 35 1 139 1 184 1 278 1 283 3 345 1 209 1 144 1 48 1 
169 1 217 1 198 1 288 1 56 1 328 3 152 1 221 3 334 1 65 1 223 1 249 1 69 1 203 1 35 1 139 1 184 1 278 1 282 1 283 3 345 1 209 1 144 1 48 1 
169 1 217 1 198 1 288 2 56 1 328 3 310 1 152 1 221 3 334 1 65 1 223 1 249 1 69 1 203 1 139 1 35 1 184 1 278 1 282 1 283 3 345 1 209 1 324 1 144 1 48 1 
198 1 288 7 328 6 56 1 242 2 61 1 110 1 152 5 334 4 65 1 249 1 69 1 203 1 73 2 163 1 345 1 209 1 261 1 213 2 169 1 304 2 217 1 82 1 24 1 310 4 356 1 221 5 223 1 93 1 33 1 139 3 35 1 226 1 182 1 184 1 278 1 282 5 322 1 283 5 324 4 144 1 236 1 192 2 48 1 
198 1 288 4 328 4 56 1 242 2 152 2 334 2 65 1 249 1 69 1 203 1 205 1 73 2 163 1 345 1 209 1 261 1 210 2 213 2 169 1 304 2 82 1 310 2 356 1 221 4 223 1 93 1 33 1 35 1 226 1 139 2 184 1 278 1 322 1 282 1 283 4 324 2 144 1 192 2 48 1 
304 2 169 1 198 1 288 4 82 1 56 1 328 4 242 2 24 1 310 2 356 1 152 1 221 4 334 2 65 1 223 1 249 1 93 1 69 1 203 1 33 1 139 2 226 1 35 1 182 1 184 1 278 1 73 2 282 1 322 1 283 4 163 1 345 1 324 2 261 1 209 1 192 2 144 1 236 1 48 1 213 2 
304 2 169 1 198 1 288 4 82 1 56 1 328 4 242 2 24 1 310 2 356 1 152 1 221 4 334 2 65 1 223 1 249 1 93 1 69 1 203 1 33 1 139 2 226 1 35 1 182 1 184 1 278 1 73 2 282 1 322 1 283 4 163 1 345 1 324 2 261 1 209 1 192 2 144 1 236 1 48 1 213 2 
325 1 304 2 169 1 198 1 288 4 56 1 328 4 310 2 356 1 152 1 221 4 334 2 65 1 223 1 249 1 93 1 69 1 203 1 180 1 33 1 139 2 226 1 35 1 182 1 184 1 278 1 99 1 207 2 282 1 322 1 143 2 283 4 163 1 345 1 324 2 261 1 209 1 210 2 144 1 48 1 213 2 
304 2 169 1 198 1 82 1 288 5 56 1 328 5 242 2 24 1 61 1 310 3 356 1 152 1 221 4 334 3 65 1 223 1 249 1 93 1 69 1 203 1 33 1 139 2 226 1 35 1 182 1 184 1 278 1 73 2 282 1 322 1 283 4 163 1 345 1 261 1 209 1 324 3 192 2 236 1 144 1 48 1 213 2 
304 2 169 1 198 1 82 1 288 5 56 1 328 5 242 2 24 1 61 1 310 3 356 1 152 1 221 4 334 3 65 1 223 1 249 1 93 1 69 1 203 1 33 1 139 2 226 1 35 1 182 1 184 1 278 1 73 2 282 1 322 1 283 4 163 1 345 1 261 1 209 1 324 3 192 2 236 1 144 1 48 1 213 2 
325 1 304 2 169 1 198 1 288 4 56 1 328 4 310 2 356 1 152 1 221 4 334 2 65 1 249 1 223 1 93 1 69 1 203 1 205 1 33 1 139 2 226 1 35 1 184 1 278 1 207 2 282 1 322 1 143 2 283 4 163 1 345 1 324 2 261 1 209 1 210 2 144 1 48 1 213 2 
346 1 215 1 204 2 114 1 53 1 96 1 55 1 291 1 3 2 366 1 318 1 343 1 76 1 164 1 234 1 313 1 360 2 212 1 
346 1 348 1 53 1 96 1 55 1 291 1 3 2 106 1 130 1 366 1 280 1 149 2 343 1 76 1 234 1 313 1 360 2 212 1 
215 1 346 1 348 1 53 1 55 1 3 4 291 2 130 1 149 2 313 2 156 1 360 2 204 2 114 1 96 1 366 1 280 1 343 2 76 1 234 1 164 1 212 2 
363 1 346 1 215 1 204 2 114 1 53 1 96 1 55 1 291 1 3 2 366 1 318 1 343 1 76 1 164 1 313 1 360 2 212 1 
363 1 346 1 348 1 53 1 96 1 55 1 291 1 3 2 106 1 130 1 366 1 280 1 149 2 343 1 76 1 313 1 360 2 212 1 
215 1 346 1 348 1 53 1 55 1 3 4 291 2 130 1 149 2 313 2 156 1 360 2 363 1 204 2 114 1 96 1 366 1 280 1 343 2 76 1 164 1 212 2 
215 1 346 1 348 1 53 1 55 1 3 4 291 2 130 1 149 2 313 2 156 1 360 2 204 2 114 1 96 1 366 1 280 1 343 2 76 1 164 1 212 2 
346 1 169 1 197 1 53 1 55 1 3 2 293 1 5 1 267 1 131 1 201 1 149 1 86 1 202 1 360 2 66 1 361 1 204 1 96 1 13 1 339 1 98 1 366 1 141 1 189 1 76 1 144 1 263 1 
346 1 169 1 197 1 53 1 55 1 3 2 293 1 5 1 131 1 201 1 149 1 244 1 86 1 202 1 360 2 66 1 361 1 204 1 70 1 96 1 339 1 366 1 141 1 189 1 76 1 144 1 237 1 263 1 
215 1 346 1 326 1 348 1 53 1 55 1 3 4 291 2 130 1 149 2 313 2 156 1 360 2 204 2 114 1 96 1 366 1 280 1 343 2 76 1 164 1 212 2 
215 1 346 1 169 1 348 1 197 1 53 1 55 1 291 2 3 4 293 1 130 1 5 1 267 1 131 1 149 2 202 1 86 1 313 2 360 2 156 1 66 1 361 1 204 2 114 1 96 1 13 1 98 1 366 1 368 1 280 1 230 1 141 1 343 2 76 1 164 1 144 1 212 2 
346 1 215 1 326 1 124 1 169 1 348 1 53 1 55 1 350 1 3 3 291 1 130 1 149 1 313 1 360 2 156 1 223 1 275 1 204 2 114 1 96 1 366 1 229 1 40 1 343 1 76 1 164 1 144 1 212 1 
145 1 346 1 215 1 53 1 55 1 287 1 291 1 3 6 130 1 149 3 109 1 313 1 360 2 204 3 96 1 366 1 280 2 343 1 76 1 234 1 19 1 47 1 122 1 212 2 79 1 263 2 
239 3 346 2 215 2 326 1 240 1 264 1 348 1 53 1 55 2 3 14 291 4 294 1 130 1 149 6 112 1 313 11 360 4 156 2 204 8 114 2 96 2 97 1 339 1 366 2 369 1 280 1 189 1 343 11 302 3 76 2 164 1 212 2 263 1 
346 1 326 1 169 2 196 1 170 1 197 1 53 1 55 1 291 1 3 2 293 1 5 1 267 1 131 1 201 1 26 1 149 1 108 1 86 1 202 1 8 1 360 2 66 1 113 1 223 1 361 1 204 1 96 1 98 1 339 1 366 1 229 1 40 1 141 1 189 1 76 1 144 2 263 1 
145 1 326 1 196 1 53 3 197 2 241 1 55 3 287 1 3 20 291 7 293 2 5 2 201 1 149 10 109 1 202 3 156 2 66 3 113 1 204 10 114 2 13 2 206 2 339 1 343 7 76 3 164 4 19 1 20 1 212 8 79 1 263 2 346 3 215 3 169 3 348 2 130 3 267 2 131 2 86 2 87 1 313 7 360 6 223 1 361 3 177 2 95 2 96 3 98 2 366 3 229 1 280 4 40 1 230 2 141 2 189 1 286 1 47 1 144 3 
346 2 169 1 196 1 53 2 55 2 3 2 5 2 131 2 201 2 149 1 202 8 86 2 360 4 66 8 223 1 361 7 363 1 204 1 115 1 96 2 339 1 183 1 366 2 118 1 368 1 229 1 186 2 370 1 231 1 40 1 141 3 119 1 189 1 76 2 285 1 286 1 234 1 144 1 193 1 
346 1 215 1 326 1 124 1 169 1 348 1 53 1 55 1 350 1 291 1 3 3 130 1 149 2 7 1 313 1 360 2 156 1 223 1 204 1 114 1 96 1 366 1 229 1 280 1 40 1 343 1 76 1 144 1 212 1 
239 4 145 1 55 3 287 1 3 41 296 1 149 21 150 2 245 1 109 1 64 1 112 3 156 4 204 20 114 4 301 1 252 1 340 1 302 3 164 4 19 1 212 8 79 1 168 1 215 5 346 3 348 4 130 5 360 6 92 1 176 1 96 3 97 1 366 3 317 1 228 1 185 1 280 4 188 1 45 1 232 1 284 4 47 1 
145 1 239 4 346 4 215 5 348 3 55 4 287 1 3 38 130 4 296 1 149 18 150 2 109 1 245 1 64 1 112 3 360 8 156 4 92 1 176 1 204 20 114 4 96 4 301 1 252 1 97 1 228 1 340 2 317 1 366 4 185 1 280 4 188 1 302 3 45 1 232 1 284 4 164 3 19 1 47 1 212 7 79 1 168 1 
145 1 239 4 346 2 215 8 348 7 55 2 287 1 3 52 130 8 296 1 149 25 150 1 109 1 245 1 112 2 360 4 156 7 92 1 176 1 204 27 114 7 96 2 301 1 252 1 97 2 228 1 340 1 317 1 366 2 369 2 280 7 188 1 302 4 45 1 232 1 284 4 164 7 19 1 47 1 212 14 79 1 168 1 
239 2 346 2 215 3 348 3 55 2 3 19 130 3 149 10 150 1 112 1 360 4 156 3 92 1 204 9 114 3 96 2 301 1 71 1 97 1 228 1 366 2 185 1 280 3 188 1 302 1 45 2 232 1 284 2 164 3 212 6 
346 3 239 2 215 3 348 2 55 3 3 26 130 2 296 1 149 12 150 2 245 1 112 2 360 6 156 3 92 2 176 1 204 14 114 3 96 3 301 1 252 1 228 1 340 2 366 3 317 1 280 2 188 1 302 2 45 1 232 1 284 4 164 2 212 4 168 1 
346 1 326 1 169 2 349 1 53 1 55 1 3 2 5 1 131 1 60 1 149 1 86 1 202 2 360 2 66 2 223 2 361 2 204 1 96 1 339 1 117 1 366 1 186 2 370 1 15 1 141 1 119 1 189 1 120 1 76 1 144 2 
146 1 32 1 126 2 329 1 5 1 367 1 131 1 368 1 320 1 202 2 190 1 286 1 312 1 77 1 103 1 10 1 66 2 30 1 361 2 
146 1 218 1 126 2 329 1 5 1 367 1 131 1 320 1 202 1 190 1 286 1 312 1 77 1 103 1 10 1 66 1 361 1 
5 1 131 1 201 1 100 1 141 1 86 1 202 1 285 1 312 1 66 1 30 1 193 1 361 1 299 1 
146 1 32 1 126 2 329 1 5 1 367 1 131 1 320 1 202 1 190 1 286 1 312 1 77 1 103 1 10 1 66 1 30 1 361 1 
167 1 
322 1 282 1 152 1 226 1 290 1 246 1 122 1 
82 1 288 1 242 1 356 1 152 2 221 1 93 1 33 1 226 1 139 1 73 1 322 1 282 1 283 1 163 1 192 1 210 1 
197 3 290 1 288 5 242 6 5 4 59 2 201 1 152 8 202 3 246 1 156 2 66 3 65 2 335 1 11 2 158 2 114 2 206 2 75 1 163 4 210 12 123 2 215 2 216 1 348 2 130 2 352 2 268 2 131 3 356 4 311 6 86 3 221 5 270 6 272 3 175 1 93 4 361 3 276 2 33 4 34 2 139 3 226 8 181 2 368 1 279 2 371 1 321 2 141 10 282 2 322 9 44 1 283 5 323 1 
239 1 215 2 348 2 288 1 242 3 130 2 296 1 245 1 311 5 356 2 152 5 221 1 270 5 154 1 112 1 156 2 93 2 158 2 114 2 33 2 34 1 139 1 226 5 252 1 181 1 316 1 317 1 322 8 282 2 75 1 302 1 283 1 163 2 210 6 168 1 
145 1 215 2 105 1 169 1 350 1 130 1 356 1 6 1 221 1 223 1 93 1 224 1 203 1 158 2 33 1 226 2 181 1 229 1 40 1 322 2 283 1 18 1 163 1 191 1 19 1 144 1 236 1 79 1 
33 1 290 1 226 1 356 1 282 1 322 1 152 1 163 1 246 1 93 1 
215 2 158 2 114 2 348 2 206 1 226 5 181 1 242 5 130 2 311 5 322 5 152 5 270 5 210 10 156 2 
282 1 152 1 283 1 221 1 288 1 139 1 
306 1 288 4 5 1 131 1 201 2 356 2 86 1 202 4 221 3 90 1 222 1 66 4 335 2 93 2 361 4 33 1 34 2 226 2 139 2 255 1 41 1 141 1 322 2 75 2 283 3 163 2 323 1 285 1 193 1 
346 1 169 3 197 1 53 1 55 1 350 2 3 1 293 1 267 1 5 1 201 1 131 1 149 1 202 1 86 1 360 2 66 1 223 2 361 1 224 1 96 1 13 1 98 1 366 1 229 2 40 2 141 1 189 1 76 1 259 1 144 3 263 1 
33 1 226 2 34 1 242 2 109 1 311 2 356 1 322 1 282 2 152 4 75 1 163 1 270 2 210 4 93 1 
162 1 155 1 135 1 
155 1 262 1 135 1 
155 1 262 1 135 1 
155 1 262 1 135 1 
155 1 135 1 
327 1 292 1 
162 1 155 1 135 1 
162 1 155 1 135 1 
38 1 155 1 67 1 135 1 214 1 
215 1 239 1 346 1 145 1 55 1 287 1 3 8 130 1 149 4 109 1 112 1 360 2 204 4 96 1 301 1 317 1 366 1 280 2 302 1 19 1 47 1 212 2 79 1 
145 1 239 2 346 2 215 2 55 2 287 1 3 11 130 1 149 5 109 1 112 1 360 4 156 1 204 6 114 1 96 2 301 1 97 1 317 1 366 2 280 2 142 1 302 1 164 1 19 1 47 1 212 3 79 1 
145 1 239 1 346 3 215 3 348 2 55 3 287 1 3 19 130 3 296 1 149 10 109 1 245 1 112 1 360 6 156 2 204 9 114 2 96 3 301 1 252 1 317 1 366 3 340 1 280 3 142 1 302 1 164 1 19 1 47 1 212 4 79 1 168 1 
145 1 239 1 346 3 215 3 348 1 55 3 287 1 3 17 130 2 296 1 149 7 109 1 245 1 112 1 360 6 156 2 204 10 114 2 96 3 301 1 252 1 340 1 317 1 366 3 280 3 142 1 302 1 164 2 19 1 47 1 212 5 79 1 168 1 
215 1 239 1 346 1 145 1 55 1 287 1 3 8 130 1 149 4 109 1 112 1 360 2 204 4 96 1 301 1 317 1 366 1 280 2 302 1 19 1 47 1 212 2 79 1 
239 1 346 1 215 2 348 2 55 1 3 12 130 2 296 1 149 6 245 1 112 1 360 2 156 2 204 6 114 2 96 1 301 1 252 1 317 1 366 1 280 1 302 1 164 1 212 2 168 1 
145 1 239 1 346 4 215 3 348 1 55 4 287 1 3 18 130 2 296 1 149 8 109 1 245 1 112 1 360 8 156 2 204 10 114 2 96 4 301 1 252 1 317 1 366 4 340 2 280 3 142 1 302 1 164 2 19 1 47 1 212 5 79 1 168 1 
239 1 346 4 215 3 348 2 55 4 3 16 130 2 296 1 149 7 245 1 112 1 360 8 156 3 204 9 114 3 96 4 301 1 252 1 317 1 366 4 340 2 185 1 280 3 302 1 164 3 212 6 168 1 
145 3 215 1 204 3 287 2 3 7 130 1 280 3 149 4 164 3 19 3 47 1 212 6 79 1 
145 1 239 1 346 4 215 3 348 1 55 4 287 1 3 18 130 2 296 1 149 8 109 1 245 1 112 1 360 8 156 2 204 10 114 2 96 4 301 1 252 1 317 1 366 4 340 2 185 1 280 3 302 1 164 1 19 1 47 1 212 4 79 1 168 1 
215 1 346 2 145 1 204 4 96 2 55 2 287 1 3 8 130 1 366 2 340 1 280 2 149 4 109 1 164 1 19 1 47 1 360 4 212 3 79 1 
145 1 215 1 204 3 287 1 3 6 130 1 280 2 149 3 109 1 19 1 122 1 47 1 212 2 79 1 
346 1 215 1 204 2 348 1 114 1 96 1 55 1 3 4 130 1 366 1 280 1 149 2 142 1 164 1 360 2 156 1 212 2 
239 2 215 1 204 3 348 1 114 1 3 7 97 1 130 1 280 1 149 4 302 1 164 1 112 1 156 1 212 2 
145 2 215 3 239 2 346 2 240 1 348 2 55 2 287 1 3 23 128 1 130 3 149 12 109 1 156 2 360 4 204 11 114 2 96 2 97 1 340 2 366 2 369 1 280 5 302 2 164 4 19 2 47 1 212 9 79 1 
149 1 239 1 3 1 
204 1 302 1 3 1 
346 1 215 1 204 3 114 1 348 1 96 1 55 1 206 1 3 6 130 1 366 1 280 2 149 3 142 1 164 1 360 2 156 1 212 3 
239 1 346 1 215 2 348 2 55 1 3 12 130 2 296 1 149 6 245 1 112 1 360 2 156 2 204 6 114 2 96 1 301 1 252 1 317 1 366 1 280 1 302 1 164 1 212 2 168 1 
215 1 145 1 204 3 3 6 130 1 280 1 149 3 164 1 19 1 212 2 79 1 
145 1 346 1 204 1 96 1 55 1 287 1 3 3 128 1 340 1 366 1 280 1 149 2 164 1 19 1 47 1 360 2 212 2 
346 1 145 2 215 2 204 5 96 1 55 1 301 1 3 10 130 2 366 1 280 3 149 5 164 2 191 1 19 2 360 2 212 5 79 1 
346 1 215 1 204 2 114 1 96 1 301 1 55 1 3 2 366 1 164 1 360 2 212 1 
346 1 215 1 204 2 348 1 114 1 96 1 301 1 55 1 3 4 130 1 366 1 280 1 149 2 164 1 360 2 156 1 212 2 
346 3 145 1 204 1 96 3 301 1 55 3 3 3 128 1 340 1 366 3 185 1 280 1 149 2 164 1 19 1 360 6 212 2 
145 3 239 4 346 5 215 5 348 3 55 5 287 1 3 34 128 1 130 5 149 18 109 1 333 1 112 1 360 10 156 3 31 1 204 16 314 1 114 3 96 5 301 1 97 1 340 2 366 5 185 1 280 7 142 1 302 3 164 5 19 3 47 1 212 12 79 2 
169 1 23 1 209 1 144 1 223 1 136 1 263 1 
169 1 23 1 269 1 208 1 111 1 209 1 144 1 157 1 298 1 136 1 223 1 263 1 
141 1 86 1 202 1 285 1 5 1 122 1 131 1 201 1 193 1 66 1 361 1 
169 2 196 1 197 1 293 1 5 1 267 1 229 1 201 1 131 1 40 1 141 1 86 1 202 1 144 2 66 1 223 1 263 1 361 1 
169 2 196 1 197 2 56 1 293 1 267 1 5 1 131 1 202 1 86 2 66 1 223 2 361 1 335 1 11 1 203 1 276 1 229 2 40 1 141 3 144 2 48 1 263 1 
169 2 196 1 197 2 56 1 293 1 5 1 131 1 244 1 202 2 86 2 66 2 223 2 361 2 335 1 11 1 203 1 276 1 229 2 40 1 141 3 233 1 144 2 48 1 263 1 
11 1 276 1 347 1 197 1 288 1 5 1 201 1 279 1 131 1 132 1 141 4 282 1 152 1 283 2 86 1 221 2 202 3 233 1 272 1 65 1 66 3 335 1 361 3 
11 1 276 1 197 1 288 1 5 1 59 1 201 1 279 1 131 1 141 4 282 1 152 1 283 2 86 1 221 2 202 3 233 1 272 1 65 1 66 3 335 1 361 3 
202 1 5 1 131 1 118 1 66 1 361 1 
115 1 197 1 37 1 183 1 5 3 186 1 118 1 368 1 201 2 131 2 370 1 231 1 141 3 202 7 86 2 27 1 286 1 22 1 66 7 175 1 361 6 
145 1 326 1 196 1 53 2 197 1 55 2 287 1 291 1 3 6 293 1 5 1 60 1 149 3 109 1 202 1 66 1 204 3 13 1 343 1 76 2 19 1 212 2 79 1 263 2 346 2 215 1 169 2 267 1 130 1 131 1 86 1 313 1 360 4 223 1 361 1 95 1 96 2 98 1 366 2 368 1 229 1 230 1 40 1 280 2 141 1 144 2 47 1 
290 1 288 2 59 1 352 1 201 1 268 1 356 2 152 1 202 1 221 3 246 1 272 1 66 1 65 1 361 1 93 2 33 2 226 1 139 1 279 1 321 1 141 2 322 1 282 1 283 3 163 2 323 1 260 1 
197 1 5 2 368 1 279 1 118 1 131 1 371 1 141 2 202 2 86 1 66 2 175 1 361 2 
5 1 201 1 368 1 131 1 74 1 141 1 202 4 86 1 233 1 285 1 66 4 193 1 361 4 
197 1 200 1 5 2 131 1 141 1 202 2 86 1 27 1 87 1 22 1 66 2 335 1 361 2 137 1 
202 1 126 1 190 1 329 1 5 1 367 1 131 1 201 1 66 1 361 1 
141 1 120 1 86 1 202 2 286 1 5 1 131 1 368 1 370 1 66 2 361 2 
183 1 5 2 201 1 368 1 131 2 370 1 231 1 74 1 141 3 202 5 86 2 285 1 193 1 66 5 335 1 361 4 
172 1 5 2 201 1 368 1 131 2 370 1 231 1 74 1 141 3 202 5 86 2 285 1 193 1 66 5 335 1 361 4 
169 2 196 1 197 1 293 1 5 1 229 1 201 1 131 1 40 1 141 1 244 1 86 1 202 1 144 2 66 1 223 1 263 1 361 1 
197 1 37 1 5 2 131 1 141 1 202 1 86 1 27 1 22 1 66 1 175 1 335 1 361 1 
169 1 349 1 365 1 117 1 15 1 372 1 144 1 9 1 223 1 
84 1 365 1 165 1 
344 1 372 1 365 1 9 1 263 1 
203 1 277 1 365 1 56 1 161 1 184 1 84 1 282 1 152 1 372 2 344 2 283 2 221 2 260 1 165 1 9 2 65 1 48 1 263 1 
151 1 122 1 353 1 78 1 
300 1 151 1 227 1 308 1 353 1 78 1 257 1 
338 1 227 1 72 1 
300 1 51 1 337 1 227 3 308 3 353 1 257 1 43 1 151 1 166 1 89 2 78 1 
300 1 151 1 227 2 39 1 308 2 353 1 78 1 257 1 330 1 
300 1 337 1 126 1 81 1 227 1 329 1 121 1 308 1 103 1 353 1 257 1 
300 1 151 1 337 1 227 1 308 1 353 1 257 1 
300 1 151 2 337 1 227 1 308 1 78 1 257 1 
300 2 337 1 12 1 127 1 227 2 308 2 353 1 257 2 151 1 102 1 
300 1 337 1 315 1 81 1 227 3 147 1 308 3 353 2 257 1 330 2 151 1 153 1 78 1 
300 1 337 1 126 2 227 2 253 1 329 1 367 1 308 2 353 1 257 1 330 1 151 1 10 1 103 1 78 1 
300 2 337 1 315 1 81 1 227 4 39 1 308 4 353 2 257 2 330 2 151 1 331 1 78 1 
300 1 151 1 337 1 227 1 308 1 353 1 78 1 257 1 
300 1 51 1 315 1 81 1 227 4 308 4 353 3 257 1 330 2 151 2 235 1 89 1 166 1 78 2 
300 1 138 1 337 1 305 1 14 1 227 2 308 2 353 1 257 1 330 1 151 1 78 1 
300 1 51 2 337 1 227 3 308 3 353 1 257 1 151 1 271 1 166 1 89 2 78 1 
179 2 54 1 353 2 341 1 
300 1 337 1 227 1 307 1 308 1 257 1 
300 1 151 1 337 1 153 1 227 2 308 2 353 1 78 1 257 1 330 1 
80 1 
300 1 151 1 337 1 227 1 308 1 353 1 78 1 257 1 
300 1 151 1 337 1 153 1 89 1 227 3 308 3 353 1 78 1 257 1 330 1 
315 1 81 1 235 1 353 1 
151 1 353 1 

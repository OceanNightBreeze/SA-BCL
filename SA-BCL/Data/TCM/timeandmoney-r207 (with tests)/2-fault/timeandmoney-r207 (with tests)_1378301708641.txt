#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 1846 | while (x) -> while (!x)
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 11341 | stmt -> ;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
220 2 195 1 4 3 139 4 21 9 307 1 170 1 289 1 338 2 174 2 344 2 203 5 204 1 348 6 319 1 253 1 231 1 254 1 184 2 15 1 185 1 135 1 137 1 359 2 61 1 259 9 39 1 284 2 
220 2 195 1 4 3 139 4 21 9 307 1 170 1 289 1 338 2 174 2 344 2 203 5 204 1 348 6 319 1 253 1 231 1 254 1 184 2 15 1 185 1 135 1 137 1 359 2 61 1 259 9 39 1 284 2 
220 2 195 1 4 4 139 5 21 10 307 1 170 1 289 1 338 2 174 2 344 2 203 6 204 1 348 7 319 1 253 1 231 1 254 1 184 2 15 1 185 1 135 1 137 1 359 2 61 1 259 10 39 1 284 2 
220 2 195 1 4 2 139 3 21 7 307 1 289 1 338 2 174 2 344 2 203 4 204 1 348 4 319 1 253 1 231 1 254 1 184 2 15 1 185 1 135 1 137 1 359 2 61 1 259 7 39 1 284 1 
204 1 220 1 348 3 4 1 139 2 21 4 170 1 338 1 231 1 254 1 184 1 137 1 359 1 344 1 39 1 259 4 284 2 203 3 
204 1 220 1 46 1 181 1 21 2 338 1 15 1 184 1 185 1 174 1 137 1 313 1 344 1 39 1 259 2 203 1 
204 1 220 2 348 1 4 1 139 1 21 3 174 1 135 1 137 1 344 2 39 1 259 3 203 2 
220 2 139 4 4 3 21 9 307 1 338 1 170 1 198 1 171 1 174 1 344 2 203 5 204 1 348 7 231 1 254 1 184 1 135 1 137 1 359 1 61 1 259 9 39 1 284 2 
220 2 139 4 4 3 21 9 307 1 338 1 170 1 198 1 171 1 174 1 344 2 203 5 204 1 348 7 231 1 254 1 184 1 135 1 137 1 359 1 61 1 259 9 39 1 284 2 
117 1 318 1 264 1 
70 1 117 1 351 2 
205 2 115 2 144 2 151 2 94 2 2 1 55 2 299 1 
115 2 190 1 285 1 2 1 194 1 193 1 305 1 306 1 268 1 6 2 92 1 144 3 94 2 370 2 173 1 342 1 202 1 343 1 177 1 10 2 314 1 205 3 151 2 249 2 79 1 30 1 55 2 208 2 350 1 54 1 299 1 105 1 35 1 216 1 234 1 304 1 43 1 
205 1 115 1 144 1 151 1 239 1 94 1 2 1 172 1 356 1 55 1 
365 1 205 1 11 1 1 1 117 1 239 1 318 1 321 1 269 1 144 1 340 1 94 1 158 1 112 1 
115 1 205 1 11 2 151 1 1 1 117 1 239 1 318 1 55 1 321 1 269 1 340 2 144 1 94 1 158 1 
11 1 270 1 340 1 341 1 148 1 
11 2 116 1 340 2 117 1 318 1 341 1 148 1 76 1 
11 1 340 1 148 1 
11 1 115 1 205 1 151 1 239 1 2 1 55 1 340 1 144 1 172 1 94 1 356 1 341 1 149 1 
117 1 
11 2 124 1 116 1 340 2 117 1 318 1 341 1 148 1 
11 5 331 2 63 1 165 1 116 1 117 1 375 1 318 1 28 2 366 1 228 1 57 1 340 5 341 2 214 1 148 2 257 1 77 2 17 1 
299 1 264 1 
205 2 115 1 151 1 55 1 299 2 229 1 144 2 94 2 297 1 
192 1 244 1 146 1 
205 1 249 1 79 1 193 1 267 1 208 1 350 1 54 1 299 1 268 1 144 1 173 1 35 1 342 1 177 1 10 1 
115 1 205 2 101 1 249 1 193 1 79 1 54 1 55 1 208 1 350 1 268 1 144 2 94 1 173 1 35 1 146 1 342 1 328 1 177 1 10 1 
205 3 115 3 101 1 151 1 144 3 94 3 55 3 299 1 
205 1 115 1 144 1 239 1 94 1 356 1 55 1 
205 1 115 1 144 1 151 1 239 1 94 1 55 1 297 1 229 1 
115 3 190 1 1 1 285 1 239 1 2 1 194 1 193 1 66 1 306 1 268 1 269 1 6 2 7 1 144 4 340 1 94 3 370 1 173 1 342 1 202 1 343 1 177 1 10 1 205 4 11 1 101 1 151 2 249 1 79 1 30 1 54 1 350 1 55 3 208 1 299 1 105 1 321 1 229 1 158 1 35 1 234 1 328 1 304 1 
205 2 115 1 101 1 144 2 94 2 112 1 55 1 299 1 100 1 
11 1 115 3 205 3 101 2 151 1 1 1 117 1 239 1 55 3 321 1 229 1 269 1 7 1 340 1 144 3 94 3 158 1 175 1 328 1 
115 2 205 2 101 1 151 1 192 1 55 2 229 1 144 2 94 2 146 1 
205 1 249 1 79 1 193 1 208 1 350 1 54 1 299 1 268 1 144 1 173 1 35 1 342 1 177 1 10 1 
205 1 249 1 193 1 208 1 54 1 299 1 268 1 144 1 309 1 173 1 35 1 342 1 177 1 10 1 380 1 
190 1 285 1 192 2 194 1 306 1 168 1 6 2 143 1 244 2 370 4 146 2 343 1 314 2 152 1 374 1 26 1 30 1 230 1 232 1 301 1 357 1 215 1 358 1 234 2 
205 1 115 1 1 1 144 1 239 1 94 1 55 1 58 1 
115 4 205 5 330 1 101 2 151 1 55 4 299 1 229 1 144 5 94 5 280 1 112 1 328 1 100 1 
205 2 115 2 144 2 239 1 94 2 356 1 55 2 58 1 
179 1 40 1 
179 1 40 1 
333 1 183 1 
333 1 183 1 
333 1 183 1 
179 1 273 1 40 1 
96 1 179 1 40 1 
333 1 354 1 213 1 179 2 40 2 183 1 
179 1 273 1 40 1 
179 1 273 1 40 1 
123 1 179 1 40 1 
123 1 179 1 40 1 
123 1 179 1 40 1 
11 2 117 1 104 2 179 2 67 1 13 2 300 1 243 1 340 2 131 1 279 2 354 1 132 2 47 1 49 1 41 1 52 2 40 2 24 3 
205 2 11 1 115 2 25 1 64 1 196 1 104 1 179 1 55 2 299 1 13 1 325 1 223 1 144 2 340 1 94 2 132 1 96 1 47 1 136 1 52 1 40 1 24 1 237 1 
184 1 359 1 338 1 
184 1 181 1 338 1 
103 1 359 2 181 1 338 3 290 1 363 1 
245 1 359 1 181 1 338 2 290 1 363 1 
359 1 181 1 338 2 290 1 363 2 
331 1 165 2 116 1 117 2 168 1 70 1 340 5 95 1 73 2 341 4 148 1 77 1 11 5 347 1 374 1 375 3 28 1 318 1 351 3 320 2 378 1 230 1 57 1 325 1 301 1 233 2 187 1 159 1 83 1 136 1 42 1 237 1 
331 2 165 6 116 1 117 5 118 1 168 3 70 3 270 5 339 1 340 9 95 2 296 1 73 6 341 7 148 6 77 2 11 9 347 2 78 1 374 3 375 8 318 1 28 2 351 9 155 5 323 1 230 3 57 1 301 3 233 6 159 3 83 1 257 1 262 1 237 4 
331 1 165 2 117 3 168 1 70 2 340 3 95 1 341 2 73 2 77 1 11 3 347 1 374 1 375 3 318 1 28 1 351 4 320 1 378 1 230 1 301 1 233 2 159 1 257 1 42 1 237 1 
331 1 165 4 117 4 168 2 70 3 340 4 95 1 296 1 73 4 341 3 77 1 11 4 347 1 78 1 374 2 375 5 318 1 28 1 351 7 320 2 323 1 378 1 230 2 301 2 233 4 159 2 257 1 42 1 237 2 
27 1 268 1 264 1 
298 1 268 1 
266 1 
35 1 268 1 
27 2 35 1 193 1 98 1 221 1 268 3 
35 1 193 1 268 1 
334 1 268 1 
374 1 153 1 207 1 168 1 324 1 370 7 357 2 225 1 215 3 36 1 147 2 226 1 234 3 361 1 314 4 315 1 114 1 
374 1 153 1 207 1 168 1 324 1 370 7 357 2 225 1 215 3 36 1 147 2 226 1 234 3 361 1 314 4 315 1 114 1 
374 1 153 1 53 1 207 1 168 1 324 1 370 7 357 2 225 1 215 3 36 1 147 2 226 1 234 3 361 1 314 4 315 1 114 1 
191 1 194 1 288 1 306 1 168 4 6 2 224 3 370 31 225 2 120 1 147 3 226 1 343 1 9 1 314 16 315 2 275 1 374 4 153 1 30 1 207 2 32 1 324 1 230 3 34 1 301 3 357 5 159 3 215 10 36 2 234 15 379 4 361 5 114 1 
122 1 374 1 153 1 194 2 207 1 30 2 306 2 168 1 6 4 370 9 357 3 225 1 215 4 36 1 147 2 226 1 234 4 343 2 86 1 361 1 314 5 315 1 114 1 275 1 
220 1 367 1 21 2 338 2 72 1 71 1 310 1 173 1 200 1 174 1 48 1 342 1 247 1 10 1 344 1 203 1 204 1 348 1 249 1 103 1 208 1 181 1 33 1 184 1 137 1 359 1 218 1 259 2 39 1 44 1 
220 1 367 1 21 3 338 2 72 1 71 1 310 1 173 1 174 1 48 1 342 1 247 1 10 1 344 1 203 1 204 1 348 2 249 1 103 1 208 1 181 1 322 1 33 1 184 1 133 1 137 1 359 1 219 1 218 1 259 3 
367 1 21 2 338 2 71 1 173 1 174 1 48 1 342 1 247 1 10 1 203 1 204 1 348 2 249 1 103 1 208 1 181 1 322 1 33 1 184 1 137 1 359 1 219 1 218 1 259 2 
220 1 249 1 208 1 367 2 140 1 5 1 20 1 21 1 268 1 33 2 326 1 173 1 369 1 133 1 35 1 174 2 342 1 177 1 247 2 344 1 10 1 217 1 259 1 
220 1 249 1 103 1 208 1 367 1 181 1 21 1 322 1 338 2 33 1 71 1 72 1 310 1 184 1 173 1 174 1 342 1 48 1 359 1 218 1 344 1 10 1 247 1 39 1 259 1 44 1 
336 1 
332 1 331 1 1 1 45 1 239 1 335 1 91 1 140 1 340 5 144 1 94 1 95 1 342 1 148 6 10 2 345 1 51 1 11 5 205 1 248 2 249 2 102 1 349 1 208 2 351 2 57 1 255 1 158 1 256 2 112 1 263 2 365 1 116 3 165 2 117 2 65 2 68 1 268 1 269 1 70 2 173 1 121 1 177 2 77 1 375 2 125 2 318 1 28 1 377 2 321 1 326 1 35 1 85 2 188 1 283 4 
11 3 365 1 205 1 124 1 116 1 1 1 239 1 45 1 125 1 91 1 321 1 269 1 340 3 144 1 94 1 158 1 255 1 112 1 148 2 283 2 188 1 345 1 
11 3 365 1 205 1 124 1 116 1 1 1 117 1 239 1 45 1 318 1 91 1 377 1 321 1 269 1 340 3 144 1 94 1 158 1 255 1 112 1 148 1 283 3 188 1 345 1 
365 1 116 1 1 1 45 1 239 1 117 1 91 1 269 1 144 1 340 3 94 1 148 2 345 1 205 1 11 3 124 1 248 1 125 1 318 1 377 1 321 1 255 1 158 1 112 1 188 1 283 3 
331 1 1 1 239 1 45 1 238 1 335 1 91 1 144 1 340 5 94 1 148 7 345 1 205 1 11 5 248 4 102 1 57 1 158 1 255 1 112 1 256 2 60 1 113 1 263 2 365 1 116 3 165 1 117 5 166 1 65 2 269 1 308 1 70 2 77 1 124 1 375 1 125 4 318 5 28 1 377 4 321 1 85 2 283 6 188 1 
331 1 1 1 239 1 45 1 335 1 91 1 144 1 340 4 94 1 148 4 345 1 205 1 11 4 248 2 102 1 349 1 351 2 57 1 158 1 255 1 112 1 256 2 263 2 365 1 165 1 116 2 117 2 65 2 269 1 70 2 77 1 375 1 125 2 28 1 318 1 377 2 321 1 85 2 283 4 188 1 
331 1 365 1 116 2 165 1 1 1 117 1 45 1 239 1 335 1 91 1 65 2 166 1 269 1 70 2 308 1 144 1 340 4 94 1 148 4 345 1 77 1 205 1 11 4 248 2 102 1 375 1 125 2 318 1 28 1 377 2 321 1 57 1 255 1 158 1 256 2 112 1 60 1 85 2 188 1 283 4 263 2 
331 1 365 1 116 2 165 1 1 1 117 1 45 1 239 1 335 1 91 1 65 2 166 1 269 1 70 2 308 1 144 1 340 4 94 1 148 4 345 1 77 1 205 1 11 4 248 2 102 1 375 1 125 2 318 1 28 1 377 2 321 1 57 1 255 1 158 1 256 2 112 1 60 1 85 2 188 1 283 4 263 2 
331 1 365 1 116 2 165 1 1 1 117 1 45 1 239 1 335 1 91 1 65 2 269 1 144 1 340 4 94 1 145 2 148 4 345 1 77 1 205 1 11 4 248 2 317 1 375 1 125 2 318 1 28 1 377 2 351 2 321 1 57 1 82 2 255 1 158 1 111 1 134 1 256 2 112 1 60 1 188 1 283 4 
331 1 365 1 116 2 165 1 1 1 117 1 45 1 239 1 238 1 335 1 91 1 65 2 166 1 269 1 70 2 308 1 144 1 340 4 94 1 148 5 77 1 345 1 205 1 11 4 248 3 102 1 375 1 125 3 318 1 28 1 377 3 321 1 57 1 255 1 158 1 256 2 112 1 60 1 85 2 188 1 283 5 263 2 
331 1 365 1 116 2 165 1 1 1 117 1 45 1 239 1 238 1 335 1 91 1 65 2 166 1 269 1 70 2 308 1 144 1 340 4 94 1 148 5 77 1 345 1 205 1 11 4 248 3 102 1 375 1 125 3 318 1 28 1 377 3 321 1 57 1 255 1 158 1 256 2 112 1 60 1 85 2 188 1 283 5 263 2 
365 1 331 1 116 2 165 1 1 1 117 1 45 1 239 1 335 1 91 1 65 2 269 1 340 4 144 1 94 1 145 2 148 4 345 1 77 1 11 4 205 1 248 2 375 1 125 2 318 1 28 1 349 1 377 2 351 2 321 1 57 1 82 2 255 1 158 1 134 1 256 2 112 1 188 1 283 4 
190 1 192 1 285 1 194 1 306 1 168 1 6 2 244 1 370 6 146 1 225 1 147 1 226 1 343 1 314 3 315 1 374 1 153 1 30 1 299 2 232 1 357 2 215 2 234 3 264 1 114 1 
190 2 285 1 192 4 194 2 306 2 168 1 6 4 224 3 244 11 370 14 311 1 146 11 120 1 343 2 314 8 374 2 30 2 299 1 105 1 80 1 107 1 230 2 129 1 34 1 157 1 301 1 357 1 215 2 159 2 216 1 234 6 379 3 361 1 
115 1 190 1 192 1 285 1 193 1 194 1 88 1 267 1 306 1 268 1 6 2 144 2 94 1 173 1 370 2 311 1 342 1 177 1 343 1 10 1 314 1 205 2 101 1 249 1 79 1 54 1 350 1 208 1 55 1 30 1 299 1 105 1 35 1 303 1 234 1 216 1 328 1 258 1 
190 3 285 3 192 7 194 3 193 2 6 6 93 1 242 2 144 3 94 1 244 7 201 1 146 7 342 2 147 1 343 3 10 3 205 3 101 1 206 2 249 3 153 1 208 3 55 1 350 2 54 2 299 2 105 1 301 2 357 4 159 2 215 8 216 1 361 4 304 2 114 1 115 1 19 2 306 3 168 3 268 2 69 1 370 20 173 2 311 1 225 1 226 1 177 1 314 10 315 1 372 2 374 3 79 2 30 3 322 1 230 2 35 2 234 10 328 1 
115 1 190 2 285 2 194 2 140 1 306 2 268 3 6 4 92 2 144 1 94 1 199 1 173 2 370 2 200 1 119 1 342 2 74 1 177 2 343 2 75 1 10 7 314 1 205 1 101 1 249 8 55 1 208 8 30 2 105 1 322 1 127 1 232 1 326 1 35 2 216 1 234 1 235 1 281 1 
115 1 190 1 192 1 285 1 194 1 306 1 168 1 6 2 144 1 244 1 94 1 370 3 311 1 146 1 343 1 314 1 205 1 151 1 374 1 55 1 30 1 229 1 230 1 209 1 301 1 357 1 215 1 159 1 234 2 
190 1 192 1 285 1 374 1 194 1 30 1 306 1 230 1 232 1 6 2 143 1 244 1 370 2 146 1 215 1 343 1 361 1 314 2 
190 1 192 1 285 1 194 1 30 1 306 1 168 1 232 1 6 2 301 1 244 1 370 2 357 1 146 1 215 1 358 1 234 2 343 1 
190 1 285 1 192 2 194 1 306 1 168 1 6 2 244 2 370 4 146 2 343 1 314 2 374 1 30 1 230 1 232 1 301 1 357 1 159 1 215 2 234 2 361 1 
190 1 192 1 285 1 374 1 194 1 30 1 306 1 230 1 6 2 143 1 244 1 199 1 370 2 146 1 215 1 343 1 361 1 314 2 
190 1 192 1 285 1 194 1 30 1 306 1 168 1 6 2 301 1 244 1 199 1 370 2 357 1 146 1 215 1 358 1 234 2 343 1 
190 1 285 1 192 2 194 1 306 1 168 1 6 2 199 1 244 2 370 4 146 2 343 1 314 2 374 1 30 1 230 1 301 1 357 1 159 1 215 2 234 2 361 1 
190 1 192 2 285 1 374 1 194 1 30 1 306 1 168 1 230 1 6 2 301 1 244 2 370 4 357 1 146 2 215 2 159 1 234 2 343 1 361 1 314 2 
190 1 285 1 193 1 194 1 306 1 268 1 6 2 144 1 370 2 173 1 342 1 177 1 343 1 10 1 314 1 205 1 249 1 79 1 54 1 350 1 208 1 30 1 299 1 105 1 35 1 216 1 234 1 304 1 
190 1 285 1 193 1 194 1 306 1 268 1 6 2 309 1 144 1 370 2 173 1 342 1 177 1 343 1 10 1 314 1 205 1 249 1 54 1 208 1 30 1 299 1 105 1 35 1 216 1 84 1 234 1 380 1 
190 1 285 1 192 2 194 1 306 1 168 1 6 2 244 2 370 4 311 1 146 2 343 1 314 2 374 1 30 1 230 1 301 1 357 1 159 1 215 2 234 2 361 1 
190 1 192 2 285 1 193 1 194 1 306 1 168 1 268 1 6 2 144 1 244 2 370 4 173 1 200 1 146 2 342 1 343 1 10 1 314 2 205 1 206 1 249 1 374 1 79 1 54 1 350 1 208 1 30 1 230 1 301 1 357 1 35 1 215 2 159 1 234 2 361 1 304 1 
115 1 190 1 0 1 285 1 192 1 194 1 306 1 168 1 6 2 144 1 94 1 244 1 370 3 311 1 146 1 343 1 314 2 205 1 151 1 374 1 55 1 30 1 229 1 230 1 301 1 215 1 159 1 234 1 361 1 
194 2 368 1 306 2 141 1 168 1 222 1 6 4 224 1 294 1 370 9 120 1 343 2 314 4 316 1 122 1 374 1 30 2 251 1 230 1 34 1 130 1 301 1 357 1 159 1 215 2 234 5 379 2 361 1 87 1 
364 1 194 3 306 3 141 2 168 1 241 1 6 6 224 2 8 1 271 1 294 2 370 20 246 1 120 2 343 3 314 11 275 2 316 3 122 1 374 2 376 1 30 3 251 1 230 2 130 1 301 1 357 1 215 2 159 2 234 9 379 2 361 1 62 1 87 1 
364 1 194 2 306 2 141 1 168 1 222 1 6 4 224 1 294 1 370 9 120 1 343 2 314 4 316 1 122 1 374 1 30 2 251 1 230 1 34 1 130 1 301 1 357 1 159 1 215 2 234 5 379 2 361 1 87 1 
364 1 194 2 306 2 141 1 168 1 222 1 6 4 224 1 294 1 370 9 120 1 343 2 314 4 316 1 122 1 374 1 30 2 251 1 230 1 34 1 130 1 301 1 357 1 159 1 215 2 234 5 379 2 361 1 87 1 
364 1 194 2 306 2 141 1 168 7 241 1 6 4 8 1 224 4 271 1 294 1 370 46 225 1 246 1 120 2 147 1 226 1 343 2 314 24 315 1 275 1 316 3 122 1 374 7 153 1 376 1 30 2 251 1 230 6 34 2 157 2 130 1 301 6 357 6 159 6 215 12 234 22 379 4 361 6 62 1 87 1 114 1 
138 1 354 1 132 1 179 1 104 1 67 1 13 1 40 1 52 1 300 1 
25 1 96 1 
353 1 132 1 89 1 179 1 104 1 13 1 40 1 52 1 291 1 
11 1 117 1 104 1 179 1 67 1 13 1 300 1 243 1 340 1 131 1 279 1 354 1 132 1 47 1 49 1 52 1 40 1 24 2 
11 1 117 1 104 1 179 1 67 1 13 1 300 1 243 1 340 1 131 1 279 1 354 1 132 1 47 1 49 1 52 1 40 1 24 2 
11 1 117 1 104 1 179 1 67 1 13 1 300 1 243 1 340 1 131 1 279 1 354 1 132 1 47 1 49 1 52 1 40 1 24 2 
213 1 295 1 273 1 
213 1 295 1 273 1 
123 1 236 1 
123 1 213 1 236 1 
64 1 196 1 
115 2 64 1 196 1 223 1 144 2 340 1 94 2 341 1 96 1 22 1 52 1 24 1 205 2 11 1 25 1 179 1 104 1 55 2 299 1 13 1 325 1 279 1 131 1 132 1 136 1 40 1 237 1 
295 1 273 1 
123 1 213 1 236 1 
164 1 190 1 285 1 194 1 306 1 268 1 6 2 92 2 144 2 94 2 292 1 173 1 370 2 311 1 119 1 342 1 227 1 343 1 10 2 314 1 205 2 249 2 208 2 30 1 182 1 56 1 105 1 127 1 35 1 216 1 234 1 
249 2 103 1 240 1 208 2 181 1 322 1 352 1 338 2 108 1 71 1 310 1 184 1 173 1 200 1 342 1 48 1 359 1 10 2 247 1 
249 1 103 1 276 1 208 1 181 1 322 1 338 2 108 1 71 1 310 1 184 1 173 1 48 1 342 1 359 1 10 1 247 1 
249 1 240 1 208 1 140 1 268 1 326 1 173 1 369 1 35 1 342 1 177 1 10 1 247 1 282 1 
249 1 103 1 240 1 208 1 181 1 322 1 352 1 338 2 108 1 71 1 310 1 184 1 173 1 342 1 48 1 359 1 10 1 247 1 
23 1 
165 1 117 1 375 1 318 1 214 1 228 1 264 1 
331 1 165 1 116 1 117 2 70 1 340 1 148 1 77 1 11 1 102 1 375 1 28 1 318 1 351 1 57 1 85 1 263 1 
332 1 331 4 193 3 334 2 337 2 197 2 340 5 293 2 95 2 200 1 342 4 148 5 10 3 346 2 11 5 249 3 298 3 208 3 351 12 57 4 301 2 214 1 159 2 160 2 162 1 360 2 116 3 165 8 117 8 19 2 167 2 221 1 168 2 268 10 269 2 70 6 173 3 73 6 274 1 177 1 77 4 371 1 374 2 375 9 27 2 318 2 28 4 228 1 180 1 230 2 233 6 35 3 329 1 327 2 
332 1 331 2 116 1 165 5 117 5 286 1 168 2 241 1 70 3 224 1 8 1 271 1 340 1 95 1 293 2 73 5 120 1 148 1 77 2 11 1 374 2 375 8 376 1 28 2 318 2 351 6 57 2 230 2 59 1 233 5 301 2 159 2 360 1 379 1 62 1 
331 1 115 1 165 2 239 1 2 1 166 1 168 1 144 1 340 1 172 1 94 1 293 2 225 1 149 1 77 1 315 1 205 1 11 1 151 1 374 2 375 2 28 1 55 1 57 1 14 1 356 1 360 1 114 1 
331 1 165 1 117 1 375 1 28 1 318 1 228 1 57 1 214 1 77 1 
165 5 374 2 117 5 375 5 19 1 351 10 168 2 230 2 70 5 233 5 301 2 293 2 73 5 159 2 360 1 
11 1 340 1 116 1 117 1 318 1 148 1 
331 2 332 2 165 2 116 2 140 1 68 1 268 1 340 3 173 1 95 2 342 1 148 4 121 1 177 2 10 4 77 2 371 2 11 3 249 4 373 1 375 2 28 2 208 4 57 1 156 1 326 1 35 1 257 1 162 1 
115 2 190 1 2 1 285 1 194 1 193 1 306 1 268 1 6 2 144 3 94 2 370 1 173 1 342 1 202 1 343 1 177 1 10 1 205 3 249 1 151 2 79 1 30 1 208 1 55 2 350 1 54 1 299 1 105 1 35 1 234 1 304 1 
331 1 332 1 165 2 117 4 375 1 28 1 318 2 351 4 57 1 70 2 233 2 95 1 73 2 147 1 77 1 
132 1 13 1 169 1 
132 1 64 1 29 1 67 1 13 1 
132 1 13 1 169 1 
132 1 13 1 169 1 
132 1 362 1 13 1 
132 1 362 1 13 1 
132 1 362 1 13 1 
132 1 13 1 
179 1 40 1 
374 1 153 1 194 2 30 2 306 2 168 1 6 4 370 8 357 2 225 1 215 3 147 1 226 1 234 4 343 2 361 1 314 4 315 1 114 1 275 1 
374 1 370 6 153 1 357 2 225 1 215 2 147 1 226 1 234 3 168 1 314 3 315 1 264 1 114 1 
374 1 194 1 30 1 306 1 168 1 230 1 6 2 301 1 211 1 370 4 357 1 215 2 159 1 234 2 343 1 361 1 314 2 
374 1 168 1 230 1 34 1 301 1 224 1 370 7 357 1 120 1 159 1 215 2 234 4 379 2 361 1 314 3 
194 2 306 2 168 3 6 4 224 2 370 23 225 2 147 1 226 1 343 2 314 11 315 2 275 2 374 3 153 1 30 2 80 1 252 1 230 2 34 1 157 1 301 2 357 5 215 9 159 2 234 12 379 2 361 4 114 1 
370 1 234 1 379 1 
224 1 370 1 314 1 
374 1 194 1 30 1 19 1 306 1 168 1 230 1 6 2 301 1 211 1 370 6 357 2 159 1 215 3 234 3 343 1 361 1 314 3 
194 1 306 1 168 2 241 1 6 2 224 1 8 1 271 1 370 12 120 1 343 1 314 6 122 1 374 2 376 1 30 1 230 2 301 2 357 1 159 2 215 2 234 6 379 1 361 1 62 1 
374 1 168 1 370 6 357 1 225 1 215 2 234 3 361 1 314 3 315 1 114 1 
153 1 194 1 30 1 306 1 252 1 6 2 370 3 357 1 225 1 215 2 226 1 234 2 343 1 361 1 314 1 315 1 275 1 
122 1 374 2 194 1 30 1 306 1 168 2 6 2 14 1 370 10 357 3 225 2 215 5 234 5 343 1 361 2 314 5 315 2 114 1 
122 1 374 1 194 1 30 1 306 1 230 1 6 2 370 2 215 1 343 1 361 1 314 2 
122 1 374 1 194 1 30 1 306 1 168 1 230 1 6 2 301 1 370 4 357 1 215 2 159 1 234 2 343 1 361 1 314 2 
122 1 194 3 30 3 306 3 252 1 222 1 6 6 370 3 357 1 225 1 215 2 234 2 343 3 361 1 314 1 315 1 275 1 
191 1 194 5 288 1 306 5 168 5 222 1 6 10 224 3 370 34 225 3 120 1 147 1 226 1 343 5 314 16 315 3 275 2 122 1 374 5 153 1 30 5 252 1 32 1 230 3 34 1 301 3 211 1 357 7 159 3 215 12 234 18 379 4 361 5 114 2 
194 2 306 2 168 1 241 1 6 4 224 1 8 1 271 1 370 11 120 1 343 2 314 7 275 1 122 1 374 2 376 1 30 2 230 2 301 1 357 1 159 2 215 2 234 4 379 1 361 1 62 1 
194 3 306 3 168 1 241 1 6 6 224 1 8 1 271 1 370 14 120 1 343 3 314 9 275 1 122 1 374 3 376 1 30 3 230 3 34 1 301 1 211 1 357 1 159 3 215 3 234 5 379 2 361 2 62 1 
194 3 306 3 168 3 241 1 6 6 224 1 8 1 271 1 370 19 225 1 120 1 147 1 226 1 343 3 314 9 315 1 275 1 122 1 374 3 153 1 376 1 30 3 230 2 301 2 211 1 357 3 159 2 215 4 234 10 379 1 361 1 62 1 114 1 
194 3 306 3 168 2 241 1 6 6 224 1 8 1 271 1 370 17 225 1 120 1 147 1 226 1 343 3 314 10 315 1 275 1 122 1 374 3 153 1 376 1 30 3 230 2 301 1 211 1 357 3 159 2 215 5 234 7 379 1 361 2 62 1 114 1 
194 2 306 2 168 1 241 1 6 4 224 1 8 1 271 1 370 11 120 1 343 2 314 7 275 1 122 1 374 2 376 1 30 2 230 2 301 1 357 1 159 2 215 2 234 4 379 1 361 1 62 1 
194 1 306 1 168 2 241 1 6 2 224 1 8 1 271 1 370 12 120 1 343 1 314 6 122 1 374 2 376 1 30 1 230 2 301 2 357 1 159 2 215 2 234 6 379 1 361 1 62 1 
194 4 306 4 168 2 241 1 6 8 224 1 8 1 271 1 370 18 225 1 120 1 147 1 226 1 343 4 314 10 315 1 275 2 122 1 374 3 153 1 376 1 30 4 230 2 301 1 211 1 357 3 159 2 215 5 234 8 379 1 361 2 62 1 114 1 
194 4 306 4 168 2 241 1 222 1 6 8 224 1 8 1 271 1 370 16 120 1 343 4 314 9 275 2 122 1 374 3 376 1 30 4 230 3 301 2 357 3 159 3 215 6 234 7 379 1 361 3 62 1 
374 1 153 1 168 1 370 7 357 3 225 3 215 6 226 2 234 4 361 3 314 3 315 3 114 1 
194 4 306 4 168 2 241 1 222 1 6 8 224 1 8 1 271 1 370 18 225 1 120 1 147 1 226 1 343 4 314 10 315 1 275 2 122 1 374 3 153 1 376 1 30 4 230 2 301 1 357 3 159 2 215 4 234 8 379 1 361 1 62 1 114 1 
205 1 144 1 94 1 112 1 299 1 109 1 100 1 
205 1 144 1 302 1 210 1 94 1 112 1 299 1 37 1 261 1 163 1 109 1 100 1 
249 1 326 1 173 1 35 1 342 1 208 1 140 1 177 1 10 1 268 1 264 1 
115 1 205 2 101 1 249 1 193 1 79 1 54 1 55 1 208 1 299 1 268 1 144 2 94 1 173 1 35 1 342 1 177 1 10 1 
115 2 1 1 239 1 193 2 334 1 167 1 268 3 144 2 94 2 173 1 342 1 10 1 371 1 205 2 101 1 249 1 79 1 208 1 55 1 54 1 299 1 158 1 35 2 
115 2 1 1 239 1 193 2 334 1 167 1 268 3 144 2 94 2 173 1 342 1 10 2 371 1 205 2 101 1 249 2 208 2 55 1 54 1 299 1 278 1 158 1 35 2 380 1 
117 1 3 1 193 1 334 1 167 1 268 4 269 1 340 2 173 1 342 1 148 1 97 1 177 1 10 3 371 1 11 2 249 3 27 1 298 1 318 1 208 3 278 1 35 1 
11 2 249 3 117 1 334 1 193 1 27 1 318 1 298 1 208 3 167 1 197 1 268 4 269 1 278 1 340 2 173 1 35 1 342 1 148 1 177 1 10 3 371 1 
249 1 173 1 342 1 208 1 74 1 10 1 
249 7 12 1 193 1 126 1 208 7 322 1 127 1 221 1 268 3 92 1 173 2 200 1 35 2 342 3 74 1 235 1 177 2 281 1 75 1 10 6 150 1 
190 2 192 1 285 2 194 2 193 1 6 4 144 2 94 1 244 1 200 1 146 1 342 1 147 1 343 2 10 1 205 2 206 1 101 1 249 1 153 1 350 1 208 1 55 1 54 1 299 2 357 2 215 2 304 1 114 1 115 1 306 2 168 1 268 1 173 1 370 6 311 1 225 1 226 1 314 3 315 1 372 1 374 1 79 1 30 2 182 1 35 1 234 3 
331 2 165 1 116 1 117 1 337 1 197 1 268 2 269 1 340 3 341 1 148 2 177 1 10 1 77 2 346 1 11 3 249 1 375 1 27 1 318 1 28 2 298 1 208 1 228 1 57 2 214 1 162 1 327 1 
249 2 27 1 193 1 208 2 180 1 221 1 268 2 173 1 200 1 35 1 342 2 74 1 10 2 
249 4 287 1 208 4 140 1 268 1 278 1 326 1 173 1 200 1 35 1 342 1 177 1 10 4 
249 2 12 1 193 1 208 2 106 1 268 1 69 1 173 1 35 1 342 2 50 1 10 2 150 1 371 1 
71 1 249 1 184 1 173 1 342 1 208 1 181 1 177 1 10 1 338 1 
249 2 173 1 35 1 200 1 342 1 208 2 227 1 127 1 322 1 10 2 268 1 
249 5 287 1 208 5 140 1 127 1 268 3 326 1 173 2 200 1 35 2 342 2 177 1 10 4 75 1 281 1 371 1 
249 5 287 1 208 5 140 1 127 1 268 3 142 1 326 1 173 2 200 1 35 2 342 2 177 1 10 4 281 1 371 1 
115 1 205 2 101 1 249 1 193 1 54 1 55 1 208 1 299 1 268 1 144 2 94 1 173 1 35 1 342 1 177 1 10 1 380 1 
249 1 12 1 193 1 126 1 208 1 221 1 268 1 173 1 35 1 342 2 10 1 150 1 371 1 
186 1 154 1 176 1 299 1 99 1 
11 2 1 1 117 1 239 1 318 1 154 1 31 1 299 1 321 1 269 1 7 1 340 2 277 1 158 1 186 2 341 1 176 2 312 1 99 2 
205 1 164 1 144 1 94 1 292 1 154 1 176 1 56 1 99 1 
277 1 154 1 312 1 
204 1 137 1 203 1 264 1 
204 1 220 1 137 1 21 1 344 1 259 1 203 1 
174 1 259 1 33 1 
204 1 220 1 15 2 212 1 355 1 137 1 161 1 21 3 344 1 259 3 39 1 203 1 
204 1 348 1 220 1 137 1 21 2 344 1 259 2 203 1 284 1 
254 1 220 1 184 1 139 1 359 1 21 1 344 1 338 1 259 1 39 1 203 1 
204 1 220 1 21 1 344 1 259 1 39 1 203 1 
204 2 220 1 137 1 21 1 344 1 259 1 39 1 
204 1 220 2 21 2 128 1 272 1 38 1 344 2 39 1 259 2 203 1 
204 1 348 2 220 1 139 1 4 1 137 1 307 1 61 1 21 3 344 1 259 3 39 1 203 2 
204 1 220 1 348 1 103 1 181 1 21 2 338 2 184 1 137 1 359 1 344 1 39 1 259 2 260 1 203 1 
204 1 348 2 220 2 139 1 4 1 137 1 21 4 344 2 170 1 259 4 39 1 203 2 284 1 
204 1 220 1 137 1 21 1 344 1 259 1 39 1 203 1 
204 2 348 2 220 1 178 1 4 1 139 1 21 4 15 1 212 1 161 1 137 2 344 1 259 4 203 3 
204 1 220 1 348 1 21 2 81 1 171 1 137 1 344 1 39 1 259 2 203 1 189 1 
204 1 220 1 18 1 21 3 212 1 15 2 161 2 137 1 344 1 39 1 259 3 203 1 
110 1 90 1 203 2 265 2 
220 1 250 1 21 1 344 1 259 1 39 1 
204 1 348 1 220 1 137 1 307 1 21 2 344 1 259 2 39 1 203 1 
16 1 
204 1 220 1 137 1 21 1 344 1 259 1 39 1 203 1 
204 1 348 1 220 1 21 3 307 1 15 1 137 1 344 1 39 1 259 3 203 1 
178 1 139 1 4 1 203 1 
204 1 203 1 

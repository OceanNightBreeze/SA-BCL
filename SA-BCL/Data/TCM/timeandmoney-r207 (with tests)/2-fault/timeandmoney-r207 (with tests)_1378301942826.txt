#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 142 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 3035 | if (x) -> if (!x)
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 797 | stmt -> ;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 2 159 1 63 2 122 1 162 2 123 3 339 1 210 6 71 2 194 4 74 1 76 1 261 1 323 1 363 2 365 9 200 1 221 1 182 2 249 1 84 2 184 9 20 1 332 1 117 1 55 5 59 1 60 1 
158 2 159 1 63 2 122 1 162 2 123 3 339 1 210 6 71 2 194 4 74 1 76 1 261 1 323 1 363 2 365 9 200 1 221 1 182 2 249 1 84 2 184 9 20 1 332 1 117 1 55 5 59 1 60 1 
158 2 159 1 63 2 122 1 162 2 123 4 339 1 210 7 71 2 194 5 74 1 76 1 261 1 323 1 363 2 365 10 200 1 221 1 182 2 249 1 84 2 184 10 20 1 332 1 117 1 55 6 59 1 60 1 
158 2 159 1 63 2 122 1 162 2 123 2 339 1 210 4 71 2 194 3 74 1 76 1 261 1 323 1 363 1 365 7 200 1 221 1 182 2 249 1 84 2 184 7 20 1 332 1 55 4 59 1 60 1 
365 4 158 1 63 1 122 1 200 1 123 1 162 1 210 3 84 1 71 1 184 4 194 2 20 1 74 1 117 1 55 3 363 2 60 1 
365 2 63 1 122 1 162 1 182 1 35 1 267 1 369 1 339 1 84 1 71 1 184 2 20 1 261 1 55 1 60 1 
365 3 122 1 162 2 123 1 182 1 210 1 71 2 184 3 194 1 20 1 323 1 55 2 60 1 
159 1 158 1 63 1 122 1 123 3 162 2 210 7 194 4 213 1 71 2 74 1 323 1 363 2 365 9 200 1 182 1 84 1 184 9 20 1 332 1 117 1 187 1 55 5 60 1 
159 1 158 1 63 1 122 1 123 3 162 2 210 7 194 4 213 1 71 2 74 1 323 1 363 2 365 9 200 1 182 1 84 1 184 9 20 1 332 1 117 1 187 1 55 5 60 1 
149 1 313 2 355 1 
140 2 360 2 68 2 33 2 254 2 356 1 372 1 18 2 
240 1 140 1 337 1 68 1 33 1 166 1 125 1 18 1 344 1 50 1 360 1 254 1 356 1 208 1 
149 1 
48 1 80 1 344 2 240 1 149 1 337 2 225 1 328 1 
80 1 240 2 288 1 149 1 16 2 337 5 328 1 103 2 165 1 105 1 286 1 48 2 88 1 344 5 274 1 376 1 276 2 29 1 316 1 
0 2 140 2 68 3 164 1 33 2 195 1 36 1 72 1 146 2 260 1 360 2 129 1 198 1 38 2 10 1 11 1 289 1 199 1 179 1 351 2 264 2 367 1 372 1 18 2 248 1 272 1 153 1 250 1 203 1 25 1 54 1 277 1 254 3 253 1 356 1 56 1 379 1 
140 1 50 1 360 1 68 1 33 1 166 1 254 1 356 1 18 1 208 1 
149 1 337 1 243 1 68 1 328 1 18 1 371 1 19 1 373 1 344 1 254 1 41 1 208 1 364 1 
140 1 149 1 337 2 68 1 33 1 328 1 18 1 371 1 19 1 344 2 360 1 254 1 41 1 208 1 364 1 
48 1 344 1 240 1 222 1 337 1 
48 1 80 1 344 2 240 1 149 1 337 2 328 1 183 1 
48 1 344 1 337 1 
149 1 328 1 94 1 
140 1 68 2 33 1 168 1 18 2 372 2 360 1 254 2 255 1 
282 1 335 1 262 1 
199 1 179 1 367 1 351 1 264 1 68 1 164 1 372 1 248 1 195 1 146 1 54 1 129 1 254 1 148 1 253 1 
94 1 372 1 
310 1 179 1 140 1 199 1 367 1 351 1 264 1 68 2 164 1 248 1 18 1 195 1 146 1 360 1 129 1 54 1 204 1 335 1 253 1 254 2 
310 1 99 1 140 4 326 1 243 1 68 5 33 1 168 1 18 5 372 1 360 4 204 2 254 5 315 1 
140 2 360 2 68 2 327 1 166 1 254 2 18 2 208 1 
140 3 360 3 204 1 68 3 33 1 254 3 372 1 18 3 
140 1 360 1 68 1 166 1 254 1 18 1 208 1 
140 1 360 1 68 1 33 1 168 1 254 1 255 1 18 1 208 1 
0 1 140 3 337 1 68 4 164 1 33 2 168 1 195 1 36 1 72 1 344 1 146 1 360 3 129 1 198 1 38 2 10 1 11 1 41 1 324 1 364 1 310 1 179 1 199 1 367 1 351 1 264 1 372 1 248 1 18 3 371 1 19 1 153 1 250 1 203 1 54 1 204 1 277 1 253 1 27 1 254 4 56 1 356 1 208 1 
140 1 326 1 360 1 243 1 68 2 204 1 254 2 372 1 18 2 
310 1 140 3 149 1 337 1 68 3 33 1 168 1 5 1 18 3 371 1 19 1 344 1 360 3 204 2 254 3 27 1 364 1 208 1 41 1 
140 2 282 1 68 2 33 1 168 1 18 2 360 2 204 1 335 1 254 2 
199 1 179 1 367 1 351 1 264 1 68 1 164 1 372 1 248 1 195 1 146 1 54 1 129 1 254 1 253 1 
179 1 367 1 351 1 264 1 2 1 68 1 164 1 372 1 248 1 195 1 146 1 54 1 129 1 254 1 349 1 
0 4 257 1 190 1 282 2 143 1 72 1 198 1 38 2 262 2 11 1 13 1 289 2 44 1 43 1 153 1 275 1 53 1 203 1 250 2 186 1 277 1 278 1 335 2 97 1 
140 1 360 1 68 1 327 1 254 1 371 1 18 1 208 1 
352 1 295 1 47 1 
352 2 26 1 77 1 211 1 178 1 47 2 
352 1 47 1 
352 1 47 1 
77 1 211 1 
77 1 211 1 
77 1 211 1 
352 1 378 1 47 1 
352 1 378 1 47 1 
352 1 378 1 47 1 
352 1 67 1 47 1 
352 1 67 1 47 1 
352 1 67 1 47 1 
319 1 140 2 336 1 337 1 68 2 3 1 4 1 344 1 360 2 237 1 347 1 309 1 130 1 79 1 372 1 18 2 47 1 352 1 295 1 252 1 156 1 254 2 57 1 206 1 
79 2 149 1 14 1 336 2 337 2 191 1 126 1 247 1 47 2 352 2 344 2 237 1 252 2 229 1 156 2 57 3 40 1 178 1 207 2 
158 1 267 1 226 1 119 2 84 2 
158 1 63 1 84 1 
63 1 267 1 84 1 
158 2 267 1 226 1 119 1 84 3 151 1 
158 1 267 1 226 1 119 1 84 2 134 1 
257 1 337 5 103 1 143 1 169 1 105 1 127 1 344 5 235 1 238 1 9 1 347 1 130 1 308 2 309 1 13 1 80 1 240 4 16 1 149 2 328 1 135 2 86 1 48 1 274 3 53 1 276 1 313 3 355 1 316 2 230 2 317 1 
257 3 337 9 103 2 142 1 143 3 234 1 170 5 172 1 105 1 344 9 238 2 9 3 309 4 13 3 288 1 240 7 80 1 149 5 16 2 222 5 328 1 135 6 86 1 48 6 89 1 23 1 274 8 53 3 276 2 313 9 355 3 316 6 230 6 317 2 298 1 
140 1 257 1 337 3 68 1 33 1 166 1 103 1 125 1 143 1 169 1 344 3 235 1 360 1 238 1 9 1 309 1 308 1 13 1 240 2 288 1 149 3 16 1 328 1 18 1 135 2 50 1 274 3 53 1 276 1 313 4 355 2 254 1 356 1 316 2 317 1 230 2 208 1 
257 1 337 2 103 1 142 1 143 1 169 1 344 2 235 1 238 1 9 1 309 1 308 1 13 1 288 1 240 1 149 2 16 1 135 2 274 3 53 1 276 1 313 4 355 2 316 2 230 2 317 1 
164 1 370 1 
246 1 
164 1 94 1 192 1 
129 1 164 1 195 1 
164 1 37 1 
164 1 195 1 
21 1 129 1 164 3 192 2 195 1 214 1 
0 7 160 1 64 1 289 4 257 1 43 2 150 1 17 2 302 1 340 1 215 1 196 1 304 1 52 1 275 3 93 1 250 3 53 1 
160 1 0 31 64 5 62 1 257 4 143 3 302 2 340 2 215 1 196 2 9 3 38 2 11 1 13 3 289 16 150 2 17 3 43 5 294 1 133 1 115 4 152 3 153 1 91 1 52 1 93 1 275 10 154 1 203 1 24 1 250 15 155 1 53 4 277 1 
0 9 64 1 257 1 302 1 340 1 215 1 196 1 38 4 110 1 11 2 289 5 17 2 43 3 150 1 114 1 153 2 52 1 275 4 154 1 93 1 53 1 203 2 250 4 277 2 
0 7 160 1 64 1 289 4 257 1 43 2 150 1 17 2 302 1 340 1 215 1 196 1 52 1 275 3 93 1 250 3 53 1 
0 7 160 1 64 1 289 4 257 1 43 2 150 1 17 2 302 1 340 1 215 1 196 1 52 1 275 3 93 1 250 3 53 1 
365 1 179 1 31 1 1 1 367 1 351 1 264 1 162 1 164 1 182 2 268 2 301 1 248 1 195 1 71 1 184 1 284 1 175 1 87 1 146 1 236 2 147 2 96 1 
61 1 158 1 63 1 162 1 101 1 71 1 146 1 236 1 305 1 147 1 365 1 263 1 179 1 264 1 351 1 182 1 267 1 268 1 248 1 84 2 184 1 271 1 151 1 49 1 296 1 60 1 
158 1 63 1 122 1 162 1 101 1 210 1 70 1 71 1 146 1 236 1 305 1 147 1 365 2 263 1 179 1 264 1 351 1 182 1 267 1 268 1 248 1 84 2 184 2 271 1 20 1 151 1 49 1 55 1 296 1 60 1 
61 1 158 1 63 1 122 1 162 1 233 1 301 1 210 2 71 1 146 1 236 1 305 1 147 1 365 3 263 1 179 1 264 1 351 1 182 1 267 1 268 1 248 1 84 2 184 3 271 1 20 1 151 1 49 1 55 1 296 1 
61 1 158 1 63 1 122 1 233 1 210 2 146 1 236 1 147 1 365 2 263 1 179 1 264 1 351 1 182 1 267 1 268 1 248 1 84 2 184 2 271 1 20 1 151 1 49 1 55 1 
270 1 
299 2 121 1 65 1 161 4 337 5 69 2 68 1 164 1 338 1 174 1 259 1 175 1 344 5 346 1 128 1 80 3 179 1 16 1 351 2 264 2 312 1 18 1 19 1 87 1 274 2 276 1 313 2 355 2 28 1 279 2 95 2 316 2 103 1 358 2 195 1 105 1 146 2 238 1 109 2 39 2 41 1 364 1 149 2 367 2 243 1 328 1 45 1 248 1 371 1 46 1 48 6 373 1 118 1 254 1 208 1 
80 1 161 2 337 3 312 1 243 1 68 1 225 1 371 1 18 1 19 1 46 1 174 1 48 2 344 3 373 1 128 1 118 1 39 1 254 1 364 1 208 1 41 1 
299 1 80 1 149 1 161 3 337 3 312 1 243 1 68 1 225 1 328 1 371 1 18 1 19 1 46 1 174 1 48 1 344 3 373 1 128 1 118 1 254 1 364 1 208 1 41 1 
299 1 161 3 337 3 68 1 174 1 344 3 128 1 39 1 41 1 364 1 80 1 149 1 312 1 243 1 225 1 328 1 18 1 371 1 46 1 19 1 48 2 373 1 118 1 254 1 279 1 208 1 
299 4 65 1 161 6 337 5 68 1 69 2 338 1 174 1 75 1 344 5 8 1 128 1 80 3 16 1 312 1 225 1 82 1 18 1 19 1 274 1 276 1 355 2 279 4 95 2 316 1 231 1 103 1 358 2 105 1 109 2 39 4 364 1 41 1 149 5 243 1 328 5 371 1 46 1 48 7 373 1 118 1 334 1 254 1 208 1 
299 2 65 1 161 4 337 4 68 1 69 2 338 1 174 1 344 4 128 1 80 2 16 1 312 1 18 1 19 1 274 1 276 1 313 2 355 2 95 2 279 2 28 1 316 1 103 1 358 2 105 1 109 2 39 2 364 1 41 1 149 2 243 1 328 1 371 1 46 1 48 4 373 1 118 1 254 1 208 1 
299 2 65 1 161 4 337 4 69 2 68 1 338 1 103 1 358 2 174 1 75 1 105 1 344 4 8 1 128 1 109 2 39 2 41 1 364 1 80 2 149 1 16 1 312 1 243 1 328 1 18 1 371 1 46 1 19 1 48 4 373 1 274 1 276 1 118 1 355 2 254 1 279 2 95 2 316 1 231 1 208 1 
299 2 65 1 161 4 337 4 69 2 68 1 338 1 103 1 358 2 174 1 75 1 105 1 344 4 8 1 128 1 109 2 39 2 41 1 364 1 80 2 149 1 16 1 312 1 243 1 328 1 18 1 371 1 46 1 19 1 48 4 373 1 274 1 276 1 118 1 355 2 254 1 279 2 95 2 316 1 231 1 208 1 
299 2 65 1 161 4 337 4 320 1 124 1 68 1 103 1 174 1 105 1 344 4 128 1 109 2 39 2 41 1 364 1 80 2 149 1 16 1 291 2 312 1 243 1 328 1 132 1 18 1 371 1 46 1 19 1 48 4 373 1 274 1 276 1 118 1 313 2 314 2 254 1 279 2 95 2 316 1 231 1 208 1 
299 3 65 1 161 5 337 4 69 2 68 1 338 1 103 1 358 2 174 1 105 1 75 1 8 1 344 4 128 1 109 2 39 3 41 1 364 1 80 2 149 1 16 1 312 1 243 1 328 1 18 1 371 1 46 1 19 1 48 5 373 1 274 1 276 1 118 1 334 1 355 2 254 1 95 2 279 3 316 1 231 1 208 1 
299 3 65 1 161 5 337 4 69 2 68 1 338 1 103 1 358 2 174 1 105 1 75 1 8 1 344 4 128 1 109 2 39 3 41 1 364 1 80 2 149 1 16 1 312 1 243 1 328 1 18 1 371 1 46 1 19 1 48 5 373 1 274 1 276 1 118 1 334 1 355 2 254 1 95 2 279 3 316 1 231 1 208 1 
299 2 65 1 161 4 337 4 124 1 68 1 174 1 344 4 128 1 80 2 16 1 312 1 18 1 19 1 274 1 276 1 313 2 314 2 95 2 279 2 28 1 316 1 103 1 105 1 109 2 39 2 364 1 41 1 149 1 291 2 243 1 328 1 371 1 46 1 48 4 373 1 118 1 254 1 208 1 
61 1 0 2 140 1 66 1 190 1 68 1 164 3 167 1 171 1 70 1 283 1 195 2 72 2 175 1 146 8 360 1 198 2 38 4 10 1 11 2 179 2 289 1 15 1 264 8 351 7 367 2 113 1 18 1 248 2 272 1 136 1 153 2 87 1 203 2 250 1 204 1 25 2 277 2 254 1 
0 3 140 1 257 1 282 1 68 1 33 1 168 1 143 1 72 1 360 1 198 1 9 1 38 2 262 1 11 1 13 1 325 1 289 1 43 1 18 1 153 1 116 1 275 1 203 1 53 1 250 2 277 1 335 1 254 1 
0 2 140 1 281 1 282 1 68 2 164 1 195 1 72 1 146 1 360 1 129 1 198 1 38 2 148 1 10 1 11 1 310 1 179 1 199 1 289 1 264 1 351 1 367 1 329 1 372 1 248 1 18 1 272 1 153 1 116 1 203 1 250 1 54 1 204 1 277 1 253 1 254 2 256 1 
61 1 0 20 64 4 257 3 68 3 164 2 72 3 215 1 129 2 9 2 10 1 262 7 11 3 13 2 310 1 179 2 264 3 351 3 17 1 266 1 18 1 272 1 93 1 275 8 277 3 139 1 98 2 357 2 140 1 282 7 143 2 195 2 196 1 146 3 360 1 198 3 38 6 199 2 289 10 367 1 292 1 150 1 43 4 242 2 293 2 372 2 248 2 153 3 52 1 116 1 53 3 250 10 203 3 204 1 54 2 335 7 254 3 253 2 56 2 
0 6 257 1 282 1 190 1 72 1 215 1 196 1 198 1 38 2 262 1 11 1 289 3 150 1 43 2 17 1 372 2 153 1 52 1 93 1 275 2 203 1 53 1 250 3 277 1 94 1 335 1 
0 14 64 1 257 2 282 4 143 2 173 1 72 1 345 1 216 1 198 2 9 2 38 4 10 1 262 11 11 2 13 1 289 8 43 1 224 1 294 1 372 1 272 1 115 3 152 3 153 2 116 1 275 2 250 6 203 2 24 1 53 1 277 2 335 11 
0 2 64 1 289 2 257 1 282 1 190 1 143 1 72 1 153 1 275 1 203 1 277 1 198 1 278 1 335 1 38 2 262 1 11 1 
0 2 282 1 190 1 43 1 72 1 153 1 275 1 203 1 53 1 250 2 277 1 186 1 198 1 335 1 38 2 262 1 11 1 13 1 
0 4 64 1 257 1 190 1 282 2 143 1 72 1 9 1 198 1 38 2 262 2 11 1 13 1 289 2 43 1 153 1 275 2 203 1 53 1 250 2 277 1 335 2 
0 2 64 1 289 2 257 1 282 1 143 1 283 1 72 1 153 1 275 1 203 1 277 1 198 1 278 1 335 1 38 2 262 1 11 1 
0 2 282 1 43 1 283 1 72 1 153 1 275 1 203 1 53 1 250 2 277 1 186 1 198 1 335 1 38 2 262 1 11 1 13 1 
0 4 64 1 257 1 282 2 143 1 283 1 72 1 9 1 198 1 38 2 262 2 11 1 13 1 289 2 43 1 153 1 275 2 203 1 53 1 250 2 277 1 335 2 
0 4 64 1 257 1 282 2 143 1 72 1 9 1 198 1 38 2 262 2 11 1 13 1 289 2 43 1 153 1 275 2 203 1 53 1 250 2 277 1 335 2 
0 2 68 1 164 1 195 1 72 1 146 1 129 1 198 1 38 2 10 1 11 1 289 1 179 1 199 1 264 1 351 1 367 1 372 1 248 1 272 1 153 1 203 1 250 1 54 1 277 1 253 1 254 1 56 1 
0 2 2 1 68 1 164 1 195 1 72 1 146 1 129 1 198 1 38 2 10 1 11 1 349 1 289 1 179 1 264 1 351 1 367 1 372 1 248 1 272 1 273 1 153 1 203 1 250 1 54 1 277 1 254 1 
0 4 64 1 257 1 282 2 143 1 72 1 9 1 198 1 38 2 262 2 11 1 13 1 289 2 43 1 153 1 116 1 275 2 203 1 53 1 250 2 277 1 335 2 
0 4 64 1 257 1 282 2 68 1 164 1 143 1 70 1 195 1 72 1 146 1 129 1 198 1 9 1 38 2 262 2 11 1 13 1 289 2 179 1 199 1 264 1 351 1 43 1 242 1 248 1 153 1 275 2 250 2 53 1 203 1 54 1 277 1 335 2 253 1 254 1 56 1 
300 1 0 3 64 1 140 1 257 1 282 1 68 1 33 1 168 1 143 1 72 1 360 1 198 1 9 1 38 2 262 1 11 1 13 1 289 2 18 1 153 1 116 1 275 1 250 1 53 1 203 1 277 1 335 1 254 1 
0 19 64 3 257 3 102 1 141 1 143 3 285 1 7 1 287 2 9 3 38 4 110 1 11 2 13 3 289 9 290 1 43 3 245 2 294 1 115 2 152 1 22 1 153 2 185 1 275 6 203 2 250 10 24 1 53 3 277 2 
0 26 64 2 257 3 258 1 102 1 141 1 6 1 143 3 7 1 176 1 287 1 9 3 38 6 110 1 219 1 11 3 13 2 289 14 181 1 43 2 245 4 294 2 115 2 152 2 22 2 153 3 374 1 154 2 275 4 185 2 53 2 250 12 203 3 277 3 
0 41 64 4 257 5 163 1 258 1 6 1 7 1 215 1 176 1 9 4 11 3 219 1 13 4 181 1 17 1 22 1 275 8 185 2 93 1 24 1 277 3 102 1 141 1 143 4 196 1 287 1 38 6 110 1 289 20 290 1 43 4 150 1 245 4 294 3 115 4 152 3 153 3 374 1 52 1 154 1 53 5 250 21 203 3 
0 38 64 3 257 5 163 1 258 1 102 1 141 1 6 1 143 4 7 1 215 1 176 1 196 1 287 1 9 4 38 8 110 1 219 1 11 4 13 3 289 20 290 1 17 1 150 1 181 1 43 4 245 4 294 3 115 4 152 3 22 1 153 4 374 1 52 1 93 1 154 2 185 2 275 7 203 4 250 18 24 1 53 4 277 4 
0 52 64 7 257 8 258 1 102 1 141 1 6 1 143 7 7 1 215 1 176 1 196 1 287 1 345 2 9 7 38 4 110 1 219 1 11 2 13 7 289 27 17 1 150 1 181 1 43 7 245 4 294 2 115 4 152 4 22 1 153 2 374 1 52 1 93 1 154 1 185 1 275 14 203 2 250 25 24 2 53 8 277 2 
79 1 352 1 336 1 252 1 156 1 247 1 40 1 178 1 47 1 145 1 
319 1 295 1 
79 1 352 1 336 1 252 1 359 1 156 1 220 1 47 1 239 1 
232 1 378 1 
67 1 26 1 34 1 
79 1 149 1 14 1 336 1 337 1 191 1 247 1 47 1 352 1 344 1 237 1 252 1 229 1 156 1 57 2 40 1 178 1 207 1 
79 1 149 1 14 1 336 1 337 1 191 1 247 1 47 1 352 1 344 1 237 1 252 1 229 1 156 1 57 2 40 1 178 1 207 1 
79 1 149 1 14 1 336 1 337 1 191 1 247 1 47 1 352 1 344 1 237 1 252 1 229 1 156 1 57 2 40 1 178 1 207 1 
232 1 26 1 378 1 
232 1 26 1 378 1 
67 1 34 1 
67 1 26 1 34 1 
3 1 206 1 
319 1 140 2 336 1 337 1 68 2 3 1 4 1 344 1 360 2 347 1 309 1 130 1 79 1 240 1 14 1 372 1 18 2 47 1 352 1 333 1 295 1 252 1 254 2 156 1 57 1 206 1 207 1 
0 2 66 1 68 2 164 1 195 1 341 1 193 1 72 1 146 2 197 1 198 1 307 1 38 2 10 1 11 1 179 1 289 1 264 2 351 2 248 1 18 2 272 1 136 1 153 1 116 1 203 1 250 1 25 2 277 1 254 2 188 1 
179 1 1 1 367 1 351 1 264 1 164 1 248 1 195 1 87 1 175 1 146 1 236 1 375 1 306 1 
61 1 158 1 63 1 179 1 351 1 264 1 368 1 267 1 84 2 248 1 271 1 151 1 49 1 146 1 236 1 306 1 296 1 380 1 
61 1 158 1 63 1 179 1 351 2 264 2 368 1 267 1 84 2 248 1 70 1 271 1 151 1 49 1 146 2 236 1 306 1 296 1 380 1 
61 1 158 1 63 1 179 1 351 1 264 1 267 1 84 2 248 1 271 1 151 1 49 1 146 1 236 1 361 1 296 1 380 1 
111 1 
16 1 149 1 103 1 328 1 105 1 88 1 274 1 276 1 29 1 316 1 
98 1 274 5 149 5 257 2 81 1 53 2 313 10 9 2 355 5 143 2 212 2 316 5 13 2 135 5 230 5 
48 1 344 1 80 1 149 1 337 1 328 1 
121 1 100 1 337 3 164 1 103 2 195 1 73 2 105 1 259 2 344 3 175 1 146 4 346 1 238 2 288 1 179 1 131 1 80 2 16 2 264 4 351 4 367 2 201 1 248 1 48 4 87 1 274 2 276 2 316 2 
337 1 69 1 338 1 103 1 358 1 105 1 344 1 80 1 16 1 149 2 328 1 48 1 274 1 276 1 313 1 355 1 316 1 
98 1 257 1 209 1 337 1 164 3 103 2 143 1 212 1 144 1 214 1 195 1 105 2 344 1 146 1 129 1 238 1 9 1 218 1 13 1 80 1 179 1 149 3 16 2 264 1 351 1 367 1 370 2 248 2 135 3 331 1 48 1 353 1 274 4 53 1 276 2 251 1 313 6 355 3 316 3 230 3 157 1 
257 2 189 1 337 1 258 1 103 2 6 1 143 2 212 2 259 1 105 2 344 1 176 1 177 1 238 1 9 2 13 2 80 1 16 2 149 5 81 1 181 1 328 2 294 1 135 5 115 1 48 1 152 1 274 8 374 1 53 2 276 2 313 6 355 3 316 5 230 5 
140 1 257 2 337 1 68 1 33 1 166 1 103 1 125 1 212 2 105 1 215 1 8 1 344 1 196 1 360 1 16 1 81 1 150 1 269 1 18 1 50 1 274 2 53 1 276 1 254 1 356 1 316 2 208 1 
88 1 274 1 149 1 328 1 94 1 29 1 316 1 
0 1 140 2 68 3 33 2 164 1 36 1 195 1 72 1 146 1 360 2 129 1 198 1 38 2 10 1 11 1 199 1 179 1 264 1 351 1 367 1 372 1 18 2 248 1 153 1 250 1 203 1 54 1 277 1 254 3 253 1 356 1 56 1 
16 1 149 4 17 1 103 1 328 2 135 2 105 1 259 1 274 1 276 1 238 1 313 4 355 2 316 2 230 2 
336 1 223 1 3 1 252 1 40 1 
336 1 108 1 252 1 
336 1 108 1 252 1 
336 1 108 1 252 1 
336 1 180 1 252 1 
336 1 180 1 252 1 
336 1 180 1 252 1 
336 1 252 1 
352 1 47 1 
0 10 64 2 289 5 257 2 150 2 43 3 269 1 215 1 153 1 196 2 275 5 203 1 250 5 53 2 277 1 38 2 110 1 11 1 
0 2 289 2 64 1 257 1 143 1 153 1 275 1 203 1 277 1 38 2 110 1 11 1 
0 4 289 2 64 1 257 1 43 1 143 1 153 1 275 2 250 2 53 1 203 1 277 1 9 1 38 2 110 1 11 1 13 1 
0 3 64 1 289 1 290 1 150 1 43 1 153 3 196 1 154 1 322 1 275 2 250 2 203 3 277 3 38 6 110 1 11 3 
0 34 62 1 64 5 257 5 143 3 215 2 196 3 322 1 9 3 38 10 110 1 11 5 13 3 289 16 290 1 17 1 150 3 43 7 133 1 294 1 115 4 152 3 153 5 91 1 52 1 93 1 154 2 275 12 250 18 203 5 24 1 53 5 277 5 30 1 
0 8 257 1 215 1 176 1 196 1 38 2 110 1 11 1 289 4 17 1 150 1 43 2 294 1 115 1 152 1 153 1 52 1 93 1 275 2 53 1 250 4 203 1 277 1 
0 11 64 1 257 2 143 1 215 1 176 1 196 1 9 1 38 4 110 1 11 2 289 6 17 1 43 2 150 1 294 1 115 2 152 1 153 2 52 1 93 1 275 3 53 1 250 5 203 2 24 1 277 2 30 1 
0 19 64 1 257 3 258 1 6 1 143 2 215 1 176 1 196 1 9 2 38 6 110 1 11 3 13 2 289 9 17 1 150 1 181 1 43 3 294 1 115 1 152 1 153 3 374 1 52 1 93 1 275 4 154 1 250 10 203 3 53 3 277 3 30 1 
0 17 64 2 257 3 258 1 6 1 143 2 215 1 176 1 196 1 9 2 38 6 110 1 11 3 13 1 289 10 17 1 150 1 43 3 181 1 294 1 115 1 152 1 153 3 374 1 52 1 93 1 154 1 275 5 250 7 203 3 53 2 277 3 30 1 
0 8 257 1 215 1 176 1 196 1 38 2 110 1 11 1 289 4 17 1 150 1 43 2 294 1 115 1 152 1 153 1 52 1 93 1 275 2 53 1 250 4 203 1 277 1 
0 12 64 1 257 2 258 1 6 1 143 2 176 1 9 2 38 2 110 1 11 1 13 2 289 6 43 1 181 1 294 1 115 1 152 1 153 1 374 1 275 2 250 6 203 1 53 2 277 1 
0 18 64 2 257 3 258 1 6 1 143 2 215 1 176 1 196 1 9 2 38 8 110 1 11 4 13 1 289 10 17 1 150 1 181 1 43 3 294 1 115 1 152 1 153 4 374 1 52 1 93 1 275 5 154 2 250 8 203 4 53 2 277 4 30 1 
0 16 64 3 257 3 258 1 6 1 143 3 176 1 9 3 38 8 110 1 11 4 13 2 289 9 290 1 181 1 43 3 294 1 115 1 152 1 153 4 374 1 275 6 154 2 250 7 203 4 53 2 277 4 
0 7 64 3 289 3 257 1 150 3 43 3 215 1 196 3 52 2 93 1 275 6 250 4 53 1 
0 18 64 1 257 3 258 1 6 1 143 2 215 1 176 1 196 1 9 2 38 8 110 1 11 4 13 1 289 10 290 1 17 1 150 1 181 1 43 3 294 1 115 1 152 1 153 4 374 1 52 1 93 1 275 4 154 2 250 8 203 4 53 2 277 4 
0 8 289 4 64 1 257 1 17 1 43 2 150 1 215 1 153 2 196 1 52 1 275 3 154 1 93 1 53 1 250 4 203 2 277 2 38 4 11 2 
0 6 289 3 257 1 17 1 150 1 43 2 215 1 196 1 52 1 93 1 275 2 250 3 53 1 94 1 
0 4 289 2 64 1 257 1 43 1 143 1 153 1 275 2 250 2 53 1 203 1 277 1 9 1 38 2 11 1 30 1 13 1 
0 7 289 3 64 1 257 1 43 1 294 1 143 1 115 2 152 1 275 2 53 1 250 4 24 1 9 1 13 1 
0 23 64 4 257 3 143 2 173 1 215 1 196 2 322 1 345 1 9 2 38 4 11 2 13 2 289 11 17 1 150 2 43 5 115 2 152 2 153 2 52 1 93 1 275 9 154 2 24 1 250 12 53 3 203 2 277 2 
0 1 250 1 115 1 
152 1 0 1 289 1 
98 1 0 6 289 3 64 1 257 1 43 2 143 1 153 1 275 3 203 1 250 3 53 1 277 1 9 1 38 2 11 1 30 1 13 1 
0 12 64 1 257 2 258 1 6 1 143 2 176 1 9 2 38 2 110 1 11 1 13 2 289 6 43 1 181 1 294 1 115 1 152 1 153 1 374 1 275 2 250 6 203 1 53 2 277 1 
0 6 289 3 64 1 257 1 150 1 43 1 215 1 196 1 275 2 53 1 250 3 
0 3 289 1 64 1 43 1 150 1 153 1 196 1 52 1 275 2 322 1 154 1 93 1 250 2 203 1 277 1 38 2 11 1 
326 1 243 1 68 1 372 1 18 1 342 1 343 1 354 1 217 1 254 1 78 1 318 1 
326 1 68 1 243 1 254 1 372 1 18 1 318 1 
280 1 179 1 367 1 351 4 264 4 164 1 248 1 70 1 195 1 87 1 175 1 146 4 348 1 
120 1 179 1 351 2 264 2 164 1 83 1 248 2 195 1 73 1 303 1 146 2 129 1 377 1 139 1 
49 1 63 1 179 1 146 1 264 1 351 1 367 1 267 1 84 1 248 1 
61 1 179 1 351 2 264 2 66 1 164 1 70 1 248 1 341 1 195 1 146 2 
179 2 15 1 367 1 351 4 264 5 66 1 164 3 70 1 248 2 171 1 195 2 73 1 175 1 87 1 146 5 348 1 
179 2 367 1 351 4 264 5 66 1 164 3 70 1 248 2 171 1 195 2 73 1 175 1 87 1 146 5 92 1 348 1 
140 1 179 1 367 1 351 1 264 1 68 2 164 1 372 1 248 1 18 1 195 1 146 1 360 1 129 1 54 1 204 1 254 2 253 1 
140 1 68 2 164 3 195 2 73 1 104 1 146 1 360 2 129 2 37 1 179 1 264 1 351 1 372 1 18 2 248 1 371 1 19 1 204 1 54 1 253 1 254 2 208 1 
280 1 140 1 68 2 164 3 195 2 73 1 104 1 146 2 360 2 129 2 37 1 349 1 179 1 264 2 351 2 372 1 18 2 248 1 371 1 19 1 204 1 54 1 254 2 208 1 
280 1 179 1 149 1 367 1 351 3 264 3 337 2 164 4 328 1 370 1 248 1 192 1 195 1 104 1 73 1 48 1 344 2 146 3 228 1 129 1 37 1 138 1 364 1 
140 1 337 1 68 1 164 1 33 1 166 1 125 1 73 1 344 1 146 1 360 1 218 1 149 1 264 1 351 1 328 1 370 1 18 1 50 1 254 1 356 1 208 1 
179 1 146 1 264 1 351 1 113 1 248 1 
61 1 120 1 179 2 15 1 66 1 367 2 351 6 264 7 113 1 164 3 167 1 202 1 83 1 171 1 70 1 248 3 214 1 195 2 146 7 25 1 129 1 
0 6 140 1 257 1 282 1 68 2 164 1 70 1 195 1 72 2 215 1 196 1 197 1 146 1 360 1 129 1 198 2 38 4 262 1 11 2 289 3 179 1 199 1 351 1 264 1 17 1 43 2 150 1 242 1 293 1 372 2 248 1 18 1 153 2 52 1 116 1 275 2 93 1 250 3 53 1 203 2 54 1 204 1 277 2 335 1 254 2 253 1 56 1 
257 2 337 2 68 1 164 1 166 1 125 1 212 2 215 1 344 2 218 1 80 1 131 1 16 2 81 1 264 1 351 1 269 1 18 1 353 1 88 1 274 4 276 2 29 1 356 1 316 5 140 1 33 1 103 2 144 1 105 2 146 1 196 1 360 1 240 1 149 2 367 1 150 1 328 2 370 1 331 1 48 1 50 1 53 2 254 1 208 1 
179 1 175 1 87 1 146 1 264 1 351 1 367 1 164 1 94 1 248 1 195 1 
140 1 179 1 367 1 351 1 264 1 68 2 164 1 372 1 248 1 18 1 195 1 146 1 360 1 129 1 54 1 204 1 254 2 349 1 
120 1 179 1 351 1 264 1 164 1 202 1 83 1 248 2 214 1 195 1 73 1 146 1 129 1 
179 1 351 2 264 2 113 1 164 2 70 1 192 1 248 2 214 1 195 1 146 2 129 1 251 1 
227 1 241 1 265 1 372 1 297 1 
240 1 149 1 241 2 337 2 265 2 328 1 244 1 372 1 371 1 19 1 227 1 344 2 27 1 12 1 58 1 364 1 208 1 297 2 41 1 
227 1 241 1 68 1 307 1 254 1 188 1 18 1 193 1 297 1 
227 1 244 1 12 1 
365 1 122 1 162 1 55 1 184 1 71 1 20 1 60 1 
365 4 366 1 122 2 162 1 123 1 210 2 184 4 71 1 194 1 20 2 261 1 106 1 205 1 55 3 
365 2 122 1 162 1 210 1 71 1 184 2 85 1 213 1 20 1 51 1 55 1 60 1 
365 3 122 1 261 2 366 2 162 1 205 1 55 1 330 1 184 3 71 1 20 1 60 1 
311 2 112 1 55 2 350 1 
365 1 162 1 107 1 184 1 71 1 60 1 
365 2 159 1 122 1 162 1 210 1 55 1 184 2 71 1 20 1 60 1 
42 1 
365 1 122 1 162 1 55 1 184 1 71 1 20 1 60 1 
365 1 122 1 162 1 55 1 184 1 71 1 20 1 
182 1 147 1 184 1 
365 3 90 1 122 1 261 2 366 1 162 1 205 1 55 1 184 3 71 1 20 1 60 1 
365 2 122 1 162 1 210 1 55 1 363 1 184 2 71 1 20 1 
365 1 158 1 63 1 200 1 162 1 84 1 71 1 184 1 194 1 55 1 60 1 
365 1 162 1 55 1 184 1 71 1 20 1 60 1 
365 1 122 1 162 1 184 1 71 1 20 2 60 1 
365 2 162 2 321 1 71 2 184 2 20 1 137 1 55 1 362 1 60 1 
365 3 159 1 122 1 162 1 123 1 210 2 71 1 184 3 194 1 20 1 332 1 55 2 60 1 
365 2 158 1 63 1 122 1 162 1 32 1 267 1 210 1 84 2 71 1 184 2 20 1 151 1 55 1 60 1 
365 4 122 1 162 2 123 1 210 2 71 2 184 4 194 1 20 1 117 1 55 2 363 1 60 1 
122 1 94 1 55 1 20 1 
365 3 159 1 122 1 261 1 162 1 210 1 55 1 184 3 71 1 20 1 60 1 
123 1 106 1 55 1 194 1 
55 1 20 1 

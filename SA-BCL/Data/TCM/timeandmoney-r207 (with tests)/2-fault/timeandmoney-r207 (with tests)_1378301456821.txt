#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 209 (29,177,274) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
122 3 175 1 306 1 226 2 322 3 341 2 111 2 47 1 332 1 186 1 66 1 285 1 67 1 
175 3 306 1 226 2 60 2 111 2 47 1 332 1 186 1 66 4 285 6 67 2 334 1 122 9 290 1 218 1 266 1 127 1 322 9 368 2 341 5 342 2 39 2 272 1 98 1 375 1 134 1 301 1 105 1 
175 3 306 1 226 2 60 2 111 2 47 1 332 1 186 1 66 4 285 6 67 2 334 1 122 9 290 1 218 1 266 1 127 1 322 9 368 2 341 5 342 2 39 2 272 1 98 1 375 1 134 1 301 1 105 1 
175 4 306 1 226 2 60 2 111 2 47 1 332 1 186 1 66 5 285 7 67 2 334 1 122 10 290 1 218 1 266 1 127 1 322 10 368 2 341 6 342 2 39 2 272 1 98 1 375 1 134 1 301 1 105 1 
175 2 306 1 226 2 60 2 111 2 47 1 332 1 186 1 66 3 285 4 67 2 334 1 122 7 290 1 218 1 266 1 127 1 322 7 368 2 341 4 342 2 39 1 272 1 98 1 375 1 134 1 301 1 
175 1 122 4 306 1 226 1 60 1 127 1 322 4 368 1 341 3 342 1 111 1 39 2 332 1 186 1 285 3 66 2 134 1 105 1 
122 2 352 1 306 1 226 1 60 1 268 1 22 1 322 2 368 1 341 1 111 1 98 1 332 1 186 1 375 1 67 1 
175 3 306 1 226 2 60 1 111 2 47 1 332 1 186 1 115 1 66 4 285 7 67 1 122 9 218 1 127 1 322 9 368 1 341 5 342 1 39 2 152 1 134 1 301 1 105 1 
175 3 306 1 226 2 60 1 111 2 47 1 332 1 186 1 115 1 66 4 285 7 67 1 122 9 218 1 127 1 322 9 368 1 341 5 342 1 39 2 152 1 134 1 301 1 105 1 
17 1 146 1 82 1 125 1 241 1 196 1 329 1 223 1 244 1 340 1 184 1 14 1 234 1 200 1 
109 1 
17 2 153 1 74 1 76 1 14 2 200 1 109 1 118 1 
17 5 261 1 225 1 366 2 325 1 337 1 108 1 109 1 4 2 74 1 140 2 76 1 14 5 169 1 200 2 201 1 213 1 118 2 57 1 
74 1 109 1 85 1 
110 1 238 2 109 1 
184 2 59 1 82 2 146 2 125 2 196 1 223 2 329 2 
248 2 250 1 327 1 206 1 59 1 82 2 278 1 309 1 181 1 329 2 46 2 183 1 184 3 331 1 91 1 92 1 117 2 119 1 236 1 120 1 262 1 265 1 124 1 267 1 146 2 125 2 167 2 34 1 196 1 223 3 35 1 199 1 344 1 346 1 373 1 170 1 298 2 
184 1 82 1 146 1 125 1 241 1 196 1 223 1 329 1 244 1 340 1 
17 1 27 1 195 1 241 1 109 1 312 1 329 1 223 1 74 1 184 1 171 1 14 1 258 1 103 1 
17 2 27 1 195 1 146 1 82 1 125 1 241 1 109 1 329 1 223 1 74 1 184 1 14 2 171 1 258 1 
17 1 14 1 49 1 200 1 118 1 
17 2 73 1 74 1 76 1 14 2 200 1 109 1 118 1 
17 1 14 1 118 1 
146 1 82 1 59 2 125 1 5 1 329 2 223 2 296 1 184 2 
215 1 276 1 315 1 
248 1 120 1 59 1 309 1 181 1 223 1 46 1 183 1 362 1 346 1 184 1 373 1 331 1 170 1 91 1 117 1 
59 1 85 1 
248 1 120 1 276 1 82 1 309 1 125 1 181 1 329 1 223 2 46 1 183 1 158 1 346 1 373 1 184 2 331 1 91 1 170 1 25 1 117 1 
158 1 184 3 146 1 59 1 82 3 125 3 223 3 329 3 
184 1 82 1 125 1 241 1 223 1 329 1 244 1 
296 1 184 1 82 1 146 1 125 1 241 1 5 1 223 1 329 1 
17 1 248 1 250 1 252 1 206 1 59 1 82 3 278 1 309 1 181 1 329 3 46 1 183 1 158 1 331 1 184 4 91 1 25 1 258 1 188 1 117 1 119 1 236 1 120 1 27 1 265 1 124 1 195 1 267 1 146 2 125 3 167 1 241 1 34 1 196 1 223 4 344 1 296 1 346 1 373 1 170 1 171 1 14 1 298 2 
158 1 184 2 347 1 59 1 82 1 125 1 312 1 223 2 329 2 
17 1 27 1 252 1 195 1 146 1 82 3 125 3 241 1 109 1 329 3 223 3 270 1 296 1 158 2 184 3 14 1 25 1 171 1 258 1 
276 1 146 1 82 2 125 2 329 2 223 2 158 1 296 1 184 2 315 1 
248 1 120 1 59 1 309 1 181 1 223 1 46 1 183 1 346 1 184 1 331 1 373 1 170 1 91 1 117 1 
248 1 120 1 106 1 59 1 181 1 222 1 223 1 46 1 183 1 346 1 184 1 373 1 170 1 91 1 117 1 
276 2 206 1 278 2 62 1 280 1 112 1 315 2 236 1 215 2 288 1 265 1 267 1 32 1 167 4 34 1 147 1 199 2 148 1 344 1 38 1 323 1 172 1 298 2 135 1 
184 1 171 1 82 1 125 1 241 1 223 1 329 1 129 1 
12 1 296 1 158 2 184 5 347 1 25 1 59 1 146 1 82 4 125 4 224 1 312 1 223 5 329 5 
184 2 82 2 125 2 241 1 129 1 223 2 329 2 244 1 
182 1 274 1 177 1 209 1 
182 1 274 1 29 1 
182 1 274 1 
182 1 274 1 
177 1 209 1 
177 1 209 1 
182 1 274 1 177 1 209 1 
64 1 182 1 274 1 
64 1 182 1 274 1 
64 1 182 1 274 1 
254 1 182 1 274 1 
254 1 182 1 274 1 
254 1 182 1 274 1 
205 2 17 2 274 2 216 1 335 1 353 1 20 2 109 1 3 2 45 1 182 2 284 1 211 1 359 2 24 3 14 2 143 1 53 1 302 2 
205 1 17 1 274 1 59 1 82 2 20 1 3 1 45 1 329 2 182 1 24 1 184 2 212 1 28 1 29 1 194 1 125 2 339 1 223 2 369 1 97 1 14 1 104 1 302 1 
198 1 342 1 352 1 379 2 368 2 
342 1 60 1 368 1 
352 1 60 1 368 1 
198 1 263 1 342 2 352 1 379 1 368 3 
198 1 342 1 352 1 50 1 379 1 368 2 
17 5 225 1 307 2 227 1 2 2 62 1 109 2 108 3 4 1 110 1 112 1 140 1 141 2 6 1 364 1 213 2 118 1 317 1 288 1 366 1 217 1 238 3 339 1 369 1 370 1 74 1 76 1 14 5 200 4 349 1 104 1 135 1 
17 9 225 1 138 1 227 1 2 6 62 3 109 5 108 8 4 2 110 3 112 3 140 2 141 6 364 2 49 5 213 6 118 6 237 1 288 3 366 2 238 9 294 1 239 1 339 4 370 2 371 1 74 1 75 5 372 1 76 1 169 1 14 9 200 7 349 3 135 3 
17 3 307 1 2 2 62 1 109 3 108 3 4 1 110 2 112 1 140 1 6 1 141 2 364 1 213 2 366 1 288 1 217 1 238 4 339 1 370 1 74 1 14 3 169 1 200 2 349 1 135 1 
17 4 138 1 307 2 2 4 62 2 109 4 108 5 4 1 110 3 112 2 140 1 141 4 6 1 364 1 213 4 366 1 288 2 217 1 238 7 339 2 370 1 371 1 74 1 372 1 14 4 169 1 200 3 349 2 135 2 
132 1 
373 1 293 1 85 1 
275 1 373 1 
120 1 373 1 
120 1 373 3 107 1 91 1 293 2 310 1 
120 1 373 1 91 1 
373 1 133 1 
287 1 80 2 278 3 354 1 167 7 11 1 130 1 199 4 112 1 38 3 114 1 323 2 174 1 135 1 79 1 55 1 203 1 378 1 
18 1 80 3 44 1 83 3 278 15 354 2 61 1 207 1 62 3 159 1 112 4 114 2 7 4 236 1 287 1 123 1 288 3 267 1 167 31 34 1 11 1 199 16 130 2 344 1 38 10 323 5 174 2 298 2 349 3 55 1 203 1 135 4 79 5 300 1 
80 2 278 4 354 1 61 1 112 1 114 1 236 2 267 2 70 1 33 1 167 9 34 2 11 1 199 5 130 1 344 2 38 4 323 3 174 1 298 4 135 1 79 1 203 1 55 1 
287 1 80 2 278 3 354 1 167 7 11 1 130 1 199 4 112 1 38 3 114 1 323 2 174 1 135 1 79 1 203 1 55 1 
287 1 80 2 278 3 354 1 167 7 11 1 130 1 199 4 112 1 38 3 114 1 323 2 174 1 135 1 79 1 203 1 55 1 
248 1 251 2 226 1 311 1 181 1 355 1 46 1 183 1 232 1 111 1 160 2 259 1 117 1 67 2 120 1 122 1 336 1 219 1 321 2 322 1 346 1 373 1 54 1 
248 1 137 1 352 1 251 1 306 1 226 1 60 1 46 1 283 1 183 1 255 1 111 1 142 1 160 1 117 1 67 1 263 1 122 1 318 1 321 1 322 1 368 2 342 1 346 1 151 1 348 1 
248 1 137 1 352 1 251 1 306 1 226 1 60 1 46 1 357 1 283 1 183 1 255 1 111 1 332 1 186 1 285 1 160 1 117 1 67 1 263 1 122 2 318 1 321 1 322 2 368 2 341 1 342 1 346 1 151 1 348 1 
248 1 304 1 137 1 352 1 251 1 226 1 60 1 46 1 283 1 183 1 255 1 111 1 142 1 332 1 186 1 160 1 259 1 285 2 117 1 67 1 263 1 122 3 318 1 321 1 322 3 368 2 341 1 342 1 346 1 151 1 
248 1 304 1 352 1 251 1 60 1 46 1 283 1 183 1 255 1 142 1 332 1 186 1 160 1 285 2 67 1 117 1 263 1 122 2 318 1 321 1 322 2 368 2 341 1 342 1 346 1 
100 1 
43 1 225 1 176 1 179 1 181 2 4 1 329 1 230 1 46 2 183 1 140 1 184 1 93 1 189 2 10 1 195 1 241 1 346 1 14 3 54 1 103 1 56 1 17 3 248 2 108 2 312 1 63 1 314 1 364 1 258 1 117 2 213 2 118 2 120 1 27 1 163 1 366 1 219 1 128 1 223 1 76 1 373 1 41 1 171 1 173 1 136 1 
17 3 153 1 27 1 195 1 241 1 179 1 312 1 128 1 329 1 223 1 63 1 76 1 184 1 41 1 171 1 14 3 258 1 173 1 189 2 103 1 118 2 260 1 
17 3 153 1 27 1 195 1 69 1 241 1 179 1 109 1 312 1 128 1 329 1 223 1 63 1 74 1 76 1 184 1 41 1 171 1 14 3 258 1 173 1 189 3 103 1 118 1 
17 3 153 1 179 1 312 1 109 1 329 1 63 1 184 1 258 1 189 3 118 2 260 1 27 1 195 1 69 1 241 1 223 1 128 1 74 1 76 1 41 1 40 1 14 3 171 1 173 1 103 1 
43 2 225 1 82 1 179 1 329 2 4 1 230 1 140 1 184 2 234 1 93 1 189 2 144 1 193 1 195 1 146 1 241 2 196 1 244 1 340 1 345 1 14 3 299 1 103 1 17 3 153 1 21 1 312 1 108 1 109 1 63 1 314 2 258 1 118 3 213 1 260 2 27 1 366 1 125 1 223 2 128 1 74 1 76 1 40 2 41 1 171 1 173 1 
17 2 43 1 225 1 176 1 179 1 108 1 312 1 4 1 329 1 230 1 63 1 140 1 184 1 314 1 258 1 93 1 189 2 213 1 27 1 366 1 195 1 241 1 128 1 223 1 41 1 14 2 171 1 173 1 103 1 
17 2 43 2 225 1 82 1 179 1 21 1 109 1 108 1 312 1 230 1 4 1 329 2 63 1 140 1 184 2 234 1 314 2 258 1 93 1 189 2 213 1 27 1 144 1 366 1 195 1 146 1 125 1 241 2 196 1 223 2 128 1 244 1 340 1 74 1 345 1 41 1 14 2 171 1 173 1 103 1 
17 2 43 2 225 1 82 1 179 1 21 1 109 1 108 1 312 1 230 1 4 1 329 2 63 1 140 1 184 2 234 1 314 2 258 1 93 1 189 2 213 1 27 1 144 1 366 1 195 1 146 1 125 1 241 2 196 1 223 2 128 1 244 1 340 1 74 1 345 1 41 1 14 2 171 1 173 1 103 1 
17 2 43 2 225 1 82 1 179 1 109 1 108 1 312 1 4 1 329 2 63 1 231 1 88 1 140 1 184 2 234 1 314 2 258 1 93 1 189 2 213 1 27 1 366 1 195 1 146 1 125 1 241 2 196 1 223 2 128 1 244 1 340 1 271 1 74 1 345 1 41 1 14 2 171 1 173 1 103 1 
43 2 225 1 82 1 179 1 329 2 4 1 230 1 140 1 184 2 234 1 93 1 189 3 144 1 193 1 195 1 146 1 241 2 196 1 244 1 340 1 345 1 14 2 103 1 17 2 21 1 312 1 108 1 109 1 63 1 314 2 258 1 118 1 213 1 260 1 27 1 366 1 69 1 125 1 128 1 223 2 74 1 40 1 41 1 171 1 173 1 
43 2 225 1 82 1 179 1 329 2 4 1 230 1 140 1 184 2 234 1 93 1 189 3 144 1 193 1 195 1 146 1 241 2 196 1 244 1 340 1 345 1 14 2 103 1 17 2 21 1 312 1 108 1 109 1 63 1 314 2 258 1 118 1 213 1 260 1 27 1 366 1 69 1 125 1 128 1 223 2 74 1 40 1 41 1 171 1 173 1 
17 2 43 1 225 1 176 1 179 1 108 1 312 1 4 1 329 1 63 1 88 1 140 1 184 1 314 1 258 1 93 1 189 2 213 1 27 1 366 1 195 1 241 1 128 1 223 1 41 1 14 2 171 1 173 1 103 1 
248 8 303 1 250 1 327 2 206 2 82 1 278 1 280 1 181 2 329 1 46 7 357 1 183 2 158 1 184 1 142 1 48 1 363 1 117 8 236 2 120 2 164 1 265 2 219 1 96 1 267 2 125 1 167 2 34 2 223 1 35 1 199 1 344 2 346 2 373 3 374 1 298 4 54 1 15 1 
276 1 206 1 82 1 278 2 62 1 329 1 358 1 112 1 184 1 315 1 215 1 236 1 288 1 265 1 146 1 267 1 125 1 167 3 34 1 223 1 199 1 296 1 344 1 38 1 245 1 323 1 298 2 349 1 135 1 
80 1 276 1 206 1 59 2 278 3 280 1 85 1 112 1 114 1 315 1 236 1 215 1 265 1 267 1 167 6 34 1 11 1 199 3 344 1 38 2 323 2 174 1 298 2 55 1 203 1 135 1 
250 1 18 1 0 1 276 11 206 1 59 1 278 6 83 3 62 1 112 1 7 3 315 4 236 2 215 11 123 1 145 1 288 2 265 2 267 2 165 1 269 1 167 14 34 2 35 1 199 8 344 2 38 2 245 1 323 1 298 4 349 2 79 1 135 2 
248 1 250 1 206 1 59 1 82 1 309 1 278 1 181 1 329 1 46 1 183 1 158 1 362 1 113 1 331 1 184 2 91 1 315 1 25 1 117 1 161 1 120 1 236 1 265 1 267 1 367 1 125 1 167 2 34 1 223 2 35 1 199 1 344 1 346 1 373 1 245 1 170 1 298 2 
80 1 276 7 82 1 278 10 181 1 329 1 330 1 46 3 183 2 233 2 184 3 331 2 142 1 90 2 91 2 236 3 288 2 51 1 240 2 11 1 199 10 344 3 346 2 245 1 298 6 349 2 55 1 203 1 246 1 16 2 248 3 250 1 206 3 59 2 309 2 62 2 158 1 112 3 114 1 25 1 315 7 117 3 120 2 215 7 265 3 124 2 267 3 125 1 167 20 34 3 223 3 35 1 38 8 373 2 323 4 170 2 174 1 135 3 79 4 
215 1 236 1 288 1 276 1 265 1 206 1 267 1 32 1 167 2 280 1 34 1 199 2 344 1 38 1 315 1 298 2 79 1 135 1 
215 1 236 1 276 1 265 1 206 1 267 1 278 2 167 2 280 1 34 1 62 1 147 1 344 1 38 1 112 1 323 1 315 1 298 2 
215 2 236 1 288 1 276 2 265 1 206 1 267 1 278 2 167 4 62 1 280 1 34 1 199 2 344 1 112 1 38 2 323 1 315 2 298 2 349 1 79 1 135 1 
215 1 303 1 236 1 288 1 276 1 265 1 206 1 267 1 32 1 167 2 34 1 199 2 344 1 38 1 315 1 298 2 79 1 135 1 
215 1 303 1 236 1 276 1 265 1 206 1 267 1 278 2 167 2 34 1 62 1 147 1 344 1 38 1 112 1 323 1 315 1 298 2 
215 2 303 1 236 1 288 1 276 2 265 1 206 1 267 1 278 2 167 4 62 1 34 1 199 2 344 1 112 1 38 2 323 1 315 2 298 2 349 1 79 1 135 1 
215 2 236 1 288 1 276 2 265 1 206 1 267 1 278 2 167 4 62 1 34 1 199 2 344 1 112 1 38 2 323 1 315 2 298 2 349 1 79 1 135 1 
248 1 250 1 206 1 59 1 309 1 278 1 181 1 46 1 183 1 331 1 184 1 91 1 117 1 120 1 236 1 124 1 265 1 267 1 167 2 34 1 223 1 35 1 199 1 344 1 346 1 373 1 170 1 298 2 
248 1 250 1 106 1 206 1 59 1 278 1 229 1 181 1 46 1 183 1 184 1 91 1 117 1 120 1 236 1 265 1 267 1 167 2 34 1 222 1 223 1 35 1 199 1 344 1 346 1 373 1 170 1 298 2 
215 2 236 1 288 1 276 2 265 1 206 1 267 1 278 2 167 4 62 1 34 1 199 2 344 1 112 1 38 2 245 1 323 1 315 2 298 2 349 1 79 1 135 1 
248 1 276 2 206 1 278 2 309 1 62 1 46 1 357 1 183 1 112 1 233 1 331 1 184 1 315 2 91 1 117 1 215 2 120 1 236 1 288 1 124 1 265 1 267 1 167 4 34 1 223 1 199 2 344 1 38 2 346 1 373 1 323 1 170 1 298 2 349 1 79 1 135 1 
276 1 206 1 82 1 278 1 62 1 329 1 156 1 112 1 184 1 315 1 236 1 215 1 288 1 265 1 146 1 267 1 125 1 167 3 34 1 223 1 199 2 296 1 344 1 38 1 245 1 298 2 349 1 79 1 135 1 
249 1 18 1 278 10 83 1 62 3 313 1 112 3 256 1 7 2 236 2 123 1 288 3 320 2 267 2 292 2 221 1 33 1 167 19 34 2 72 1 199 9 344 2 38 6 77 1 323 3 297 1 298 4 349 3 135 3 79 3 
81 1 278 12 83 2 61 2 84 1 62 2 112 2 313 2 7 2 236 3 121 1 123 2 289 1 288 3 320 4 267 3 292 1 221 1 33 1 167 26 34 3 72 1 199 14 344 3 38 4 77 1 323 2 297 2 377 1 298 6 376 1 349 3 79 2 135 3 
18 1 80 1 81 1 278 21 83 3 61 1 84 1 62 4 313 1 112 5 256 1 114 1 7 4 236 3 121 1 123 3 289 1 288 4 320 4 267 3 292 1 221 1 33 1 167 41 34 3 11 1 72 1 199 20 343 1 344 3 38 8 77 1 323 4 174 1 297 2 377 1 376 1 298 6 349 4 55 1 203 1 135 5 79 4 
18 1 80 1 81 1 278 18 83 3 61 2 84 1 62 3 313 1 112 4 256 1 114 1 7 4 236 4 121 1 123 3 289 1 288 4 320 4 267 4 292 1 221 1 33 1 167 38 34 4 11 1 72 1 199 20 343 1 344 4 38 7 77 1 323 4 174 1 297 2 377 1 376 1 298 8 349 4 55 1 203 1 135 5 79 3 
18 2 80 1 81 1 278 25 83 4 61 1 84 1 62 7 313 1 112 8 114 1 7 4 236 2 121 1 123 2 289 1 288 7 320 4 267 2 292 1 165 2 221 1 33 1 167 52 34 2 11 1 72 1 199 27 344 2 38 14 77 1 323 7 174 1 297 1 377 1 376 1 298 4 349 7 55 1 203 1 135 8 79 7 
182 1 205 1 274 1 211 1 216 1 335 1 20 1 3 1 204 1 302 1 
29 1 97 1 
182 1 205 1 274 1 99 1 178 1 20 1 235 1 3 1 302 1 
17 1 205 1 274 1 216 1 335 1 20 1 109 1 45 1 3 1 182 1 284 1 211 1 359 1 24 2 14 1 143 1 53 1 302 1 
17 1 205 1 274 1 216 1 335 1 20 1 109 1 45 1 3 1 182 1 284 1 211 1 359 1 24 2 14 1 143 1 53 1 302 1 
17 1 205 1 274 1 216 1 335 1 20 1 109 1 45 1 3 1 182 1 284 1 211 1 359 1 24 2 14 1 143 1 53 1 302 1 
64 1 220 1 228 1 
64 1 220 1 228 1 
254 1 36 1 
254 1 36 1 220 1 
194 1 212 1 
17 1 205 1 274 1 305 1 59 1 82 2 20 1 3 1 329 2 182 1 359 1 24 1 184 2 212 1 28 1 29 1 194 1 125 2 339 1 223 2 369 1 97 1 14 1 200 1 53 1 104 1 302 1 
64 1 228 1 
254 1 36 1 220 1 
248 2 250 1 154 1 327 2 206 1 278 1 356 1 329 2 87 1 46 2 183 1 184 2 117 2 120 1 236 1 164 1 265 1 267 1 167 2 34 1 223 2 35 1 197 1 199 1 344 1 346 1 373 1 245 1 52 1 298 2 15 1 
248 1 120 1 251 1 219 1 181 1 355 1 46 1 183 1 346 1 373 1 117 1 202 1 54 1 78 1 
248 1 286 1 263 1 352 1 137 1 318 1 251 1 60 1 281 1 368 2 46 1 283 1 183 1 342 1 346 1 142 1 117 1 78 1 
248 2 286 1 263 1 352 1 137 1 318 1 251 1 60 1 281 1 368 2 46 2 357 1 283 1 183 1 342 1 346 1 142 1 117 2 78 1 
248 1 286 1 263 1 352 1 192 1 137 1 318 1 251 1 60 1 368 2 46 1 283 1 183 1 342 1 346 1 142 1 117 1 
328 1 
225 1 366 1 325 1 337 1 109 1 108 1 4 1 74 1 140 1 213 1 
288 2 319 2 238 10 240 1 2 5 109 5 62 2 108 5 243 1 110 5 112 2 141 5 349 2 135 2 213 5 
17 1 74 1 76 1 14 1 109 1 118 1 
247 1 248 4 17 3 225 1 1 2 108 2 181 2 4 2 46 4 183 1 140 2 364 2 117 4 118 4 213 2 120 1 163 1 366 2 219 1 30 1 10 1 346 1 373 1 76 2 169 1 14 3 102 1 54 1 136 2 
74 1 325 1 337 1 108 1 109 1 85 1 213 1 
17 1 225 1 108 1 109 2 155 1 230 1 4 1 110 1 140 1 316 1 213 1 118 1 366 1 238 1 74 1 76 1 14 1 
275 3 225 4 325 1 277 2 326 2 1 1 2 6 181 1 4 4 46 3 183 4 139 1 89 1 140 4 141 6 91 3 288 2 337 1 238 12 293 2 240 2 338 1 243 2 346 3 14 5 349 2 350 2 247 1 248 3 17 5 310 1 108 9 109 8 62 2 357 1 157 2 110 6 112 2 364 2 117 3 214 2 118 5 213 8 120 3 27 2 366 4 319 2 166 2 74 2 373 10 76 3 133 2 135 2 136 1 
17 1 225 2 83 1 2 5 84 1 108 8 109 5 62 2 253 1 4 2 110 3 112 2 140 2 141 5 7 1 364 1 118 1 213 5 121 1 123 1 289 1 366 2 288 2 319 2 238 6 243 1 74 2 168 1 76 1 14 1 377 1 376 1 349 2 135 2 136 1 
17 1 225 1 82 1 108 2 4 1 329 1 112 1 140 1 184 1 114 1 234 1 213 2 190 1 144 1 366 1 319 2 146 1 125 1 241 1 243 1 196 1 223 1 244 1 340 1 11 1 14 1 174 1 135 2 
248 1 250 1 206 1 59 1 82 2 278 1 309 1 181 1 329 2 46 1 183 1 184 3 331 1 91 1 117 1 119 1 120 1 236 1 124 1 265 1 267 1 146 2 125 2 167 1 34 1 196 1 223 3 344 1 346 1 373 1 170 1 298 2 
225 1 80 1 366 1 238 4 2 2 108 1 109 4 4 1 110 2 74 2 140 1 141 2 364 1 213 2 136 1 
95 1 216 1 194 1 20 1 3 1 
257 1 20 1 3 1 
257 1 20 1 3 1 
257 1 20 1 3 1 
20 1 351 1 3 1 
20 1 351 1 3 1 
20 1 351 1 3 1 
20 1 3 1 
182 1 274 1 
236 1 267 1 278 5 33 1 167 10 34 1 11 1 199 5 344 1 38 5 112 2 114 2 323 3 174 2 298 2 79 2 135 2 190 1 
236 1 288 1 267 1 33 1 167 2 34 1 199 2 344 1 38 1 298 2 135 1 79 1 
236 1 288 1 267 1 278 2 33 1 167 4 62 1 34 1 199 2 344 1 112 1 38 2 323 1 298 2 349 1 135 1 79 1 
236 3 267 3 278 2 61 1 167 3 33 1 34 3 199 1 344 3 38 2 256 1 114 1 323 1 116 1 174 1 298 6 79 1 
18 1 80 1 44 1 278 18 83 3 61 2 207 1 62 3 112 5 114 3 256 1 7 4 187 1 116 1 236 5 123 1 288 3 267 5 33 1 167 34 34 5 11 2 199 16 344 5 38 12 323 7 174 3 298 10 349 3 55 1 203 1 135 5 79 5 300 1 
80 1 83 1 278 4 112 1 114 1 7 1 236 1 123 1 267 1 167 8 33 1 34 1 11 1 199 4 344 1 38 2 323 2 174 1 376 1 298 2 135 1 203 1 55 1 
18 1 80 1 278 5 83 1 112 1 114 1 7 2 187 1 236 2 123 1 288 1 267 2 167 11 33 1 34 2 11 1 199 6 344 2 38 3 323 2 174 1 376 1 298 4 349 1 55 1 203 1 135 2 79 1 
80 1 83 1 278 10 61 1 84 1 62 2 112 3 114 1 7 1 187 1 236 3 121 1 123 1 288 2 289 1 267 3 167 19 33 1 34 3 11 1 199 9 344 3 38 4 323 3 174 1 377 1 376 1 298 6 349 2 55 1 203 1 79 1 135 3 
80 1 83 1 278 7 61 1 84 1 62 1 112 2 114 1 7 1 187 1 236 3 121 1 123 1 288 2 289 1 267 3 167 17 33 1 34 3 11 1 199 10 344 3 38 5 323 3 174 1 376 1 298 6 377 1 349 2 55 1 203 1 79 2 135 3 
80 1 83 1 278 4 112 1 114 1 7 1 236 1 123 1 267 1 167 8 33 1 34 1 11 1 199 4 344 1 38 2 323 2 174 1 376 1 298 2 135 1 203 1 55 1 
83 1 278 6 84 1 62 2 112 2 7 1 236 1 121 1 123 1 288 2 289 1 267 1 167 12 33 1 34 1 199 6 344 1 38 2 323 1 376 1 298 2 377 1 349 2 79 1 135 2 
80 1 278 8 83 1 61 2 84 1 62 1 112 2 114 1 7 1 187 1 236 4 121 1 123 1 289 1 288 2 267 4 167 18 33 1 34 4 11 1 199 10 344 4 38 5 323 3 174 1 377 1 376 1 298 8 349 2 55 1 203 1 79 2 135 3 
278 7 83 1 61 2 84 1 62 2 112 2 256 1 7 1 236 4 121 1 123 1 289 1 288 3 267 4 167 16 33 1 34 4 199 9 344 4 38 6 323 3 377 1 376 1 298 8 349 3 79 3 135 3 
278 4 167 7 11 1 199 3 112 1 38 6 114 3 323 3 174 3 203 1 55 2 79 3 135 1 
80 1 278 8 83 1 61 2 84 1 62 1 112 2 114 1 256 1 7 1 236 4 121 1 123 1 289 1 288 2 267 4 167 18 33 1 34 4 11 1 199 10 344 4 38 4 323 3 174 1 377 1 376 1 298 8 349 2 55 1 203 1 79 1 135 3 
236 2 80 1 267 2 278 4 61 1 167 8 34 2 11 1 199 4 344 2 112 1 38 3 114 1 323 2 174 1 298 4 135 1 79 1 203 1 55 1 
80 1 278 3 167 6 85 1 11 1 199 3 38 2 112 1 114 1 323 2 174 1 203 1 55 1 135 1 
236 1 288 1 267 1 278 2 167 4 62 1 34 1 199 2 344 1 112 1 38 2 323 1 187 1 298 2 349 1 135 1 79 1 
18 1 123 1 288 1 278 4 83 1 167 7 62 1 199 3 112 1 38 2 323 1 7 2 349 1 135 1 79 1 
18 1 80 1 83 2 278 12 61 2 62 2 112 3 114 2 7 2 116 1 236 2 288 2 267 2 165 1 167 23 269 1 34 2 11 1 199 11 344 2 38 9 323 5 174 2 298 4 349 2 55 1 203 1 79 4 135 3 
7 1 278 1 167 1 
199 1 83 1 167 1 
236 1 288 1 267 1 278 3 240 1 167 6 34 1 62 1 199 3 344 1 38 3 112 1 323 2 187 1 298 2 349 1 135 1 79 1 
83 1 278 6 84 1 62 2 112 2 7 1 236 1 121 1 123 1 288 2 289 1 267 1 167 12 33 1 34 1 199 6 344 1 38 2 323 1 376 1 298 2 377 1 349 2 79 1 135 2 
278 3 167 6 11 1 199 3 112 1 38 2 114 1 323 1 174 1 135 1 79 1 
236 1 267 1 278 2 61 1 167 3 34 1 199 1 344 1 38 2 114 1 323 1 174 1 116 1 298 2 79 1 55 1 203 1 
184 1 347 1 59 1 242 1 312 1 223 1 329 1 
59 1 180 1 242 1 312 1 329 1 223 1 23 1 360 1 184 1 347 1 131 1 8 1 
191 1 248 4 120 1 219 1 126 1 181 1 46 4 357 1 183 1 346 1 373 1 117 4 54 1 
248 2 120 1 1 1 208 1 46 2 86 1 183 2 150 1 346 1 373 1 91 1 117 2 246 1 68 1 
248 1 183 1 352 1 318 1 346 1 60 1 117 1 181 1 368 1 46 1 
248 2 357 1 183 1 120 1 197 1 346 1 164 1 373 1 142 1 117 2 46 2 
248 5 120 2 219 1 164 1 126 1 1 1 181 1 46 4 357 1 183 2 346 2 373 3 48 1 374 1 54 1 117 5 
248 5 120 2 219 1 164 1 126 1 1 1 181 1 46 4 357 1 183 2 37 1 346 2 373 3 374 1 54 1 117 5 
248 1 183 1 120 1 346 1 219 1 373 1 54 1 117 1 85 1 181 1 46 1 
248 1 120 1 59 1 82 1 125 1 309 1 181 1 329 1 223 2 46 1 183 1 158 1 346 1 373 1 184 2 91 1 170 1 117 1 
248 1 277 1 59 1 82 1 309 1 1 1 329 2 46 1 183 1 158 1 184 2 91 2 258 1 117 1 120 2 125 2 241 1 223 2 346 1 373 3 170 1 171 1 133 1 
248 2 106 1 277 1 59 1 82 1 1 1 329 2 46 2 183 1 158 1 184 2 91 2 258 1 117 2 191 1 120 2 125 2 241 1 223 2 346 1 373 3 170 1 171 1 133 1 
248 3 17 2 275 1 277 1 1 1 109 1 181 1 46 3 183 1 361 1 91 1 117 3 26 1 118 1 191 1 120 1 27 1 293 1 74 1 346 1 373 4 14 2 133 1 
191 1 17 2 248 3 27 1 120 1 275 1 277 1 293 1 1 1 109 1 181 1 46 3 183 1 74 1 346 1 373 4 91 1 14 2 117 3 133 1 214 1 118 1 
248 1 183 1 346 1 96 1 117 1 46 1 
248 7 120 2 264 1 164 1 327 1 96 1 310 1 181 2 46 6 357 1 183 3 150 1 346 2 373 3 142 1 48 1 363 1 374 1 91 1 117 7 68 1 
80 1 276 1 82 1 278 3 329 1 46 1 183 1 233 1 331 1 184 2 91 1 236 2 11 1 199 3 344 2 346 1 245 1 298 4 203 1 55 1 16 1 248 1 206 2 59 2 309 1 356 1 357 1 158 1 112 1 114 1 315 1 117 1 120 1 215 1 124 1 265 2 267 2 125 1 167 6 34 2 223 2 38 2 373 1 170 1 323 2 174 1 135 1 
248 1 247 1 17 3 275 1 225 2 325 1 108 1 109 1 181 1 4 2 46 1 157 1 140 2 117 1 213 1 214 1 118 2 27 1 366 2 337 1 293 1 166 1 74 1 373 2 76 1 14 3 200 1 350 1 
248 2 120 1 96 1 293 1 310 1 46 2 357 1 183 2 89 1 346 1 373 2 91 1 117 2 
248 1 120 1 106 1 59 1 82 1 125 1 181 1 329 1 223 2 46 1 183 1 158 1 346 1 373 1 184 2 91 1 170 1 117 1 
248 1 120 1 264 1 1 1 310 1 46 1 183 2 150 1 346 1 373 1 91 1 117 1 68 1 
13 1 19 1 59 1 308 1 333 1 
17 2 27 1 252 1 19 2 195 1 59 1 308 2 241 1 109 1 279 1 282 1 74 1 13 2 171 1 14 2 258 1 200 1 365 1 333 1 
13 1 184 1 154 1 19 1 52 1 333 1 223 1 329 1 87 1 
282 1 365 1 333 1 
341 1 122 1 111 1 306 1 226 1 332 1 186 1 322 1 
122 4 175 1 226 1 58 1 291 1 322 4 295 1 341 3 111 1 375 1 332 2 186 2 285 2 66 1 
122 2 306 1 226 1 322 2 341 1 210 1 111 1 273 1 332 1 152 1 186 1 285 1 
122 3 306 1 226 1 291 2 322 3 295 1 341 1 111 1 375 2 186 1 332 1 94 1 
341 2 185 2 31 1 71 1 
122 1 111 1 306 1 226 1 322 1 42 1 
341 1 122 2 111 1 306 1 226 1 332 1 186 1 285 1 322 2 301 1 
101 1 
341 1 122 1 111 1 306 1 226 1 332 1 186 1 322 1 
341 1 332 1 186 1 85 1 
341 1 122 1 111 1 226 1 332 1 186 1 322 1 
122 1 321 1 67 1 
122 3 306 1 226 1 291 1 322 3 341 1 295 1 111 1 65 1 375 2 186 1 332 1 
341 1 122 2 111 1 39 1 226 1 332 1 186 1 285 1 322 2 
341 1 342 1 122 1 111 1 306 1 226 1 60 1 66 1 134 1 322 1 368 1 
341 1 122 1 111 1 306 1 226 1 332 1 322 1 
122 1 111 1 306 1 226 1 332 2 186 1 322 1 
341 1 162 1 122 2 149 1 111 2 306 1 226 2 9 1 332 1 322 2 
122 3 175 1 306 1 226 1 218 1 322 3 341 2 111 1 332 1 186 1 285 2 66 1 301 1 
263 1 352 1 122 2 306 1 226 1 60 1 322 2 368 2 341 1 342 1 111 1 332 1 186 1 285 1 324 1 
122 4 175 1 306 1 226 2 322 4 341 2 111 2 39 1 332 1 186 1 285 2 66 1 105 1 
341 1 122 3 111 1 306 1 226 1 332 1 186 1 375 1 285 1 322 3 301 1 
341 1 175 1 58 1 66 1 
341 1 332 1 

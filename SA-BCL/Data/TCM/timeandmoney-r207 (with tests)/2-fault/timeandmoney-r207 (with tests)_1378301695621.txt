#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (336,367) (336,367) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (336,367) (336,367) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (336,367) (336,367) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (336,367) (336,367) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 48 (77,169,348) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONDITION | 627 | if (x) -> if (!x)
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
50 1 94 1 248 1 194 1 336 1 347 1 367 1 1 1 49 1 285 1 125 1 
50 1 94 1 248 1 194 1 336 1 347 1 367 1 1 1 49 1 285 1 125 1 
50 1 94 1 248 1 194 1 336 1 347 1 367 1 1 1 49 1 285 1 125 1 
50 1 94 1 248 1 194 1 336 1 347 1 367 1 1 1 49 1 285 1 125 1 
323 1 140 1 129 3 34 1 35 1 341 1 1 4 255 1 285 1 61 1 50 4 194 1 248 1 257 1 220 2 288 3 209 2 334 1 
295 1 94 1 140 1 161 1 129 1 34 1 300 1 1 2 285 1 78 1 125 1 50 2 194 1 248 1 257 1 334 1 
129 2 34 1 1 3 341 1 285 1 125 1 50 3 194 2 248 2 257 1 220 1 288 1 306 1 
140 1 46 1 341 3 1 9 255 1 285 1 125 1 50 9 101 1 257 1 288 7 209 2 51 1 323 1 129 5 34 1 35 1 61 1 248 2 194 2 220 4 354 1 306 1 334 1 
140 1 46 1 341 3 1 9 255 1 285 1 125 1 50 9 101 1 257 1 288 7 209 2 51 1 323 1 129 5 34 1 35 1 61 1 248 2 194 2 220 4 354 1 306 1 334 1 
45 1 127 1 233 1 
45 1 185 2 54 1 
114 2 155 2 296 2 340 2 372 2 240 1 117 2 284 1 
225 1 337 1 230 1 254 1 200 1 201 1 340 3 175 2 284 1 344 1 208 1 6 1 258 2 260 1 80 1 240 1 294 2 155 2 296 2 128 1 186 1 372 2 19 1 301 1 325 1 190 1 350 1 64 1 113 2 114 3 157 1 328 1 156 2 70 1 42 1 117 2 158 1 
114 1 155 1 296 1 174 1 340 1 372 1 252 1 117 1 284 1 177 1 
182 1 228 1 121 1 45 1 372 1 340 1 177 1 114 1 219 1 89 1 7 1 32 1 127 1 239 1 
182 2 296 1 155 1 228 1 121 2 45 1 372 1 340 1 177 1 114 1 89 1 7 1 127 1 239 1 117 1 
182 1 121 1 352 1 60 1 362 1 
178 1 182 2 121 2 352 1 45 1 127 1 60 1 13 1 
182 1 121 1 60 1 
182 1 224 1 121 1 296 1 155 1 174 1 372 1 340 1 284 1 177 1 114 1 352 1 252 1 117 1 
45 1 
182 2 121 2 199 1 352 1 45 1 127 1 60 1 13 1 
242 1 182 5 72 1 313 1 15 1 121 5 267 1 299 2 45 1 109 1 316 1 60 2 198 2 40 1 352 2 8 1 272 2 127 1 13 1 
233 1 240 1 
296 1 155 1 122 1 372 2 340 2 114 2 223 1 117 1 240 2 
311 1 63 1 53 1 
225 1 230 1 201 1 340 1 19 1 175 1 270 1 114 1 156 1 344 1 258 1 70 1 260 1 80 1 240 1 158 1 
311 1 335 1 154 1 225 1 155 1 230 1 201 1 372 1 340 2 19 1 175 1 114 2 344 1 156 1 258 1 70 1 80 1 260 1 117 1 158 1 
335 1 114 3 296 1 155 3 340 3 372 3 240 1 117 3 
114 1 155 1 340 1 372 1 252 1 117 1 177 1 
114 1 155 1 296 1 122 1 340 1 372 1 223 1 117 1 177 1 
335 1 225 1 228 1 121 1 122 1 337 1 230 1 200 1 201 1 340 4 175 1 284 1 177 1 344 1 208 1 7 1 258 1 80 1 260 1 239 1 240 1 294 1 154 1 182 1 296 2 155 3 128 1 186 1 372 3 19 1 325 1 190 1 64 1 113 2 114 4 65 1 157 1 89 1 156 1 250 1 70 1 42 1 117 3 158 1 
335 1 114 2 219 1 358 1 155 1 340 2 372 2 240 1 117 1 
335 2 182 1 154 1 296 1 121 1 155 3 228 1 122 1 45 1 372 3 340 3 302 1 177 1 114 3 89 1 250 1 7 1 239 1 117 3 
335 1 311 1 296 1 155 2 122 1 372 2 340 2 114 2 117 2 53 1 
225 1 230 1 201 1 340 1 175 1 19 1 114 1 156 1 344 1 258 1 70 1 260 1 80 1 240 1 158 1 
211 1 230 1 201 1 340 1 175 1 19 1 247 1 114 1 156 1 344 1 258 1 70 1 80 1 240 1 158 1 
311 2 173 1 337 1 254 2 200 1 5 1 343 1 287 1 320 1 10 1 238 1 53 2 81 1 294 4 263 1 128 1 325 1 217 1 63 2 113 2 64 2 157 1 69 1 42 1 
114 1 228 1 155 1 266 1 340 1 372 1 117 1 177 1 
335 2 154 1 358 1 155 4 296 1 122 1 372 5 340 5 38 1 114 5 219 1 117 4 240 1 119 1 
114 2 155 2 266 1 340 2 372 2 252 1 117 2 177 1 
329 1 77 1 
329 1 77 1 
169 1 48 1 
169 1 48 1 
329 1 169 1 48 1 77 1 
329 1 12 1 77 1 
329 1 169 1 48 1 77 1 
329 1 348 1 77 1 
329 1 12 1 77 1 
329 1 12 1 77 1 
68 1 329 1 77 1 
68 1 329 1 77 1 
68 1 329 1 77 1 
322 2 182 2 121 2 18 2 45 1 124 2 216 1 218 1 36 1 77 2 246 2 103 1 329 2 222 1 330 1 236 3 105 1 290 2 261 1 
121 1 359 1 340 2 77 1 4 1 236 1 290 1 240 1 261 1 322 1 182 1 155 2 297 1 18 1 244 1 372 2 348 1 246 1 114 2 249 1 329 1 331 1 117 2 118 1 
323 1 140 1 334 1 
140 1 334 1 78 1 
323 2 229 1 140 3 307 1 78 1 88 1 
323 1 140 2 52 1 307 1 78 1 88 1 
323 1 140 2 307 2 78 1 88 1 
121 5 139 1 44 1 45 2 75 1 147 1 5 1 150 2 289 2 238 1 127 1 54 1 13 1 242 3 83 1 182 5 263 1 15 1 298 2 299 1 244 1 185 3 60 1 191 1 198 1 69 1 40 2 352 4 331 1 272 1 118 1 277 1 
227 1 121 9 139 1 44 2 45 5 75 2 316 1 318 1 362 5 5 3 150 6 289 6 238 3 127 1 54 3 13 1 242 8 182 9 263 3 15 1 299 2 185 9 60 6 20 1 112 1 198 2 90 1 91 1 69 3 40 6 352 7 116 5 272 2 118 4 277 3 
121 3 44 1 45 3 75 1 316 1 5 1 150 2 127 1 238 1 289 2 54 2 242 3 83 1 182 3 263 1 298 1 299 1 185 4 191 1 198 1 69 1 352 2 40 2 272 1 118 1 277 1 
121 4 44 1 45 4 75 1 316 1 318 1 5 2 150 4 127 1 289 4 238 2 54 3 242 5 83 1 182 4 263 2 298 2 299 1 185 7 191 1 198 1 90 1 91 1 69 2 352 3 40 4 272 1 118 2 277 2 
19 1 233 1 62 1 
346 1 19 1 
30 1 
344 1 19 1 
278 1 14 1 344 1 70 1 19 3 62 2 
344 1 70 1 19 1 
73 1 19 1 
294 7 254 4 58 1 130 1 145 1 205 1 64 3 5 1 287 2 69 1 320 3 25 1 67 1 136 1 26 1 275 1 253 2 
294 7 254 4 58 1 130 1 145 1 205 1 64 3 5 1 287 2 69 1 320 3 25 1 67 1 136 1 26 1 275 1 253 2 
294 7 16 1 254 4 58 1 130 1 145 1 205 1 64 3 5 1 287 2 69 1 320 3 67 1 25 1 136 1 26 1 275 1 253 2 
254 16 145 2 146 1 205 2 163 4 256 1 126 1 5 4 287 5 179 1 320 10 238 3 55 1 294 31 263 3 33 1 128 1 130 2 58 5 269 3 325 1 113 2 64 15 157 1 67 1 25 1 69 4 26 1 136 2 42 1 160 1 275 1 253 3 277 3 
254 5 145 1 205 1 256 1 5 1 287 3 320 4 294 9 128 2 58 1 130 1 325 2 113 4 64 4 157 2 69 1 67 1 379 1 42 2 26 1 136 1 172 1 275 1 253 2 
229 1 314 1 230 1 140 2 201 1 202 1 1 2 143 1 175 1 28 1 285 1 78 1 125 1 50 2 100 1 257 1 288 1 258 1 292 1 345 1 323 1 129 1 34 1 371 1 271 1 248 1 194 1 156 1 334 1 308 1 
229 1 314 1 230 1 140 2 201 1 202 1 1 3 143 1 175 1 28 1 78 1 125 1 50 3 100 1 257 1 288 2 258 1 262 1 323 1 129 1 34 1 371 1 39 1 349 1 271 1 248 1 194 1 156 1 334 1 308 1 
229 1 314 1 230 1 140 2 201 1 202 1 1 2 143 1 175 1 28 1 78 1 125 1 50 2 257 1 288 2 258 1 323 1 129 1 34 1 39 1 349 1 271 1 156 1 308 1 334 1 
314 2 230 1 201 1 202 2 1 1 232 1 175 1 125 2 50 1 344 1 31 1 258 1 153 1 262 1 84 1 370 1 19 1 248 1 194 1 156 1 353 1 158 1 308 2 
229 1 314 1 230 1 140 2 201 1 202 1 1 1 143 1 175 1 28 1 285 1 78 1 125 1 50 1 100 1 258 1 292 1 323 1 371 1 349 1 271 1 248 1 194 1 156 1 334 1 308 1 
120 1 
228 1 281 1 230 1 44 1 45 2 142 1 340 1 0 2 47 2 232 1 175 2 176 2 177 1 344 1 7 1 239 1 11 2 54 2 293 2 13 3 242 2 182 5 15 1 299 1 185 2 19 1 60 6 114 1 198 1 156 2 197 1 158 2 356 2 121 5 201 1 258 2 32 1 127 1 368 1 212 4 370 1 214 1 167 2 131 1 372 1 85 1 375 1 376 1 219 1 89 1 168 1 40 2 221 1 134 1 272 1 
121 3 228 1 340 1 176 1 177 1 7 1 32 1 239 1 13 1 368 1 182 3 212 2 214 1 372 1 131 1 375 1 60 2 114 1 219 1 89 1 221 1 199 1 
121 3 228 1 45 1 340 1 0 1 177 1 7 1 32 1 239 1 127 1 13 1 368 1 182 3 212 3 214 1 372 1 131 1 375 1 60 1 114 1 219 1 89 1 221 1 199 1 
121 3 228 1 45 1 340 1 0 1 176 1 177 1 7 1 32 1 239 1 127 1 13 1 368 1 182 3 212 3 214 1 372 1 131 1 167 1 375 1 60 2 114 1 219 1 89 1 199 1 221 1 
228 1 45 5 339 1 340 1 0 4 47 2 176 4 177 1 7 1 239 1 11 2 54 2 13 3 293 2 242 1 182 5 15 1 299 1 57 1 107 1 110 1 60 7 114 1 198 1 197 1 199 1 356 2 121 5 32 1 127 5 368 1 212 6 214 1 167 4 131 1 372 1 375 1 219 1 89 1 221 1 40 1 168 1 272 1 276 1 
356 2 121 4 228 1 281 1 45 2 340 1 0 2 47 2 176 2 177 1 7 1 32 1 127 1 239 1 11 2 54 2 13 2 293 2 242 1 368 1 182 4 15 1 212 4 299 1 185 2 214 1 167 2 131 1 372 1 375 1 60 4 114 1 219 1 198 1 89 1 197 1 168 1 40 1 221 1 272 1 
356 2 121 4 228 1 45 1 340 1 0 2 47 2 176 2 177 1 7 1 32 1 127 1 239 1 11 2 54 2 13 2 293 2 242 1 368 1 182 4 15 1 212 4 299 1 214 1 107 1 167 2 372 1 131 1 110 1 375 1 60 4 114 1 219 1 197 1 89 1 198 1 168 1 40 1 221 1 272 1 276 1 
356 2 121 4 228 1 45 1 340 1 0 2 47 2 176 2 177 1 7 1 32 1 127 1 239 1 11 2 54 2 13 2 293 2 242 1 368 1 182 4 15 1 212 4 299 1 214 1 107 1 167 2 372 1 131 1 110 1 375 1 60 4 114 1 219 1 197 1 89 1 198 1 168 1 40 1 221 1 272 1 276 1 
356 2 121 4 228 1 45 1 340 1 0 2 47 2 176 2 177 1 206 1 365 1 7 1 32 1 127 1 239 1 181 2 13 2 242 1 368 1 182 4 15 1 212 4 299 1 185 2 214 1 167 2 372 1 131 1 110 1 375 1 60 4 192 2 114 1 219 1 89 1 198 1 168 1 40 1 221 1 272 1 170 1 
356 2 121 4 228 1 45 1 340 1 47 2 0 3 176 3 177 1 7 1 32 1 127 1 239 1 11 2 54 2 13 2 293 2 242 1 368 1 182 4 15 1 212 5 299 1 214 1 57 1 107 1 372 1 131 1 167 3 110 1 375 1 60 5 114 1 219 1 197 1 198 1 89 1 168 1 40 1 221 1 272 1 276 1 
356 2 121 4 228 1 45 1 340 1 47 2 0 3 176 3 177 1 7 1 32 1 127 1 239 1 11 2 54 2 13 2 293 2 242 1 368 1 182 4 15 1 212 5 299 1 214 1 57 1 107 1 372 1 131 1 167 3 110 1 375 1 60 5 114 1 219 1 197 1 198 1 89 1 168 1 40 1 221 1 272 1 276 1 
356 2 121 4 228 1 281 1 45 1 340 1 0 2 47 2 176 2 177 1 206 1 7 1 32 1 127 1 239 1 181 2 13 2 242 1 368 1 182 4 15 1 212 4 299 1 185 2 214 1 167 2 131 1 372 1 375 1 60 4 192 2 114 1 219 1 198 1 89 1 168 1 40 1 221 1 272 1 
311 1 173 1 294 6 337 1 128 1 254 3 200 1 130 1 233 1 325 1 63 1 64 3 113 2 5 1 287 2 157 1 69 1 320 2 67 1 136 1 42 1 26 1 240 2 53 1 275 1 253 1 
310 1 311 11 337 1 200 2 254 8 163 3 126 1 5 2 287 1 179 1 208 1 320 2 238 2 240 1 53 4 294 14 263 1 128 2 58 1 187 1 108 1 269 3 325 2 350 1 63 11 64 6 113 4 196 1 157 2 69 1 42 2 71 1 277 2 
335 1 225 1 230 1 337 1 360 1 201 1 200 1 254 1 340 2 175 1 144 1 344 1 208 1 258 1 80 1 260 1 240 1 53 1 154 1 294 2 155 1 128 1 372 1 19 1 86 1 325 1 350 1 270 1 113 2 64 1 114 2 156 1 157 1 70 1 42 1 71 1 158 1 117 1 
335 1 225 2 337 3 230 2 340 3 175 3 5 3 287 4 344 2 104 2 152 1 238 2 240 2 53 7 154 1 294 20 155 1 58 4 19 2 21 1 349 1 190 2 350 1 63 7 193 1 64 10 113 6 114 3 23 2 156 3 157 3 67 1 69 3 305 2 70 2 26 1 71 1 158 1 117 1 253 1 311 7 357 2 200 3 201 2 254 10 208 1 320 8 258 3 260 2 80 2 263 2 128 3 130 1 372 1 325 3 136 1 42 3 275 1 277 2 
335 1 173 1 230 2 337 2 201 2 200 2 254 1 340 1 232 1 175 8 282 1 98 1 342 1 344 2 208 1 6 2 258 7 345 1 294 2 155 1 106 1 213 1 128 2 370 1 372 1 19 3 325 2 349 1 326 1 350 1 113 4 64 1 114 1 156 8 157 2 381 1 42 2 117 1 158 2 
311 1 122 1 337 1 200 1 254 1 340 1 5 1 287 1 320 1 238 1 53 1 294 3 155 1 296 1 263 1 128 1 372 1 325 1 63 1 113 2 64 2 114 1 157 1 24 1 69 1 42 1 71 1 117 1 277 1 
311 1 173 1 294 2 337 1 128 1 200 1 254 2 58 1 325 1 63 1 113 2 5 1 157 1 320 1 42 1 238 1 53 1 81 1 
311 1 173 1 294 2 263 1 337 1 128 1 200 1 325 1 63 1 113 2 64 2 287 1 157 1 320 1 69 1 10 1 42 1 53 1 
311 2 173 1 337 1 254 2 200 1 5 1 287 1 320 2 238 1 53 2 294 4 263 1 128 1 58 1 325 1 63 2 113 2 64 2 157 1 69 1 42 1 277 1 
311 1 294 2 337 1 128 1 200 1 254 2 58 1 98 1 325 1 63 1 113 2 5 1 157 1 320 1 42 1 238 1 53 1 81 1 
311 1 294 2 263 1 337 1 128 1 200 1 98 1 325 1 63 1 113 2 64 2 287 1 157 1 320 1 69 1 10 1 42 1 53 1 
311 2 337 1 254 2 200 1 98 1 5 1 287 1 320 2 238 1 53 2 294 4 263 1 128 1 58 1 325 1 63 2 113 2 64 2 157 1 69 1 42 1 277 1 
311 2 337 1 254 2 200 1 5 1 287 1 320 2 238 1 53 2 294 4 263 1 128 1 58 1 325 1 63 2 113 2 64 2 157 1 69 1 42 1 277 1 
225 1 230 1 337 1 254 1 201 1 200 1 340 1 175 1 344 1 208 1 258 1 80 1 260 1 240 1 294 2 128 1 19 1 325 1 190 1 350 1 113 2 64 1 114 1 156 1 157 1 70 1 42 1 158 1 
230 1 337 1 254 1 201 1 200 1 340 1 175 1 344 1 208 1 258 1 80 1 240 1 294 2 211 1 128 1 19 1 325 1 350 1 247 1 113 2 64 1 114 1 66 1 156 1 157 1 70 1 42 1 158 1 
311 2 337 1 254 2 200 1 5 1 287 1 320 2 238 1 53 2 294 4 263 1 128 1 58 1 325 1 63 2 113 2 64 2 157 1 69 1 42 1 71 1 277 1 
311 2 225 1 357 1 230 1 337 1 254 2 201 1 200 1 340 1 175 1 5 1 287 1 344 1 320 2 258 1 238 1 80 1 260 1 53 2 345 1 294 4 263 1 128 1 58 1 19 1 325 1 190 1 63 2 64 2 113 2 114 1 156 1 157 1 69 1 70 1 42 1 277 1 
311 1 122 1 337 1 200 1 254 2 340 1 283 1 5 1 320 1 238 1 53 1 294 3 263 1 155 1 296 1 128 1 58 1 372 1 325 1 63 1 64 1 113 2 114 1 157 1 69 1 42 1 71 1 117 1 277 1 
254 9 204 1 29 1 163 2 126 1 5 3 235 1 287 3 179 1 320 6 238 3 294 19 243 2 263 3 164 2 128 2 165 1 58 3 374 1 269 1 188 1 325 2 113 4 64 10 157 2 69 3 379 1 41 1 42 2 277 3 
254 14 231 1 29 1 363 1 256 2 163 2 99 1 148 1 5 3 287 2 320 4 179 2 238 3 294 26 243 1 263 2 164 4 128 3 165 1 58 2 374 2 269 2 59 1 188 2 325 3 64 12 113 6 195 1 157 3 69 2 379 1 41 1 42 3 277 3 
254 20 231 1 204 1 29 1 363 1 256 1 99 1 163 4 126 1 148 1 5 5 287 4 179 3 320 8 238 4 294 41 243 1 263 4 369 1 164 4 128 3 165 1 130 1 58 4 374 2 269 3 59 1 188 1 325 3 113 6 64 21 195 1 157 3 67 1 69 5 379 1 41 1 136 1 26 1 42 3 275 1 253 1 277 4 
254 20 231 1 204 1 29 1 363 1 256 2 99 1 163 4 126 1 148 1 5 5 287 4 179 3 320 7 238 4 294 38 243 1 263 3 369 1 164 4 128 4 165 1 130 1 58 3 374 2 269 3 59 1 188 1 325 4 113 8 64 18 195 1 157 4 67 1 69 4 379 1 41 1 136 1 26 1 42 4 275 1 253 1 277 4 
254 27 231 1 29 1 256 1 363 1 99 1 163 4 126 2 148 1 5 8 287 7 179 2 320 14 238 7 294 52 243 1 263 7 164 4 128 2 165 1 130 1 58 7 374 1 269 4 59 1 188 1 325 2 113 4 64 25 195 1 196 2 157 2 67 1 69 8 379 1 41 1 136 1 26 1 42 2 275 1 253 1 277 7 
246 1 322 1 329 1 18 1 222 1 330 1 380 1 290 1 36 1 77 1 
4 1 348 1 
246 1 322 1 95 1 329 1 18 1 290 1 291 1 210 1 77 1 
182 1 322 1 121 1 18 1 45 1 124 1 216 1 36 1 77 1 246 1 103 1 329 1 222 1 330 1 236 2 105 1 290 1 261 1 
182 1 322 1 121 1 18 1 45 1 124 1 216 1 36 1 77 1 246 1 103 1 329 1 222 1 330 1 236 2 105 1 290 1 261 1 
182 1 322 1 121 1 18 1 45 1 124 1 216 1 36 1 77 1 246 1 103 1 329 1 222 1 330 1 236 2 105 1 290 1 261 1 
138 1 12 1 111 1 
138 1 12 1 111 1 
68 1 37 1 
138 1 68 1 37 1 
249 1 359 1 
121 1 359 1 124 1 340 2 76 1 77 1 4 1 236 1 105 1 290 1 240 1 182 1 322 1 155 2 297 1 18 1 244 1 348 1 372 2 246 1 114 2 249 1 352 1 329 1 331 1 117 2 118 1 
12 1 111 1 
138 1 68 1 37 1 
137 1 230 1 337 1 27 1 201 1 200 1 254 1 340 2 175 2 344 1 208 1 6 2 321 1 258 2 294 2 17 1 106 1 128 1 372 2 19 1 303 1 325 1 326 1 350 1 113 2 64 1 114 2 156 2 157 1 42 1 71 1 
226 1 323 1 229 1 140 2 230 1 201 1 202 1 371 1 175 2 28 1 78 1 3 1 349 1 271 1 156 2 258 2 9 1 334 1 345 1 
323 1 229 1 140 2 230 1 201 1 202 1 371 1 175 1 28 1 78 1 349 1 271 1 156 1 366 1 258 1 9 1 334 1 
230 1 162 1 201 1 370 1 202 1 232 1 19 1 175 1 3 1 344 1 156 1 258 1 158 1 153 1 
226 1 323 1 229 1 140 2 230 1 201 1 202 1 371 1 175 1 28 1 78 1 3 1 349 1 271 1 156 1 258 1 9 1 334 1 
79 1 
242 1 40 1 45 1 8 1 109 1 127 1 233 1 
121 1 45 2 127 1 11 1 54 1 293 1 13 1 242 1 182 1 15 1 299 1 185 1 60 1 197 1 198 1 40 1 272 1 
278 1 279 1 230 3 141 2 44 2 45 8 175 3 149 2 5 2 344 3 150 6 104 2 8 1 289 6 238 2 241 1 345 1 54 6 13 3 242 9 346 3 182 5 15 4 184 2 299 4 185 12 109 1 19 10 60 5 62 2 351 2 198 4 156 3 69 2 70 3 251 2 158 1 121 5 73 2 201 4 258 3 259 1 127 2 263 2 324 2 215 2 87 1 376 1 377 1 89 2 40 8 135 2 272 4 277 2 
121 1 315 1 44 1 45 5 363 1 163 1 99 1 148 1 5 2 150 5 179 1 237 1 289 5 238 2 127 2 54 3 13 1 242 8 182 1 15 2 263 2 299 2 185 6 269 1 215 2 59 1 60 1 376 1 195 1 198 2 40 5 69 2 135 1 272 2 277 2 
224 1 121 1 174 1 340 1 361 1 284 1 177 1 5 2 242 2 182 1 15 1 296 1 155 1 299 1 130 1 372 1 215 2 114 1 198 1 40 2 69 1 135 1 136 1 272 1 252 1 117 1 275 1 276 1 
242 1 15 1 299 1 45 1 109 1 198 1 40 1 8 1 272 1 127 1 
242 5 263 2 185 10 45 5 215 2 5 2 40 5 150 5 69 2 135 1 104 1 238 2 289 5 54 5 277 2 
182 1 121 1 45 1 127 1 60 1 13 1 
121 3 230 1 201 1 44 2 142 1 316 1 232 1 175 4 344 1 258 4 259 1 13 2 242 2 182 3 15 1 299 2 370 1 373 1 19 1 60 4 376 2 377 2 198 2 156 4 40 2 134 1 272 2 158 2 273 1 
225 1 230 1 337 1 201 1 200 1 340 3 175 1 284 1 344 1 208 1 258 1 260 1 80 1 240 1 294 1 155 2 296 2 128 1 186 1 372 2 19 1 325 1 190 1 64 1 113 2 114 3 157 1 156 1 70 1 42 1 158 1 117 2 
242 1 15 1 299 1 44 1 185 4 45 4 376 1 198 1 150 2 40 2 272 1 289 2 127 2 54 2 253 1 
246 1 322 1 207 1 
246 1 286 1 322 1 249 1 36 1 
246 1 322 1 207 1 
246 1 322 1 207 1 
246 1 322 1 265 1 
246 1 322 1 265 1 
246 1 322 1 265 1 
246 1 322 1 
329 1 77 1 
294 8 128 2 254 4 58 1 130 1 325 2 256 1 64 4 113 4 5 1 287 2 157 2 69 1 320 3 67 1 42 2 26 1 136 1 275 1 253 1 
64 3 294 6 5 1 287 2 69 1 320 2 67 1 254 3 130 1 136 1 26 1 233 1 275 1 253 1 
294 4 263 1 128 1 254 2 58 1 325 1 64 2 113 2 5 1 287 1 157 1 69 1 320 2 42 1 333 1 238 1 277 1 
294 7 263 1 254 3 58 1 269 1 163 2 64 4 126 1 5 1 287 1 69 1 179 1 320 2 238 1 277 1 
310 1 254 11 317 1 163 2 256 2 126 1 5 3 287 5 320 9 238 2 294 23 263 2 128 2 130 2 58 4 269 2 325 2 64 12 113 4 196 1 157 2 67 1 69 3 136 2 26 1 42 2 275 1 253 1 277 2 
163 1 64 1 294 1 
294 1 254 1 269 1 
294 6 263 1 128 1 254 3 58 1 325 1 113 2 64 3 5 1 157 1 287 2 320 3 69 1 104 1 42 1 333 1 238 1 277 1 
254 6 163 1 99 1 363 1 148 1 5 2 287 1 179 1 320 2 238 2 294 12 263 2 128 1 58 1 269 1 59 1 325 1 64 6 113 2 157 1 195 1 69 2 379 1 42 1 277 2 
294 6 254 3 130 1 58 1 64 3 5 1 287 1 69 1 320 2 136 1 275 1 
294 3 128 1 254 1 58 1 130 1 317 1 325 1 256 1 64 2 113 2 287 1 157 1 320 2 67 1 136 1 42 1 26 1 
294 10 128 1 254 5 130 2 58 2 325 1 361 1 113 2 64 5 5 2 157 1 287 3 320 5 69 2 379 1 42 1 136 2 275 1 
294 2 128 1 254 2 58 1 325 1 113 2 5 1 157 1 320 1 379 1 42 1 238 1 
294 4 263 1 128 1 254 2 58 1 325 1 64 2 113 2 5 1 287 1 157 1 69 1 320 2 379 1 42 1 238 1 277 1 
294 3 128 3 254 1 130 1 58 1 317 1 204 1 325 3 256 1 64 2 113 6 157 3 287 1 320 2 379 1 42 3 136 1 
254 16 317 1 204 1 256 2 163 4 126 1 5 5 287 7 179 1 320 12 238 3 55 1 294 34 33 1 263 3 128 5 130 3 58 5 269 3 325 5 64 18 113 10 157 5 67 1 69 5 379 1 136 3 26 1 42 5 333 1 160 1 275 2 253 1 277 3 
254 4 163 1 148 1 5 1 287 2 179 1 320 2 294 8 128 1 130 1 269 1 325 1 64 4 113 2 157 1 69 1 67 1 379 1 42 1 26 1 136 1 275 1 253 1 
254 6 163 2 126 1 148 1 5 2 287 2 179 1 320 3 238 1 294 11 128 2 130 1 58 1 269 1 325 2 64 5 113 4 157 2 69 1 67 1 379 1 136 1 26 1 42 2 333 1 275 1 253 1 277 1 
254 9 163 1 99 1 256 1 363 1 148 1 5 3 287 3 179 1 320 4 238 2 294 19 263 2 128 3 130 1 58 1 269 1 59 1 325 3 64 10 113 6 195 1 157 3 67 1 69 3 379 1 136 1 26 1 42 3 333 1 275 1 253 1 277 2 
254 10 256 1 163 1 99 1 363 1 148 1 5 3 287 3 179 1 320 5 238 2 294 17 263 1 128 3 130 1 58 2 269 1 59 1 325 3 64 7 113 6 157 3 195 1 67 1 69 2 379 1 136 1 26 1 42 3 333 1 275 1 253 1 277 2 
254 4 163 1 148 1 5 1 287 2 179 1 320 2 294 8 128 1 130 1 269 1 325 1 64 4 113 2 157 1 69 1 67 1 379 1 42 1 26 1 136 1 275 1 253 1 
254 6 163 1 99 1 363 1 148 1 5 2 287 1 179 1 320 2 238 2 294 12 263 2 128 1 58 1 269 1 59 1 325 1 64 6 113 2 157 1 195 1 69 2 379 1 42 1 277 2 
254 10 363 1 163 1 99 1 256 2 148 1 5 3 287 3 179 1 320 5 238 2 294 18 263 1 128 4 130 1 58 2 269 1 59 1 325 4 64 8 113 8 195 1 157 4 67 1 69 2 379 1 136 1 26 1 42 4 333 1 275 1 253 1 277 2 
254 9 204 1 363 1 163 1 99 1 256 2 148 1 5 3 287 3 179 1 320 6 238 3 294 16 263 2 128 4 58 3 269 1 59 1 325 4 64 7 113 8 195 1 157 4 69 2 379 1 42 4 277 3 
294 7 254 3 130 3 58 3 64 4 5 1 287 3 69 1 67 2 320 6 26 1 136 3 275 1 
254 10 204 1 363 1 163 1 99 1 256 2 148 1 5 3 287 3 179 1 320 4 238 2 294 18 263 1 128 4 130 1 58 1 269 1 59 1 325 4 64 8 113 8 195 1 157 4 67 1 69 2 379 1 136 1 26 1 42 4 275 1 253 1 277 2 
114 1 219 1 358 1 340 1 372 1 240 1 82 1 
358 1 280 1 372 1 340 1 304 1 22 1 114 1 219 1 43 1 240 1 92 1 82 1 
344 1 156 1 230 1 201 1 370 1 258 1 232 1 19 1 175 1 233 1 158 1 
335 1 155 1 230 1 201 1 372 1 340 2 19 1 175 1 114 2 344 1 156 1 258 1 70 1 80 1 260 1 240 1 117 1 158 1 
335 1 228 1 73 1 230 1 201 1 340 2 175 1 177 1 344 2 258 1 260 1 80 1 239 1 240 1 155 1 372 2 19 3 377 1 114 2 351 1 156 1 70 2 117 2 
335 1 228 1 73 1 230 1 201 1 340 2 175 2 177 1 364 1 344 2 258 2 80 1 239 1 240 1 155 1 372 2 19 3 247 1 377 1 114 2 351 1 156 2 70 2 117 2 
312 1 182 2 346 1 73 1 121 2 230 1 201 1 45 1 175 3 19 4 60 1 62 1 351 1 377 1 364 1 89 1 344 1 156 3 258 3 70 1 127 1 158 1 274 1 
182 2 346 1 73 1 121 2 324 1 230 1 201 1 45 1 175 3 19 4 60 1 62 1 351 1 377 1 364 1 89 1 344 1 156 3 258 3 70 1 127 1 158 1 
342 1 156 1 230 1 201 1 258 1 175 1 
278 1 106 1 213 1 230 2 201 3 175 7 19 3 282 1 2 1 349 1 342 1 102 1 156 7 344 2 6 1 258 6 70 1 381 1 158 2 345 1 309 1 
311 1 335 1 225 1 357 1 230 1 337 2 254 3 201 1 200 2 340 2 175 1 5 1 287 2 344 1 320 2 258 1 80 1 260 1 240 2 53 1 345 1 294 6 155 1 128 2 130 1 372 1 19 1 325 2 303 1 190 1 63 1 64 3 113 4 114 2 157 2 156 1 69 1 67 1 305 1 70 1 136 1 26 1 42 2 71 1 117 1 275 1 253 1 
121 3 141 1 45 1 175 1 149 1 258 1 8 1 259 1 127 1 13 1 242 1 182 3 346 1 15 2 324 1 184 1 299 2 109 1 19 2 60 2 62 1 156 1 198 2 89 1 40 1 352 1 272 2 158 1 
278 1 230 1 201 2 175 2 19 2 62 1 342 1 156 2 344 1 258 2 70 1 241 1 345 1 
230 1 166 1 201 1 370 1 232 1 175 4 19 1 364 1 156 4 344 1 258 4 158 1 345 1 
123 1 230 1 201 2 175 2 19 1 21 1 377 1 327 1 102 1 156 2 344 1 258 2 70 1 309 1 
271 1 156 1 140 1 230 1 201 1 258 1 175 1 158 1 334 1 78 1 
137 1 344 1 106 1 156 2 230 1 201 1 258 2 19 1 175 2 345 1 349 1 
106 1 230 2 166 1 370 1 201 2 232 1 175 5 19 3 282 1 377 1 156 5 344 2 258 4 381 1 158 1 345 1 
106 1 230 2 166 1 370 1 201 2 232 1 175 5 19 3 282 1 377 1 156 5 344 2 258 4 158 1 171 1 345 1 
335 1 155 1 230 1 201 1 372 1 340 2 19 1 175 1 247 1 114 2 344 1 156 1 258 1 70 1 80 1 240 1 117 1 158 1 
278 1 230 1 201 2 175 1 19 1 2 1 377 1 102 1 156 1 344 1 258 1 70 1 309 1 
17 1 74 1 27 1 372 1 340 1 203 1 114 1 133 1 321 1 
319 1 180 1 203 1 
133 1 74 1 338 1 203 1 240 1 
182 2 228 1 121 2 74 2 45 1 338 2 203 1 177 1 133 2 89 1 319 1 352 1 250 1 7 1 180 1 127 1 239 1 332 1 240 1 
257 1 129 1 34 1 233 1 
50 1 248 1 194 1 257 1 129 1 34 1 1 1 
50 1 308 1 125 1 
129 1 56 1 96 1 300 2 34 1 1 3 234 1 285 1 50 3 194 1 248 1 257 1 
50 2 248 1 194 1 257 1 288 1 129 1 209 1 34 1 1 2 
50 1 323 1 248 1 194 1 220 1 140 1 129 1 1 1 334 1 61 1 285 1 
50 1 248 1 194 1 257 1 129 1 1 1 285 1 
50 1 248 1 194 1 257 2 34 1 1 1 285 1 
50 2 248 2 194 2 257 1 268 1 129 1 97 1 1 2 285 1 159 1 
129 2 34 1 1 3 341 1 285 1 50 3 194 1 248 1 101 1 257 1 220 1 288 2 354 1 
229 1 323 1 140 2 129 1 34 1 1 2 78 1 285 1 50 2 194 1 248 1 115 1 257 1 288 1 334 1 
129 2 34 1 1 4 341 1 255 1 285 1 50 4 194 2 248 2 257 1 220 1 288 2 209 1 
50 1 248 1 194 1 257 1 129 1 34 1 1 1 285 1 
183 1 56 1 129 3 300 1 96 1 34 2 1 4 341 1 50 4 194 1 248 1 257 2 220 1 288 2 
50 2 248 1 194 1 257 1 288 1 378 1 129 1 34 1 46 1 1 2 245 1 285 1 
129 1 56 2 96 1 300 2 34 1 1 3 285 1 132 1 50 3 194 1 248 1 257 1 
264 1 129 2 355 1 189 2 
50 1 248 1 194 1 1 1 285 1 93 1 
50 2 248 1 194 1 257 1 288 1 129 1 34 1 354 1 1 2 285 1 
151 1 
50 1 248 1 194 1 257 1 129 1 34 1 1 1 285 1 
50 3 248 1 194 1 257 1 288 1 129 1 354 1 34 1 300 1 1 3 285 1 
183 1 220 1 129 1 341 1 
257 1 129 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (89,203,343) (89,203,343) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (89,203,343) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (89,203,343) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (208,229) (208,229) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (89,203,343) (89,203,343) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
347 2 82 2 255 1 26 9 83 1 175 9 207 1 101 3 209 1 261 1 212 2 360 4 263 1 36 1 127 1 132 1 163 1 223 2 245 1 111 1 165 1 340 2 18 5 43 6 167 1 140 2 298 1 94 2 
347 2 82 2 255 1 26 9 83 1 175 9 207 1 101 3 209 1 261 1 212 2 360 4 263 1 36 1 127 1 132 1 163 1 223 2 245 1 111 1 165 1 340 2 18 5 43 6 167 1 140 2 298 1 94 2 
347 2 82 2 255 1 26 10 83 1 175 10 207 1 101 4 209 1 261 1 212 2 360 5 263 1 36 1 127 1 132 1 163 1 223 2 245 1 111 1 165 1 340 2 18 6 43 7 167 1 140 2 298 1 94 2 
347 2 82 2 255 1 26 7 83 1 175 7 207 1 101 2 209 1 261 1 212 1 360 3 263 1 36 1 127 1 132 1 163 1 223 2 245 1 165 1 340 2 18 4 43 4 167 1 140 2 298 1 94 2 
347 1 82 1 255 1 26 4 175 4 163 1 223 1 245 1 101 1 111 1 165 1 18 3 261 1 212 2 43 3 140 1 360 2 94 1 
171 1 347 1 82 1 269 1 255 1 26 2 175 2 245 1 18 1 340 1 261 1 209 1 167 1 140 1 214 1 94 1 
82 2 255 1 132 1 26 3 175 3 245 1 101 1 340 1 18 2 261 1 43 1 140 2 360 1 
347 1 82 2 255 1 26 9 175 9 101 3 261 1 212 2 54 1 360 4 263 1 132 1 63 1 163 1 223 1 245 1 111 1 340 1 18 5 165 1 43 7 140 2 298 1 94 1 
347 1 82 2 255 1 26 9 175 9 101 3 261 1 212 2 54 1 360 4 263 1 132 1 63 1 163 1 223 1 245 1 111 1 340 1 18 5 165 1 43 7 140 2 298 1 94 1 
50 1 236 1 33 1 
33 1 315 1 374 2 
71 2 97 1 198 1 366 2 53 2 3 2 359 2 20 2 
96 1 79 1 97 1 230 1 281 1 173 1 25 2 348 1 3 2 45 2 352 1 99 1 100 1 334 1 151 1 53 3 359 2 361 1 319 1 159 1 128 1 266 1 64 2 366 2 271 1 292 1 246 2 71 2 225 1 74 1 44 1 276 1 198 1 295 2 311 1 20 3 202 1 
71 1 80 1 60 1 198 1 366 1 53 1 3 1 338 1 359 1 20 1 
80 1 81 1 12 1 289 1 3 1 174 1 323 1 50 1 372 1 53 1 105 1 20 1 33 1 300 1 
80 1 81 1 12 1 289 1 366 1 3 1 174 2 71 1 50 1 372 1 53 1 359 1 20 1 33 1 300 2 
228 1 49 1 174 1 322 1 300 1 
228 1 50 1 130 1 31 1 174 2 33 1 322 1 300 2 
174 1 322 1 300 1 
80 1 60 1 228 1 366 1 367 1 3 1 338 1 174 1 71 1 198 1 53 1 359 1 20 1 300 1 
33 1 
228 1 50 1 31 1 174 2 33 1 322 1 157 1 300 2 
364 1 241 2 185 2 186 1 228 2 288 1 290 1 174 5 322 2 17 1 50 1 104 1 31 1 169 2 33 1 216 1 35 1 181 1 300 5 
97 1 366 1 337 1 3 5 28 1 350 1 323 1 233 1 354 2 71 4 53 5 359 4 20 5 363 1 
71 2 80 1 60 1 53 2 3 2 213 1 359 2 20 2 
97 1 236 1 
97 2 366 1 3 2 28 1 71 1 53 2 359 1 20 2 77 1 
370 1 190 1 222 1 
97 1 230 1 25 1 348 1 292 1 45 1 352 1 334 1 148 1 225 1 151 1 295 1 53 1 20 1 311 1 361 1 
230 1 25 1 348 1 3 1 292 1 352 1 45 1 334 1 354 1 71 1 370 1 225 1 151 1 295 1 53 2 359 1 361 1 311 1 20 2 363 1 
354 1 71 3 97 1 366 1 53 3 3 3 359 3 20 3 
71 1 80 1 60 1 53 1 3 1 359 1 20 1 
71 1 80 1 366 1 53 1 3 1 359 1 20 1 28 1 77 1 
96 1 80 1 97 1 230 1 81 1 281 1 25 1 348 1 3 3 28 1 174 1 352 1 45 1 99 1 333 1 334 1 354 1 151 1 53 4 359 3 361 1 363 1 319 1 59 1 159 1 266 1 12 1 64 1 289 1 366 2 271 1 292 1 246 2 71 3 225 1 44 1 276 1 198 1 372 1 295 1 311 1 20 4 202 1 300 1 
71 1 354 1 97 1 53 2 3 2 359 1 20 2 350 1 323 1 
59 1 80 1 12 1 81 1 289 1 366 1 3 3 28 1 174 1 354 2 71 3 177 1 372 1 53 3 359 3 20 3 33 1 363 1 300 1 
366 1 3 2 28 1 222 1 354 1 71 2 370 1 53 2 359 2 20 2 
97 1 230 1 25 1 348 1 292 1 45 1 352 1 334 1 225 1 151 1 295 1 53 1 20 1 311 1 361 1 
97 1 230 1 25 1 348 1 292 1 45 1 316 1 334 1 194 1 151 1 295 1 53 1 20 1 311 1 361 1 
281 2 117 1 99 1 29 1 150 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 222 2 293 1 246 2 112 1 370 2 310 1 44 1 276 1 19 1 226 1 76 1 202 1 
71 1 80 1 289 1 53 1 3 1 213 1 359 1 20 1 
275 1 73 1 
275 1 73 1 
220 1 265 1 
220 1 265 1 
220 1 265 1 
313 1 275 1 73 1 
313 1 275 1 73 1 
10 1 275 1 73 1 
123 1 220 1 275 2 73 2 258 1 265 1 
313 1 275 1 73 1 
275 1 73 1 329 1 
275 1 73 1 329 1 
275 1 73 1 329 1 
97 1 254 1 145 1 3 2 174 1 122 1 235 1 358 1 53 2 359 2 238 1 303 1 10 1 320 1 161 1 65 1 321 1 244 1 192 1 71 2 275 1 73 1 20 2 300 1 
320 2 88 1 254 2 174 2 122 1 146 1 283 1 258 1 192 3 69 2 249 1 73 2 275 2 91 1 358 2 33 1 238 2 239 1 300 2 
347 1 94 1 223 1 
347 1 269 1 94 1 
187 1 347 3 269 1 109 1 345 1 223 2 
187 1 347 2 196 1 269 1 109 1 223 1 
187 2 347 2 269 1 109 1 223 1 
228 4 84 2 174 5 315 1 149 1 29 1 50 1 31 1 107 1 264 1 33 2 34 1 303 1 158 1 185 1 241 1 186 2 288 3 219 1 191 1 161 1 321 1 67 2 322 1 17 1 247 2 327 1 169 1 76 1 374 3 300 5 170 1 
332 1 228 7 84 6 174 9 315 3 29 3 48 1 356 1 49 5 50 1 31 1 126 1 264 3 33 5 181 1 158 3 38 1 241 2 185 2 186 6 288 8 161 4 219 1 191 2 67 6 322 6 369 1 17 1 327 3 169 2 76 3 374 9 278 5 300 9 170 2 
228 2 174 3 84 2 315 2 149 1 29 1 50 1 264 1 33 3 34 1 181 1 158 1 185 1 241 1 186 2 288 3 191 1 161 1 67 2 247 1 327 1 169 1 76 1 374 4 300 3 170 1 
228 3 84 4 174 4 315 3 149 1 29 2 50 1 126 1 264 2 33 4 34 1 181 1 158 2 38 1 185 1 241 1 186 4 288 5 191 1 161 2 67 4 369 1 247 2 327 2 169 1 76 2 374 7 300 4 170 1 
151 1 361 1 311 1 
232 1 151 1 
151 1 236 1 362 1 
151 1 115 1 
306 1 
151 1 361 1 
151 3 362 2 361 1 311 1 179 1 286 1 
158 1 280 1 128 4 281 3 119 1 64 7 85 1 309 1 29 1 310 2 102 1 341 1 262 1 19 3 32 2 141 1 318 1 
158 1 280 1 128 4 281 3 119 1 64 7 85 1 309 1 29 1 310 2 102 1 341 1 262 1 19 3 32 2 141 1 318 1 
158 1 280 1 128 4 281 3 119 1 64 7 85 1 260 1 309 1 29 1 310 2 102 1 341 1 262 1 19 3 32 2 141 1 318 1 
280 2 281 15 119 2 99 1 85 1 7 1 29 4 102 5 262 1 302 1 32 3 264 3 318 2 57 4 182 1 158 4 159 1 128 16 267 1 64 31 15 1 273 1 246 2 309 2 327 3 310 5 341 1 44 1 330 1 19 10 141 1 76 3 201 3 202 1 
280 1 281 4 119 1 99 2 85 1 29 1 102 1 262 1 32 2 318 1 58 1 158 1 159 2 128 5 64 9 136 1 246 4 309 1 310 3 44 2 330 1 19 4 141 1 202 2 
340 1 224 1 261 1 25 1 82 1 143 1 295 1 140 1 26 1 343 1 175 1 45 1 203 1 
340 1 224 1 90 1 25 1 82 1 357 1 43 1 295 1 40 1 140 1 26 2 175 2 45 1 203 1 
340 1 224 1 25 1 90 1 89 1 43 1 295 1 40 1 26 1 175 1 45 1 
229 1 25 1 82 1 348 1 26 1 175 1 45 1 340 2 208 1 224 2 357 1 295 1 140 1 92 1 
340 1 224 1 261 1 25 1 82 1 295 1 40 1 140 1 26 1 343 1 175 1 45 1 203 1 
168 1 
204 2 3 1 98 1 45 2 147 1 5 1 334 1 47 1 210 1 50 1 151 1 103 1 335 1 53 1 153 2 105 1 217 2 160 1 12 1 307 1 17 1 169 1 20 1 344 2 277 4 80 1 81 1 25 2 348 2 174 5 315 2 317 1 31 3 361 1 33 2 241 1 185 1 186 2 288 2 129 1 191 1 289 1 292 1 322 6 323 1 139 1 328 1 251 1 296 2 295 2 372 1 297 2 252 2 374 2 300 5 
80 1 81 1 3 1 174 3 47 1 210 1 335 1 53 1 31 1 105 1 157 1 12 1 289 1 323 1 322 2 139 1 251 1 372 1 20 1 252 1 277 2 300 3 
204 1 80 1 81 1 3 1 174 3 47 1 210 1 50 1 335 1 53 1 31 1 105 1 33 1 157 1 12 1 289 1 322 1 323 1 139 1 251 1 372 1 20 1 277 3 300 3 
204 1 80 1 81 1 3 1 174 3 47 1 210 1 50 1 335 1 31 1 53 1 105 1 33 1 157 1 12 1 289 1 323 1 322 2 139 1 251 1 372 1 20 1 252 1 277 3 344 1 300 3 
204 4 3 1 47 1 210 1 50 5 335 1 53 1 105 1 153 2 217 2 157 1 12 1 14 1 307 1 17 1 169 1 20 1 344 4 277 6 80 1 81 1 174 5 315 2 31 3 33 5 241 1 185 1 186 1 129 1 288 1 289 1 322 7 323 1 139 1 251 1 197 1 373 1 372 1 296 2 199 1 297 2 331 1 252 4 300 5 
204 2 80 1 81 1 3 1 174 4 315 2 47 1 210 1 50 1 335 1 31 2 53 1 153 2 105 1 33 2 217 2 185 1 241 1 186 1 288 1 12 1 129 1 289 1 322 4 323 1 307 1 17 1 139 1 328 1 251 1 296 2 372 1 297 2 169 1 252 2 20 1 344 2 277 4 374 2 300 4 
204 2 80 1 81 1 3 1 174 4 315 2 47 1 210 1 50 1 335 1 31 2 53 1 153 2 105 1 33 1 217 2 185 1 241 1 186 1 288 1 129 1 12 1 289 1 14 1 322 4 323 1 307 1 17 1 139 1 251 1 296 2 372 1 199 1 297 2 169 1 331 1 252 2 20 1 344 2 277 4 300 4 
204 2 80 1 81 1 3 1 174 4 315 2 47 1 210 1 50 1 335 1 31 2 53 1 153 2 105 1 33 1 217 2 185 1 241 1 186 1 288 1 129 1 12 1 289 1 14 1 322 4 323 1 307 1 17 1 139 1 251 1 296 2 372 1 199 1 297 2 169 1 331 1 252 2 20 1 344 2 277 4 300 4 
204 2 80 1 172 2 81 1 3 1 174 4 47 1 178 1 210 1 50 1 51 2 335 1 31 2 53 1 105 1 33 1 185 1 241 1 186 1 288 1 12 1 289 1 270 1 322 4 323 1 307 1 17 1 139 1 251 1 296 2 372 1 297 2 169 1 331 1 252 2 20 1 344 2 277 4 95 1 374 2 300 4 
204 3 80 1 81 1 3 1 174 4 315 2 47 1 210 1 50 1 335 1 31 2 53 1 153 2 105 1 33 1 217 2 185 1 241 1 186 1 288 1 129 1 12 1 289 1 14 1 323 1 322 5 307 1 17 1 139 1 251 1 197 1 296 2 372 1 199 1 297 2 169 1 331 1 20 1 252 3 277 5 344 3 300 4 
204 3 80 1 81 1 3 1 174 4 315 2 47 1 210 1 50 1 335 1 31 2 53 1 153 2 105 1 33 1 217 2 185 1 241 1 186 1 288 1 129 1 12 1 289 1 14 1 323 1 322 5 307 1 17 1 139 1 251 1 197 1 296 2 372 1 199 1 297 2 169 1 331 1 20 1 252 3 277 5 344 3 300 4 
204 2 80 1 172 2 81 1 3 1 174 4 47 1 178 1 210 1 50 1 51 2 335 1 31 2 53 1 105 1 33 1 185 1 241 1 186 1 288 1 12 1 289 1 322 4 323 1 307 1 17 1 139 1 328 1 251 1 296 2 372 1 297 2 169 1 252 2 20 1 344 2 277 4 374 2 300 4 
97 2 281 3 119 1 99 1 85 1 29 1 150 1 262 1 236 1 32 1 318 1 158 1 159 1 266 1 128 3 190 1 64 6 222 1 246 2 370 1 310 2 44 1 276 1 19 2 141 1 202 1 
96 1 24 1 97 1 281 6 120 1 121 1 99 2 7 1 29 1 102 1 264 1 57 3 158 2 159 2 266 2 128 8 267 1 190 11 64 14 222 4 246 4 370 11 325 1 310 1 327 2 74 1 44 2 276 1 19 2 116 1 76 2 201 3 202 2 
96 1 97 1 230 1 25 1 281 1 348 1 3 1 121 1 352 1 45 1 99 1 259 1 334 1 354 1 148 1 211 1 151 1 53 2 359 1 361 1 363 1 159 1 266 1 128 1 64 2 292 1 222 1 71 1 246 2 225 1 276 1 44 1 166 1 74 1 295 1 311 1 20 2 202 1 
96 1 97 2 1 2 3 1 45 3 99 3 334 2 6 1 102 4 151 2 262 1 53 3 264 2 158 3 159 3 266 3 64 20 13 1 271 2 222 7 71 1 310 4 225 2 72 2 74 1 276 3 19 8 20 3 311 2 76 2 230 2 281 10 25 3 119 1 348 1 121 1 282 1 352 2 354 1 353 2 85 1 29 3 359 1 32 1 361 2 363 1 318 1 128 10 190 7 40 1 291 2 292 2 246 6 370 7 327 2 44 3 295 3 141 1 202 3 
96 1 79 2 25 7 281 1 143 1 348 2 3 1 98 1 45 8 99 2 46 1 354 1 334 2 150 1 151 3 53 1 359 1 361 2 159 2 39 1 266 2 62 1 128 1 160 1 64 2 40 1 133 1 292 2 71 1 246 4 138 1 195 1 326 1 44 2 276 2 74 1 295 8 20 1 202 2 
281 2 3 1 121 1 28 1 99 1 29 1 53 1 359 1 264 1 158 1 159 1 266 1 128 1 190 1 64 3 366 1 222 1 324 1 246 2 71 1 370 1 310 1 327 1 44 1 276 1 19 1 20 1 76 1 202 1 
158 1 159 1 266 1 128 2 190 1 64 2 222 1 99 1 293 1 246 2 370 1 102 1 150 1 276 1 44 1 19 1 76 1 202 1 
159 1 266 1 281 2 190 1 64 2 222 1 99 1 246 2 370 1 112 1 310 1 29 1 150 1 276 1 44 1 19 1 264 1 202 1 
281 2 99 1 29 1 102 1 150 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 222 2 246 2 370 2 327 1 310 1 44 1 276 1 19 2 76 1 202 1 
158 1 159 1 266 1 128 2 190 1 64 2 222 1 99 1 293 1 246 2 370 1 326 1 102 1 276 1 44 1 19 1 76 1 202 1 
159 1 266 1 281 2 190 1 64 2 222 1 99 1 246 2 370 1 112 1 310 1 326 1 29 1 276 1 44 1 19 1 264 1 202 1 
281 2 99 1 29 1 102 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 222 2 246 2 370 2 327 1 326 1 310 1 44 1 276 1 19 2 76 1 202 1 
281 2 99 1 29 1 102 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 222 2 246 2 370 2 327 1 310 1 44 1 276 1 19 2 76 1 202 1 
96 1 97 1 230 1 25 1 281 1 348 1 352 1 45 1 99 1 334 1 151 1 53 1 361 1 159 1 128 1 266 1 64 2 271 1 292 1 246 2 225 1 74 1 276 1 44 1 295 1 311 1 20 1 202 1 
96 1 97 1 230 1 25 1 281 1 348 1 45 1 99 1 334 1 316 1 151 1 53 1 361 1 159 1 128 1 266 1 365 1 64 2 292 1 246 2 194 1 74 1 276 1 44 1 295 1 311 1 20 1 202 1 
281 2 121 1 99 1 29 1 102 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 222 2 246 2 370 2 327 1 310 1 44 1 276 1 19 2 76 1 202 1 
230 1 281 2 25 1 143 1 352 1 45 1 99 1 334 1 29 1 102 1 151 1 53 1 361 1 264 1 158 1 159 1 128 2 266 1 190 2 64 4 271 1 291 1 222 2 292 1 246 2 370 2 310 1 225 1 327 1 276 1 44 1 295 1 19 2 311 1 20 1 76 1 202 1 
281 1 3 1 121 1 28 1 99 1 29 1 102 1 53 1 359 1 264 1 184 1 158 1 159 1 266 1 128 2 190 1 64 3 366 1 222 1 246 2 71 1 370 1 327 1 44 1 276 1 19 1 20 1 76 1 202 1 
0 1 2 2 99 3 7 3 102 4 262 1 55 1 264 4 58 1 57 4 158 5 159 3 61 1 267 1 64 41 110 1 16 1 70 1 164 1 310 4 19 8 76 4 22 1 281 21 119 1 314 4 285 1 85 1 29 5 125 1 32 1 318 1 183 1 128 20 41 1 246 6 294 1 327 4 44 3 330 1 141 1 201 3 202 3 
0 1 281 18 119 1 2 2 314 4 99 4 285 1 85 1 7 3 29 4 102 3 262 1 125 1 55 1 32 1 264 3 318 1 57 4 58 1 183 1 158 5 159 4 61 1 128 20 267 1 64 38 41 1 164 1 70 1 16 1 110 1 246 8 294 1 310 4 327 4 330 2 44 4 19 7 141 1 76 4 201 3 22 1 202 4 
0 1 281 25 119 1 2 1 314 4 99 2 285 1 85 1 7 2 29 8 102 7 262 1 125 1 32 1 264 7 318 1 57 4 58 1 183 1 158 8 159 2 61 1 128 27 267 2 64 52 41 1 70 1 16 1 110 1 246 4 294 1 310 7 327 7 330 1 44 2 19 14 116 2 141 1 76 7 201 4 22 1 202 2 
281 10 2 1 314 2 99 2 285 1 7 1 29 3 102 3 55 1 264 3 57 2 58 1 158 3 159 2 61 1 128 9 267 1 64 19 70 2 308 1 110 1 246 4 294 1 310 3 327 3 44 2 19 6 76 3 201 1 202 2 
0 1 281 12 2 2 314 4 99 3 285 1 7 2 29 2 102 2 125 1 264 2 58 1 57 2 183 1 158 3 159 3 61 1 128 14 64 26 41 1 70 1 16 1 110 1 246 6 294 2 310 2 327 3 330 2 44 3 19 4 76 3 201 2 22 1 202 3 
96 1 79 2 279 1 281 1 25 2 256 1 3 2 121 1 45 2 99 1 334 1 46 1 151 1 53 2 361 1 287 1 159 1 266 1 62 1 128 1 64 2 292 1 135 1 246 2 248 1 276 1 44 1 74 1 295 2 20 2 202 1 
23 1 347 2 25 2 269 1 131 1 143 1 40 1 305 1 243 1 134 1 292 1 45 2 351 1 223 1 334 1 42 1 295 2 94 1 345 1 
23 1 347 2 25 1 269 1 40 1 243 1 134 1 292 1 45 1 351 1 223 1 334 1 42 1 295 1 94 1 345 1 240 1 
23 1 160 1 25 1 131 1 348 1 66 1 98 1 292 1 45 1 334 1 30 1 151 1 295 1 361 1 
23 1 347 2 25 1 269 1 131 1 40 1 305 1 243 1 134 1 292 1 45 1 351 1 223 1 334 1 42 1 295 1 94 1 345 1 
221 1 
186 1 288 1 50 1 104 1 236 1 33 1 35 1 
174 1 315 1 50 1 31 1 153 1 33 2 217 1 185 1 241 1 186 1 288 1 129 1 322 1 17 1 169 1 374 1 300 1 
143 1 144 1 45 3 5 1 4 1 334 4 50 2 151 10 104 1 152 2 56 2 264 2 156 2 158 2 12 2 67 6 17 4 115 3 75 1 169 4 311 3 76 2 21 2 25 3 231 1 232 2 348 1 174 5 84 6 27 2 315 6 353 2 29 2 31 3 361 3 179 1 362 2 33 8 35 1 241 4 185 4 186 8 288 9 189 2 191 2 292 3 322 5 327 2 371 1 250 2 295 3 374 12 299 2 300 5 
0 1 27 1 174 1 84 5 315 3 5 1 7 1 29 2 50 2 31 1 125 1 33 5 264 2 57 1 183 1 158 2 185 2 241 2 186 5 188 1 288 8 191 1 67 5 322 1 41 1 16 1 17 2 327 2 169 2 76 2 201 1 346 1 374 6 300 1 299 2 
80 1 119 1 3 1 27 1 174 1 29 1 53 1 359 1 318 1 158 2 185 1 241 1 60 1 186 2 288 2 366 1 367 1 338 1 14 1 17 1 71 1 114 1 198 1 169 1 20 1 141 1 299 2 300 1 
241 1 185 1 186 1 288 1 17 1 50 1 104 1 169 1 33 1 35 1 
158 2 186 5 288 5 27 1 84 5 67 5 315 5 353 1 327 2 29 2 76 2 33 5 264 2 374 10 299 2 
50 1 31 1 174 1 33 1 322 1 300 1 
25 4 231 2 348 2 98 1 174 3 45 4 147 1 5 2 334 1 151 1 103 1 31 2 361 1 155 1 181 1 185 2 241 2 304 1 186 2 288 2 160 1 191 2 292 1 322 4 17 1 75 1 295 4 169 2 300 3 
96 1 97 1 230 1 281 1 25 1 348 1 3 2 45 1 352 1 99 1 334 1 151 1 53 3 359 2 361 1 319 1 159 1 266 1 64 1 366 2 271 1 292 1 246 2 71 2 225 1 44 1 198 1 276 1 295 1 20 3 311 1 202 1 
241 1 185 1 186 2 288 1 191 1 84 2 67 2 315 2 5 1 17 1 50 2 169 1 32 1 33 4 374 4 
37 1 320 1 238 1 
37 1 320 1 238 1 
320 1 249 1 118 1 244 1 238 1 
37 1 320 1 238 1 
320 1 237 1 238 1 
320 1 237 1 238 1 
320 1 237 1 238 1 
320 1 238 1 
275 1 73 1 
281 4 119 1 99 1 85 1 7 1 29 1 262 1 32 1 318 1 57 1 58 1 158 1 183 1 159 1 128 4 64 8 246 2 310 2 44 1 19 2 141 1 201 1 202 1 
281 5 119 1 176 1 99 2 85 1 7 1 29 1 102 1 262 1 32 1 318 1 57 2 58 1 183 1 158 2 159 2 128 6 267 1 64 11 246 4 310 2 327 1 44 2 19 3 141 1 76 1 201 1 202 2 
0 1 281 10 119 1 176 1 99 3 85 1 7 1 29 3 102 1 262 1 125 1 32 1 264 2 318 1 57 1 58 1 183 1 158 3 159 3 128 9 64 19 41 1 16 1 246 6 327 2 310 3 44 3 330 1 19 4 141 1 76 2 201 1 202 3 
0 1 281 7 119 1 176 1 99 3 85 1 7 1 29 2 102 2 262 1 125 1 32 1 264 1 318 1 57 1 58 1 183 1 158 3 159 3 128 10 64 17 41 1 246 6 16 1 327 2 310 3 330 1 44 3 19 5 141 1 76 2 201 1 202 3 
281 4 119 1 99 1 85 1 7 1 29 1 262 1 32 1 318 1 57 1 58 1 158 1 183 1 159 1 128 4 64 8 246 2 310 2 44 1 19 2 141 1 201 1 202 1 
0 1 281 6 99 1 7 1 29 2 102 1 125 1 264 2 57 1 58 1 183 1 158 2 159 1 128 6 64 12 41 1 246 2 16 1 327 2 310 1 44 1 19 2 76 2 201 1 202 1 
0 1 281 8 119 1 176 1 99 4 85 1 7 1 29 2 102 2 262 1 125 1 32 1 264 1 318 1 57 1 58 1 183 1 158 3 159 4 128 10 64 18 41 1 16 1 246 8 327 2 310 3 44 4 330 2 19 5 141 1 76 2 201 1 202 4 
0 1 281 7 99 4 7 1 29 2 102 3 125 1 55 1 264 2 57 1 58 1 183 1 158 3 159 4 128 9 64 16 41 1 16 1 246 8 327 3 310 3 44 4 330 2 19 6 76 3 201 1 202 4 
158 1 128 3 281 4 64 7 119 3 85 2 29 1 310 3 102 3 262 1 19 6 141 1 318 3 
0 1 281 8 119 1 99 4 85 1 7 1 29 2 102 1 262 1 125 1 55 1 32 1 264 1 318 1 57 1 58 1 183 1 158 3 159 4 128 10 64 18 41 1 16 1 246 8 327 2 310 3 44 4 330 2 19 4 141 1 76 2 201 1 202 4 
158 1 159 2 128 4 281 4 64 8 119 1 99 2 246 4 85 1 29 1 310 2 102 1 44 2 330 1 262 1 19 3 32 1 141 1 202 2 318 1 
158 1 85 1 128 3 29 1 310 2 281 3 64 6 119 1 262 1 19 2 236 1 32 1 141 1 318 1 
158 1 159 1 128 2 281 2 64 4 176 1 99 1 246 2 310 1 29 1 327 1 102 1 44 1 19 2 264 1 76 1 202 1 
158 1 128 3 281 4 267 1 64 7 7 1 310 1 29 1 327 1 102 1 19 2 264 1 76 1 201 1 57 2 
281 12 119 2 120 1 99 2 85 1 29 3 102 4 262 1 32 1 264 2 318 2 57 2 158 3 159 2 128 11 267 1 64 23 246 4 327 2 310 5 274 1 330 2 44 2 19 9 116 1 141 1 76 2 201 2 202 2 
281 1 64 1 57 1 
128 1 64 1 201 1 
158 1 159 1 128 3 281 3 64 6 176 1 99 1 246 2 353 1 327 1 29 1 310 2 102 1 44 1 19 3 76 1 264 1 202 1 
0 1 281 6 99 1 7 1 29 2 102 1 125 1 264 2 57 1 58 1 183 1 158 2 159 1 128 6 64 12 41 1 246 2 16 1 327 2 310 1 44 1 19 2 76 2 201 1 202 1 
158 1 128 3 281 3 64 6 119 1 29 1 310 1 102 1 19 2 141 1 318 1 
159 1 128 1 281 2 119 1 64 3 99 1 246 2 85 1 310 1 274 1 102 1 330 1 44 1 262 1 19 2 318 1 202 1 
158 2 159 1 128 5 281 5 119 2 64 10 99 1 246 2 310 3 29 2 102 2 44 1 114 1 19 5 141 1 202 1 318 2 58 1 
158 1 159 1 128 2 64 2 99 1 246 2 102 1 44 1 19 1 76 1 202 1 58 1 
158 1 159 1 128 2 281 2 64 4 99 1 246 2 310 1 29 1 327 1 102 1 44 1 19 2 264 1 76 1 202 1 58 1 
159 3 128 1 281 2 64 3 119 1 99 3 246 6 310 1 274 1 102 1 330 1 44 3 19 2 55 1 202 3 318 1 58 1 
281 18 119 3 176 1 99 5 85 1 7 1 29 5 102 5 262 1 302 1 55 1 32 1 264 3 318 3 182 1 57 4 58 1 158 5 159 5 128 16 267 1 64 34 273 1 246 10 327 3 310 7 274 1 330 2 44 5 19 12 141 2 76 3 201 3 202 5 
97 1 53 1 3 1 227 1 20 1 350 1 323 1 
97 1 3 1 350 1 323 1 53 1 93 1 227 1 215 1 20 1 200 1 86 1 312 1 
97 1 230 1 25 1 348 1 3 1 292 1 45 1 334 1 354 1 71 1 194 1 151 1 295 1 53 2 359 1 361 1 311 1 20 2 
25 1 231 1 292 1 45 1 334 2 151 1 295 1 106 1 179 1 311 1 361 1 180 1 108 1 
334 1 160 1 25 1 151 1 348 1 295 1 236 1 98 1 361 1 292 1 45 1 
97 1 230 1 25 1 348 1 3 1 292 1 45 1 352 1 334 1 354 1 71 1 151 1 295 1 53 2 359 1 361 1 311 1 20 2 
80 1 97 1 81 1 230 1 25 1 232 1 231 1 289 1 3 2 292 1 45 1 352 1 334 1 354 1 71 2 151 3 295 1 152 1 53 2 359 1 361 2 311 2 20 2 
80 1 97 1 230 1 81 1 25 2 231 1 232 1 3 2 45 2 354 1 334 1 151 3 53 2 152 1 359 1 361 2 11 1 289 1 292 1 71 2 194 1 295 2 20 2 311 2 
11 1 12 1 25 3 232 1 218 1 231 1 348 1 174 2 292 1 45 3 322 1 334 1 137 1 50 1 115 1 151 4 295 3 152 1 361 1 311 1 362 1 33 1 300 2 
11 1 12 1 25 3 232 1 231 1 348 1 174 2 292 1 45 3 322 1 334 1 50 1 115 1 151 4 295 3 152 1 361 1 311 1 362 1 33 1 56 1 300 2 
334 1 39 1 25 1 295 1 292 1 45 1 
79 1 39 1 25 6 143 1 348 2 40 1 133 1 292 2 45 7 46 1 334 3 138 1 195 1 151 3 295 7 106 1 179 1 311 1 361 2 180 1 108 1 
97 2 1 1 143 1 3 1 45 1 99 2 334 1 151 1 262 1 53 2 158 1 159 2 266 2 64 6 271 1 222 1 71 1 225 1 310 2 276 2 19 2 20 2 311 1 230 1 25 1 281 3 119 1 121 1 352 1 354 1 85 1 29 1 359 1 361 1 32 1 318 1 128 3 190 1 291 1 135 1 292 1 246 4 370 1 44 2 295 1 141 1 202 2 
228 1 25 1 348 1 174 3 45 1 50 1 151 2 104 1 31 1 362 1 33 1 56 1 35 1 156 1 185 2 241 2 186 1 288 1 12 1 189 1 322 2 17 2 115 1 75 1 295 1 169 2 21 1 300 3 
39 1 25 2 143 1 144 1 292 1 45 2 334 2 151 2 295 2 362 1 179 1 311 1 361 1 
11 1 160 1 25 4 348 1 143 1 98 1 292 1 45 4 68 1 334 1 151 1 295 4 361 1 
25 2 231 1 257 1 292 1 45 2 334 2 6 1 124 1 151 1 295 2 106 1 311 1 361 1 108 1 
334 1 347 1 42 1 25 1 269 1 348 1 295 1 94 1 292 1 45 1 
279 1 25 2 143 1 40 1 292 1 45 2 46 1 334 1 151 1 295 2 361 1 
160 1 25 4 231 1 348 1 143 1 98 1 133 1 292 2 45 5 68 1 46 1 334 2 138 1 151 3 295 5 361 2 
160 1 25 4 231 1 348 1 143 1 98 1 133 1 292 2 45 5 68 1 46 1 334 2 151 3 295 5 361 2 9 1 
87 1 253 1 97 1 355 1 342 1 
253 2 87 2 59 1 80 1 97 1 228 1 12 1 81 1 289 1 162 1 174 2 234 1 355 2 50 1 342 1 372 1 154 1 33 1 300 2 
253 1 287 1 256 1 3 1 355 1 248 1 342 1 53 1 20 1 
342 1 154 1 234 1 
245 1 18 1 255 1 236 1 
245 1 18 1 82 1 255 1 140 1 26 1 175 1 
340 1 113 1 26 1 
82 1 255 1 26 3 206 1 175 3 245 1 18 1 261 1 52 1 167 2 140 1 336 1 
245 1 18 1 82 1 255 1 43 1 212 1 140 1 26 2 175 2 
18 1 165 1 261 1 347 1 82 1 140 1 26 1 360 1 94 1 175 1 223 1 
18 1 261 1 82 1 255 1 140 1 26 1 175 1 
245 1 261 1 82 1 255 2 140 1 26 1 175 1 
18 1 193 1 261 1 82 2 255 1 140 2 26 2 175 2 284 1 368 1 
82 1 255 1 26 3 175 3 245 1 101 1 18 2 261 1 43 2 140 1 298 1 360 1 263 1 
347 2 269 1 82 1 255 1 26 2 175 2 223 1 245 1 18 1 261 1 43 1 140 1 345 1 94 1 78 1 
82 2 255 1 26 4 175 4 245 1 111 1 101 1 18 2 261 1 212 1 43 2 140 2 360 1 
245 1 18 1 261 1 82 1 255 1 140 1 26 1 175 1 
82 1 255 2 206 1 26 4 175 4 245 2 101 1 18 3 43 2 167 1 140 1 360 1 336 1 142 1 
242 1 82 1 255 1 63 1 26 2 175 2 245 1 18 1 261 1 8 1 43 1 140 1 
82 1 255 1 26 3 206 2 175 3 272 1 245 1 18 1 261 1 167 2 140 1 336 1 
18 2 205 2 268 1 339 1 
261 1 82 1 140 1 26 1 175 1 301 1 
245 1 18 1 261 1 82 1 255 1 43 1 140 1 26 2 263 1 175 2 
349 1 
245 1 18 1 261 1 82 1 255 1 140 1 26 1 175 1 
82 1 255 1 26 3 175 3 245 1 18 1 261 1 43 1 167 1 140 1 263 1 
101 1 18 1 360 1 142 1 
18 1 255 1 

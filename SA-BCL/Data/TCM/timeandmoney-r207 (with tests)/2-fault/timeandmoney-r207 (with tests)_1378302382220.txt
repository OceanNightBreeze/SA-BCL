#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException 52 74 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException 52 74 131 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testSimple()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException 52 
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 503 | 59 -> 1
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 1 281 1 338 1 5 6 260 1 34 1 145 1 57 1 147 5 266 1 217 1 91 2 245 1 92 2 218 2 174 1 326 1 63 4 21 9 177 1 270 2 354 9 355 2 117 3 331 1 48 2 140 2 225 1 
227 1 281 1 338 1 5 6 260 1 34 1 145 1 57 1 147 5 266 1 217 1 91 2 245 1 92 2 218 2 174 1 326 1 63 4 21 9 177 1 270 2 354 9 355 2 117 3 331 1 48 2 140 2 225 1 
227 1 281 1 338 1 5 7 260 1 34 1 145 1 57 1 147 6 266 1 217 1 91 2 245 1 92 2 218 2 174 1 326 1 63 5 21 10 177 1 270 2 354 10 355 2 117 4 331 1 48 2 140 2 225 1 
227 1 281 1 338 1 5 4 260 1 34 1 145 1 57 1 147 4 266 1 91 2 245 1 92 2 218 2 174 1 326 1 63 3 21 7 177 1 270 1 354 7 355 2 117 2 331 1 48 2 140 2 225 1 
91 1 245 1 227 1 174 1 218 1 63 2 5 3 21 4 177 1 270 2 354 4 355 1 117 1 57 1 147 3 48 1 140 1 217 1 
185 1 91 1 245 1 92 1 227 1 174 1 218 1 326 1 21 2 354 2 147 1 253 1 208 1 48 1 140 1 225 1 
91 2 245 1 92 1 227 1 174 1 218 2 63 1 5 1 21 3 354 3 117 1 147 2 331 1 
227 1 338 1 5 7 260 1 85 1 147 5 57 1 15 1 217 1 91 2 245 1 92 1 218 2 174 1 63 4 21 9 177 1 270 2 354 9 355 1 117 3 331 1 48 1 140 1 
227 1 338 1 5 7 260 1 85 1 147 5 57 1 15 1 217 1 91 2 245 1 92 1 218 2 174 1 63 4 21 9 177 1 270 2 354 9 355 1 117 3 331 1 48 1 140 1 
222 1 181 1 134 1 
222 1 107 2 59 1 
76 2 324 2 42 2 237 2 239 2 82 1 153 2 136 1 
76 2 184 1 77 1 29 1 304 1 212 1 259 1 53 2 322 2 101 1 82 1 342 2 86 1 55 1 348 1 237 3 166 2 239 2 349 1 309 2 171 1 351 1 17 1 310 1 291 1 324 2 42 2 132 1 153 3 328 1 136 1 114 1 65 1 137 1 158 1 47 1 315 1 
76 1 191 1 41 1 324 1 42 1 237 1 239 1 153 1 136 1 96 1 
160 1 1 1 41 1 324 1 305 1 153 1 206 1 222 1 344 1 295 1 43 1 237 1 181 1 60 1 
76 1 160 1 1 2 41 1 42 1 324 1 305 2 153 1 206 1 222 1 344 1 295 1 237 1 239 1 181 1 
1 1 356 1 305 1 210 1 120 1 
222 1 318 1 1 2 356 1 305 2 181 1 232 1 120 1 
1 1 356 1 305 1 
76 1 1 1 41 1 42 1 324 1 305 1 153 1 136 1 96 1 191 1 68 1 237 1 239 1 120 1 
222 1 
222 1 318 1 1 2 356 1 275 1 305 2 181 1 120 1 
0 2 318 1 1 5 305 5 312 1 31 1 306 1 165 1 222 1 356 2 274 2 56 1 196 1 276 2 181 1 314 1 300 1 120 2 170 1 
82 1 134 1 
76 1 334 1 324 2 42 1 153 2 82 2 347 1 237 2 239 1 
332 1 169 1 333 1 
17 1 351 1 212 1 259 1 53 1 322 1 82 1 153 1 328 1 114 1 307 1 55 1 237 1 349 1 309 1 171 1 
76 1 351 1 17 1 212 1 42 1 324 1 259 1 53 1 322 1 328 1 153 2 114 1 95 1 55 1 237 2 332 1 167 1 349 1 309 1 171 1 
76 3 324 3 42 3 237 3 239 1 82 1 153 3 95 1 
76 1 41 1 324 1 42 1 237 1 153 1 96 1 
76 1 334 1 41 1 324 1 42 1 347 1 237 1 239 1 153 1 
76 3 160 1 1 1 304 1 212 1 259 1 53 1 322 1 101 1 305 1 82 1 342 2 344 1 192 1 86 1 55 1 347 1 237 4 166 1 239 2 167 1 349 1 309 1 171 1 351 1 17 1 310 1 41 1 324 3 42 3 132 1 328 1 153 4 114 1 95 1 136 1 65 1 137 1 206 1 295 1 158 1 359 1 47 1 315 1 
76 1 139 1 324 2 42 1 237 2 82 1 153 2 60 1 95 1 
76 3 255 1 160 1 1 1 41 1 42 3 324 3 305 1 153 3 95 2 206 1 222 1 344 1 295 1 347 1 237 3 359 1 239 1 167 1 
76 2 42 2 324 2 153 2 95 1 347 1 237 2 239 1 332 1 169 1 
17 1 351 1 212 1 259 1 53 1 322 1 82 1 153 1 328 1 114 1 55 1 237 1 349 1 309 1 171 1 
17 1 351 1 259 1 53 1 322 1 82 1 153 1 328 1 114 1 142 1 272 1 237 1 349 1 309 1 171 1 
316 1 187 1 211 1 101 1 342 2 84 1 103 1 105 1 286 1 86 1 348 2 166 4 198 1 169 2 149 1 310 1 203 1 132 1 178 1 137 2 158 1 332 2 333 2 315 1 
76 1 295 1 41 1 324 1 42 1 237 1 153 1 221 1 
76 4 337 1 42 4 324 5 153 5 82 1 95 2 294 1 139 1 347 1 237 5 239 1 167 1 60 1 
76 2 41 1 324 2 42 2 237 2 221 1 153 2 96 1 
176 1 119 1 
176 1 119 1 
296 1 32 1 
296 1 32 1 
296 1 32 1 
176 1 119 1 329 1 
176 1 119 1 329 1 
146 1 176 1 119 1 
296 1 252 1 13 1 176 2 119 2 32 1 
176 1 119 1 329 1 
176 1 141 1 119 1 
176 1 141 1 119 1 
176 1 141 1 119 1 
27 1 52 1 151 1 176 1 119 1 74 1 
27 1 1 1 52 1 151 1 176 1 131 1 305 1 119 1 74 1 
355 1 48 1 140 1 
208 1 48 1 140 1 
161 1 355 2 219 1 236 1 208 1 140 3 
161 1 355 1 219 1 208 1 250 1 140 2 
355 1 161 1 219 2 208 1 140 2 
316 1 0 1 318 1 1 5 30 1 211 1 305 5 126 2 165 1 102 2 285 1 127 1 196 2 107 3 37 1 59 1 198 1 216 1 110 1 311 1 178 1 222 2 67 1 356 1 274 1 276 1 181 1 300 3 73 1 120 4 182 2 278 1 
316 3 0 2 318 1 1 9 211 3 3 1 305 9 340 1 126 6 165 1 102 6 285 3 127 2 196 6 107 9 37 1 59 3 198 3 199 1 110 4 269 1 352 1 311 2 178 3 222 5 356 6 274 2 45 1 46 5 276 2 314 1 181 1 300 8 210 5 120 7 
0 1 316 1 1 3 211 1 305 3 126 2 102 2 285 1 127 1 196 2 107 4 59 2 198 1 110 1 311 1 178 1 222 3 274 1 276 1 181 1 314 1 300 3 120 2 73 1 182 1 278 1 
0 1 316 2 1 4 211 2 3 1 305 4 340 1 126 4 102 4 285 2 127 1 196 4 107 7 59 3 198 2 110 2 311 1 178 2 222 4 274 1 45 1 276 1 181 1 314 1 300 5 73 1 182 2 120 3 278 1 
349 1 39 1 134 1 
233 1 349 1 
195 1 
351 1 349 1 
351 1 204 1 195 1 349 3 39 2 244 1 171 1 
351 1 349 1 171 1 
87 1 349 1 
317 1 187 3 4 1 79 2 81 1 84 2 137 3 178 1 144 1 265 1 69 1 12 1 348 4 299 1 166 7 198 1 254 1 
317 1 187 3 4 1 79 2 81 1 84 2 137 3 178 1 144 1 265 1 69 1 12 1 348 4 299 1 166 7 198 1 254 1 
317 1 187 3 4 1 79 2 81 1 84 2 137 3 178 1 144 1 265 1 69 1 12 1 348 4 299 1 166 7 289 1 198 1 254 1 
317 1 316 3 187 10 258 1 211 3 4 2 79 3 101 1 81 2 342 2 84 5 265 1 214 4 285 3 144 5 86 1 348 16 12 2 166 31 197 1 288 1 198 4 242 1 173 1 310 1 205 1 137 15 178 4 69 2 179 3 299 1 254 1 315 1 122 1 
187 4 79 2 4 1 101 2 81 1 342 4 84 3 144 1 265 1 86 2 348 5 12 1 166 9 198 1 242 1 90 1 310 2 293 1 178 1 137 4 69 1 299 1 254 1 315 2 
335 1 227 1 280 1 53 1 322 1 5 1 234 1 236 1 147 1 14 1 268 1 309 1 91 1 245 1 92 1 218 1 174 1 247 1 21 2 220 1 328 1 135 1 114 1 22 1 354 2 355 1 98 1 208 1 48 1 140 2 
335 1 227 1 280 1 53 1 322 1 5 2 9 1 236 1 147 1 14 1 38 1 309 1 91 1 245 1 92 1 218 1 247 1 21 3 220 1 328 1 135 1 114 1 22 1 354 3 355 1 98 1 209 1 208 1 48 1 140 2 
335 1 227 1 280 1 53 1 322 1 5 2 9 1 236 1 147 1 38 1 309 1 245 1 92 1 21 2 220 1 328 1 135 1 114 1 22 1 354 2 355 1 98 1 208 1 48 1 140 2 
335 2 280 2 259 1 53 1 322 1 349 1 243 1 309 1 91 1 351 1 92 2 218 1 64 1 21 1 328 1 114 1 135 2 115 1 313 1 354 1 116 1 156 1 209 1 
335 1 280 1 53 1 322 1 9 1 236 1 14 1 268 1 309 1 91 1 92 1 218 1 174 1 247 1 21 1 220 1 328 1 135 1 114 1 22 1 354 1 355 1 98 1 208 1 48 1 140 2 
11 1 
0 1 318 3 1 5 53 2 282 1 322 2 8 1 284 2 193 1 196 2 237 1 108 1 107 2 59 2 60 1 243 1 148 1 324 1 19 1 328 1 153 1 154 1 114 1 115 1 206 1 251 1 295 1 298 4 330 2 118 2 300 2 160 1 259 2 305 5 343 2 165 1 344 1 36 1 349 1 89 1 350 2 309 2 351 1 41 1 311 1 222 2 356 6 43 1 274 1 44 1 100 2 276 1 181 1 224 2 277 1 
160 1 318 1 1 3 282 1 305 3 344 1 284 1 36 1 237 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 295 1 43 1 298 2 356 2 275 1 277 1 
160 1 318 1 1 3 282 1 305 3 344 1 36 1 237 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 356 1 43 1 298 3 118 1 275 1 181 1 277 1 
318 1 160 1 1 3 282 1 305 3 344 1 284 1 36 1 237 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 43 1 298 3 356 2 330 1 275 1 118 1 181 1 277 1 
0 1 318 3 160 1 1 5 78 1 282 1 305 5 343 2 165 1 8 1 344 1 284 4 36 1 128 1 196 1 237 1 59 2 168 1 89 1 350 2 200 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 5 66 1 295 1 43 1 356 7 298 6 274 1 330 4 100 2 276 1 118 4 275 1 181 5 300 1 224 2 277 1 
0 1 318 2 1 4 282 1 8 1 284 2 237 1 196 1 107 2 108 1 59 2 60 1 324 1 154 1 153 1 206 1 251 1 295 1 298 4 330 2 118 2 300 1 160 1 305 4 165 1 343 2 344 1 36 1 89 1 350 2 41 1 222 2 43 1 356 4 274 1 100 2 276 1 181 1 224 2 277 1 
0 1 318 2 160 1 1 4 78 1 282 1 305 4 343 2 165 1 8 1 344 1 284 2 36 1 128 1 196 1 237 1 59 2 89 1 350 2 200 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 356 4 43 1 298 4 274 1 330 2 100 2 118 2 276 1 181 1 300 1 224 2 277 1 
0 1 318 2 160 1 1 4 78 1 282 1 305 4 343 2 165 1 8 1 344 1 284 2 36 1 128 1 196 1 237 1 59 2 89 1 350 2 200 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 356 4 43 1 298 4 274 1 330 2 100 2 118 2 276 1 181 1 300 1 224 2 277 1 
0 1 318 2 226 2 160 1 1 4 320 2 282 1 305 4 6 1 343 2 165 1 8 1 344 1 284 2 36 1 196 1 237 1 107 2 200 1 60 1 246 1 41 1 324 1 62 1 153 1 154 1 206 1 251 1 222 1 295 1 356 4 43 1 298 4 274 1 330 2 100 2 118 2 276 1 181 1 300 1 277 1 
0 1 318 2 160 1 1 4 78 1 282 1 305 4 343 2 165 1 8 1 344 1 284 3 36 1 128 1 196 1 237 1 59 2 168 1 89 1 350 2 200 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 43 1 298 5 356 5 274 1 330 3 100 2 276 1 118 3 181 1 300 1 224 2 277 1 
0 1 318 2 160 1 1 4 78 1 282 1 305 4 343 2 165 1 8 1 344 1 284 3 36 1 128 1 196 1 237 1 59 2 168 1 89 1 350 2 200 1 60 1 41 1 324 1 153 1 154 1 206 1 251 1 222 1 295 1 43 1 298 5 356 5 274 1 330 3 100 2 276 1 118 3 181 1 300 1 224 2 277 1 
0 1 226 2 318 2 1 4 320 2 282 1 8 1 284 2 237 1 196 1 107 2 108 1 60 1 246 1 324 1 154 1 153 1 206 1 251 1 295 1 298 4 330 2 118 2 300 1 160 1 305 4 165 1 343 2 344 1 36 1 41 1 222 1 43 1 356 4 274 1 100 2 276 1 181 1 277 1 
187 2 4 1 79 1 101 1 342 2 82 2 84 2 265 1 86 1 348 3 166 6 169 1 198 1 310 1 203 1 132 1 134 1 178 1 137 3 69 1 158 1 332 1 299 1 333 1 254 1 315 1 
316 2 187 2 257 1 304 1 211 1 101 2 82 1 342 4 84 1 144 1 214 3 285 2 86 2 287 1 348 8 238 1 166 14 288 1 169 4 198 1 310 2 291 1 111 1 132 2 205 1 137 6 178 2 24 1 179 3 158 1 332 11 333 11 315 2 
76 1 212 1 304 1 259 1 53 1 322 1 101 1 82 1 342 2 190 1 307 1 55 1 86 1 287 1 348 1 237 2 166 2 167 1 349 1 169 1 267 1 309 1 171 1 351 1 17 1 310 1 291 1 324 1 42 1 132 1 328 1 153 2 114 1 95 1 137 1 271 1 158 1 315 1 
316 2 187 8 4 1 53 3 229 1 322 3 101 3 9 1 285 2 144 4 55 2 287 1 237 3 198 3 109 2 17 2 291 1 324 1 112 2 152 1 153 3 328 2 114 2 65 2 69 1 158 3 299 1 332 7 333 7 72 2 254 1 76 1 304 1 212 2 211 2 259 1 79 1 82 2 342 6 84 4 265 1 86 3 346 2 348 10 166 20 167 1 349 2 169 7 130 1 309 3 171 2 351 2 310 3 42 1 132 3 95 1 137 10 178 3 315 3 
76 1 336 1 29 2 304 1 259 2 53 8 322 8 101 2 342 4 9 1 234 1 86 2 348 1 237 1 166 2 349 3 243 1 309 7 351 2 310 2 150 1 292 1 291 1 175 1 324 1 42 1 203 1 132 2 153 1 328 2 94 1 95 1 114 2 115 1 137 1 70 1 158 2 75 1 315 2 
76 1 316 1 187 1 211 1 101 1 342 2 84 1 285 1 347 1 86 1 287 1 348 1 237 1 239 1 166 3 169 1 198 1 310 1 42 1 324 1 132 1 153 1 178 1 137 2 207 1 158 1 332 1 333 1 315 1 
316 1 187 1 310 1 203 1 132 1 101 1 342 2 178 1 103 1 144 1 86 1 348 2 158 1 332 1 166 2 169 1 333 1 315 1 
187 1 310 1 211 1 203 1 132 1 101 1 342 2 84 1 137 2 86 1 286 1 158 1 332 1 166 2 169 1 333 1 198 1 315 1 
316 1 187 2 211 1 101 1 342 2 84 1 285 1 144 1 86 1 348 2 166 4 169 2 198 1 310 1 203 1 132 1 178 1 137 2 158 1 332 2 333 2 315 1 
316 1 187 1 310 1 292 1 132 1 101 1 342 2 178 1 103 1 144 1 86 1 348 2 158 1 332 1 166 2 169 1 333 1 315 1 
187 1 310 1 292 1 211 1 132 1 101 1 342 2 84 1 137 2 86 1 286 1 158 1 332 1 166 2 169 1 333 1 198 1 315 1 
316 1 187 2 211 1 101 1 342 2 84 1 285 1 144 1 86 1 348 2 166 4 169 2 198 1 310 1 292 1 132 1 178 1 137 2 158 1 332 2 333 2 315 1 
316 1 187 2 211 1 101 1 342 2 84 1 285 1 144 1 86 1 348 2 166 4 169 2 198 1 310 1 132 1 178 1 137 2 158 1 332 2 333 2 315 1 
212 1 304 1 259 1 53 1 322 1 101 1 82 1 342 2 55 1 86 1 348 1 237 1 166 2 349 1 309 1 171 1 351 1 17 1 310 1 291 1 132 1 328 1 153 1 114 1 65 1 137 1 158 1 315 1 
304 1 259 1 53 1 322 1 101 1 82 1 342 2 142 1 86 1 348 1 237 1 166 2 349 1 309 1 171 1 351 1 17 1 310 1 291 1 132 1 328 1 153 1 114 1 155 1 137 1 272 1 158 1 315 1 
316 1 187 2 211 1 101 1 342 2 84 1 285 1 144 1 86 1 348 2 287 1 166 4 169 2 198 1 310 1 132 1 178 1 137 2 158 1 332 2 333 2 315 1 
316 1 187 2 211 1 212 1 53 1 322 1 101 1 342 2 84 1 144 1 285 1 234 1 55 1 86 1 348 2 237 1 166 4 349 1 198 1 169 2 309 1 171 1 17 1 351 1 310 1 112 1 132 1 328 1 153 1 114 1 65 1 137 2 178 1 158 1 332 2 333 2 315 1 
76 1 316 1 187 1 319 1 211 1 101 1 342 2 144 1 285 1 347 1 86 1 287 1 348 2 237 1 239 1 166 3 198 1 169 1 310 1 42 1 324 1 132 1 153 1 137 1 178 1 158 1 332 1 333 1 315 1 
316 3 187 6 211 3 163 1 101 2 342 4 84 3 143 1 54 1 214 2 285 3 144 3 86 2 348 9 166 19 129 1 288 1 198 3 172 1 310 2 293 1 133 2 205 1 137 10 178 3 297 1 26 1 179 1 49 2 315 2 
316 3 187 4 211 2 163 2 101 3 164 1 342 6 84 2 143 1 35 1 144 2 345 1 214 2 285 3 86 3 348 14 166 26 88 1 129 1 198 2 242 2 172 1 290 1 310 3 293 1 133 4 205 2 137 12 178 3 297 2 179 2 49 1 51 1 315 3 
316 4 187 8 4 1 101 3 143 1 144 4 285 4 54 1 288 1 198 5 242 1 290 1 293 1 205 3 297 1 69 1 299 1 254 1 121 1 211 4 163 2 79 1 164 1 342 6 84 4 35 1 214 4 345 1 265 1 86 3 348 20 166 41 88 1 129 1 172 1 310 3 133 4 178 5 137 21 179 3 49 1 315 3 51 1 
316 4 187 7 211 3 163 2 79 1 4 1 164 1 101 4 342 8 84 4 143 1 35 1 54 1 265 1 345 1 214 4 285 4 144 3 86 4 348 20 166 38 88 1 129 1 288 1 198 4 242 2 290 1 172 1 310 4 293 1 133 4 205 3 137 18 178 5 297 1 69 1 179 3 299 1 121 1 49 1 254 1 51 1 315 4 
316 7 187 14 211 7 163 1 79 1 4 1 164 1 101 2 342 4 84 7 143 1 35 1 265 1 345 1 214 4 285 7 144 7 86 2 348 27 166 52 88 1 129 1 288 2 198 8 242 1 290 1 172 1 310 2 293 1 133 4 205 2 137 25 178 8 24 2 297 1 69 1 179 4 299 1 49 1 254 1 51 1 315 2 
29 2 321 1 304 1 53 2 322 2 101 1 342 2 194 1 86 1 287 1 348 1 237 2 166 2 349 1 240 1 309 2 351 1 310 1 150 1 291 1 324 2 132 1 328 1 153 2 114 1 137 1 138 1 358 1 70 1 158 1 315 1 
53 2 322 2 230 1 113 1 328 1 114 1 135 1 22 1 9 1 355 1 234 1 98 1 236 1 223 1 14 1 208 1 48 1 140 2 309 2 
53 1 322 1 230 1 328 1 135 1 114 1 22 1 9 1 355 1 273 1 98 1 236 1 14 1 208 1 48 1 140 2 309 1 
351 1 259 1 53 1 322 1 328 1 114 1 135 1 115 1 116 1 235 1 223 1 349 1 243 1 309 1 
53 1 322 1 230 1 113 1 328 1 114 1 135 1 22 1 9 1 355 1 98 1 236 1 223 1 14 1 208 1 48 1 140 2 309 1 
357 1 
222 1 196 1 181 1 134 1 300 1 31 1 306 1 
0 1 318 1 1 1 305 1 165 1 196 1 107 1 59 1 89 1 350 1 222 2 356 1 274 1 276 1 181 1 300 1 224 1 
0 4 316 2 318 3 1 5 228 1 53 3 322 3 323 1 102 6 104 1 233 3 285 2 234 1 106 2 196 8 107 12 59 6 198 2 241 2 244 1 18 2 19 1 248 2 328 3 114 4 25 1 300 9 72 2 302 1 211 2 259 1 261 2 305 5 262 2 31 1 306 1 165 4 126 6 344 2 87 2 349 10 39 2 309 3 171 3 351 3 93 2 311 2 178 2 222 8 356 5 274 4 276 4 180 2 181 2 
183 1 0 2 316 2 318 1 1 1 211 2 305 1 164 1 126 5 165 2 102 5 345 1 214 1 285 2 196 5 107 6 59 3 88 1 198 2 290 1 18 2 19 1 311 1 205 1 178 2 222 5 356 1 274 2 179 1 159 1 180 1 276 2 181 2 300 8 51 1 
0 1 76 1 1 1 78 1 4 1 305 1 165 1 191 1 237 1 196 2 239 1 198 1 41 1 18 2 42 1 324 1 153 1 136 1 96 1 178 2 23 1 68 1 69 1 274 1 299 1 180 1 276 1 300 2 
0 1 31 1 165 1 306 1 222 1 274 1 196 1 276 1 181 1 300 1 
316 2 18 2 211 2 126 5 178 2 102 5 222 5 285 2 196 5 107 10 180 1 59 5 198 2 72 1 300 5 
222 1 318 1 1 1 356 1 305 1 181 1 
0 2 318 2 1 3 162 1 259 2 53 4 322 4 323 2 305 3 165 1 104 1 193 1 196 2 308 1 349 1 243 1 309 4 148 1 351 1 19 2 311 2 328 1 114 1 115 1 356 4 274 2 276 2 314 1 300 2 
76 2 304 1 212 1 259 1 53 1 322 1 101 1 82 1 342 2 55 1 86 1 237 3 166 1 239 2 349 1 309 1 171 1 17 1 351 1 310 1 324 2 42 2 132 1 153 3 328 1 136 1 114 1 65 1 137 1 158 1 47 1 315 1 
0 1 79 1 19 1 311 1 126 2 165 1 102 2 222 4 274 1 196 2 107 4 59 2 276 1 181 2 300 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
52 1 151 1 
176 1 119 1 
187 3 310 2 79 1 4 1 101 2 342 4 84 2 178 1 137 4 144 1 265 1 86 2 69 1 348 4 299 1 166 8 198 1 242 1 254 1 315 2 
187 2 79 1 4 1 134 1 84 2 137 3 178 1 265 1 69 1 348 3 299 1 166 6 198 1 254 1 
40 1 316 1 187 2 310 1 211 1 101 1 342 2 84 1 137 2 178 1 285 1 144 1 86 1 348 2 166 4 198 1 315 1 
316 1 187 2 211 1 84 1 205 1 137 4 178 1 214 2 285 1 144 1 179 1 348 3 166 7 288 1 198 1 
316 2 187 9 257 1 211 2 79 1 4 2 101 2 342 4 84 5 213 1 265 1 144 4 285 2 214 2 86 2 348 11 166 23 288 1 198 3 242 2 310 2 178 3 137 12 24 1 69 2 179 2 299 1 254 1 315 2 
214 1 166 1 137 1 
348 1 179 1 166 1 
40 1 316 1 187 3 310 1 211 1 101 1 342 2 84 2 137 3 178 1 285 1 144 1 86 1 348 3 166 6 198 1 72 1 315 1 
316 2 187 2 211 2 101 1 164 1 342 2 84 1 144 1 214 1 285 2 345 1 86 1 348 6 166 12 88 1 198 2 290 1 310 1 293 1 205 1 137 6 178 2 179 1 315 1 51 1 
187 2 4 1 84 1 178 1 137 3 144 1 69 1 348 3 299 1 166 6 198 1 
187 2 310 1 4 1 101 1 342 2 84 1 213 1 137 2 144 1 265 1 69 1 86 1 348 1 166 3 242 1 254 1 315 1 
187 5 310 1 4 2 101 1 293 1 342 2 84 3 137 5 178 2 23 1 144 2 86 1 69 2 348 5 166 10 299 1 198 2 315 1 
316 1 187 1 310 1 293 1 101 1 342 2 178 1 144 1 86 1 348 2 166 2 315 1 
316 1 187 2 310 1 211 1 293 1 101 1 342 2 84 1 137 2 178 1 285 1 144 1 86 1 348 2 166 4 198 1 315 1 
187 2 310 3 4 1 293 1 101 3 342 6 213 1 84 1 137 2 54 1 144 1 86 3 69 1 348 1 166 3 242 1 315 3 
316 3 187 12 258 1 211 3 79 1 4 3 101 5 342 10 213 1 84 7 265 1 214 4 54 1 285 3 144 5 86 5 348 16 166 34 288 1 198 5 242 2 173 1 40 1 310 5 293 1 205 1 137 18 178 5 69 3 179 3 299 2 254 1 122 1 315 5 
187 2 79 1 4 1 101 1 342 2 84 2 214 1 265 1 86 1 348 4 166 8 198 1 290 1 310 1 293 1 205 1 178 1 137 4 69 1 179 1 299 1 254 1 315 1 
316 1 187 3 79 1 4 1 101 2 342 4 84 2 265 1 214 2 285 1 144 1 86 2 348 6 166 11 288 1 198 1 290 1 40 1 310 2 293 1 205 1 137 5 178 2 69 1 179 1 299 1 254 1 315 2 
316 2 187 4 211 2 79 1 4 1 101 3 164 1 342 6 84 3 265 1 144 1 345 1 214 1 285 2 86 3 348 9 166 19 88 1 198 3 242 1 40 1 290 1 310 3 293 1 205 1 137 10 178 3 69 1 179 1 299 1 254 1 315 3 51 1 
316 2 187 5 211 1 79 1 4 1 101 3 164 1 342 6 84 3 265 1 144 2 214 1 285 2 345 1 86 3 348 10 166 17 88 1 198 2 242 1 40 1 290 1 310 3 293 1 205 1 137 7 178 3 69 1 179 1 299 1 254 1 315 3 51 1 
187 2 79 1 4 1 101 1 342 2 84 2 214 1 265 1 86 1 348 4 166 8 198 1 290 1 310 1 293 1 205 1 178 1 137 4 69 1 179 1 299 1 254 1 315 1 
316 2 187 2 211 2 101 1 164 1 342 2 84 1 144 1 214 1 285 2 345 1 86 1 348 6 166 12 88 1 198 2 290 1 310 1 293 1 205 1 137 6 178 2 179 1 315 1 51 1 
316 2 187 5 211 1 79 1 4 1 101 4 164 1 342 8 84 3 265 1 144 2 345 1 214 1 285 2 86 4 348 10 166 18 88 1 198 2 242 2 290 1 40 1 310 4 293 1 205 1 137 8 178 3 69 1 179 1 299 1 254 1 51 1 315 4 
316 3 187 6 211 2 101 4 164 1 342 8 84 3 144 3 345 1 214 1 54 1 285 3 86 4 348 9 166 16 88 1 198 2 242 2 290 1 310 4 293 1 205 1 137 7 178 3 179 1 51 1 315 4 
187 6 4 3 84 3 137 4 178 1 265 1 144 3 69 3 348 3 166 7 299 1 198 1 254 2 
316 2 187 4 211 1 79 1 4 1 101 4 164 1 342 8 84 3 265 1 144 1 345 1 214 1 54 1 285 2 86 4 348 10 166 18 88 1 198 2 242 2 290 1 310 4 293 1 205 1 137 8 178 3 69 1 179 1 299 1 254 1 51 1 315 4 
324 1 139 1 237 1 58 1 82 1 153 1 60 1 
279 1 324 1 283 1 20 1 82 1 264 1 153 1 7 1 139 1 58 1 237 1 60 1 
351 1 259 1 53 1 322 1 349 1 328 1 134 1 114 1 243 1 115 1 309 1 
76 1 351 1 17 1 42 1 324 1 212 1 259 1 53 1 322 1 82 1 153 2 328 1 114 1 95 1 237 2 349 1 309 1 171 1 
76 2 212 1 53 1 322 1 323 1 82 1 87 1 237 2 349 3 309 1 171 2 17 1 351 2 41 1 93 1 324 2 42 1 328 1 153 2 95 1 114 1 206 1 295 1 
76 2 53 2 322 2 323 1 263 1 82 1 87 1 237 2 349 3 309 2 171 2 17 1 351 2 41 1 93 1 324 2 42 1 328 1 153 2 95 1 114 1 206 1 295 1 272 1 
1 2 256 1 259 1 53 3 322 3 323 1 305 2 263 1 344 1 233 1 87 1 39 1 349 4 309 3 171 1 351 1 93 1 328 1 114 1 222 1 356 1 71 1 181 1 
351 1 1 2 93 1 259 1 53 3 322 3 305 2 323 1 263 1 328 1 114 1 222 1 344 1 233 1 356 1 87 1 181 1 349 4 39 1 241 1 309 3 171 1 
336 1 53 1 322 1 328 1 114 1 309 1 
351 2 336 1 29 1 175 1 259 2 53 7 322 7 328 2 94 1 114 3 33 1 9 1 234 1 70 1 349 3 75 1 309 6 201 1 244 1 16 1 171 1 
187 2 321 1 53 1 4 1 322 1 101 2 234 1 55 1 287 1 237 2 198 1 109 1 17 1 324 1 112 1 153 2 328 1 114 1 65 1 69 1 158 2 299 1 332 1 333 1 254 1 76 1 212 1 79 1 342 4 82 2 84 2 265 1 86 2 348 3 166 6 349 1 169 1 309 1 171 1 351 1 310 2 42 1 132 2 95 1 178 1 137 3 315 2 
0 2 318 1 1 3 259 1 53 1 322 1 305 3 261 1 262 1 31 1 306 1 165 2 104 1 344 1 233 1 196 1 349 2 39 1 241 1 309 1 248 1 222 1 356 2 274 2 276 2 181 1 300 1 120 1 
302 1 351 1 336 1 53 2 322 2 328 1 114 2 234 1 39 1 349 2 309 2 244 1 171 1 
351 1 259 1 53 4 322 4 263 1 328 1 83 1 114 1 115 1 234 1 349 1 243 1 309 4 
351 1 53 2 322 2 80 1 323 1 249 1 328 1 114 2 33 1 349 1 130 1 309 2 16 1 171 1 
259 1 53 1 322 1 208 1 328 1 48 1 114 1 140 1 22 1 309 1 
351 1 53 2 322 2 328 1 114 1 9 1 234 1 194 1 70 1 349 1 309 2 
351 2 175 1 259 1 53 5 322 5 323 1 328 2 83 1 114 2 115 1 234 1 70 1 349 3 243 1 309 4 75 1 
351 2 259 1 123 1 53 5 322 5 323 1 328 2 83 1 114 2 115 1 234 1 70 1 349 3 243 1 309 4 75 1 
76 1 351 1 17 1 42 1 324 1 259 1 53 1 322 1 82 1 153 2 328 1 114 1 95 1 272 1 237 2 349 1 309 1 171 1 
351 1 53 1 322 1 323 1 328 1 114 2 33 1 349 1 309 1 201 1 244 1 16 1 171 1 
324 1 339 1 341 1 153 1 358 1 138 1 99 1 237 1 240 1 
10 1 303 1 341 1 
215 1 99 1 339 1 341 1 82 1 
160 1 1 2 41 1 303 1 339 2 305 2 341 1 82 1 189 1 206 1 222 1 344 1 295 1 10 1 215 2 99 2 359 1 181 1 120 1 
245 1 227 1 147 1 134 1 
354 1 91 1 245 1 227 1 218 1 147 1 21 1 
92 1 280 1 21 1 
91 1 245 1 2 1 227 1 174 1 218 1 124 1 21 3 354 3 147 1 157 1 225 2 
354 2 91 1 245 1 227 1 218 1 147 1 5 1 21 2 270 1 
91 1 174 1 218 1 63 1 21 1 354 1 355 1 57 1 147 1 48 1 140 1 
354 1 91 1 245 1 218 1 174 1 147 1 21 1 
354 1 91 1 245 2 227 1 218 1 174 1 21 1 
186 1 354 2 91 2 245 1 218 2 174 1 202 1 147 1 21 2 61 1 
91 1 245 1 227 1 174 1 218 1 338 1 63 1 260 1 5 2 21 3 354 3 117 1 147 2 
91 1 245 1 227 1 174 1 218 1 5 1 21 2 125 1 354 2 355 1 236 1 147 1 208 1 48 1 140 2 
91 2 245 1 227 1 174 1 218 2 63 1 5 2 21 4 270 1 354 4 117 1 147 2 217 1 
354 1 91 1 245 1 227 1 218 1 174 1 147 1 21 1 
91 1 245 2 2 1 227 2 218 1 63 1 5 2 353 1 21 4 354 4 117 1 157 1 147 3 225 1 
354 2 91 1 245 1 227 1 85 1 218 1 174 1 147 1 5 1 21 2 301 1 50 1 
91 1 245 1 2 1 227 1 174 1 218 1 21 3 231 1 354 3 147 1 157 2 225 2 
97 1 147 2 327 1 188 2 
354 1 91 1 218 1 174 1 325 1 21 1 
354 2 91 1 245 1 227 1 338 1 218 1 174 1 147 1 5 1 21 2 
28 1 
354 1 91 1 245 1 227 1 218 1 174 1 147 1 21 1 
91 1 245 1 227 1 174 1 218 1 338 1 5 1 21 3 354 3 147 1 225 1 
117 1 147 1 63 1 353 1 
245 1 147 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3022 | < -> !=
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 3701 | = null
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 2 21 1 22 1 222 2 145 2 341 1 173 2 69 6 153 9 274 2 50 5 201 1 204 1 305 1 129 1 283 1 180 1 333 2 59 1 183 1 13 4 335 1 85 3 312 1 111 1 137 1 237 2 112 9 
43 2 21 1 22 1 222 2 145 2 341 1 173 2 69 6 153 9 274 2 50 5 201 1 204 1 305 1 129 1 283 1 180 1 333 2 59 1 183 1 13 4 335 1 85 3 312 1 111 1 137 1 237 2 112 9 
43 2 21 1 22 1 222 2 145 2 341 1 173 2 69 7 153 10 274 2 50 6 201 1 204 1 305 1 129 1 283 1 180 1 333 2 59 1 183 1 13 5 335 1 85 4 312 1 111 1 137 1 237 2 112 10 
43 1 21 1 22 1 222 2 145 2 341 1 173 2 69 4 153 7 274 2 50 4 201 1 204 1 305 1 129 1 180 1 333 2 59 1 183 1 13 3 335 1 85 2 312 1 111 1 137 1 237 2 112 7 
43 2 22 1 204 1 283 1 333 1 59 1 145 1 222 1 13 2 85 1 335 1 69 3 153 4 137 1 274 1 237 1 50 3 112 4 
167 1 22 1 204 1 142 1 333 1 222 1 145 1 173 1 312 1 111 1 382 1 153 2 137 1 274 1 50 1 112 2 
22 1 204 1 305 1 222 2 13 1 85 1 173 1 69 1 153 3 137 1 274 2 50 2 112 3 
43 2 22 1 204 1 305 1 129 1 283 1 333 1 59 1 145 1 222 2 341 1 13 4 335 1 85 3 260 1 173 1 69 7 27 1 153 9 137 1 237 1 274 2 50 5 112 9 
43 2 22 1 204 1 305 1 129 1 283 1 333 1 59 1 145 1 222 2 341 1 13 4 335 1 85 3 260 1 173 1 69 7 27 1 153 9 137 1 237 1 274 2 50 5 112 9 
148 1 324 1 57 1 
148 1 37 1 38 2 
291 2 25 2 149 2 345 1 172 2 218 1 191 2 192 2 
88 1 264 1 291 3 188 1 168 1 140 1 1 1 118 1 218 1 219 2 191 3 192 2 144 1 25 2 149 2 345 1 6 1 172 2 174 1 151 1 70 1 121 1 175 1 350 1 352 1 127 2 200 2 227 1 375 1 56 1 81 1 11 1 109 2 334 2 232 1 63 1 358 1 
291 1 25 1 149 1 172 1 7 1 205 1 141 1 218 1 191 1 192 1 
187 1 291 1 57 1 116 1 205 1 191 1 342 1 148 1 68 1 25 1 9 1 186 1 236 1 212 1 
187 1 291 1 57 1 116 1 205 1 192 1 191 1 342 1 148 1 149 1 25 1 172 1 9 2 186 2 236 1 
299 1 104 1 9 1 186 1 261 1 
299 1 148 1 329 1 57 1 9 2 186 2 154 1 261 1 
299 1 9 1 186 1 
291 1 205 1 141 1 218 1 192 1 191 1 149 1 25 1 172 1 7 1 9 1 186 1 261 1 124 1 
148 1 
299 1 148 1 57 1 9 2 186 2 154 1 261 1 176 1 
372 1 54 1 57 1 169 1 340 1 299 2 148 1 322 1 210 2 247 1 233 2 381 1 9 5 16 2 301 1 186 5 302 1 154 1 261 2 
345 1 324 1 
113 1 291 2 191 2 192 1 25 2 149 1 345 2 172 1 272 1 
97 1 86 1 193 1 
127 1 291 1 188 1 140 1 1 1 56 1 80 1 118 1 219 1 191 1 345 1 334 1 232 1 174 1 121 1 352 1 
149 1 291 3 25 3 345 1 172 3 368 1 191 3 192 3 
291 1 25 1 172 1 7 1 205 1 191 1 192 1 
113 1 291 1 25 1 149 1 172 1 272 1 205 1 191 1 192 1 
88 1 187 1 264 1 291 4 188 1 168 1 140 1 91 1 1 1 116 1 118 1 218 1 219 1 191 4 192 3 221 1 342 1 149 2 25 3 345 1 6 1 172 3 174 1 272 1 121 1 9 1 175 1 368 1 350 1 352 1 127 1 200 1 227 1 56 1 205 1 310 1 11 1 81 1 109 2 334 1 232 1 186 1 236 1 63 1 
68 1 291 2 25 2 345 1 172 1 214 1 368 1 191 2 192 1 
187 1 291 3 205 1 116 1 192 3 191 3 310 1 221 1 342 1 148 1 149 1 25 3 172 3 270 1 272 1 9 1 186 1 236 1 368 2 
291 2 25 2 149 1 172 2 272 1 368 1 97 1 191 2 192 2 86 1 
127 1 291 1 188 1 140 1 1 1 56 1 118 1 219 1 191 1 345 1 334 1 232 1 174 1 121 1 352 1 
127 1 291 1 354 1 188 1 140 1 1 1 56 1 118 1 219 1 191 1 345 1 334 1 232 1 349 1 121 1 
88 1 114 1 264 1 168 1 296 1 318 1 319 1 193 2 147 1 6 1 151 2 175 1 97 2 51 1 350 1 72 1 199 1 200 4 32 1 177 1 207 1 109 2 63 2 86 2 
187 1 291 1 25 1 172 1 205 1 191 1 192 1 52 1 
127 1 291 2 188 1 140 1 1 1 56 1 118 1 219 1 192 1 191 2 221 1 25 1 334 1 172 1 232 1 174 1 121 1 368 1 86 1 352 1 
291 5 92 1 214 1 192 4 191 5 221 1 68 1 25 5 149 1 345 1 172 4 272 1 122 1 368 2 
291 2 25 2 172 2 7 1 205 1 52 1 191 2 192 2 
244 1 132 1 
244 1 132 1 
241 1 93 1 
241 1 93 1 
241 1 93 1 
244 1 251 1 132 1 
244 1 251 1 132 1 
209 1 244 1 132 1 
75 1 244 2 266 1 241 1 93 1 132 2 
244 1 251 1 132 1 
244 1 8 1 132 1 
244 1 8 1 132 1 
244 1 8 1 132 1 
75 1 74 2 293 1 279 1 102 1 23 1 268 2 132 2 148 1 244 2 15 2 9 2 186 2 136 1 17 2 42 2 138 1 238 3 155 1 
291 2 268 1 192 2 191 2 120 1 244 1 25 2 345 1 172 2 225 1 9 1 99 1 74 1 332 1 132 1 209 1 15 1 234 1 164 1 186 1 62 1 42 1 138 1 238 1 
237 1 333 1 145 1 
167 1 333 1 145 1 
167 1 346 1 76 1 237 2 371 1 145 3 
167 1 76 1 211 1 237 1 371 1 145 2 
167 1 76 1 237 1 371 2 145 2 
360 1 45 2 340 1 299 1 148 2 271 1 225 1 326 1 9 5 152 1 154 1 98 1 99 1 372 3 199 1 32 1 101 1 177 1 57 1 285 2 332 1 207 1 37 1 38 3 12 1 60 2 210 1 233 1 381 2 16 1 186 5 261 4 
360 3 45 6 217 1 143 1 299 6 340 1 148 5 344 1 247 1 225 4 9 9 152 2 154 1 372 8 199 3 32 3 101 1 177 3 104 5 57 1 107 1 306 1 285 6 207 3 208 1 37 3 38 9 12 2 182 5 210 2 233 2 381 6 16 2 186 9 261 7 
360 1 45 2 148 3 271 1 247 1 225 1 9 3 152 1 98 1 372 3 199 1 32 1 177 1 57 1 285 2 207 1 37 2 12 1 38 4 60 1 210 1 233 1 381 2 16 1 186 3 261 2 
360 2 45 4 217 1 148 4 344 1 271 1 247 1 225 2 9 4 152 1 98 1 372 5 199 2 32 2 177 2 57 1 285 4 207 2 208 1 37 3 38 7 12 1 60 2 210 1 233 1 381 4 16 1 186 4 261 3 
188 1 324 1 71 1 
188 1 282 1 
29 1 
188 1 121 1 
188 3 71 2 121 1 118 1 255 1 87 1 
188 1 121 1 118 1 
188 1 160 1 
200 7 32 1 318 2 284 1 46 1 2 1 330 2 207 1 58 1 94 1 231 1 49 1 197 1 151 4 327 1 63 3 72 3 
200 7 32 1 318 2 284 1 46 1 2 1 330 2 207 1 58 1 94 1 231 1 49 1 197 1 151 4 327 1 63 3 72 3 
200 7 32 1 33 1 318 2 284 1 46 1 2 1 330 2 207 1 58 1 94 1 231 1 49 1 197 1 151 4 327 1 63 3 72 3 
88 1 292 1 168 1 360 3 318 5 215 1 46 1 2 2 94 5 5 3 6 1 49 1 197 2 273 1 151 16 367 1 325 1 327 1 350 1 72 10 199 3 200 31 32 4 177 3 284 2 108 1 330 3 58 2 228 1 207 4 109 2 231 1 18 4 63 15 
88 2 168 2 318 3 46 1 2 1 94 1 6 2 197 1 273 1 49 1 151 5 327 1 350 2 72 4 200 9 32 1 284 1 330 2 207 1 58 1 109 4 41 1 357 1 63 4 
167 1 22 1 339 1 140 1 317 1 66 1 219 1 222 1 145 2 346 1 173 1 69 1 153 2 274 1 50 1 28 1 249 1 127 1 31 1 328 1 204 1 56 1 308 1 333 1 334 1 257 1 259 1 137 1 237 1 112 2 
167 1 22 1 140 1 317 1 66 1 219 1 222 1 145 2 346 1 366 1 224 1 173 1 69 2 153 3 274 1 275 1 50 1 28 1 127 1 31 1 328 1 204 1 56 1 308 1 333 1 334 1 257 1 259 1 237 1 112 3 
167 1 22 1 140 1 317 1 66 1 219 1 145 2 366 1 346 1 224 1 173 1 69 2 153 2 50 1 28 1 127 1 204 1 56 1 308 1 333 1 334 1 257 1 259 1 237 1 112 2 
127 1 188 1 140 1 1 1 317 2 56 1 281 1 254 1 206 1 219 1 222 1 223 1 134 1 334 1 259 2 245 1 173 2 121 1 153 1 275 1 274 1 28 2 112 1 
167 1 140 1 317 1 66 1 219 1 222 1 145 2 366 1 346 1 173 1 153 1 274 1 28 1 249 1 127 1 31 1 328 1 56 1 308 1 333 1 334 1 257 1 259 1 137 1 237 1 112 1 
235 1 
89 2 187 1 291 1 188 1 44 1 140 1 1 2 189 1 191 1 299 6 340 1 342 1 148 2 150 1 152 1 9 5 154 3 250 2 100 2 57 1 56 1 205 1 254 1 163 1 210 1 16 1 314 1 165 1 212 1 361 4 116 1 267 2 219 2 223 1 68 1 269 2 25 1 121 1 369 2 127 2 277 1 73 1 372 2 128 1 78 2 288 1 37 2 38 2 334 2 233 1 381 2 185 1 186 5 290 1 236 1 
73 1 187 1 277 1 291 1 44 1 361 2 205 1 116 1 191 1 299 2 342 1 163 1 68 1 25 1 9 3 186 3 154 1 236 1 165 1 176 1 369 1 212 1 
187 1 291 1 44 1 361 3 116 1 191 1 299 1 342 1 68 1 148 1 25 1 9 3 154 1 176 1 277 1 73 1 205 1 57 1 78 1 163 1 186 3 236 1 165 1 212 1 
187 1 291 1 44 1 361 3 116 1 191 1 342 1 299 2 68 1 148 1 25 1 269 1 9 3 154 1 176 1 369 1 277 1 73 1 205 1 57 1 78 1 163 1 186 3 236 1 165 1 212 1 
187 1 89 2 291 1 44 1 189 1 191 1 342 1 299 7 340 1 148 5 9 5 154 3 100 2 250 2 203 1 103 1 205 1 57 5 163 1 210 1 16 1 165 1 212 1 361 6 116 1 267 2 119 1 68 1 269 4 25 1 369 4 176 1 73 1 277 1 372 1 78 4 130 1 82 1 37 2 233 1 381 1 186 5 236 1 290 1 
187 1 89 2 291 1 44 1 189 1 191 1 342 1 340 1 299 4 148 2 9 4 154 2 100 2 250 2 205 1 57 1 163 1 210 1 16 1 165 1 212 1 361 4 116 1 267 2 68 1 25 1 269 2 369 2 73 1 277 1 372 1 128 1 78 2 37 2 38 2 233 1 381 1 186 4 236 1 290 1 
89 2 187 1 291 1 44 1 361 4 189 1 116 1 267 2 191 1 299 4 342 1 340 1 148 1 68 1 269 2 25 1 9 4 154 2 369 2 250 2 100 2 277 1 73 1 372 1 203 1 57 1 205 1 78 2 130 1 37 2 82 1 163 1 210 1 233 1 381 1 16 1 186 4 290 1 236 1 165 1 212 1 
89 2 187 1 291 1 44 1 361 4 189 1 116 1 267 2 191 1 299 4 342 1 340 1 148 1 68 1 269 2 25 1 9 4 154 2 369 2 250 2 100 2 277 1 73 1 372 1 203 1 57 1 205 1 78 2 130 1 37 2 82 1 163 1 210 1 233 1 381 1 16 1 186 4 290 1 236 1 165 1 212 1 
89 2 187 1 263 1 291 1 44 1 361 4 116 1 267 2 191 1 299 4 342 1 340 1 148 1 68 1 269 2 25 1 365 1 196 2 9 4 154 2 369 2 277 1 73 1 372 1 57 1 205 1 78 2 77 2 82 1 380 1 38 2 163 1 210 1 233 1 381 1 16 1 186 4 290 1 236 1 165 1 212 1 
89 2 187 1 291 1 44 1 361 5 189 1 116 1 267 2 191 1 340 1 342 1 299 5 148 1 68 1 25 1 269 3 9 4 154 2 369 3 250 2 100 2 277 1 73 1 372 1 203 1 103 1 57 1 205 1 78 3 130 1 37 2 82 1 163 1 210 1 233 1 381 1 16 1 186 4 290 1 236 1 165 1 212 1 
89 2 187 1 291 1 44 1 361 5 189 1 116 1 267 2 191 1 340 1 342 1 299 5 148 1 68 1 25 1 269 3 9 4 154 2 369 3 250 2 100 2 277 1 73 1 372 1 203 1 103 1 57 1 205 1 78 3 130 1 37 2 82 1 163 1 210 1 233 1 381 1 16 1 186 4 290 1 236 1 165 1 212 1 
187 1 89 2 291 1 44 1 191 1 342 1 340 1 299 4 148 1 196 2 9 4 154 2 205 1 57 1 163 1 210 1 16 1 165 1 212 1 361 4 116 1 267 2 68 1 25 1 269 2 369 2 73 1 277 1 372 1 128 1 77 2 78 2 380 1 38 2 233 1 381 1 186 4 236 1 290 1 
88 1 114 1 264 1 168 1 318 2 46 1 193 1 6 1 345 2 324 1 49 1 151 3 327 1 175 1 97 1 350 1 72 2 200 6 32 1 284 1 330 1 58 1 207 1 109 2 86 1 63 3 
88 2 264 2 292 1 168 2 360 2 318 1 144 1 193 11 94 1 170 1 5 3 345 1 6 2 151 8 175 1 97 4 350 2 72 2 199 2 200 14 32 2 227 1 177 1 105 1 286 1 36 1 228 1 207 1 109 4 18 3 63 6 86 11 166 1 
88 1 264 1 291 2 188 1 140 1 168 1 1 1 118 1 190 1 219 1 191 2 192 1 144 1 221 1 4 1 25 1 345 1 6 1 172 1 174 1 151 1 121 1 175 1 368 1 97 1 350 1 352 1 127 1 30 1 200 2 227 1 56 1 105 1 80 1 109 2 334 1 232 1 63 1 
88 3 291 3 188 2 90 1 140 2 1 1 46 1 192 1 191 3 144 1 193 6 94 1 345 1 6 3 348 1 49 1 151 11 97 6 350 3 352 2 353 1 199 2 200 22 205 1 56 2 105 1 253 1 58 1 207 4 11 2 109 6 256 2 313 2 63 11 264 3 168 3 360 2 318 4 118 2 219 1 221 1 25 1 172 1 174 2 121 2 327 1 368 1 175 3 72 5 127 1 32 4 227 1 177 2 379 2 284 1 79 2 334 1 232 2 86 6 
88 2 114 1 291 1 264 2 188 3 339 1 140 2 168 2 1 2 67 1 219 8 320 1 191 1 192 1 144 1 223 1 25 1 6 2 366 1 172 1 151 1 121 2 368 1 175 2 350 2 127 8 200 2 159 1 227 1 56 2 376 1 307 1 254 1 109 4 334 7 184 1 61 1 63 1 358 2 
88 1 264 1 291 1 168 1 360 1 318 1 192 1 191 1 193 1 149 1 25 1 6 1 172 1 272 1 151 1 175 1 97 1 350 1 72 1 199 1 200 3 32 1 177 1 105 1 207 1 109 2 336 1 86 1 63 2 
88 1 114 1 264 1 199 1 200 2 168 1 32 1 193 1 94 1 109 2 147 1 6 1 151 2 175 1 97 1 350 1 86 1 72 1 
88 1 114 1 264 1 200 2 168 1 318 1 177 1 207 1 193 1 109 2 6 1 175 1 97 1 350 1 51 1 86 1 63 2 72 1 
88 1 114 1 264 1 168 1 360 1 318 1 193 2 94 1 6 1 151 2 175 1 97 2 350 1 72 2 199 1 200 4 32 1 177 1 207 1 109 2 86 2 63 2 
88 1 264 1 199 1 200 2 168 1 32 1 376 1 193 1 94 1 109 2 147 1 6 1 151 2 175 1 97 1 350 1 86 1 72 1 
88 1 264 1 200 2 168 1 318 1 177 1 376 1 207 1 193 1 109 2 6 1 175 1 97 1 350 1 51 1 86 1 63 2 72 1 
88 1 264 1 168 1 360 1 318 1 193 2 94 1 6 1 151 2 175 1 97 2 350 1 72 2 199 1 200 4 32 1 177 1 376 1 207 1 109 2 86 2 63 2 
88 1 264 1 168 1 360 1 318 1 193 2 94 1 6 1 151 2 175 1 97 2 350 1 72 2 199 1 200 4 32 1 177 1 207 1 109 2 86 2 63 2 
88 1 291 1 264 1 188 1 140 1 168 1 1 1 118 1 219 1 191 1 144 1 345 1 6 1 174 1 151 1 121 1 175 1 350 1 352 1 127 1 200 2 227 1 56 1 11 1 109 2 334 1 232 1 63 1 
88 1 291 1 264 1 188 1 140 1 168 1 1 1 118 1 265 1 219 1 191 1 144 1 345 1 6 1 151 1 349 1 121 1 175 1 350 1 127 1 354 1 200 2 227 1 56 1 109 2 334 1 232 1 63 1 
88 1 264 1 168 1 360 1 318 1 193 2 94 1 6 1 151 2 175 1 97 2 350 1 72 2 199 1 200 4 32 1 177 1 105 1 207 1 109 2 86 2 63 2 
88 1 291 1 264 1 188 1 140 1 339 1 168 1 360 1 318 1 118 1 219 1 191 1 193 2 94 1 6 1 174 1 151 2 121 1 175 1 97 2 350 1 72 2 352 1 127 1 199 1 200 4 32 1 177 1 56 1 79 1 207 1 11 1 109 2 334 1 232 1 63 2 86 2 
88 1 264 1 291 1 168 1 360 1 192 1 191 1 193 1 94 1 149 1 25 1 6 1 347 1 172 1 272 1 151 2 175 1 97 1 350 1 72 1 199 1 200 3 32 1 177 1 105 1 207 1 109 2 63 1 86 1 
88 3 292 1 0 2 46 1 48 1 94 4 95 1 5 3 6 3 300 1 49 1 151 20 350 3 199 4 200 41 106 1 207 5 309 1 58 1 109 6 18 4 63 21 168 3 360 4 318 4 273 1 327 1 72 8 370 1 126 1 278 1 373 1 32 5 177 4 178 1 378 4 284 1 330 1 228 3 230 1 181 1 41 1 84 1 
88 4 292 1 0 2 168 4 360 4 318 4 46 1 48 1 94 3 95 1 5 3 6 4 300 1 49 1 273 2 151 20 327 1 350 4 126 1 370 1 72 7 278 1 373 1 199 4 200 38 32 5 177 3 378 4 178 1 106 1 284 1 330 1 58 1 309 1 228 3 207 4 109 8 230 1 181 1 84 1 41 1 18 4 63 18 
88 2 292 2 0 1 168 2 360 7 318 7 46 1 48 1 94 7 170 2 5 4 6 2 300 1 49 1 273 1 151 27 327 1 350 2 370 1 72 14 278 1 373 1 199 7 200 52 32 8 177 7 378 4 178 1 106 1 284 1 330 1 58 1 309 1 228 2 207 8 109 4 230 1 181 1 84 1 41 1 18 4 63 25 
88 2 292 1 0 1 168 2 360 3 318 3 48 2 94 3 5 1 6 2 151 9 350 2 126 1 72 6 278 1 199 3 200 19 32 3 177 3 378 2 178 1 106 1 228 1 207 3 109 4 181 1 258 1 41 1 18 2 63 10 
88 3 0 2 168 3 360 3 318 2 48 1 94 2 5 2 6 3 300 1 273 2 151 14 350 3 370 1 72 4 278 2 373 1 199 3 200 26 32 3 177 2 378 4 178 1 106 1 207 2 228 2 309 1 109 6 230 1 181 1 84 1 41 1 18 2 63 12 
75 1 74 1 244 1 293 1 23 1 15 1 34 1 268 1 42 1 132 1 
209 1 234 1 
74 1 244 1 158 1 246 1 15 1 162 1 268 1 42 1 132 1 
75 1 74 1 293 1 279 1 23 1 268 1 132 1 148 1 244 1 15 1 9 1 186 1 136 1 17 1 138 1 42 1 238 2 155 1 
75 1 74 1 293 1 279 1 23 1 268 1 132 1 148 1 244 1 15 1 9 1 186 1 136 1 17 1 138 1 42 1 238 2 155 1 
75 1 74 1 293 1 279 1 23 1 268 1 132 1 148 1 244 1 15 1 9 1 186 1 136 1 17 1 138 1 42 1 238 2 155 1 
251 1 266 1 297 1 
251 1 266 1 297 1 
171 1 8 1 
171 1 8 1 266 1 
164 1 62 1 
291 2 268 1 191 2 120 1 192 2 244 1 25 2 345 1 172 2 225 1 9 1 99 1 74 1 332 1 229 1 132 1 209 1 15 1 234 1 164 1 17 1 136 1 186 1 62 1 261 1 42 1 238 1 
251 1 297 1 
171 1 8 1 266 1 
88 1 264 1 291 2 188 1 140 1 168 1 219 2 320 1 191 2 144 1 96 1 25 2 6 1 151 1 121 1 175 1 123 1 350 1 127 2 200 2 227 1 56 1 105 1 307 1 109 2 39 1 334 2 338 1 63 1 358 2 64 1 
127 2 31 1 167 1 140 1 339 1 56 1 377 1 66 1 308 1 219 2 333 1 145 2 194 1 321 1 334 2 346 1 366 1 259 1 237 1 
127 1 31 1 167 1 140 1 55 1 66 1 56 1 308 1 219 1 333 1 145 2 321 1 334 1 346 1 366 1 259 1 237 1 
127 1 188 1 140 1 1 1 295 1 56 1 377 1 281 1 254 1 219 1 223 1 334 1 259 1 121 1 
127 1 31 1 167 1 140 1 377 1 66 1 56 1 308 1 219 1 333 1 145 2 194 1 321 1 334 1 346 1 366 1 259 1 237 1 
331 1 
372 1 148 1 322 1 324 1 57 1 381 1 169 1 
189 1 340 1 299 1 148 2 9 1 154 1 100 1 250 1 372 1 57 1 37 1 38 1 210 1 233 1 381 1 16 1 186 1 
239 1 188 10 339 1 294 1 140 4 240 2 1 1 45 6 47 2 242 2 340 4 299 5 148 8 152 2 9 5 154 3 156 2 199 2 57 2 56 3 160 2 207 2 311 2 256 2 110 2 210 4 16 4 314 1 360 2 169 1 118 3 216 2 219 3 24 1 322 1 323 1 71 2 121 3 127 3 372 9 280 2 32 2 177 2 282 3 285 6 37 6 133 1 38 12 334 3 233 4 381 8 186 5 236 2 87 1 
315 1 360 2 240 2 45 5 299 1 340 2 146 1 148 5 5 1 300 1 152 1 9 1 154 1 372 8 373 1 199 2 280 1 32 2 177 2 57 2 285 5 228 1 309 1 207 2 37 3 38 6 230 1 84 1 210 2 233 2 381 5 16 2 186 1 314 1 18 1 
291 1 90 1 240 2 141 1 218 1 191 1 192 1 340 1 149 1 25 1 172 1 7 1 49 1 9 1 124 1 372 2 280 1 32 2 205 1 284 1 130 1 58 1 207 1 210 1 233 1 381 2 16 1 186 1 
372 1 57 1 169 1 340 1 148 1 322 1 210 1 233 1 381 1 16 1 
372 5 199 2 280 1 32 2 360 2 240 2 45 5 177 2 285 5 207 2 37 5 38 10 148 5 256 1 381 5 
299 1 148 1 57 1 9 1 186 1 154 1 
239 2 188 1 140 1 294 1 1 2 219 4 340 1 299 4 223 1 150 1 247 1 198 1 121 1 152 2 9 3 154 2 127 4 372 2 56 1 254 1 288 1 334 4 355 1 210 2 233 2 381 2 16 2 186 3 314 2 
88 1 291 3 264 1 188 1 168 1 140 1 1 1 118 1 219 1 218 1 191 3 192 2 25 2 149 2 345 1 6 1 172 2 174 1 121 1 175 1 350 1 352 1 127 1 200 1 227 1 56 1 81 1 11 1 109 2 334 1 232 1 63 1 
372 1 45 2 57 2 330 1 285 2 37 2 38 4 340 1 148 4 210 1 233 1 381 2 16 1 152 1 314 1 
343 1 74 1 268 1 
343 1 74 1 268 1 
74 1 293 1 364 1 62 1 268 1 
343 1 74 1 268 1 
74 1 304 1 268 1 
74 1 304 1 268 1 
74 1 304 1 268 1 
74 1 268 1 
244 1 132 1 
88 1 168 1 318 2 46 1 5 1 6 1 49 1 151 4 327 1 350 1 72 2 200 8 32 1 284 1 330 1 207 1 228 1 309 1 58 1 109 2 41 1 18 1 63 4 
88 2 292 1 168 2 360 1 318 2 46 1 94 1 5 1 6 2 49 1 151 6 327 1 350 2 72 3 199 1 200 11 32 2 284 1 330 1 207 1 58 1 228 1 309 1 109 4 41 1 289 1 18 2 63 5 
88 3 168 3 360 2 318 3 46 1 94 1 5 1 6 3 300 1 49 1 273 1 151 9 327 1 350 3 72 4 373 1 199 2 200 19 32 3 177 2 284 1 330 1 58 1 228 1 309 1 207 3 109 6 230 1 84 1 41 1 289 1 18 1 63 10 
88 3 168 3 360 2 318 3 46 1 94 2 5 1 6 3 300 1 49 1 273 1 151 10 327 1 350 3 72 5 373 1 199 2 200 17 32 3 177 1 284 1 330 1 58 1 228 1 309 1 207 2 109 6 230 1 41 1 84 1 289 1 18 1 63 7 
88 1 168 1 318 2 46 1 5 1 6 1 49 1 151 4 327 1 350 1 72 2 200 8 32 1 284 1 330 1 207 1 228 1 309 1 58 1 109 2 41 1 18 1 63 4 
88 1 168 1 360 2 318 1 94 1 5 1 6 1 300 1 151 6 350 1 72 2 373 1 199 2 200 12 32 2 177 2 228 1 309 1 207 2 109 2 230 1 41 1 84 1 18 1 63 6 
88 4 168 4 360 2 318 3 46 1 94 2 5 1 6 4 300 1 49 1 273 2 151 10 327 1 350 4 72 5 373 1 199 2 200 18 32 3 177 1 284 1 330 1 58 1 228 1 309 1 207 2 109 8 230 1 84 1 41 1 289 1 18 1 63 8 
88 4 168 4 360 3 318 3 94 3 5 1 6 4 300 1 273 2 151 9 350 4 126 1 72 6 373 1 199 3 200 16 32 3 177 2 228 1 309 1 207 2 109 8 230 1 84 1 41 1 18 1 63 7 
200 7 32 1 318 3 46 2 284 3 207 1 58 3 94 3 49 1 151 3 327 1 63 4 72 6 
88 4 168 4 360 2 318 3 46 1 94 1 5 1 6 4 300 1 49 1 273 2 151 10 327 1 350 4 126 1 72 4 373 1 199 2 200 18 32 3 177 1 284 1 330 1 58 1 228 1 309 1 207 2 109 8 230 1 84 1 41 1 18 1 63 8 
88 2 200 8 32 1 168 2 318 2 46 1 284 1 330 1 207 1 58 1 94 1 109 4 6 2 49 1 273 1 151 4 327 1 350 2 63 4 72 3 
200 6 32 1 49 1 318 2 324 1 151 3 284 1 46 1 327 1 330 1 207 1 58 1 63 3 72 2 
88 1 199 1 200 4 168 1 32 1 360 1 318 1 177 1 207 1 109 2 94 1 6 1 289 1 151 2 350 1 63 2 72 2 
199 1 200 7 292 1 32 1 360 1 318 1 177 1 207 1 228 1 94 1 5 1 151 3 18 2 63 4 72 2 
88 2 292 1 168 2 360 2 318 5 46 1 94 4 170 1 5 2 6 2 49 1 273 2 151 11 327 1 350 2 72 9 53 1 199 2 200 23 32 3 177 2 284 2 330 1 286 1 58 2 207 3 109 4 18 2 63 12 
200 1 18 1 63 1 
5 1 200 1 151 1 
88 1 199 1 200 6 168 1 32 1 360 1 177 1 318 2 207 1 109 2 94 1 256 1 6 1 289 1 151 3 350 1 63 3 72 3 
88 1 168 1 360 2 318 1 94 1 5 1 6 1 300 1 151 6 350 1 72 2 373 1 199 2 200 12 32 2 177 2 228 1 309 1 207 2 109 2 230 1 41 1 84 1 18 1 63 6 
200 6 32 1 318 1 284 1 207 1 58 1 94 1 49 1 151 3 63 3 72 2 
53 1 88 1 200 3 168 1 318 1 284 1 46 1 58 1 94 1 109 2 6 1 273 1 151 1 327 1 350 1 63 2 72 2 
88 1 200 10 168 1 90 1 32 2 318 3 284 2 58 2 207 2 109 2 94 2 6 1 41 1 49 1 151 5 350 1 63 5 72 5 
88 1 199 1 200 2 168 1 32 1 109 2 94 1 41 1 6 1 151 2 350 1 72 1 
88 1 199 1 200 4 168 1 32 1 360 1 318 1 177 1 207 1 109 2 94 1 41 1 6 1 151 2 350 1 63 2 72 2 
53 1 88 3 200 3 168 3 318 1 284 1 58 1 109 6 94 1 41 1 6 3 273 1 151 1 350 3 63 2 126 1 72 2 
88 5 292 1 168 5 360 3 318 7 46 1 94 5 5 3 6 5 49 2 273 2 367 1 151 16 325 1 327 1 350 5 126 1 72 12 53 1 199 3 200 34 32 5 177 3 284 3 330 1 108 1 58 3 228 1 207 5 109 10 41 1 289 1 18 4 63 18 
68 1 291 1 25 1 345 1 214 1 248 1 191 1 
20 1 291 1 157 1 252 1 214 1 287 1 191 1 68 1 25 1 345 1 248 1 351 1 
223 1 127 1 188 1 334 1 140 1 1 1 324 1 56 1 121 1 254 1 219 1 
127 1 291 2 188 1 140 1 1 1 56 1 118 1 219 1 192 1 191 2 25 1 345 1 334 1 172 1 232 1 174 1 121 1 368 1 
187 1 239 1 291 2 188 3 140 1 118 2 219 1 191 2 192 1 47 1 342 1 25 2 345 1 172 2 174 1 121 2 368 1 127 1 56 1 205 1 160 1 334 1 232 1 
187 1 239 1 291 2 188 3 140 1 118 2 219 2 191 2 192 1 47 1 342 1 25 2 345 1 172 2 349 1 121 2 368 1 127 2 56 1 205 1 160 1 334 2 232 1 262 1 
127 3 239 1 188 4 140 1 1 1 316 1 57 1 160 1 56 1 118 1 282 1 35 1 219 3 47 1 299 1 148 1 334 3 71 1 121 1 9 2 186 2 236 1 262 1 
127 3 239 1 188 4 140 1 1 1 57 1 160 1 56 1 118 1 282 1 219 3 47 1 299 1 148 1 334 3 110 1 71 1 121 1 9 2 186 2 236 1 262 1 
127 1 334 1 140 1 159 1 56 1 219 1 
127 7 188 3 339 1 140 3 159 1 1 2 56 2 117 1 307 1 161 1 118 1 67 1 219 7 334 6 366 1 184 1 26 1 61 1 121 2 358 1 87 1 
88 2 291 2 188 1 339 1 140 1 46 1 192 1 191 2 193 1 6 2 345 2 49 1 151 3 97 1 350 2 352 1 200 6 56 1 105 1 58 1 207 1 11 1 109 4 313 1 63 3 264 2 168 2 318 2 118 1 219 1 25 1 172 1 174 1 121 1 327 1 368 1 175 2 72 2 127 1 32 1 79 1 284 1 330 1 334 1 232 1 338 1 86 1 
188 2 294 1 1 1 169 1 216 1 219 1 340 2 299 2 148 1 322 1 71 1 9 3 154 1 127 1 156 1 372 1 57 1 282 1 311 1 334 1 110 1 210 2 233 2 381 1 16 2 186 3 261 1 236 1 
127 2 188 2 339 1 140 2 159 1 56 1 118 1 219 2 334 2 323 1 71 1 121 1 87 1 
127 4 188 1 140 1 339 1 1 1 56 1 254 1 219 4 223 1 334 4 121 1 139 1 262 1 
127 2 239 1 188 1 140 2 56 1 117 1 118 1 179 1 219 2 363 1 334 2 14 1 26 1 121 1 
127 1 167 1 334 1 140 1 1 1 56 1 308 1 219 1 333 1 145 1 
127 2 96 1 188 1 334 2 140 1 366 1 339 1 56 1 121 1 307 1 219 2 
127 5 239 1 188 3 339 1 140 2 1 1 56 2 254 1 307 1 219 5 67 1 223 1 334 4 184 1 121 2 139 1 
127 5 239 1 188 3 339 1 140 2 202 1 1 1 56 2 254 1 307 1 219 5 67 1 223 1 334 4 121 2 139 1 
127 1 291 2 188 1 140 1 1 1 56 1 118 1 219 1 192 1 191 2 25 1 345 1 334 1 172 1 232 1 349 1 121 1 368 1 
127 1 239 1 188 1 140 2 56 1 117 1 161 1 118 1 219 1 334 1 26 1 121 1 87 1 
135 1 345 1 195 1 337 1 303 1 
187 1 57 1 205 1 116 1 298 1 310 1 3 1 342 1 362 1 148 1 135 1 345 1 195 2 9 2 337 2 186 2 236 1 261 1 303 2 
39 1 291 1 25 1 135 1 195 1 123 1 303 1 191 1 64 1 
135 1 298 1 3 1 
22 1 204 1 324 1 50 1 
22 1 204 1 153 1 274 1 50 1 112 1 222 1 
173 1 28 1 112 1 
22 1 115 1 204 1 111 2 10 1 153 3 137 1 274 1 50 1 220 1 112 3 222 1 
43 1 22 1 204 1 69 1 153 2 274 1 50 1 112 2 222 1 
333 1 222 1 145 1 13 1 335 1 153 1 137 1 274 1 237 1 50 1 112 1 
22 1 153 1 137 1 274 1 50 1 112 1 222 1 
22 2 204 1 153 1 137 1 274 1 112 1 222 1 
22 1 226 1 374 1 222 2 83 1 153 2 137 1 274 2 50 1 112 2 
22 1 204 1 129 1 222 1 341 1 13 1 85 1 69 2 153 3 137 1 274 1 50 2 112 3 
167 1 22 1 204 1 333 1 145 2 222 1 243 1 346 1 69 1 153 2 137 1 274 1 237 1 50 1 112 2 
43 1 22 1 204 1 283 1 222 2 13 1 85 1 69 2 153 4 137 1 274 2 50 2 112 4 
22 1 204 1 153 1 137 1 274 1 50 1 112 1 222 1 
22 2 115 1 204 2 131 1 222 1 13 1 85 1 69 2 111 1 10 1 153 4 274 1 50 3 112 4 
40 1 22 1 260 1 65 1 204 1 69 1 153 2 137 1 274 1 50 1 112 2 222 1 
22 1 115 1 204 1 222 1 111 2 153 3 10 2 137 1 274 1 50 1 276 1 112 3 
359 1 213 1 50 2 19 2 
153 1 137 1 274 1 125 1 112 1 222 1 
22 1 204 1 69 1 129 1 153 2 137 1 274 1 50 1 112 2 222 1 
356 1 
22 1 204 1 153 1 137 1 274 1 50 1 112 1 222 1 
22 1 204 1 129 1 222 1 69 1 111 1 153 3 137 1 274 1 50 1 112 3 
13 1 85 1 50 1 131 1 
22 1 50 1 

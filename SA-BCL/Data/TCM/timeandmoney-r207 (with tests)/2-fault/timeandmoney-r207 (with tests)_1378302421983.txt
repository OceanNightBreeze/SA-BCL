#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval; | CONSTANT | 5642 | 1 -> 0
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 2 359 2 161 5 362 1 211 1 186 2 139 9 96 1 343 9 30 1 367 6 316 1 145 2 102 4 177 1 147 2 13 1 248 1 249 1 322 1 108 2 325 3 68 1 182 2 86 1 130 1 88 1 239 1 
22 2 359 2 161 5 362 1 211 1 186 2 139 9 96 1 343 9 30 1 367 6 316 1 145 2 102 4 177 1 147 2 13 1 248 1 249 1 322 1 108 2 325 3 68 1 182 2 86 1 130 1 88 1 239 1 
22 2 359 2 161 6 362 1 211 1 186 2 139 10 96 1 343 10 30 1 367 7 316 1 145 2 102 5 177 1 147 2 13 1 248 1 249 1 322 1 108 2 325 4 68 1 182 2 86 1 130 1 88 1 239 1 
22 2 359 2 161 4 362 1 211 1 186 1 139 7 96 1 343 7 30 1 367 4 316 1 145 2 102 3 177 1 147 2 13 1 248 1 322 1 108 2 325 2 68 1 182 2 86 1 130 1 88 1 239 1 
147 1 22 1 248 1 249 1 161 3 108 1 186 2 325 1 139 4 182 1 86 1 130 1 88 1 343 4 367 3 145 1 102 2 239 1 
147 1 22 1 248 1 161 1 359 1 56 1 139 2 375 1 68 1 287 1 182 1 86 1 88 1 343 2 316 1 145 1 
147 2 182 2 86 1 248 1 161 2 359 1 30 1 343 3 88 1 367 1 325 1 102 1 139 3 
22 1 359 1 161 5 186 2 139 9 96 1 30 1 343 9 367 7 346 1 102 4 145 1 372 1 147 2 13 1 248 1 249 1 108 1 325 3 182 2 86 1 130 1 88 1 239 1 
22 1 359 1 161 5 186 2 139 9 96 1 30 1 343 9 367 7 346 1 102 4 145 1 372 1 147 2 13 1 248 1 249 1 108 1 325 3 182 2 86 1 130 1 88 1 239 1 
277 1 328 1 128 1 
326 1 277 1 149 2 
73 2 290 2 154 1 378 2 136 2 253 1 355 2 296 2 
135 1 23 1 73 2 74 2 136 2 262 1 5 1 282 1 263 1 364 1 166 1 245 1 290 2 246 1 142 1 270 1 81 1 293 1 195 1 253 1 200 1 112 1 296 3 67 1 15 1 377 2 69 2 129 1 41 1 154 1 278 2 378 3 304 1 44 1 256 1 355 2 185 2 72 1 115 1 
73 1 206 1 41 1 290 1 154 1 378 1 136 1 187 1 355 1 296 1 
309 1 75 1 14 1 122 1 312 1 119 1 296 1 16 1 277 1 41 1 290 1 378 1 328 1 193 1 
309 2 73 1 136 1 14 1 312 1 119 1 296 1 16 1 277 1 41 1 290 1 378 1 328 1 193 2 355 1 
309 1 268 1 193 1 18 1 333 1 
309 2 277 1 268 1 338 1 328 1 193 2 333 1 92 1 
309 1 268 1 193 1 
309 1 73 1 76 1 136 1 187 1 296 1 206 1 41 1 154 1 290 1 378 1 193 1 333 1 355 1 
277 1 
309 2 277 1 268 1 328 1 193 2 159 1 333 1 92 1 
309 5 34 1 226 2 210 1 361 2 241 1 53 1 277 1 301 1 354 1 268 2 215 2 328 1 193 5 280 1 333 2 92 1 103 1 335 1 
253 1 128 1 
1 1 73 1 136 1 253 2 296 2 290 2 378 2 384 1 355 1 
85 1 374 1 344 1 
262 1 364 1 253 1 166 1 296 1 67 1 377 1 129 1 278 1 378 1 44 1 368 1 185 1 72 1 115 1 293 1 
73 1 262 1 364 1 166 1 67 1 296 2 377 1 129 1 188 1 290 1 278 1 378 2 44 1 344 1 46 1 72 1 355 1 185 1 115 1 293 1 
73 3 188 1 290 3 378 3 136 1 253 1 355 3 296 3 
73 1 41 1 290 1 378 1 187 1 355 1 296 1 
1 1 73 1 41 1 290 1 378 1 136 1 355 1 384 1 296 1 
73 3 309 1 74 1 136 2 262 1 282 1 263 1 364 1 312 1 339 1 166 1 119 1 245 1 290 3 188 1 246 1 142 1 193 1 81 1 293 1 64 1 14 1 253 1 112 1 67 1 296 4 15 1 16 1 377 1 69 2 129 1 41 1 154 1 278 1 378 4 304 1 44 1 256 1 46 1 72 1 384 1 355 3 185 1 115 1 
73 1 290 2 188 1 378 2 122 1 253 1 157 1 355 1 296 2 
309 1 73 3 64 1 136 1 14 1 312 1 119 1 296 3 16 1 277 1 41 1 299 1 188 2 290 3 378 3 193 1 46 1 384 1 355 3 
73 2 136 1 374 1 296 2 188 1 290 2 378 2 344 1 384 1 355 2 
262 1 364 1 253 1 166 1 296 1 67 1 377 1 129 1 278 1 378 1 44 1 185 1 72 1 293 1 115 1 
262 1 364 1 253 1 166 1 296 1 377 1 298 1 129 1 278 1 378 1 44 1 307 1 185 1 72 1 115 1 
135 2 74 4 94 1 282 1 263 1 264 1 137 1 79 1 169 1 246 1 142 1 344 2 62 1 194 1 85 2 374 2 276 1 233 1 15 1 205 1 69 2 70 1 304 1 256 2 
73 1 152 1 41 1 290 1 378 1 119 1 355 1 296 1 
73 4 136 1 122 1 253 1 296 5 188 2 290 5 378 5 46 1 157 1 144 1 317 1 355 4 384 1 
152 1 73 2 41 1 290 2 378 2 187 1 355 2 296 2 
40 1 208 1 
40 1 208 1 
21 1 300 1 
21 1 300 1 
21 1 300 1 
40 1 381 1 208 1 
40 1 208 1 51 1 
40 2 357 1 21 1 300 1 165 1 208 2 
40 1 381 1 208 1 
40 1 381 1 208 1 
40 1 208 1 369 1 
40 1 208 1 369 1 
40 1 208 1 369 1 
310 1 309 2 73 1 76 1 136 1 4 1 26 2 138 1 168 1 187 1 28 1 290 1 193 2 219 2 373 2 294 1 66 2 181 1 38 1 296 1 40 2 206 1 41 1 154 1 378 1 208 2 355 1 238 2 
146 1 309 1 73 2 281 1 373 1 336 1 36 1 66 1 26 1 253 1 296 2 28 1 40 1 290 2 171 1 378 2 208 1 383 1 193 1 219 1 355 2 238 1 51 1 349 1 
22 1 108 1 145 1 
22 1 56 1 145 1 
234 1 22 3 108 2 114 1 56 1 237 1 
39 1 22 2 108 1 114 1 56 1 237 1 
22 2 108 1 114 2 56 1 237 1 
309 5 281 1 336 1 261 2 361 1 53 1 167 1 265 1 288 1 268 1 215 1 193 5 173 2 348 1 194 1 292 1 349 1 350 1 225 1 149 3 34 2 226 1 233 1 205 1 326 1 277 2 70 1 328 1 330 2 333 4 92 1 335 3 
309 9 261 6 361 2 77 1 241 1 78 1 53 1 167 1 268 6 215 2 12 1 193 9 348 3 194 3 349 4 350 2 225 2 149 9 34 6 226 2 233 3 205 3 326 3 87 1 353 1 277 5 70 3 328 1 47 5 330 6 18 5 333 7 160 1 92 1 335 8 
309 3 361 1 261 2 241 1 288 1 215 1 193 3 173 1 348 1 292 1 349 1 194 1 350 1 225 1 226 1 34 2 149 4 233 1 205 1 326 2 277 3 70 1 328 1 330 2 333 2 335 3 
309 4 261 4 361 1 77 1 241 1 78 1 288 1 215 1 193 4 173 2 348 2 292 1 349 2 194 2 350 1 225 1 149 7 226 1 34 4 233 2 205 2 326 3 87 1 277 4 70 2 328 1 330 4 333 3 335 5 
269 1 128 1 115 1 
65 1 115 1 
179 1 
166 1 115 1 
129 1 150 1 269 2 252 1 166 1 115 3 
129 1 166 1 115 1 
228 1 115 1 
321 1 135 4 224 1 74 7 273 1 323 1 264 2 123 1 233 1 267 1 169 3 303 2 131 1 256 3 155 1 133 1 194 1 
321 1 135 4 224 1 74 7 273 1 323 1 264 2 123 1 233 1 267 1 169 3 303 2 131 1 256 3 155 1 133 1 194 1 
321 1 0 1 135 4 224 1 74 7 323 1 273 1 264 2 123 1 233 1 267 1 169 3 303 2 131 1 256 3 155 1 133 1 194 1 
135 16 74 31 282 1 264 5 52 1 340 1 57 4 267 2 214 1 169 10 142 1 60 1 348 3 194 4 321 2 224 1 323 1 273 1 231 3 123 2 199 1 233 4 15 1 205 3 69 2 303 3 131 5 304 1 70 3 256 15 155 2 49 1 133 1 50 1 
321 1 135 5 224 1 74 9 323 1 337 1 52 1 264 3 282 2 123 1 233 1 15 2 98 1 69 4 267 1 169 4 303 2 131 1 142 2 304 2 256 4 155 1 133 1 194 1 
22 2 161 1 359 1 311 1 364 1 56 1 139 2 8 1 342 1 97 1 343 2 367 1 145 1 147 1 248 1 108 1 229 1 35 1 202 1 255 1 377 1 182 1 234 1 86 1 278 1 88 1 331 1 91 1 185 1 72 1 
22 2 161 1 359 1 311 1 364 1 56 1 139 3 244 1 342 1 97 1 343 3 367 2 145 1 147 1 33 1 248 1 108 1 229 1 35 1 202 1 255 1 377 1 234 1 182 1 86 1 278 1 331 1 185 1 72 1 356 1 
22 2 161 1 359 1 311 1 364 1 56 1 139 2 342 1 343 2 367 2 145 1 33 1 248 1 229 1 35 1 108 1 255 1 377 1 234 1 86 1 278 1 331 1 185 1 72 1 356 1 
359 2 311 2 262 1 364 1 166 1 139 1 243 1 244 1 342 2 80 1 343 1 170 1 175 1 147 1 229 2 351 1 377 1 182 1 278 1 43 1 72 1 185 1 115 1 
22 2 359 1 311 1 364 1 56 1 139 1 8 1 342 1 97 1 343 1 145 1 147 1 33 1 108 1 229 1 35 1 202 1 255 1 377 1 182 1 234 1 278 1 88 1 331 1 185 1 72 1 
55 1 
53 1 285 1 290 1 345 1 192 1 193 5 149 2 14 1 198 1 296 1 16 1 302 1 17 1 71 1 305 4 258 1 306 1 72 1 115 1 309 5 118 2 360 1 75 1 25 2 361 1 262 2 164 1 364 1 312 1 313 2 166 1 119 1 266 1 80 1 268 6 170 1 216 2 215 1 225 1 34 2 226 1 122 1 376 2 377 2 326 2 277 2 41 1 42 2 278 2 380 2 378 1 328 1 185 2 92 3 335 2 
309 3 75 1 312 1 285 1 119 1 266 1 290 1 268 2 193 3 14 1 122 1 198 1 296 1 376 1 16 1 41 1 378 1 305 2 258 1 306 1 159 1 92 1 
309 3 75 1 312 1 285 1 119 1 266 1 268 1 290 1 216 1 193 3 14 1 122 1 198 1 296 1 16 1 41 1 277 1 378 1 305 3 328 1 258 1 306 1 159 1 92 1 
309 3 75 1 312 1 285 1 119 1 266 1 290 1 268 2 216 1 193 3 14 1 122 1 198 1 296 1 376 1 16 1 41 1 277 1 42 1 378 1 305 3 328 1 258 1 306 1 159 1 92 1 
309 5 118 2 75 1 25 2 361 1 363 1 53 1 312 1 313 2 285 1 119 1 266 1 290 1 268 7 215 1 216 4 345 1 193 5 143 1 34 1 226 1 14 1 122 1 198 1 232 1 151 1 296 1 376 4 16 1 326 2 277 5 41 1 302 1 42 4 380 2 378 1 305 6 328 5 156 1 258 1 306 1 159 1 92 3 335 1 
53 1 285 1 290 1 345 1 193 4 149 2 14 1 198 1 296 1 16 1 302 1 305 4 71 1 306 1 258 1 309 4 118 2 75 1 361 1 25 2 312 1 119 1 313 2 266 1 268 4 215 1 216 2 226 1 34 1 122 1 376 2 326 2 41 1 277 2 42 2 378 1 380 2 328 1 92 2 335 1 
309 4 118 2 75 1 25 2 361 1 363 1 312 1 53 1 313 2 285 1 119 1 266 1 268 4 290 1 216 2 215 1 345 1 193 4 34 1 226 1 14 1 122 1 198 1 232 1 376 2 296 1 16 1 326 2 277 1 41 1 42 2 302 1 380 2 378 1 305 4 328 1 258 1 306 1 156 1 92 2 335 1 
309 4 118 2 75 1 25 2 361 1 363 1 312 1 53 1 313 2 285 1 119 1 266 1 268 4 290 1 216 2 215 1 345 1 193 4 34 1 226 1 14 1 122 1 198 1 232 1 376 2 296 1 16 1 326 2 277 1 41 1 42 2 302 1 380 2 378 1 305 4 328 1 258 1 306 1 156 1 92 2 335 1 
309 4 75 1 25 2 361 1 312 1 53 1 7 1 285 1 119 1 365 1 314 2 266 1 268 4 290 1 216 2 215 1 193 4 220 2 371 1 149 2 34 1 226 1 14 1 122 1 198 1 232 1 376 2 296 1 16 1 277 1 41 1 42 2 302 1 380 2 378 1 305 4 328 1 258 1 306 1 92 2 335 1 
309 4 118 2 75 1 25 2 361 1 363 1 53 1 312 1 313 2 285 1 119 1 266 1 290 1 268 5 215 1 216 3 345 1 193 4 34 1 226 1 14 1 122 1 198 1 232 1 296 1 151 1 376 3 16 1 326 2 277 1 41 1 302 1 42 3 380 2 378 1 305 5 328 1 156 1 258 1 306 1 92 2 335 1 
309 4 118 2 75 1 25 2 361 1 363 1 53 1 312 1 313 2 285 1 119 1 266 1 290 1 268 5 215 1 216 3 345 1 193 4 34 1 226 1 14 1 122 1 198 1 232 1 296 1 151 1 376 3 16 1 326 2 277 1 41 1 302 1 42 3 380 2 378 1 305 5 328 1 156 1 258 1 306 1 92 2 335 1 
53 1 7 1 285 1 290 1 193 4 149 2 14 1 198 1 296 1 16 1 302 1 305 4 71 1 306 1 258 1 309 4 75 1 361 1 25 2 312 1 119 1 266 1 314 2 268 4 215 1 216 2 220 2 226 1 34 1 122 1 376 2 41 1 277 1 42 2 378 1 380 2 328 1 92 2 335 1 
135 3 74 6 282 1 263 1 264 2 79 1 169 2 246 1 142 1 344 1 194 1 321 1 85 1 224 1 323 1 374 1 123 1 253 2 128 1 233 1 15 1 69 2 303 1 304 1 256 3 133 1 
135 8 74 14 264 1 282 2 263 1 57 3 169 2 246 2 142 2 60 1 344 11 176 1 348 2 194 2 106 1 85 11 231 3 374 4 253 1 200 1 112 1 233 1 297 1 15 2 205 2 69 4 131 1 304 2 70 1 256 6 90 1 257 1 49 1 
73 1 135 1 74 2 262 1 263 1 282 1 364 1 166 1 290 1 188 1 246 1 142 1 368 1 61 1 293 1 109 1 374 1 253 1 200 1 112 1 67 1 296 2 377 1 15 1 69 2 129 1 278 1 378 2 44 1 304 1 257 1 256 1 382 1 46 1 72 1 185 1 355 1 115 1 
135 10 282 3 245 2 188 1 290 1 246 3 142 3 344 7 348 2 293 2 194 3 111 2 253 2 254 1 200 1 112 1 296 3 67 2 15 3 205 2 69 6 303 1 304 3 70 2 256 10 257 1 355 1 72 2 115 2 73 1 116 2 74 20 262 1 264 4 263 3 364 2 166 2 366 2 169 8 222 1 33 1 321 1 85 7 224 1 323 1 324 2 374 7 123 1 233 3 377 3 129 2 278 3 378 3 131 4 44 2 46 1 133 1 185 3 93 1 
73 1 135 1 23 2 74 2 162 1 262 2 282 2 263 2 364 2 166 2 79 1 80 1 290 1 188 1 247 1 246 2 170 1 142 2 217 1 319 1 84 1 33 1 200 1 113 1 112 1 296 1 377 8 15 2 69 4 278 8 235 1 378 1 304 2 256 1 91 1 355 1 72 2 185 7 115 3 
73 1 135 1 74 3 136 1 264 1 282 1 263 1 6 1 169 1 290 1 246 1 142 1 344 1 348 1 194 1 85 1 374 1 296 1 233 1 15 1 205 1 69 2 378 1 304 1 70 1 257 1 256 2 355 1 384 1 
85 1 135 2 74 2 374 1 263 1 282 1 137 1 15 1 205 1 69 2 79 1 169 1 246 1 131 1 142 1 304 1 344 1 194 1 
85 1 74 2 94 1 264 1 374 1 263 1 282 1 233 1 15 1 69 2 79 1 169 1 246 1 142 1 304 1 70 1 344 1 256 2 
135 2 74 4 282 1 263 1 264 1 79 1 169 2 246 1 142 1 344 2 348 1 194 1 85 2 374 2 233 1 205 1 15 1 69 2 131 1 304 1 70 1 256 2 
85 1 135 2 74 2 374 1 263 1 282 1 137 1 113 1 15 1 205 1 69 2 169 1 246 1 131 1 142 1 304 1 344 1 194 1 
85 1 74 2 94 1 264 1 374 1 263 1 282 1 113 1 233 1 15 1 69 2 169 1 246 1 142 1 304 1 70 1 344 1 256 2 
135 2 74 4 282 1 263 1 264 1 169 2 246 1 142 1 344 2 348 1 194 1 85 2 374 2 113 1 233 1 205 1 15 1 69 2 131 1 304 1 70 1 256 2 
135 2 74 4 282 1 263 1 264 1 169 2 246 1 142 1 344 2 348 1 194 1 85 2 374 2 233 1 205 1 15 1 69 2 131 1 304 1 70 1 256 2 
135 1 74 2 262 1 263 1 282 1 364 1 166 1 245 1 246 1 142 1 293 1 253 1 200 1 112 1 67 1 296 1 377 1 15 1 69 2 129 1 278 1 378 1 44 1 304 1 256 1 72 1 185 1 115 1 
135 1 74 2 262 1 263 1 282 1 364 1 166 1 246 1 142 1 271 1 253 1 200 1 112 1 296 1 377 1 15 1 298 1 69 2 129 1 278 1 378 1 44 1 304 1 256 1 307 1 72 1 185 1 115 1 
135 2 74 4 282 1 263 1 264 1 169 2 246 1 142 1 344 2 348 1 194 1 85 2 374 2 233 1 205 1 15 1 69 2 131 1 304 1 70 1 257 1 256 2 
135 2 74 4 264 1 263 1 282 1 364 1 166 1 245 1 169 2 246 1 142 1 344 2 348 1 194 1 293 1 85 2 374 2 324 1 233 1 67 1 296 1 205 1 377 1 15 1 69 2 129 1 278 1 131 1 378 1 70 1 44 1 304 1 256 2 91 1 72 1 185 1 115 1 
73 1 135 2 74 3 209 1 136 1 282 1 263 1 169 1 290 1 246 1 142 1 344 1 348 1 194 1 85 1 374 1 233 1 296 1 15 1 205 1 69 2 131 1 378 1 70 1 304 1 256 1 257 1 355 1 384 1 
135 20 282 3 52 1 57 4 98 1 59 1 142 3 9 1 60 3 11 1 101 1 291 1 348 4 194 5 63 4 250 1 295 1 205 4 15 3 69 6 303 1 70 4 304 3 256 21 74 41 24 1 264 4 163 1 169 8 31 2 120 1 321 1 224 1 323 1 231 3 123 1 37 1 233 5 131 4 48 1 49 1 183 1 133 1 
135 20 74 38 24 1 52 2 163 1 264 4 282 4 57 4 59 1 98 1 169 7 9 1 142 4 60 3 31 2 11 1 120 1 101 1 291 1 348 4 194 5 63 4 321 1 224 1 250 1 323 1 231 3 123 1 37 1 295 1 233 4 15 4 205 4 69 8 303 1 131 3 304 4 70 3 256 18 48 1 49 1 133 1 183 1 
135 27 74 52 24 1 52 1 163 1 264 7 282 2 57 4 98 1 169 14 9 1 142 2 60 2 31 1 11 1 120 1 101 1 176 2 348 7 194 8 63 4 321 1 224 1 250 1 323 1 231 4 123 1 37 1 295 1 233 8 15 2 205 7 69 4 303 1 131 7 304 2 70 7 256 25 48 1 49 2 133 1 183 1 
135 9 74 19 264 3 282 2 57 2 98 1 141 1 169 6 9 1 142 2 60 1 31 1 11 1 120 1 101 1 291 1 348 3 194 3 63 2 231 1 233 3 15 2 205 3 69 4 131 3 304 2 70 3 256 10 48 2 49 1 
135 14 74 26 24 1 52 2 264 2 282 3 163 1 57 2 98 1 169 4 9 1 142 3 60 2 31 2 11 1 120 1 101 2 348 3 194 3 63 4 250 1 231 2 37 1 295 1 233 2 15 3 205 3 69 6 131 2 304 3 70 2 256 12 48 1 183 1 
40 1 357 1 208 1 66 1 26 1 219 1 100 1 242 1 238 1 104 1 
36 1 51 1 
40 1 3 1 208 1 66 1 26 1 219 1 158 1 238 1 308 1 
310 1 309 1 73 1 76 1 136 1 4 1 26 1 138 1 168 1 187 1 28 1 290 1 219 1 193 1 373 2 294 1 66 1 181 1 38 1 296 1 40 1 206 1 41 1 154 1 378 1 208 1 355 1 238 1 
310 1 309 1 73 1 76 1 136 1 4 1 26 1 138 1 168 1 187 1 28 1 290 1 219 1 193 1 373 2 294 1 66 1 181 1 38 1 296 1 40 1 206 1 41 1 154 1 378 1 208 1 355 1 238 1 
310 1 309 1 73 1 76 1 136 1 4 1 26 1 138 1 168 1 187 1 28 1 290 1 219 1 193 1 373 2 294 1 66 1 181 1 38 1 296 1 40 1 206 1 41 1 154 1 378 1 208 1 355 1 238 1 
189 1 165 1 381 1 
189 1 165 1 381 1 
369 1 370 1 
165 1 369 1 370 1 
146 1 171 1 
309 1 73 2 281 1 336 1 4 1 26 1 168 1 290 2 171 1 218 1 193 1 219 1 349 1 146 1 373 1 36 1 66 1 253 1 296 2 40 1 378 2 208 1 383 1 333 1 355 2 238 1 51 1 
189 1 381 1 
165 1 369 1 370 1 
135 1 23 2 358 1 2 1 74 2 162 1 263 1 282 1 364 1 166 1 290 2 246 1 142 1 217 1 318 1 32 1 275 1 200 1 112 1 296 2 377 2 15 1 69 2 278 2 378 2 304 1 257 1 256 1 72 1 185 2 115 1 
22 2 33 1 117 1 108 1 311 1 364 1 56 1 127 1 255 1 377 2 97 1 234 1 140 1 278 2 331 1 91 1 145 1 72 1 185 2 
22 2 33 1 108 1 311 1 110 1 364 1 56 1 127 1 255 1 377 1 97 1 234 1 278 1 331 1 145 1 185 1 72 1 
117 1 311 1 262 1 364 1 166 1 377 1 80 1 278 1 170 1 279 1 175 1 72 1 185 1 115 1 
22 2 33 1 117 1 108 1 311 1 364 1 56 1 127 1 255 1 377 1 97 1 234 1 140 1 278 1 331 1 145 1 72 1 185 1 
107 1 
277 1 301 1 34 1 210 1 328 1 128 1 335 1 
309 1 118 1 361 1 53 1 313 1 268 1 215 1 345 1 193 1 34 1 226 1 149 1 326 1 277 2 328 1 92 1 335 1 
53 4 341 2 192 1 193 5 348 2 194 2 105 2 149 12 150 1 65 3 14 2 203 1 205 2 301 1 70 2 72 4 259 1 115 10 309 5 210 1 361 4 261 6 262 1 212 2 364 3 166 3 213 2 366 2 268 5 215 4 269 2 82 1 221 2 83 2 225 2 226 4 34 8 228 2 121 2 233 2 377 3 326 6 129 3 277 8 278 3 328 2 236 1 330 6 91 1 184 2 185 3 92 3 134 1 335 9 
309 1 24 1 261 5 361 2 163 1 53 2 213 2 57 1 268 1 191 1 215 2 60 1 192 1 193 1 348 2 83 1 194 2 225 1 149 6 226 2 34 5 250 1 231 1 295 1 233 2 205 2 326 3 277 5 89 1 70 2 328 2 330 5 183 1 92 1 335 8 
309 1 73 1 361 1 76 1 136 1 53 1 213 2 187 1 290 1 215 1 10 1 193 1 83 1 194 2 321 1 224 1 226 1 34 2 123 1 296 1 233 1 206 1 41 1 154 1 378 1 156 1 355 1 335 2 
226 1 34 1 210 1 361 1 53 1 301 1 277 1 215 1 328 1 335 1 
34 5 149 10 261 5 213 2 366 1 233 2 205 2 326 5 277 5 70 2 330 5 348 2 83 1 194 2 335 5 
309 1 277 1 268 1 328 1 193 1 92 1 
309 3 360 1 361 2 262 2 241 1 364 1 164 1 53 1 166 1 80 1 268 4 170 1 215 2 192 2 193 3 174 1 178 1 225 2 226 2 34 2 377 4 278 4 72 1 185 4 92 2 259 2 115 1 134 1 335 2 
73 2 74 1 262 1 136 2 282 1 263 1 364 1 166 1 245 1 290 2 246 1 142 1 81 1 293 1 253 1 112 1 296 3 67 1 15 1 377 1 69 2 129 1 278 1 154 1 378 3 304 1 44 1 256 1 185 1 355 2 72 1 115 1 
225 1 149 4 34 2 226 1 261 2 361 1 53 1 326 2 277 4 303 1 215 1 328 2 192 1 330 2 335 1 
26 1 238 1 19 1 
29 1 146 1 26 1 100 1 238 1 
26 1 238 1 19 1 
26 1 238 1 19 1 
329 1 26 1 238 1 
329 1 26 1 238 1 
329 1 26 1 238 1 
26 1 238 1 
40 1 208 1 
135 4 74 8 163 1 282 1 264 2 57 1 98 1 169 2 142 1 60 1 194 1 321 1 224 1 323 1 231 1 123 1 233 1 15 1 69 2 303 1 304 1 256 4 133 1 
135 6 74 11 264 2 163 1 282 2 57 2 98 1 169 3 142 2 60 1 348 1 194 2 321 1 224 1 323 1 231 1 197 1 123 1 233 1 15 2 205 1 69 4 303 1 131 1 304 2 256 5 49 1 133 1 
135 9 74 19 24 1 163 1 282 3 264 3 52 1 57 1 98 1 169 4 142 3 60 1 348 2 194 3 321 1 224 1 250 1 323 1 231 1 197 1 123 1 295 1 233 3 15 3 205 2 69 6 303 1 131 1 304 3 70 2 256 10 133 1 183 1 
135 10 74 17 24 1 52 1 163 1 282 3 264 3 57 1 98 1 169 5 142 3 60 1 348 2 194 3 321 1 224 1 250 1 323 1 231 1 197 1 123 1 295 1 233 2 15 3 205 2 69 6 303 1 131 2 304 3 70 1 256 7 133 1 183 1 
135 4 74 8 163 1 282 1 264 2 57 1 98 1 169 2 142 1 60 1 194 1 321 1 224 1 323 1 231 1 123 1 233 1 15 1 69 2 303 1 304 1 256 4 133 1 
135 6 74 12 24 1 163 1 282 1 264 1 57 1 98 1 169 2 142 1 60 1 348 2 194 2 250 1 231 1 295 1 233 2 15 1 205 2 69 2 131 1 304 1 70 2 256 6 183 1 
135 10 74 18 24 1 163 1 282 4 264 3 52 2 57 1 98 1 169 5 142 4 60 1 348 2 194 3 321 1 224 1 250 1 323 1 231 1 197 1 123 1 295 1 233 2 15 4 205 2 69 8 303 1 131 2 304 4 70 1 256 8 133 1 183 1 
135 9 74 16 24 1 163 1 282 4 264 3 52 2 57 1 98 1 169 6 142 4 60 1 291 1 348 3 194 3 250 1 231 1 295 1 233 2 15 4 205 3 69 8 131 3 304 4 70 2 256 7 183 1 
321 3 135 3 74 7 224 1 323 2 264 3 123 3 233 1 169 6 131 3 256 4 133 1 194 1 
135 10 74 18 24 1 163 1 282 4 264 3 52 2 57 1 98 1 169 4 142 4 60 1 291 1 348 2 194 3 321 1 224 1 250 1 323 1 231 1 123 1 295 1 233 2 15 4 205 2 69 8 303 1 131 1 304 4 70 1 256 8 133 1 183 1 
135 4 321 1 224 1 74 8 323 1 264 2 282 2 52 1 123 1 233 1 15 2 69 4 303 1 169 3 131 1 142 2 304 2 256 4 133 1 194 1 
321 1 135 3 224 1 74 6 323 1 264 2 123 1 128 1 233 1 303 1 169 2 256 3 133 1 194 1 
135 2 74 4 264 1 282 1 197 1 233 1 15 1 205 1 69 2 169 2 142 1 131 1 70 1 304 1 256 2 348 1 194 1 
135 3 74 7 231 1 264 1 57 2 233 1 205 1 169 2 131 1 70 1 60 1 256 4 49 1 348 1 194 1 
135 11 74 23 264 5 52 2 282 2 57 2 169 9 142 2 176 1 348 2 194 3 106 1 321 2 224 1 323 1 231 2 196 1 123 2 233 3 205 2 15 2 69 4 303 1 131 4 70 2 304 2 256 12 49 1 133 1 
74 1 256 1 57 1 
135 1 74 1 231 1 
135 3 74 6 282 1 264 2 197 1 366 1 233 1 15 1 205 1 69 2 169 3 142 1 131 1 304 1 70 1 256 3 348 1 194 1 
135 6 74 12 24 1 163 1 282 1 264 1 57 1 98 1 169 2 142 1 60 1 348 2 194 2 250 1 231 1 295 1 233 2 15 1 205 2 69 2 131 1 304 1 70 2 256 6 183 1 
135 3 321 1 224 1 74 6 264 1 123 1 233 1 169 2 131 1 256 3 194 1 
135 1 321 1 74 3 323 1 264 1 52 1 282 1 196 1 123 1 15 1 69 2 169 2 131 1 142 1 304 1 256 2 133 1 
321 2 135 5 74 10 224 1 282 1 264 3 123 2 233 2 15 1 69 2 98 1 169 5 142 1 131 2 304 1 10 1 256 5 194 2 
135 2 74 2 282 1 15 1 205 1 98 1 69 2 169 1 142 1 131 1 304 1 194 1 
135 2 74 4 264 1 282 1 233 1 15 1 205 1 98 1 69 2 169 2 142 1 131 1 70 1 304 1 256 2 348 1 194 1 
321 1 135 1 74 3 52 1 282 3 264 1 196 1 123 1 15 3 98 1 69 6 169 2 142 3 131 1 304 3 256 2 291 1 
135 16 74 34 52 2 282 5 264 7 340 1 57 4 98 1 214 1 169 12 142 5 60 1 291 1 348 3 194 5 321 3 224 2 323 1 231 3 196 1 197 1 123 3 233 5 15 5 205 3 69 10 303 1 131 5 304 5 70 3 256 18 49 1 133 1 50 1 
207 1 290 1 378 1 122 1 253 1 157 1 296 1 
122 1 54 1 253 1 286 1 201 1 296 1 289 1 207 1 290 1 378 1 157 1 332 1 
80 1 278 1 170 1 262 1 364 1 166 1 72 1 128 1 185 1 115 1 377 1 
73 1 262 1 364 1 253 1 166 1 296 2 67 1 377 1 129 1 188 1 290 1 278 1 378 2 44 1 72 1 355 1 185 1 115 1 
73 2 364 1 312 1 166 2 119 1 290 2 188 1 228 1 121 1 253 1 67 1 296 2 377 1 129 2 41 1 278 1 378 2 44 1 185 1 355 1 72 1 259 1 115 3 
73 2 364 1 312 1 166 2 119 1 58 1 290 2 188 1 228 1 121 1 253 1 296 2 377 2 129 2 41 1 278 2 378 2 44 1 307 1 185 2 355 1 72 1 259 1 115 3 
309 2 262 1 364 1 166 1 58 1 268 1 269 1 99 1 193 2 228 1 65 1 121 1 14 1 377 3 129 1 277 1 278 3 132 1 328 1 185 3 72 1 115 4 259 1 
105 1 309 2 228 1 262 1 14 1 121 1 65 1 364 1 166 1 58 1 377 3 129 1 277 1 278 3 268 1 269 1 328 1 193 2 72 1 185 3 259 1 115 4 
84 1 278 1 364 1 72 1 185 1 377 1 
84 1 23 1 33 1 150 1 274 1 262 2 352 1 364 2 166 2 377 7 129 1 278 7 247 1 235 1 217 1 91 1 319 1 185 6 72 3 115 3 334 1 
135 3 2 1 282 2 245 1 188 1 290 1 246 2 142 2 344 1 293 1 194 1 253 2 67 1 296 2 15 2 69 4 303 1 304 2 257 1 256 3 355 1 72 1 115 1 116 1 73 1 74 6 263 2 264 2 364 1 166 1 169 2 321 1 85 1 224 1 323 1 374 1 324 1 123 1 233 1 377 1 129 1 278 1 378 2 44 1 91 1 133 1 185 1 
309 3 210 1 361 2 262 1 53 2 212 1 268 2 215 2 269 1 193 3 221 1 105 1 34 1 226 2 65 1 14 1 377 1 277 1 301 1 278 1 328 1 185 1 333 1 184 1 92 1 335 1 134 1 115 2 
84 1 150 1 364 1 166 1 203 1 377 2 129 1 278 2 269 1 91 1 185 2 72 2 115 2 
262 1 364 1 180 1 166 1 58 1 377 4 80 1 278 4 170 1 91 1 72 1 185 4 115 1 
274 1 364 1 166 1 124 1 377 2 129 1 278 2 45 1 185 2 72 2 259 1 222 1 115 1 334 1 
22 1 278 1 262 1 364 1 56 1 145 1 72 1 185 1 255 1 377 1 
33 1 358 1 278 2 217 1 364 1 166 1 91 1 72 1 185 2 115 1 377 2 
262 1 364 2 180 1 166 2 377 5 80 1 278 5 170 1 235 1 217 1 91 1 185 4 319 1 72 2 259 1 115 3 
148 1 262 1 364 2 180 1 166 2 377 5 80 1 278 5 170 1 235 1 217 1 91 1 185 4 72 2 259 1 115 3 
73 1 262 1 364 1 253 1 166 1 296 2 377 1 129 1 188 1 290 1 278 1 378 2 44 1 307 1 72 1 355 1 185 1 115 1 
150 1 274 1 352 1 364 1 166 1 377 1 129 1 278 1 185 1 72 2 259 1 115 1 334 1 
315 1 260 1 240 1 253 1 27 1 
309 2 260 2 64 1 14 1 240 2 312 1 284 1 253 1 119 1 125 1 27 1 16 1 327 1 315 2 277 1 41 1 328 1 193 2 333 1 
260 1 32 1 275 1 240 1 296 1 27 1 290 1 378 1 318 1 
284 1 125 1 27 1 
86 1 248 1 161 1 128 1 
147 1 182 1 86 1 248 1 161 1 343 1 139 1 
359 1 343 1 229 1 
20 1 147 1 248 1 161 1 227 1 95 1 139 3 68 2 182 1 86 1 88 1 343 3 
147 1 182 1 86 1 248 1 161 1 343 2 367 1 186 1 139 2 
147 1 182 1 22 1 161 1 343 1 88 1 108 1 145 1 102 1 139 1 239 1 
147 1 182 1 248 1 161 1 343 1 88 1 139 1 
147 1 182 1 86 1 248 2 343 1 88 1 139 1 
147 2 248 1 161 1 230 1 251 1 139 2 182 2 88 1 343 2 190 1 
13 1 147 1 182 1 86 1 248 1 161 2 343 3 88 1 367 2 325 1 102 1 96 1 139 3 
147 1 22 2 248 1 161 1 272 1 108 1 56 1 139 2 182 1 234 1 86 1 88 1 343 2 367 1 145 1 
147 2 248 1 249 1 161 2 186 1 325 1 139 4 182 2 86 1 88 1 343 4 367 2 102 1 
147 1 182 1 86 1 248 1 161 1 343 1 88 1 139 1 
223 1 147 1 248 2 227 1 161 3 95 1 325 1 139 4 68 1 182 1 86 2 343 4 367 2 102 1 
147 1 248 1 161 1 139 2 182 1 86 1 88 1 343 2 367 1 346 1 347 1 320 1 
147 1 248 1 161 1 227 2 95 1 139 3 68 2 182 1 86 1 88 1 343 3 379 1 
153 1 161 2 172 1 204 2 
147 1 182 1 343 1 88 1 126 1 139 1 
147 1 182 1 86 1 248 1 161 1 343 2 88 1 367 1 96 1 139 2 
283 1 
147 1 182 1 86 1 248 1 161 1 343 1 88 1 139 1 
147 1 182 1 86 1 248 1 161 1 343 3 88 1 367 1 96 1 139 3 68 1 
223 1 161 1 325 1 102 1 
248 1 161 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
263 1 54 1 53 3 294 1 277 2 257 2 230 1 220 1 249 1 376 3 78 1 378 1 28 2 
142 1 213 1 263 3 285 1 70 1 128 2 312 1 340 1 43 1 220 2 249 4 222 2 78 1 8 2 28 2 54 1 53 9 294 6 277 5 328 1 257 2 32 2 230 1 376 9 378 1 237 1 283 1 301 1 
142 1 213 1 263 3 285 1 70 1 128 2 312 1 340 1 43 1 220 2 249 4 222 2 78 1 8 2 28 2 54 1 53 9 294 6 277 5 328 1 257 2 32 2 230 1 376 9 378 1 237 1 283 1 301 1 
142 1 213 1 263 4 285 1 70 1 128 2 312 1 340 1 43 1 220 2 249 5 222 2 78 1 8 2 28 2 54 1 53 10 294 7 277 6 328 1 257 2 32 2 230 1 376 10 378 1 237 1 283 1 301 1 
142 1 263 2 285 1 70 1 128 2 312 1 340 1 43 1 220 2 249 3 222 2 78 1 8 1 28 2 54 1 53 7 294 4 277 4 328 1 257 2 32 2 230 1 376 7 378 1 237 1 283 1 301 1 
213 1 263 1 54 1 53 4 294 3 277 3 257 1 32 1 128 1 43 1 340 1 249 2 222 1 376 4 78 1 8 2 378 1 28 1 
114 1 54 1 53 2 277 1 328 1 257 1 32 1 128 1 90 1 220 1 376 2 234 1 78 1 378 1 283 1 28 1 
213 1 263 3 312 1 128 1 43 1 340 1 249 4 220 1 222 1 107 1 78 1 8 2 28 2 54 1 294 7 53 9 277 5 257 2 230 1 32 1 377 1 376 9 378 1 301 1 
213 1 263 3 312 1 128 1 43 1 340 1 249 4 220 1 222 1 107 1 78 1 8 2 28 2 54 1 294 7 53 9 277 5 257 2 230 1 32 1 377 1 376 9 378 1 301 1 
29 1 82 1 87 1 115 1 227 1 2 1 71 1 352 1 363 1 375 1 61 1 174 1 209 1 63 1 
50 1 
169 1 192 1 352 2 315 1 363 1 77 1 50 1 71 2 
192 1 97 1 51 2 165 1 357 2 71 5 169 2 352 5 315 1 141 1 363 2 271 1 6 1 250 1 259 1 345 1 161 2 50 1 178 1 
315 1 57 1 50 1 
122 2 207 1 50 1 
29 1 82 2 87 2 61 2 227 2 209 2 14 1 63 2 
95 1 335 1 214 1 304 2 38 1 1 1 39 1 124 1 287 1 69 1 360 1 42 1 247 1 147 1 219 2 131 1 344 1 176 1 111 1 29 1 82 2 155 2 12 1 87 3 227 2 138 2 182 1 14 1 184 1 232 1 374 1 17 2 120 1 61 2 209 2 93 1 63 3 
29 1 82 1 87 1 115 1 61 1 227 1 174 1 2 1 209 1 63 1 
87 1 144 1 115 1 136 1 168 1 279 1 71 1 352 1 315 1 62 1 172 1 209 1 63 1 50 1 
82 1 87 1 144 1 115 1 136 1 227 1 71 2 352 2 315 1 61 1 62 1 172 1 209 1 63 1 50 1 
169 1 352 1 74 1 363 1 71 1 
169 1 192 1 202 1 352 2 315 1 363 1 50 1 71 2 
169 1 352 1 71 1 
82 1 87 2 227 1 14 2 351 1 61 1 26 1 209 2 63 2 
143 1 317 1 229 1 
304 1 335 1 1 1 12 1 87 1 39 1 369 1 138 1 14 1 69 1 42 1 147 1 17 1 120 1 344 1 63 1 
335 1 304 1 82 1 1 1 12 1 143 1 88 1 87 2 39 1 138 1 69 1 72 1 42 1 147 1 120 1 17 1 344 1 61 1 209 1 63 2 
14 1 57 1 
82 4 88 2 87 5 227 1 14 1 279 1 72 1 362 1 170 1 60 1 61 4 26 1 209 5 63 5 
96 1 82 2 87 2 115 1 61 2 2 1 209 2 63 2 
82 3 88 1 87 3 61 3 227 1 209 3 14 1 63 3 
82 1 87 1 115 1 61 1 2 1 209 1 63 1 
82 1 351 1 87 1 115 1 61 1 227 1 26 1 209 1 63 1 
95 1 335 1 304 1 38 1 1 1 144 1 39 1 124 1 69 1 360 1 71 1 72 1 42 1 147 1 341 1 219 2 131 1 344 1 172 1 26 1 111 1 29 1 82 3 155 1 12 1 87 4 88 1 115 1 136 1 227 2 181 1 138 1 14 1 184 1 232 1 374 1 120 1 352 1 17 1 62 1 61 3 209 3 93 1 63 4 
82 1 87 2 88 1 60 1 61 1 209 2 14 1 63 2 279 1 
82 3 88 2 87 3 144 1 136 1 115 1 227 1 71 1 72 1 341 1 352 1 61 3 62 1 171 1 172 1 26 1 209 3 63 3 50 1 
82 2 88 1 87 2 143 1 227 1 229 1 61 2 26 1 209 2 63 2 
304 1 335 1 1 1 12 1 87 1 39 1 138 1 14 1 69 1 42 1 147 1 17 1 120 1 344 1 63 1 
304 1 335 1 1 1 12 1 87 1 39 1 138 1 14 1 69 1 42 1 147 1 16 1 205 1 17 1 63 1 
191 1 38 1 143 2 308 1 360 2 219 2 198 1 131 1 7 1 317 2 176 2 346 1 111 1 135 1 180 1 155 4 327 1 330 1 229 2 184 1 118 1 373 1 374 1 93 1 
96 1 82 1 144 1 87 1 115 1 61 1 209 1 63 1 
193 1 325 1 101 1 
193 2 113 1 267 1 92 1 20 1 101 2 
193 1 101 1 
193 1 101 1 
113 1 267 1 
113 1 267 1 
113 1 267 1 
193 1 261 1 101 1 
193 1 261 1 101 1 
193 1 261 1 101 1 
269 1 193 1 101 1 
269 1 193 1 101 1 
269 1 193 1 101 1 
193 1 265 1 101 1 71 1 343 1 175 1 323 1 293 1 82 2 83 1 112 1 325 1 256 1 87 2 368 1 14 1 371 1 204 1 91 1 352 1 61 2 209 2 63 2 302 1 
193 2 293 3 265 2 83 2 276 1 145 1 329 2 101 2 71 2 204 1 41 1 289 1 352 2 251 1 175 2 50 1 323 2 134 1 20 1 
114 1 222 1 127 1 268 2 128 2 
222 1 32 1 128 1 
114 1 32 1 128 1 
154 1 114 1 222 2 268 1 127 1 128 3 
114 1 222 1 268 1 127 1 253 1 128 2 
37 1 192 1 65 1 122 3 165 2 21 1 266 2 308 1 357 1 288 1 71 5 169 1 45 2 103 1 363 4 315 1 271 3 322 1 153 2 50 2 224 1 180 1 256 1 51 1 330 1 118 1 91 1 352 5 141 1 207 1 161 1 302 1 
37 2 192 1 65 1 122 9 196 1 165 6 266 6 308 3 357 2 197 5 288 2 71 9 169 6 73 1 248 1 342 1 45 6 103 3 74 5 363 7 315 1 272 1 271 8 345 1 50 5 180 3 51 2 330 3 118 3 91 4 352 9 141 1 207 3 94 1 161 2 
37 1 122 4 165 2 21 1 308 1 266 2 357 1 288 1 71 3 103 1 45 2 315 1 363 2 271 3 345 1 322 1 153 1 50 3 180 1 51 1 330 1 118 1 91 1 352 3 207 2 161 1 
37 1 122 7 196 1 165 4 21 1 266 4 308 2 357 1 288 1 71 4 73 1 342 1 45 4 103 2 315 1 363 3 271 5 345 1 322 1 153 2 50 4 180 2 51 1 330 2 118 2 91 2 352 4 207 3 161 1 
47 1 
39 1 57 1 201 1 
280 1 39 1 
335 1 1 1 39 1 
39 1 231 1 
335 1 39 1 
335 1 1 1 39 3 306 1 3 1 201 2 
223 1 348 1 179 1 284 1 155 7 308 1 30 2 330 1 31 1 360 3 373 3 5 1 176 4 346 2 48 1 320 1 162 1 81 1 
305 1 284 1 38 1 123 1 308 4 310 1 360 15 219 2 103 3 148 1 5 5 131 1 176 16 48 2 346 5 79 1 81 2 223 1 348 1 179 1 155 31 180 3 30 3 137 1 31 2 330 4 184 1 118 3 158 3 373 10 186 4 159 1 93 1 162 2 
38 2 284 1 308 1 360 4 219 4 148 1 5 1 131 2 176 5 274 1 346 3 48 1 81 1 179 1 348 1 155 9 30 2 330 1 31 1 184 2 373 4 93 2 212 1 162 1 
223 1 348 1 179 1 155 7 284 1 308 1 30 2 330 1 31 1 360 3 373 3 5 1 176 4 346 2 48 1 162 1 81 1 
223 1 348 1 179 1 155 7 284 1 308 1 30 2 330 1 31 1 360 3 373 3 5 1 176 4 346 2 48 1 162 1 81 1 
335 1 304 1 13 1 39 1 53 1 195 1 295 2 67 1 297 2 138 1 257 1 69 1 42 1 147 1 187 1 17 1 282 1 220 2 150 1 376 1 333 1 173 2 28 1 
154 1 304 1 114 1 53 1 295 1 297 1 23 1 138 1 257 1 32 1 128 2 69 1 372 1 246 1 147 1 281 1 17 1 221 1 220 1 222 1 376 1 173 1 365 1 78 1 210 1 28 1 
304 1 164 1 23 1 69 1 128 2 246 1 147 1 220 1 221 1 222 1 173 1 78 1 365 1 28 1 154 1 114 1 54 1 294 1 53 2 277 1 295 1 297 1 138 1 257 1 32 1 17 1 281 1 376 2 210 1 378 1 
304 1 23 1 69 1 128 2 246 1 147 1 150 1 220 1 222 1 173 1 365 1 28 1 154 1 86 1 114 1 54 1 53 3 294 2 277 1 295 1 297 1 138 1 257 1 32 1 372 1 17 1 281 1 376 3 210 1 378 1 
304 1 23 1 69 1 128 2 246 1 147 1 220 1 222 1 173 1 365 1 154 1 86 1 114 1 54 1 53 2 294 2 277 1 295 1 297 1 138 1 32 1 372 1 17 1 376 2 378 1 
160 1 
335 1 192 3 239 1 144 1 39 1 243 1 288 1 42 2 147 1 44 1 149 1 252 2 50 2 11 1 51 1 115 1 352 5 17 2 62 1 18 4 354 2 207 2 209 1 299 1 262 1 161 1 300 1 63 1 355 2 64 1 304 2 122 2 165 2 357 1 69 1 71 5 168 1 169 6 130 1 314 1 315 1 271 2 172 1 321 2 80 1 87 1 136 1 138 2 183 2 279 1 185 2 187 1 282 1 141 1 334 2 
192 1 239 1 144 1 168 1 71 3 169 2 314 1 130 1 172 1 77 1 80 1 87 1 115 1 136 1 279 1 185 1 352 3 62 1 18 2 209 1 63 1 300 1 
192 1 239 1 144 1 168 1 71 3 169 1 314 1 130 1 315 1 172 1 77 1 80 1 50 1 87 1 115 1 136 1 183 1 279 1 352 3 62 1 18 3 209 1 63 1 300 1 
192 1 239 1 144 1 168 1 71 3 169 2 314 1 130 1 315 1 172 1 77 1 80 1 50 1 87 1 115 1 136 1 183 1 279 1 185 1 352 3 62 1 18 3 354 1 209 1 63 1 300 1 
192 3 239 1 144 1 243 1 44 1 105 1 252 2 50 5 51 1 115 1 117 1 352 5 62 1 18 6 354 4 298 1 207 2 209 1 63 1 300 1 161 1 355 2 165 1 357 1 71 5 168 1 169 7 130 1 314 1 364 1 315 5 25 1 271 1 172 1 77 1 321 2 80 1 87 1 136 1 183 4 279 1 185 4 141 1 334 2 
192 2 239 1 144 1 243 1 44 1 149 1 252 2 50 2 51 1 115 1 352 4 62 1 18 4 207 2 354 2 209 1 63 1 161 1 300 1 355 2 122 2 165 1 357 1 71 4 168 1 169 4 130 1 314 1 315 1 271 1 172 1 321 2 80 1 87 1 136 1 183 2 279 1 185 2 141 1 334 2 
355 2 192 2 239 1 144 1 165 1 357 1 243 1 168 1 71 4 169 4 44 1 314 1 130 1 315 1 25 1 271 1 105 1 172 1 321 2 252 2 50 1 80 1 51 1 87 1 115 1 136 1 183 2 279 1 185 2 352 4 141 1 62 1 18 4 354 2 207 2 298 1 209 1 334 2 161 1 63 1 300 1 
355 2 192 2 239 1 144 1 165 1 357 1 243 1 168 1 71 4 169 4 44 1 314 1 130 1 315 1 25 1 271 1 105 1 172 1 321 2 252 2 50 1 80 1 51 1 87 1 115 1 136 1 183 2 279 1 185 2 352 4 141 1 62 1 18 4 354 2 207 2 298 1 209 1 334 2 161 1 63 1 300 1 
192 2 239 1 122 2 144 1 165 1 309 1 357 1 243 1 168 1 71 4 169 4 314 1 130 1 315 1 25 1 271 1 172 1 252 2 50 1 80 1 52 1 51 1 87 1 156 2 115 1 136 1 183 2 279 1 185 2 352 4 141 1 62 1 233 1 18 4 354 2 208 2 209 1 334 2 161 1 63 1 300 1 
355 2 192 2 239 1 144 1 165 1 357 1 243 1 168 1 71 4 169 5 44 1 314 1 130 1 315 1 25 1 271 1 105 1 172 1 321 2 252 2 50 1 80 1 51 1 87 1 115 1 136 1 183 3 279 1 117 1 185 3 352 4 141 1 62 1 18 5 207 2 354 3 298 1 209 1 334 2 161 1 63 1 300 1 
355 2 192 2 239 1 144 1 165 1 357 1 243 1 168 1 71 4 169 5 44 1 314 1 130 1 315 1 25 1 271 1 105 1 172 1 321 2 252 2 50 1 80 1 51 1 87 1 115 1 136 1 183 3 279 1 117 1 185 3 352 4 141 1 62 1 18 5 207 2 354 3 298 1 209 1 334 2 161 1 63 1 300 1 
192 2 239 1 144 1 243 1 149 1 252 2 50 1 51 1 115 1 156 2 352 4 62 1 18 4 354 2 209 1 208 2 63 1 161 1 300 1 122 2 165 1 357 1 71 4 168 1 169 4 130 1 314 1 315 1 271 1 172 1 80 1 87 1 136 1 183 2 279 1 185 2 141 1 233 1 334 2 
335 3 38 2 1 1 39 4 338 1 100 1 4 1 40 1 42 2 147 3 152 1 111 2 155 2 296 1 17 7 61 1 209 1 63 1 214 2 304 6 164 1 125 1 167 1 311 1 69 4 360 1 219 4 131 2 176 1 82 1 327 1 88 1 87 1 226 1 138 7 182 1 89 1 184 2 187 1 232 1 374 2 282 1 93 2 
38 1 143 1 308 1 359 1 360 2 219 2 103 1 131 1 317 1 26 1 176 1 346 1 111 1 82 1 155 3 180 1 225 1 87 1 227 1 330 1 229 1 184 1 118 1 373 1 374 1 61 1 209 1 93 1 63 1 
284 1 38 1 143 1 308 1 360 3 219 2 131 1 317 1 176 3 48 1 346 2 111 1 179 1 348 1 155 6 327 1 30 1 330 1 14 2 229 1 57 1 184 1 373 2 374 1 93 1 162 1 
38 2 143 11 166 1 307 1 66 1 123 1 337 1 308 2 359 1 360 6 219 4 103 2 5 1 131 2 317 11 176 8 346 1 79 1 111 2 155 14 180 1 182 1 14 1 330 1 229 4 184 2 118 2 158 3 373 2 186 3 232 1 374 1 93 2 
335 1 304 1 1 1 38 1 39 1 356 1 359 1 69 1 360 1 42 1 72 1 147 1 219 2 344 1 131 1 46 1 176 1 27 1 111 1 82 1 155 2 12 1 87 2 88 1 138 1 369 1 14 1 182 1 229 1 184 1 120 1 17 1 374 1 232 1 61 1 209 1 93 1 63 2 
335 2 284 1 38 3 1 2 143 7 39 2 42 1 147 2 103 2 5 4 344 2 48 1 346 4 111 3 348 1 155 20 12 2 14 2 118 2 350 2 17 3 120 2 61 1 209 1 63 3 162 1 304 3 124 2 308 3 24 1 359 1 69 2 360 10 72 1 219 6 131 3 317 7 176 10 177 2 179 1 82 1 326 2 180 2 88 1 87 3 30 1 138 3 182 1 330 3 229 7 372 1 184 3 373 8 232 1 374 3 189 1 93 3 236 2 379 1 
155 2 38 1 327 1 143 1 308 1 229 1 184 1 118 1 219 2 373 1 5 1 374 1 131 1 7 1 317 1 176 2 93 1 111 1 
155 2 38 1 180 1 327 1 143 1 330 1 229 1 360 2 184 1 219 2 373 1 374 1 198 1 131 1 317 1 346 1 93 1 111 1 
38 1 143 2 308 1 360 2 219 2 103 1 5 1 131 1 317 2 176 2 346 1 111 1 155 4 180 1 327 1 330 1 229 2 118 1 184 1 373 2 374 1 93 1 
155 2 38 1 143 1 308 1 229 1 4 1 184 1 118 1 219 2 373 1 5 1 374 1 131 1 7 1 317 1 176 2 93 1 111 1 
155 2 38 1 180 1 143 1 330 1 229 1 4 1 360 2 184 1 219 2 373 1 374 1 198 1 131 1 317 1 346 1 93 1 111 1 
38 1 143 2 308 1 4 1 360 2 219 2 103 1 5 1 131 1 317 2 176 2 346 1 111 1 155 4 180 1 330 1 229 2 118 1 184 1 373 2 374 1 93 1 
38 1 143 2 308 1 360 2 219 2 103 1 5 1 131 1 317 2 176 2 346 1 111 1 155 4 180 1 330 1 229 2 118 1 184 1 373 2 374 1 93 1 
335 1 304 1 1 1 38 1 39 1 124 1 69 1 360 1 42 1 147 1 219 2 344 1 131 1 176 1 111 1 155 2 12 1 87 1 138 1 182 1 14 1 184 1 120 1 17 1 374 1 232 1 93 1 63 1 
335 1 304 1 1 1 38 1 39 1 69 1 360 1 42 1 147 1 219 2 131 1 176 1 111 1 155 2 12 1 87 1 228 1 138 1 182 1 14 1 184 1 205 1 16 1 17 1 374 1 232 1 93 1 63 1 
38 1 143 2 308 1 359 1 360 2 219 2 103 1 5 1 131 1 317 2 176 2 346 1 111 1 155 4 180 1 330 1 229 2 118 1 184 1 373 2 374 1 93 1 
304 1 335 1 1 1 38 1 143 2 164 1 39 1 124 1 308 1 69 1 360 2 147 1 219 2 103 1 5 1 344 1 131 1 317 2 176 2 346 1 111 1 177 1 180 1 155 4 12 1 87 1 138 1 330 1 229 2 118 1 184 1 373 2 120 1 17 1 374 1 93 1 63 1 
38 1 143 1 308 1 359 1 360 1 219 2 103 1 5 1 131 1 26 1 317 1 176 2 111 1 254 1 82 1 180 1 155 3 87 1 227 1 330 1 229 1 184 1 118 1 373 1 374 1 61 1 209 1 93 1 63 1 
0 1 264 1 38 2 123 1 308 3 360 10 219 4 103 3 5 3 290 1 131 2 273 2 176 9 109 1 346 3 274 1 79 1 347 2 155 19 180 3 203 1 330 3 139 1 15 1 184 2 118 3 158 1 373 6 186 2 93 2 
264 2 38 2 308 3 339 1 358 1 360 11 219 4 148 1 270 1 103 3 5 1 290 2 131 2 273 3 176 13 109 1 274 1 79 2 347 1 155 24 85 1 180 2 203 1 330 2 58 1 139 1 140 1 184 2 118 3 158 2 373 1 186 2 93 2 
264 2 38 2 123 1 308 4 339 1 358 1 360 17 219 4 270 1 103 4 5 3 290 1 131 2 273 3 176 15 109 1 346 1 274 1 79 3 347 1 85 1 155 32 180 4 203 1 330 4 58 1 139 1 140 1 15 1 184 2 118 4 158 3 373 4 186 4 206 1 93 2 
264 2 38 3 123 1 308 4 339 1 358 1 360 16 219 6 148 1 270 1 103 4 5 3 290 1 131 3 273 4 176 17 109 1 346 2 274 1 79 3 347 1 85 1 155 33 180 3 203 1 330 3 58 1 139 1 140 1 15 1 184 3 118 4 158 3 373 5 186 4 206 1 93 3 
264 1 284 1 38 2 307 2 123 2 308 8 339 1 358 1 360 25 219 4 148 1 270 1 103 7 5 7 290 1 131 2 273 4 176 27 109 1 48 1 346 7 274 1 79 2 347 1 348 1 179 1 85 1 155 52 180 7 203 1 30 1 330 8 58 1 139 1 140 1 184 2 118 7 158 4 373 14 186 4 93 2 162 1 
41 1 193 1 83 1 265 1 145 1 175 1 108 1 323 1 20 1 101 1 
325 1 368 1 
193 1 84 1 83 1 265 1 260 1 175 1 33 1 323 1 101 1 
261 1 291 1 
269 1 217 1 92 1 
193 1 293 2 265 1 83 1 276 1 145 1 329 1 204 1 71 1 101 1 41 1 289 1 352 1 251 1 175 1 50 1 323 1 20 1 
193 1 293 2 265 1 83 1 276 1 145 1 329 1 204 1 71 1 101 1 41 1 289 1 352 1 251 1 175 1 50 1 323 1 20 1 
193 1 293 2 265 1 83 1 276 1 145 1 329 1 204 1 71 1 101 1 41 1 289 1 352 1 251 1 175 1 50 1 323 1 20 1 
261 1 92 1 291 1 
261 1 92 1 291 1 
269 1 217 1 
269 1 217 1 92 1 
343 1 371 1 
193 1 265 1 194 1 71 1 101 1 343 1 363 1 251 1 175 1 323 1 293 1 83 1 112 1 325 1 82 2 256 1 87 2 368 1 329 1 14 1 371 1 91 1 352 1 61 2 209 2 63 2 302 1 
335 1 214 2 304 2 38 1 39 1 98 1 359 1 69 1 360 1 147 1 219 2 199 1 131 1 176 1 152 1 111 1 324 1 255 1 155 2 87 2 226 1 138 2 182 1 184 1 119 1 17 2 374 1 232 1 209 2 93 1 63 2 
335 1 304 1 39 1 138 1 56 1 116 1 69 1 42 1 147 1 187 1 17 1 282 1 173 1 333 1 
154 1 304 1 114 1 138 1 56 1 32 1 128 2 69 1 372 1 246 1 147 1 17 1 222 1 173 1 365 1 210 1 211 1 133 1 
154 1 304 2 114 1 164 1 138 2 56 1 32 1 128 2 69 1 372 1 246 1 147 1 17 2 222 1 173 1 365 1 210 1 211 1 133 1 
154 1 304 1 114 1 138 1 244 1 32 1 128 2 69 1 372 1 246 1 147 1 17 1 222 1 173 1 365 1 210 1 133 1 
126 1 
51 1 165 1 357 1 141 1 315 1 6 1 271 1 161 1 50 1 178 1 
326 1 180 2 122 10 165 5 308 2 266 5 330 2 118 2 361 2 103 2 45 5 271 5 207 5 235 1 50 5 
169 1 192 1 352 1 315 1 50 1 71 1 
64 1 335 1 304 4 192 2 39 1 165 2 286 1 357 2 288 2 69 1 71 3 42 2 169 4 147 1 75 1 271 2 345 1 11 2 51 2 138 4 34 2 187 1 17 4 352 3 141 1 282 1 262 1 238 1 161 2 
315 1 165 1 271 1 6 1 57 1 50 1 178 1 
355 1 192 1 122 1 165 1 357 1 71 1 169 1 44 1 315 1 271 1 321 1 50 2 51 1 352 1 141 1 207 1 161 1 
335 3 192 3 1 3 39 10 286 1 146 1 288 2 42 1 147 3 45 6 103 2 6 1 110 2 292 2 50 8 11 1 201 2 51 4 157 2 118 2 17 3 352 5 207 6 161 4 19 1 304 3 303 2 122 12 164 1 306 1 165 8 266 6 308 2 22 2 357 4 69 4 71 5 313 1 169 5 361 2 315 2 271 9 178 1 366 2 326 2 180 2 136 2 138 3 330 2 231 2 34 1 280 3 141 4 235 2 
122 6 165 4 266 5 308 2 339 1 357 1 358 1 270 1 45 5 103 2 315 1 271 7 79 1 50 4 85 1 180 2 51 1 330 2 58 1 118 2 158 1 186 1 141 1 207 3 161 1 
165 2 308 2 2 1 357 1 71 1 361 2 316 1 105 1 271 2 174 1 48 1 29 1 348 1 82 1 51 1 87 1 115 1 227 1 330 1 352 1 141 1 375 1 61 1 235 1 209 1 63 1 161 1 162 1 
95 1 304 1 335 1 1 1 38 1 39 1 124 1 69 1 360 1 42 1 147 1 219 2 131 1 344 1 111 1 29 1 82 2 155 1 12 1 87 3 227 2 138 1 14 1 184 1 232 1 17 1 120 1 374 1 61 2 209 2 93 1 63 3 
122 4 51 1 165 2 266 2 30 1 357 1 288 1 45 2 141 1 315 2 271 1 207 2 161 1 50 4 11 1 
83 1 343 1 145 1 175 1 349 1 
83 1 175 1 275 1 
83 1 175 1 275 1 
83 1 175 1 275 1 
83 1 76 1 175 1 
83 1 76 1 175 1 
83 1 76 1 175 1 
83 1 175 1 
193 1 101 1 
348 1 38 1 155 10 308 2 330 2 360 5 184 1 219 2 373 5 5 2 131 1 316 1 176 5 274 1 48 2 346 3 93 1 162 2 
38 1 155 2 308 1 184 1 118 1 219 2 373 1 5 1 131 1 176 2 274 1 93 1 
180 1 38 1 155 4 308 1 330 1 360 2 184 1 118 1 219 2 373 2 103 1 5 1 131 1 176 2 346 1 274 1 93 1 
155 3 38 3 360 2 15 1 184 3 219 6 373 2 148 1 5 1 131 3 176 1 274 1 48 1 346 1 9 1 93 3 162 1 
284 1 38 5 123 1 308 5 99 1 310 1 360 18 219 10 148 2 103 3 5 5 131 5 176 16 48 3 274 1 346 7 9 1 79 1 348 2 179 1 155 34 180 3 30 1 137 1 330 5 15 1 184 5 118 3 158 3 373 12 186 4 159 1 93 5 162 3 
38 1 284 1 308 1 360 4 219 2 131 1 176 4 274 1 48 1 346 2 79 1 179 1 348 1 155 8 30 1 330 1 58 1 184 1 158 1 373 2 186 1 93 1 162 1 
284 1 38 2 123 1 308 2 99 1 360 5 219 4 103 1 5 1 131 2 176 6 346 2 48 1 274 1 79 1 348 1 179 1 155 11 30 1 330 1 58 1 184 2 118 1 158 1 373 3 186 2 93 2 162 1 
38 2 308 2 358 1 339 1 99 1 360 7 219 4 103 2 270 1 5 1 131 2 176 6 274 1 79 1 155 13 85 1 180 2 330 2 58 1 184 2 118 2 158 1 373 1 186 1 93 2 
284 1 38 3 308 3 358 1 339 1 99 1 360 7 219 6 148 1 103 2 270 1 5 2 131 3 176 10 48 1 274 1 346 3 79 1 348 1 179 1 155 17 85 1 180 1 30 1 330 2 58 1 184 3 118 2 158 1 373 5 186 1 93 3 162 1 
38 1 284 1 308 1 360 4 219 2 131 1 176 4 274 1 48 1 346 2 79 1 179 1 348 1 155 8 30 1 330 1 58 1 184 1 158 1 373 2 186 1 93 1 162 1 
38 1 308 2 358 1 339 1 360 6 219 2 103 2 270 1 5 1 131 1 176 6 274 1 346 1 79 1 155 12 85 1 180 2 330 2 58 1 184 1 118 2 158 1 373 2 186 1 93 1 
38 3 308 2 358 1 339 1 99 1 360 5 219 6 148 1 103 2 270 1 5 1 131 3 176 7 274 1 79 1 155 12 85 1 180 1 330 1 58 1 184 3 118 2 158 1 373 1 186 1 93 3 
38 3 308 2 339 1 358 1 360 5 219 6 148 1 103 2 270 1 5 2 131 3 176 7 274 1 346 2 79 1 155 12 85 1 180 1 330 1 58 1 15 1 184 3 118 2 158 1 373 4 186 1 93 3 
179 1 348 1 155 7 284 2 308 1 330 1 360 4 373 6 5 3 176 3 48 3 346 3 162 3 
38 3 308 2 358 1 339 1 360 5 219 6 148 1 103 2 270 1 5 1 131 3 176 7 274 1 79 1 155 12 85 1 180 1 330 1 58 1 15 1 184 3 118 2 158 1 373 1 186 1 93 3 
348 1 179 1 155 8 38 2 284 1 308 1 30 1 330 1 360 4 184 2 219 4 373 3 148 1 5 1 131 2 176 4 346 2 48 1 93 2 162 1 
179 1 348 1 284 1 155 6 308 1 30 1 330 1 57 1 360 3 373 2 176 3 48 1 346 2 162 1 
180 1 38 1 155 4 308 1 330 1 99 1 360 2 184 1 118 1 219 2 373 2 103 1 5 1 131 1 176 2 346 1 93 1 
180 1 155 7 123 1 308 1 330 1 360 4 118 1 158 1 373 2 186 2 103 1 5 1 176 3 346 1 79 1 
284 1 38 2 307 1 123 1 308 3 337 1 360 12 219 4 103 2 148 2 5 4 131 2 176 11 48 2 346 5 9 1 348 1 179 1 155 23 180 2 30 1 330 3 118 2 184 2 158 2 373 9 186 2 93 2 162 2 
155 1 186 1 360 1 
158 1 155 1 176 1 
38 1 326 1 155 6 180 1 308 1 99 1 330 1 360 3 184 1 118 1 219 2 373 3 103 1 5 1 131 1 176 3 346 2 93 1 
38 1 308 2 358 1 339 1 360 6 219 2 103 2 270 1 5 1 131 1 176 6 274 1 346 1 79 1 155 12 85 1 180 2 330 2 58 1 184 1 118 2 158 1 373 2 186 1 93 1 
348 1 155 6 308 1 330 1 360 3 373 2 5 1 176 3 48 1 346 1 162 1 
179 1 284 1 155 3 38 1 360 2 184 1 219 2 373 2 148 1 5 1 131 1 176 1 346 1 48 1 9 1 93 1 162 1 
258 1 87 1 60 1 209 1 14 1 63 1 279 1 
240 1 87 1 278 1 14 1 279 1 102 1 258 1 60 1 209 1 10 1 49 1 63 1 
163 1 304 4 335 1 164 1 39 1 138 4 69 1 42 1 147 1 331 1 187 1 17 4 282 1 
304 2 335 1 1 1 39 1 125 1 167 1 338 1 138 2 311 1 69 2 34 1 147 1 17 2 379 1 
42 1 147 1 304 1 114 1 17 1 365 1 138 1 32 1 128 1 69 1 
304 2 335 1 164 1 39 1 226 1 138 2 98 1 69 1 372 1 147 1 17 2 
163 1 304 4 335 2 164 1 39 3 226 1 138 5 69 2 100 1 89 1 42 1 34 1 147 2 187 1 17 5 282 1 
163 1 304 4 335 2 164 1 39 3 226 1 138 5 370 1 69 2 100 1 42 1 34 1 147 2 187 1 17 5 282 1 
42 1 147 1 335 1 304 1 187 1 17 1 39 1 282 1 138 1 57 1 69 1 
335 1 304 1 82 1 1 1 12 1 88 1 87 2 39 1 138 1 14 1 69 1 42 1 147 1 17 1 120 1 61 1 209 1 63 2 
335 2 304 1 82 1 1 2 12 1 144 1 88 1 87 2 39 3 115 1 157 1 138 1 14 1 69 1 231 1 34 1 147 1 17 1 120 1 61 2 172 1 209 2 63 2 
304 2 335 2 1 2 144 1 39 3 69 1 147 1 172 1 82 1 12 1 87 2 88 1 115 1 157 1 138 2 14 1 231 1 34 1 331 1 205 1 17 2 61 2 209 2 63 2 
304 3 335 1 215 1 1 1 39 4 69 1 71 2 169 1 42 1 147 1 315 1 50 1 201 1 136 1 157 1 138 3 231 1 34 1 331 1 35 1 280 1 17 3 352 2 
335 1 304 3 1 1 39 4 136 1 157 1 138 3 69 1 231 1 71 2 42 1 169 1 34 1 147 1 331 1 352 2 17 3 280 1 315 1 292 1 50 1 201 1 
147 1 304 1 17 1 296 1 138 1 69 1 
214 1 335 2 304 5 1 1 164 1 39 3 306 1 338 1 311 1 69 3 100 1 40 1 42 2 147 2 200 1 226 1 296 1 138 6 89 1 17 6 
335 1 304 1 284 1 1 1 38 2 143 1 164 1 39 1 124 1 308 1 359 1 69 1 360 3 147 1 219 4 131 2 344 1 317 1 176 3 346 2 48 1 111 2 177 1 348 1 179 1 82 1 155 6 12 1 87 2 88 1 30 1 138 1 14 2 330 1 229 1 184 2 119 1 373 2 350 1 374 2 17 1 120 1 61 1 209 1 93 2 63 2 162 1 
304 1 303 1 192 1 165 1 39 2 286 1 22 1 357 2 71 3 42 1 169 2 315 1 363 1 271 1 6 1 292 1 50 1 178 1 201 1 366 1 51 2 136 1 138 1 352 3 17 1 280 1 141 2 161 2 
304 2 335 1 1 1 164 1 306 1 39 2 296 1 138 2 69 2 147 1 17 2 19 1 201 1 
335 1 304 1 82 1 1 1 12 1 88 1 87 2 39 1 138 1 14 1 69 1 42 1 147 1 205 1 17 1 61 1 209 1 63 2 
304 1 335 1 1 1 306 1 39 1 338 1 138 1 311 1 69 2 34 1 147 1 17 1 200 1 
332 1 319 1 151 1 14 1 190 1 
121 1 144 1 136 1 115 1 14 1 242 1 71 2 341 1 104 1 352 2 315 1 363 1 332 2 62 1 172 1 151 1 319 2 190 2 50 1 
255 1 87 1 199 1 319 1 151 1 209 1 190 1 63 1 324 1 
121 1 104 1 151 1 
54 1 53 1 277 1 376 1 78 1 378 1 257 1 28 1 
263 1 216 1 336 1 54 2 294 2 53 4 277 3 328 1 257 1 249 1 376 4 132 1 378 2 28 1 
53 2 294 1 54 1 277 1 257 1 245 1 129 1 376 2 377 1 78 1 378 1 28 1 
336 1 216 2 53 3 54 1 277 1 328 2 257 1 68 1 376 3 78 1 378 1 28 1 
277 2 106 2 55 1 36 1 
53 1 367 1 376 1 78 1 257 1 28 1 
54 1 294 1 53 2 277 1 376 2 78 1 378 1 257 1 301 1 28 1 
241 1 
54 1 53 1 277 1 376 1 78 1 378 1 257 1 28 1 
54 1 277 1 378 1 57 1 
54 1 53 1 277 1 376 1 378 1 257 1 28 1 
220 1 295 1 376 1 
336 1 216 1 53 3 54 1 277 1 328 2 218 1 257 1 376 3 78 1 378 1 28 1 
54 1 294 1 53 2 277 1 376 2 8 1 378 1 257 1 28 1 
53 1 277 1 257 1 32 1 128 1 340 1 249 1 222 1 376 1 78 1 28 1 
53 1 277 1 376 1 78 1 378 1 257 1 28 1 
54 1 53 1 376 1 78 1 378 2 257 1 28 1 
53 2 277 1 257 2 59 1 188 1 376 2 318 1 78 1 378 1 28 2 
263 1 54 1 53 3 294 2 277 2 257 1 312 1 249 1 376 3 78 1 378 1 28 1 301 1 
154 1 114 1 54 1 53 2 294 1 277 1 257 1 32 1 128 2 353 1 222 1 376 2 78 1 378 1 28 1 
213 1 263 1 54 1 53 4 294 2 277 2 257 2 249 1 376 4 78 1 8 1 378 1 28 2 
294 1 53 3 54 1 277 1 328 1 257 1 376 3 78 1 378 1 28 1 301 1 
263 1 249 1 277 1 132 1 
277 1 378 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 314 (227,267) (227,267) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 314 (227,267) (227,267) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 314 (227,267) (227,267) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 314 (227,267) (227,267) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | ASSIGN | 822 | = null
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 5921 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
205 1 31 1 345 1 87 1 267 1 338 1 279 1 227 1 314 1 243 1 201 1 216 1 131 1 
205 1 31 1 345 1 87 1 267 1 338 1 279 1 227 1 314 1 243 1 201 1 216 1 131 1 
205 1 31 1 345 1 87 1 267 1 338 1 279 1 227 1 314 1 243 1 201 1 216 1 131 1 
205 1 31 1 345 1 87 1 267 1 338 1 279 1 227 1 314 1 243 1 201 1 216 1 131 1 
205 1 232 2 31 4 309 1 286 1 102 1 104 1 338 1 279 4 356 3 163 1 37 2 80 1 314 1 201 1 216 1 379 3 131 1 
205 1 362 1 234 1 31 2 345 1 102 1 375 1 368 1 279 2 80 1 314 1 243 1 201 1 216 1 379 1 131 1 
205 2 31 3 345 1 101 1 102 1 279 3 356 1 163 1 37 1 80 1 216 2 379 2 131 1 
345 1 31 9 121 1 279 9 37 4 80 1 82 1 201 1 131 1 205 2 232 2 309 1 286 1 101 1 102 1 374 1 104 1 338 1 356 7 163 3 314 1 216 2 379 5 27 1 
345 1 31 9 121 1 279 9 37 4 80 1 82 1 201 1 131 1 205 2 232 2 309 1 286 1 101 1 102 1 374 1 104 1 338 1 356 7 163 3 314 1 216 2 379 5 27 1 
133 1 334 1 310 1 
235 1 334 1 184 2 
0 2 172 1 139 2 171 1 141 2 277 2 361 2 326 2 
0 3 28 1 149 1 298 1 29 1 190 1 2 2 277 2 34 1 304 1 226 2 255 1 326 3 256 2 172 1 170 1 171 1 258 1 198 2 62 1 204 1 264 1 372 1 135 2 241 1 376 1 181 1 89 1 107 1 139 2 182 1 141 2 217 1 167 1 245 1 361 2 274 1 
0 1 344 1 139 1 171 1 141 1 277 1 302 1 25 1 361 1 326 1 
0 1 64 1 247 1 133 1 334 1 57 1 302 1 75 1 265 1 326 1 280 1 313 1 139 1 9 1 
64 2 0 1 247 2 133 1 334 1 277 1 302 1 75 1 265 1 326 1 313 1 139 1 9 1 141 1 361 1 
64 1 247 1 143 1 290 1 5 1 
64 2 247 2 133 1 334 1 179 1 290 1 15 1 5 1 
64 1 247 1 5 1 
64 1 0 1 247 1 344 1 4 1 277 1 302 1 290 1 326 1 171 1 139 1 141 1 25 1 361 1 
334 1 
330 1 64 2 247 2 133 1 334 1 290 1 15 1 5 1 
64 5 247 5 275 1 117 1 133 1 250 2 365 2 334 1 253 2 290 2 15 1 5 2 209 1 269 1 21 1 230 1 43 1 360 1 380 1 
0 2 298 1 149 1 29 1 233 1 264 1 2 1 277 1 135 1 304 1 226 1 376 1 326 2 89 1 212 1 170 1 139 1 8 1 141 1 274 1 
172 1 310 1 
0 2 277 1 326 2 137 1 139 2 172 2 141 1 153 1 361 1 
349 1 212 1 152 1 
0 1 149 1 298 1 29 1 264 1 2 1 135 1 304 1 35 1 226 1 376 1 326 1 89 1 172 1 170 1 274 1 
0 5 233 1 86 1 277 4 326 5 137 1 280 1 257 1 139 5 172 1 8 2 141 4 92 1 361 1 
0 2 164 1 139 2 141 2 277 2 302 1 25 1 326 2 
0 3 172 1 139 3 8 1 141 3 277 3 361 1 326 3 
0 1 139 1 141 1 277 1 302 1 25 1 326 1 
0 1 139 1 141 1 277 1 302 1 153 1 361 1 326 1 137 1 
0 4 28 1 298 1 149 1 247 1 29 1 191 1 2 1 277 3 34 1 302 1 75 1 304 1 226 1 255 1 326 4 256 1 172 1 170 1 171 1 8 1 258 1 198 2 9 1 62 1 64 1 233 1 264 1 134 1 372 1 135 1 265 1 241 1 376 1 137 1 89 1 313 1 139 3 182 1 141 3 217 1 167 1 361 2 274 1 
280 1 0 2 172 1 257 1 139 2 8 1 141 1 277 1 326 2 
64 1 0 3 247 1 233 1 248 1 134 1 334 1 277 3 302 1 75 1 265 1 137 1 326 3 313 1 139 3 8 2 9 1 141 3 361 1 
0 2 277 2 137 1 326 2 139 2 212 1 8 1 152 1 141 2 361 1 
0 1 149 1 298 1 29 1 264 1 2 1 135 1 304 1 226 1 376 1 326 1 89 1 172 1 170 1 274 1 
0 1 298 1 29 1 264 1 2 1 135 1 122 1 226 1 376 1 326 1 89 1 172 1 170 1 215 1 274 1 
223 1 34 1 224 1 255 1 256 4 349 2 258 1 198 2 152 2 62 1 14 1 333 1 159 1 372 2 266 1 337 1 241 1 162 1 67 1 138 1 212 2 109 1 167 1 245 2 
0 1 139 1 164 1 141 1 277 1 302 1 265 1 326 1 
332 1 194 1 
332 1 194 1 
213 1 110 1 
213 1 110 1 
213 1 110 1 
332 1 194 1 84 1 
332 1 194 1 84 1 
332 1 194 1 315 1 
332 2 213 1 110 1 56 1 296 1 194 2 
332 1 194 1 84 1 
332 1 91 1 194 1 
332 1 91 1 194 1 
332 1 91 1 194 1 
0 2 247 1 168 1 249 1 276 1 277 2 74 1 193 1 192 1 194 1 197 1 6 1 326 2 40 1 79 1 172 1 63 1 332 1 64 1 106 1 139 2 141 2 112 1 315 1 
331 1 332 2 64 2 1 1 247 2 168 1 276 3 334 1 194 2 197 2 254 2 6 2 292 1 90 1 296 1 283 1 112 2 72 1 63 2 
314 1 201 1 338 1 
314 1 201 1 375 1 
252 1 201 3 236 1 366 1 338 2 375 1 
201 2 236 1 366 1 338 1 375 1 76 1 
201 2 236 2 366 1 338 1 375 1 
247 5 250 1 365 1 74 1 193 1 192 1 224 1 253 1 150 1 5 1 78 1 95 1 97 1 83 1 43 3 284 2 308 2 64 5 133 1 235 1 334 2 337 1 290 4 15 1 209 2 138 1 109 1 144 1 219 2 184 3 380 1 186 1 
247 9 275 1 250 2 365 2 74 4 224 3 253 2 5 6 39 1 60 1 42 1 95 2 97 1 12 1 43 8 329 1 284 6 308 6 64 9 133 1 235 3 334 5 239 1 337 3 290 7 15 1 209 6 138 3 293 5 109 3 143 5 144 3 184 9 380 1 186 2 
247 3 275 1 250 1 365 1 74 1 224 1 253 1 78 1 95 1 83 1 43 3 284 2 308 2 64 3 133 1 235 2 334 3 290 2 337 1 209 2 138 1 109 1 144 1 219 1 184 4 186 1 
247 4 275 1 250 1 365 1 74 2 224 2 253 1 78 1 42 1 95 1 83 1 43 5 329 1 284 4 308 4 64 4 133 1 235 3 334 4 239 1 290 3 337 2 209 4 138 2 109 2 144 2 219 2 184 7 186 1 
30 1 310 1 274 1 
183 1 274 1 
145 1 
29 1 170 1 274 1 
303 1 274 1 
29 1 274 1 
30 2 29 1 170 1 261 1 336 1 274 3 
372 3 206 1 266 4 337 1 355 1 324 1 162 3 138 1 256 5 81 1 48 1 294 1 199 1 50 1 306 2 245 2 260 1 
206 1 372 4 266 4 337 1 355 1 324 1 162 3 138 1 81 1 256 6 48 1 294 1 199 1 50 1 306 2 245 2 260 1 
300 1 372 3 206 1 266 4 337 1 355 1 324 1 162 3 138 1 256 5 81 1 48 1 294 1 199 1 50 1 306 2 245 2 260 1 
55 3 34 1 224 2 324 1 256 35 81 2 199 3 258 1 198 2 62 1 306 3 260 1 231 1 372 19 206 2 266 13 337 5 355 1 241 1 18 1 208 3 291 1 162 8 138 5 48 3 357 1 294 2 109 2 50 5 51 1 144 2 146 1 245 16 187 1 
34 2 256 8 81 1 198 4 258 2 61 1 199 1 62 2 306 2 260 1 372 5 206 1 266 5 337 1 241 2 355 1 162 4 138 1 48 1 71 1 294 1 50 1 245 3 187 1 
298 1 31 2 345 1 251 1 252 1 2 1 278 1 226 1 279 2 80 1 201 2 13 1 203 1 131 1 155 1 205 1 177 1 264 1 102 1 237 1 135 1 338 1 375 1 356 1 211 1 314 1 108 1 142 1 216 1 379 1 
298 1 31 3 345 1 251 1 252 1 2 1 278 1 226 1 279 3 151 1 80 1 201 2 176 1 203 1 155 1 205 1 177 1 264 1 102 1 237 1 135 1 338 1 375 1 356 2 211 1 314 1 214 1 142 1 216 1 379 1 
298 1 345 1 31 2 251 1 252 1 2 1 278 1 226 1 279 2 151 1 80 1 201 2 177 1 264 1 102 1 237 1 135 1 375 1 338 1 356 2 211 1 314 1 214 1 142 1 379 1 
298 1 31 1 345 2 29 1 251 2 2 1 278 2 226 1 305 1 279 1 176 1 259 1 205 1 264 1 135 1 17 1 340 1 339 1 89 1 211 2 216 1 218 1 274 1 
298 1 31 1 345 1 251 1 252 1 2 1 278 1 226 1 279 1 201 2 13 1 203 1 131 1 155 1 205 1 177 1 264 1 237 1 135 1 338 1 375 1 211 1 314 1 214 1 142 1 216 1 
26 1 
0 1 246 1 247 5 298 1 299 2 250 1 2 2 57 1 253 1 302 1 5 6 95 1 11 2 10 1 9 1 351 2 307 2 64 5 264 1 265 1 353 1 17 1 15 3 209 2 313 1 166 1 270 1 359 4 274 1 29 1 116 1 222 2 119 1 365 1 120 1 75 1 226 2 326 1 280 1 127 1 282 2 129 2 43 2 85 1 133 1 235 2 334 2 238 1 135 2 178 1 339 1 89 2 139 1 184 2 380 1 
0 1 246 1 247 3 116 1 57 1 302 1 75 1 5 2 326 1 280 1 9 1 307 1 64 3 330 1 178 1 265 1 15 1 313 1 139 1 166 1 270 1 359 2 
0 1 246 1 247 3 116 1 57 1 302 1 75 1 5 1 326 1 280 1 9 1 351 1 64 3 330 1 133 1 334 1 178 1 265 1 15 1 313 1 139 1 166 1 270 1 359 3 
0 1 246 1 247 3 116 1 57 1 302 1 75 1 5 2 326 1 280 1 9 1 11 1 351 1 307 1 330 1 64 3 133 1 334 1 178 1 265 1 15 1 313 1 139 1 166 1 270 1 359 3 
246 1 0 1 247 5 299 2 250 1 57 1 302 1 253 1 5 7 11 4 9 1 351 4 307 4 64 5 65 1 262 1 265 1 160 1 353 1 15 3 16 1 209 1 313 1 166 1 270 1 359 6 113 1 116 1 222 2 365 1 75 1 326 1 280 1 282 2 129 2 43 1 330 1 133 5 235 2 334 5 238 1 178 1 139 1 380 1 
246 1 0 1 247 4 299 2 250 1 57 1 302 1 253 1 5 4 9 1 11 2 351 2 307 2 64 4 265 1 353 1 15 2 209 1 313 1 166 1 270 1 359 4 116 1 222 2 365 1 75 1 326 1 280 1 282 2 129 2 43 1 85 1 133 1 235 2 334 2 238 1 178 1 139 1 380 1 184 2 
0 1 246 1 247 4 299 2 116 1 222 2 250 1 365 1 57 1 302 1 253 1 75 1 5 4 326 1 280 1 11 2 9 1 282 2 351 2 129 2 43 1 307 2 64 4 262 1 133 1 235 2 334 1 238 1 178 1 265 1 353 1 15 2 16 1 209 1 313 1 139 1 166 1 270 1 359 4 113 1 380 1 
0 1 246 1 247 4 299 2 116 1 222 2 250 1 365 1 57 1 302 1 253 1 75 1 5 4 326 1 280 1 11 2 9 1 282 2 351 2 129 2 43 1 307 2 64 4 262 1 133 1 235 2 334 1 238 1 178 1 265 1 353 1 15 2 16 1 209 1 313 1 139 1 166 1 270 1 359 4 113 1 380 1 
0 1 246 1 247 4 299 2 116 1 250 1 363 2 365 1 57 1 302 1 253 1 75 1 5 4 326 1 281 2 280 1 7 1 11 2 9 1 351 2 129 2 128 1 43 1 307 2 64 4 133 1 334 1 238 1 373 1 178 1 265 1 15 2 209 1 313 1 139 1 166 1 270 1 359 4 113 1 184 2 380 1 
0 1 246 1 247 4 299 2 116 1 222 2 250 1 365 1 57 1 253 1 302 1 75 1 5 5 326 1 280 1 9 1 11 3 282 2 129 2 351 3 43 1 307 3 64 4 262 1 133 1 235 2 334 1 238 1 178 1 265 1 353 1 160 1 15 2 16 1 209 1 313 1 139 1 166 1 270 1 359 5 113 1 380 1 
0 1 246 1 247 4 299 2 116 1 222 2 250 1 365 1 57 1 253 1 302 1 75 1 5 5 326 1 280 1 9 1 11 3 282 2 129 2 351 3 43 1 307 3 64 4 262 1 133 1 235 2 334 1 238 1 178 1 265 1 353 1 160 1 15 2 16 1 209 1 313 1 139 1 166 1 270 1 359 5 113 1 380 1 
246 1 0 1 247 4 299 2 250 1 57 1 302 1 253 1 5 4 9 1 11 2 351 2 307 2 64 4 265 1 15 2 209 1 313 1 166 1 270 1 359 4 116 1 363 2 365 1 75 1 326 1 280 1 281 2 129 2 43 1 85 1 133 1 334 1 238 1 373 1 178 1 139 1 380 1 184 2 
34 1 255 1 256 5 349 1 172 1 258 1 198 2 199 1 152 1 62 1 306 1 260 1 333 1 310 1 372 3 266 2 337 1 355 1 241 1 162 2 138 1 212 1 48 1 294 1 167 1 245 2 
28 1 55 3 188 1 34 2 224 1 255 2 370 1 256 14 349 11 172 1 174 1 258 2 198 4 152 4 62 2 45 1 157 1 372 6 266 2 337 2 241 2 208 3 291 1 162 1 107 1 138 1 212 11 140 1 109 2 50 1 144 2 167 1 245 8 
0 2 114 1 298 1 149 1 28 1 29 1 2 1 277 1 34 1 304 1 226 1 35 1 255 1 326 2 256 2 172 1 170 1 8 1 198 2 258 1 152 1 62 1 233 1 264 1 135 1 288 1 372 1 241 1 376 1 89 1 107 1 139 1 140 1 141 1 378 1 167 1 245 1 274 1 
0 3 148 2 149 2 298 2 2 3 195 1 304 2 255 3 256 19 349 7 8 1 199 1 258 3 198 6 152 7 62 3 306 1 260 1 264 2 266 8 355 1 162 4 107 1 20 2 212 7 214 1 70 2 109 2 217 2 167 3 317 1 274 2 28 1 29 2 277 1 34 3 224 2 226 3 323 1 326 3 172 1 170 2 233 1 285 2 372 10 135 3 337 3 241 3 376 2 89 1 138 3 48 1 139 1 140 1 294 1 141 1 50 4 144 2 245 9 
0 1 298 2 28 1 29 2 118 1 2 8 277 1 34 2 226 8 255 2 326 1 256 2 8 1 258 2 198 4 62 2 130 1 204 2 333 1 264 2 311 1 88 1 135 7 372 1 241 2 17 1 339 1 161 1 89 2 107 1 139 1 69 1 214 1 108 1 141 1 167 2 244 1 245 1 274 3 
0 1 277 1 34 1 224 1 255 1 326 1 349 1 256 3 258 1 198 2 152 1 62 1 372 2 266 1 337 1 241 1 162 1 137 1 341 1 138 1 212 1 139 1 140 1 109 1 141 1 144 1 167 1 245 1 361 1 
333 1 34 1 266 1 337 1 241 1 255 1 67 1 349 1 256 2 212 1 109 1 198 2 258 1 50 1 152 1 62 1 167 1 245 2 
333 1 159 1 34 1 224 1 372 2 266 1 241 1 255 1 162 1 349 1 256 2 138 1 212 1 198 2 258 1 152 1 62 1 167 1 
34 1 224 1 255 1 256 4 349 2 258 1 198 2 152 2 62 1 333 1 372 2 266 2 337 1 241 1 162 1 138 1 212 2 109 1 50 1 144 1 167 1 245 2 
34 1 266 1 337 1 241 1 255 1 67 1 349 1 256 2 212 1 109 1 198 2 258 1 50 1 152 1 62 1 167 1 244 1 245 2 
159 1 34 1 224 1 372 2 266 1 241 1 255 1 162 1 349 1 256 2 138 1 212 1 198 2 258 1 152 1 62 1 167 1 244 1 
34 1 224 1 255 1 256 4 349 2 258 1 198 2 152 2 62 1 372 2 266 2 337 1 241 1 162 1 138 1 212 2 109 1 50 1 144 1 167 1 245 2 244 1 
34 1 372 2 224 1 266 2 337 1 241 1 255 1 162 1 138 1 349 2 256 4 212 2 109 1 198 2 258 1 50 1 152 2 62 1 144 1 167 1 245 2 
0 1 298 1 149 1 28 1 29 1 2 1 34 1 304 1 226 1 255 1 326 1 256 2 172 1 170 1 198 2 258 1 62 1 264 1 135 1 372 1 241 1 376 1 89 1 107 1 217 1 167 1 245 1 274 1 
0 1 298 1 28 1 29 1 2 1 34 1 122 1 226 1 255 1 326 1 256 2 172 1 170 1 198 2 258 1 62 1 264 1 135 1 372 1 241 1 376 1 89 1 107 1 215 1 167 1 245 1 53 1 274 1 
34 1 224 1 255 1 256 4 349 2 258 1 198 2 152 2 62 1 372 2 266 2 337 1 241 1 162 1 138 1 212 2 140 1 109 1 50 1 144 1 167 1 245 2 
0 1 298 1 149 1 29 1 2 1 34 1 224 1 304 1 226 1 255 1 326 1 349 2 256 4 170 1 198 2 258 1 152 2 62 1 264 1 285 1 372 2 135 1 266 2 337 1 241 1 376 1 162 1 138 1 212 2 109 1 108 1 50 1 144 1 217 1 167 1 245 2 274 1 
0 1 277 1 34 1 224 1 255 1 326 1 256 3 349 1 258 1 198 2 152 1 62 1 372 1 266 1 337 1 241 1 137 1 138 1 139 1 212 1 140 1 109 1 50 1 141 1 144 1 52 1 167 1 245 2 361 1 
55 2 3 2 364 1 34 2 224 3 370 1 327 1 256 19 258 2 198 4 62 2 202 1 156 1 335 2 372 10 266 6 312 1 337 3 241 2 208 1 291 1 162 3 138 3 71 1 109 3 111 1 50 3 272 1 144 3 245 9 
55 2 3 4 364 1 34 3 224 2 327 2 256 26 258 3 198 6 228 1 62 3 156 1 335 1 287 1 372 12 266 4 312 2 337 3 241 3 208 2 291 2 162 2 66 1 68 1 138 2 47 1 71 1 109 3 111 1 50 2 144 3 297 1 245 14 187 2 
55 4 3 4 256 40 198 6 258 3 199 1 62 3 306 1 202 1 260 1 156 1 158 1 266 9 312 1 355 1 208 3 162 5 66 1 68 1 71 1 109 4 111 1 364 1 34 3 224 4 370 1 327 2 228 1 335 1 287 1 372 21 337 5 241 3 291 3 138 5 47 1 48 1 294 1 50 4 144 4 297 1 245 19 187 1 
55 4 3 4 364 1 34 4 224 3 370 1 327 2 256 38 199 1 228 1 258 4 198 8 62 4 306 1 202 1 260 1 156 1 158 1 335 1 287 1 372 19 266 8 312 1 337 5 355 1 241 4 208 3 291 3 66 1 162 5 68 1 138 4 48 1 47 1 71 1 294 1 109 4 111 1 50 3 144 4 297 1 245 19 187 2 
55 4 3 4 364 1 34 2 224 7 370 2 327 1 256 52 199 1 228 1 258 2 198 4 62 2 306 1 260 1 156 1 157 2 335 1 287 1 372 26 266 15 312 1 337 8 355 1 241 2 208 4 291 2 66 1 162 8 68 1 138 8 48 1 47 1 71 1 294 1 109 7 111 1 50 7 144 7 297 1 245 26 187 1 
332 1 1 1 94 1 296 1 283 1 194 1 112 1 63 1 197 1 6 1 
315 1 106 1 
332 1 318 1 33 1 103 1 194 1 112 1 63 1 197 1 6 1 
84 1 185 1 
56 1 98 1 91 1 
331 1 64 1 332 1 1 1 247 1 168 1 276 2 334 1 194 1 197 1 254 1 6 1 292 1 90 1 296 1 283 1 112 1 63 1 
331 1 64 1 332 1 1 1 247 1 168 1 276 2 334 1 194 1 197 1 254 1 6 1 292 1 90 1 296 1 283 1 112 1 63 1 
331 1 64 1 332 1 1 1 247 1 168 1 276 2 334 1 194 1 197 1 254 1 6 1 292 1 90 1 296 1 283 1 112 1 63 1 
56 1 84 1 185 1 
56 1 84 1 185 1 
98 1 91 1 
56 1 98 1 91 1 
79 1 249 1 
0 2 247 1 249 1 276 1 74 1 277 2 193 1 192 1 194 1 197 1 254 1 6 1 326 2 40 1 79 1 172 1 200 1 63 1 64 1 332 1 290 1 106 1 139 2 90 1 141 2 112 1 315 1 
0 2 298 1 28 1 29 1 2 2 34 1 123 1 226 2 255 1 36 1 326 2 256 2 328 1 198 2 258 1 62 1 204 2 264 1 372 1 135 2 241 1 354 1 161 1 268 1 107 1 139 2 69 1 140 1 167 1 245 1 274 1 
298 1 264 1 177 1 252 1 2 2 237 1 135 2 322 1 338 1 375 1 226 2 211 1 314 1 214 1 173 1 108 1 201 2 220 1 155 1 
298 1 177 1 264 1 252 1 2 1 237 1 135 1 348 1 338 1 375 1 226 1 211 1 314 1 214 1 201 2 220 1 155 1 
298 1 29 1 264 1 2 1 135 1 226 1 17 1 339 1 89 1 211 1 173 1 23 1 259 1 274 1 
298 1 264 1 177 1 252 1 2 1 237 1 135 1 322 1 338 1 375 1 226 1 211 1 314 1 214 1 173 1 201 2 220 1 155 1 
321 1 
269 1 133 1 334 1 310 1 230 1 43 1 209 1 
247 1 222 1 250 1 365 1 253 1 5 1 282 1 43 1 64 1 133 1 235 1 334 2 353 1 15 1 209 1 380 1 184 1 
298 3 247 5 250 4 2 3 346 1 253 4 303 2 5 5 95 2 350 2 308 6 64 5 264 4 15 3 210 2 209 8 269 1 313 2 165 2 70 2 108 1 109 2 274 10 221 2 29 3 30 2 32 1 365 4 224 2 169 1 226 3 369 2 124 2 170 3 127 1 175 1 230 1 43 9 284 6 371 1 133 2 235 6 336 1 334 8 135 3 337 2 180 2 89 1 138 2 144 2 377 2 183 3 380 4 184 12 
247 1 55 1 250 2 365 2 253 2 224 2 5 1 125 1 95 1 127 1 96 1 228 1 43 8 284 5 308 5 64 1 133 2 235 3 334 5 287 1 337 2 15 1 180 1 208 1 291 1 209 5 66 1 138 2 47 1 165 2 109 2 144 2 297 1 184 6 380 2 
0 1 247 1 344 1 250 1 365 1 4 1 277 1 302 1 253 1 326 1 171 1 199 1 43 2 64 1 337 2 16 1 180 1 18 1 209 2 138 1 48 1 139 1 165 2 294 1 141 1 25 1 380 1 361 1 
250 1 133 1 365 1 334 1 253 1 209 1 269 1 230 1 43 1 380 1 
235 5 334 5 224 2 337 2 180 1 209 5 138 2 70 1 165 2 109 2 144 2 43 5 284 5 184 10 308 5 
64 1 247 1 133 1 334 1 15 1 5 1 
298 1 247 3 275 1 29 1 73 1 250 2 365 2 2 4 120 1 253 2 169 1 226 4 5 4 59 1 95 2 10 1 127 2 175 2 43 2 64 3 264 1 135 4 15 2 17 1 339 1 89 2 209 2 380 1 274 1 
0 3 28 1 149 1 298 1 29 1 2 1 277 2 34 1 304 1 226 1 255 1 326 3 256 1 172 1 171 1 170 1 258 1 198 2 62 1 264 1 372 1 135 1 241 1 376 1 89 1 139 2 182 1 141 2 217 1 167 1 361 2 274 1 
250 1 133 1 235 2 365 1 334 3 253 1 209 1 165 1 95 1 127 1 306 1 43 2 184 4 284 2 380 1 308 2 
319 1 63 1 197 1 
319 1 63 1 197 1 
1 1 41 1 249 1 63 1 197 1 
319 1 63 1 197 1 
271 1 63 1 197 1 
271 1 63 1 197 1 
271 1 63 1 197 1 
63 1 197 1 
332 1 194 1 
34 2 372 4 266 3 337 1 241 2 355 1 162 2 138 1 256 7 48 1 294 1 198 4 258 2 199 1 50 1 62 2 306 1 245 3 187 1 260 1 
310 1 372 3 266 2 337 1 355 1 162 2 256 5 138 1 48 1 294 1 199 1 306 1 245 2 260 1 
34 1 372 2 224 1 266 2 337 1 241 1 325 1 162 1 138 1 256 4 109 1 198 2 258 1 50 1 62 1 144 1 245 2 
55 2 224 1 372 4 266 2 337 1 208 1 291 1 162 1 370 1 138 1 256 7 109 1 50 1 144 1 245 3 
55 2 34 2 224 2 370 1 256 22 199 2 174 1 198 4 258 2 62 2 306 1 260 1 157 1 372 12 266 9 337 3 355 1 241 2 208 2 162 5 138 3 48 2 49 1 294 1 109 2 50 4 144 2 245 10 187 2 
256 1 55 1 372 1 
256 1 245 1 208 1 
34 1 372 3 224 1 266 3 337 1 241 1 325 1 162 2 256 6 138 1 70 1 109 1 258 1 198 2 50 1 62 1 144 1 245 3 
55 1 34 1 224 2 256 12 258 1 198 2 228 1 62 1 287 1 372 6 266 2 337 2 241 1 208 1 291 1 66 1 162 1 138 2 47 1 71 1 109 2 50 1 144 2 297 1 245 6 
372 3 266 2 337 1 162 1 256 6 138 1 48 1 294 1 199 1 50 1 245 3 
34 1 372 2 266 2 355 1 241 1 162 1 256 3 48 1 49 1 199 1 198 2 258 1 50 1 62 1 245 1 187 1 260 1 
34 1 372 5 266 5 337 2 241 1 18 1 162 3 256 10 138 2 48 2 71 1 294 1 258 1 198 2 199 2 50 2 62 1 245 5 
34 1 266 1 337 1 241 1 256 2 71 1 109 1 198 2 258 1 50 1 62 1 245 2 
34 1 372 2 224 1 266 2 337 1 241 1 162 1 138 1 256 4 71 1 109 1 198 2 258 1 50 1 62 1 144 1 245 2 
34 3 372 2 266 2 241 3 162 1 256 3 48 1 49 1 71 1 198 6 258 3 199 1 50 1 62 3 202 1 245 1 187 1 
55 4 34 5 224 3 325 1 370 1 256 33 199 3 258 5 198 10 62 5 306 1 202 1 260 1 372 18 266 12 337 5 355 1 241 5 208 3 291 1 162 7 138 5 48 3 49 1 357 1 71 1 294 2 109 3 50 5 51 1 144 3 146 1 245 15 187 2 
55 1 34 1 256 7 258 1 198 2 199 1 62 1 306 1 260 1 287 1 372 4 266 2 337 1 241 1 355 1 208 1 291 1 162 2 138 1 48 1 71 1 294 1 245 3 
55 2 34 2 325 1 370 1 256 10 199 1 258 2 198 4 62 2 306 1 260 1 287 1 372 5 266 3 337 2 355 1 241 2 208 1 291 1 162 2 138 1 48 1 71 1 294 1 109 1 50 1 144 1 245 5 
55 1 34 3 224 2 325 1 256 18 199 1 258 3 198 6 228 1 62 3 306 1 260 1 287 1 372 10 266 4 337 3 355 1 241 3 208 1 291 1 66 1 162 3 138 3 48 1 47 1 71 1 294 1 109 2 50 1 144 2 297 1 245 8 187 1 
55 1 34 3 224 1 325 1 256 16 199 1 258 3 198 6 228 1 62 3 306 1 260 1 287 1 372 7 266 5 337 3 355 1 241 3 208 1 291 1 66 1 162 3 138 2 48 1 47 1 71 1 294 1 109 2 50 2 144 2 297 1 245 9 187 1 
55 1 34 1 256 7 258 1 198 2 199 1 62 1 306 1 260 1 287 1 372 4 266 2 337 1 241 1 355 1 208 1 291 1 162 2 138 1 48 1 71 1 294 1 245 3 
55 1 34 1 224 2 256 12 258 1 198 2 228 1 62 1 287 1 372 6 266 2 337 2 241 1 208 1 291 1 66 1 162 1 138 2 47 1 71 1 109 2 50 1 144 2 297 1 245 6 
55 1 34 4 224 1 325 1 256 17 199 1 258 4 198 8 228 1 62 4 306 1 260 1 287 1 372 8 266 5 337 3 355 1 241 4 208 1 291 1 66 1 162 3 138 2 48 1 47 1 71 1 294 1 109 2 50 2 144 2 297 1 245 9 187 2 
55 1 34 4 224 2 256 16 258 4 198 8 228 1 62 4 202 1 287 1 372 7 266 6 337 3 241 4 208 1 291 1 66 1 162 3 138 2 47 1 71 1 109 3 50 3 144 3 297 1 245 9 187 2 
372 4 266 6 337 1 355 2 162 3 138 1 256 7 48 3 294 1 199 3 50 3 245 3 260 1 
55 1 34 4 224 1 256 17 199 1 258 4 198 8 228 1 62 4 306 1 202 1 260 1 287 1 372 8 266 4 337 3 355 1 241 4 208 1 291 1 66 1 162 3 138 2 48 1 47 1 71 1 294 1 109 2 50 1 144 2 297 1 245 9 187 2 
0 1 280 1 172 1 139 1 257 1 273 1 326 1 
0 1 263 1 289 1 19 1 326 1 342 1 280 1 172 1 257 1 139 1 147 1 273 1 
298 1 29 1 264 1 2 1 310 1 135 1 17 1 226 1 339 1 274 1 89 1 
0 2 149 1 298 1 29 1 264 1 2 1 277 1 135 1 226 1 376 1 326 2 89 1 172 1 170 1 139 1 8 1 141 1 274 1 
0 2 298 1 149 1 221 1 29 2 2 1 277 1 302 1 303 1 226 1 326 2 172 1 170 2 8 1 9 1 175 1 264 1 135 1 265 1 376 1 139 2 141 2 274 3 
0 2 298 1 221 1 29 2 2 2 277 1 225 1 302 1 122 1 303 1 226 2 326 2 172 1 170 2 8 1 9 1 175 1 264 1 135 2 265 1 376 1 139 2 141 2 274 3 
298 1 247 2 221 1 30 1 29 1 2 3 225 1 303 1 226 3 5 1 58 1 170 1 175 1 64 2 264 1 133 1 334 1 135 3 240 1 89 1 313 1 183 1 274 4 
64 2 221 1 247 2 298 1 29 1 30 1 133 1 264 1 2 3 334 1 225 1 135 3 303 1 226 3 5 1 89 1 313 1 170 1 175 1 377 1 183 1 274 4 
298 1 264 1 2 1 311 1 135 1 226 1 
298 2 29 2 118 1 264 3 2 7 311 1 88 1 336 1 301 1 46 1 135 6 226 7 161 1 89 2 170 1 214 1 108 1 343 1 130 1 204 1 274 3 
0 2 298 1 148 1 149 1 29 1 2 1 277 1 34 2 304 1 226 1 255 2 36 1 326 2 349 1 256 5 172 1 170 1 8 1 199 1 198 4 258 2 152 1 62 2 306 1 260 1 264 1 285 1 372 3 135 1 266 2 337 1 355 1 241 2 376 1 162 2 138 1 212 1 48 1 139 1 140 1 294 1 108 1 141 1 217 1 167 2 245 2 274 1 
247 3 30 1 250 2 2 1 365 2 253 2 169 1 226 1 5 2 124 1 230 1 350 1 43 1 64 3 133 1 334 1 135 1 290 1 15 1 209 1 89 1 210 1 269 1 313 1 377 1 380 2 183 1 274 2 
298 1 30 1 29 1 264 2 2 2 311 1 336 1 135 2 226 2 170 1 108 1 371 1 274 2 
298 1 29 1 264 1 2 4 225 1 135 4 226 4 17 1 339 1 89 1 22 1 108 1 274 1 
298 1 29 1 264 2 2 2 46 1 135 2 226 2 323 1 77 1 38 1 170 1 343 1 175 1 274 1 
298 1 314 1 264 1 177 1 2 1 201 1 135 1 375 1 226 1 89 1 
298 1 29 1 264 1 2 2 135 2 226 2 123 1 161 1 214 1 108 1 274 1 
298 2 29 2 264 2 2 5 88 1 135 4 17 1 226 5 339 1 161 1 89 1 22 1 108 1 175 1 130 1 274 3 
298 2 29 2 264 2 2 5 135 4 17 1 226 5 339 1 161 1 89 1 22 1 108 1 175 1 24 1 130 1 274 3 
0 2 298 1 29 1 264 1 2 1 277 1 135 1 122 1 226 1 376 1 326 2 89 1 172 1 170 1 139 1 8 1 141 1 274 1 
298 1 29 1 264 2 2 1 336 1 301 1 46 1 135 1 226 1 170 1 343 1 175 1 274 1 
172 1 99 1 352 1 367 1 316 1 
64 2 132 1 247 2 133 1 134 1 334 1 302 1 265 1 352 1 75 1 290 1 367 2 105 1 313 1 172 1 9 1 295 1 99 2 316 2 
0 1 352 1 367 1 354 1 268 1 326 1 139 1 328 1 99 1 
132 1 295 1 352 1 
80 1 310 1 102 1 379 1 
205 1 80 1 31 1 102 1 216 1 379 1 279 1 
345 1 251 1 279 1 
205 1 115 1 31 3 234 2 102 1 196 1 279 3 80 1 216 1 379 1 131 1 93 1 
205 1 80 1 232 1 31 2 102 1 216 1 379 1 356 1 279 2 
205 1 314 1 31 1 201 1 216 1 338 1 379 1 104 1 131 1 279 1 37 1 
205 1 31 1 102 1 216 1 379 1 131 1 279 1 
205 1 80 1 31 1 102 2 216 1 131 1 279 1 
205 2 31 2 189 1 102 1 136 1 279 2 216 2 379 1 54 1 131 1 
205 1 31 3 102 1 374 1 279 3 356 2 163 1 37 1 80 1 82 1 216 1 379 2 131 1 
205 1 31 2 252 1 102 1 375 1 338 1 279 2 356 1 80 1 314 1 126 1 201 2 216 1 379 1 131 1 
205 2 232 1 31 4 286 1 102 1 279 4 356 2 163 1 37 1 80 1 216 2 379 2 131 1 
205 1 80 1 31 1 102 1 216 1 379 1 131 1 279 1 
205 1 234 1 31 4 102 2 196 1 356 2 279 4 163 1 37 1 80 2 358 1 216 1 379 3 93 1 
205 1 80 1 31 2 102 1 347 1 216 1 379 1 131 1 356 1 27 1 44 1 279 2 
205 1 31 3 234 2 102 1 196 2 279 3 80 1 229 1 216 1 379 1 131 1 93 1 
320 1 242 1 154 2 379 2 
205 1 31 1 216 1 207 1 131 1 279 1 
205 1 80 1 31 2 82 1 102 1 216 1 379 1 131 1 356 1 279 2 
100 1 
205 1 80 1 31 1 102 1 216 1 379 1 131 1 279 1 
205 1 31 3 234 1 102 1 356 1 279 3 80 1 82 1 216 1 379 1 131 1 
358 1 379 1 37 1 163 1 
102 1 379 1 

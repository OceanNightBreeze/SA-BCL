#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 14 (176,357) (176,357) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 14 (176,357) (176,357) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 14 (176,357) (176,357) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 14 (176,357) (176,357) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException 281 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException 14 (113,155) (113,155) 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException 5 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException 352 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException 352 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testSubtraction()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testApplyRatio()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiply()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.MoneyTest:testNegation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | OPERATOR | 1203 | > -> ==
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money; | RETURN | 2770 | return null
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 69 1 14 1 357 1 
176 1 69 1 14 1 357 1 
176 1 69 1 14 1 357 1 
176 1 69 1 14 1 357 1 
69 1 281 1 
69 1 155 1 14 1 154 1 113 1 114 1 
69 1 5 1 
69 1 352 1 
69 1 352 1 
28 1 280 1 143 1 
301 1 143 1 271 2 
157 2 315 2 208 1 170 2 136 2 307 2 214 2 184 1 
180 1 345 1 157 3 302 1 50 2 131 1 184 1 96 2 53 1 166 1 356 1 136 2 307 2 230 1 10 2 169 1 208 1 335 1 170 2 311 1 337 1 117 1 65 1 315 2 177 2 295 1 118 1 151 1 212 1 20 1 178 1 122 2 91 1 317 1 214 3 43 1 261 1 
331 1 157 1 315 1 149 1 234 1 170 1 136 1 307 1 214 1 184 1 
331 1 157 1 128 1 143 1 181 1 28 1 88 1 116 1 270 1 78 1 282 1 136 1 134 1 214 1 
331 1 157 1 128 2 143 1 170 1 28 1 116 1 315 1 270 1 78 1 282 2 307 1 136 1 134 1 214 1 
128 1 282 1 106 1 340 1 255 1 
28 1 128 2 150 1 143 1 282 2 94 1 106 1 340 1 
128 1 282 1 340 1 
331 1 157 1 128 1 234 1 170 1 184 1 66 1 315 1 149 1 282 1 106 1 307 1 136 1 214 1 
143 1 
28 1 128 2 150 1 143 1 233 1 282 2 106 1 340 1 
206 1 34 1 128 5 158 1 143 1 200 1 175 1 28 1 150 1 282 5 247 2 260 1 106 2 340 2 240 2 137 1 22 1 215 1 204 2 
280 1 208 1 
157 2 208 2 170 1 144 1 161 1 315 1 136 2 307 1 214 2 
211 1 330 1 353 1 
180 1 10 1 157 1 208 1 335 1 360 1 337 1 117 1 65 1 177 1 166 1 20 1 178 1 122 1 91 1 214 1 
180 1 10 1 157 2 335 1 170 1 337 1 237 1 353 1 65 1 117 1 177 1 166 1 20 1 104 1 178 1 91 1 307 1 136 1 122 1 214 2 
32 1 139 1 157 5 208 1 170 4 144 1 237 1 88 1 315 1 187 1 104 2 307 4 136 5 214 5 
331 1 157 2 149 1 170 2 136 2 307 2 214 2 146 1 
315 1 157 3 208 1 104 1 170 3 136 3 307 3 214 3 
331 1 157 1 149 1 170 1 136 1 307 1 214 1 
331 1 157 1 315 1 170 1 144 1 136 1 307 1 214 1 161 1 
180 1 157 4 128 1 129 1 302 1 50 2 131 1 184 1 96 1 3 1 166 1 270 1 78 1 282 1 356 1 104 1 134 1 136 3 307 3 230 1 10 1 331 1 169 1 208 1 335 1 170 3 144 1 311 1 337 1 237 1 65 1 116 1 117 1 315 2 177 1 295 1 151 1 20 1 178 1 91 1 122 1 317 1 214 4 43 1 
88 1 139 1 157 2 208 1 170 1 104 1 136 2 307 1 214 2 
331 1 157 3 128 1 143 1 170 3 144 1 129 1 237 1 116 1 315 1 78 1 7 1 270 1 282 1 104 2 307 3 136 3 134 1 214 3 
330 1 157 2 170 2 144 1 353 1 315 1 104 1 307 2 136 2 214 2 
180 1 10 1 157 1 208 1 335 1 337 1 117 1 65 1 177 1 166 1 20 1 178 1 122 1 91 1 214 1 
180 1 10 1 157 1 208 1 335 1 337 1 117 1 177 1 228 1 166 1 20 1 121 1 122 1 91 1 214 1 
346 1 71 1 302 1 50 2 219 1 164 1 52 1 96 4 74 1 75 1 353 2 8 1 356 2 230 1 249 1 330 2 311 1 236 1 211 2 295 1 151 1 317 1 68 1 261 2 
331 1 157 1 270 1 170 1 136 1 307 1 214 1 146 1 
11 1 73 1 
11 1 73 1 
263 1 316 1 
263 1 316 1 
263 1 316 1 
11 1 310 1 73 1 
11 1 310 1 73 1 
263 1 11 2 102 1 273 1 316 1 73 2 
11 1 195 1 73 1 
11 1 310 1 73 1 
11 1 47 1 73 1 
11 1 47 1 73 1 
11 1 47 1 73 1 
11 1 290 1 157 2 191 1 128 1 333 1 208 1 170 2 222 1 361 1 25 1 26 1 193 1 163 1 73 1 87 1 195 1 119 1 282 1 103 1 136 2 307 2 153 1 214 2 
11 2 191 2 333 2 128 2 141 2 143 1 273 1 110 1 292 1 192 1 222 3 193 2 163 2 73 2 282 2 197 1 103 1 306 1 82 1 
100 1 154 1 54 1 
100 1 154 1 114 1 
115 1 300 1 154 3 189 1 114 1 54 2 
115 1 159 1 154 2 189 1 114 1 54 1 
115 2 154 2 189 1 114 1 54 1 
123 1 128 5 346 1 301 1 158 3 267 1 25 1 164 1 225 2 74 1 28 1 246 1 247 1 282 5 188 2 106 4 271 3 56 1 57 1 249 1 204 1 190 2 332 1 290 1 143 2 364 1 150 1 260 2 340 1 153 1 240 1 22 1 
123 2 0 1 128 9 346 3 301 3 158 8 51 5 25 4 164 3 225 6 74 3 28 1 246 1 282 9 247 2 106 7 271 9 56 2 249 3 204 2 190 6 308 1 34 1 143 5 255 5 194 1 293 1 147 1 364 3 150 1 260 6 340 6 297 1 240 2 22 1 
123 1 128 3 346 1 301 2 158 3 25 1 164 1 225 2 74 1 28 1 247 1 282 3 188 1 106 2 271 4 56 1 57 1 249 1 204 1 190 2 332 1 34 1 143 3 364 1 260 2 240 1 
123 1 0 1 128 4 346 2 301 3 158 5 25 2 164 2 225 4 74 2 28 1 247 1 282 4 188 2 106 3 271 7 56 1 57 1 249 2 204 1 190 4 308 1 34 1 332 1 143 4 147 1 364 2 260 4 240 1 
294 1 280 1 335 1 
335 1 172 1 
125 1 
180 1 335 1 20 1 
335 1 221 1 
180 1 335 1 
180 1 294 2 335 3 20 1 86 1 326 1 
124 1 343 1 346 1 254 1 303 1 164 1 236 2 96 7 244 1 75 3 18 1 19 2 356 3 287 1 248 1 58 1 261 4 
124 1 343 1 346 1 254 1 303 1 164 1 236 2 96 7 244 1 75 3 18 1 19 2 356 3 287 1 248 1 58 1 261 4 
124 1 343 1 346 1 254 1 303 1 164 1 236 2 224 1 96 7 244 1 75 3 18 1 19 2 356 3 287 1 248 1 58 1 261 4 
343 2 124 5 319 1 346 4 302 1 50 2 303 1 351 1 266 4 164 4 244 1 96 31 74 3 75 10 99 1 6 1 356 15 248 1 287 2 58 1 249 3 33 3 254 2 336 1 311 1 236 5 313 1 312 1 364 3 295 1 151 1 19 3 18 2 261 16 
124 1 343 1 346 1 302 2 50 4 303 1 164 1 97 1 96 9 75 4 6 1 356 4 248 1 287 1 58 1 205 1 254 1 311 2 236 3 295 2 151 2 19 2 18 1 261 5 
69 1 17 1 10 1 272 1 177 1 122 1 
300 1 23 1 1 1 183 2 24 1 243 1 54 1 268 1 100 1 166 1 135 1 80 3 168 1 10 1 309 1 274 1 114 1 15 1 16 1 337 1 17 1 314 1 177 1 365 1 339 1 198 1 21 3 122 1 92 1 154 2 
300 1 1 1 183 2 24 1 243 1 268 1 54 1 100 1 166 1 135 1 80 2 10 1 309 1 274 1 114 1 15 1 16 1 337 1 17 1 177 1 365 1 339 1 21 2 122 1 154 2 
180 1 93 1 23 1 348 1 1 2 166 1 9 1 135 2 80 1 168 1 10 1 109 1 335 1 210 1 274 2 337 1 17 2 117 1 177 1 21 1 122 1 92 1 342 1 
69 1 17 1 10 1 177 1 122 1 268 1 
27 1 
157 1 158 2 49 2 324 2 323 1 201 1 98 1 165 1 166 1 101 1 282 5 247 1 204 1 10 2 12 1 331 1 335 1 291 1 62 2 337 1 117 2 116 1 177 2 260 2 340 6 122 2 214 1 22 1 341 2 342 1 180 1 123 1 128 5 301 2 182 2 181 1 348 1 130 2 350 1 28 1 354 1 77 2 270 1 78 1 271 2 136 1 134 1 140 1 143 2 142 1 38 4 88 1 41 1 150 3 240 1 
331 1 12 1 157 1 128 3 140 1 233 1 142 1 181 1 38 2 130 1 98 1 165 1 88 1 116 1 78 1 270 1 150 1 282 3 340 2 136 1 134 1 214 1 
157 1 128 3 181 1 182 1 98 1 165 1 28 1 270 1 78 1 282 3 134 1 136 1 12 1 331 1 140 1 142 1 143 1 233 1 38 3 88 1 116 1 150 1 340 1 214 1 
157 1 128 3 181 1 182 1 130 1 98 1 165 1 28 1 77 1 270 1 78 1 282 3 134 1 136 1 12 1 331 1 140 1 233 1 142 1 143 1 38 3 88 1 116 1 150 1 340 2 214 1 
157 1 158 1 49 2 324 2 98 1 165 1 282 5 247 1 101 1 286 1 204 1 331 1 12 1 62 2 116 1 260 1 340 7 214 1 22 1 341 2 128 5 301 2 181 1 182 4 130 4 350 1 226 1 28 5 77 4 186 1 78 1 270 1 134 1 136 1 140 1 233 1 142 1 143 5 38 6 88 1 196 1 150 3 275 1 240 1 
157 1 158 1 49 2 324 2 98 1 201 1 165 1 282 4 247 1 101 1 204 1 331 1 12 1 62 2 116 1 260 1 340 4 214 1 22 1 341 2 128 4 301 2 181 1 182 2 350 1 130 2 28 1 77 2 78 1 270 1 134 1 136 1 271 2 140 1 142 1 143 2 38 4 88 1 150 2 240 1 
157 1 128 4 301 2 158 1 182 2 49 2 181 1 324 2 130 2 350 1 98 1 226 1 28 1 165 1 77 2 186 1 270 1 78 1 101 1 282 4 247 1 134 1 136 1 204 1 12 1 331 1 140 1 143 1 142 1 38 4 62 2 88 1 116 1 196 1 150 2 260 1 340 4 214 1 240 1 22 1 341 2 
157 1 128 4 301 2 158 1 182 2 49 2 181 1 324 2 130 2 350 1 98 1 226 1 28 1 165 1 77 2 186 1 270 1 78 1 101 1 282 4 247 1 134 1 136 1 204 1 12 1 331 1 140 1 143 1 142 1 38 4 62 2 88 1 116 1 196 1 150 2 260 1 340 4 214 1 240 1 22 1 341 2 
320 2 157 1 128 4 126 1 158 1 182 2 181 1 324 2 130 2 98 1 28 1 165 1 77 2 270 1 78 1 101 1 282 4 247 1 133 2 271 2 134 1 136 1 204 1 12 1 331 1 140 1 143 1 142 1 38 4 209 1 88 1 116 1 196 1 150 2 260 1 340 4 239 1 214 1 240 1 22 1 341 2 
157 1 128 4 301 2 158 1 49 2 181 1 182 3 324 2 350 1 130 3 226 1 98 1 28 1 165 1 77 3 186 1 270 1 78 1 101 1 247 1 282 4 134 1 136 1 204 1 12 1 331 1 140 1 143 1 142 1 38 5 62 2 88 1 116 1 196 1 150 2 275 1 260 1 340 5 214 1 240 1 22 1 341 2 
157 1 128 4 301 2 158 1 49 2 181 1 182 3 324 2 350 1 130 3 226 1 98 1 28 1 165 1 77 3 186 1 270 1 78 1 101 1 247 1 282 4 134 1 136 1 204 1 12 1 331 1 140 1 143 1 142 1 38 5 62 2 88 1 116 1 196 1 150 2 275 1 260 1 340 5 214 1 240 1 22 1 341 2 
157 1 320 2 158 1 324 2 98 1 201 1 165 1 282 4 247 1 101 1 204 1 331 1 12 1 116 1 260 1 340 4 214 1 22 1 341 2 128 4 181 1 182 2 130 2 28 1 77 2 78 1 270 1 133 2 134 1 136 1 271 2 140 1 142 1 143 1 38 4 88 1 150 2 239 1 240 1 
343 1 346 1 302 1 50 2 219 1 303 1 164 1 96 6 75 2 353 1 280 1 356 3 287 1 248 1 58 1 230 1 330 1 208 2 311 1 236 2 211 1 295 1 151 1 19 1 317 1 261 3 
124 1 345 1 346 1 302 2 50 4 266 3 164 2 279 1 96 14 74 2 75 2 353 11 356 6 230 1 232 1 249 1 33 3 330 4 208 1 171 1 336 1 236 1 311 2 64 1 313 1 211 11 295 2 364 2 151 2 276 1 317 2 43 1 261 8 
180 1 70 1 157 2 345 1 50 2 302 1 279 1 96 2 166 1 104 1 356 1 136 1 307 1 328 1 230 1 10 1 330 1 208 1 335 1 170 1 360 1 311 1 337 1 237 1 65 1 117 1 177 1 295 1 151 1 20 1 90 1 178 1 91 1 122 1 317 1 214 2 43 1 261 1 
157 3 50 6 164 3 279 1 96 20 166 2 104 1 287 1 248 1 58 1 249 2 288 2 10 3 330 7 13 1 208 2 335 2 170 1 174 2 337 2 211 7 117 1 65 2 177 3 295 3 19 1 120 2 20 2 178 2 122 3 214 3 261 10 343 1 180 2 124 4 345 1 346 3 347 1 302 3 303 1 131 2 268 1 74 2 75 8 353 7 356 10 307 1 136 1 230 3 81 1 359 2 236 4 311 3 237 1 364 2 151 3 91 2 317 3 43 1 
344 1 180 2 45 1 157 1 345 1 321 1 348 1 219 1 302 2 50 4 268 1 96 2 203 1 166 2 104 1 356 1 105 1 136 1 307 1 230 2 272 1 10 8 335 3 170 1 111 1 311 2 337 2 117 2 258 1 177 8 295 2 118 2 151 2 122 7 214 1 317 2 43 1 342 1 261 1 
157 1 346 1 302 1 50 2 164 1 279 1 74 1 96 3 75 1 353 1 285 1 356 2 307 1 136 1 230 1 249 1 330 1 170 1 144 1 236 1 311 1 211 1 315 1 295 1 364 1 151 1 317 1 214 1 261 1 
124 1 330 1 219 1 50 2 302 1 311 1 164 1 52 1 96 2 74 1 75 1 211 1 353 1 295 1 151 1 317 1 230 1 261 2 
330 1 346 1 219 1 50 2 302 1 236 1 311 1 96 2 75 1 211 1 353 1 295 1 8 1 151 1 356 2 317 1 230 1 249 1 
124 1 346 1 302 1 50 2 219 1 164 1 74 1 96 4 75 2 353 2 356 2 230 1 249 1 330 2 311 1 236 1 211 2 364 1 295 1 151 1 317 1 261 2 
124 1 330 1 111 1 50 2 302 1 311 1 164 1 52 1 96 2 74 1 75 1 211 1 353 1 295 1 151 1 317 1 230 1 261 2 
330 1 346 1 111 1 50 2 302 1 236 1 311 1 96 2 75 1 211 1 353 1 295 1 8 1 151 1 356 2 317 1 230 1 249 1 
124 1 346 1 302 1 50 2 164 1 74 1 96 4 75 2 353 2 356 2 230 1 249 1 330 2 111 1 311 1 236 1 211 2 364 1 295 1 151 1 317 1 261 2 
124 1 346 1 302 1 50 2 164 1 96 4 74 1 75 2 353 2 356 2 230 1 249 1 330 2 311 1 236 1 211 2 364 1 295 1 151 1 317 1 261 2 
180 1 345 1 157 1 50 2 302 1 131 1 96 2 166 1 356 1 230 1 10 1 208 1 335 1 311 1 337 1 65 1 117 1 177 1 295 1 151 1 20 1 178 1 91 1 122 1 214 1 317 1 43 1 261 1 
180 1 345 1 157 1 50 2 302 1 96 2 166 1 228 1 356 1 230 1 108 1 10 1 208 1 335 1 311 1 337 1 117 1 177 1 295 1 151 1 20 1 121 1 91 1 122 1 214 1 317 1 43 1 261 1 
124 1 346 1 302 1 50 2 164 1 74 1 279 1 96 4 75 2 353 2 356 2 230 1 249 1 330 2 311 1 236 1 211 2 364 1 295 1 151 1 317 1 261 2 
124 1 180 1 157 1 346 1 50 2 302 1 131 1 164 1 96 4 74 1 75 2 353 2 166 1 356 2 230 1 249 1 330 2 10 1 272 1 359 1 335 1 236 1 311 1 337 1 211 2 65 1 177 1 295 1 364 1 151 1 20 1 178 1 91 1 122 1 214 1 317 1 261 2 
124 1 157 1 346 1 302 1 50 2 164 1 279 1 74 1 96 3 75 1 353 1 356 1 307 1 136 1 230 1 249 1 330 1 59 1 170 1 144 1 311 1 211 1 315 1 295 1 364 1 151 1 317 1 214 1 261 2 
124 3 264 1 265 1 346 3 278 1 322 2 302 2 50 4 220 1 72 1 266 2 223 1 164 3 97 1 96 19 74 3 75 6 227 2 356 10 249 3 33 1 336 1 236 3 311 2 313 1 295 2 364 3 151 2 179 1 261 9 
124 2 264 1 346 2 265 2 322 4 302 3 50 6 220 1 266 2 223 2 2 1 164 3 97 1 96 26 74 3 75 4 227 1 6 2 356 12 329 1 249 2 33 2 251 1 336 2 112 1 63 1 236 2 311 3 295 3 364 3 151 3 179 1 261 14 241 1 
322 4 50 6 164 5 2 1 96 41 97 1 6 1 248 1 287 1 329 1 58 1 249 4 251 1 336 3 112 1 63 1 295 3 19 1 179 1 261 20 124 4 343 1 264 1 346 5 265 1 220 1 302 3 303 1 72 1 266 4 223 2 74 4 75 8 227 1 356 21 33 3 311 3 236 4 313 1 364 4 151 3 152 1 241 1 
343 1 124 3 264 1 265 1 346 4 322 4 302 4 50 8 220 1 72 1 303 1 266 4 2 1 223 2 164 5 97 1 96 38 74 4 75 7 227 1 6 2 356 18 287 1 248 1 58 1 329 1 249 3 33 3 251 1 336 3 112 1 63 1 236 4 311 4 313 1 295 4 364 4 19 1 151 4 152 1 179 1 241 1 261 20 
343 1 124 7 264 1 265 1 346 8 322 4 302 2 50 4 220 1 303 1 266 4 2 1 223 1 164 8 97 1 96 52 74 7 75 14 227 1 6 1 356 25 287 1 248 1 58 1 329 1 249 7 33 4 251 1 336 2 112 1 63 1 236 7 311 2 313 2 295 2 364 7 19 1 151 2 276 2 179 1 241 1 261 27 
180 1 157 2 345 1 321 1 160 1 50 2 302 1 162 1 279 1 96 2 203 1 166 1 283 1 229 1 305 1 356 1 136 2 230 1 10 2 335 1 311 1 337 1 177 2 295 1 118 2 151 1 122 2 317 1 214 2 43 1 261 1 
10 2 272 1 300 1 207 1 274 1 24 1 114 1 337 1 54 1 268 1 202 1 100 1 177 2 166 1 339 1 284 1 198 1 122 2 154 2 
10 1 300 1 84 1 274 1 24 1 114 1 337 1 54 1 268 1 100 1 177 1 166 1 339 1 284 1 198 1 122 1 154 2 
180 1 10 1 207 1 93 1 335 1 348 1 274 1 337 1 29 1 117 1 177 1 166 1 122 1 342 1 
10 1 300 1 207 1 274 1 24 1 114 1 337 1 54 1 268 1 202 1 100 1 177 1 166 1 339 1 284 1 198 1 122 1 154 2 
89 1 
28 1 280 1 158 1 143 1 260 1 137 1 215 1 
128 1 301 1 158 1 49 1 350 1 28 1 247 1 282 1 271 1 204 1 143 2 62 1 150 1 260 1 340 1 240 1 22 1 
156 2 277 2 158 9 164 2 326 1 245 2 166 4 247 4 282 5 204 4 250 2 249 2 10 3 335 10 253 2 291 1 172 3 337 3 294 2 117 1 177 3 120 2 20 3 260 8 122 3 340 5 22 4 215 1 123 2 180 3 216 1 128 5 301 6 346 2 349 1 221 2 225 6 74 2 185 1 28 2 78 2 79 2 271 12 137 1 83 1 272 1 190 6 143 8 40 2 364 2 150 3 42 2 240 4 199 1 
123 1 128 1 158 8 301 3 346 2 266 1 2 1 164 2 225 5 74 2 269 1 28 2 282 1 247 2 79 2 271 6 204 2 249 2 190 5 33 1 251 1 252 1 143 5 291 1 336 1 112 1 63 1 40 1 364 2 150 1 260 5 340 1 240 2 22 2 241 1 
343 1 46 1 157 1 128 1 346 1 158 2 303 1 164 2 184 1 226 1 247 1 282 1 79 2 307 1 136 1 287 1 204 1 331 1 234 1 170 1 40 1 66 1 315 1 149 1 260 2 214 1 240 1 22 1 
158 1 143 1 28 1 247 1 260 1 240 1 22 1 137 1 215 1 204 1 
190 5 301 5 346 2 158 5 143 5 164 2 40 1 225 5 74 2 364 2 120 1 79 2 260 5 271 10 249 2 
28 1 128 1 150 1 143 1 282 1 340 1 
180 1 123 2 128 3 158 2 348 1 323 1 185 2 166 1 247 2 282 3 204 2 83 1 10 4 34 1 334 1 335 1 85 1 291 2 337 1 117 2 41 1 177 4 150 2 260 2 122 4 340 4 240 2 22 1 342 1 
180 1 157 3 302 1 50 2 131 1 184 1 96 1 166 1 356 1 136 2 307 2 230 1 10 1 169 1 208 1 335 1 170 2 311 1 337 1 117 1 65 1 177 1 315 2 295 1 151 1 20 1 178 1 122 1 91 1 214 3 317 1 43 1 
123 1 190 2 301 2 158 1 143 4 291 1 225 2 28 2 19 1 247 1 260 2 271 4 240 1 22 1 204 1 
191 1 333 1 31 1 
191 1 333 1 31 1 
289 1 191 1 333 1 119 1 306 1 
191 1 333 1 31 1 
191 1 333 1 138 1 
191 1 333 1 138 1 
191 1 333 1 138 1 
191 1 333 1 
11 1 73 1 
124 1 343 1 346 1 50 4 302 2 303 1 164 1 236 2 311 2 96 8 75 3 6 1 295 2 19 1 151 2 356 4 248 1 287 1 58 1 261 4 
75 2 343 1 280 1 346 1 19 1 356 3 303 1 287 1 248 1 164 1 236 2 58 1 96 6 261 3 
124 1 127 1 346 1 50 2 302 1 236 1 311 1 164 1 74 1 96 4 75 2 295 1 364 1 151 1 356 2 249 1 261 2 
124 1 33 1 346 1 336 1 266 2 236 1 164 1 96 7 313 1 74 1 75 2 364 1 356 4 249 1 261 3 
343 2 124 4 346 3 50 4 302 2 303 1 266 2 164 3 74 2 96 23 75 9 6 2 356 12 287 2 248 1 58 1 232 1 249 2 33 2 236 5 311 2 313 1 257 1 364 2 295 2 19 1 151 2 276 1 261 11 
356 1 266 1 96 1 
33 1 96 1 261 1 
124 1 127 1 346 1 302 1 50 2 311 1 164 1 236 2 96 6 74 1 75 3 295 1 364 1 151 1 120 1 356 3 261 3 249 1 
124 1 346 2 302 1 50 2 266 1 2 1 164 2 96 12 97 1 74 2 75 2 356 6 249 2 33 1 251 1 336 1 112 1 63 1 311 1 236 1 295 1 364 2 151 1 241 1 261 6 
343 1 124 1 346 1 303 1 164 1 236 1 96 6 75 2 356 3 287 1 261 3 
124 1 343 1 50 2 302 1 236 1 311 1 96 3 75 2 257 1 6 1 295 1 151 1 356 2 287 1 248 1 58 1 261 1 
343 2 124 2 46 1 346 2 302 1 50 2 303 1 311 1 236 3 164 2 97 1 96 10 75 5 295 1 151 1 356 5 287 2 261 5 
124 1 50 2 302 1 311 1 164 1 97 1 74 1 96 2 75 1 295 1 151 1 261 2 
124 1 346 1 50 2 302 1 236 1 311 1 164 1 97 1 74 1 96 4 75 2 295 1 364 1 151 1 356 2 249 1 261 2 
343 1 124 1 50 6 302 3 72 1 311 3 236 1 96 3 97 1 75 2 6 1 257 1 295 3 151 3 356 2 287 1 261 1 
343 3 124 5 319 1 127 1 346 5 302 5 50 10 303 2 351 1 72 1 266 4 164 5 97 1 96 34 74 3 75 12 6 2 356 18 287 3 248 1 58 1 249 3 33 3 336 1 311 5 236 7 312 1 313 1 257 1 295 5 364 3 19 1 151 5 261 16 
343 1 346 1 302 1 50 2 303 1 266 1 164 1 96 8 97 1 75 2 356 4 248 1 287 1 58 1 33 1 336 1 311 1 236 2 295 1 19 1 151 1 241 1 261 4 
343 1 124 1 127 1 346 1 302 2 50 4 303 1 266 2 164 2 96 11 97 1 74 1 75 3 356 5 287 1 248 1 58 1 33 1 336 1 236 2 311 2 313 1 295 2 364 1 19 1 151 2 241 1 261 6 
343 1 124 1 127 1 346 3 302 3 50 6 303 1 266 1 2 1 164 3 96 19 97 1 74 2 75 4 6 1 356 10 287 1 248 1 58 1 249 2 33 1 251 1 336 1 112 1 63 1 311 3 236 3 295 3 364 2 19 1 151 3 241 1 261 9 
343 1 124 2 127 1 346 2 302 3 50 6 303 1 266 1 2 1 164 3 96 17 97 1 74 2 75 5 6 1 356 7 287 1 248 1 58 1 249 1 33 1 251 1 336 1 112 1 63 1 311 3 236 3 295 3 364 2 19 1 151 3 241 1 261 10 
343 1 346 1 302 1 50 2 303 1 266 1 164 1 96 8 97 1 75 2 356 4 248 1 287 1 58 1 33 1 336 1 311 1 236 2 295 1 19 1 151 1 241 1 261 4 
124 1 346 2 302 1 50 2 266 1 2 1 164 2 96 12 97 1 74 2 75 2 356 6 249 2 33 1 251 1 336 1 112 1 63 1 311 1 236 1 295 1 364 2 151 1 241 1 261 6 
343 1 124 2 127 1 346 2 302 4 50 8 303 1 266 1 2 1 164 3 96 18 97 1 74 2 75 5 6 2 356 8 287 1 248 1 58 1 249 1 33 1 251 1 336 1 112 1 63 1 311 4 236 3 295 4 364 2 19 1 151 4 241 1 261 10 
124 3 346 2 302 4 50 8 72 1 266 1 2 1 164 3 96 16 97 1 74 3 75 6 6 2 356 7 249 2 33 1 251 1 336 1 112 1 63 1 311 4 236 3 295 4 364 3 151 4 241 1 261 9 
343 3 124 3 346 1 303 1 236 3 164 1 96 7 75 6 356 4 248 1 287 3 58 2 261 3 
343 1 124 1 346 2 302 4 50 8 303 1 72 1 266 1 2 1 164 3 96 18 97 1 74 2 75 4 6 2 356 8 287 1 248 1 58 1 249 1 33 1 251 1 336 1 112 1 63 1 311 4 236 3 295 4 364 2 19 1 151 4 241 1 261 10 
88 1 139 1 157 1 208 1 136 1 214 1 107 1 
139 1 35 1 157 1 37 1 208 1 88 1 167 1 136 1 214 1 231 1 44 1 107 1 
180 1 280 1 10 1 117 1 177 1 166 1 335 1 348 1 122 1 337 1 342 1 
180 1 10 1 157 2 208 1 335 1 170 1 337 1 117 1 65 1 177 1 166 1 20 1 104 1 91 1 307 1 136 1 122 1 214 2 
180 2 157 2 277 1 221 1 185 1 166 1 270 1 104 1 136 2 307 1 10 1 331 1 208 1 335 3 170 2 337 1 65 1 116 1 177 1 20 2 122 1 91 1 214 2 
180 2 157 2 277 1 221 1 185 1 4 1 228 1 166 1 270 1 104 1 136 2 307 1 10 2 331 1 208 1 335 3 170 2 337 1 116 1 177 2 20 2 122 2 91 1 214 2 
180 1 277 1 128 2 218 1 221 1 325 1 185 1 28 1 4 1 166 1 78 1 282 2 10 3 143 1 335 4 172 1 337 1 294 1 117 1 177 3 20 1 340 1 122 3 
180 1 10 3 277 1 156 1 128 2 143 1 335 4 221 1 172 1 337 1 185 1 28 1 294 1 4 1 117 1 177 3 78 1 166 1 282 2 20 1 122 3 340 1 
344 1 10 1 177 1 166 1 122 1 337 1 
344 1 180 2 272 1 45 1 10 7 298 1 321 1 335 3 326 1 362 1 337 2 268 1 148 1 117 2 258 1 177 7 118 1 166 3 20 1 105 1 122 6 
157 2 50 4 162 1 164 1 279 1 96 6 166 1 104 1 248 1 287 1 58 1 330 1 10 1 335 1 208 2 170 1 174 1 337 1 211 1 65 1 177 1 295 2 19 1 20 1 178 1 122 1 214 2 261 3 180 1 343 1 346 1 302 2 131 1 303 1 75 2 353 1 356 3 307 1 136 1 230 2 272 1 359 1 311 2 236 2 151 2 91 1 317 2 
156 1 128 3 158 1 28 1 78 1 247 2 282 3 106 1 137 1 204 2 83 1 250 1 10 1 143 1 335 2 253 1 172 1 294 1 117 1 177 1 150 1 42 1 260 1 122 1 340 2 240 2 22 2 215 1 
344 1 180 1 272 1 10 2 335 2 326 1 337 1 294 1 177 2 166 2 20 1 122 2 199 1 
180 1 10 4 272 1 335 1 348 1 337 1 4 1 117 1 177 4 166 1 132 1 122 4 342 1 
262 1 180 1 10 2 358 1 13 1 335 1 362 1 337 1 185 1 148 1 177 2 166 2 20 1 122 2 
10 1 117 1 100 1 177 1 166 1 122 1 154 1 24 1 114 1 337 1 
180 1 10 2 272 1 177 2 166 1 321 1 160 1 335 1 122 2 337 1 268 1 
180 2 10 5 272 1 321 1 335 3 348 1 337 2 185 1 117 1 177 5 258 1 166 2 132 1 105 1 122 4 342 1 
180 2 10 5 272 1 321 1 335 3 348 1 304 1 337 2 185 1 117 1 177 5 258 1 166 2 132 1 122 4 342 1 
180 1 10 1 157 2 208 1 335 1 170 1 337 1 117 1 177 1 166 1 228 1 20 1 104 1 91 1 307 1 136 1 122 1 214 2 
180 1 10 1 298 1 335 1 326 1 362 1 337 1 185 1 148 1 177 1 166 2 20 1 122 1 
217 1 208 1 235 1 39 1 256 1 
331 1 217 1 128 2 48 1 143 1 208 1 129 1 235 2 39 2 173 1 256 2 28 1 116 1 363 1 78 1 270 1 282 2 106 1 134 1 
217 1 157 1 235 1 39 1 283 1 305 1 229 1 136 1 214 1 
363 1 217 1 173 1 
280 1 365 1 243 1 15 1 
365 1 23 1 21 1 80 1 92 1 243 1 15 1 
135 1 80 1 1 1 
69 1 36 1 95 1 238 1 21 1 296 1 80 1 
365 1 23 1 21 2 80 2 183 1 145 1 92 1 243 1 15 1 
69 1 
69 1 
69 1 
69 1 242 1 
69 1 183 2 243 1 76 1 355 1 327 1 338 1 296 1 21 2 80 2 
69 1 154 1 114 1 
69 1 145 1 183 2 243 1 355 1 327 1 67 1 296 1 21 2 80 2 
69 1 296 1 
36 1 23 1 95 1 183 2 15 2 243 3 238 1 355 1 327 1 365 2 296 1 21 4 80 4 92 1 
69 1 183 1 30 1 55 1 259 1 21 1 296 1 80 1 
69 1 36 1 61 1 238 1 21 1 296 1 80 1 
299 1 60 1 318 2 243 2 
69 1 
69 1 76 1 296 1 21 1 80 1 183 1 
213 1 
69 1 
69 1 36 1 296 1 21 1 80 1 
355 1 327 1 296 1 243 1 
365 1 243 1 

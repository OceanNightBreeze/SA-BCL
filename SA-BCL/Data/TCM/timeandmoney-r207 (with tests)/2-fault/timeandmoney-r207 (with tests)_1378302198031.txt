#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 69 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 69 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | CONDITION | 1071 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 2 184 1 201 1 50 2 227 2 287 1 51 4 258 1 356 9 141 1 80 1 83 2 162 1 189 1 59 1 165 6 34 1 294 1 264 1 16 1 299 5 272 2 324 2 197 9 179 3 255 1 25 1 384 2 
181 2 184 1 201 1 227 2 50 2 287 1 51 4 258 1 356 9 141 1 80 1 83 2 162 1 189 1 59 1 165 6 34 1 294 1 264 1 16 1 299 5 272 2 324 2 197 9 179 3 255 1 25 1 384 2 
181 2 184 1 201 1 227 2 50 2 287 1 51 5 258 1 356 10 141 1 80 1 83 2 162 1 189 1 59 1 165 7 34 1 294 1 264 1 16 1 299 6 272 2 324 2 197 10 179 4 255 1 25 1 384 2 
181 2 184 1 201 1 227 2 50 1 287 1 51 3 258 1 356 7 80 1 83 2 162 1 189 1 59 1 165 4 34 1 294 1 264 1 16 1 299 4 272 2 324 2 197 7 179 2 255 1 25 1 384 2 
264 1 181 1 299 3 227 1 50 2 51 2 272 1 356 4 141 1 80 1 324 1 83 1 162 1 197 4 179 1 59 1 25 1 165 3 
264 1 299 1 227 1 371 1 258 1 272 1 356 2 80 1 324 1 83 1 197 2 59 1 234 1 88 1 34 1 384 1 
264 1 184 1 299 2 51 1 272 2 356 3 80 1 324 2 197 3 179 1 59 1 165 1 384 1 
181 1 48 1 184 1 201 1 49 1 50 2 227 1 51 4 356 9 141 1 80 1 83 1 162 1 59 1 165 7 264 1 16 1 299 5 272 2 324 2 197 9 179 3 25 1 384 1 
181 1 48 1 184 1 201 1 49 1 50 2 227 1 51 4 356 9 141 1 80 1 83 1 162 1 59 1 165 7 264 1 16 1 299 5 272 2 324 2 197 9 179 3 25 1 384 1 
35 1 69 1 231 1 
325 2 231 1 383 1 
203 2 124 1 158 2 18 2 306 2 322 2 307 2 309 1 
326 2 199 1 333 1 102 1 203 3 158 2 144 1 160 1 10 1 146 1 361 1 334 1 105 1 212 1 61 2 236 1 237 1 339 2 124 1 18 2 17 1 38 2 266 1 267 1 369 1 242 1 322 3 68 1 194 1 323 2 304 1 306 2 94 1 307 2 382 1 254 1 309 1 
53 1 203 1 124 1 158 1 18 1 136 1 306 1 322 1 307 1 364 1 
110 1 35 1 133 1 39 1 352 1 108 1 322 1 3 1 203 1 53 1 206 1 231 1 319 1 307 1 
110 1 35 1 133 1 18 1 39 1 322 1 3 2 203 1 53 1 158 1 206 2 231 1 306 1 319 1 307 1 
204 1 238 1 206 1 291 1 3 1 
204 1 35 1 238 1 206 2 231 1 3 2 269 1 315 1 
204 1 206 1 3 1 
124 1 238 1 18 1 136 1 226 1 3 1 322 1 53 1 203 1 158 1 206 1 306 1 307 1 364 1 
231 1 
204 1 35 1 238 1 206 2 231 1 138 1 3 2 269 1 
35 1 238 2 1 1 297 1 370 1 3 5 269 1 66 1 271 2 204 2 140 1 206 5 150 1 231 1 178 1 262 1 151 2 70 1 167 2 
69 1 309 1 
256 1 18 1 322 2 203 2 158 1 306 1 307 2 309 2 293 1 
28 1 375 1 134 1 
237 1 326 1 17 1 38 1 369 1 322 1 203 1 102 1 144 1 175 1 160 1 304 1 94 1 105 1 309 1 61 1 
237 1 28 1 347 1 326 1 17 1 18 1 38 1 369 1 322 2 102 1 203 2 158 1 144 1 160 1 304 1 94 1 105 1 72 1 307 1 61 1 
347 1 203 3 158 3 18 3 306 1 322 3 307 3 309 1 
53 1 203 1 158 1 18 1 136 1 322 1 307 1 
53 1 203 1 158 1 256 1 18 1 306 1 322 1 307 1 293 1 
110 1 347 1 326 1 45 1 256 1 133 1 3 1 333 1 102 1 203 4 53 1 158 3 144 1 160 1 206 1 10 1 334 1 319 1 105 1 60 1 212 1 61 1 236 1 237 1 339 1 124 1 17 1 18 3 38 1 266 1 39 1 369 1 242 1 322 4 68 1 194 1 323 2 304 1 306 2 94 1 307 3 72 1 254 1 309 1 
203 2 347 1 158 1 8 1 18 1 108 1 322 2 307 2 309 1 
110 1 347 2 256 1 89 1 133 1 18 3 39 1 3 1 322 3 53 1 203 3 158 3 206 1 231 1 306 1 319 1 72 1 307 3 60 1 
347 1 28 1 256 1 18 2 322 2 203 2 375 1 158 2 306 1 307 2 
237 1 326 1 17 1 38 1 369 1 322 1 203 1 102 1 144 1 160 1 304 1 94 1 105 1 309 1 61 1 
326 1 17 1 38 1 169 1 329 1 369 1 322 1 203 1 102 1 144 1 160 1 304 1 105 1 309 1 61 1 
28 2 282 1 134 2 327 1 330 1 333 2 228 1 259 1 103 1 10 1 208 1 361 2 334 1 121 1 212 1 236 1 339 4 266 1 67 1 375 2 68 1 323 2 381 1 279 1 
53 1 203 1 158 1 349 1 18 1 39 1 322 1 307 1 
347 2 256 1 18 4 108 1 322 5 203 5 158 4 8 1 306 1 318 1 307 5 72 1 12 1 309 1 
53 1 203 2 158 2 349 1 18 2 136 1 322 2 307 2 
250 1 268 1 
250 1 268 1 
289 1 328 1 
289 1 328 1 
289 1 328 1 
250 1 214 1 268 1 
250 1 93 1 268 1 
250 2 289 1 265 1 251 1 328 1 268 2 
250 1 214 1 268 1 
250 1 214 1 268 1 
250 1 340 1 268 1 
250 1 340 1 268 1 
250 1 340 1 268 1 
74 2 155 1 99 2 136 1 226 1 3 2 314 1 53 1 203 1 288 2 32 1 158 1 206 2 81 1 9 1 119 1 364 1 124 1 18 1 268 2 128 2 322 1 174 1 246 1 250 2 306 1 253 2 307 1 
74 1 99 1 3 1 288 1 203 2 158 2 32 1 7 1 206 1 365 1 126 1 18 2 127 1 268 1 128 1 322 2 247 1 250 1 93 1 253 1 307 2 44 1 309 1 26 1 
83 1 181 1 227 1 
83 1 227 1 88 1 
83 3 341 1 181 2 87 1 147 1 88 1 
142 1 83 2 341 1 181 1 87 1 88 1 
83 2 181 1 341 1 87 2 88 1 
282 1 1 1 327 1 112 1 3 5 139 2 204 1 103 1 259 1 229 1 206 5 231 2 292 1 232 2 235 1 167 1 148 1 238 4 35 1 126 1 370 3 269 1 271 1 247 1 150 2 325 3 195 1 274 2 151 1 345 1 383 1 26 1 
282 3 1 1 76 1 327 3 112 3 3 9 52 1 204 6 103 3 259 3 206 9 231 5 262 1 291 5 232 6 320 1 167 2 148 2 238 7 35 1 370 8 269 1 247 4 271 2 129 1 150 6 325 9 195 2 274 6 196 1 305 5 345 1 151 2 43 1 383 3 
282 1 327 1 112 1 3 3 139 1 103 1 229 1 259 1 206 3 231 3 262 1 232 2 235 1 167 1 148 1 35 1 238 2 370 3 271 1 247 1 150 2 195 1 325 4 274 2 151 1 383 2 
282 2 327 2 112 2 3 4 139 2 103 2 229 1 259 2 206 4 231 4 262 1 232 4 320 1 235 1 167 1 148 1 35 1 238 3 370 5 271 1 247 2 150 4 325 7 195 1 274 4 196 1 151 1 43 1 383 3 
69 1 161 1 369 1 
369 1 353 1 
222 1 
102 1 369 1 
102 1 54 1 144 1 98 1 161 2 369 3 
102 1 144 1 369 1 
188 1 369 1 
339 14 168 1 282 3 90 2 183 1 354 1 333 6 245 1 159 2 259 3 358 1 233 2 381 4 224 2 361 8 190 1 279 5 363 1 
339 14 168 1 282 3 90 2 183 3 354 1 333 6 245 1 159 2 259 3 358 1 233 2 381 4 224 2 361 8 190 1 279 7 363 1 
339 14 168 1 282 3 90 2 183 1 354 1 333 6 245 1 159 2 259 3 358 1 220 1 233 2 381 4 224 2 361 8 190 1 279 5 363 1 
282 6 327 3 112 3 183 7 156 3 313 1 354 1 333 19 159 3 259 6 103 3 316 1 207 1 358 2 10 1 233 2 334 1 361 21 190 1 363 2 236 1 168 1 339 40 90 3 266 1 216 1 217 4 109 1 245 1 192 1 323 2 224 3 381 7 308 1 279 14 
282 3 183 2 333 7 159 2 259 3 358 1 10 2 334 2 361 9 233 2 190 1 363 1 236 2 339 16 168 1 90 2 266 2 173 1 245 1 218 1 323 4 381 5 224 2 308 1 279 7 
326 1 181 1 227 1 356 2 80 1 145 1 83 2 359 1 147 1 105 1 59 1 165 1 88 1 61 1 14 1 264 1 37 1 17 1 38 1 20 1 368 1 91 1 299 1 172 1 270 1 272 1 324 1 197 2 278 1 384 1 
153 1 326 1 181 1 227 1 356 3 143 1 80 1 145 1 83 2 359 1 33 1 147 1 105 1 59 1 165 2 88 1 61 1 14 1 37 1 17 1 38 1 20 1 368 1 91 1 299 1 172 1 272 1 324 1 197 3 384 1 
153 1 326 1 181 1 227 1 356 2 143 1 80 1 145 1 83 2 359 1 147 1 105 1 59 1 165 2 88 1 61 1 37 1 17 1 38 1 20 1 91 1 299 1 172 1 197 2 384 1 
111 1 326 1 102 1 356 1 145 2 33 1 105 1 210 1 61 1 166 1 106 1 37 2 17 1 38 1 369 1 172 2 272 1 324 1 378 1 304 1 197 1 346 1 384 2 
14 1 326 1 264 1 17 1 37 1 20 1 38 1 368 1 181 1 91 1 227 1 270 1 172 1 272 1 356 1 143 1 324 1 145 1 83 2 359 1 197 1 147 1 105 1 88 1 384 1 61 1 
23 1 
326 2 133 1 1 1 47 1 135 1 284 1 3 5 102 1 53 1 290 1 57 2 231 2 105 1 61 2 149 1 239 1 17 1 108 1 243 2 244 2 150 2 304 2 195 1 151 1 252 1 307 1 110 1 348 1 352 1 31 1 204 6 203 1 206 5 317 2 209 4 319 1 362 1 210 1 122 1 211 1 166 1 167 1 35 1 38 2 39 1 92 2 369 1 370 2 322 1 269 3 271 1 373 2 273 2 325 2 383 2 
110 1 133 1 149 1 47 1 39 1 138 1 352 1 3 3 108 1 322 1 31 1 269 1 204 2 53 1 203 1 290 1 206 3 317 1 209 2 319 1 307 1 211 1 
110 1 133 1 47 1 138 1 352 1 3 3 31 1 204 1 203 1 53 1 206 3 290 1 57 1 231 1 209 3 319 1 211 1 35 1 149 1 39 1 322 1 108 1 269 1 307 1 
110 1 133 1 47 1 138 1 352 1 3 3 31 1 203 1 53 1 204 2 206 3 290 1 317 1 57 1 231 1 209 3 319 1 211 1 35 1 149 1 39 1 92 1 322 1 108 1 269 1 307 1 
110 1 133 1 1 1 47 1 138 1 352 1 3 5 31 1 204 7 203 1 53 1 206 5 290 1 57 4 317 4 104 1 231 5 209 6 319 1 211 1 167 1 125 1 35 5 239 1 149 1 367 1 39 1 92 4 370 1 108 1 322 1 243 2 244 2 269 3 271 1 373 2 193 1 273 2 150 1 177 1 151 1 252 1 307 1 383 2 
110 1 133 1 47 1 1 1 352 1 3 4 31 1 204 4 203 1 53 1 206 4 290 1 57 2 317 2 231 2 209 4 319 1 362 1 211 1 167 1 35 1 149 1 239 1 39 1 92 2 370 1 108 1 322 1 243 2 269 2 244 2 271 1 373 2 273 2 150 1 325 2 151 1 252 1 307 1 383 2 
110 1 133 1 47 1 1 1 352 1 3 4 31 1 204 4 203 1 53 1 206 4 290 1 57 2 317 2 231 1 104 1 209 4 319 1 211 1 167 1 35 1 239 1 149 1 367 1 39 1 92 2 370 1 322 1 108 1 243 2 269 2 244 2 271 1 373 2 193 1 273 2 150 1 151 1 252 1 307 1 383 2 
110 1 133 1 47 1 1 1 352 1 3 4 31 1 204 4 203 1 53 1 206 4 290 1 57 2 317 2 231 1 104 1 209 4 319 1 211 1 167 1 35 1 239 1 149 1 367 1 39 1 92 2 370 1 322 1 108 1 243 2 269 2 244 2 271 1 373 2 193 1 273 2 150 1 151 1 252 1 307 1 383 2 
110 1 133 1 47 1 1 1 352 1 3 4 31 1 204 4 203 1 53 1 206 4 290 1 57 2 317 2 231 1 84 2 209 4 319 1 164 2 211 1 167 1 62 1 35 1 149 1 367 1 19 1 39 1 92 2 370 1 322 1 108 1 269 2 244 2 271 1 372 1 273 2 150 1 325 2 151 1 252 1 307 1 
110 1 133 1 1 1 47 1 352 1 3 4 31 1 203 1 53 1 204 5 206 4 290 1 317 3 57 3 231 1 104 1 209 5 319 1 211 1 167 1 35 1 125 1 239 1 149 1 367 1 39 1 92 3 370 1 322 1 108 1 243 2 269 2 244 2 271 1 373 2 193 1 273 2 150 1 151 1 252 1 307 1 383 2 
110 1 133 1 1 1 47 1 352 1 3 4 31 1 203 1 53 1 204 5 206 4 290 1 317 3 57 3 231 1 104 1 209 5 319 1 211 1 167 1 35 1 125 1 239 1 149 1 367 1 39 1 92 3 370 1 322 1 108 1 243 2 269 2 244 2 271 1 373 2 193 1 273 2 150 1 151 1 252 1 307 1 383 2 
110 1 133 1 47 1 1 1 352 1 3 4 31 1 204 4 203 1 53 1 206 4 290 1 57 2 317 2 231 1 84 2 209 4 319 1 362 1 164 2 211 1 167 1 35 1 149 1 19 1 39 1 92 2 370 1 108 1 322 1 269 2 244 2 271 1 273 2 150 1 325 2 151 1 252 1 307 1 
236 1 339 5 168 1 282 1 90 1 266 1 333 2 245 1 159 1 259 1 68 1 323 2 69 1 10 1 208 1 361 3 233 1 381 2 334 1 224 1 279 2 309 2 212 1 
28 11 0 1 29 1 134 11 282 1 327 2 199 1 183 1 112 2 156 3 333 6 114 1 205 1 259 2 103 1 316 1 10 2 334 2 361 8 212 1 236 2 339 14 266 2 63 1 217 3 192 1 375 4 68 2 194 1 323 4 381 1 279 2 309 1 
326 1 347 1 199 1 78 1 331 1 333 1 102 1 203 2 158 1 144 1 205 1 160 1 10 1 334 1 361 1 105 1 61 1 212 1 237 1 236 1 339 2 17 1 18 1 38 1 266 1 369 1 191 1 322 2 375 1 68 1 175 1 323 2 194 1 304 1 94 1 307 1 72 1 309 1 
326 1 134 6 282 5 327 2 183 1 333 13 53 1 102 2 6 2 144 2 103 2 10 3 233 2 334 3 105 2 190 1 61 1 236 3 237 2 339 27 15 1 18 1 17 2 64 2 245 1 68 3 194 1 304 1 72 1 307 1 254 2 309 3 347 1 28 6 312 1 199 1 257 2 112 2 203 3 159 1 158 1 205 1 259 5 160 2 361 14 212 3 168 1 90 2 38 1 266 3 215 1 369 2 322 3 375 6 323 6 224 2 94 2 381 6 277 2 279 7 
347 1 326 8 199 1 182 1 285 1 333 1 203 1 102 2 158 1 143 1 82 1 10 2 208 1 146 2 334 2 361 1 105 2 210 1 61 8 212 2 166 1 236 2 339 2 18 1 17 2 38 7 266 2 241 1 369 3 322 1 65 1 68 2 323 4 194 1 304 2 379 1 307 1 278 1 310 1 
28 1 256 1 134 1 282 1 327 1 2 1 112 1 333 2 203 1 158 1 205 1 259 1 103 1 10 1 334 1 361 1 212 1 236 1 339 3 18 1 266 1 322 1 375 1 68 1 323 2 306 1 381 1 307 1 279 1 
236 1 28 1 339 2 134 1 327 1 266 1 183 1 330 1 375 1 68 1 259 1 323 2 10 1 208 1 334 1 361 2 279 1 212 1 
236 1 28 1 339 2 134 1 282 1 266 1 333 2 228 1 375 1 68 1 103 1 323 2 10 1 208 1 381 1 334 1 279 1 212 1 
28 2 134 2 282 1 327 1 112 1 183 1 333 2 259 1 103 1 10 1 208 1 361 2 334 1 212 1 236 1 339 4 266 1 375 2 68 1 323 2 381 1 279 2 
236 1 28 1 339 2 134 1 327 1 266 1 183 1 241 1 330 1 375 1 68 1 259 1 323 2 10 1 334 1 361 2 279 1 212 1 
236 1 28 1 339 2 134 1 282 1 266 1 241 1 333 2 228 1 375 1 68 1 103 1 323 2 10 1 381 1 334 1 279 1 212 1 
28 2 134 2 282 1 327 1 112 1 183 1 333 2 259 1 103 1 10 1 361 2 334 1 212 1 236 1 339 4 266 1 241 1 375 2 68 1 323 2 381 1 279 2 
28 2 134 2 282 1 327 1 112 1 183 1 333 2 259 1 103 1 10 1 361 2 334 1 212 1 236 1 339 4 266 1 375 2 68 1 323 2 381 1 279 2 
326 1 199 1 333 1 102 1 203 1 144 1 160 1 10 1 361 1 334 1 105 1 61 1 212 1 237 1 236 1 339 2 17 1 38 1 266 1 369 1 322 1 68 1 323 2 194 1 304 1 94 1 254 1 309 1 
326 1 199 1 329 1 333 1 102 1 203 1 144 1 160 1 10 1 361 1 334 1 105 1 61 1 212 1 236 1 339 2 17 1 169 1 38 1 266 1 369 1 322 1 68 1 376 1 323 2 194 1 304 1 309 1 
28 2 134 2 282 1 327 1 112 1 183 1 333 2 259 1 205 1 103 1 10 1 361 2 334 1 212 1 236 1 339 4 266 1 375 2 68 1 323 2 381 1 279 2 
28 2 326 1 282 1 134 2 327 1 183 1 112 1 333 2 102 1 203 1 6 1 103 1 259 1 144 1 160 1 10 1 361 2 334 1 105 1 61 1 212 1 237 1 236 1 339 4 17 1 38 1 266 1 369 1 322 1 375 2 68 1 323 2 381 1 94 1 279 2 254 1 278 1 
28 1 256 1 282 1 134 1 327 1 183 1 112 1 333 1 203 1 158 1 103 1 205 1 259 1 10 1 261 1 334 1 361 2 212 1 236 1 339 3 18 1 266 1 322 1 375 1 68 1 323 2 306 1 307 1 279 1 
282 3 327 3 112 3 183 3 156 1 79 1 185 1 5 1 333 10 259 3 103 3 316 1 10 2 334 2 361 9 337 1 236 2 123 1 339 19 36 2 295 1 266 2 217 2 192 1 218 1 343 2 323 4 381 3 279 6 131 1 
282 2 30 1 327 3 200 1 183 2 112 3 156 2 185 2 5 2 186 1 333 12 259 3 103 2 316 2 10 3 334 3 361 14 337 1 236 3 339 26 36 4 295 1 296 1 266 3 40 1 217 2 218 1 343 1 323 6 381 2 71 1 308 2 279 4 131 1 
282 5 327 4 183 4 185 2 5 1 186 1 333 21 103 4 10 3 334 3 233 1 337 1 236 3 339 41 295 1 296 1 192 1 245 1 343 1 71 1 308 1 30 1 200 1 112 4 156 3 159 1 259 5 316 3 85 1 361 20 168 1 123 1 36 4 90 1 266 3 40 1 217 4 218 1 323 6 381 4 224 1 279 8 131 1 
282 4 30 1 327 4 200 1 112 4 183 3 156 3 185 2 5 1 186 1 333 18 159 1 259 5 103 3 316 3 85 1 10 4 233 1 334 4 361 20 337 1 236 4 123 1 168 1 339 38 36 4 90 1 295 1 296 1 266 4 40 1 217 4 245 1 192 1 218 1 343 1 323 8 224 1 71 1 381 4 308 2 279 7 131 1 
0 2 282 8 30 1 327 7 200 1 112 7 183 7 156 4 185 1 5 1 186 1 333 25 159 1 259 8 103 7 316 2 10 2 233 1 334 2 361 27 337 1 236 2 168 1 339 52 36 4 90 1 295 1 296 1 266 2 40 1 217 4 245 1 192 2 218 1 343 1 323 4 224 1 71 1 381 7 308 1 279 14 131 1 
250 1 288 1 96 1 342 1 265 1 99 1 120 1 268 1 128 1 253 1 
93 1 44 1 
202 1 250 1 288 1 55 1 99 1 268 1 128 1 42 1 253 1 
74 2 155 1 99 1 136 1 226 1 3 1 314 1 53 1 203 1 288 1 32 1 158 1 206 1 81 1 9 1 119 1 364 1 124 1 18 1 268 1 128 1 322 1 174 1 246 1 250 1 306 1 253 1 307 1 
74 2 155 1 99 1 136 1 226 1 3 1 314 1 53 1 203 1 288 1 32 1 158 1 206 1 81 1 9 1 119 1 364 1 124 1 18 1 268 1 128 1 322 1 174 1 246 1 250 1 306 1 253 1 307 1 
74 2 155 1 99 1 136 1 226 1 3 1 314 1 53 1 203 1 288 1 32 1 158 1 206 1 81 1 9 1 119 1 364 1 124 1 18 1 268 1 128 1 322 1 174 1 246 1 250 1 306 1 253 1 307 1 
117 1 251 1 214 1 
117 1 251 1 214 1 
340 1 286 1 
340 1 251 1 286 1 
7 1 127 1 
74 1 99 1 3 1 314 1 203 2 288 1 158 2 7 1 206 1 81 1 365 1 238 1 126 1 18 2 127 1 170 1 268 1 128 1 322 2 247 1 250 1 93 1 253 1 307 2 44 1 309 1 26 1 
117 1 214 1 
340 1 251 1 286 1 
326 2 311 1 199 1 137 1 285 1 157 1 333 1 102 1 203 2 205 1 86 1 10 1 146 2 334 1 361 1 105 1 163 1 61 2 212 1 236 1 339 2 17 1 38 2 266 1 369 1 322 2 68 1 323 2 194 1 307 2 310 1 
326 2 281 1 14 1 17 1 38 2 20 1 181 1 227 1 4 1 143 1 145 1 83 2 24 1 359 1 147 1 105 1 278 1 88 1 61 2 
326 1 281 1 14 1 17 1 38 1 20 1 181 1 350 1 227 1 143 1 145 1 83 2 359 1 147 1 105 1 88 1 61 1 
326 1 106 1 17 1 38 1 369 1 102 1 304 1 145 1 24 1 105 1 210 1 336 1 61 1 166 1 
326 1 281 1 14 1 17 1 38 1 20 1 181 1 227 1 4 1 143 1 145 1 83 2 24 1 359 1 147 1 105 1 88 1 61 1 
280 1 
35 1 150 1 69 1 231 1 178 1 297 1 370 1 
35 1 1 1 239 1 3 1 370 1 243 1 269 1 271 1 204 1 373 1 206 1 150 1 325 1 231 2 151 1 383 1 167 1 
326 3 283 2 1 4 282 2 135 1 327 2 3 5 102 3 54 1 188 2 144 3 103 2 230 2 231 8 232 6 105 4 11 2 61 3 17 3 240 2 297 1 64 2 248 2 150 8 304 1 195 2 151 4 112 2 77 1 353 3 204 5 259 2 206 5 260 1 357 1 118 2 161 2 319 2 167 4 35 2 38 3 369 10 370 9 41 1 269 3 271 4 219 2 377 1 325 12 178 1 274 6 278 1 95 2 383 6 
1 2 282 2 135 1 30 1 327 2 112 2 156 1 3 1 186 1 187 1 204 1 259 2 103 2 230 1 206 1 316 1 231 5 232 5 167 2 35 2 296 1 40 1 370 8 301 1 269 1 217 1 271 2 248 2 150 5 195 1 325 6 274 5 151 2 71 1 383 3 
1 1 282 1 136 1 226 1 3 1 53 1 203 1 158 1 259 2 230 1 206 1 233 1 190 1 167 1 364 1 124 1 90 1 18 1 322 1 370 2 271 1 248 2 193 1 150 2 151 1 306 1 224 1 307 1 
35 1 1 1 297 1 370 1 271 1 150 1 178 1 231 1 151 1 167 1 
282 2 327 2 112 2 64 1 370 5 248 2 259 2 103 2 230 1 150 5 325 10 274 5 231 5 232 5 383 5 
204 1 35 1 206 1 231 1 3 1 269 1 
326 4 46 1 1 1 135 2 284 1 3 3 102 1 204 4 206 3 260 2 357 1 262 1 105 1 210 1 122 1 167 2 61 4 166 1 17 1 38 4 369 1 370 2 302 1 269 2 271 2 150 2 304 2 195 2 151 2 
326 1 333 1 203 3 102 1 158 2 144 1 160 1 10 1 334 1 105 1 61 1 212 1 237 1 236 1 339 1 124 1 18 2 17 1 38 1 266 1 242 1 369 1 322 3 68 1 194 1 323 2 304 1 306 2 94 1 307 2 254 1 309 1 
35 2 1 1 135 1 370 1 271 1 159 1 150 2 325 4 195 1 274 2 231 4 151 1 232 2 383 2 167 1 
99 1 253 1 180 1 
7 1 99 1 120 1 253 1 13 1 
99 1 253 1 180 1 
99 1 253 1 180 1 
99 1 176 1 253 1 
99 1 176 1 253 1 
99 1 176 1 253 1 
99 1 253 1 
250 1 268 1 
282 3 183 3 333 8 159 1 259 3 10 2 334 2 361 9 233 2 190 1 236 2 168 1 339 17 90 2 266 2 245 1 323 4 224 2 381 4 308 1 279 7 
168 1 339 5 282 1 90 1 333 2 245 1 159 1 259 1 69 1 224 1 381 2 233 1 361 3 279 2 
236 1 339 4 282 1 327 1 266 1 112 1 183 1 333 2 374 1 103 1 259 1 323 2 10 1 381 1 334 1 361 2 279 2 
339 7 282 1 327 1 112 1 183 1 156 1 217 2 333 4 192 1 103 1 259 1 316 1 381 1 361 3 279 2 
0 1 282 5 327 2 112 2 183 2 156 2 333 12 159 1 103 2 259 5 10 1 233 2 361 13 334 1 190 1 236 1 168 1 339 25 90 2 266 1 63 1 217 2 245 1 192 1 323 2 224 2 381 5 308 1 279 7 
333 1 339 1 217 1 
339 1 156 1 361 1 
236 1 339 6 282 1 327 1 266 1 112 1 183 1 64 1 333 3 374 1 259 1 103 1 323 2 10 1 334 1 361 3 381 2 279 3 
282 2 30 1 327 2 183 1 112 2 156 1 186 1 333 6 259 2 103 2 316 1 10 1 334 1 361 6 236 1 339 12 266 1 296 1 40 1 217 1 218 1 323 2 71 1 381 1 279 2 
339 6 282 1 90 1 183 1 333 3 259 1 233 1 361 3 224 1 381 1 279 2 
236 1 339 3 168 1 90 1 266 1 183 1 245 1 333 2 323 2 116 1 10 1 361 1 381 1 224 1 334 1 308 1 279 2 
236 1 339 10 282 2 90 2 266 1 183 2 333 5 259 2 218 1 323 2 10 1 334 1 224 2 381 3 361 5 233 1 190 1 279 5 
236 1 339 2 327 1 266 1 183 1 259 1 218 1 323 2 10 1 334 1 361 2 279 1 
236 1 339 4 282 1 327 1 266 1 112 1 183 1 333 2 103 1 259 1 218 1 323 2 10 1 381 1 334 1 361 2 279 2 
236 3 123 1 339 3 90 1 266 3 183 1 333 2 218 1 323 6 116 1 10 3 334 3 224 1 381 1 361 1 308 1 279 2 
282 5 327 2 112 2 183 4 156 3 313 1 333 15 159 1 259 5 103 2 316 1 207 1 10 4 233 2 334 4 361 16 190 1 236 4 168 1 123 1 339 31 90 2 266 4 217 3 109 1 245 1 374 1 218 1 323 8 224 2 381 5 308 1 279 9 
282 3 183 1 156 1 333 7 159 1 259 3 316 1 10 1 334 1 361 8 233 2 190 1 236 1 339 15 168 1 90 2 266 1 40 1 217 1 245 1 218 1 323 2 224 2 381 4 279 5 
282 3 327 1 112 1 183 2 156 1 333 8 159 1 259 4 316 1 10 2 233 2 334 2 361 10 190 1 236 2 168 1 339 18 90 2 266 2 40 1 217 2 245 1 192 1 374 1 218 1 323 4 381 4 224 2 279 6 
282 5 30 1 327 2 183 2 112 2 156 1 186 1 333 13 159 1 259 5 103 2 316 1 10 3 233 2 334 3 361 13 190 1 236 3 168 1 339 26 90 2 296 1 266 3 40 1 217 1 245 1 374 1 218 1 323 6 224 2 71 1 381 5 308 1 279 7 
282 4 30 1 327 2 183 4 112 2 156 1 186 1 333 10 159 1 259 5 103 1 316 1 10 3 233 2 334 3 361 14 190 1 236 3 168 1 339 24 90 2 266 3 296 1 40 1 217 1 245 1 374 1 218 1 323 6 224 2 71 1 381 5 308 1 279 9 
282 3 183 1 156 1 333 7 159 1 259 3 316 1 10 1 334 1 361 8 233 2 190 1 236 1 339 15 168 1 90 2 266 1 40 1 217 1 245 1 218 1 323 2 224 2 381 4 279 5 
282 2 30 1 327 2 183 1 112 2 156 1 186 1 333 6 259 2 103 2 316 1 10 1 334 1 361 6 236 1 339 12 266 1 296 1 40 1 217 1 218 1 323 2 71 1 381 1 279 2 
282 4 30 1 327 2 183 2 112 2 156 1 186 1 333 11 159 1 259 5 103 1 316 1 10 4 233 2 334 4 361 14 190 1 236 4 168 1 339 25 90 2 296 1 266 4 40 1 217 1 245 1 374 1 218 1 323 8 224 2 71 1 381 5 308 2 279 7 
282 2 30 1 327 3 183 3 112 3 156 1 186 1 333 7 259 3 103 2 316 1 10 4 334 4 361 9 236 4 339 16 123 1 296 1 266 4 40 1 217 1 218 1 323 8 71 1 381 3 308 2 279 6 
339 7 168 1 282 1 90 3 183 3 333 4 245 2 259 1 224 3 381 3 233 1 361 3 279 6 
282 4 30 1 327 2 183 2 112 2 156 1 186 1 333 11 159 1 259 5 103 1 316 1 10 4 233 2 334 4 361 14 190 1 236 4 168 1 339 25 123 1 90 2 296 1 266 4 40 1 217 1 245 1 218 1 323 8 224 2 71 1 381 5 308 2 279 7 
303 1 203 1 8 1 322 1 307 1 108 1 309 1 
154 1 100 1 108 1 322 1 303 1 203 1 8 1 56 1 344 1 223 1 307 1 309 1 
102 1 326 1 17 1 69 1 38 1 304 1 369 1 105 1 210 1 166 1 61 1 
347 1 326 1 18 1 17 1 38 1 369 1 322 2 102 1 203 2 158 1 144 1 160 1 304 1 94 1 105 1 307 1 309 1 61 1 
347 1 326 1 133 1 18 2 17 1 38 1 39 1 369 3 322 2 53 1 102 2 203 2 188 1 158 1 144 2 160 1 260 1 94 1 105 1 307 2 95 1 309 1 61 1 
326 2 347 1 133 1 329 1 203 2 102 2 53 1 158 1 188 1 144 2 160 1 260 1 105 1 61 2 366 1 17 1 18 2 38 2 39 1 369 3 322 2 307 2 95 1 309 1 
326 3 353 1 3 2 204 1 102 1 188 1 144 1 206 2 260 1 161 1 231 1 319 1 105 1 61 3 366 1 35 1 17 1 38 3 369 4 304 1 95 1 198 1 132 1 
326 3 366 1 35 1 17 1 38 3 240 1 353 1 369 4 3 2 102 1 204 1 188 1 144 1 206 2 260 1 304 1 161 1 231 1 319 1 105 1 95 1 61 3 
326 1 17 1 82 1 38 1 105 1 61 1 
326 7 73 1 17 2 38 6 182 1 21 1 285 1 369 3 65 1 355 1 102 2 54 1 143 1 144 1 82 1 304 2 379 1 146 1 105 3 278 1 61 7 
326 1 282 3 183 1 333 6 53 1 102 1 6 1 144 1 10 2 334 2 233 2 105 1 190 1 61 1 237 1 236 2 339 13 18 1 17 1 245 1 68 2 307 1 254 1 309 3 347 1 311 1 203 2 158 1 159 1 205 1 259 3 160 1 361 7 212 2 168 1 90 2 38 1 266 2 215 1 369 1 322 2 323 4 94 1 224 2 381 4 277 1 278 1 279 5 
326 1 1 2 283 1 353 1 3 3 204 2 206 3 357 1 118 1 161 1 231 1 319 1 11 1 167 2 61 1 35 1 238 1 38 1 240 1 297 1 369 2 370 1 269 1 271 2 150 1 304 1 178 1 151 2 
102 1 326 2 54 1 144 1 17 1 82 1 38 2 161 1 369 2 105 2 41 1 278 1 61 2 
326 4 366 1 17 1 38 4 369 1 102 1 304 1 58 1 105 1 210 1 278 1 61 4 166 1 
338 1 326 2 17 1 38 2 21 1 369 1 332 1 355 1 102 1 144 1 260 1 152 1 105 2 61 2 
326 1 17 1 38 1 304 1 83 1 359 1 227 1 105 1 88 1 61 1 
102 1 326 2 143 1 17 1 38 2 369 1 285 1 157 1 105 1 278 1 61 2 
326 5 17 2 38 4 182 1 285 1 369 3 65 1 102 2 260 1 304 1 58 1 210 1 105 2 278 1 166 1 61 5 
326 5 75 1 17 2 38 4 182 1 285 1 369 3 102 2 260 1 304 1 58 1 210 1 105 2 278 1 166 1 61 5 
347 1 326 1 18 1 17 1 38 1 329 1 369 1 322 2 102 1 203 2 158 1 144 1 160 1 304 1 105 1 307 1 309 1 61 1 
326 1 73 1 17 1 38 1 21 1 369 1 355 1 102 1 54 1 144 1 260 1 105 2 61 1 
225 1 97 1 221 1 300 1 309 1 
27 1 110 1 321 1 35 1 133 1 238 1 97 1 225 2 39 1 300 2 3 2 22 1 53 1 206 2 231 1 221 2 319 1 309 1 60 1 
225 1 97 1 137 1 322 1 203 1 86 1 221 1 163 1 307 1 
27 1 97 1 22 1 
80 1 69 1 299 1 59 1 
272 1 356 1 80 1 324 1 299 1 197 1 59 1 
356 1 37 1 384 1 
264 1 299 1 249 1 272 1 258 2 356 3 80 1 324 1 360 1 197 3 335 1 59 1 
272 1 356 2 80 1 324 1 299 1 197 2 50 1 59 1 165 1 
272 1 356 1 264 1 324 1 83 1 181 1 162 1 299 1 197 1 227 1 51 1 
272 1 356 1 264 1 324 1 299 1 197 1 59 1 
272 1 356 1 264 1 80 1 324 1 197 1 59 2 
264 1 113 1 299 1 272 2 356 2 324 2 197 2 380 1 276 1 59 1 
264 1 16 1 201 1 299 2 51 1 272 1 356 3 80 1 324 1 197 3 179 1 59 1 165 2 
264 1 181 1 299 1 227 1 272 1 356 2 80 1 324 1 83 2 197 2 147 1 59 1 165 1 88 1 263 1 
264 1 299 2 50 1 51 1 272 2 356 4 141 1 80 1 324 2 197 4 179 1 59 1 165 2 
272 1 356 1 264 1 80 1 324 1 299 1 197 1 59 1 
299 3 51 1 258 1 272 1 356 4 115 1 80 2 324 1 360 1 197 4 335 1 179 1 59 2 165 2 
264 1 351 1 48 1 299 1 272 1 356 2 80 1 324 1 275 1 197 2 59 1 165 1 
264 1 171 1 299 1 272 1 258 2 356 3 80 1 324 1 360 2 197 3 335 1 59 1 
213 2 130 1 101 1 299 2 
272 1 356 1 264 1 324 1 298 1 197 1 
272 1 356 2 264 1 80 1 324 1 299 1 201 1 197 2 59 1 165 1 
107 1 
272 1 356 1 264 1 80 1 324 1 299 1 197 1 59 1 
264 1 299 1 201 1 272 1 258 1 356 3 80 1 324 1 197 3 165 1 59 1 
115 1 299 1 179 1 51 1 
299 1 59 1 

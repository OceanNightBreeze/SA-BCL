#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 147 307 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 147 307 53 73 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 119 90 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | RETURN | 3812 | return null
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 126 1 0 1 3 9 247 3 266 5 194 2 223 2 288 1 31 2 314 1 368 1 108 9 342 2 109 1 318 1 136 1 345 4 178 2 254 1 233 2 294 6 20 1 257 1 168 1 22 2 238 1 208 1 
303 1 126 1 0 1 3 9 247 3 266 5 194 2 223 2 288 1 31 2 314 1 342 2 368 1 108 9 109 1 318 1 136 1 345 4 178 2 254 1 233 2 294 6 20 1 257 1 168 1 22 2 238 1 208 1 
303 1 126 1 0 1 3 10 247 4 266 6 194 2 223 2 288 1 31 2 314 1 342 2 368 1 108 10 109 1 318 1 136 1 345 5 178 2 254 1 233 2 294 7 20 1 257 1 168 1 22 2 238 1 208 1 
303 1 126 1 0 1 3 7 247 2 266 4 194 2 223 2 288 1 31 2 314 1 342 2 368 1 108 7 318 1 136 1 345 3 178 2 254 1 233 2 294 4 20 1 257 1 168 1 22 1 238 1 208 1 
345 2 178 1 254 1 3 4 247 1 266 3 233 1 294 3 257 1 22 2 223 1 194 1 238 1 314 1 108 4 342 1 109 1 318 1 
303 1 189 1 178 1 62 1 254 1 3 2 266 1 233 1 18 1 20 1 257 1 194 1 223 1 31 1 108 2 318 1 
345 1 257 1 126 1 194 2 31 1 254 1 3 3 266 2 247 1 108 3 233 2 294 1 318 1 
345 4 178 1 126 1 254 1 3 9 266 5 247 3 233 2 294 7 257 1 22 2 223 1 238 1 288 1 194 2 208 1 31 1 314 1 342 1 108 9 369 1 109 1 244 1 318 1 
345 4 178 1 126 1 254 1 3 9 266 5 247 3 233 2 294 7 257 1 22 2 223 1 238 1 288 1 194 2 208 1 31 1 314 1 342 1 108 9 369 1 109 1 244 1 318 1 
32 1 370 1 205 1 
332 1 203 2 370 1 
291 2 77 1 277 2 183 2 248 2 202 2 367 1 161 2 
77 1 125 1 248 3 309 1 311 1 287 1 6 1 174 1 57 1 367 1 133 2 161 2 60 1 85 1 175 1 371 1 252 1 291 3 63 2 64 1 347 1 373 1 202 2 140 1 375 2 206 1 143 1 326 1 122 1 46 1 277 2 183 2 23 1 241 1 263 2 245 2 187 1 
337 1 291 1 131 1 114 1 277 1 183 1 248 1 202 1 367 1 161 1 
173 1 14 1 88 1 291 1 96 1 2 1 248 1 275 1 205 1 315 1 131 1 132 1 277 1 370 1 
173 1 14 1 291 1 96 1 2 2 202 1 248 1 205 1 132 2 315 1 131 1 183 1 277 1 370 1 161 1 
132 1 2 1 163 1 220 1 226 1 
322 1 132 2 2 2 163 1 290 1 220 1 370 1 205 1 
132 1 2 1 220 1 
291 1 2 1 114 1 163 1 202 1 248 1 337 1 258 1 131 1 132 1 183 1 277 1 367 1 161 1 
370 1 
322 1 181 1 132 2 2 2 163 1 220 1 370 1 205 1 
355 1 322 1 323 1 2 5 97 1 163 2 220 2 205 1 30 2 365 1 56 1 132 5 341 1 10 1 225 1 370 1 93 1 300 2 94 2 
77 1 32 1 
291 2 77 2 248 2 202 1 157 1 351 1 277 2 183 1 161 1 
331 1 100 1 102 1 
371 1 291 1 77 1 64 1 248 1 375 1 311 1 6 1 71 1 174 1 46 1 241 1 133 1 245 1 60 1 175 1 
331 1 371 1 124 1 291 2 64 1 202 1 248 2 375 1 311 1 6 1 174 1 46 1 183 1 277 1 241 1 262 1 133 1 60 1 245 1 175 1 
291 3 77 1 277 3 183 3 248 3 202 3 262 1 161 1 
337 1 291 1 131 1 277 1 183 1 248 1 202 1 
291 1 157 1 131 1 351 1 277 1 183 1 248 1 202 1 161 1 
173 1 124 1 77 1 125 1 96 1 2 1 248 4 309 1 311 1 6 1 157 1 174 1 315 1 131 1 132 1 367 1 133 1 161 2 60 1 343 1 175 1 371 1 14 1 291 4 89 1 63 1 64 1 347 1 373 1 202 3 140 1 375 1 206 1 143 1 326 1 122 1 46 1 277 3 183 3 23 1 241 1 262 1 263 2 245 1 
291 2 77 1 195 1 277 2 183 1 248 2 202 1 275 1 262 1 
173 1 14 1 124 1 291 3 89 1 96 1 2 1 202 3 248 3 157 1 132 1 131 1 327 1 315 1 183 3 277 3 262 2 161 1 370 1 
331 1 291 2 202 2 248 2 102 1 157 1 183 2 277 2 262 1 161 1 
371 1 291 1 77 1 64 1 248 1 375 1 311 1 6 1 174 1 46 1 241 1 133 1 245 1 60 1 175 1 
371 1 291 1 77 1 64 1 217 1 248 1 375 1 311 1 46 1 241 1 133 1 245 1 301 1 60 1 175 1 
331 1 125 2 281 1 309 1 287 1 100 1 102 1 160 1 198 1 199 1 319 1 110 1 137 1 63 3 347 1 37 1 373 1 167 1 206 1 147 1 326 1 23 1 263 2 185 1 
291 1 96 1 131 1 277 1 183 1 316 1 248 1 202 1 
291 5 124 1 77 1 202 4 248 5 275 1 115 1 157 1 195 1 183 4 277 5 262 2 11 1 161 1 
337 1 291 2 131 1 316 1 277 2 183 2 248 2 202 2 
120 1 15 1 
120 1 15 1 
130 1 92 1 
130 1 92 1 
130 1 92 1 
120 1 15 1 219 1 
120 1 15 1 219 1 
120 1 15 1 242 1 
130 1 120 2 289 1 15 2 171 1 92 1 
120 1 15 1 219 1 
120 1 15 1 232 1 
120 1 15 1 232 1 
120 1 15 1 232 1 
304 1 231 1 138 2 15 2 2 2 28 3 286 2 144 1 70 1 21 1 120 2 9 1 104 2 45 1 132 2 76 2 171 1 370 1 58 2 
304 1 77 1 2 1 248 2 283 1 28 1 286 1 29 1 362 1 82 1 104 1 132 1 106 1 58 1 291 2 15 1 202 2 120 1 183 2 277 2 76 1 75 1 376 1 242 1 
178 1 223 1 342 1 
178 1 223 1 18 1 
44 1 223 3 1 1 342 2 228 1 18 1 
87 1 44 1 223 2 1 1 342 1 18 1 
44 1 223 2 1 2 342 1 18 1 
355 1 27 1 2 5 220 1 307 1 285 1 360 2 156 1 269 1 192 1 30 1 82 1 365 1 106 1 132 5 366 1 225 3 370 1 110 1 321 1 137 1 322 1 163 4 203 1 205 1 41 1 167 1 147 1 75 1 300 1 94 1 
355 1 27 3 51 1 357 1 246 1 2 9 220 6 307 3 285 1 30 2 56 1 340 1 365 3 132 9 366 3 225 8 226 5 370 2 110 3 321 2 137 3 322 1 163 7 203 3 205 1 141 5 117 1 41 2 167 3 147 3 75 4 300 2 49 1 94 2 
27 1 332 1 2 3 360 1 307 1 269 1 192 1 30 1 56 1 365 1 132 3 366 1 225 3 370 2 110 1 321 1 137 1 163 2 203 2 205 1 41 1 167 1 147 1 75 1 300 1 94 1 
27 2 51 1 357 1 332 1 2 4 360 2 307 2 269 1 192 1 30 1 56 1 365 2 132 4 366 2 225 5 370 2 110 2 321 1 137 2 163 3 203 3 205 1 41 1 167 2 147 2 75 2 300 1 49 1 94 1 
214 1 64 1 32 1 
64 1 84 1 
374 1 
64 1 241 1 
214 2 64 2 374 1 310 1 311 1 7 1 241 1 
311 1 64 1 241 1 
64 1 344 1 
86 2 125 1 265 1 63 4 139 1 37 3 128 1 39 1 155 1 167 1 54 1 287 3 296 1 119 1 319 2 212 1 
86 2 125 1 265 1 63 4 139 1 37 3 128 1 39 1 155 1 167 1 54 1 287 3 296 1 119 1 319 2 212 1 
86 2 125 1 265 1 63 4 139 1 37 3 154 1 128 1 39 1 155 1 167 1 54 1 287 3 296 1 119 1 319 2 212 1 
279 1 125 13 265 1 334 1 307 3 309 1 128 2 155 2 54 2 287 12 105 1 319 4 110 3 229 1 137 3 86 3 63 25 139 2 37 6 373 1 255 1 39 1 165 3 325 4 167 4 296 2 147 3 119 1 207 1 326 1 297 1 23 1 263 2 212 1 
279 1 86 2 125 2 63 6 139 1 37 4 373 2 128 1 309 2 39 1 155 1 221 1 167 1 54 1 287 4 296 1 119 1 326 2 151 1 23 2 263 4 212 1 319 3 
215 1 3 2 266 1 127 1 194 1 223 2 31 1 342 1 133 1 108 2 250 1 60 1 228 1 318 1 274 1 178 1 254 1 233 1 294 1 375 1 18 1 42 1 257 1 209 1 121 1 240 1 46 1 298 1 24 1 245 1 
215 1 3 3 266 1 127 1 361 1 194 1 223 2 31 1 342 1 133 1 108 3 228 1 60 1 318 1 176 1 274 1 178 1 254 1 233 1 294 2 375 1 18 1 209 1 121 1 240 1 46 1 299 1 298 1 24 1 245 1 
176 1 178 1 215 1 254 1 3 2 266 1 294 2 375 1 18 1 223 2 31 1 121 1 209 1 46 1 240 1 298 1 299 1 342 1 24 1 108 2 133 1 228 1 60 1 245 1 318 1 
50 1 123 1 215 2 3 1 361 1 194 1 31 2 133 1 108 1 60 1 175 1 35 1 61 1 64 1 233 1 375 1 209 2 182 1 240 2 150 1 46 1 241 1 245 1 
215 1 3 1 127 1 194 1 223 2 31 1 342 1 133 1 108 1 250 1 60 1 228 1 176 1 274 1 178 1 233 1 375 1 18 1 257 1 209 1 121 1 240 1 46 1 298 1 24 1 245 1 
324 1 
153 2 332 2 280 1 96 1 2 5 248 1 338 2 339 1 197 4 60 1 14 1 291 1 112 1 61 1 346 1 113 1 64 1 164 2 203 2 205 1 256 2 74 2 264 1 300 1 213 1 354 1 173 1 355 1 220 6 308 1 129 1 30 1 365 2 132 5 315 1 131 1 225 2 133 2 370 2 175 2 321 1 322 3 88 1 275 1 375 2 40 2 145 2 148 1 150 1 46 1 47 1 277 1 241 1 245 2 94 1 
173 1 14 1 322 1 88 1 291 1 346 1 96 1 113 1 280 1 2 3 220 2 248 1 275 1 308 1 145 1 181 1 131 1 132 3 315 1 197 2 47 1 277 1 
173 1 153 1 280 1 96 1 2 3 220 1 248 1 308 1 315 1 132 3 131 1 197 3 370 1 14 1 322 1 291 1 88 1 346 1 113 1 275 1 205 1 181 1 277 1 47 1 
173 1 153 1 280 1 96 1 2 3 248 1 220 2 308 1 315 1 132 3 131 1 197 3 370 1 14 1 322 1 291 1 88 1 346 1 113 1 275 1 205 1 40 1 145 1 181 1 277 1 47 1 
153 4 96 1 280 1 332 2 2 5 248 1 193 1 338 2 197 6 14 1 291 1 346 1 112 1 113 1 164 2 205 5 256 2 166 1 74 2 300 1 173 1 355 1 220 7 308 1 30 1 365 1 131 1 315 1 132 5 225 1 370 5 322 3 88 1 275 1 40 4 236 1 145 4 148 1 181 1 47 1 277 1 184 1 188 1 94 1 
153 2 96 1 280 1 332 2 2 4 248 1 338 2 197 4 14 1 291 1 346 1 112 1 113 1 164 2 203 2 205 1 256 2 74 2 300 1 264 1 173 1 355 1 220 4 308 1 30 1 365 1 131 1 315 1 132 4 225 1 370 2 322 2 88 1 275 1 40 2 145 2 148 1 277 1 47 1 94 1 
173 1 355 1 153 2 332 2 280 1 96 1 2 4 220 4 248 1 308 1 193 1 30 1 338 2 365 1 315 1 132 4 131 1 197 4 225 1 370 1 14 1 322 2 291 1 88 1 112 1 346 1 113 1 164 2 275 1 205 1 40 2 256 2 166 1 145 2 148 1 74 2 277 1 47 1 300 1 188 1 94 1 
173 1 355 1 153 2 332 2 280 1 96 1 2 4 220 4 248 1 308 1 193 1 30 1 338 2 365 1 315 1 132 4 131 1 197 4 225 1 370 1 14 1 322 2 291 1 88 1 112 1 346 1 113 1 164 2 275 1 205 1 40 2 256 2 166 1 145 2 148 1 74 2 277 1 47 1 300 1 188 1 94 1 
173 1 355 1 153 2 358 1 280 1 96 1 2 4 220 4 248 1 308 1 335 1 30 1 365 1 315 1 132 4 131 1 197 4 225 1 370 1 134 2 135 2 14 1 322 2 291 1 88 1 112 1 346 1 113 1 203 2 275 1 205 1 40 2 256 2 166 1 145 2 74 2 277 1 47 1 300 1 330 1 94 1 
173 1 355 1 153 3 332 2 280 1 96 1 2 4 248 1 220 5 308 1 193 1 30 1 338 2 365 1 315 1 132 4 131 1 197 5 225 1 370 1 14 1 322 2 291 1 88 1 112 1 346 1 113 1 164 2 275 1 205 1 256 2 40 3 166 1 145 3 148 1 74 2 277 1 47 1 184 1 300 1 94 1 188 1 
173 1 355 1 153 3 332 2 280 1 96 1 2 4 248 1 220 5 308 1 193 1 30 1 338 2 365 1 315 1 132 4 131 1 197 5 225 1 370 1 14 1 322 2 291 1 88 1 112 1 346 1 113 1 164 2 275 1 205 1 256 2 40 3 166 1 145 3 148 1 74 2 277 1 47 1 184 1 300 1 94 1 188 1 
173 1 355 1 153 2 280 1 96 1 358 1 2 4 220 4 248 1 308 1 30 1 365 1 132 4 315 1 131 1 197 4 225 1 370 1 134 2 135 2 14 1 322 2 88 1 291 1 112 1 346 1 113 1 203 2 275 1 205 1 40 2 256 2 145 2 74 2 47 1 277 1 264 1 300 1 94 1 
331 1 86 1 125 1 77 1 63 3 139 1 347 1 37 2 373 1 309 1 39 1 167 1 206 1 54 1 100 1 287 2 102 1 119 1 326 1 160 1 32 1 23 1 263 2 319 2 212 1 
331 10 26 1 77 1 305 1 125 8 356 1 334 1 307 2 309 2 268 1 336 1 100 10 287 6 102 2 57 1 319 1 110 2 137 2 63 14 347 2 37 1 373 2 165 3 325 3 206 1 167 2 147 2 207 1 326 2 122 1 23 2 263 4 
26 1 124 1 77 1 125 1 248 2 309 1 311 1 6 1 287 1 102 1 158 1 174 1 57 1 133 1 59 1 60 1 175 1 371 1 291 2 64 1 63 2 347 1 373 1 202 1 375 1 206 1 71 1 326 1 239 1 46 1 122 1 277 1 183 1 241 1 23 1 262 1 245 1 263 2 
331 5 333 1 248 3 54 1 6 2 100 5 287 7 102 5 57 1 60 2 110 2 292 1 291 3 63 15 64 2 347 3 202 1 206 3 167 3 119 1 169 2 122 1 23 3 262 1 263 6 212 1 124 1 26 1 77 1 125 8 307 2 309 3 311 2 174 2 271 2 133 1 175 1 319 4 371 2 137 2 86 1 139 1 37 4 373 3 39 1 375 1 38 2 143 2 147 2 326 3 46 2 183 1 277 1 241 2 245 1 278 2 
125 1 216 1 190 1 99 1 248 1 309 2 363 1 287 1 55 1 160 1 57 1 133 8 60 2 175 2 176 1 252 2 291 1 61 1 64 3 63 2 347 2 202 1 373 2 17 1 375 8 42 1 206 2 326 2 46 2 122 1 150 1 277 1 183 1 23 2 241 2 262 1 245 7 263 4 172 1 
291 1 26 1 63 2 347 1 248 1 202 1 373 1 307 1 309 1 167 1 206 1 287 2 146 1 147 1 157 1 326 1 277 1 183 1 23 1 161 1 263 2 
63 1 347 1 373 1 309 1 206 1 167 1 287 1 147 1 326 1 160 1 23 1 198 1 263 2 
331 1 137 1 125 2 63 2 347 1 37 1 373 1 309 1 206 1 100 1 102 1 326 1 160 1 23 1 263 2 319 1 199 1 110 1 
331 1 125 2 307 1 309 1 287 1 100 1 102 1 160 1 319 1 110 1 137 1 63 3 347 1 37 1 373 1 167 1 206 1 147 1 326 1 23 1 263 2 
63 1 347 1 373 1 309 1 206 1 167 1 287 1 147 1 55 1 326 1 23 1 198 1 263 2 
331 1 137 1 125 2 63 2 347 1 37 1 373 1 309 1 206 1 100 1 102 1 55 1 326 1 23 1 263 2 319 1 199 1 110 1 
331 1 125 2 307 1 309 1 287 1 100 1 102 1 55 1 319 1 110 1 137 1 63 3 347 1 37 1 373 1 167 1 206 1 147 1 326 1 23 1 263 2 
331 1 137 1 125 2 63 3 347 1 37 1 373 1 307 1 309 1 206 1 167 1 100 1 287 1 102 1 147 1 326 1 23 1 263 2 319 1 110 1 
77 1 125 1 248 1 309 1 311 1 287 1 6 1 174 1 57 1 133 1 60 1 175 1 371 1 291 1 63 2 64 1 347 1 373 1 375 1 143 1 206 1 326 1 46 1 122 1 241 1 23 1 245 1 263 2 
77 1 125 1 217 1 248 1 309 1 267 1 311 1 287 1 57 1 133 1 60 1 175 1 371 1 291 1 63 2 64 1 347 1 373 1 375 1 206 1 326 1 46 1 122 1 241 1 23 1 301 1 245 1 263 2 
331 1 26 1 125 2 307 1 309 1 287 1 100 1 102 1 319 1 110 1 137 1 63 3 347 1 37 1 373 1 167 1 206 1 147 1 326 1 23 1 263 2 
331 1 125 2 248 1 307 1 309 1 311 1 100 1 287 1 6 1 102 1 174 1 133 1 60 1 319 1 110 1 371 1 137 1 291 1 63 3 64 1 347 1 37 1 373 1 375 1 167 1 143 1 42 1 206 1 147 1 169 1 326 1 46 1 241 1 23 1 245 1 263 2 
26 1 125 1 248 1 307 1 309 1 287 1 157 1 161 1 110 1 137 1 291 1 63 2 347 1 373 1 202 1 116 1 206 1 167 1 147 1 326 1 183 1 277 1 23 1 263 2 
302 1 152 1 125 8 334 1 359 1 307 2 309 2 287 5 313 1 272 1 227 1 319 1 110 2 137 2 63 13 16 2 37 1 373 2 165 1 325 2 167 2 147 2 207 1 326 2 151 1 210 1 23 2 263 4 
302 1 152 1 125 8 334 1 359 1 307 2 309 2 287 5 313 1 272 1 227 1 319 1 110 2 137 2 63 13 16 2 37 1 373 2 165 1 325 2 167 2 147 2 207 1 326 2 151 1 210 1 23 2 263 4 
302 1 78 1 305 2 125 22 334 2 359 1 307 7 53 1 309 1 54 1 287 17 313 1 272 1 227 1 319 6 110 7 137 7 86 1 162 1 63 39 139 1 16 3 37 6 373 1 39 1 165 4 325 4 167 8 147 7 119 1 259 1 72 1 73 1 207 2 326 1 151 1 210 1 23 1 263 2 212 1 
302 1 152 1 125 7 334 1 359 1 307 2 309 2 4 1 287 4 313 1 272 1 319 2 110 2 137 2 63 11 16 1 37 2 373 2 165 1 325 2 167 2 147 2 207 1 326 2 151 1 210 1 23 2 263 4 
302 1 279 1 78 1 125 14 359 1 307 3 309 2 53 1 287 10 313 1 272 2 227 1 319 1 110 3 137 3 162 1 63 24 37 1 16 4 373 2 165 2 325 2 167 3 147 3 259 1 72 1 207 2 73 1 326 2 151 1 210 2 23 2 263 4 
21 1 120 1 231 1 104 1 15 1 76 1 171 1 58 1 353 1 286 1 
362 1 242 1 
120 1 364 1 104 1 15 1 218 1 76 1 243 1 58 1 286 1 
304 1 231 1 138 1 2 1 15 1 28 2 286 1 144 1 21 1 120 1 9 1 104 1 45 1 132 1 76 1 171 1 370 1 58 1 
304 1 231 1 138 1 2 1 15 1 28 2 286 1 144 1 21 1 120 1 9 1 104 1 45 1 132 1 76 1 171 1 370 1 58 1 
304 1 231 1 138 1 2 1 15 1 28 2 286 1 144 1 21 1 120 1 9 1 104 1 45 1 132 1 76 1 171 1 370 1 58 1 
289 1 219 1 191 1 
289 1 219 1 191 1 
170 1 232 1 
289 1 170 1 232 1 
283 1 29 1 
77 1 2 1 248 2 283 1 28 1 286 1 29 1 362 1 82 1 104 1 132 1 106 1 58 1 291 2 138 1 15 1 163 1 202 2 293 1 144 1 120 1 183 2 277 2 76 1 75 1 376 1 242 1 
219 1 191 1 
289 1 170 1 232 1 
26 1 125 1 306 1 248 2 284 1 309 1 363 1 287 1 57 1 133 2 60 1 13 1 252 2 291 2 64 1 63 2 347 1 373 1 17 1 375 2 206 1 118 1 350 1 326 1 46 1 122 1 277 2 241 1 23 1 263 2 245 2 
176 1 251 1 178 1 127 1 204 1 375 2 18 1 42 1 223 2 237 1 46 1 240 1 298 1 342 1 133 2 24 1 228 1 60 1 245 2 
176 1 251 1 178 1 127 1 375 1 18 1 223 2 260 1 240 1 46 1 298 1 342 1 133 1 24 1 228 1 245 1 60 1 
50 1 61 1 64 1 375 1 69 1 237 1 46 1 240 1 150 1 241 1 133 1 60 1 245 1 175 1 
176 1 251 1 178 1 127 1 204 1 375 1 18 1 223 2 237 1 240 1 46 1 298 1 342 1 133 1 24 1 228 1 60 1 245 1 
273 1 
365 1 97 1 32 1 225 1 370 1 205 1 93 1 
355 1 322 1 332 1 2 1 164 1 220 1 203 1 205 1 30 1 148 1 338 1 365 1 132 1 225 1 370 2 300 1 94 1 
52 1 332 4 2 5 7 1 60 2 110 2 200 1 64 6 253 2 203 8 349 1 205 1 167 2 300 3 213 1 173 2 355 3 214 2 27 4 220 5 307 2 311 1 30 3 270 2 365 5 132 5 83 2 271 2 366 4 225 8 84 3 133 1 370 5 175 1 321 2 322 3 137 2 372 2 375 1 91 2 147 2 46 1 149 2 241 1 245 1 94 3 
355 1 162 1 27 3 332 2 203 4 307 1 53 1 165 1 325 1 167 1 147 1 30 1 73 1 207 1 365 3 366 3 225 2 370 2 300 1 94 1 
355 1 2 1 139 1 90 1 91 1 167 1 54 1 119 1 30 1 365 2 132 1 225 2 300 1 110 1 188 1 94 1 
355 1 97 1 205 1 30 1 365 1 225 1 370 1 300 1 93 1 94 1 
137 1 27 1 332 1 203 2 307 1 91 1 167 1 147 1 365 1 366 1 225 2 370 1 110 1 
322 1 132 1 2 1 220 1 370 1 205 1 
354 1 355 1 95 1 2 3 220 4 101 2 129 1 30 2 56 1 365 2 132 3 225 2 133 4 60 1 175 2 230 1 321 2 322 2 61 1 64 1 65 1 375 4 46 1 150 1 241 1 300 2 245 4 94 2 213 2 
77 1 125 1 248 3 309 1 311 1 6 1 174 1 367 1 133 1 161 2 60 1 175 1 371 1 291 3 63 1 64 1 347 1 373 1 202 2 140 1 375 1 143 1 206 1 326 1 122 1 46 1 277 2 183 2 241 1 23 1 263 2 245 1 
355 1 321 1 86 1 27 2 332 2 203 4 205 2 30 1 365 2 366 2 225 1 370 4 300 1 94 1 213 1 
36 1 58 1 286 1 
36 1 58 1 286 1 
231 1 283 1 66 1 58 1 286 1 
36 1 58 1 286 1 
79 1 58 1 286 1 
79 1 58 1 286 1 
79 1 58 1 286 1 
58 1 286 1 
120 1 15 1 
125 2 309 1 54 1 287 3 319 2 86 1 63 5 139 1 37 2 373 1 165 1 39 1 325 1 167 1 119 1 207 1 73 1 326 1 151 1 23 1 263 2 212 1 
125 11 305 1 334 1 307 4 309 2 53 1 287 7 249 1 319 3 110 4 137 4 162 1 63 18 37 3 373 2 165 2 325 2 167 4 147 4 259 1 72 1 207 1 73 1 326 2 151 1 23 2 263 4 
279 1 125 8 307 2 309 3 53 1 54 1 287 6 249 1 319 3 110 2 137 2 86 1 162 1 63 14 139 1 37 3 373 3 39 1 165 1 325 1 167 3 147 2 119 1 259 1 207 1 73 1 72 1 326 3 151 1 23 3 263 6 212 1 
125 6 307 2 309 2 53 1 287 4 249 1 319 1 110 2 137 2 162 1 63 10 37 1 373 2 165 1 325 1 167 2 147 2 207 1 73 1 72 1 259 1 326 2 151 1 23 2 263 4 
125 2 309 1 54 1 287 3 319 2 86 1 63 5 139 1 37 2 373 1 165 1 39 1 325 1 167 1 119 1 207 1 73 1 326 1 151 1 23 1 263 2 212 1 
125 6 307 2 309 1 53 1 287 4 319 1 110 2 137 2 162 1 63 10 37 1 373 1 165 1 325 1 167 2 147 2 207 1 73 1 72 1 259 1 326 1 151 1 23 1 263 2 
279 1 125 7 307 2 309 3 53 1 287 4 249 1 319 1 110 2 137 2 162 1 63 11 37 1 373 3 165 1 325 1 167 2 147 2 259 1 72 1 207 1 73 1 326 3 151 1 23 3 263 6 
152 1 279 1 125 7 307 2 309 3 53 1 287 4 319 2 110 2 137 2 162 1 63 11 37 2 373 3 165 1 325 1 167 2 147 2 259 1 72 1 207 1 73 1 326 3 151 1 23 3 263 6 
86 1 125 2 63 6 139 2 90 1 37 7 39 1 167 3 54 2 287 4 296 3 119 2 212 1 319 4 110 1 
152 1 279 1 125 7 307 2 309 3 53 1 287 4 319 1 110 2 137 2 162 1 63 11 37 1 373 3 165 1 325 1 167 2 147 2 259 1 72 1 207 1 73 1 326 3 151 1 23 3 263 6 
86 1 279 1 125 2 63 5 139 1 37 3 373 2 309 2 39 1 167 1 54 1 287 3 296 1 119 1 326 2 23 2 263 4 319 2 212 1 
86 1 125 1 63 3 139 1 37 2 39 1 167 1 54 1 287 2 119 1 32 1 212 1 319 2 
137 1 125 2 63 3 37 1 373 1 307 1 309 1 167 1 287 1 147 1 326 1 23 1 249 1 263 2 319 1 110 1 
137 1 125 4 63 6 334 1 37 1 307 1 165 1 325 2 167 1 287 2 147 1 207 1 319 1 110 1 
25 1 279 2 125 10 305 1 334 1 307 2 309 2 268 1 54 2 287 8 319 5 110 2 137 2 86 1 63 18 139 2 37 7 373 2 39 1 165 2 325 2 167 3 296 2 147 2 119 1 326 2 23 2 263 4 212 1 
125 1 63 1 325 1 
287 1 63 1 165 1 
137 1 125 3 63 5 37 2 373 1 307 1 309 1 167 1 287 2 147 1 326 1 271 1 23 1 249 1 263 2 319 2 110 1 
125 6 307 2 309 1 53 1 287 4 319 1 110 2 137 2 162 1 63 10 37 1 373 1 165 1 325 1 167 2 147 2 207 1 73 1 72 1 259 1 326 1 151 1 23 1 263 2 
167 1 287 1 119 1 63 1 
25 1 279 1 125 2 63 3 139 1 37 2 373 1 309 1 39 1 54 1 287 1 296 1 326 1 23 1 263 2 319 1 212 1 
125 2 63 4 139 1 90 1 37 3 167 2 54 1 287 2 296 1 119 1 319 2 110 1 
167 1 287 1 147 1 326 1 63 1 151 1 373 1 23 1 309 1 263 2 
137 1 125 2 63 3 37 1 373 1 307 1 309 1 167 1 287 1 147 1 326 1 151 1 23 1 263 2 319 1 110 1 
25 1 152 1 279 1 125 2 63 3 139 1 37 2 373 3 309 3 54 1 287 1 296 1 326 3 151 1 23 3 263 6 319 1 
25 1 152 1 279 2 125 14 334 1 307 3 309 5 54 2 287 11 105 1 249 1 319 4 110 3 137 3 86 1 63 25 139 2 37 6 373 5 255 1 39 1 165 3 325 4 167 5 296 2 147 3 119 2 207 1 326 5 297 1 151 1 23 5 263 10 212 1 
43 1 291 1 77 1 195 1 277 1 248 1 275 1 
291 1 77 1 248 1 275 1 43 1 159 1 195 1 277 1 33 1 329 1 377 1 12 1 
61 1 64 1 46 1 150 1 32 1 241 1 133 1 60 1 375 1 245 1 175 1 
371 1 291 2 77 1 64 1 202 1 248 2 375 1 311 1 174 1 46 1 183 1 277 1 241 1 262 1 133 1 60 1 245 1 175 1 
14 1 371 1 291 2 77 1 96 1 64 3 202 2 248 2 375 1 81 1 311 2 101 1 174 1 131 1 46 1 183 1 277 2 241 2 262 1 133 1 60 1 245 1 344 1 
14 1 371 1 291 2 77 1 177 1 96 1 64 3 202 2 248 2 375 2 81 1 311 2 101 1 131 1 46 1 183 1 277 2 241 2 262 1 133 2 60 1 245 2 301 1 344 1 
173 1 214 1 177 1 2 2 64 4 220 1 205 1 375 3 67 1 81 1 311 1 101 1 132 2 46 1 241 1 84 1 133 3 370 1 48 1 60 1 245 3 175 1 344 1 
173 1 214 1 177 1 2 2 64 4 220 1 205 1 375 3 81 1 311 1 101 1 132 2 149 1 46 1 241 1 84 1 133 3 370 1 60 1 245 3 175 1 344 1 
46 1 133 1 60 1 375 1 245 1 172 1 
176 1 252 1 216 1 64 3 190 1 99 1 17 1 375 7 42 1 142 1 311 1 7 1 46 2 241 2 133 7 317 1 245 6 60 3 172 1 175 2 34 1 
331 1 26 1 125 1 77 1 248 2 309 2 54 1 311 1 100 1 287 2 6 1 102 1 174 1 133 1 60 1 319 2 371 1 86 1 291 2 63 3 64 1 139 1 347 2 37 2 373 2 202 1 39 1 375 1 167 1 206 2 118 1 42 1 143 1 119 1 326 2 169 1 46 1 277 1 183 1 241 1 23 2 262 1 263 4 245 1 278 1 212 1 
173 1 355 2 214 1 95 1 2 3 97 1 220 2 30 2 365 1 270 1 132 3 83 1 225 1 84 1 133 1 370 1 175 1 322 1 372 1 64 2 163 1 205 1 375 1 149 1 93 1 245 1 300 2 94 2 
214 1 200 1 64 2 375 2 42 1 311 1 7 1 46 1 241 1 133 2 245 2 60 2 172 1 
177 1 61 1 64 1 375 4 42 1 107 1 150 1 46 1 241 1 133 4 60 1 245 4 175 1 
201 1 64 1 235 1 375 2 311 1 101 1 46 1 328 1 241 1 133 2 317 1 245 2 60 2 34 1 
178 1 223 1 46 1 298 1 133 1 60 1 375 1 245 1 175 1 18 1 
176 1 42 1 64 1 46 1 241 1 284 1 133 2 60 1 17 1 375 2 245 2 
61 1 64 3 190 1 99 1 375 5 17 1 42 1 101 1 107 1 150 1 46 2 241 2 133 5 245 4 60 2 175 1 
61 1 64 3 99 1 375 5 17 1 42 1 101 1 8 1 107 1 150 1 46 2 241 2 133 5 245 4 60 2 175 1 
371 1 291 2 77 1 64 1 202 1 248 2 375 1 311 1 46 1 183 1 277 1 241 1 262 1 133 1 60 1 245 1 301 1 175 1 
64 1 375 1 142 1 311 1 101 1 7 1 46 1 241 1 133 1 317 1 245 1 60 2 34 1 
295 1 77 1 224 1 261 1 5 1 
173 1 14 1 77 1 96 1 89 1 2 2 163 1 348 1 205 1 5 2 295 1 224 2 131 1 132 2 315 1 196 1 261 2 370 1 186 1 
291 1 306 1 248 1 5 1 295 1 350 1 224 1 277 1 13 1 
295 1 348 1 186 1 
254 1 32 1 266 1 318 1 
194 1 254 1 3 1 266 1 108 1 233 1 318 1 
215 1 31 1 108 1 
19 1 20 2 257 1 312 1 194 1 179 1 254 1 3 3 266 1 108 3 233 1 318 1 
22 1 194 1 254 1 3 2 266 1 108 2 233 1 294 1 318 1 
345 1 257 1 178 1 223 1 238 1 194 1 3 1 266 1 342 1 108 1 233 1 
257 1 194 1 254 1 3 1 266 1 108 1 233 1 
257 1 194 1 254 2 3 1 108 1 233 1 318 1 
254 1 3 2 266 1 98 1 233 2 68 1 257 1 194 2 103 1 108 2 
345 1 257 1 288 1 194 1 208 1 254 1 3 3 266 2 247 1 108 3 233 1 294 2 318 1 
178 1 254 1 3 2 266 1 233 1 294 1 18 1 276 1 257 1 223 2 194 1 108 2 342 1 228 1 318 1 
345 1 257 1 22 1 194 2 254 1 3 4 266 2 247 1 108 4 233 2 294 2 109 1 318 1 
257 1 194 1 254 1 3 1 266 1 108 1 233 1 318 1 
19 1 20 1 345 1 194 1 179 1 254 2 3 4 266 3 247 1 282 1 233 1 108 4 294 2 318 2 
222 1 257 1 194 1 254 1 3 2 266 1 369 1 108 2 233 1 294 1 234 1 318 1 
19 1 20 2 257 1 194 1 179 2 254 1 3 3 266 1 80 1 108 3 233 1 318 1 
266 2 180 1 211 1 111 2 
257 1 194 1 352 1 3 1 108 1 233 1 
257 1 288 1 194 1 254 1 3 2 266 1 108 2 233 1 294 1 318 1 
320 1 
257 1 194 1 254 1 3 1 266 1 108 1 233 1 318 1 
20 1 257 1 288 1 194 1 254 1 3 3 266 1 108 3 233 1 294 1 318 1 
345 1 282 1 266 1 247 1 
254 1 266 1 

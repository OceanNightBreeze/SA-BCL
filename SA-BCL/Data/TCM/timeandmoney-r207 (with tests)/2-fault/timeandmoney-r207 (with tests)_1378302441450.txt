#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 113 243 (14,94) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3524 | = null
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | OPERATOR | 3751 | * -> <<
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
281 4 284 1 192 1 308 1 142 2 145 5 23 1 262 2 337 1 46 2 340 1 6 1 240 1 270 3 269 6 295 1 296 9 242 1 226 1 346 9 33 2 34 1 35 2 11 1 380 2 229 1 187 2 102 1 
281 4 284 1 192 1 308 1 142 2 145 5 23 1 262 2 337 1 46 2 340 1 6 1 240 1 270 3 269 6 295 1 296 9 242 1 226 1 346 9 33 2 34 1 35 2 11 1 380 2 229 1 187 2 102 1 
281 5 284 1 192 1 308 1 142 2 145 6 23 1 262 2 337 1 46 2 340 1 6 1 240 1 270 4 269 7 295 1 296 10 242 1 226 1 346 10 33 2 34 1 35 2 11 1 380 2 229 1 187 2 102 1 
281 3 284 1 192 1 308 1 142 2 145 4 23 1 262 2 337 1 46 2 340 1 6 1 240 1 270 2 269 4 295 1 296 7 242 1 226 1 346 7 33 2 34 1 35 2 11 1 380 1 229 1 187 2 
281 2 308 1 142 1 346 4 145 3 33 1 23 1 35 1 11 1 46 1 380 2 240 1 229 1 187 1 270 1 269 3 296 4 102 1 
226 1 284 1 145 1 308 1 142 1 346 2 23 1 33 1 204 1 35 1 262 1 46 1 240 1 154 1 296 2 244 1 
281 1 192 1 308 1 142 2 346 3 145 2 23 1 262 1 46 2 240 1 270 1 269 1 296 3 
281 4 192 1 308 1 142 2 145 5 23 1 262 1 337 1 46 2 240 1 270 3 269 7 296 9 242 1 32 1 246 1 346 9 33 1 35 1 11 1 380 2 229 1 187 1 102 1 
281 4 192 1 308 1 142 2 145 5 23 1 262 1 337 1 46 2 240 1 270 3 269 7 296 9 242 1 32 1 246 1 346 9 33 1 35 1 11 1 380 2 229 1 187 1 102 1 
168 1 275 1 352 1 
335 2 247 1 352 1 
56 1 170 2 366 2 174 1 294 2 311 2 323 2 195 2 
209 1 280 1 258 1 72 1 127 1 311 3 195 2 128 1 338 1 170 3 366 2 28 1 151 1 174 1 294 2 8 1 201 1 52 1 132 2 117 1 373 1 245 1 317 2 57 1 56 1 375 1 298 1 323 2 348 1 12 1 300 1 159 2 302 1 96 2 15 1 124 2 19 1 
77 1 56 1 170 1 366 1 294 1 311 1 323 1 195 1 162 1 234 1 
120 1 73 1 311 1 299 1 352 1 36 1 183 1 168 1 77 1 170 1 197 1 279 1 294 1 208 1 
73 1 323 1 311 1 299 1 352 1 195 1 36 1 168 1 77 1 366 1 170 1 197 2 279 1 294 1 208 2 
189 1 197 1 179 1 208 1 223 1 
168 1 189 1 197 2 42 1 146 1 208 2 223 1 352 1 
189 1 197 1 208 1 
56 1 323 1 311 1 195 1 234 1 77 1 366 1 170 1 197 1 294 1 223 1 208 1 125 1 162 1 
352 1 
168 1 189 1 197 2 146 1 208 2 223 1 352 1 272 1 
118 1 189 2 158 1 336 1 146 1 59 2 88 1 352 1 44 2 91 2 168 1 197 5 304 1 152 1 39 1 82 1 223 2 208 5 20 1 
174 1 275 1 
143 1 311 2 323 1 195 1 170 2 366 1 174 2 294 2 330 1 
65 1 104 1 301 1 
127 1 311 1 300 1 159 1 128 1 338 1 26 1 170 1 151 1 174 1 124 1 19 1 132 1 52 1 117 1 245 1 
252 1 366 1 170 3 174 1 294 3 311 3 323 3 195 3 
77 1 170 1 294 1 311 1 323 1 195 1 162 1 
77 1 170 1 366 1 143 1 294 1 311 1 323 1 195 1 330 1 
209 1 280 1 286 1 143 1 72 1 127 1 73 1 311 4 128 1 195 3 338 1 112 1 77 1 366 2 170 4 197 1 28 1 151 1 174 1 294 3 201 1 52 1 132 1 117 1 245 1 373 1 317 2 57 1 56 1 323 3 348 1 299 1 300 1 36 1 159 1 302 1 252 1 96 1 15 1 279 1 124 1 19 1 208 1 230 1 
252 1 170 2 120 1 174 1 294 2 311 2 323 1 195 1 86 1 
143 1 286 1 73 1 323 3 311 3 299 1 352 1 36 1 195 3 77 1 252 2 366 1 170 3 197 1 279 1 294 3 153 1 208 1 230 1 
104 1 143 1 323 2 311 2 195 2 252 1 366 1 170 2 65 1 294 2 
127 1 311 1 300 1 159 1 128 1 338 1 170 1 151 1 174 1 124 1 19 1 132 1 52 1 117 1 245 1 
127 1 311 1 300 1 159 1 338 1 170 1 94 1 151 1 174 1 124 1 132 1 316 1 52 1 117 1 245 1 
209 1 280 1 333 1 258 2 104 2 72 1 107 1 4 1 28 1 49 1 201 1 134 1 317 2 57 1 350 1 301 2 92 1 254 1 96 4 65 2 358 1 15 2 98 1 69 1 
77 1 170 1 122 1 73 1 294 1 311 1 323 1 195 1 
127 1 323 1 311 2 300 1 128 1 195 1 159 1 338 1 252 1 170 2 65 1 151 1 294 1 124 1 19 1 52 1 132 1 117 1 245 1 230 1 
120 1 143 1 323 4 311 5 195 4 252 2 170 5 366 1 140 1 174 1 294 5 256 1 86 1 230 1 
77 1 170 2 122 1 294 2 311 2 323 2 195 2 162 1 
334 1 90 1 
334 1 90 1 
83 1 64 1 
83 1 64 1 
83 1 64 1 
334 1 90 1 84 1 
334 1 90 1 84 1 
334 1 283 1 90 1 
334 2 345 1 147 1 90 2 83 1 64 1 
334 1 90 1 84 1 
334 1 90 1 203 1 
334 1 90 1 203 1 
334 1 90 1 203 1 
0 2 344 2 334 2 144 1 167 1 194 2 121 1 147 1 90 2 352 1 13 2 137 2 197 2 176 1 315 3 208 2 53 1 371 1 55 1 
334 1 283 1 167 1 194 1 311 2 195 2 170 2 197 1 27 1 174 1 294 2 80 1 315 1 344 1 323 2 10 1 90 1 13 1 228 1 137 1 97 1 208 1 328 1 306 1 
33 1 35 1 187 1 
33 1 35 1 204 1 
111 1 41 1 103 1 33 3 204 1 187 2 
111 1 103 1 212 1 33 2 204 1 187 1 
111 1 103 2 33 2 204 1 187 1 
189 1 21 2 141 1 335 3 336 1 146 1 107 1 363 1 215 2 44 1 45 1 168 1 197 5 49 1 80 1 369 2 223 4 134 1 158 3 59 1 135 1 247 1 61 1 352 2 91 1 228 1 325 1 358 1 304 2 38 1 208 5 328 1 
189 6 21 6 335 9 336 1 74 1 146 1 107 3 44 2 45 3 288 1 76 1 78 1 168 1 197 9 49 3 369 6 82 1 51 1 223 7 224 1 134 3 273 5 158 8 59 2 135 2 247 3 179 5 352 5 91 2 325 1 358 3 304 6 38 2 208 9 328 4 
21 2 335 4 107 1 363 1 215 1 44 1 45 1 168 1 197 3 49 1 369 2 82 1 223 2 134 1 158 3 59 1 135 1 247 2 61 1 352 3 91 1 358 1 304 2 38 1 208 3 328 1 
21 4 335 7 74 1 107 2 363 1 215 2 44 1 45 2 168 1 78 1 197 4 49 2 369 4 82 1 223 3 224 1 134 2 158 5 59 1 135 1 247 3 61 1 352 4 91 1 358 2 304 4 38 1 208 4 328 2 
151 1 22 1 275 1 
151 1 100 1 
219 1 
151 1 117 1 
22 2 151 3 261 1 276 1 52 1 117 1 
151 1 52 1 117 1 
5 1 151 1 
134 1 333 3 258 4 60 1 216 1 354 1 96 7 15 3 16 1 123 1 49 1 30 1 99 1 69 2 116 1 177 2 297 1 
134 1 333 3 258 4 60 1 216 1 354 1 96 7 15 3 16 1 123 1 49 1 30 1 99 1 69 2 116 1 177 2 297 1 
134 1 333 3 258 4 60 1 216 1 354 1 196 1 96 7 15 3 16 1 123 1 49 1 30 1 99 1 69 2 116 1 177 2 297 1 
209 1 333 10 190 1 258 16 72 1 107 3 108 1 24 4 216 2 45 3 263 1 365 1 28 1 341 1 30 1 49 4 116 1 202 1 177 3 225 3 297 5 317 2 134 4 57 1 322 1 60 1 354 2 96 31 15 15 358 3 123 1 16 2 99 2 69 5 
209 2 333 4 258 5 72 2 108 1 216 1 28 2 49 1 30 1 222 1 177 2 116 1 297 1 134 1 317 4 57 2 349 1 354 1 96 9 15 4 123 1 16 1 99 1 69 3 
1 1 41 1 145 1 308 1 142 1 166 1 23 1 193 1 262 1 149 1 2 1 46 1 79 1 313 1 240 1 269 1 132 1 296 2 245 1 346 2 33 2 35 1 204 1 300 1 159 1 186 1 124 1 187 1 40 1 126 1 
1 1 41 1 145 1 308 1 142 1 193 1 262 1 2 1 46 1 130 1 79 1 313 1 240 1 131 1 269 2 132 1 296 3 245 1 346 3 33 2 35 1 204 1 300 1 159 1 186 1 124 1 187 1 381 1 40 1 126 1 
1 1 41 1 145 1 308 1 193 1 262 1 2 1 313 1 240 1 131 1 269 2 132 1 296 2 245 1 346 2 33 2 204 1 35 1 300 1 159 1 186 1 124 1 381 1 187 1 126 1 
1 2 142 1 346 1 193 2 262 2 300 1 159 1 62 1 129 1 46 1 130 1 338 1 93 1 95 1 151 1 186 2 124 1 343 1 370 1 132 1 296 1 117 1 245 1 
1 1 41 1 142 1 23 1 193 1 262 1 149 1 2 1 46 1 79 1 313 1 131 1 132 1 296 1 245 1 346 1 33 2 35 1 204 1 300 1 159 1 186 1 124 1 187 1 40 1 126 1 
305 1 
332 1 189 6 231 1 105 2 335 2 336 1 146 3 44 1 109 4 338 2 197 5 236 1 237 2 151 1 342 1 294 1 293 1 155 2 117 1 245 1 120 1 158 2 59 1 247 2 299 1 300 1 352 2 248 2 159 2 67 2 304 2 124 2 208 5 211 1 73 1 311 1 129 1 168 1 77 1 170 1 173 1 175 1 221 1 132 2 318 1 320 1 135 1 227 2 36 1 91 1 183 1 93 1 279 1 326 1 327 2 
332 1 189 2 105 1 73 1 146 1 311 1 109 2 77 1 170 1 197 3 236 1 294 1 293 1 272 1 318 1 120 1 299 1 36 1 183 1 279 1 326 1 208 3 
332 1 189 1 73 1 146 1 311 1 109 3 77 1 168 1 170 1 197 3 236 1 294 1 293 1 272 1 318 1 120 1 299 1 36 1 352 1 183 1 67 1 279 1 326 1 208 3 
332 1 189 2 105 1 73 1 146 1 311 1 109 3 77 1 168 1 170 1 197 3 236 1 294 1 293 1 272 1 318 1 120 1 299 1 227 1 36 1 352 1 183 1 67 1 279 1 326 1 208 3 
332 1 189 7 105 4 336 1 146 3 44 1 109 6 197 5 236 1 237 2 342 1 293 1 294 1 155 2 120 1 158 1 59 1 247 2 299 1 352 5 248 2 357 1 67 4 304 1 208 5 73 1 311 1 77 1 168 5 170 1 175 1 272 1 85 1 318 1 319 1 274 1 227 4 37 1 36 1 91 1 183 1 279 1 326 1 327 2 
332 1 189 4 335 2 105 2 336 1 146 2 44 1 109 4 197 4 236 1 237 2 342 1 293 1 294 1 155 2 120 1 158 1 59 1 247 2 299 1 248 2 352 2 304 1 67 2 208 4 211 1 73 1 311 1 77 1 168 1 170 1 175 1 318 1 227 2 36 1 91 1 183 1 279 1 326 1 327 2 
332 1 189 4 105 2 73 1 336 1 146 2 311 1 44 1 109 4 168 1 77 1 170 1 197 4 236 1 237 2 175 1 342 1 294 1 293 1 155 2 85 1 318 1 319 1 120 1 158 1 59 1 247 2 299 1 227 2 352 1 248 2 36 1 91 1 183 1 357 1 67 2 304 1 279 1 326 1 208 4 327 2 
332 1 189 4 105 2 73 1 336 1 146 2 311 1 44 1 109 4 168 1 77 1 170 1 197 4 236 1 237 2 175 1 342 1 294 1 293 1 155 2 85 1 318 1 319 1 120 1 158 1 59 1 247 2 299 1 227 2 352 1 248 2 36 1 91 1 183 1 357 1 67 2 304 1 279 1 326 1 208 4 327 2 
188 1 332 1 189 4 105 2 335 2 73 1 336 1 146 2 311 1 44 1 109 4 25 2 168 1 77 1 47 1 170 1 197 4 236 1 175 1 294 1 293 1 155 2 318 1 319 1 120 1 158 1 59 1 299 1 227 2 205 2 352 1 36 1 91 1 251 1 183 1 67 2 304 1 279 1 326 1 208 4 327 2 
332 1 189 5 105 3 336 1 73 1 146 2 311 1 44 1 109 5 168 1 77 1 170 1 197 4 236 1 237 2 175 1 342 1 294 1 293 1 155 2 85 1 318 1 319 1 120 1 158 1 274 1 59 1 247 2 299 1 227 3 352 1 248 2 36 1 91 1 183 1 357 1 304 1 67 3 279 1 326 1 208 4 327 2 
332 1 189 5 105 3 336 1 73 1 146 2 311 1 44 1 109 5 168 1 77 1 170 1 197 4 236 1 237 2 175 1 342 1 294 1 293 1 155 2 85 1 318 1 319 1 120 1 158 1 274 1 59 1 247 2 299 1 227 3 352 1 248 2 36 1 91 1 183 1 357 1 304 1 67 3 279 1 326 1 208 4 327 2 
188 1 332 1 189 4 335 2 105 2 336 1 146 2 44 1 109 4 197 4 236 1 293 1 294 1 155 2 120 1 158 1 59 1 299 1 205 2 352 1 304 1 67 2 208 4 211 1 73 1 311 1 25 2 77 1 168 1 170 1 175 1 318 1 227 2 36 1 91 1 183 1 279 1 326 1 327 2 
209 1 280 1 333 2 258 3 104 1 72 1 28 1 30 1 49 1 174 2 201 1 116 1 177 1 317 2 134 1 57 1 275 1 301 1 92 1 354 1 65 1 96 6 15 3 16 1 123 1 69 2 
333 2 209 2 280 2 190 1 258 8 104 4 72 2 107 2 24 3 233 1 45 2 28 2 239 1 174 1 49 1 268 1 8 1 201 1 202 1 297 1 225 3 317 4 134 2 57 2 301 11 302 1 182 1 303 1 96 14 65 11 15 6 358 1 69 1 
280 1 209 1 258 1 104 1 127 1 72 1 311 2 214 1 128 1 195 1 338 1 26 1 170 2 28 1 151 1 174 1 294 1 268 1 8 1 52 1 132 1 201 1 54 1 117 1 245 1 317 2 57 1 323 1 300 1 159 1 324 1 302 1 252 1 96 2 15 1 124 1 19 1 230 1 
331 1 280 3 333 8 104 7 107 2 195 1 45 2 338 1 151 2 49 3 294 1 8 1 201 3 52 2 116 1 117 2 297 4 245 2 57 3 58 2 348 2 300 2 159 3 301 7 354 1 302 1 252 1 65 7 15 10 358 2 16 1 123 1 124 3 19 2 69 4 209 3 258 10 72 3 127 2 311 3 128 2 170 3 28 3 174 2 30 1 268 1 131 1 132 3 31 2 177 1 317 6 134 3 321 2 323 1 378 1 277 2 136 1 96 20 230 1 
209 2 280 2 163 1 258 1 260 1 166 1 72 2 311 1 195 1 129 1 338 2 170 1 28 2 151 3 291 1 198 1 368 1 294 1 131 1 8 1 132 8 201 2 117 2 245 2 317 4 57 2 119 1 298 2 323 1 300 2 159 8 92 1 302 1 252 1 93 1 96 2 15 1 255 1 124 7 
333 1 209 1 280 1 258 1 104 1 143 1 72 1 311 1 107 1 195 1 45 1 366 1 235 1 170 1 28 1 49 1 294 1 268 1 201 1 317 2 134 1 57 1 323 1 301 1 65 1 96 3 358 1 15 2 69 1 
333 1 280 1 317 2 209 1 134 1 57 1 258 2 104 1 72 1 107 1 301 1 92 1 65 1 96 2 28 1 98 1 201 1 297 1 
333 1 280 1 317 2 209 1 57 1 104 1 72 1 301 1 92 1 254 1 65 1 96 2 28 1 358 1 15 2 49 1 69 1 201 1 
209 1 280 1 333 2 258 2 104 2 72 1 107 1 45 1 28 1 49 1 201 1 297 1 134 1 317 2 57 1 301 2 92 1 96 4 65 2 358 1 15 2 69 1 
333 1 280 1 317 2 209 1 134 1 57 1 119 1 258 2 104 1 72 1 107 1 301 1 65 1 96 2 28 1 98 1 201 1 297 1 
333 1 280 1 317 2 209 1 57 1 119 1 104 1 72 1 301 1 254 1 65 1 96 2 28 1 358 1 15 2 49 1 69 1 201 1 
209 1 280 1 333 2 258 2 104 2 72 1 107 1 45 1 28 1 49 1 201 1 297 1 134 1 317 2 57 1 119 1 301 2 96 4 65 2 358 1 15 2 69 1 
209 1 280 1 333 2 258 2 104 2 72 1 107 1 45 1 28 1 49 1 201 1 297 1 134 1 317 2 57 1 301 2 96 4 65 2 358 1 15 2 69 1 
280 1 209 1 258 1 127 1 72 1 311 1 128 1 338 1 170 1 28 1 151 1 174 1 8 1 52 1 132 1 201 1 117 1 245 1 317 2 57 1 348 1 300 1 159 1 302 1 96 2 15 1 124 1 19 1 
280 1 209 1 258 1 127 1 72 1 311 1 338 1 169 1 170 1 28 1 151 1 174 1 8 1 52 1 316 1 132 1 201 1 117 1 245 1 317 2 57 1 300 1 159 1 302 1 96 2 94 1 15 1 124 1 
209 1 280 1 333 2 258 2 104 2 72 1 107 1 45 1 28 1 49 1 268 1 201 1 297 1 134 1 317 2 57 1 301 2 96 4 65 2 358 1 15 2 69 1 
333 2 280 1 209 1 258 2 104 2 127 1 166 1 72 1 107 1 311 1 128 1 45 1 170 1 28 1 151 1 49 1 52 1 132 1 201 1 297 1 117 1 245 1 134 1 317 2 57 1 348 1 300 1 277 1 159 1 301 2 65 2 96 4 15 2 358 1 124 1 19 1 69 1 
333 1 209 1 280 1 359 1 258 2 143 1 104 1 72 1 311 1 107 1 195 1 45 1 366 1 170 1 28 1 49 1 294 1 268 1 201 1 297 1 317 2 134 1 57 1 323 1 301 1 96 3 65 1 15 1 358 1 
71 2 209 2 333 6 190 1 258 9 259 2 72 2 107 3 24 2 287 1 75 1 45 3 367 1 28 2 49 3 202 1 225 1 297 3 317 4 134 3 57 2 157 1 349 1 377 1 96 19 66 1 15 10 358 3 139 1 69 3 
333 4 71 4 209 3 258 14 259 1 72 3 232 1 107 3 108 2 287 2 75 1 24 2 45 3 339 1 367 1 28 3 29 1 314 1 49 2 115 1 202 2 297 2 225 2 317 6 134 3 57 3 349 1 96 26 15 12 66 2 358 2 139 1 69 2 257 1 
333 8 190 1 232 1 107 4 108 1 287 1 45 4 339 1 238 1 49 5 115 1 202 3 116 1 297 4 57 3 157 1 349 1 354 1 358 4 15 21 66 2 123 1 16 1 69 4 257 1 209 3 71 4 258 20 259 1 72 3 75 1 24 4 367 1 28 3 29 1 314 1 30 1 177 1 225 3 134 5 317 6 96 41 139 1 
71 4 209 4 333 7 190 1 258 20 259 1 72 4 232 1 107 4 108 2 24 4 287 1 75 1 45 4 339 1 367 1 28 4 238 1 29 1 30 1 314 1 49 4 115 1 177 1 116 1 202 3 225 3 297 3 317 8 134 5 57 4 157 1 349 1 354 1 96 38 66 2 15 18 358 3 139 1 16 1 123 1 69 4 257 1 
71 4 209 2 333 14 190 2 258 27 259 1 72 2 232 1 107 7 108 1 24 4 287 1 75 1 45 7 339 1 367 1 28 2 239 2 29 1 30 1 314 1 49 8 115 1 177 1 116 1 202 2 225 4 297 7 317 4 134 8 57 2 349 1 354 1 96 52 66 1 15 25 358 7 139 1 16 1 123 1 69 7 257 1 
344 1 137 1 334 1 310 1 194 1 147 1 90 1 13 1 371 1 55 1 
283 1 10 1 
344 1 137 1 334 1 164 1 290 1 194 1 90 1 13 1 150 1 
0 1 344 1 334 1 144 1 167 1 194 1 147 1 90 1 352 1 13 1 137 1 197 1 176 1 315 2 208 1 53 1 371 1 55 1 
0 1 344 1 334 1 144 1 167 1 194 1 147 1 90 1 352 1 13 1 137 1 197 1 176 1 315 2 208 1 53 1 371 1 55 1 
0 1 344 1 334 1 144 1 167 1 194 1 147 1 90 1 352 1 13 1 137 1 197 1 176 1 315 2 208 1 53 1 371 1 55 1 
70 1 345 1 84 1 
70 1 345 1 84 1 
101 1 203 1 
345 1 101 1 203 1 
97 1 306 1 
0 1 334 1 283 1 194 1 311 2 195 2 170 2 197 1 27 1 174 1 80 1 294 2 315 1 223 1 53 1 344 1 178 1 323 2 10 1 90 1 13 1 228 1 137 1 97 1 208 1 328 1 306 1 
70 1 84 1 
345 1 101 1 203 1 
280 1 209 1 361 1 307 1 258 1 72 1 311 2 217 1 170 2 28 1 151 1 368 1 294 2 268 1 8 1 132 2 201 1 117 1 372 1 245 1 317 2 57 1 298 2 300 1 159 2 302 1 250 1 96 2 15 1 255 1 124 2 
1 1 41 1 33 2 166 1 35 1 204 1 300 1 159 2 184 1 313 1 292 1 124 2 199 1 187 1 131 1 132 2 40 1 126 1 245 1 
1 1 41 1 33 2 35 1 204 1 300 1 159 1 185 1 313 1 292 1 124 1 187 1 131 1 132 1 40 1 126 1 245 1 
1 1 165 1 300 1 159 1 129 1 338 1 93 1 151 1 124 1 199 1 343 1 132 1 117 1 245 1 
1 1 41 1 33 2 35 1 204 1 300 1 159 1 184 1 313 1 292 1 124 1 199 1 187 1 131 1 132 1 40 1 126 1 245 1 
106 1 
168 1 304 1 158 1 88 1 275 1 39 1 352 1 
189 1 335 1 336 1 146 1 44 1 168 1 197 1 237 1 342 1 158 1 59 1 247 1 248 1 352 2 91 1 304 1 208 1 
189 5 231 1 335 12 336 4 146 3 107 2 44 4 45 2 110 2 338 1 48 1 197 5 5 2 113 2 151 10 49 2 114 2 241 2 52 3 117 3 245 4 158 9 9 1 59 4 247 6 300 3 159 3 160 2 352 8 304 8 358 2 17 2 124 3 208 5 360 1 21 6 166 1 22 2 213 2 364 1 168 2 172 1 369 6 132 3 31 2 374 2 134 2 135 2 88 1 276 1 36 2 91 4 39 1 100 3 
189 1 21 5 231 1 335 6 213 2 336 2 146 1 232 1 107 2 43 1 24 1 44 2 45 2 168 2 197 1 29 1 314 1 49 2 369 5 115 1 202 1 225 1 134 2 158 8 135 1 59 2 247 3 347 1 352 5 91 2 304 5 358 2 17 1 208 1 257 1 
213 2 336 1 311 1 44 1 195 1 234 1 77 1 170 1 366 1 197 1 49 1 294 1 116 1 134 2 56 1 158 2 59 1 323 1 91 1 354 1 356 1 357 1 304 2 16 1 17 1 208 1 125 1 162 1 
158 1 336 1 59 1 88 1 44 1 352 1 91 1 168 1 304 1 39 1 
134 2 21 5 335 10 158 5 213 2 247 5 107 2 352 5 45 2 304 5 358 2 17 1 49 2 369 5 31 1 
168 1 189 1 197 1 146 1 208 1 352 1 
189 4 282 1 231 2 336 1 146 2 44 2 129 1 338 2 48 1 197 3 151 2 221 1 82 1 271 1 52 1 132 4 117 2 245 3 320 1 158 2 9 2 59 2 135 2 300 2 351 1 159 4 278 1 91 2 63 1 93 1 304 2 124 4 18 1 208 3 
209 1 280 1 127 1 72 1 311 3 195 2 128 1 338 1 170 3 366 2 28 1 151 1 174 1 294 2 132 1 52 1 201 1 117 1 373 1 245 1 317 2 57 1 56 1 323 2 348 1 300 1 159 1 302 1 96 1 15 1 124 1 19 1 
21 2 231 1 335 4 158 1 336 1 59 1 135 1 247 2 44 1 352 4 91 1 168 2 304 2 369 2 177 1 
253 1 137 1 13 1 
253 1 137 1 13 1 
137 1 133 1 13 1 371 1 306 1 
253 1 137 1 13 1 
289 1 137 1 13 1 
289 1 137 1 13 1 
289 1 137 1 13 1 
137 1 13 1 
334 1 90 1 
134 1 333 3 317 4 209 2 57 2 258 4 72 2 108 1 354 1 96 8 15 4 28 2 123 1 16 1 49 1 30 1 69 2 177 1 116 1 297 1 
333 2 134 1 258 3 275 1 354 1 96 6 15 3 123 1 16 1 30 1 49 1 69 2 177 1 116 1 
333 2 317 2 209 1 134 1 57 1 258 2 72 1 107 1 45 1 265 1 96 4 15 2 358 1 28 1 49 1 69 1 297 1 
134 1 333 2 190 1 258 3 107 1 24 2 45 1 96 7 358 1 15 4 49 1 69 1 202 1 225 1 297 1 
333 9 209 2 190 1 258 11 72 2 107 2 108 2 24 2 45 2 28 2 239 1 30 1 49 3 177 1 116 1 297 4 225 2 134 3 317 4 57 2 89 1 354 2 182 1 96 23 15 12 358 2 16 2 123 1 69 5 
96 1 15 1 24 1 
96 1 258 1 225 1 
209 1 317 2 134 1 333 3 57 1 258 3 72 1 107 1 45 1 265 1 96 6 28 1 15 3 358 1 49 1 69 2 31 1 297 1 
209 1 333 2 258 6 72 1 232 1 107 2 24 1 45 2 28 1 29 1 49 2 314 1 115 1 202 1 297 1 225 1 317 2 134 2 57 1 349 1 96 12 15 6 358 2 69 1 257 1 
134 1 333 2 258 3 354 1 96 6 15 3 16 1 49 1 69 1 116 1 297 1 
333 2 317 2 209 1 57 1 258 1 72 1 89 1 108 1 354 1 96 3 15 2 28 1 16 1 123 1 30 1 69 1 297 1 
209 1 317 2 333 5 134 2 57 1 258 5 72 1 349 1 354 2 356 1 96 10 28 1 15 5 16 2 49 2 69 3 116 1 297 2 
317 2 209 1 134 1 333 1 57 1 258 2 72 1 107 1 349 1 96 2 28 1 297 1 
333 2 317 2 209 1 134 1 57 1 258 2 72 1 107 1 349 1 45 1 96 4 15 2 358 1 28 1 49 1 69 1 297 1 
317 6 209 3 333 2 57 3 258 1 157 1 72 3 108 1 89 1 349 1 354 1 96 3 15 2 28 3 16 1 69 1 297 1 
209 5 333 12 190 1 258 16 72 5 107 3 108 2 24 4 45 3 263 1 265 1 365 1 28 5 341 1 30 1 49 5 177 1 116 2 202 1 225 3 297 5 317 10 134 5 57 5 157 1 89 1 349 1 354 3 96 34 15 18 358 3 16 3 123 1 69 7 
209 1 333 2 258 4 72 1 24 1 28 1 49 1 30 1 177 1 202 1 116 1 225 1 134 1 317 2 57 1 349 1 354 1 96 8 15 4 123 1 16 1 69 2 257 1 
209 2 333 3 190 1 258 6 72 2 107 1 24 2 45 1 265 1 28 2 49 1 30 1 177 1 116 1 202 1 225 1 297 1 317 4 134 2 57 2 349 1 354 1 96 11 15 5 16 1 123 1 69 2 257 1 
209 3 333 4 258 9 72 3 232 1 107 2 108 1 24 1 45 2 265 1 28 3 29 1 30 1 314 1 49 3 115 1 177 1 116 1 202 1 297 1 225 1 317 6 134 3 57 3 349 1 354 1 96 19 15 10 358 2 16 1 123 1 69 3 257 1 
209 3 333 5 258 10 72 3 232 1 107 2 108 1 24 1 45 2 265 1 28 3 29 1 30 1 49 2 314 1 115 1 177 1 116 1 202 1 297 2 225 1 317 6 134 3 57 3 349 1 354 1 96 17 15 7 358 1 16 1 123 1 69 3 257 1 
209 1 333 2 258 4 72 1 24 1 28 1 49 1 30 1 177 1 202 1 116 1 225 1 134 1 317 2 57 1 349 1 354 1 96 8 15 4 123 1 16 1 69 2 257 1 
209 1 333 2 258 6 72 1 232 1 107 2 24 1 45 2 28 1 29 1 49 2 314 1 115 1 202 1 297 1 225 1 317 2 134 2 57 1 349 1 96 12 15 6 358 2 69 1 257 1 
209 4 333 5 258 10 72 4 232 1 107 2 108 2 24 1 45 2 265 1 28 4 29 1 30 1 314 1 49 2 115 1 177 1 116 1 202 1 297 2 225 1 317 8 134 3 57 4 349 1 354 1 96 18 15 8 358 1 16 1 123 1 69 3 257 1 
209 4 333 6 258 9 72 4 232 1 107 3 108 2 24 1 45 3 28 4 29 1 314 1 49 2 115 1 202 1 297 3 225 1 317 8 134 3 57 4 157 1 349 1 96 16 15 7 358 2 69 3 257 1 
333 6 134 1 258 3 354 3 96 7 15 4 123 2 16 3 49 1 30 1 69 3 116 1 297 3 
209 4 333 4 258 10 72 4 232 1 107 2 108 2 24 1 45 2 28 4 29 1 30 1 314 1 49 2 115 1 177 1 116 1 202 1 297 1 225 1 317 8 134 3 57 4 157 1 349 1 354 1 96 18 15 8 358 1 16 1 123 1 69 3 257 1 
170 1 285 1 120 1 174 1 294 1 311 1 86 1 
285 1 362 1 120 1 311 1 180 1 379 1 206 1 170 1 68 1 174 1 294 1 86 1 
338 1 93 1 151 1 275 1 124 1 300 1 159 1 132 1 129 1 117 1 245 1 
127 1 323 1 311 2 300 1 195 1 159 1 128 1 338 1 252 1 170 2 151 1 174 1 294 1 124 1 52 1 132 1 117 1 245 1 
127 1 73 1 311 2 128 1 195 2 77 1 170 2 5 1 113 1 151 3 174 1 294 2 132 1 52 2 117 2 245 1 9 1 323 1 299 1 300 1 159 1 252 1 124 1 
127 1 73 1 311 2 195 2 77 1 170 2 5 1 113 1 151 3 174 1 294 2 132 2 52 2 117 2 245 1 9 1 323 1 299 1 300 1 159 2 353 1 252 1 94 1 124 2 
22 1 9 1 300 1 159 1 5 1 197 1 113 1 14 1 151 4 124 1 208 1 100 1 52 1 132 1 243 1 117 1 245 1 
189 1 22 1 9 1 300 1 352 1 36 1 159 3 353 1 338 1 168 1 5 1 197 2 113 1 151 4 124 3 114 1 208 2 100 1 52 1 132 3 117 1 245 1 
198 1 124 1 300 1 159 1 132 1 245 1 
163 1 282 1 298 1 260 1 166 1 276 1 300 2 159 7 338 2 7 1 255 1 151 3 291 1 198 1 124 6 18 1 131 1 132 7 52 1 117 2 245 3 
333 2 280 2 209 2 258 3 307 1 104 1 127 1 72 2 166 1 311 2 195 1 128 1 170 2 28 2 151 1 174 2 49 1 30 1 294 1 268 1 52 1 201 2 132 1 177 1 116 1 117 1 245 1 134 1 317 4 57 2 321 1 323 1 348 1 300 1 159 1 277 1 301 1 354 1 252 1 65 1 96 6 15 3 16 1 123 1 124 1 19 1 69 2 
189 2 22 1 336 2 146 1 44 2 338 1 168 1 48 1 197 3 151 2 114 1 223 1 241 1 132 1 374 1 158 1 59 2 88 1 352 1 159 1 160 1 36 1 91 2 304 1 124 1 39 1 208 3 100 1 
166 1 22 1 276 1 300 1 159 2 172 1 151 2 198 1 124 2 132 2 52 1 117 1 245 2 
191 1 166 1 300 1 159 4 129 1 353 1 338 1 93 1 151 1 124 4 132 4 117 1 245 1 
282 1 9 1 300 1 378 1 159 2 351 1 278 1 151 1 124 2 18 1 132 2 52 1 117 1 245 2 
338 1 313 1 33 1 124 1 35 1 204 1 300 1 159 1 132 1 245 1 
151 1 255 1 166 1 124 2 300 1 131 1 159 2 132 2 117 1 245 1 250 1 
191 1 166 1 260 1 9 1 300 2 159 5 129 1 338 1 93 1 255 1 151 3 291 1 124 4 132 5 117 2 245 2 
191 1 210 1 166 1 260 1 9 1 300 2 159 5 129 1 338 1 93 1 255 1 151 3 124 4 132 5 117 2 245 2 
127 1 323 1 311 2 300 1 195 1 159 1 338 1 252 1 170 2 94 1 151 1 174 1 294 1 124 1 52 1 132 1 117 1 245 1 
282 1 9 1 276 1 300 1 159 1 7 1 151 1 124 1 18 1 132 1 52 1 117 1 245 2 
361 1 87 1 311 1 217 1 138 1 170 1 294 1 372 1 156 1 
87 1 148 1 3 1 
138 1 174 1 87 1 376 1 156 1 
286 1 73 1 87 1 299 1 148 1 376 2 352 1 36 1 3 1 249 1 168 1 77 1 138 2 197 2 279 1 174 1 223 1 208 2 156 2 
145 1 308 1 240 1 275 1 
145 1 308 1 346 1 142 1 240 1 296 1 46 1 
346 1 186 1 262 1 
284 2 145 1 142 1 346 3 308 1 23 1 181 1 46 1 240 1 266 1 81 1 296 3 
380 1 145 1 308 1 346 2 142 1 240 1 269 1 296 2 46 1 
281 1 145 1 346 1 142 1 33 1 23 1 35 1 187 1 11 1 296 1 46 1 
145 1 346 1 142 1 23 1 240 1 296 1 46 1 
308 1 346 1 142 1 23 1 240 2 296 1 46 1 
145 1 142 2 346 2 23 1 46 2 220 1 240 1 207 1 200 1 296 2 
281 1 308 1 142 1 346 3 145 2 23 1 337 1 46 1 240 1 269 2 270 1 296 3 242 1 
41 1 145 1 308 1 142 1 346 2 33 2 23 1 204 1 35 1 46 1 240 1 187 1 269 1 296 2 329 1 
281 1 308 1 142 2 346 4 145 2 23 1 46 2 380 1 240 1 269 2 270 1 296 4 102 1 
145 1 308 1 346 1 142 1 23 1 240 1 296 1 46 1 
281 1 284 1 308 2 346 4 142 1 145 3 181 1 46 1 161 1 240 2 266 1 269 2 270 1 296 4 
32 1 145 1 142 1 346 2 308 1 23 1 309 1 46 1 171 1 240 1 269 1 296 2 
284 2 145 1 142 1 346 3 308 1 23 1 181 2 46 1 312 1 240 1 266 1 296 3 
264 1 145 2 50 2 218 1 
346 1 142 1 23 1 267 1 296 1 46 1 
145 1 308 1 346 2 142 1 23 1 240 1 269 1 242 1 296 2 46 1 
355 1 
145 1 308 1 346 1 142 1 23 1 240 1 296 1 46 1 
284 1 142 1 346 3 308 1 145 1 23 1 46 1 240 1 269 1 296 3 242 1 
281 1 161 1 145 1 270 1 
145 1 240 1 

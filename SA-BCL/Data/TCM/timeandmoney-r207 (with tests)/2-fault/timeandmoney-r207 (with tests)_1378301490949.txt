#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) 264 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 151 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) 264 47 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 124 349 299 (2,311) 57 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 245 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 35 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 124 349 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 178 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 124 349 251 29 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 124 82 21 (0,321) (135,197) (135,197) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 124 82 21 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 151 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) (32,313) (136,250) 34 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 124 82 21 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 124 349 299 (2,311) 57 17 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) (32,313) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 124 176 231 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 124 82 21 (0,321) (0,321) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 124 349 251 180 307 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 124 82 21 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) 264 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 245 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 124 349 299 (2,311) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 35 (2,311) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 35 (36,328) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 124 349 251 155 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 124 349 299 (36,328) 156 (32,313) (32,313) (136,250) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 35 (36,328) 324 259 (136,250) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 124 349 251 180 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 124 82 21 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 124 349 98 87 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 124 176 231 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 124 176 342 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 124 176 339 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 124 349 299 (2,311) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 124 349 251 155 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
97 1 234 1 279 1 254 2 73 4 122 1 143 9 355 6 218 5 332 1 146 1 257 2 165 1 77 2 285 2 223 1 58 1 315 1 227 1 59 9 130 2 246 1 172 1 16 3 62 2 66 2 232 1 67 1 
97 1 234 1 279 1 254 2 73 4 122 1 143 9 355 6 218 5 332 1 257 2 146 1 165 1 77 2 285 2 223 1 58 1 315 1 227 1 59 9 130 2 246 1 172 1 16 3 62 2 66 2 232 1 67 1 
97 1 234 1 279 1 254 2 73 5 122 1 143 10 355 7 218 6 332 1 257 2 146 1 165 1 77 2 285 2 223 1 58 1 315 1 227 1 59 10 130 2 246 1 172 1 16 4 62 2 66 2 232 1 67 1 
97 1 234 1 279 1 254 2 73 3 122 1 143 7 355 4 218 4 332 1 257 2 146 1 165 1 77 2 285 2 223 1 58 1 315 1 227 1 59 7 130 1 246 1 16 2 62 2 66 2 232 1 67 1 
254 1 58 1 59 4 130 2 73 2 246 1 16 1 172 1 62 1 143 4 355 3 218 3 146 1 332 1 257 1 77 1 285 1 67 1 
254 1 59 2 361 1 227 1 246 1 122 1 62 1 143 2 319 1 202 1 218 1 146 1 77 1 66 1 285 1 67 1 
234 1 59 3 73 1 246 1 16 1 143 3 355 1 218 2 146 1 77 2 66 1 285 2 67 1 
234 1 254 1 223 1 58 1 59 9 236 1 130 2 73 4 246 1 172 1 16 3 62 1 271 1 143 9 355 7 218 5 257 1 332 1 165 1 146 1 77 2 66 1 285 2 67 1 
234 1 254 1 223 1 58 1 59 9 236 1 130 2 73 4 246 1 172 1 16 3 62 1 271 1 143 9 355 7 218 5 257 1 332 1 165 1 146 1 77 2 66 1 285 2 67 1 
325 1 174 1 245 1 
325 1 45 2 255 1 
30 2 162 2 72 2 212 2 201 1 142 2 125 2 111 1 
156 1 349 1 72 1 302 1 212 1 328 1 142 1 162 1 101 1 124 1 52 2 27 2 333 1 125 1 264 1 336 1 30 1 313 1 201 1 294 1 299 1 300 1 252 2 
30 1 162 1 72 1 220 1 212 1 201 1 242 1 171 1 142 1 125 1 
325 1 30 1 138 1 72 1 350 1 341 1 212 1 174 1 113 1 103 1 220 1 43 1 194 1 195 1 
325 1 30 1 138 1 72 1 350 1 341 1 212 1 142 1 174 1 162 1 220 1 125 1 43 2 194 1 195 2 
266 1 88 1 43 1 195 1 318 1 
325 1 174 1 266 1 127 1 343 1 43 2 195 2 318 1 
266 1 43 1 195 1 
30 1 72 1 201 1 212 1 171 1 142 1 318 1 162 1 220 1 242 1 125 1 43 1 117 1 195 1 
325 1 
325 1 174 1 266 1 343 1 109 1 43 2 195 2 318 1 
325 1 266 2 15 1 293 2 100 1 215 1 318 2 174 1 248 1 175 2 356 1 191 1 310 2 19 1 134 1 343 1 10 1 43 5 195 5 
30 1 156 1 349 1 72 1 328 1 212 1 306 1 142 1 294 1 101 1 162 1 124 1 52 1 299 1 333 1 27 1 320 1 252 1 
245 1 111 1 
30 2 72 2 22 1 291 1 212 2 142 1 111 2 162 1 125 1 
1 1 112 1 357 1 
156 1 101 1 124 1 151 1 349 1 52 1 299 1 333 1 27 1 328 1 252 1 294 1 
30 5 72 5 269 1 22 1 212 5 142 4 306 1 7 1 111 1 162 4 308 1 113 1 320 2 125 1 
30 2 162 2 72 2 114 1 220 1 212 2 171 1 142 2 
30 3 162 3 72 3 320 1 212 3 125 1 142 3 111 1 
30 1 162 1 72 1 220 1 212 1 171 1 142 1 
30 1 162 1 72 1 22 1 220 1 291 1 212 1 142 1 125 1 
156 1 138 1 349 1 72 3 22 1 350 1 47 1 328 1 212 3 142 3 306 1 101 1 162 3 124 1 163 1 52 1 333 1 27 1 220 1 125 2 264 1 194 1 195 1 30 3 313 1 341 1 201 1 294 1 299 1 320 1 43 1 252 1 
30 2 162 1 72 2 113 1 320 1 212 2 142 1 111 1 7 1 
325 1 30 3 138 1 72 3 22 1 341 1 350 1 212 3 306 1 142 3 162 3 163 1 320 2 220 1 104 1 125 1 43 1 194 1 195 1 
30 2 1 1 72 2 22 1 212 2 142 2 162 2 320 1 357 1 125 1 
156 1 101 1 124 1 349 1 52 1 299 1 333 1 27 1 328 1 252 1 294 1 
57 1 101 1 124 1 349 1 52 1 299 1 333 1 311 1 27 1 252 1 294 1 
1 2 327 1 4 1 76 2 239 1 309 1 357 2 193 2 28 1 106 1 268 1 128 2 33 1 224 1 200 1 229 1 61 1 132 1 40 1 112 2 18 1 41 1 68 1 118 4 
30 1 162 1 72 1 114 1 220 1 212 1 142 1 194 1 
144 1 148 1 
144 1 148 1 
354 1 270 1 
354 1 270 1 
354 1 270 1 
144 1 169 1 148 1 
144 1 169 1 148 1 
144 1 9 1 148 1 
354 1 144 2 277 1 93 1 148 2 270 1 
144 1 169 1 148 1 
144 1 352 1 148 1 
144 1 352 1 148 1 
144 1 352 1 148 1 
30 2 3 1 72 2 360 1 89 1 304 1 212 2 142 2 292 1 237 1 148 1 111 1 189 1 144 1 162 2 217 1 204 1 274 1 80 1 363 1 9 1 166 1 43 1 195 1 
325 1 182 1 340 2 158 1 304 2 148 2 6 1 144 2 203 1 217 3 93 1 80 2 363 2 274 1 241 1 166 2 43 2 287 1 195 2 
257 1 254 1 62 1 
319 1 254 1 62 1 
319 1 296 1 257 2 254 3 159 1 263 1 
319 1 296 1 257 1 254 2 99 1 263 1 
319 1 296 2 257 1 254 2 263 1 
44 1 325 2 181 1 45 3 255 1 327 1 50 1 237 1 23 2 215 3 310 1 334 1 83 1 106 1 195 5 266 1 89 1 15 1 292 1 293 1 61 1 318 4 175 1 174 1 92 2 18 1 134 2 343 1 344 2 275 1 43 5 120 1 
325 5 44 1 45 9 255 3 327 3 215 8 310 2 10 1 334 3 83 2 106 3 195 9 266 6 88 5 225 1 38 1 13 1 39 5 292 4 15 1 110 1 293 2 61 3 318 7 174 1 175 2 150 1 92 6 18 3 134 6 343 1 344 6 275 2 116 1 43 9 
325 3 45 4 255 2 327 1 50 1 23 1 215 3 310 1 10 1 334 1 83 1 195 3 106 1 292 1 293 1 61 1 318 2 174 1 175 1 92 2 18 1 134 2 275 1 344 2 43 3 120 1 
325 4 45 7 255 3 327 2 50 1 23 2 215 5 310 1 10 1 334 2 83 1 195 4 106 2 225 1 13 1 292 2 110 1 293 1 61 2 318 3 174 1 175 1 92 4 18 2 134 4 344 4 275 1 43 4 120 1 
245 1 280 1 
35 1 
301 1 
124 1 349 1 
178 1 
124 1 
124 1 349 1 251 1 29 1 
183 1 128 3 233 1 289 1 327 1 305 1 91 1 76 4 61 1 133 1 309 3 41 2 192 2 276 1 312 1 118 7 126 1 
183 1 128 3 233 1 289 1 327 1 305 1 91 1 76 4 61 1 133 1 309 3 41 2 192 2 276 1 312 1 118 7 126 1 
183 1 128 3 233 1 129 1 289 1 327 1 305 1 91 1 76 4 61 1 133 1 309 3 41 2 192 2 276 1 312 1 118 7 126 1 
137 1 183 1 233 1 139 1 140 4 305 2 327 4 213 1 76 16 309 10 192 3 261 1 193 2 28 1 221 1 312 2 334 3 126 1 106 3 244 3 268 1 128 15 289 1 91 2 61 4 132 1 133 2 18 3 41 5 276 5 68 1 118 31 121 1 119 1 
183 1 233 1 327 1 305 1 76 5 161 1 309 4 192 2 262 1 193 4 28 2 312 1 126 1 268 2 128 4 91 1 61 1 132 2 133 1 41 3 276 1 68 2 118 9 119 1 
20 1 95 1 96 1 254 2 351 1 159 1 143 2 355 1 101 1 218 1 257 1 146 1 77 1 52 1 258 1 219 1 27 1 333 1 285 1 105 1 338 1 59 2 246 1 62 1 319 1 66 1 67 1 209 1 252 1 94 1 
20 1 95 1 96 1 254 2 159 1 143 3 355 2 101 1 218 1 257 1 77 1 52 1 258 1 219 1 27 1 333 1 285 1 338 1 59 3 246 1 362 1 62 1 319 1 297 1 66 1 67 1 209 1 252 1 346 1 94 1 
20 1 96 1 254 2 159 1 143 2 355 2 101 1 218 1 257 1 52 1 258 1 219 1 27 1 333 1 338 1 59 2 246 1 362 1 62 1 319 1 297 1 66 1 67 1 209 1 252 1 
135 1 20 2 0 1 338 2 197 1 21 1 59 1 294 1 143 1 124 1 77 1 66 2 52 1 219 2 27 1 322 1 82 1 285 1 346 1 252 1 
20 1 95 1 96 1 254 2 159 1 143 1 101 1 257 1 146 1 77 1 52 1 258 1 219 1 27 1 333 1 285 1 105 1 338 1 59 1 362 1 62 1 319 1 66 1 209 1 252 1 94 1 
64 1 
266 2 222 1 21 1 75 1 15 1 293 1 215 1 294 2 175 1 330 1 124 1 310 1 52 2 27 2 134 1 343 1 82 1 83 1 43 2 252 2 195 2 
138 1 72 1 350 1 212 1 74 1 160 1 190 1 103 1 220 1 194 1 195 3 30 1 266 2 12 1 341 1 314 1 109 1 63 2 113 1 273 1 343 1 43 3 
325 1 30 1 266 1 138 1 72 1 314 1 341 1 350 1 212 1 109 1 160 1 74 1 63 3 174 1 190 1 284 1 273 1 113 1 103 1 343 1 220 1 43 3 194 1 195 3 
325 1 138 1 72 1 350 1 212 1 74 1 160 1 190 1 284 1 103 1 220 1 194 1 195 3 30 1 11 1 266 2 12 1 341 1 314 1 109 1 63 3 174 1 113 1 273 1 343 1 43 3 
325 5 138 1 141 1 190 1 284 4 102 2 103 1 56 1 194 1 337 1 195 5 11 4 12 4 341 1 109 1 15 1 293 1 247 2 63 6 205 2 113 1 207 2 343 3 208 1 72 1 350 1 255 2 212 1 160 1 74 1 215 1 310 1 220 1 30 1 266 7 85 1 267 1 314 1 174 5 175 1 273 1 134 1 179 1 43 5 
325 2 138 1 45 2 190 1 284 2 102 2 103 1 194 1 195 4 11 2 12 2 341 1 15 1 293 1 247 2 63 4 65 1 205 2 113 1 207 2 343 2 72 1 350 1 255 2 212 1 160 1 74 1 215 1 310 1 220 1 30 1 266 4 85 1 267 1 314 1 175 1 174 1 273 1 134 1 43 4 
325 1 138 1 72 1 350 1 255 2 212 1 141 1 74 1 160 1 215 1 190 1 310 1 284 2 102 2 103 1 220 1 56 1 194 1 195 4 30 1 11 2 266 4 267 1 85 1 12 2 341 1 314 1 15 1 293 1 247 2 63 4 174 1 175 1 205 2 207 2 113 1 273 1 134 1 343 2 179 1 43 4 
325 1 138 1 72 1 350 1 255 2 212 1 141 1 74 1 160 1 215 1 190 1 310 1 284 2 102 2 103 1 220 1 56 1 194 1 195 4 30 1 11 2 266 4 267 1 85 1 12 2 341 1 314 1 15 1 293 1 247 2 63 4 174 1 175 1 205 2 207 2 113 1 273 1 134 1 343 2 179 1 43 4 
325 1 45 2 157 2 138 1 210 1 72 1 350 1 212 1 141 1 74 1 160 1 215 1 190 1 310 1 284 2 102 2 103 1 220 1 55 1 81 1 194 1 195 4 30 1 11 2 266 4 267 1 12 2 341 1 314 1 15 1 293 1 63 4 174 1 175 1 207 2 113 1 273 1 134 1 343 2 43 4 70 2 
325 1 138 1 72 1 350 1 255 2 212 1 141 1 74 1 160 1 215 1 190 1 310 1 284 3 102 2 103 1 220 1 56 1 194 1 195 4 30 1 11 3 266 5 267 1 85 1 12 3 341 1 314 1 15 1 293 1 247 2 63 5 174 1 175 1 205 2 207 2 113 1 273 1 134 1 343 2 208 1 179 1 43 4 
325 1 138 1 72 1 350 1 255 2 212 1 141 1 74 1 160 1 215 1 190 1 310 1 284 3 102 2 103 1 220 1 56 1 194 1 195 4 30 1 11 3 266 5 267 1 85 1 12 3 341 1 314 1 15 1 293 1 247 2 63 5 174 1 175 1 205 2 207 2 113 1 273 1 134 1 343 2 208 1 179 1 43 4 
325 1 138 1 45 2 190 1 284 2 102 2 103 1 194 1 195 4 11 2 12 2 341 1 15 1 293 1 63 4 65 1 113 1 207 2 343 2 70 2 157 2 72 1 350 1 212 1 160 1 74 1 215 1 310 1 220 1 81 1 30 1 266 4 267 1 314 1 175 1 174 1 273 1 134 1 43 4 
1 1 183 1 233 1 305 1 327 1 4 1 76 3 309 2 192 1 357 1 193 2 28 1 126 1 245 1 268 1 128 3 200 1 132 1 61 1 40 1 111 2 133 1 112 1 41 2 68 1 118 6 
137 1 1 11 253 1 185 1 140 3 327 2 282 1 76 8 8 1 309 2 357 4 221 1 193 4 28 2 334 2 106 2 244 3 268 2 128 6 200 2 90 1 132 2 61 1 111 1 40 1 173 1 112 11 41 1 18 1 230 1 276 1 68 2 118 14 
156 1 349 1 253 1 72 1 328 1 212 1 142 1 306 1 353 1 76 1 101 1 8 1 162 1 124 1 52 1 240 1 333 1 27 1 357 1 28 1 193 2 30 1 268 1 128 1 200 1 90 1 132 1 294 1 40 1 295 1 151 1 299 1 320 1 68 1 252 1 118 2 
156 1 349 1 253 1 72 1 328 1 212 1 142 1 306 1 101 1 8 1 162 1 124 1 52 1 333 1 27 1 28 1 193 2 30 1 313 1 268 1 32 1 128 1 34 1 200 1 132 1 40 1 294 1 299 1 250 1 320 1 68 1 118 1 252 1 
268 1 128 1 253 1 21 1 302 1 316 1 200 1 90 1 76 1 24 1 132 1 40 1 294 1 124 1 52 2 27 2 82 1 28 1 193 2 68 1 118 2 252 2 
1 1 72 1 22 1 327 1 212 1 142 1 76 1 8 1 162 1 309 1 357 1 125 1 193 2 28 1 334 1 106 1 30 1 268 1 128 2 226 1 200 1 132 1 61 1 40 1 112 1 41 1 18 1 68 1 118 3 
1 1 268 1 33 1 327 1 200 1 4 1 76 2 132 1 40 1 112 1 309 1 357 1 276 1 28 1 193 2 68 1 118 2 106 1 
1 1 268 1 128 2 224 1 200 1 4 1 132 1 61 1 40 1 112 1 309 1 41 1 18 1 357 1 28 1 193 2 68 1 118 2 
1 2 327 1 4 1 76 2 309 2 357 2 193 2 28 1 334 1 106 1 268 1 128 2 200 1 132 1 61 1 40 1 112 2 18 1 41 1 276 1 68 1 118 4 
1 1 268 1 33 1 316 1 327 1 200 1 76 2 132 1 40 1 112 1 309 1 357 1 276 1 28 1 193 2 68 1 118 2 106 1 
1 1 268 1 128 2 224 1 316 1 200 1 132 1 61 1 40 1 112 1 309 1 41 1 18 1 357 1 28 1 193 2 68 1 118 2 
1 2 327 1 76 2 309 2 357 2 193 2 28 1 334 1 106 1 268 1 128 2 316 1 200 1 132 1 61 1 40 1 112 2 18 1 41 1 276 1 68 1 118 4 
1 2 327 1 76 2 309 2 357 2 193 2 28 1 334 1 106 1 268 1 128 2 200 1 132 1 61 1 40 1 112 2 18 1 41 1 276 1 68 1 118 4 
156 1 101 1 124 1 313 1 349 1 52 1 299 1 333 1 27 1 328 1 252 1 294 1 
57 1 101 1 124 1 17 1 349 1 52 1 299 1 333 1 311 1 27 1 252 1 294 1 
1 2 327 1 76 2 8 1 309 2 357 2 193 2 28 1 334 1 106 1 268 1 128 2 200 1 132 1 61 1 40 1 112 2 18 1 41 1 276 1 68 1 118 4 
156 1 313 1 32 1 349 1 351 1 328 1 101 1 124 1 52 1 299 1 27 1 333 1 252 1 
1 1 72 1 22 1 327 1 212 1 142 1 76 2 8 1 162 1 309 1 357 1 125 1 193 2 28 1 334 1 106 1 30 1 268 1 128 1 199 1 200 1 61 1 132 1 40 1 112 1 18 1 276 1 68 1 118 3 
184 1 211 2 186 1 327 1 76 4 214 2 161 1 309 1 193 4 28 2 334 1 106 1 268 2 128 4 168 1 317 1 132 2 61 1 149 1 18 1 115 1 276 1 68 2 69 1 118 8 
184 1 211 2 186 1 327 1 76 4 214 2 161 1 309 2 193 4 28 2 334 1 106 1 268 2 128 4 168 1 317 1 132 2 61 1 149 1 41 1 18 1 115 1 276 1 68 2 69 1 118 8 
183 2 233 2 211 1 305 2 327 3 76 10 214 2 161 1 309 4 192 2 193 2 28 1 334 1 106 1 126 2 268 1 128 8 168 1 317 1 132 1 61 3 133 2 149 1 18 1 41 3 115 1 276 1 68 1 69 1 118 18 
184 1 211 1 327 2 76 6 214 2 161 1 309 4 193 4 28 2 334 2 106 2 107 1 268 2 128 6 168 2 317 1 132 2 61 2 149 1 41 2 18 2 115 1 276 2 68 2 69 1 118 12 
211 2 327 1 76 4 214 2 161 1 193 2 28 1 334 1 106 1 268 1 128 4 168 1 317 1 132 1 61 1 149 1 18 1 115 1 68 1 69 2 118 8 
144 1 93 1 363 1 304 1 80 1 42 1 166 1 148 1 6 1 287 1 
3 1 9 1 
243 1 196 1 144 1 177 1 363 1 304 1 80 1 166 1 148 1 
169 1 265 1 
277 1 46 1 352 1 
325 1 182 1 340 1 158 1 304 1 148 1 6 1 144 1 217 2 93 1 274 1 80 1 363 1 241 1 166 1 43 1 287 1 195 1 
325 1 182 1 340 1 158 1 304 1 148 1 6 1 144 1 217 2 93 1 274 1 80 1 363 1 241 1 166 1 43 1 287 1 195 1 
325 1 182 1 340 1 158 1 304 1 148 1 6 1 144 1 217 2 93 1 274 1 80 1 363 1 241 1 166 1 43 1 287 1 195 1 
277 1 169 1 265 1 
277 1 169 1 265 1 
46 1 352 1 
277 1 46 1 352 1 
189 1 360 1 
182 1 3 1 72 2 304 1 212 2 142 2 237 1 144 1 189 1 162 2 217 1 79 1 80 1 9 1 166 1 195 1 30 2 340 1 360 1 89 1 292 1 148 1 111 1 318 1 204 1 363 1 43 1 
253 1 72 2 303 1 302 2 212 2 76 1 24 1 8 1 124 1 52 2 27 2 28 1 193 2 30 2 84 1 86 1 268 1 128 1 290 1 200 1 90 1 132 1 40 1 176 1 231 1 68 1 252 2 118 2 
95 1 96 1 254 2 351 1 159 1 362 1 62 1 319 1 101 1 257 1 164 1 52 2 206 1 53 1 333 1 27 2 219 1 209 1 252 2 
95 1 96 1 254 2 159 1 362 1 62 1 319 1 101 1 257 1 25 1 52 1 206 1 27 1 219 1 333 1 209 1 252 1 
0 1 21 1 294 1 124 1 164 1 52 1 27 1 219 1 321 1 82 1 252 1 
95 1 96 1 254 2 159 1 362 1 62 1 319 1 101 1 257 1 164 1 52 1 206 1 53 1 27 1 219 1 333 1 209 1 252 1 
14 1 
325 1 174 1 248 1 245 1 191 1 134 1 215 1 
325 2 45 1 255 1 215 1 310 1 195 1 266 1 85 1 15 1 293 1 247 1 175 1 174 1 205 1 134 1 343 1 43 1 
180 1 175 1 124 1 349 1 52 1 310 1 27 1 15 1 251 1 307 1 293 1 252 1 294 1 
325 5 45 6 140 1 255 3 281 1 327 2 75 1 329 1 5 1 238 1 215 8 331 1 310 2 221 1 334 2 83 1 195 1 106 2 288 2 244 1 266 1 37 1 131 1 15 2 60 1 293 2 61 2 175 2 174 2 92 5 18 2 134 5 343 1 344 5 43 1 
183 1 72 1 305 1 327 2 212 1 142 1 215 2 162 1 310 1 220 1 242 1 125 1 195 1 288 2 30 1 201 1 171 1 170 1 15 1 60 1 293 1 61 1 133 1 175 1 134 2 179 1 43 1 117 1 
325 1 15 1 293 1 215 1 248 1 175 1 174 1 191 1 310 1 134 1 
288 2 325 5 45 10 327 2 255 5 60 1 61 2 215 5 92 5 18 2 54 1 134 5 344 5 334 2 106 2 
325 1 174 1 266 1 343 1 43 1 195 1 
266 2 222 1 21 1 75 1 15 1 293 1 215 1 294 2 175 1 330 1 124 1 52 2 249 1 310 1 27 2 134 1 343 1 82 1 43 1 83 1 252 2 195 1 
156 1 30 1 313 1 349 1 72 1 328 1 201 1 212 1 142 1 294 1 101 1 162 1 124 1 52 1 299 1 333 1 27 1 125 1 264 1 252 1 
325 4 45 4 255 2 15 1 75 1 293 1 215 1 175 1 174 2 92 2 310 1 192 1 134 2 344 2 83 1 
363 1 304 1 358 1 
363 1 304 1 358 1 
189 1 363 1 304 1 6 1 286 1 
363 1 304 1 358 1 
278 1 363 1 304 1 
278 1 363 1 304 1 
278 1 363 1 304 1 
363 1 304 1 
144 1 148 1 
183 1 233 1 140 1 327 1 305 1 76 4 161 1 309 2 192 1 221 1 193 2 28 1 126 1 244 1 268 1 128 4 37 1 61 1 132 1 133 1 41 2 68 1 118 8 
137 1 183 1 233 1 140 2 305 1 327 2 76 6 161 1 309 3 192 1 221 1 193 4 28 2 334 1 126 1 106 1 244 1 268 2 128 5 37 1 61 1 132 2 133 1 41 2 345 1 276 1 68 2 118 11 
183 1 233 1 140 1 305 1 281 1 327 3 76 9 161 1 238 1 331 1 309 4 192 1 221 1 193 6 28 3 334 2 126 1 106 2 244 1 268 3 128 10 37 1 131 1 132 3 61 3 133 1 18 2 41 3 345 1 276 1 68 3 118 19 119 1 
183 1 233 1 140 1 305 1 281 1 327 3 76 10 161 1 238 1 331 1 309 5 192 1 221 1 193 6 28 3 334 2 126 1 106 2 244 1 268 3 128 7 37 1 131 1 132 3 61 2 133 1 18 1 41 3 345 1 276 2 68 3 119 1 118 17 
183 1 233 1 140 1 327 1 305 1 76 4 161 1 309 2 192 1 221 1 193 2 28 1 126 1 244 1 268 1 128 4 37 1 61 1 132 1 133 1 41 2 68 1 118 8 
140 1 281 1 327 2 76 6 161 1 238 1 331 1 309 2 221 1 193 2 28 1 334 2 106 2 244 1 268 1 128 6 37 1 131 1 132 1 61 2 18 2 41 1 276 1 68 1 118 12 
183 1 233 1 140 1 305 1 281 1 327 3 76 10 161 1 238 1 331 1 309 5 192 1 221 1 193 8 28 4 334 2 126 1 106 2 244 1 268 4 128 8 37 1 131 1 132 4 61 2 133 1 18 1 41 3 276 2 345 1 68 4 118 18 119 2 
184 1 140 1 281 1 327 3 76 9 161 1 238 1 331 1 309 6 221 1 193 8 28 4 334 3 106 3 244 1 268 4 128 7 37 1 131 1 132 4 61 2 18 2 41 3 276 3 68 4 118 16 119 2 
183 1 128 4 233 1 305 3 327 1 76 3 61 1 133 3 309 6 41 3 276 3 118 7 126 2 
183 1 184 1 233 1 140 1 305 1 281 1 327 3 76 10 161 1 238 1 331 1 309 4 192 1 221 1 193 8 28 4 334 2 126 1 106 2 244 1 268 4 128 8 37 1 131 1 132 4 61 2 133 1 18 1 41 3 276 1 68 4 118 18 119 2 
183 1 268 2 128 4 233 1 327 1 305 1 76 4 61 1 132 2 133 1 309 3 192 1 41 2 276 1 28 2 193 4 68 2 118 8 119 1 126 1 
245 1 183 1 128 3 233 1 305 1 327 1 76 3 61 1 133 1 309 2 192 1 41 2 118 6 126 1 
268 1 128 2 327 1 76 2 61 1 132 1 309 2 41 1 18 1 345 1 28 1 193 2 276 1 334 1 68 1 118 4 106 1 
244 1 137 1 128 4 140 2 327 1 76 3 61 1 309 2 41 1 18 1 221 1 276 1 334 1 118 7 106 1 
137 1 183 1 233 1 140 2 185 1 305 2 327 3 282 1 76 11 309 9 192 1 28 2 193 4 334 2 126 1 106 2 244 2 268 2 128 12 61 3 132 2 133 2 18 2 41 5 276 4 323 1 68 2 118 23 119 2 
128 1 140 1 118 1 
244 1 76 1 118 1 
268 1 128 3 327 1 76 3 132 1 61 1 309 3 18 1 41 2 54 1 193 2 28 1 345 1 276 1 334 1 68 1 118 6 106 1 
140 1 281 1 327 2 76 6 161 1 238 1 331 1 309 2 221 1 193 2 28 1 334 2 106 2 244 1 268 1 128 6 37 1 131 1 132 1 61 2 18 2 41 1 276 1 68 1 118 12 
183 1 128 3 327 1 305 1 76 3 61 1 133 1 309 2 41 1 276 1 118 6 
268 1 128 2 233 1 305 1 76 1 132 1 133 1 309 2 41 1 276 1 28 1 193 2 323 1 68 1 118 3 119 1 126 1 
268 1 183 1 128 5 305 2 327 2 170 1 76 5 132 1 161 1 61 2 133 2 309 5 41 3 193 2 28 1 276 2 68 1 118 10 
268 1 327 1 76 2 161 1 132 1 309 1 28 1 193 2 276 1 68 1 118 2 106 1 
268 1 128 2 327 1 76 2 61 1 161 1 132 1 309 2 41 1 18 1 28 1 193 2 276 1 334 1 68 1 118 4 106 1 
268 3 184 1 128 2 305 1 76 1 161 1 132 3 133 1 309 2 41 1 28 3 193 6 276 1 323 1 68 3 119 1 118 3 
137 1 183 2 184 1 233 1 139 1 140 4 305 3 327 5 213 1 76 16 161 1 309 12 192 1 221 1 193 10 28 5 334 3 126 1 106 3 244 3 268 5 128 18 132 5 61 5 133 3 18 3 41 7 345 1 276 5 323 1 68 5 119 2 121 1 118 34 
30 1 72 1 113 1 212 1 48 1 111 1 7 1 
30 1 326 1 72 1 48 1 212 1 228 1 111 1 7 1 123 1 260 1 113 1 153 1 
124 1 245 1 21 1 52 1 27 1 82 1 252 1 294 1 
30 1 349 1 72 1 212 1 328 1 142 1 294 1 101 1 162 1 124 1 52 1 299 1 27 1 333 1 320 1 252 1 
30 1 349 1 72 1 212 1 328 1 142 1 101 1 162 1 124 1 52 1 299 1 27 1 333 1 320 1 167 1 252 1 
30 1 349 1 72 1 212 1 142 1 101 1 162 1 124 1 52 1 299 1 27 1 311 1 333 1 320 1 167 1 252 1 
2 1 35 1 52 1 27 1 167 1 43 1 252 1 195 1 
35 1 52 1 36 1 27 1 167 1 43 1 252 1 195 1 
101 1 52 1 333 1 27 1 154 1 252 1 
124 1 349 1 52 1 27 1 251 1 155 1 252 1 294 1 
156 1 349 1 72 1 351 1 212 1 328 1 142 1 101 1 8 1 162 1 124 1 52 1 333 1 27 1 28 1 193 2 30 1 84 1 268 1 313 1 32 1 200 1 132 1 40 1 299 1 250 1 320 1 68 1 252 1 
136 1 35 1 36 1 15 1 293 1 318 1 294 1 175 1 249 1 310 1 52 1 259 1 27 1 43 1 324 1 252 1 195 1 
180 1 124 1 349 1 52 1 27 1 154 1 251 1 252 1 
124 1 21 1 52 2 27 2 351 1 82 1 252 2 294 1 
124 1 87 1 349 1 52 1 27 1 272 1 98 1 252 1 
319 1 101 1 254 1 52 1 333 1 27 1 209 1 252 1 62 1 294 1 
124 1 176 1 52 2 27 2 351 1 231 1 362 1 252 2 
124 1 176 1 52 2 27 2 351 1 342 1 252 2 294 1 
124 1 176 1 339 1 52 2 27 2 351 1 252 2 294 1 
30 1 349 1 72 1 212 1 142 1 294 1 101 1 162 1 124 1 52 1 299 1 27 1 311 1 333 1 320 1 252 1 
124 1 349 1 52 1 27 1 167 1 251 1 155 1 252 1 
71 1 298 1 78 1 188 1 111 1 
325 1 31 1 138 1 71 1 341 1 350 1 49 1 188 2 111 1 318 1 174 1 163 1 298 2 78 2 147 1 220 1 43 2 194 1 195 2 
30 1 86 1 71 1 72 1 298 1 303 1 290 1 212 1 188 1 
31 1 71 1 49 1 
218 1 245 1 246 1 67 1 
143 1 218 1 77 1 59 1 246 1 285 1 67 1 
143 1 20 1 66 1 
143 3 108 1 218 1 146 1 77 1 26 1 59 3 246 1 122 2 285 1 67 1 347 1 
143 2 355 1 218 1 77 1 59 2 130 1 246 1 285 1 67 1 
143 1 218 1 257 1 332 1 146 1 77 1 254 1 59 1 73 1 285 1 62 1 
143 1 218 1 146 1 77 1 59 1 246 1 285 1 
143 1 146 1 77 1 59 1 246 2 285 1 67 1 
348 1 143 2 218 1 146 1 77 2 235 1 59 2 187 1 246 1 285 2 
223 1 59 3 73 1 246 1 16 1 143 3 355 2 218 2 146 1 165 1 77 1 285 1 67 1 
254 2 59 2 159 1 246 1 62 1 319 1 143 2 355 1 218 1 146 1 257 1 77 1 285 1 67 1 335 1 
59 4 130 1 73 1 246 1 172 1 16 1 143 4 355 2 218 2 146 1 77 2 285 2 67 1 
143 1 218 1 146 1 77 1 59 1 246 1 285 1 67 1 
59 4 73 1 122 1 246 2 16 1 143 4 355 2 218 3 77 1 26 1 152 1 285 1 67 2 347 1 
198 1 59 2 246 1 271 1 143 2 355 1 218 1 146 1 77 1 364 1 285 1 67 1 
143 3 145 1 218 1 146 1 77 1 26 1 59 3 246 1 122 2 285 1 67 1 347 2 
218 2 51 2 283 1 359 1 
143 1 256 1 146 1 77 1 59 1 285 1 
143 2 355 1 218 1 165 1 146 1 77 1 59 2 246 1 285 1 67 1 
216 1 
143 1 218 1 146 1 77 1 59 1 246 1 285 1 67 1 
143 3 355 1 218 1 165 1 146 1 77 1 59 3 246 1 122 1 285 1 67 1 
218 1 73 1 152 1 16 1 
218 1 246 1 

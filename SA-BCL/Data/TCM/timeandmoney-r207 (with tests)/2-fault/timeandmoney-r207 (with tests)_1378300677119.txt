#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5189 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3757 | 1 -> 0
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 2 244 3 75 1 343 1 344 1 205 9 134 1 207 1 7 2 105 5 36 2 255 6 47 4 46 1 377 2 50 2 89 1 335 1 121 1 19 1 362 1 122 2 123 1 283 1 125 1 267 2 340 1 175 9 
55 2 244 3 75 1 343 1 344 1 205 9 134 1 207 1 7 2 105 5 36 2 255 6 47 4 46 1 377 2 50 2 89 1 335 1 121 1 19 1 362 1 122 2 123 1 283 1 125 1 267 2 340 1 175 9 
55 2 244 4 75 1 343 1 344 1 205 10 134 1 207 1 7 2 105 6 36 2 255 7 47 5 46 1 377 2 50 2 89 1 335 1 121 1 19 1 362 1 122 2 123 1 283 1 125 1 267 2 340 1 175 10 
55 2 244 2 75 1 343 1 344 1 205 7 134 1 207 1 7 2 105 4 36 2 255 4 47 3 46 1 377 1 50 2 89 1 335 1 121 1 19 1 362 1 122 2 283 1 125 1 267 2 340 1 175 7 
55 1 244 1 46 1 47 2 377 2 205 4 121 1 207 1 362 1 122 1 123 1 7 1 125 1 267 1 105 3 36 1 175 4 255 3 
40 1 55 1 343 1 50 1 205 2 206 1 134 1 207 1 362 1 122 1 125 1 7 1 80 1 105 1 36 1 175 2 
244 1 47 1 50 1 205 3 89 1 207 1 362 1 122 2 125 1 105 2 36 2 175 3 255 1 
55 1 244 3 205 9 31 1 207 1 7 1 105 5 36 2 255 7 141 1 47 4 46 1 377 2 50 1 89 1 19 1 121 1 362 1 122 2 123 1 125 1 267 1 340 1 175 9 
55 1 244 3 205 9 31 1 207 1 7 1 105 5 36 2 255 7 141 1 47 4 46 1 377 2 50 1 89 1 19 1 121 1 362 1 122 2 123 1 125 1 267 1 340 1 175 9 
330 1 351 1 62 1 
351 1 6 2 270 1 
14 2 259 2 124 2 311 1 352 2 290 1 224 2 179 2 
27 1 152 1 290 1 156 1 179 2 368 2 348 2 160 1 135 1 183 1 370 1 223 1 136 1 352 2 250 1 224 2 373 1 63 1 357 1 278 1 14 3 259 3 375 1 49 1 113 1 263 1 190 1 211 1 17 1 119 2 124 2 171 2 22 2 311 1 315 1 381 1 242 1 
14 1 87 1 259 1 124 1 352 1 290 1 224 1 71 1 179 1 59 1 
230 1 330 1 14 1 87 1 259 1 58 1 347 1 18 1 293 1 78 1 351 1 21 1 124 1 104 1 
230 1 330 1 14 1 87 1 259 1 58 2 179 1 18 2 293 1 78 1 351 1 124 1 352 1 224 1 104 1 
316 1 18 1 245 1 58 1 226 1 
316 1 330 1 14 1 87 1 321 1 259 1 290 1 58 2 204 1 179 1 59 1 18 2 124 1 351 1 352 1 224 1 71 1 226 1 276 1 
316 1 18 1 58 1 
14 1 87 1 259 1 58 1 290 1 179 1 59 1 18 1 124 1 352 1 224 1 71 1 226 1 276 1 
351 1 
316 1 330 1 18 2 351 1 204 1 58 2 93 1 226 1 
85 1 316 2 330 1 301 2 155 1 204 1 58 5 189 2 2 1 324 1 240 1 18 5 351 1 92 1 91 1 294 2 195 1 226 2 186 1 
311 1 62 1 
14 2 259 2 179 1 380 1 124 2 352 1 311 2 10 1 224 1 
161 1 337 1 249 1 
0 1 27 1 357 1 14 1 259 1 375 1 49 1 113 1 190 1 211 1 348 1 17 1 171 1 22 1 311 1 381 1 
27 1 357 1 14 2 259 2 375 1 49 1 113 1 179 1 190 1 211 1 348 1 17 1 272 1 124 1 171 1 265 1 22 1 249 1 224 1 381 1 
14 3 259 3 124 3 265 1 352 1 311 1 224 3 179 3 
14 1 87 1 259 1 124 1 224 1 71 1 179 1 
380 1 14 1 87 1 259 1 124 1 352 1 10 1 224 1 179 1 
27 1 342 1 58 1 290 1 179 3 368 2 348 1 160 1 272 1 183 1 293 1 78 1 370 1 101 1 223 1 136 1 352 2 250 1 224 3 104 1 230 1 63 1 357 1 278 1 14 4 87 1 259 4 375 1 49 1 113 1 263 1 190 1 211 1 17 1 119 1 18 1 380 1 124 3 171 1 265 1 22 1 311 1 381 1 242 1 
1 1 14 2 259 2 124 2 265 1 311 1 224 1 179 1 347 1 
230 1 14 3 87 1 259 3 58 1 179 3 18 1 272 1 380 1 78 1 293 1 101 1 351 1 124 3 265 2 194 1 352 1 224 3 104 1 
14 2 259 2 179 2 380 1 161 1 124 2 265 1 352 1 249 1 224 2 
27 1 357 1 14 1 259 1 375 1 49 1 113 1 190 1 211 1 348 1 17 1 171 1 22 1 311 1 381 1 
27 1 357 1 14 1 259 1 375 1 49 1 113 1 281 1 378 1 211 1 348 1 171 1 22 1 311 1 381 1 
218 1 96 1 152 2 368 2 246 1 160 1 183 2 370 1 161 2 349 1 249 2 250 1 185 1 41 1 63 1 278 1 376 1 361 1 263 1 116 1 119 4 192 1 337 2 339 1 
14 1 87 1 259 1 124 1 103 1 104 1 224 1 179 1 
1 1 14 5 259 5 179 4 347 1 76 1 272 1 380 1 273 1 124 5 265 2 352 1 311 1 224 4 
14 2 87 1 259 2 124 2 103 1 224 2 71 1 179 2 
310 1 48 1 
310 1 48 1 
142 1 210 1 
142 1 210 1 
142 1 210 1 
68 1 310 1 48 1 
310 1 48 1 34 1 
142 1 310 2 359 1 48 2 210 1 72 1 
68 1 310 1 48 1 
68 1 310 1 48 1 
310 1 48 1 313 1 
310 1 48 1 313 1 
310 1 48 1 313 1 
42 1 359 1 48 2 58 2 143 2 304 3 292 1 220 2 115 2 146 1 100 1 18 2 213 1 351 1 310 2 214 1 53 2 254 2 25 1 
243 1 97 1 58 1 179 2 220 1 32 1 8 1 34 1 224 2 83 1 14 2 259 2 48 1 304 1 143 1 115 1 117 1 18 1 310 1 124 2 311 1 53 1 25 1 197 1 
55 1 7 1 267 1 
55 1 7 1 206 1 
56 1 7 3 267 2 252 1 94 1 206 1 
56 1 7 2 267 1 253 1 94 1 206 1 
56 1 7 2 267 1 94 2 206 1 
316 1 243 1 153 1 366 2 155 2 204 1 58 5 270 1 324 3 6 3 351 2 8 1 294 1 226 4 41 1 355 1 330 1 301 1 189 1 16 1 361 1 114 2 360 1 116 1 18 5 20 1 339 1 23 1 195 1 216 1 174 2 197 1 
316 6 95 1 155 6 245 5 58 9 204 1 270 3 324 8 102 1 371 1 6 9 8 4 351 5 294 2 226 7 41 3 355 2 330 1 299 1 301 2 279 1 189 2 16 2 361 3 114 6 116 3 240 1 67 1 18 9 285 5 339 3 23 3 216 1 195 1 174 6 
153 1 366 1 155 2 58 3 270 2 324 3 351 3 8 1 6 4 294 1 226 2 41 1 355 1 330 1 301 1 189 1 16 1 361 1 360 1 114 2 116 1 240 1 18 3 339 1 23 1 174 2 
95 1 153 1 366 2 155 4 58 4 270 3 324 5 351 4 6 7 371 1 8 2 294 1 226 3 41 2 355 1 330 1 301 1 279 1 189 1 16 1 361 2 114 4 360 1 116 2 240 1 18 4 339 2 23 2 174 4 
357 1 90 1 62 1 
357 1 336 1 
106 1 
357 1 49 1 
357 3 90 2 365 1 258 1 49 1 381 1 
357 1 49 1 381 1 
357 1 196 1 
41 1 218 3 152 3 98 1 334 1 361 1 167 1 119 5 51 1 282 2 183 2 79 1 69 1 126 1 185 2 269 1 26 1 
41 1 218 3 152 3 98 1 334 1 361 1 167 1 119 5 51 1 282 2 183 2 79 1 69 1 126 1 185 2 269 1 26 1 
41 1 218 3 165 1 152 3 98 1 334 1 361 1 167 1 119 5 51 1 282 2 183 2 79 1 69 1 126 1 185 2 269 1 26 1 
218 10 341 1 152 15 28 3 98 5 368 2 160 1 133 1 183 14 79 2 370 1 185 5 225 1 296 1 41 4 63 1 331 4 302 1 15 1 334 1 361 4 263 1 167 2 116 3 168 1 119 29 51 1 282 3 69 1 126 1 339 3 23 3 269 2 26 2 
218 4 341 1 202 1 152 4 98 1 368 4 160 2 79 1 183 3 370 2 274 1 185 3 41 1 63 2 334 1 361 1 263 2 167 1 119 7 282 2 51 1 69 1 269 1 26 1 
198 1 55 1 27 1 291 1 99 1 348 1 205 2 206 1 207 1 7 2 9 1 105 1 36 1 252 1 255 1 12 1 257 1 358 1 111 1 280 1 237 1 211 1 50 1 362 1 122 1 171 1 125 1 22 1 267 1 175 2 
198 1 55 1 27 1 291 1 99 1 348 1 205 3 206 1 207 1 7 2 9 1 105 1 252 1 36 1 255 2 12 1 297 1 43 1 257 1 358 1 111 1 211 1 50 1 362 1 122 1 171 1 22 1 363 1 267 1 175 3 
198 1 27 1 55 1 291 1 99 1 348 1 205 2 206 1 207 1 7 2 105 1 252 1 255 2 43 1 257 1 358 1 111 1 211 1 50 1 362 1 171 1 22 1 363 1 267 1 175 2 
198 2 297 1 27 1 357 1 111 2 49 1 113 1 291 2 264 1 262 1 211 1 50 2 205 1 348 1 120 1 122 1 171 1 22 1 353 1 251 1 36 1 175 1 39 1 
198 1 55 1 27 1 291 1 99 1 348 1 205 1 206 1 7 2 9 1 36 1 252 1 12 1 43 1 257 1 358 1 111 1 237 1 211 1 50 1 122 1 171 1 125 1 22 1 267 1 175 1 
30 1 
199 4 155 2 154 1 204 3 58 5 347 1 348 2 293 1 351 2 6 2 104 1 353 1 294 1 355 1 357 1 301 1 14 1 110 2 259 1 113 2 211 1 170 1 18 5 171 2 21 1 124 1 22 2 70 1 217 1 316 6 176 1 27 1 177 2 74 1 29 2 270 2 131 2 324 2 323 1 221 1 222 2 132 2 78 1 137 1 84 1 39 1 140 2 230 1 330 1 87 1 49 1 189 1 235 1 338 1 195 1 
316 2 230 1 199 2 14 1 87 1 259 1 154 1 204 1 58 3 235 1 347 1 323 1 222 1 18 3 78 1 293 1 21 1 124 1 104 1 93 1 84 1 217 1 
316 1 199 3 154 1 58 3 204 1 347 1 323 1 132 1 293 1 78 1 351 1 104 1 84 1 230 1 330 1 14 1 87 1 259 1 235 1 18 3 124 1 21 1 93 1 217 1 
316 2 199 3 154 1 204 1 58 3 347 1 323 1 222 1 132 1 293 1 78 1 351 1 104 1 84 1 230 1 140 1 330 1 14 1 87 1 259 1 235 1 18 3 124 1 21 1 93 1 217 1 
199 6 154 1 155 1 58 5 204 3 347 1 293 1 351 5 104 1 294 1 14 1 301 1 109 1 259 1 110 2 18 5 21 1 124 1 70 1 128 1 217 1 316 7 318 1 177 2 270 2 29 2 131 2 323 1 324 1 222 4 132 4 78 1 35 1 84 1 140 4 230 1 330 5 44 1 87 1 189 1 235 1 338 1 93 1 195 1 
316 4 177 2 199 4 155 1 154 1 204 2 58 4 29 2 270 2 347 1 131 2 324 1 323 1 221 1 222 2 132 2 293 1 78 1 351 2 6 2 104 1 294 1 84 1 140 2 230 1 330 1 301 1 14 1 87 1 110 2 259 1 189 1 235 1 18 4 338 1 21 1 124 1 70 1 195 1 217 1 
316 4 318 1 177 2 199 4 155 1 154 1 204 2 58 4 29 2 270 2 347 1 131 2 324 1 323 1 222 2 132 2 293 1 78 1 351 1 104 1 294 1 84 1 140 2 230 1 330 1 44 1 14 1 301 1 87 1 110 2 259 1 189 1 235 1 18 4 338 1 124 1 21 1 70 1 128 1 195 1 217 1 
316 4 318 1 177 2 199 4 155 1 154 1 204 2 58 4 29 2 270 2 347 1 131 2 324 1 323 1 222 2 132 2 293 1 78 1 351 1 104 1 294 1 84 1 140 2 230 1 330 1 44 1 14 1 301 1 87 1 110 2 259 1 189 1 235 1 18 4 338 1 124 1 21 1 70 1 128 1 195 1 217 1 
316 4 199 4 203 1 155 1 154 1 204 2 58 4 347 1 131 2 324 1 323 1 222 2 77 1 132 2 293 1 78 1 351 1 6 2 104 1 294 1 84 1 140 2 230 1 330 1 44 1 14 1 301 1 87 1 110 2 259 1 189 1 235 1 261 1 65 2 144 2 18 4 338 1 124 1 21 1 195 1 217 1 
316 5 318 1 177 2 199 5 155 1 154 1 204 2 58 4 29 2 270 2 347 1 131 2 324 1 323 1 222 3 132 3 293 1 78 1 351 1 104 1 294 1 35 1 84 1 230 1 140 3 330 1 44 1 301 1 14 1 87 1 110 2 259 1 189 1 235 1 18 4 338 1 124 1 21 1 70 1 128 1 195 1 217 1 
316 5 318 1 177 2 199 5 155 1 154 1 204 2 58 4 29 2 270 2 347 1 131 2 324 1 323 1 222 3 132 3 293 1 78 1 351 1 104 1 294 1 35 1 84 1 230 1 140 3 330 1 44 1 301 1 14 1 87 1 110 2 259 1 189 1 235 1 18 4 338 1 124 1 21 1 70 1 128 1 195 1 217 1 
316 4 199 4 203 1 155 1 154 1 204 2 58 4 347 1 131 2 324 1 323 1 221 1 222 2 132 2 293 1 78 1 351 1 6 2 104 1 294 1 84 1 140 2 230 1 330 1 301 1 14 1 87 1 110 2 259 1 189 1 235 1 65 2 144 2 18 4 338 1 21 1 124 1 195 1 217 1 
218 2 96 1 152 2 368 2 160 1 183 2 161 1 370 1 249 1 250 1 185 2 62 1 41 1 63 1 278 1 334 1 263 1 361 1 167 1 119 4 51 1 282 1 337 1 69 1 311 1 269 1 
218 2 152 8 28 3 98 1 368 4 160 2 133 1 135 1 183 6 370 2 161 4 136 1 249 11 250 2 185 1 162 1 41 2 63 2 356 1 164 1 331 3 278 1 15 1 234 1 263 2 361 1 116 1 119 14 337 11 311 1 339 2 314 1 23 2 
27 1 0 1 152 1 179 1 368 2 348 1 272 1 160 1 183 1 135 1 161 1 370 1 136 1 250 1 224 1 139 1 256 1 63 1 357 1 278 1 14 2 234 1 259 2 375 1 49 1 113 1 190 1 263 1 211 1 17 1 119 2 171 1 124 1 22 1 265 1 311 1 381 1 288 1 
200 1 152 9 98 4 348 3 160 3 161 7 350 1 249 7 250 3 63 3 357 2 14 3 259 3 113 1 361 3 263 3 167 1 211 2 116 2 17 2 119 18 69 1 171 3 124 1 22 3 265 1 127 2 311 1 23 2 269 1 73 2 218 8 27 2 179 1 368 6 272 1 135 1 183 9 370 3 136 1 224 1 185 4 329 2 38 2 41 3 43 1 278 3 234 1 375 2 49 2 334 1 190 2 282 1 51 1 337 7 193 1 339 2 242 2 381 2 
27 2 96 1 152 1 219 1 179 1 156 2 3 1 368 4 348 8 160 2 135 1 183 1 370 2 184 1 136 1 224 1 250 2 353 1 39 1 298 1 43 1 63 2 357 3 14 1 278 2 45 1 259 1 280 1 49 2 113 2 263 2 211 2 145 1 119 2 124 1 171 7 265 1 22 8 24 1 
218 1 152 1 179 1 368 2 160 1 183 2 161 1 370 1 249 1 352 1 250 1 224 1 185 1 41 1 63 1 278 1 14 1 234 1 259 1 263 1 361 1 116 1 119 3 380 1 337 1 124 1 339 1 286 1 23 1 
41 1 218 1 63 1 96 1 278 1 152 2 98 1 263 1 368 2 246 1 119 2 160 1 161 1 370 1 337 1 249 1 250 1 339 1 
218 1 63 1 96 1 278 1 263 1 361 1 368 2 116 1 119 2 160 1 183 2 161 1 370 1 337 1 349 1 249 1 250 1 185 1 
218 2 96 1 152 2 98 1 368 2 160 1 183 2 370 1 161 2 249 2 250 1 185 1 41 1 63 1 278 1 263 1 361 1 116 1 119 4 337 2 339 1 23 1 
41 1 218 1 63 1 278 1 45 1 152 2 98 1 263 1 368 2 246 1 119 2 160 1 161 1 370 1 337 1 249 1 250 1 339 1 
218 1 63 1 278 1 45 1 263 1 361 1 368 2 116 1 119 2 160 1 183 2 161 1 370 1 337 1 349 1 249 1 250 1 185 1 
218 2 152 2 98 1 368 2 160 1 183 2 370 1 161 2 249 2 250 1 185 1 41 1 63 1 278 1 45 1 263 1 361 1 116 1 119 4 337 2 339 1 23 1 
41 1 218 2 63 1 278 1 152 2 98 1 361 1 263 1 116 1 368 2 119 4 160 1 183 2 161 2 370 1 337 2 249 2 250 1 339 1 185 1 23 1 
27 1 152 1 368 2 348 1 160 1 135 1 183 1 370 1 136 1 250 1 63 1 357 1 14 1 278 1 259 1 375 1 49 1 113 1 190 1 263 1 211 1 17 1 119 2 171 1 22 1 311 1 381 1 242 1 
27 1 152 1 368 2 348 1 160 1 135 1 183 1 370 1 136 1 250 1 63 1 357 1 14 1 278 1 259 1 375 1 332 1 49 1 113 1 281 1 263 1 211 1 378 1 119 2 171 1 22 1 311 1 381 1 
218 2 152 2 98 1 368 2 160 1 183 2 370 1 161 2 249 2 250 1 185 1 41 1 63 1 278 1 234 1 263 1 361 1 116 1 119 4 337 2 339 1 23 1 
218 2 27 1 152 2 98 1 368 2 348 1 160 1 183 2 161 2 370 1 249 2 250 1 185 1 329 1 41 1 63 1 357 1 14 1 278 1 259 1 375 1 280 1 49 1 361 1 190 1 263 1 116 1 211 1 17 1 119 4 337 2 171 1 22 1 339 1 23 1 381 1 242 1 
218 1 152 2 98 1 179 1 368 2 160 1 183 1 370 1 161 1 352 1 249 1 250 1 327 1 224 1 41 1 63 1 278 1 14 1 234 1 259 1 361 1 263 1 116 1 119 3 380 1 337 1 124 1 339 1 23 1 
218 6 152 9 178 1 28 1 98 3 368 4 271 2 160 2 133 1 183 10 370 2 248 1 274 1 185 3 354 1 41 3 231 1 63 2 331 2 166 2 15 1 263 2 361 3 116 3 305 1 239 1 119 19 215 1 339 3 23 3 
218 4 341 2 152 14 178 2 28 2 98 2 368 6 271 1 160 3 183 12 370 3 248 2 274 1 185 2 209 1 187 1 11 1 354 1 41 3 63 3 331 2 188 1 166 4 15 2 361 2 263 3 116 2 239 1 119 26 308 1 284 1 215 1 339 3 23 3 
341 1 152 19 98 4 160 3 248 2 209 1 11 1 354 1 63 3 166 4 15 3 361 5 263 3 116 4 167 1 305 1 119 39 308 1 69 1 215 1 23 4 269 1 218 8 28 3 178 1 368 6 271 1 133 1 183 20 182 1 370 3 274 1 185 4 187 1 41 5 331 4 188 1 334 1 239 1 51 1 282 1 284 1 339 4 
218 7 341 2 152 19 178 1 28 3 98 3 368 8 271 1 160 4 133 1 182 1 183 17 370 4 248 2 274 1 209 1 185 4 187 1 11 1 354 1 41 5 63 4 331 4 188 1 166 4 15 3 334 1 263 4 361 4 167 1 116 3 305 1 239 1 119 36 282 1 51 1 308 1 69 1 284 1 215 1 339 4 23 4 269 1 
218 14 341 1 152 26 178 1 28 4 98 7 368 4 271 1 160 2 133 2 183 24 370 2 248 1 274 1 209 1 185 7 187 1 11 1 354 1 41 8 63 2 164 2 331 4 188 1 166 4 15 2 334 1 263 2 361 8 167 1 116 7 239 1 119 50 282 1 51 1 308 1 69 1 284 1 215 1 339 7 23 7 269 1 
146 1 191 1 310 1 359 1 48 1 53 1 143 1 292 1 220 1 115 1 
97 1 34 1 
317 1 52 1 208 1 310 1 48 1 53 1 143 1 220 1 115 1 
42 1 359 1 48 1 58 1 143 1 304 2 292 1 220 1 115 1 146 1 100 1 18 1 351 1 310 1 214 1 53 1 254 1 25 1 
42 1 359 1 48 1 58 1 143 1 304 2 292 1 220 1 115 1 146 1 100 1 18 1 351 1 310 1 214 1 53 1 254 1 25 1 
42 1 359 1 48 1 58 1 143 1 304 2 292 1 220 1 115 1 146 1 100 1 18 1 351 1 310 1 214 1 53 1 254 1 25 1 
68 1 81 1 72 1 
68 1 81 1 72 1 
229 1 313 1 
229 1 313 1 72 1 
83 1 117 1 
243 1 97 1 58 1 179 2 220 1 158 1 100 1 32 1 8 1 34 1 224 2 226 1 254 1 83 1 14 2 259 2 48 1 143 1 304 1 115 1 117 1 18 1 310 1 124 2 311 1 53 1 197 1 
68 1 81 1 
229 1 313 1 72 1 
27 1 57 1 320 1 152 1 219 1 156 2 368 2 348 2 160 1 135 1 183 1 370 1 136 1 250 1 275 1 372 1 298 1 63 1 357 1 278 1 14 2 107 1 234 1 259 2 49 1 263 1 211 1 119 2 124 2 171 2 22 2 
198 1 43 1 55 1 27 1 364 1 232 1 257 1 358 1 280 1 211 1 66 1 206 1 348 2 7 2 171 2 22 2 267 1 252 1 12 1 
198 1 43 1 55 1 64 1 27 1 364 1 257 1 358 1 211 1 206 1 348 1 7 2 171 1 22 1 267 1 252 1 12 1 
198 1 27 1 357 1 232 1 49 1 113 1 211 1 348 1 120 1 171 1 22 1 353 1 163 1 39 1 
198 1 43 1 55 1 27 1 364 1 232 1 257 1 358 1 211 1 66 1 206 1 348 1 7 2 171 1 22 1 267 1 252 1 12 1 
147 1 
85 1 330 1 351 1 155 1 92 1 62 1 324 1 
316 1 177 1 155 1 204 1 58 1 270 1 29 1 324 1 6 1 351 2 294 1 330 1 301 1 189 1 18 1 70 1 195 1 
155 8 58 5 204 3 247 1 348 3 6 12 351 8 294 4 61 2 13 2 355 2 357 10 301 4 258 1 260 1 113 1 114 6 361 2 211 3 116 2 306 2 18 5 171 3 22 3 23 2 173 2 174 6 316 5 176 1 319 2 27 4 270 6 324 9 78 2 82 2 38 2 85 1 228 2 41 2 330 2 280 1 374 2 49 3 189 4 236 1 238 1 336 3 90 2 92 1 339 2 195 4 54 1 196 2 381 3 
316 1 176 1 28 1 155 5 58 1 204 1 270 3 324 8 6 6 351 5 82 1 294 2 209 1 11 1 13 2 41 2 355 1 330 2 331 1 301 2 188 1 15 1 189 2 114 5 361 2 116 2 379 1 18 1 308 1 284 1 309 1 339 2 195 2 23 2 174 5 
155 2 58 1 290 1 179 1 324 2 59 1 82 1 352 1 224 1 294 1 276 1 13 2 41 2 14 1 301 1 87 1 259 1 233 1 189 1 361 1 167 1 18 1 51 1 124 1 128 1 71 1 195 1 269 1 
85 1 330 1 301 1 155 1 189 1 324 1 351 1 92 1 294 1 195 1 
13 2 41 2 155 5 270 5 114 5 361 2 116 2 324 5 6 10 351 5 82 1 339 2 23 2 38 1 174 5 
316 1 330 1 18 1 351 1 58 1 204 1 
316 4 27 1 176 2 155 2 204 2 58 3 324 2 348 4 137 1 294 2 353 1 295 1 39 1 355 2 357 1 301 2 49 1 189 2 236 2 113 2 211 1 238 1 240 1 118 1 170 1 18 3 171 4 22 4 195 1 
27 1 290 1 179 2 368 2 348 1 160 1 183 1 370 1 223 1 136 1 352 2 224 2 250 1 63 1 357 1 14 3 278 1 259 3 375 1 49 1 113 1 190 1 263 1 211 1 17 1 119 1 171 1 124 2 22 1 311 1 242 1 381 1 
355 1 330 2 176 1 301 1 155 2 189 1 270 2 114 2 324 1 282 1 6 4 351 4 294 1 195 1 174 2 
108 1 53 1 220 1 
53 1 268 1 292 1 220 1 117 1 
108 1 53 1 220 1 
108 1 53 1 220 1 
53 1 220 1 169 1 
53 1 220 1 169 1 
53 1 220 1 169 1 
53 1 220 1 
310 1 48 1 
41 1 218 3 63 2 341 1 152 3 98 1 334 1 361 1 263 2 368 4 167 1 119 6 282 1 51 1 160 2 183 3 370 2 69 1 185 2 269 1 
41 1 218 2 152 2 334 1 361 1 167 1 119 4 282 1 51 1 183 2 69 1 185 2 62 1 269 1 
41 1 218 2 63 1 152 2 98 1 361 1 263 1 116 1 368 2 119 4 160 1 183 2 370 1 339 1 151 1 185 1 23 1 
41 1 218 2 331 2 15 1 152 3 28 1 98 1 361 1 116 1 119 7 133 1 183 4 339 1 185 1 23 1 
218 9 341 2 152 10 28 2 98 4 368 4 180 1 133 1 160 2 183 11 370 2 185 5 41 3 63 2 356 1 331 2 164 1 334 1 361 3 263 2 167 2 116 2 119 21 282 1 51 1 69 1 339 2 23 2 269 2 
119 1 183 1 331 1 
119 1 152 1 28 1 
41 1 218 3 63 1 152 3 98 1 263 1 361 1 368 2 116 1 119 6 160 1 183 3 370 1 339 1 151 1 23 1 185 2 38 1 
218 2 152 6 28 1 98 1 368 2 160 1 183 6 370 1 274 1 209 1 185 1 11 1 41 2 63 1 331 1 188 1 15 1 263 1 361 2 116 2 119 12 308 1 284 1 339 2 23 2 
41 1 119 2 51 1 183 1 152 1 361 1 
218 2 63 1 341 1 152 1 98 1 334 1 263 1 167 1 368 2 180 1 119 3 160 1 183 2 370 1 69 1 185 1 269 1 
41 2 218 4 63 1 233 1 152 4 98 2 263 1 361 2 368 2 167 1 119 8 160 1 51 1 183 4 370 1 274 1 185 2 269 1 
41 1 218 1 63 1 152 2 98 1 263 1 368 2 119 2 160 1 370 1 339 1 274 1 
41 1 218 2 63 1 152 2 98 1 361 1 263 1 116 1 368 2 119 4 160 1 183 2 370 1 339 1 274 1 185 1 23 1 
218 2 63 3 341 1 152 1 98 1 263 3 368 6 167 1 180 1 305 1 119 3 160 3 183 2 370 3 274 1 185 1 269 1 
218 11 341 2 152 14 28 3 98 5 368 10 180 1 160 5 133 1 183 16 370 5 274 1 225 1 185 6 41 5 63 5 331 4 302 1 15 1 334 1 263 5 361 5 167 2 116 3 168 1 305 1 119 30 282 1 51 2 69 1 339 3 151 1 23 3 269 2 
218 2 152 3 28 1 368 2 160 1 183 3 370 1 274 1 185 2 41 1 63 1 331 1 15 1 334 1 361 1 263 1 167 1 119 6 282 1 51 1 308 1 69 1 269 1 
218 3 152 5 28 1 98 1 368 4 160 2 133 1 183 4 370 2 274 1 185 2 41 2 63 2 331 2 15 1 334 1 361 1 263 2 167 1 119 9 282 1 51 1 308 1 69 1 339 1 151 1 23 1 269 1 
218 4 341 1 152 8 28 1 98 1 368 6 160 3 183 9 370 3 274 1 209 1 185 3 11 1 41 3 63 3 331 1 188 1 15 1 334 1 263 3 361 3 167 1 116 2 119 17 282 1 51 1 308 1 69 1 284 1 339 2 151 1 23 2 269 1 
218 5 341 1 152 9 28 1 98 2 368 6 160 3 183 6 370 3 274 1 209 1 185 3 11 1 41 3 63 3 331 1 188 1 15 1 334 1 263 3 361 2 167 1 116 1 119 15 282 1 51 1 308 1 69 1 284 1 339 2 151 1 23 2 269 1 
218 2 152 3 28 1 368 2 160 1 183 3 370 1 274 1 185 2 41 1 63 1 331 1 15 1 334 1 361 1 263 1 167 1 119 6 282 1 51 1 308 1 69 1 269 1 
218 2 152 6 28 1 98 1 368 2 160 1 183 6 370 1 274 1 209 1 185 1 11 1 41 2 63 1 331 1 188 1 15 1 263 1 361 2 116 2 119 12 308 1 284 1 339 2 23 2 
218 5 341 2 152 9 28 1 98 2 368 8 160 4 183 7 370 4 274 1 209 1 185 3 11 1 41 3 63 4 331 1 188 1 15 1 334 1 263 4 361 2 167 1 116 1 119 16 282 1 51 1 308 1 69 1 284 1 339 2 151 1 23 2 269 1 
218 6 341 2 152 9 28 1 98 3 368 8 160 4 183 7 370 4 274 1 209 1 185 3 11 1 41 3 63 4 331 1 188 1 15 1 263 4 361 2 116 2 305 1 119 16 308 1 284 1 339 3 23 3 
41 3 218 7 233 1 152 5 98 3 334 1 361 3 167 2 119 9 282 1 51 2 183 4 69 1 185 4 269 2 
218 4 341 2 152 9 28 1 98 1 368 8 160 4 183 7 370 4 274 1 209 1 185 3 11 1 41 3 63 4 331 1 188 1 15 1 334 1 263 4 361 2 167 1 116 1 305 1 119 16 282 1 51 1 308 1 69 1 284 1 339 2 23 2 269 1 
1 1 14 1 259 1 124 1 33 1 311 1 347 1 
277 1 1 1 14 1 201 1 259 1 346 1 347 1 307 1 124 1 33 1 311 1 312 1 
27 1 357 1 171 1 22 1 49 1 113 1 353 1 211 1 62 1 39 1 348 1 
27 1 357 1 14 2 259 2 375 1 49 1 113 1 179 1 190 1 211 1 348 1 124 1 171 1 265 1 22 1 311 1 224 1 381 1 
230 1 27 1 357 3 14 2 87 1 259 2 375 1 49 2 236 1 179 1 190 1 211 1 348 1 124 2 171 1 265 1 22 1 311 1 104 1 224 2 196 1 173 1 381 2 
27 1 129 1 179 1 348 2 224 2 104 1 230 1 357 3 14 2 87 1 259 2 375 1 49 2 236 1 211 1 378 1 171 2 124 2 22 2 265 1 311 1 196 1 381 2 173 1 
316 1 27 1 129 1 58 2 348 3 78 1 351 1 330 1 357 4 300 1 88 1 49 1 236 1 113 1 211 1 18 2 336 1 90 1 171 3 22 3 196 1 173 1 381 1 
316 1 330 1 27 1 129 1 357 4 374 1 49 1 58 2 113 1 236 1 211 1 348 3 18 2 78 1 336 1 90 1 351 1 171 3 22 3 196 1 381 1 173 1 
27 1 171 1 22 1 211 1 24 1 348 1 
43 1 27 3 357 3 258 1 280 1 49 2 219 1 113 2 112 1 156 1 3 1 211 2 145 1 348 7 149 1 184 1 171 6 241 1 22 7 24 1 381 1 
152 2 348 1 160 2 161 1 249 1 250 2 63 2 357 1 14 2 259 2 263 2 361 1 211 1 167 1 17 1 119 4 69 1 171 1 124 1 127 1 22 1 265 1 311 1 269 1 218 2 27 1 179 1 368 4 183 2 370 2 224 1 275 1 185 2 329 1 41 1 278 2 234 1 280 1 375 1 49 1 334 1 190 1 51 1 282 1 337 1 242 1 381 1 
316 2 319 1 155 1 58 3 204 1 324 1 348 1 78 1 351 1 294 2 226 1 85 1 228 1 330 1 357 2 301 2 374 1 189 2 113 1 238 1 306 1 18 3 336 1 90 1 171 1 92 1 22 1 195 2 
27 2 357 2 258 1 280 1 49 1 211 1 348 2 90 1 171 2 22 2 54 1 24 1 381 1 
27 1 129 1 357 1 280 1 49 1 113 1 159 1 211 1 348 4 171 4 22 4 353 1 39 1 
27 2 357 1 130 1 49 1 236 1 211 1 348 2 149 1 193 1 171 2 241 1 22 2 172 1 381 1 
55 1 27 1 358 1 7 1 171 1 22 1 113 1 211 1 206 1 348 1 
43 1 27 1 357 1 57 1 280 1 49 1 219 1 211 1 348 2 171 2 22 2 
27 2 357 3 280 1 49 2 236 1 113 1 219 1 159 1 3 1 211 2 348 5 145 1 171 4 22 5 353 1 39 1 
86 1 27 2 357 3 280 1 49 2 236 1 113 1 219 1 159 1 211 2 348 5 145 1 171 4 22 5 353 1 39 1 
27 1 357 1 14 2 259 2 375 1 49 1 113 1 179 1 378 1 211 1 348 1 124 1 171 1 265 1 22 1 311 1 224 1 381 1 
27 2 357 1 258 1 49 1 236 1 112 1 211 1 348 1 149 1 171 1 241 1 22 1 381 1 
303 1 311 1 326 1 150 1 266 1 
230 1 330 1 87 1 303 2 58 2 181 1 18 2 78 1 293 1 101 1 351 1 311 1 326 1 104 1 266 2 150 2 226 1 287 1 328 1 
14 1 107 1 303 1 320 1 259 1 124 1 326 1 266 1 372 1 
326 1 287 1 328 1 
207 1 362 1 105 1 62 1 
207 1 362 1 122 1 105 1 36 1 175 1 205 1 
291 1 50 1 175 1 
343 2 205 3 4 1 5 1 122 1 362 1 207 1 125 1 105 1 36 1 37 1 175 3 
207 1 362 1 122 1 105 1 377 1 36 1 175 2 255 1 205 2 
55 1 47 1 205 1 121 1 122 1 125 1 7 1 267 1 105 1 36 1 175 1 
207 1 122 1 125 1 105 1 36 1 175 1 205 1 
207 2 362 1 122 1 125 1 36 1 175 1 205 1 
289 1 345 1 205 2 60 1 207 1 122 2 125 1 105 1 36 2 175 2 
244 1 47 1 205 3 19 1 207 1 362 1 122 1 125 1 105 2 36 1 340 1 175 3 255 2 
55 1 157 1 206 1 205 2 207 1 362 1 122 1 7 2 125 1 267 1 105 1 36 1 252 1 175 2 255 1 
244 1 47 1 377 1 205 4 207 1 362 1 122 2 123 1 125 1 105 2 36 2 175 4 255 2 
207 1 362 1 122 1 125 1 105 1 36 1 175 1 205 1 
244 1 47 1 343 1 333 1 4 1 205 4 5 1 207 2 362 2 122 1 105 3 36 1 175 4 255 2 
141 1 367 1 205 2 207 1 122 1 362 1 125 1 105 1 36 1 175 2 138 1 255 1 
322 1 343 2 4 1 205 3 5 2 122 1 362 1 207 1 125 1 105 1 36 1 175 3 
212 2 148 1 105 2 325 1 
122 1 125 1 227 1 36 1 175 1 205 1 
19 1 207 1 362 1 122 1 125 1 105 1 36 1 175 2 255 1 205 2 
369 1 
207 1 362 1 122 1 125 1 105 1 36 1 175 1 205 1 
343 1 205 3 19 1 122 1 362 1 207 1 125 1 105 1 36 1 175 3 255 1 
244 1 47 1 333 1 105 1 
207 1 105 1 

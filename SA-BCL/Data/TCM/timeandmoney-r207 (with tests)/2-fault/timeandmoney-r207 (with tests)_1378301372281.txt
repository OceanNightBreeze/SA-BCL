#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1400 | stmt -> ;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration; | STATEMENT | 1298 | stmt -> ;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
156 2 311 4 242 1 133 9 218 2 268 1 316 1 220 2 339 6 192 1 33 1 162 1 342 2 274 1 257 1 371 1 350 2 85 1 299 1 378 9 173 1 19 1 49 2 103 1 182 3 74 5 105 1 214 2 
156 2 311 4 242 1 133 9 218 2 268 1 316 1 220 2 339 6 192 1 33 1 162 1 342 2 274 1 257 1 371 1 350 2 85 1 299 1 378 9 173 1 19 1 103 1 49 2 182 3 74 5 105 1 214 2 
156 2 311 5 242 1 133 10 218 2 268 1 316 1 220 2 339 7 192 1 33 1 162 1 342 2 274 1 257 1 371 1 350 2 85 1 299 1 378 10 173 1 19 1 103 1 49 2 182 4 74 6 105 1 214 2 
156 2 311 3 242 1 133 7 218 2 316 1 220 2 339 4 192 1 33 1 162 1 342 2 274 1 257 1 371 1 350 2 85 1 299 1 378 7 173 1 19 1 103 1 49 1 182 2 74 4 105 1 214 2 
350 1 311 2 242 1 133 4 218 1 268 1 378 4 220 1 339 3 49 2 33 1 162 1 342 1 182 1 74 3 105 1 214 1 371 1 
350 1 156 1 133 2 218 1 378 2 220 1 173 1 103 1 94 1 33 1 162 1 9 1 74 1 105 1 370 1 214 1 
156 1 85 1 311 1 133 3 218 2 378 3 220 2 339 1 33 1 162 1 182 1 74 2 105 1 
156 1 311 4 242 1 133 9 218 2 268 1 316 1 220 2 339 7 33 1 162 1 342 1 139 1 371 1 350 1 85 1 378 9 19 1 49 2 182 3 74 5 105 1 358 1 214 1 
156 1 311 4 242 1 133 9 218 2 268 1 316 1 220 2 339 7 33 1 162 1 342 1 139 1 371 1 350 1 85 1 378 9 19 1 49 2 182 3 74 5 105 1 358 1 214 1 
65 1 
187 1 67 2 336 1 
341 2 142 2 313 2 229 2 333 2 211 2 213 1 24 1 
264 1 313 2 244 2 245 2 267 1 110 1 341 3 346 1 252 1 344 1 253 1 61 1 39 2 195 1 12 1 62 2 11 1 351 1 168 1 141 1 142 3 229 2 145 1 259 1 18 1 177 1 278 1 128 1 306 2 73 1 333 2 211 2 332 1 180 1 212 1 213 1 24 1 
341 1 365 1 142 1 313 1 229 1 333 1 211 1 189 1 48 1 24 1 
142 1 187 1 219 1 374 1 157 1 221 1 341 1 223 1 203 1 365 1 293 1 165 1 333 1 241 1 
313 1 142 1 229 1 187 1 219 1 374 2 157 1 223 2 341 1 203 1 365 1 165 1 211 1 333 1 241 1 
6 1 223 1 250 1 374 1 75 1 
6 1 223 2 187 1 374 2 157 1 194 1 284 1 75 1 
6 1 223 1 374 1 
313 1 142 1 229 1 374 1 189 1 48 1 223 1 341 1 365 1 211 1 333 1 75 1 25 1 24 1 
187 1 
6 1 223 2 187 1 374 2 157 1 303 1 194 1 75 1 
265 1 187 1 374 5 157 1 91 1 302 1 148 1 223 5 6 2 261 1 114 1 71 1 79 1 50 2 51 1 209 2 256 2 194 1 75 2 
65 1 
142 2 313 1 229 1 338 1 341 2 137 1 333 2 211 1 213 2 
153 1 301 1 196 1 
11 1 141 1 142 1 244 1 259 1 245 1 363 1 177 1 341 1 128 1 306 1 73 1 344 1 332 1 61 1 213 1 
11 1 141 1 313 1 142 2 229 1 244 1 259 1 373 1 245 1 177 1 341 2 128 1 279 1 306 1 73 1 344 1 332 1 333 1 61 1 196 1 
313 4 142 5 229 4 373 2 90 1 338 1 353 1 341 5 279 1 293 1 254 1 333 5 211 1 213 1 
341 2 365 1 142 2 313 2 229 2 333 2 369 1 48 1 
341 3 142 3 313 3 229 3 373 1 211 1 333 3 213 1 
341 1 365 1 142 1 313 1 229 1 333 1 48 1 
341 1 137 1 365 1 142 1 313 1 229 1 333 1 211 1 338 1 
264 1 313 3 244 1 219 1 245 1 267 1 338 1 341 4 223 1 365 1 346 1 252 1 344 1 165 1 253 1 61 1 39 1 62 2 11 1 351 1 141 1 352 1 142 4 229 3 259 1 145 1 373 1 374 1 18 1 177 1 278 1 128 1 203 1 279 1 306 1 73 1 332 1 211 2 333 3 212 1 213 1 310 1 241 1 24 1 
341 2 142 2 313 1 229 1 373 1 293 1 90 1 333 2 213 1 
352 1 313 3 142 3 229 3 373 2 187 1 219 1 374 1 338 1 223 1 341 3 203 1 365 1 279 1 323 1 165 1 211 1 333 3 241 1 
313 2 142 2 229 2 373 1 338 1 301 1 341 2 211 1 333 2 196 1 
11 1 141 1 142 1 244 1 259 1 245 1 177 1 341 1 128 1 306 1 73 1 344 1 332 1 61 1 213 1 
11 1 142 1 244 1 259 1 245 1 201 1 177 1 341 1 306 1 73 1 344 1 332 1 61 1 213 1 285 1 
27 1 264 1 288 1 134 1 267 1 367 1 346 1 252 1 39 4 196 2 118 1 62 2 351 1 43 1 375 1 18 2 301 2 20 1 123 1 232 1 153 2 104 1 180 2 212 1 
341 1 365 1 142 1 313 1 229 1 165 1 333 1 369 1 
227 1 327 1 
227 1 327 1 
107 1 305 1 
107 1 305 1 
107 1 305 1 
31 1 227 1 327 1 
31 1 227 1 327 1 
227 1 208 1 327 1 
107 1 305 1 227 2 230 1 44 1 327 2 
31 1 227 1 327 1 
227 1 327 1 69 1 
227 1 327 1 69 1 
227 1 327 1 69 1 
349 1 131 1 243 1 28 1 142 2 227 1 313 2 229 2 121 1 374 1 47 1 172 1 327 1 341 2 223 1 364 1 102 1 329 1 262 1 208 1 333 2 130 1 213 1 53 1 
131 2 243 2 227 2 230 1 187 1 68 1 374 2 171 1 327 2 147 2 125 1 364 2 223 2 102 3 262 1 207 1 96 1 130 2 282 1 
350 1 342 1 214 1 
350 1 214 1 370 1 
350 3 342 2 120 1 294 1 176 1 370 1 
350 2 160 1 342 1 294 1 176 1 370 1 
350 2 342 1 294 1 176 2 370 1 
216 1 187 2 157 1 6 1 223 5 7 2 367 1 79 1 163 2 324 1 256 1 194 1 275 1 118 1 66 1 67 3 199 1 374 5 47 1 148 2 123 1 149 1 329 1 71 3 50 1 104 1 209 1 237 1 283 2 75 4 53 1 336 1 
187 5 290 1 157 1 317 5 158 1 6 6 223 9 114 1 7 6 250 5 367 3 79 1 256 2 275 1 194 1 118 3 348 1 64 1 66 2 67 9 374 9 47 4 148 6 123 3 149 3 71 8 50 2 357 1 104 3 209 2 237 2 283 6 75 7 286 1 336 3 
216 1 187 3 157 1 223 3 114 1 7 2 367 1 163 1 256 1 118 1 66 1 199 1 67 4 374 3 47 1 148 2 123 1 149 1 71 3 50 1 104 1 209 1 237 1 283 2 75 2 336 2 
216 1 187 4 157 1 290 1 223 4 7 4 114 1 367 2 163 2 256 1 118 2 348 1 66 1 67 7 199 1 374 4 47 2 148 4 123 2 149 2 71 5 50 1 104 2 209 1 237 1 283 4 75 3 286 1 336 3 
65 1 
150 1 344 1 
32 1 
11 1 344 1 177 1 
344 1 52 1 
344 1 177 1 
11 1 217 1 312 2 344 3 177 1 249 1 
197 1 76 2 375 3 46 1 18 3 124 1 232 2 161 1 116 1 8 1 234 1 104 1 180 4 335 1 39 7 38 1 118 1 
197 1 76 2 375 3 46 1 18 3 124 1 232 2 161 1 116 1 8 1 234 1 104 1 180 4 335 1 39 7 38 1 118 1 
197 1 76 2 375 3 46 1 18 3 124 1 232 2 161 1 116 1 8 1 179 1 234 1 104 1 335 1 180 4 39 7 38 1 118 1 
26 1 76 3 264 1 161 2 367 3 116 2 8 2 346 1 272 1 255 1 37 1 38 1 39 31 118 4 62 2 84 3 197 1 351 1 297 1 87 1 375 10 46 1 18 15 123 3 149 3 124 5 232 5 331 4 234 2 104 4 381 1 335 1 180 16 212 1 
62 4 197 1 351 2 76 2 264 2 1 1 375 4 45 1 46 1 18 4 124 1 232 3 161 1 116 1 8 1 234 1 346 2 104 1 335 1 180 5 37 1 212 2 39 9 118 1 
184 1 156 1 133 2 244 1 218 1 245 1 188 1 220 1 339 1 33 1 162 1 271 1 342 1 140 1 97 1 370 1 13 1 350 2 226 1 170 1 259 1 120 1 378 2 355 1 152 1 306 1 332 1 74 1 105 1 214 1 
184 1 156 1 133 3 244 1 218 1 245 1 188 1 220 1 339 2 33 1 271 1 342 1 34 1 140 1 97 1 370 1 350 2 226 1 120 1 259 1 378 3 355 1 152 1 306 1 72 1 205 1 332 1 74 1 105 1 214 1 
156 1 184 1 133 2 244 1 245 1 188 1 339 2 33 1 342 1 34 1 140 1 97 1 370 1 350 2 226 1 259 1 120 1 378 2 152 1 306 1 205 1 332 1 74 1 105 1 214 1 
184 2 156 2 133 1 108 1 244 1 218 1 245 1 315 1 188 2 220 1 191 1 111 1 117 1 344 1 140 2 61 1 259 1 378 1 99 1 177 1 306 1 72 1 332 1 
184 1 156 1 133 1 244 1 218 1 245 1 188 1 220 1 162 1 271 1 342 1 140 1 97 1 370 1 13 1 350 2 226 1 259 1 120 1 378 1 355 1 152 1 306 1 205 1 332 1 214 1 
328 1 
0 1 55 2 289 1 244 2 337 4 56 1 187 2 245 2 135 1 93 1 6 6 341 1 344 1 293 1 347 2 256 1 61 2 194 3 296 1 66 1 142 1 259 1 300 2 67 2 148 2 304 2 151 1 203 1 306 2 71 2 154 2 209 1 108 1 219 1 157 1 221 1 111 1 222 2 223 5 365 1 79 1 165 1 325 2 374 5 379 1 326 1 177 1 330 1 50 1 332 1 333 1 281 1 334 1 336 2 241 1 
142 1 337 2 300 1 219 1 374 3 379 1 221 1 303 1 326 1 93 1 6 2 223 3 341 1 151 1 203 1 365 1 330 1 165 1 293 1 333 1 194 1 241 1 
337 3 219 1 187 1 157 1 221 1 93 1 6 1 341 1 223 3 365 1 293 1 165 1 347 1 194 1 142 1 374 3 379 1 303 1 326 1 203 1 151 1 330 1 333 1 241 1 
337 3 219 1 187 1 157 1 221 1 93 1 341 1 223 3 6 2 365 1 293 1 165 1 347 1 194 1 325 1 142 1 300 1 374 3 379 1 303 1 326 1 203 1 151 1 330 1 333 1 241 1 
0 1 55 2 337 6 56 1 187 5 219 1 78 1 157 5 221 1 269 1 222 2 93 1 6 7 223 5 341 1 365 1 79 1 193 1 293 1 165 1 347 4 256 1 194 3 325 4 142 1 300 4 374 5 379 1 202 1 303 1 148 1 326 1 304 2 151 1 203 1 71 1 330 1 154 2 50 1 209 1 333 1 336 2 240 1 241 1 
0 1 55 2 337 4 56 1 187 2 93 1 341 1 6 4 293 1 347 2 256 1 194 2 142 1 67 2 300 2 148 1 304 2 203 1 151 1 71 1 154 2 209 1 219 1 157 1 221 1 222 2 223 4 365 1 79 1 165 1 325 2 374 4 379 1 326 1 330 1 50 1 333 1 281 1 241 1 336 2 
0 1 55 2 337 4 56 1 187 1 219 1 157 1 78 1 221 1 269 1 222 2 93 1 6 4 341 1 223 4 365 1 79 1 293 1 165 1 347 2 256 1 194 2 325 2 142 1 300 2 374 4 379 1 148 1 326 1 304 2 203 1 151 1 71 1 330 1 154 2 50 1 333 1 209 1 336 2 241 1 240 1 
0 1 55 2 337 4 56 1 187 1 219 1 157 1 78 1 221 1 269 1 222 2 93 1 6 4 341 1 223 4 365 1 79 1 293 1 165 1 347 2 256 1 194 2 325 2 142 1 300 2 374 4 379 1 148 1 326 1 304 2 203 1 151 1 71 1 330 1 154 2 50 1 333 1 209 1 336 2 241 1 240 1 
0 1 55 2 337 4 187 1 219 1 4 1 157 1 78 1 221 1 222 2 93 1 6 4 341 1 223 4 365 1 79 1 293 1 165 1 347 2 256 1 194 2 14 2 42 1 325 2 86 1 142 1 16 2 300 2 67 2 374 4 379 1 148 1 326 1 203 1 151 1 71 1 330 1 50 1 333 1 209 1 241 1 
0 1 55 2 337 5 56 1 187 1 219 1 157 1 78 1 221 1 269 1 222 2 93 1 341 1 223 4 6 5 365 1 79 1 293 1 165 1 347 3 256 1 194 2 325 3 142 1 300 3 374 4 379 1 202 1 148 1 326 1 304 2 203 1 151 1 71 1 330 1 154 2 50 1 209 1 333 1 336 2 241 1 240 1 
0 1 55 2 337 5 56 1 187 1 219 1 157 1 78 1 221 1 269 1 222 2 93 1 341 1 223 4 6 5 365 1 79 1 293 1 165 1 347 3 256 1 194 2 325 3 142 1 300 3 374 4 379 1 202 1 148 1 326 1 304 2 203 1 151 1 71 1 330 1 154 2 50 1 209 1 333 1 336 2 241 1 240 1 
0 1 55 2 337 4 187 1 219 1 4 1 157 1 221 1 222 2 93 1 6 4 223 4 341 1 365 1 79 1 293 1 165 1 347 2 256 1 194 2 14 2 325 2 142 1 16 2 300 2 67 2 374 4 379 1 148 1 326 1 151 1 203 1 71 1 330 1 50 1 209 1 333 1 281 1 241 1 
62 2 65 1 351 1 264 1 346 1 252 1 267 1 212 1 20 1 
26 1 264 2 267 2 367 1 368 1 346 2 252 1 255 1 39 14 196 11 118 2 12 1 62 4 84 3 351 2 228 1 375 2 18 6 301 4 122 1 123 2 124 1 149 2 278 1 232 1 178 1 331 3 153 11 210 1 104 1 180 8 212 2 213 1 
264 1 313 1 244 1 245 1 267 1 363 1 341 2 344 1 346 1 252 1 345 1 61 1 82 1 39 2 11 1 62 2 12 1 351 1 141 1 142 2 229 1 259 1 373 1 301 1 18 1 174 1 177 1 278 1 128 1 306 1 279 1 178 1 73 1 332 1 333 1 180 1 212 1 213 1 
244 3 245 3 247 1 341 3 138 2 60 2 252 3 346 3 344 2 61 1 196 7 12 1 63 1 62 6 11 2 197 1 351 3 141 2 142 3 145 2 259 2 18 10 301 7 149 2 306 3 205 1 73 2 153 7 104 3 212 3 213 2 76 1 264 3 313 1 267 3 320 2 161 1 367 2 116 1 39 20 166 1 118 3 229 1 373 1 376 2 375 8 46 1 177 2 123 2 124 4 232 4 278 1 128 2 279 1 178 1 333 1 332 2 335 1 180 10 
244 7 245 7 341 1 251 1 252 2 346 2 344 4 61 2 12 1 62 4 11 1 351 2 98 1 142 1 259 3 18 1 20 1 100 1 306 6 206 1 212 2 106 1 215 1 264 2 108 1 313 1 267 2 111 1 321 1 39 2 83 1 168 2 119 1 229 1 373 1 170 1 377 1 177 3 278 1 129 1 332 4 333 1 180 1 
264 1 313 1 267 1 338 1 112 1 341 1 367 1 346 1 252 1 196 1 39 3 118 1 62 2 351 1 142 1 229 1 375 1 301 1 18 2 123 1 149 1 232 1 178 1 153 1 211 1 333 1 104 1 180 1 212 1 
62 2 351 1 264 1 288 1 375 1 267 1 301 1 20 1 123 1 124 1 153 1 252 1 346 1 180 2 212 1 196 1 39 2 118 1 
62 2 351 1 264 1 43 1 375 1 267 1 301 1 18 2 20 1 232 1 367 1 153 1 252 1 346 1 104 1 212 1 196 1 39 2 
264 1 267 1 367 1 346 1 252 1 39 4 196 2 118 1 62 2 351 1 375 2 301 2 18 2 20 1 123 1 149 1 124 1 232 1 153 2 104 1 180 2 212 1 
62 2 351 1 264 1 288 1 375 1 267 1 301 1 123 1 124 1 206 1 153 1 252 1 346 1 180 2 212 1 196 1 39 2 118 1 
62 2 351 1 264 1 43 1 375 1 267 1 301 1 18 2 232 1 367 1 206 1 153 1 252 1 346 1 104 1 212 1 196 1 39 2 
264 1 267 1 367 1 346 1 252 1 39 4 196 2 118 1 62 2 351 1 375 2 301 2 18 2 123 1 149 1 124 1 232 1 206 1 153 2 104 1 180 2 212 1 
62 2 351 1 264 1 375 2 267 1 18 2 301 2 123 1 124 1 149 1 232 1 367 1 153 2 252 1 346 1 104 1 180 2 212 1 196 2 39 4 118 1 
264 1 244 1 245 1 267 1 341 1 344 1 252 1 346 1 61 1 39 2 12 1 11 1 62 2 351 1 141 1 142 1 259 1 145 1 18 1 177 1 278 1 128 1 306 1 73 1 332 1 180 1 212 1 213 1 
264 1 244 1 3 1 245 1 267 1 341 1 344 1 252 1 346 1 61 1 39 2 12 1 11 1 62 2 351 1 142 1 259 1 201 1 18 1 177 1 278 1 306 1 73 1 332 1 180 1 212 1 213 1 285 1 
264 1 267 1 367 1 346 1 252 1 39 4 196 2 118 1 62 2 351 1 375 2 301 2 18 2 123 1 149 1 124 1 232 1 178 1 153 2 104 1 180 2 212 1 
264 1 244 1 245 1 267 1 341 1 138 1 367 1 344 1 252 1 346 1 196 2 39 4 118 1 11 1 62 2 351 1 141 1 142 1 259 1 145 1 170 1 375 2 18 2 301 2 123 1 177 1 124 1 149 1 232 1 128 1 306 1 153 2 73 1 104 1 332 1 180 2 212 1 
264 1 313 1 267 1 338 1 341 1 367 1 346 1 252 1 39 3 196 1 118 1 62 2 277 1 351 1 142 1 229 1 375 1 18 1 301 1 123 1 124 1 149 1 178 1 153 1 104 1 211 1 333 1 180 2 212 1 
26 1 287 1 264 2 2 1 314 1 291 1 115 2 367 3 346 2 255 1 276 1 39 19 118 3 62 4 84 1 351 2 15 1 45 1 375 6 18 10 123 3 149 3 124 3 232 3 331 2 104 3 155 1 180 9 212 2 309 2 
26 2 264 3 314 1 5 1 136 1 291 2 115 4 367 2 346 3 37 2 276 1 39 26 118 3 62 6 84 2 41 1 351 3 15 1 143 1 375 4 45 1 380 1 18 12 123 3 124 2 149 3 232 2 331 2 104 2 155 2 180 14 212 3 309 1 23 1 
26 3 287 1 76 1 264 3 314 1 5 1 136 1 291 2 161 1 115 4 367 4 116 1 346 3 255 1 37 1 276 1 39 41 118 5 41 1 62 6 84 3 197 1 351 3 15 1 143 1 45 1 375 8 46 1 380 1 18 21 123 4 149 4 124 4 232 4 307 1 331 4 104 5 335 1 155 1 180 20 212 3 309 1 23 1 
26 3 287 1 76 1 264 4 314 1 5 1 136 1 291 2 161 1 115 4 367 3 116 1 346 4 255 1 37 2 276 1 39 38 118 5 41 1 62 8 84 3 197 1 351 4 15 1 143 1 45 1 375 7 46 1 380 1 18 18 123 4 149 4 124 3 232 4 307 1 331 4 104 4 335 1 155 1 180 20 212 4 309 1 23 1 
26 2 76 1 264 2 314 1 5 1 136 1 291 1 161 1 115 4 367 7 116 1 346 2 255 2 37 1 276 1 39 52 118 8 41 1 62 4 84 4 197 1 351 2 15 1 143 1 228 2 45 1 375 14 46 1 380 1 18 25 123 7 149 7 124 7 232 7 331 4 104 8 335 1 155 1 180 27 212 2 309 1 23 1 
131 1 125 1 364 1 243 1 227 1 230 1 96 1 130 1 36 1 327 1 
349 1 208 1 
131 1 364 1 243 1 361 1 89 1 227 1 130 1 327 1 354 1 
31 1 113 1 
44 1 236 1 69 1 
131 1 243 1 227 1 230 1 187 1 68 1 374 1 171 1 327 1 147 1 125 1 223 1 364 1 102 2 262 1 96 1 130 1 282 1 
131 1 243 1 227 1 230 1 187 1 68 1 374 1 171 1 327 1 147 1 125 1 223 1 364 1 102 2 262 1 96 1 130 1 282 1 
131 1 243 1 227 1 230 1 187 1 68 1 374 1 171 1 327 1 147 1 125 1 223 1 364 1 102 2 262 1 96 1 130 1 282 1 
31 1 113 1 44 1 
31 1 113 1 44 1 
236 1 69 1 
44 1 236 1 69 1 
28 1 121 1 
131 1 243 1 28 1 313 2 159 1 341 2 223 1 364 1 349 1 142 2 227 1 229 2 121 1 374 1 47 1 171 1 147 1 327 1 172 1 102 1 329 1 208 1 333 2 130 1 213 1 75 1 53 1 
264 1 244 2 245 2 267 1 319 1 341 2 344 1 252 1 343 1 346 1 39 2 83 1 62 2 12 1 351 1 168 2 142 2 259 1 17 1 18 1 177 1 70 1 278 1 306 2 178 1 332 1 333 2 180 1 212 1 359 1 106 1 
350 2 226 1 244 2 120 1 259 1 170 1 245 2 188 1 200 1 355 1 224 1 152 1 306 2 342 1 205 1 292 1 332 1 214 1 370 1 
350 2 226 1 244 1 77 1 120 1 259 1 245 1 188 1 355 1 152 1 306 1 342 1 205 1 292 1 332 1 214 1 370 1 
108 1 244 1 259 1 245 1 188 1 191 1 177 1 111 1 224 1 306 1 344 1 332 1 61 1 295 1 
350 2 226 1 244 1 120 1 259 1 245 1 188 1 200 1 355 1 224 1 152 1 306 1 342 1 205 1 292 1 332 1 214 1 370 1 
372 1 
65 1 
56 1 187 2 157 1 6 1 223 1 79 1 256 1 194 1 67 1 374 1 148 1 304 1 71 1 154 1 50 1 209 1 336 1 
289 1 244 3 245 3 187 8 246 1 91 1 6 5 7 6 60 2 344 10 256 4 61 1 194 3 10 2 11 3 298 2 66 2 258 2 259 3 146 1 67 12 148 8 149 2 150 3 306 3 71 9 209 4 104 2 217 1 312 2 219 2 109 2 157 2 223 5 367 2 79 4 164 2 273 1 225 2 118 2 167 1 88 1 170 1 374 5 177 3 123 2 50 4 51 1 332 4 52 2 283 6 238 2 239 2 336 6 
26 1 54 1 289 1 187 5 109 1 157 2 136 1 223 1 6 1 7 5 367 2 79 2 35 1 256 2 194 1 118 2 41 1 84 1 66 1 143 1 258 2 67 6 374 1 380 1 148 5 123 2 149 2 71 8 331 1 50 2 209 2 104 2 283 5 336 3 23 1 
313 1 109 1 189 1 269 1 341 1 223 1 161 1 365 1 116 1 79 1 256 1 118 2 142 1 229 1 258 2 374 1 46 1 175 1 148 2 48 1 71 2 50 1 209 1 104 1 211 1 333 1 25 1 24 1 
187 1 157 1 91 1 148 1 71 1 79 1 50 1 51 1 209 1 256 1 
258 2 67 10 187 5 109 1 148 5 123 2 149 2 7 5 71 5 60 1 367 2 104 2 283 5 118 2 336 5 
223 1 6 1 187 1 374 1 157 1 194 1 
108 1 244 4 289 2 245 4 246 2 111 1 6 4 223 3 114 1 79 1 344 1 273 1 256 2 61 2 194 2 296 1 66 2 259 1 374 3 148 2 177 1 126 1 306 4 71 2 263 1 50 2 332 1 209 2 334 1 
264 1 313 2 244 1 245 1 267 1 341 3 346 1 344 1 252 1 253 1 61 1 39 1 62 2 11 1 351 1 141 1 142 3 229 2 145 1 259 1 18 1 177 1 278 1 128 1 306 1 73 1 333 2 211 2 332 1 212 1 213 1 24 1 
76 1 66 1 289 1 67 4 187 4 157 2 148 2 7 2 71 1 79 1 50 1 209 1 256 1 283 2 336 2 
364 1 243 1 95 1 
364 1 243 1 95 1 
125 1 364 1 243 1 169 1 121 1 
364 1 243 1 95 1 
364 1 243 1 198 1 
364 1 243 1 198 1 
364 1 243 1 198 1 
364 1 243 1 
227 1 327 1 
62 4 351 2 197 1 76 1 264 2 375 3 46 1 18 4 124 1 232 2 161 1 116 1 346 2 104 1 180 4 335 1 212 2 37 1 39 8 118 1 
65 1 
62 2 351 1 264 1 375 2 18 2 248 1 123 1 149 1 124 1 232 1 367 1 346 1 104 1 180 2 212 1 39 4 118 1 
26 1 84 1 375 2 18 4 123 1 149 1 124 1 232 1 367 1 331 2 104 1 255 1 180 3 39 7 118 1 
360 1 76 1 264 2 161 2 367 2 116 2 368 1 346 2 255 1 37 2 39 23 118 3 84 2 62 4 197 1 351 2 228 1 375 9 46 1 18 12 123 2 124 4 149 2 232 5 331 2 104 3 335 1 180 11 212 2 
331 1 18 1 39 1 
84 1 180 1 39 1 
62 2 351 1 264 1 375 3 18 3 248 1 123 1 149 1 124 1 232 2 60 1 367 1 346 1 104 1 180 3 212 1 39 6 118 1 
26 1 264 1 136 1 367 2 346 1 39 12 118 2 84 1 41 1 62 2 351 1 143 1 45 1 375 2 380 1 18 6 123 2 124 1 149 2 232 1 331 1 104 2 180 6 212 1 23 1 
375 2 46 1 18 3 124 1 232 1 161 1 116 1 104 1 180 3 39 6 118 1 
360 1 62 2 351 1 197 1 264 1 375 2 18 2 124 1 232 1 161 1 116 1 346 1 180 1 335 1 37 1 212 1 39 3 
62 2 351 1 264 1 45 1 375 5 46 1 18 5 175 1 124 2 232 3 161 2 116 2 346 1 104 2 180 5 212 1 39 10 118 2 
62 2 351 1 264 1 45 1 375 1 123 1 124 1 346 1 180 2 212 1 39 2 118 1 
62 2 351 1 264 1 375 2 45 1 18 2 123 1 149 1 124 1 232 1 367 1 346 1 104 1 180 2 212 1 39 4 118 1 
360 1 62 6 351 3 287 1 264 3 45 1 375 2 18 2 124 1 232 1 161 1 116 1 346 3 180 1 37 1 212 3 39 3 
360 1 26 1 76 1 287 1 264 5 248 1 161 3 367 3 116 3 346 5 255 1 37 2 39 34 118 5 62 10 84 3 197 1 297 1 351 5 87 1 45 1 375 12 46 2 18 18 123 3 149 3 124 5 232 7 331 4 104 5 381 1 335 1 180 16 212 5 
26 1 76 1 264 1 161 1 116 1 346 1 39 8 118 1 84 1 41 1 62 2 351 1 197 1 45 1 375 2 46 1 18 4 232 2 331 1 104 1 180 4 335 1 212 1 
26 1 76 1 264 2 248 1 161 1 116 1 346 2 255 1 39 11 118 2 41 1 62 4 84 1 197 1 351 2 45 1 375 3 46 1 18 5 123 1 149 1 124 1 232 2 331 2 104 1 335 1 180 6 212 2 
26 1 76 1 264 3 248 1 136 1 161 1 367 2 116 1 346 3 37 1 39 19 118 3 84 1 41 1 62 6 197 1 351 3 143 1 45 1 375 4 46 1 380 1 18 10 123 2 124 1 149 2 232 3 331 1 104 3 335 1 180 9 212 3 23 1 
26 1 76 1 264 3 248 1 136 1 161 1 367 1 116 1 346 3 37 1 39 17 118 3 84 1 41 1 62 6 197 1 351 3 143 1 45 1 375 5 46 1 380 1 18 7 123 2 124 2 149 2 232 3 331 1 104 2 335 1 180 10 212 3 23 1 
26 1 76 1 264 1 161 1 116 1 346 1 39 8 118 1 84 1 41 1 62 2 351 1 197 1 45 1 375 2 46 1 18 4 232 2 331 1 104 1 180 4 335 1 212 1 
26 1 264 1 136 1 367 2 346 1 39 12 118 2 84 1 41 1 62 2 351 1 143 1 45 1 375 2 380 1 18 6 123 2 124 1 149 2 232 1 331 1 104 2 180 6 212 1 23 1 
26 1 76 1 264 4 248 1 136 1 161 1 367 1 116 1 346 4 37 2 39 18 118 3 41 1 62 8 84 1 197 1 351 4 143 1 45 1 375 5 46 1 380 1 18 8 123 2 124 2 149 2 232 3 331 1 104 2 335 1 180 10 212 4 23 1 
26 1 264 4 287 1 136 1 367 2 346 4 37 2 39 16 118 3 41 1 62 8 84 1 351 4 143 1 45 1 375 6 380 1 18 7 123 3 124 3 149 3 232 3 331 1 104 2 180 9 212 4 23 1 
197 1 375 6 46 1 18 4 124 3 232 3 161 3 116 3 104 1 335 2 180 3 39 7 118 1 
26 1 76 1 264 4 287 1 136 1 161 1 367 1 116 1 346 4 37 2 39 18 118 3 41 1 62 8 84 1 197 1 351 4 143 1 45 1 375 4 46 1 380 1 18 8 123 2 124 1 149 2 232 3 331 1 104 2 335 1 180 10 212 4 23 1 
341 1 142 1 293 1 90 1 80 1 333 1 213 1 
142 1 90 1 29 1 127 1 270 1 341 1 233 1 80 1 293 1 308 1 333 1 213 1 
65 1 306 1 244 1 245 1 61 1 
11 1 141 1 313 1 142 2 229 1 244 1 373 1 259 1 245 1 177 1 341 2 306 1 73 1 344 1 332 1 333 1 61 1 213 1 
11 2 141 1 313 2 142 2 229 1 244 1 373 1 259 1 245 1 246 1 177 2 341 2 365 1 306 1 73 1 165 1 344 3 332 1 333 2 52 1 213 1 239 1 241 1 
313 2 244 2 245 2 246 1 341 2 365 1 322 1 344 3 165 1 11 2 142 2 229 1 259 1 373 1 201 1 177 2 306 2 73 1 333 2 332 1 52 1 213 1 241 1 239 1 
11 1 312 1 244 3 259 1 187 1 219 1 245 3 374 2 246 1 157 1 362 1 177 1 150 1 223 2 6 1 306 3 322 1 344 4 332 1 52 1 61 1 239 1 40 1 
11 1 312 1 244 3 259 1 187 1 219 1 245 3 374 2 246 1 157 1 177 1 150 1 223 2 6 1 306 3 322 1 344 4 332 1 52 1 225 1 61 1 239 1 
306 1 244 1 321 1 259 1 245 1 332 1 
217 1 11 1 168 1 98 1 132 1 244 6 170 1 259 2 245 6 377 1 177 2 100 1 129 1 306 5 321 1 344 3 332 3 61 2 83 1 215 1 
244 1 245 1 341 2 138 1 252 2 346 2 344 1 196 1 62 4 11 1 351 2 197 1 141 1 142 2 145 1 259 1 301 1 18 3 306 1 73 1 153 1 104 1 212 2 213 2 359 1 264 2 76 1 313 1 267 2 320 1 161 1 116 1 39 6 118 1 229 1 170 1 373 1 375 2 46 1 177 1 232 2 128 1 178 1 333 1 332 1 335 1 180 3 
312 1 244 1 187 1 245 1 219 1 157 1 91 1 223 3 6 2 79 2 164 1 344 2 273 1 256 2 225 1 61 1 194 1 10 1 374 3 148 1 150 1 306 1 71 1 50 2 51 1 209 2 75 1 238 1 
167 1 217 1 11 1 312 1 244 2 170 1 259 1 245 2 177 1 306 2 321 1 344 2 332 2 
108 1 244 4 170 1 259 1 245 4 111 1 177 1 58 1 306 4 322 1 344 1 332 1 61 1 
11 1 119 1 244 2 259 1 245 2 246 1 377 1 247 1 177 1 100 1 306 2 251 1 344 1 332 2 
350 1 152 1 306 1 244 1 259 1 245 1 332 1 61 1 214 1 370 1 
244 2 170 1 259 1 245 2 319 1 177 1 306 2 205 1 344 1 332 1 83 1 
108 1 244 5 170 1 259 2 245 5 246 1 111 1 177 2 58 1 306 4 129 1 344 3 332 2 61 1 83 1 215 1 
108 1 244 5 170 1 259 2 245 5 246 1 111 1 177 2 58 1 306 4 129 1 344 3 332 2 61 1 81 1 83 1 
11 1 313 1 142 2 229 1 244 1 373 1 259 1 245 1 201 1 177 1 341 2 306 1 73 1 344 1 332 1 333 1 61 1 213 1 
217 1 11 1 132 1 244 1 259 1 245 1 246 1 377 1 177 1 100 1 306 1 344 1 332 2 
21 1 204 1 266 1 190 1 213 1 
185 1 352 1 187 1 219 1 266 2 374 2 157 1 92 1 318 1 190 2 223 2 21 2 203 1 365 1 204 1 165 1 213 1 75 1 241 1 
142 1 190 1 17 1 70 1 21 1 341 1 204 1 343 1 333 1 
185 1 204 1 318 1 
65 1 
33 1 133 1 218 1 378 1 220 1 74 1 105 1 
156 1 184 1 378 1 
133 3 186 1 218 1 378 3 220 1 173 2 59 1 162 1 33 1 280 1 74 1 105 1 
49 1 33 1 133 2 218 1 378 2 220 1 74 1 339 1 105 1 
350 1 311 1 242 1 133 1 218 1 378 1 220 1 162 1 342 1 74 1 214 1 
133 1 162 1 218 1 378 1 220 1 74 1 105 1 
33 1 133 1 162 1 218 1 378 1 220 1 105 2 
133 2 162 1 366 1 235 1 218 2 378 2 220 2 74 1 105 1 22 1 
311 1 133 3 218 1 378 3 316 1 220 1 339 2 19 1 33 1 162 1 182 1 74 2 105 1 
350 2 183 1 133 2 218 1 120 1 378 2 220 1 339 1 33 1 162 1 342 1 74 1 105 1 370 1 214 1 
311 1 133 4 218 2 378 4 268 1 220 2 339 2 49 1 33 1 162 1 182 1 74 2 105 1 
33 1 133 1 162 1 218 1 378 1 220 1 74 1 105 1 
311 1 133 4 218 1 378 4 220 1 339 2 173 1 231 1 59 1 33 2 280 1 182 1 74 3 105 2 
133 2 218 1 378 2 57 1 220 1 339 1 162 1 33 1 139 1 181 1 74 1 105 1 
133 3 218 1 378 3 220 1 173 2 340 1 59 2 162 1 33 1 280 1 74 1 105 1 
101 2 356 1 74 2 30 1 
133 1 162 1 144 1 218 1 378 1 220 1 
33 1 133 2 162 1 218 1 378 2 220 1 74 1 339 1 105 1 19 1 
260 1 
33 1 133 1 162 1 218 1 378 1 220 1 74 1 105 1 
133 3 218 1 378 3 220 1 339 1 173 1 19 1 162 1 33 1 74 1 105 1 
311 1 74 1 182 1 231 1 
74 1 105 1 

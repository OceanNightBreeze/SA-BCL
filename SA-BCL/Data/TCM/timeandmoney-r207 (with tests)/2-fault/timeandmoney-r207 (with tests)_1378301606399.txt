#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 23 153 298 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 23 153 298 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 23 153 298 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 23 153 298 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 23 153 298 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1894 | return null
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 1 219 2 307 6 120 1 73 2 125 1 28 9 76 5 271 1 242 2 245 1 317 2 342 9 361 1 187 1 228 4 99 2 10 2 294 1 83 1 256 1 136 3 137 1 15 1 65 1 144 1 66 1 327 2 
284 1 219 2 307 6 120 1 73 2 125 1 28 9 76 5 271 1 242 2 245 1 317 2 342 9 361 1 187 1 228 4 99 2 10 2 294 1 83 1 256 1 136 3 137 1 15 1 65 1 144 1 66 1 327 2 
284 1 219 2 307 7 120 1 73 2 125 1 28 10 76 6 271 1 242 2 245 1 317 2 342 10 361 1 187 1 228 5 99 2 10 2 294 1 83 1 256 1 136 4 137 1 15 1 65 1 144 1 66 1 327 2 
284 1 219 2 307 4 120 1 73 2 28 7 76 4 271 1 242 2 245 1 317 2 342 7 361 1 187 1 228 3 99 1 10 2 294 1 83 1 256 1 136 2 137 1 15 1 65 1 144 1 66 1 327 2 
228 2 219 1 99 2 307 3 10 1 294 1 73 1 125 1 28 4 76 3 136 1 242 1 245 1 15 1 66 1 327 1 342 4 361 1 
219 1 220 1 10 1 294 1 28 2 35 1 76 1 242 1 245 1 311 1 65 1 144 1 317 1 66 1 327 1 342 2 
228 1 219 2 307 1 294 1 120 1 28 3 76 2 136 1 242 2 245 1 317 1 66 1 342 3 
219 2 307 7 120 1 73 1 125 1 28 9 76 5 271 1 242 2 245 1 317 1 342 9 361 1 227 1 228 4 99 2 10 1 294 1 83 1 136 3 15 1 352 1 66 1 327 1 
219 2 307 7 120 1 73 1 125 1 28 9 76 5 271 1 242 2 245 1 317 1 342 9 361 1 227 1 228 4 99 2 10 1 294 1 83 1 136 3 15 1 352 1 66 1 327 1 
30 1 63 1 37 1 
30 1 321 1 304 2 
75 1 292 2 346 2 130 2 108 2 253 2 53 1 302 2 
20 1 89 1 67 1 118 1 26 1 46 1 75 1 356 1 51 1 29 2 246 1 53 1 203 1 81 1 340 1 343 1 318 2 292 2 346 3 368 1 130 2 273 1 253 3 163 2 102 1 165 2 60 1 212 1 214 1 325 1 108 2 351 2 302 2 279 1 170 1 18 1 112 1 
175 1 77 1 292 1 346 1 130 1 108 1 267 1 253 1 53 1 302 1 
346 1 1 1 253 1 94 1 122 1 190 1 192 1 77 1 193 1 243 1 30 1 63 1 108 1 183 1 
292 1 346 1 130 1 253 1 94 1 122 1 190 2 192 1 77 1 243 1 30 1 63 1 108 1 183 2 302 1 
174 1 183 1 375 1 190 1 186 1 
139 1 30 1 63 1 235 1 183 2 375 1 190 2 186 1 
183 1 375 1 190 1 
175 1 198 1 292 1 346 1 130 1 267 1 253 1 190 1 77 1 108 1 183 1 53 1 302 1 186 1 
30 1 
139 1 30 1 63 1 183 2 375 1 277 1 190 2 186 1 
329 2 19 1 199 1 9 2 131 1 190 5 255 1 13 1 139 1 181 1 30 1 63 1 3 1 183 5 375 2 96 1 171 1 186 2 328 2 
75 1 37 1 
75 2 292 1 346 2 130 1 108 2 253 2 302 1 222 1 6 1 
59 1 260 1 146 1 
89 1 343 1 318 1 346 1 368 1 253 1 46 1 102 1 75 1 270 1 165 1 212 1 29 1 81 1 340 1 170 1 
89 1 343 1 318 1 292 1 368 1 346 2 46 1 253 2 102 1 165 1 212 1 29 1 108 1 260 1 81 1 302 1 170 1 340 1 280 1 204 1 
75 1 292 3 346 3 130 1 108 3 253 3 302 3 204 1 
175 1 77 1 292 1 346 1 108 1 253 1 302 1 
77 1 292 1 346 1 130 1 108 1 253 1 302 1 222 1 6 1 
20 1 89 1 118 1 46 1 94 1 122 1 222 1 75 1 356 1 77 1 51 1 29 1 202 1 243 1 246 1 183 1 53 1 203 1 81 1 340 1 204 1 343 1 318 1 292 3 368 1 346 4 319 1 130 2 253 4 190 1 163 1 102 1 165 1 60 1 192 1 212 1 214 1 325 1 108 3 351 2 302 3 170 1 280 1 112 1 
75 1 292 1 193 1 346 2 108 2 253 2 314 1 302 1 204 1 
292 3 346 3 130 1 253 3 94 1 122 1 222 1 190 1 134 1 192 1 77 1 243 1 202 1 30 1 108 3 183 1 302 3 280 1 204 2 
292 2 346 2 130 1 253 2 222 1 108 2 260 1 302 2 204 1 146 1 
89 1 318 1 343 1 346 1 368 1 253 1 46 1 102 1 75 1 165 1 212 1 29 1 81 1 340 1 170 1 
89 1 318 1 343 1 346 1 253 1 46 1 102 1 75 1 165 1 323 1 212 1 29 1 81 1 170 1 55 1 
20 2 118 1 285 1 356 1 51 1 225 1 203 1 129 1 347 1 163 4 348 1 12 1 84 1 59 2 60 1 61 1 325 1 351 2 260 2 41 1 236 1 18 2 281 1 146 2 
166 1 77 1 292 1 346 1 108 1 94 1 253 1 302 1 
292 4 346 5 130 1 253 5 222 1 75 1 223 1 193 1 108 5 359 1 314 1 302 4 204 2 280 1 
166 1 175 1 77 1 292 2 346 2 108 2 253 2 302 2 
224 1 48 1 
224 1 48 1 
45 1 322 1 
45 1 322 1 
45 1 322 1 
224 1 180 1 48 1 
272 1 224 1 48 1 
249 1 7 1 45 1 224 2 322 1 48 2 
224 1 180 1 48 1 
224 1 180 1 48 1 
224 1 143 1 48 1 
224 1 143 1 48 1 
224 1 143 1 48 1 
249 1 366 1 230 1 369 2 160 3 71 2 254 2 190 2 210 1 48 2 308 1 169 2 154 1 224 2 30 1 128 1 183 2 184 2 197 1 
344 1 291 1 292 2 346 2 369 1 160 1 221 1 71 1 275 1 253 2 254 1 82 1 190 1 48 1 75 1 287 1 259 1 272 1 224 1 108 2 128 1 183 1 184 1 302 2 
10 1 73 1 327 1 
220 1 10 1 327 1 
283 1 345 1 220 1 10 3 73 2 233 1 
283 1 105 1 345 1 220 1 10 2 73 1 
283 1 345 2 220 1 10 2 73 1 
329 1 68 1 47 1 287 1 225 1 30 2 183 5 96 3 186 4 208 1 158 1 9 1 250 2 131 1 33 1 275 1 321 1 82 1 190 5 255 2 12 1 38 1 139 1 194 2 195 2 63 1 375 1 41 1 303 1 304 3 328 1 281 1 
329 2 174 5 117 1 68 2 199 1 149 1 334 1 241 1 287 4 288 1 225 3 30 5 312 1 183 9 96 8 186 7 208 3 158 1 9 2 250 6 131 1 321 3 190 9 255 6 12 3 139 1 194 6 63 1 375 6 41 3 303 2 304 9 328 2 281 3 217 5 
329 1 68 1 199 1 47 1 287 1 225 1 30 3 183 3 96 3 186 2 208 1 9 1 250 2 321 2 190 3 255 2 12 1 38 1 194 2 63 1 195 1 41 1 303 1 328 1 304 4 281 1 
329 1 68 1 199 1 149 1 47 1 241 1 287 2 288 1 225 2 30 4 183 4 96 5 186 3 208 2 9 1 250 4 321 3 190 4 255 4 12 2 38 1 194 4 63 1 195 2 41 2 303 1 304 7 328 1 281 2 
305 1 343 1 37 1 
343 1 200 1 
370 1 
343 1 46 1 
305 2 343 3 147 1 132 1 46 1 102 1 
343 1 46 1 102 1 
173 1 343 1 
20 3 218 1 285 2 320 1 121 1 286 1 163 7 74 1 324 1 79 1 290 2 225 1 360 1 41 1 236 3 18 4 115 1 
20 3 218 1 285 2 320 1 121 1 286 1 163 7 74 1 324 1 79 1 290 2 225 1 360 1 41 1 236 3 18 4 115 1 
20 3 218 1 285 2 320 1 121 1 286 1 163 7 74 1 324 1 106 1 79 1 290 2 225 1 360 1 41 1 236 3 18 4 115 1 
20 15 218 2 238 1 118 1 239 4 285 5 266 1 121 2 286 1 74 1 51 1 79 2 290 3 182 1 225 4 203 1 360 5 57 3 208 3 159 1 320 1 163 31 12 3 104 1 60 1 324 2 299 1 107 1 351 2 41 4 236 10 18 16 115 1 281 3 
20 4 218 1 118 2 285 3 121 1 286 1 74 1 51 2 290 2 79 1 225 1 338 1 203 2 360 1 248 1 320 1 163 9 104 1 60 2 324 1 351 4 41 1 236 4 18 5 
89 1 219 1 331 1 220 1 24 1 307 1 25 1 73 1 28 2 335 1 76 1 29 1 242 1 155 1 245 1 336 1 4 1 185 1 316 1 54 1 317 1 342 2 318 1 10 2 294 1 233 1 165 1 170 1 66 1 327 1 
89 1 219 1 331 1 220 1 24 1 25 1 307 2 72 1 73 1 28 3 335 1 76 1 29 1 242 1 245 1 336 1 244 1 4 1 316 1 54 1 317 1 342 3 318 1 293 1 10 2 233 1 165 1 170 1 66 1 327 1 
89 1 331 1 220 1 25 1 307 2 72 1 73 1 28 2 335 1 76 1 29 1 245 1 336 1 244 1 4 1 54 1 317 1 342 2 318 1 10 2 233 1 165 1 170 1 66 1 327 1 
89 1 219 1 331 2 25 2 46 1 28 1 29 1 242 1 336 2 247 1 52 1 317 2 157 1 342 1 318 1 343 1 293 1 162 1 165 1 212 1 110 1 170 1 113 1 
89 1 318 1 219 1 220 1 331 1 24 1 25 1 10 2 294 1 73 1 335 1 28 1 233 1 165 1 242 1 29 1 244 1 336 1 4 1 54 1 316 1 185 1 170 1 317 1 327 1 342 1 
85 1 
329 1 89 1 1 1 46 1 94 1 50 1 289 1 243 1 339 2 96 2 157 1 5 2 343 1 8 4 346 1 9 1 252 1 295 1 253 1 255 2 165 2 212 2 300 1 213 1 63 1 108 1 170 1 304 2 113 1 68 1 177 2 122 1 178 2 77 1 29 2 80 1 30 2 357 1 183 5 363 2 318 2 274 1 131 1 321 2 190 5 36 1 232 2 192 1 139 3 193 1 140 2 375 6 142 1 326 1 328 1 
1 1 94 1 122 1 77 1 50 1 80 1 243 1 183 3 363 1 8 2 346 1 253 1 190 3 36 1 192 1 193 1 139 1 213 1 108 1 142 1 375 2 277 1 
1 1 94 1 122 1 77 1 50 1 80 1 243 1 30 1 183 3 8 3 346 1 253 1 190 3 36 1 232 1 192 1 193 1 139 1 213 1 108 1 63 1 375 1 142 1 277 1 
1 1 177 1 94 1 122 1 77 1 50 1 80 1 243 1 30 1 183 3 363 1 8 3 346 1 253 1 190 3 36 1 232 1 192 1 139 1 193 1 213 1 108 1 63 1 142 1 375 2 277 1 
329 1 1 1 94 1 50 1 243 1 96 1 339 2 5 2 8 6 346 1 9 1 253 1 296 1 255 1 168 1 213 1 350 1 108 1 63 5 216 1 177 4 122 1 178 2 77 1 80 1 30 5 357 1 183 5 363 4 274 1 131 1 321 2 190 5 36 1 232 4 192 1 139 3 193 1 140 2 141 1 375 7 142 1 277 1 328 1 
329 1 177 2 1 1 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 2 357 1 183 4 339 2 96 1 5 2 363 2 8 4 346 1 9 1 274 1 131 1 295 1 321 2 253 1 190 4 255 1 36 1 232 2 192 1 139 2 193 1 213 1 140 2 63 1 108 1 375 4 142 1 304 2 328 1 
329 1 177 2 1 1 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 339 2 96 1 5 2 363 2 8 4 346 1 274 1 9 1 131 1 321 2 296 1 253 1 190 4 255 1 36 1 232 2 192 1 168 1 139 2 193 1 213 1 140 2 63 1 108 1 375 4 142 1 216 1 328 1 
329 1 177 2 1 1 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 339 2 96 1 5 2 363 2 8 4 346 1 274 1 9 1 131 1 321 2 296 1 253 1 190 4 255 1 36 1 232 2 192 1 168 1 139 2 193 1 213 1 140 2 63 1 108 1 375 4 142 1 216 1 328 1 
329 1 88 1 91 2 22 1 177 2 1 1 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 96 1 363 2 8 4 56 1 346 1 9 1 131 1 296 1 253 1 190 4 255 1 36 1 232 2 192 1 139 2 193 1 213 1 140 2 63 1 108 1 375 4 142 1 304 2 353 2 328 1 
329 1 1 1 177 3 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 339 2 96 1 5 2 363 3 8 5 346 1 274 1 9 1 131 1 321 2 296 1 253 1 190 4 255 1 36 1 232 3 192 1 168 1 139 2 193 1 213 1 140 2 63 1 108 1 141 1 142 1 375 5 216 1 328 1 
329 1 1 1 177 3 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 339 2 96 1 5 2 363 3 8 5 346 1 274 1 9 1 131 1 321 2 296 1 253 1 190 4 255 1 36 1 232 3 192 1 168 1 139 2 193 1 213 1 140 2 63 1 108 1 141 1 142 1 375 5 216 1 328 1 
329 1 91 2 22 1 177 2 1 1 94 1 122 1 178 2 77 1 50 1 80 1 243 1 30 1 357 1 183 4 96 1 363 2 8 4 346 1 9 1 131 1 295 1 253 1 190 4 255 1 36 1 232 2 192 1 139 2 193 1 213 1 140 2 63 1 108 1 375 4 142 1 304 2 353 2 328 1 
20 3 118 1 285 2 286 1 74 1 75 2 356 1 51 1 79 1 290 1 225 1 203 1 320 1 163 6 37 1 59 1 60 1 324 1 61 1 325 1 260 1 351 2 41 1 236 2 18 3 146 1 
20 6 67 1 239 3 118 2 285 1 148 1 75 1 356 1 51 2 310 1 182 1 246 1 225 1 360 1 203 2 57 3 208 2 367 1 159 1 189 1 163 14 12 2 257 1 59 11 60 2 325 2 351 4 260 11 41 2 236 2 18 8 281 1 146 4 
89 1 20 1 67 1 118 1 46 1 75 1 270 1 356 1 51 1 29 1 310 1 246 1 203 1 81 1 340 1 204 1 343 1 318 1 188 1 292 1 368 1 346 2 253 2 163 2 102 1 165 1 60 1 212 1 325 1 108 1 351 2 87 1 302 1 170 1 17 1 280 1 18 1 146 1 
89 2 285 4 46 2 286 1 152 1 51 3 290 1 244 1 246 1 203 3 340 2 204 1 343 2 292 1 98 2 208 2 346 3 253 3 163 20 12 2 102 2 165 3 59 7 60 3 212 1 214 2 108 1 351 6 260 7 302 1 16 2 170 2 18 10 20 10 67 1 118 3 176 2 74 1 75 2 356 3 79 1 29 3 310 1 225 3 360 4 81 2 31 2 318 3 364 1 368 2 320 1 133 1 324 1 325 3 41 3 236 8 280 1 281 2 146 7 
89 2 20 1 67 1 118 2 26 2 46 2 150 1 95 1 356 2 51 2 29 8 155 1 244 1 246 1 203 2 157 1 204 1 97 1 343 3 318 8 292 1 346 1 253 1 163 2 211 1 165 7 60 2 61 1 212 2 62 1 108 1 325 2 351 4 109 1 374 1 302 1 170 2 18 1 113 1 
292 1 309 1 346 1 130 1 108 1 253 1 302 1 222 1 
118 1 129 1 163 2 12 1 59 1 60 1 356 1 61 1 51 1 325 1 260 1 351 2 360 1 203 1 41 1 236 1 18 2 146 1 
20 2 118 1 285 1 163 2 84 1 59 1 60 1 356 1 61 1 51 1 325 1 225 1 260 1 351 2 203 1 236 1 281 1 146 1 
20 2 118 1 285 1 356 1 51 1 225 1 203 1 360 1 208 1 163 4 12 1 59 2 60 1 61 1 325 1 351 2 260 2 41 1 236 2 18 2 281 1 146 2 
118 1 129 1 163 2 12 1 59 1 60 1 356 1 51 1 325 1 260 1 351 2 360 1 374 1 203 1 41 1 236 1 18 2 146 1 
20 2 118 1 285 1 163 2 84 1 59 1 60 1 356 1 51 1 325 1 225 1 260 1 351 2 374 1 203 1 236 1 281 1 146 1 
20 2 118 1 285 1 356 1 51 1 225 1 203 1 360 1 208 1 163 4 12 1 59 2 60 1 325 1 351 2 260 2 374 1 41 1 236 2 18 2 281 1 146 2 
20 2 118 1 285 1 356 1 51 1 225 1 203 1 360 1 208 1 163 4 12 1 59 2 60 1 325 1 351 2 260 2 41 1 236 2 18 2 281 1 146 2 
20 1 89 1 343 1 318 1 67 1 118 1 346 1 368 1 253 1 46 1 163 2 102 1 75 1 165 1 60 1 356 1 51 1 212 1 29 1 214 1 246 1 325 1 351 2 203 1 81 1 340 1 170 1 18 1 
20 1 207 1 89 1 343 1 318 1 67 1 118 1 346 1 253 1 46 1 163 2 102 1 75 1 165 1 60 1 356 1 323 1 51 1 212 1 29 1 246 1 325 1 351 2 203 1 81 1 170 1 18 1 55 1 
20 2 118 1 285 1 356 1 51 1 310 1 225 1 203 1 360 1 208 1 163 4 12 1 59 2 60 1 325 1 351 2 260 2 41 1 236 2 18 2 281 1 146 2 
20 2 89 1 176 1 118 1 285 1 46 1 356 1 51 1 29 1 155 1 225 1 360 1 203 1 81 1 340 1 318 1 343 1 208 1 368 1 346 1 253 1 163 4 12 1 102 1 59 2 165 1 60 1 214 1 325 1 260 2 351 2 41 1 236 2 170 1 18 2 281 1 146 2 
20 1 118 1 222 1 356 1 51 1 310 1 225 1 313 1 360 1 203 1 292 1 208 1 346 1 130 1 253 1 163 3 12 1 59 1 60 1 325 1 108 1 351 2 260 1 302 1 41 1 236 1 18 2 281 1 146 1 
60 1 248 1 23 1 153 1 51 1 118 1 351 2 40 1 203 1 298 1 
60 1 248 1 23 1 153 1 51 1 118 1 351 2 40 1 203 1 298 1 
60 1 248 1 23 1 153 1 51 1 118 1 351 2 40 1 203 1 298 1 
60 1 248 1 23 1 153 1 51 1 118 1 351 2 40 1 203 1 298 1 
60 1 248 1 23 1 153 1 51 1 118 1 351 2 40 1 203 1 298 1 
249 1 308 1 366 1 369 1 224 1 71 1 254 1 373 1 184 1 48 1 
291 1 272 1 
372 1 369 1 224 1 71 1 254 1 184 1 101 1 282 1 48 1 
249 1 366 1 230 1 369 1 160 2 71 1 254 1 190 1 48 1 308 1 169 1 154 1 224 1 30 1 128 1 183 1 184 1 197 1 
249 1 366 1 230 1 369 1 160 2 71 1 254 1 190 1 48 1 308 1 169 1 154 1 224 1 30 1 128 1 183 1 184 1 197 1 
249 1 366 1 230 1 369 1 160 2 71 1 254 1 190 1 48 1 308 1 169 1 154 1 224 1 30 1 128 1 183 1 184 1 197 1 
7 1 11 1 180 1 
7 1 11 1 180 1 
206 1 143 1 
206 1 7 1 143 1 
344 1 259 1 
221 1 71 1 48 1 75 1 287 1 154 1 224 1 272 1 183 1 184 1 186 1 291 1 344 1 292 2 346 2 369 1 160 1 253 2 254 1 275 1 82 1 190 1 169 1 259 1 108 2 302 2 42 1 
11 1 180 1 
206 1 7 1 143 1 
89 1 20 1 21 1 330 1 306 1 67 1 118 1 26 2 46 1 49 1 356 1 51 1 127 1 29 2 310 1 246 1 203 1 97 1 343 1 318 2 346 2 253 2 163 2 165 2 60 1 62 1 325 1 108 2 351 2 170 1 18 1 
89 1 318 2 220 1 331 1 10 2 73 1 233 1 100 1 165 2 135 1 355 1 29 2 155 1 244 1 4 1 316 1 54 1 170 1 327 1 
89 1 318 1 220 1 331 1 10 2 73 1 233 1 234 1 165 1 135 1 29 1 244 1 4 1 316 1 54 1 170 1 327 1 
89 1 343 1 318 1 331 1 46 1 100 1 165 1 212 1 29 1 110 1 170 1 157 1 341 1 113 1 
89 1 318 1 220 1 331 1 10 2 73 1 233 1 100 1 165 1 135 1 355 1 29 1 244 1 4 1 316 1 54 1 170 1 327 1 
34 1 
13 1 30 1 63 1 96 1 171 1 255 1 37 1 
329 1 9 1 274 1 131 1 321 1 190 1 255 1 139 1 63 1 30 2 183 1 375 1 96 1 339 1 5 1 304 1 328 1 
329 4 89 3 332 2 333 1 200 3 46 3 240 1 155 1 243 2 96 9 343 10 208 2 58 2 9 4 250 6 252 1 349 1 255 8 12 2 102 3 165 3 13 1 212 1 14 2 63 2 16 2 171 1 170 4 304 12 172 2 305 2 173 2 68 2 119 2 268 2 123 2 126 2 78 1 29 3 30 8 225 2 183 5 362 1 318 3 131 4 132 1 321 6 190 5 139 3 194 6 375 5 41 2 328 4 281 2 
329 2 68 1 44 1 239 1 265 1 2 1 123 2 182 1 30 5 225 2 183 1 96 8 57 1 208 2 58 1 9 2 250 5 131 2 252 1 161 1 321 3 190 1 255 5 12 2 103 1 139 1 194 5 86 1 63 2 375 1 41 2 304 6 328 2 237 1 281 2 
329 1 175 1 198 1 267 1 123 2 77 1 79 1 225 1 183 1 53 1 96 2 292 1 58 1 346 1 9 1 130 1 131 1 320 1 253 1 190 1 255 2 324 1 108 1 196 1 216 1 41 2 302 1 328 1 
329 1 9 1 131 1 255 1 13 1 63 1 30 1 96 1 171 1 328 1 
208 2 58 1 250 5 321 5 123 2 255 5 12 2 194 5 30 5 225 2 16 1 41 2 96 5 304 10 281 2 
139 1 30 1 63 1 183 1 375 1 190 1 
329 2 89 1 68 2 199 1 46 1 179 1 240 2 29 4 183 3 96 2 157 1 343 1 318 4 9 2 251 1 131 1 252 2 190 3 349 1 255 2 165 4 300 1 212 2 139 2 375 4 170 1 326 1 328 2 113 1 
20 1 89 1 118 1 46 1 75 1 356 1 51 1 29 1 246 1 53 1 203 1 81 1 340 1 318 1 343 1 292 2 346 3 368 1 130 2 253 3 163 1 102 1 165 1 60 1 212 1 214 1 108 2 325 1 351 2 302 2 170 1 112 1 
329 1 68 1 9 1 250 2 131 1 252 1 321 2 255 2 290 1 194 2 63 2 30 4 96 1 304 4 328 1 
71 1 254 1 226 1 
344 1 366 1 71 1 254 1 315 1 
71 1 254 1 226 1 
71 1 254 1 226 1 
69 1 71 1 254 1 
69 1 71 1 254 1 
69 1 71 1 254 1 
71 1 254 1 
224 1 48 1 
20 4 239 1 118 1 285 2 286 1 74 1 51 1 290 1 79 1 182 1 225 1 203 1 248 1 57 1 320 1 163 8 60 1 324 1 86 1 351 2 41 1 236 2 18 4 
20 5 239 2 118 2 285 2 286 1 74 1 51 2 290 1 79 1 182 1 225 1 203 2 360 1 248 1 57 1 208 1 159 1 320 1 163 11 191 1 12 1 60 2 324 1 86 1 351 4 41 2 236 3 18 6 
20 10 239 1 118 3 285 3 2 1 286 1 74 1 51 3 290 1 79 1 182 1 225 3 360 1 203 3 248 1 57 1 208 2 320 1 161 1 163 19 191 1 12 2 103 1 104 1 60 3 324 1 86 1 351 6 41 3 236 4 18 9 237 1 281 2 
20 7 239 1 118 3 285 3 2 1 286 1 74 1 51 3 290 1 79 1 182 1 225 2 360 2 203 3 248 1 57 1 208 2 320 1 161 1 163 17 191 1 12 2 103 1 104 1 60 3 324 1 86 1 351 6 41 3 236 5 18 10 237 1 281 1 
20 4 239 1 118 1 285 2 286 1 74 1 51 1 290 1 79 1 182 1 225 1 203 1 248 1 57 1 320 1 163 8 60 1 324 1 86 1 351 2 41 1 236 2 18 4 
20 6 239 1 118 1 285 1 2 1 51 1 182 1 225 2 360 1 203 1 248 1 57 1 208 2 161 1 163 12 12 2 103 1 60 1 86 1 351 2 41 2 236 2 18 6 237 1 281 2 
20 8 239 1 118 4 285 3 2 1 286 1 74 1 51 4 290 1 79 1 182 1 225 2 360 2 203 4 248 1 57 1 208 2 320 1 161 1 163 18 191 1 12 2 103 1 104 2 60 4 324 1 86 1 351 8 41 3 236 5 18 10 237 1 281 1 
20 7 239 1 118 4 285 3 2 1 51 4 182 1 225 2 360 3 203 4 248 1 57 1 208 3 161 1 163 16 12 3 103 1 167 1 104 2 60 4 86 1 351 8 41 3 236 6 18 9 237 1 281 2 
20 4 285 3 320 1 286 2 163 7 74 1 324 3 79 3 225 1 360 3 41 1 236 6 18 3 
20 8 239 1 118 4 285 3 2 1 286 1 74 1 51 4 290 1 79 1 182 1 225 2 360 1 203 4 248 1 57 1 208 2 320 1 161 1 163 18 12 2 103 1 167 1 104 2 60 4 324 1 86 1 351 8 41 3 236 4 18 10 237 1 281 1 
20 4 118 2 285 2 320 1 286 1 163 8 74 1 104 1 60 2 324 1 51 2 290 1 79 1 225 1 351 4 360 1 203 2 41 1 236 3 18 4 
20 3 285 2 320 1 286 1 163 6 74 1 37 1 324 1 290 1 79 1 225 1 41 1 236 2 18 3 
20 2 208 1 118 1 285 1 163 4 191 1 12 1 60 1 51 1 225 1 351 2 203 1 360 1 41 1 236 2 18 2 281 1 
20 4 57 1 208 1 239 2 285 1 159 1 163 7 12 1 182 1 225 1 360 1 41 1 236 2 18 3 281 1 
20 12 239 2 118 2 285 5 148 1 286 1 74 1 51 2 290 1 79 2 225 3 360 4 203 2 208 2 57 2 367 1 159 1 320 1 163 23 12 2 104 2 258 1 60 2 324 2 351 4 41 3 236 9 18 11 281 2 
20 1 239 1 163 1 
57 1 163 1 18 1 
20 3 208 1 118 1 285 2 163 6 191 1 12 1 60 1 51 1 225 1 351 2 203 1 360 1 16 1 41 1 236 3 18 3 281 1 
20 6 239 1 118 1 285 1 2 1 51 1 182 1 225 2 360 1 203 1 248 1 57 1 208 2 161 1 163 12 12 2 103 1 60 1 86 1 351 2 41 2 236 2 18 6 237 1 281 2 
20 3 285 1 320 1 163 6 324 1 79 1 225 1 360 1 41 1 236 2 18 3 
20 2 118 1 285 1 286 1 163 3 74 1 258 1 104 1 60 1 324 1 51 1 79 1 351 2 360 1 203 1 236 2 18 1 
20 5 248 1 118 1 285 3 320 1 163 10 60 1 324 2 51 1 79 2 225 2 351 2 196 1 203 1 360 2 41 2 236 5 18 5 
248 1 118 1 163 2 12 1 60 1 51 1 351 2 203 1 360 1 41 1 236 1 18 2 
20 2 248 1 208 1 118 1 285 1 163 4 12 1 60 1 51 1 225 1 351 2 203 1 360 1 41 1 236 2 18 2 281 1 
20 2 248 1 118 3 285 1 163 3 104 1 258 1 167 1 60 3 324 1 51 3 79 1 351 6 203 3 360 1 236 2 18 1 
20 18 238 1 239 4 118 5 285 7 266 1 286 1 74 1 51 5 290 1 79 3 182 1 225 5 203 5 360 5 248 1 57 3 208 3 159 1 320 2 163 34 191 1 12 3 258 1 104 2 167 1 60 5 324 3 107 1 351 10 41 5 236 12 18 16 281 3 
75 1 193 1 346 1 108 1 253 1 314 1 278 1 
32 1 346 1 70 1 253 1 151 1 75 1 138 1 193 1 215 1 108 1 278 1 314 1 
89 1 165 1 343 1 318 1 212 1 29 1 46 1 170 1 157 1 113 1 37 1 
89 1 343 1 318 1 292 1 346 2 368 1 46 1 253 2 102 1 75 1 165 1 212 1 29 1 108 1 81 1 302 1 170 1 204 1 
173 1 89 1 343 3 318 1 292 2 346 2 368 1 268 1 94 1 46 2 253 2 122 1 240 1 102 2 75 1 165 1 77 1 29 1 108 2 81 1 302 1 170 1 204 1 
89 1 173 1 46 2 94 1 268 1 122 1 240 1 75 1 77 1 29 2 81 1 204 1 318 2 343 3 292 2 346 2 253 2 102 2 165 2 323 1 108 2 302 1 170 1 262 1 
173 1 305 1 89 1 318 3 343 4 200 1 46 1 268 1 190 2 240 1 164 1 102 1 165 3 212 1 29 3 243 1 30 1 63 1 156 1 183 2 375 1 170 1 262 1 
173 1 305 1 89 1 318 3 343 4 200 1 46 1 268 1 190 2 240 1 126 1 102 1 165 3 212 1 29 3 243 1 30 1 63 1 183 2 375 1 170 1 262 1 
89 1 165 1 318 1 29 1 170 1 211 1 
205 1 89 2 318 7 343 3 132 1 26 1 46 2 150 1 124 1 95 1 211 1 102 1 165 6 212 2 29 7 155 1 201 1 244 1 109 1 170 3 97 1 
20 3 89 1 306 1 118 2 176 1 285 2 46 1 286 1 74 1 75 2 356 2 51 2 290 1 79 1 310 1 29 1 155 1 225 1 203 2 81 1 340 1 204 1 343 1 318 1 292 1 98 1 346 2 368 1 320 1 253 2 163 6 102 1 59 1 165 1 60 2 324 1 214 1 325 2 108 1 260 1 351 4 41 1 302 1 236 2 170 1 18 3 146 1 
329 2 172 1 305 1 119 1 200 1 126 1 29 1 243 1 30 1 183 3 96 1 186 1 318 1 343 2 9 2 131 2 190 3 349 1 255 1 165 1 13 1 212 1 139 1 14 1 63 1 375 2 171 1 328 2 
305 1 89 1 318 2 343 2 132 1 46 1 211 1 102 1 165 2 78 1 29 2 155 1 170 2 
89 1 318 4 343 1 46 1 231 1 165 4 212 1 29 4 155 1 170 1 157 1 262 1 113 1 
205 1 89 1 318 2 343 1 90 1 92 1 46 1 133 1 240 1 124 1 102 1 165 2 29 2 170 2 
89 1 165 1 318 1 220 1 212 1 29 1 10 1 4 1 170 1 327 1 
89 1 318 2 343 1 46 1 165 2 49 1 29 2 155 1 244 1 170 1 97 1 
89 2 318 5 343 3 46 2 150 1 240 1 231 1 165 4 212 1 29 5 155 1 109 1 157 1 170 2 113 1 97 1 
89 2 318 5 343 3 46 2 240 1 231 1 165 4 276 1 212 1 29 5 155 1 109 1 157 1 170 2 113 1 97 1 
89 1 343 1 318 1 292 1 346 2 46 1 253 2 102 1 75 1 165 1 323 1 212 1 29 1 108 1 81 1 302 1 170 1 204 1 
205 1 89 1 318 1 343 1 132 1 46 1 124 1 240 1 102 1 165 1 29 1 201 1 170 2 
75 1 0 1 337 1 358 1 269 1 
365 1 264 1 0 2 354 1 94 1 122 1 190 2 269 2 75 1 192 1 77 1 243 1 202 1 30 1 63 1 337 2 358 1 183 2 186 1 
21 1 330 1 127 1 346 1 108 1 337 1 253 1 358 1 269 1 
264 1 365 1 358 1 
76 1 245 1 66 1 37 1 
76 1 219 1 242 1 245 1 66 1 28 1 342 1 
25 1 317 1 342 1 
76 1 219 1 242 1 245 1 294 1 64 1 144 2 66 1 28 3 263 1 297 1 342 3 
76 1 219 1 99 1 242 1 307 1 245 1 66 1 28 2 342 2 
76 1 228 1 219 1 242 1 10 1 294 1 15 1 73 1 327 1 28 1 342 1 
76 1 219 1 242 1 245 1 294 1 28 1 342 1 
219 1 242 1 245 2 294 1 66 1 28 1 342 1 
76 1 219 2 242 2 209 1 245 1 294 1 93 1 28 2 114 1 342 2 
228 1 219 1 307 2 294 1 83 1 28 3 76 2 271 1 136 1 242 1 245 1 66 1 342 3 
219 1 229 1 220 1 307 1 10 2 294 1 73 1 28 2 233 1 76 1 242 1 245 1 66 1 327 1 342 2 
228 1 219 2 99 1 307 2 294 1 125 1 28 4 76 2 136 1 242 2 245 1 66 1 342 4 
76 1 219 1 242 1 245 1 294 1 66 1 28 1 342 1 
43 1 228 1 219 1 307 2 28 4 297 1 76 3 136 1 242 1 245 2 144 1 66 2 263 1 342 4 
76 1 219 1 242 1 307 1 245 1 294 1 27 1 352 1 145 1 66 1 28 2 342 2 
219 1 294 1 28 3 297 1 76 1 39 1 242 1 245 1 144 2 66 1 342 3 263 2 
371 2 116 1 76 2 111 1 
219 1 301 1 242 1 294 1 28 1 342 1 
76 1 219 1 242 1 307 1 245 1 294 1 83 1 66 1 28 2 342 2 
261 1 
76 1 219 1 242 1 245 1 294 1 66 1 28 1 342 1 
219 1 307 1 294 1 83 1 28 3 76 1 242 1 245 1 144 1 66 1 342 3 
43 1 76 1 228 1 136 1 
76 1 245 1 

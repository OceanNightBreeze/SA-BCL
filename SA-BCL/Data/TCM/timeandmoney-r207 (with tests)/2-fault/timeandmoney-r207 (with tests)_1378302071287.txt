#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 (144,303) (144,303) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 (144,303) (144,303) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 (144,303) (144,303) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 (144,303) (144,303) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 294 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArrayIndexOutOfBoundsException 357 294 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11750 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money; | OPERATOR | 3115 | < -> <=
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 141 2 357 1 5 2 164 2 245 4 120 6 165 1 309 1 169 9 170 9 268 1 269 1 144 1 197 2 74 2 225 1 177 1 56 1 370 1 230 4 17 1 109 1 238 2 21 2 111 3 
303 1 141 2 357 1 5 2 164 2 245 4 120 6 165 1 309 1 169 9 170 9 268 1 269 1 144 1 74 2 225 1 197 2 177 1 56 1 370 1 230 4 17 1 109 1 238 2 21 2 111 3 
303 1 141 2 357 1 5 2 164 2 245 4 120 6 165 1 309 1 169 9 170 9 268 1 269 1 144 1 74 2 225 1 197 2 177 1 56 1 370 1 230 4 17 1 109 1 238 2 21 2 111 3 
177 1 303 1 56 1 357 1 141 2 370 1 5 2 120 4 245 3 164 2 165 1 309 1 169 7 230 3 170 7 17 1 144 1 269 1 109 1 238 2 111 2 21 2 197 1 225 1 74 2 
56 1 357 1 141 1 370 1 5 1 164 1 120 3 245 2 169 4 170 4 230 2 268 1 111 1 21 1 74 1 197 2 
353 1 337 1 370 1 5 1 245 1 164 1 169 2 170 2 17 1 109 1 234 1 71 1 238 1 172 1 21 1 74 1 
337 1 370 1 5 2 245 2 120 1 165 1 169 3 170 3 230 1 238 1 172 1 111 1 74 2 
177 1 56 1 294 1 141 1 357 1 370 1 5 2 372 1 164 1 245 4 120 7 165 1 169 9 170 9 230 4 268 1 238 1 21 1 111 3 197 2 225 1 74 2 
177 1 56 1 294 1 141 1 357 1 370 1 5 2 372 1 164 1 245 4 120 7 165 1 169 9 170 9 230 4 268 1 238 1 21 1 111 3 197 2 225 1 74 2 
31 1 263 1 52 1 
33 2 52 1 204 1 
151 2 293 1 67 2 345 1 69 2 222 2 282 2 307 2 
350 1 355 1 47 1 23 1 191 2 192 1 214 1 282 2 307 2 30 2 121 1 247 1 67 3 51 1 221 2 68 2 97 1 69 2 222 3 175 1 253 1 254 1 151 2 293 1 75 1 131 1 369 1 14 1 78 2 80 1 15 1 229 1 298 1 345 1 19 1 83 1 44 1 
151 1 67 1 110 1 345 1 69 1 70 1 72 1 222 1 282 1 307 1 
151 1 356 1 178 1 371 1 373 1 31 1 331 1 67 1 41 1 52 1 149 1 222 1 72 1 186 1 
151 1 356 1 178 1 371 2 307 1 282 1 373 2 31 1 67 1 41 1 69 1 52 1 149 1 222 1 72 1 
215 1 46 1 371 1 249 1 373 1 
262 1 31 1 215 1 52 1 371 2 243 1 249 1 373 2 
371 1 249 1 373 1 
151 1 371 1 373 1 307 1 282 1 215 1 287 1 67 1 110 1 345 1 69 1 70 1 72 1 222 1 
52 1 
262 1 31 1 167 1 215 1 52 1 371 2 249 1 373 2 
262 1 45 1 112 1 314 1 304 1 256 1 338 2 371 5 373 5 285 2 31 1 215 2 106 1 277 2 311 1 52 1 185 1 11 1 249 2 
263 1 293 1 
350 1 89 1 37 1 100 1 151 1 355 1 131 1 369 1 191 1 214 1 307 1 282 1 30 1 229 1 121 1 67 2 68 1 83 1 222 2 44 1 
94 1 151 2 293 2 67 2 69 1 3 1 222 2 282 1 307 1 
89 1 36 1 137 1 
350 1 293 1 355 1 369 1 131 1 27 1 191 1 214 1 30 1 121 1 229 1 67 1 68 1 222 1 83 1 44 1 
100 1 151 3 293 1 67 3 69 1 222 3 282 3 307 3 
151 1 67 1 70 1 72 1 222 1 282 1 307 1 
94 1 151 1 67 1 69 1 3 1 72 1 222 1 282 1 307 1 
350 1 355 1 23 1 356 1 191 1 214 1 282 3 307 3 30 1 94 1 121 1 247 1 67 4 221 1 68 1 97 1 69 2 149 1 222 4 72 1 175 1 37 1 253 1 254 1 100 1 151 3 293 1 131 1 369 1 178 1 259 1 371 1 14 1 78 2 373 1 80 1 15 1 229 1 41 1 345 1 19 1 83 1 379 1 44 1 
216 1 100 1 331 1 151 2 293 1 67 2 222 2 282 1 307 1 
37 1 100 2 151 3 132 1 356 1 178 1 371 1 373 1 307 3 282 3 94 1 67 3 41 1 69 1 52 1 149 1 72 1 222 3 379 1 
89 1 100 1 151 2 307 2 282 2 94 1 67 2 69 1 137 1 222 2 
350 1 293 1 355 1 369 1 131 1 191 1 214 1 30 1 121 1 229 1 67 1 68 1 222 1 83 1 44 1 
350 1 1 1 293 1 355 1 369 1 131 1 326 1 191 1 214 1 30 1 229 1 67 1 68 1 222 1 83 1 
188 1 242 1 299 1 89 2 47 2 265 1 328 1 247 1 221 4 362 1 97 1 175 1 251 1 36 2 253 1 366 1 367 1 78 2 80 2 15 1 19 1 137 2 20 1 157 1 
151 1 67 1 178 1 72 1 222 1 282 1 307 1 73 1 
37 1 100 2 151 5 293 1 295 1 160 1 307 4 282 4 94 1 216 1 331 1 67 5 69 1 222 5 
151 2 67 2 70 1 72 1 222 2 282 2 307 2 73 1 
258 1 59 1 
258 1 59 1 
62 1 2 1 
62 1 2 1 
62 1 2 1 
258 1 275 1 59 1 
255 1 258 1 59 1 
209 1 62 1 2 1 258 2 333 1 59 2 
258 1 275 1 59 1 
258 1 275 1 59 1 
258 1 63 1 59 1 
258 1 63 1 59 1 
258 1 63 1 59 1 
0 1 176 1 207 1 209 1 199 2 280 2 76 2 258 2 119 1 371 2 318 1 59 2 373 2 244 2 38 1 134 1 52 1 323 3 224 2 
99 1 205 1 129 1 207 1 151 2 293 1 199 1 255 1 280 1 76 1 258 1 371 1 59 1 373 1 307 2 282 2 163 1 194 1 67 2 323 1 237 1 222 2 334 1 224 1 
141 1 21 1 164 1 
71 1 21 1 164 1 
365 1 291 1 141 2 71 1 21 3 335 1 
291 1 141 1 236 1 71 1 21 2 335 1 
141 1 291 2 71 1 21 2 335 1 
262 1 299 1 45 1 304 3 358 1 163 1 285 1 166 1 215 4 31 1 194 1 95 1 32 1 33 3 362 1 52 2 249 1 54 1 251 1 368 1 152 2 338 1 371 5 58 2 373 5 201 1 277 1 136 2 237 1 204 1 20 1 185 2 
262 1 112 1 299 3 45 1 46 5 304 8 358 2 6 1 166 1 285 2 215 7 31 1 194 4 288 1 32 2 33 9 270 1 362 3 52 5 249 6 251 3 368 3 101 1 152 6 338 2 371 9 58 6 373 9 277 2 232 5 321 1 204 3 20 3 239 1 185 6 
112 1 299 1 304 3 358 1 285 1 31 1 215 2 194 1 95 1 32 1 33 4 362 1 52 3 251 1 368 1 338 1 152 2 371 3 58 2 373 3 201 1 277 1 136 1 204 2 20 1 185 2 
112 1 299 2 304 5 358 1 6 1 285 1 31 1 215 3 194 2 288 1 95 1 32 1 33 7 362 2 52 4 251 2 368 2 152 4 101 1 338 1 371 4 58 4 373 4 201 1 277 1 136 2 204 3 20 2 185 4 
263 1 355 1 341 1 
355 1 124 1 
184 1 
355 1 131 1 
229 1 150 1 355 3 131 1 40 1 341 2 
229 1 355 1 131 1 
355 1 148 1 
241 1 251 1 188 2 299 1 316 2 47 4 64 1 227 1 161 1 155 1 297 1 80 3 143 1 221 7 82 1 157 3 187 1 
241 1 251 1 188 2 299 1 316 2 47 4 64 1 227 1 161 1 155 1 297 1 80 3 143 1 221 7 82 1 157 3 187 1 
241 1 251 1 188 2 299 1 316 2 47 4 64 1 227 1 161 1 155 1 297 1 80 3 66 1 143 1 221 7 82 1 157 3 187 1 
241 1 188 5 206 4 299 4 159 1 47 16 64 1 118 1 161 2 264 1 143 2 49 1 247 1 221 31 362 3 97 1 173 1 10 1 175 1 251 4 316 3 368 3 227 5 78 2 297 1 155 2 80 15 15 1 156 1 82 1 20 3 157 10 187 2 261 3 
241 1 188 3 299 1 47 5 64 1 161 1 143 1 247 2 123 1 221 9 97 2 10 1 175 2 251 1 316 2 227 1 78 4 155 1 375 1 80 4 15 2 82 1 157 4 187 1 
140 1 141 1 191 1 5 1 28 1 214 1 30 1 245 1 120 1 164 1 169 2 170 2 219 1 9 1 68 1 71 1 172 1 35 1 74 1 365 1 337 1 296 1 370 1 278 1 108 1 344 1 238 1 83 1 279 1 21 2 
325 1 140 1 141 1 191 1 5 1 28 1 214 1 30 1 245 1 164 1 120 2 169 3 170 3 219 1 9 1 68 1 71 1 172 1 35 1 74 1 365 1 337 1 317 1 296 1 231 1 108 1 344 1 238 1 83 1 21 2 
140 1 141 1 191 1 28 1 214 1 30 1 245 1 120 2 164 1 169 2 170 2 219 1 9 1 68 1 71 1 172 1 35 1 365 1 337 1 317 1 231 1 108 1 238 1 83 1 21 2 
350 1 198 1 325 1 300 1 114 1 355 1 131 1 191 1 5 1 214 1 30 1 169 1 170 1 219 2 9 2 233 1 108 2 145 1 68 1 332 1 83 1 238 2 74 1 
140 1 141 1 191 1 5 1 28 1 214 1 30 1 164 1 169 1 170 1 219 1 9 1 68 1 71 1 35 1 74 1 365 1 317 1 296 1 370 1 278 1 108 1 344 1 238 1 83 1 21 2 
77 1 
45 1 139 2 281 1 191 2 283 2 285 1 93 1 331 1 145 1 52 2 332 1 149 1 249 6 250 1 55 2 151 1 338 1 153 1 57 2 107 4 202 1 347 2 204 2 262 3 350 2 113 1 304 2 355 1 356 1 214 1 30 2 31 1 217 1 32 1 67 1 33 2 68 2 222 1 72 1 315 1 274 2 131 1 178 1 179 1 371 5 373 5 39 1 277 1 135 1 320 1 41 1 83 1 183 2 185 2 186 1 
262 1 356 1 283 1 167 1 331 1 67 1 149 1 222 1 72 1 249 2 151 1 315 1 178 1 153 1 179 1 371 3 373 3 39 1 135 1 107 2 41 1 186 1 
262 1 356 1 31 1 167 1 331 1 67 1 52 1 149 1 222 1 72 1 249 1 151 1 315 1 178 1 153 1 179 1 371 3 373 3 39 1 135 1 107 3 41 1 183 1 186 1 
262 1 356 1 283 1 167 1 31 1 331 1 67 1 52 1 149 1 222 1 72 1 249 2 151 1 315 1 274 1 178 1 153 1 179 1 371 3 373 3 39 1 135 1 107 3 41 1 183 1 186 1 
45 1 139 2 283 4 329 1 285 1 331 1 52 5 149 1 249 7 250 1 55 2 151 1 338 1 153 1 57 2 107 6 347 2 204 2 262 3 304 1 26 1 356 1 213 1 162 1 167 1 31 5 67 1 72 1 222 1 273 1 315 1 274 4 178 1 179 1 371 5 373 5 39 1 277 1 135 1 320 1 41 1 183 4 185 1 186 1 
45 1 139 2 285 1 283 2 331 1 52 2 149 1 249 4 250 1 55 2 151 1 338 1 153 1 57 2 107 4 347 2 204 2 262 2 304 1 356 1 31 1 217 1 67 1 33 2 72 1 222 1 315 1 274 2 178 1 179 1 371 4 373 4 39 1 277 1 135 1 320 1 41 1 183 2 185 1 186 1 
262 2 45 1 139 2 304 1 356 1 162 1 283 2 329 1 285 1 31 1 331 1 67 1 52 1 149 1 222 1 72 1 249 4 250 1 273 1 55 2 151 1 315 1 274 2 338 1 178 1 153 1 57 2 179 1 371 4 373 4 39 1 277 1 135 1 320 1 107 4 41 1 347 2 183 2 204 2 185 1 186 1 
262 2 45 1 139 2 304 1 356 1 162 1 283 2 329 1 285 1 31 1 331 1 67 1 52 1 149 1 222 1 72 1 249 4 250 1 273 1 55 2 151 1 315 1 274 2 338 1 178 1 153 1 57 2 179 1 371 4 373 4 39 1 277 1 135 1 320 1 107 4 41 1 347 2 183 2 204 2 185 1 186 1 
262 2 87 2 45 1 139 2 304 1 356 1 162 1 283 2 285 1 31 1 168 1 331 1 96 1 67 1 33 2 52 1 149 1 222 1 72 1 249 4 250 1 336 2 151 1 315 1 274 2 338 1 178 1 153 1 179 1 371 4 373 4 39 1 277 1 104 1 135 1 107 4 41 1 347 2 183 2 185 1 186 1 
262 2 45 1 139 2 304 1 356 1 213 1 162 1 285 1 329 1 283 3 31 1 331 1 67 1 52 1 149 1 222 1 72 1 249 5 250 1 273 1 55 2 151 1 315 1 274 3 338 1 178 1 153 1 57 2 179 1 371 4 373 4 39 1 277 1 135 1 320 1 107 5 41 1 347 2 204 2 183 3 185 1 186 1 
262 2 45 1 139 2 304 1 356 1 213 1 162 1 285 1 329 1 283 3 31 1 331 1 67 1 52 1 149 1 222 1 72 1 249 5 250 1 273 1 55 2 151 1 315 1 274 3 338 1 178 1 153 1 57 2 179 1 371 4 373 4 39 1 277 1 135 1 320 1 107 5 41 1 347 2 204 2 183 3 185 1 186 1 
87 2 45 1 139 2 285 1 283 2 331 1 96 1 52 1 149 1 249 4 250 1 336 2 151 1 338 1 153 1 107 4 347 2 262 2 304 1 356 1 31 1 217 1 67 1 33 2 72 1 222 1 315 1 274 2 178 1 179 1 371 4 373 4 39 1 277 1 135 1 41 1 183 2 185 1 186 1 
241 1 188 2 89 1 299 1 263 1 47 3 64 1 328 1 247 1 221 6 97 1 175 1 251 1 36 1 253 1 293 2 316 1 78 2 155 1 80 3 15 1 19 1 137 1 82 1 157 2 187 1 
188 1 206 3 89 11 299 2 47 8 327 1 264 1 361 1 266 1 49 1 247 2 221 14 97 2 362 1 196 1 175 2 251 1 36 11 253 2 293 1 368 2 227 1 14 1 78 4 80 6 15 2 298 1 43 1 19 1 137 4 20 2 157 2 261 3 
350 1 355 1 47 1 327 1 191 1 27 1 214 1 30 1 282 1 307 1 121 1 247 1 67 2 68 1 221 2 97 1 222 2 175 1 128 1 37 1 253 1 100 1 151 1 293 1 131 1 369 1 78 2 14 1 80 1 15 1 229 1 298 1 18 1 19 1 137 1 83 1 240 1 44 1 
241 1 188 4 89 7 47 10 327 1 191 3 282 1 247 3 97 3 53 2 251 3 253 3 100 1 254 2 151 1 293 2 14 1 155 1 60 1 15 3 298 1 19 3 20 2 157 8 350 1 158 1 351 1 299 3 302 2 355 2 64 1 214 2 30 3 307 1 121 2 67 3 68 3 221 20 362 2 222 3 126 2 175 3 37 1 36 7 316 1 369 2 131 2 368 2 317 1 227 4 78 6 80 10 133 2 229 2 137 7 82 1 83 2 44 2 187 1 
350 2 324 1 355 3 47 1 191 8 328 1 214 2 282 1 307 1 30 7 286 1 247 2 67 1 51 2 145 1 68 8 221 2 97 2 332 1 222 1 174 1 127 1 175 2 253 2 100 1 151 1 131 2 317 1 103 1 78 4 14 1 80 1 15 2 298 1 260 1 235 1 19 2 83 2 279 1 
188 1 89 1 299 1 47 1 327 1 307 1 282 1 94 1 247 1 67 1 221 3 69 1 97 1 362 1 222 1 175 1 251 1 36 1 253 1 151 1 368 1 78 2 80 2 15 1 377 1 19 1 137 1 20 1 157 1 
242 1 89 1 36 1 299 1 253 1 47 2 227 1 328 1 78 2 15 1 247 1 221 2 19 1 97 1 137 1 20 1 157 1 175 1 
188 1 251 1 89 1 36 1 253 1 367 1 328 1 78 2 80 2 15 1 247 1 221 2 19 1 97 1 362 1 137 1 157 1 175 1 
188 1 299 1 89 2 47 2 328 1 247 1 221 4 97 1 362 1 175 1 251 1 36 2 253 1 368 1 227 1 78 2 80 2 15 1 19 1 137 2 20 1 157 2 
242 1 89 1 36 1 299 1 253 1 47 2 227 1 78 2 15 1 247 1 260 1 221 2 19 1 97 1 137 1 20 1 157 1 175 1 
188 1 251 1 89 1 36 1 253 1 367 1 78 2 80 2 15 1 247 1 260 1 221 2 19 1 97 1 362 1 137 1 157 1 175 1 
188 1 299 1 89 2 47 2 247 1 221 4 97 1 362 1 175 1 251 1 36 2 253 1 368 1 227 1 78 2 80 2 15 1 260 1 19 1 137 2 20 1 157 2 
188 1 251 1 89 2 36 2 299 1 253 1 368 1 47 2 227 1 78 2 80 2 15 1 247 1 221 4 362 1 19 1 97 1 137 2 20 1 157 2 175 1 
350 1 355 1 47 1 191 1 214 1 30 1 121 1 247 1 67 1 221 2 68 1 97 1 222 1 175 1 253 1 254 1 293 1 131 1 369 1 78 2 14 1 80 1 15 1 229 1 298 1 19 1 83 1 44 1 
350 1 1 1 210 1 355 1 47 1 326 1 191 1 214 1 30 1 247 1 67 1 221 2 68 1 97 1 222 1 175 1 253 1 293 1 131 1 369 1 78 2 14 1 80 1 15 1 229 1 298 1 19 1 83 1 
188 1 299 1 89 2 47 2 327 1 247 1 221 4 97 1 362 1 175 1 251 1 36 2 253 1 368 1 227 1 78 2 80 2 15 1 19 1 137 2 20 1 157 2 
188 1 89 2 299 1 355 1 47 2 191 1 214 1 30 1 121 1 247 1 67 1 221 4 68 1 362 1 97 1 222 1 175 1 251 1 36 2 253 1 254 1 369 1 131 1 368 1 227 1 78 2 80 2 133 1 15 1 229 1 19 1 137 2 83 1 20 1 279 1 157 2 44 1 
299 1 89 1 47 2 327 1 307 1 282 1 94 1 247 1 67 1 221 3 362 1 69 1 97 1 222 1 175 1 251 1 36 1 253 1 151 1 368 1 226 1 227 1 78 2 80 1 15 1 19 1 137 1 20 1 157 1 
188 1 206 4 299 4 208 1 47 15 91 1 92 1 211 1 212 1 264 1 267 1 49 3 330 1 247 2 122 1 50 3 248 1 221 31 97 2 362 4 175 2 251 4 368 4 13 1 227 3 181 1 200 1 78 4 376 1 375 1 80 16 15 2 322 2 20 4 157 4 261 3 
188 2 206 4 299 4 208 1 47 17 91 1 92 1 211 1 212 1 264 1 267 1 49 3 330 1 247 3 122 1 50 4 248 1 221 32 97 3 362 3 10 1 175 3 251 3 368 4 13 1 227 3 181 1 200 1 78 6 376 1 375 1 80 15 15 3 322 2 20 4 157 5 261 3 
241 1 188 8 206 4 299 8 208 1 47 27 64 1 92 1 211 1 212 1 264 2 267 1 49 2 330 1 247 3 122 1 50 4 248 1 221 53 97 3 362 7 10 2 175 3 251 8 316 1 368 7 13 1 227 7 181 1 78 6 155 1 376 1 375 1 80 26 15 3 43 2 322 1 82 1 20 7 157 15 187 1 261 4 
188 3 206 2 299 3 47 9 92 2 264 1 49 1 330 1 290 1 247 2 122 1 50 2 248 1 221 19 97 2 362 3 175 2 251 3 368 3 227 3 200 1 78 4 376 1 375 1 80 10 15 2 322 1 20 3 157 6 261 1 
206 2 299 3 208 1 47 13 92 1 211 1 212 1 267 1 330 2 49 2 247 2 122 1 50 3 248 1 221 23 97 2 362 2 10 1 175 2 251 2 368 3 13 1 227 1 181 1 78 4 376 1 375 1 80 10 15 2 322 2 20 3 157 1 261 2 
176 1 134 1 209 1 199 1 280 1 76 1 117 1 258 1 59 1 224 1 
129 1 255 1 
12 1 220 1 199 1 280 1 76 1 258 1 98 1 59 1 224 1 
176 1 207 1 209 1 199 1 280 1 76 1 258 1 119 1 371 1 318 1 59 1 373 1 244 1 38 1 134 1 52 1 323 2 224 1 
176 1 207 1 209 1 199 1 280 1 76 1 258 1 119 1 371 1 318 1 59 1 373 1 244 1 38 1 134 1 52 1 323 2 224 1 
176 1 207 1 209 1 199 1 280 1 76 1 258 1 119 1 371 1 318 1 59 1 373 1 244 1 38 1 134 1 52 1 323 2 224 1 
333 1 275 1 228 1 
333 1 275 1 228 1 
289 1 63 1 
289 1 333 1 63 1 
205 1 334 1 
205 1 280 1 244 1 307 2 282 2 163 1 215 1 194 1 67 2 222 2 224 1 334 1 99 1 313 1 129 1 151 2 293 1 199 1 255 1 76 1 258 1 318 1 371 1 59 1 373 1 323 1 237 1 
275 1 228 1 
289 1 333 1 63 1 
189 1 355 1 47 1 327 1 25 1 191 2 214 1 48 1 30 2 286 1 247 1 67 2 51 2 68 2 221 2 97 1 222 2 175 1 253 1 151 2 131 1 78 2 14 1 80 1 15 1 298 1 235 1 19 1 83 1 138 1 349 1 
365 1 140 1 141 1 317 1 296 1 190 1 191 2 28 1 214 1 30 2 79 1 164 1 105 1 219 1 68 2 71 1 83 1 279 1 21 2 
365 1 140 1 141 1 317 1 296 1 340 1 190 1 191 1 28 1 214 1 30 1 164 1 219 1 68 1 71 1 83 1 21 2 
350 1 300 1 355 1 131 1 191 1 214 1 30 1 308 1 105 1 219 1 145 1 68 1 332 1 83 1 
365 1 140 1 141 1 317 1 296 1 190 1 191 1 28 1 214 1 30 1 79 1 164 1 105 1 219 1 68 1 71 1 83 1 21 2 
4 1 
31 1 106 1 263 1 304 1 256 1 52 1 185 1 
262 1 45 1 304 1 285 1 31 1 33 1 52 2 249 1 55 1 338 1 57 1 371 1 373 1 277 1 320 1 204 1 185 1 
45 4 90 2 191 3 285 4 284 1 193 2 8 2 148 2 52 8 249 5 53 2 251 2 339 1 256 1 338 4 152 6 341 2 58 6 106 1 204 6 20 2 350 1 262 3 299 2 113 1 352 2 304 9 355 10 214 4 30 3 360 1 31 2 32 2 33 12 68 3 362 2 124 3 171 1 223 2 131 3 368 2 180 2 371 5 374 1 373 5 229 3 277 4 40 1 41 2 83 3 84 2 279 1 86 2 185 8 
206 1 45 1 299 2 208 1 304 6 211 1 212 1 285 1 267 1 49 1 33 6 362 2 52 3 251 2 368 2 13 1 152 5 338 1 58 5 277 1 204 3 20 2 185 4 261 1 
241 1 45 1 299 2 304 2 307 1 282 1 285 1 329 1 287 1 8 2 67 1 69 1 70 1 72 1 222 1 223 1 363 1 251 1 151 1 338 1 371 1 155 1 373 1 277 1 110 1 345 1 185 2 187 1 
45 1 304 1 338 1 256 1 285 1 31 1 106 1 277 1 52 1 185 1 
251 2 299 2 304 5 368 2 152 5 58 5 8 2 33 10 362 2 52 5 223 1 20 2 204 5 185 5 53 1 
262 1 31 1 52 1 371 1 373 1 249 1 
350 2 262 2 112 1 45 1 113 2 355 1 304 2 281 1 191 4 214 1 30 4 360 2 93 1 285 2 32 2 145 1 68 4 332 1 249 4 131 1 338 2 339 1 102 1 371 3 373 3 277 2 343 1 83 1 185 2 
350 1 355 1 23 1 191 1 214 1 30 1 282 2 307 2 121 1 247 1 67 3 221 1 68 1 69 2 97 1 222 3 175 1 253 1 254 1 151 2 293 1 369 1 131 1 14 1 78 2 80 1 15 1 229 1 345 1 19 1 83 1 44 1 
45 1 113 1 304 1 316 1 152 2 338 1 58 2 285 1 31 2 277 1 32 1 33 4 52 4 204 2 185 2 
354 1 199 1 224 1 
205 1 88 1 134 1 199 1 224 1 
354 1 199 1 224 1 
354 1 199 1 224 1 
146 1 199 1 224 1 
146 1 199 1 224 1 
146 1 199 1 224 1 
199 1 224 1 
258 1 59 1 
241 1 251 1 188 2 299 1 316 1 47 4 64 1 227 1 78 4 155 1 80 4 15 2 247 2 221 8 97 2 82 1 10 1 157 3 175 2 187 1 
241 1 188 2 251 1 299 1 263 1 316 1 47 3 64 1 155 1 80 3 221 6 82 1 157 2 187 1 
188 1 251 1 299 1 368 1 47 2 227 1 78 2 80 2 15 1 247 1 221 4 362 1 97 1 312 1 20 1 157 2 175 1 
188 1 251 1 206 2 299 1 47 3 368 1 227 1 264 1 80 4 49 1 221 7 362 1 20 1 157 2 261 1 
241 1 188 5 299 3 206 2 47 11 64 1 264 1 247 2 221 23 362 2 97 2 196 1 10 2 175 2 251 3 316 1 368 2 227 4 78 4 155 2 80 12 15 2 43 1 82 1 20 2 157 9 187 2 261 2 22 1 
80 1 206 1 221 1 
47 1 221 1 261 1 
251 1 188 2 299 1 368 1 47 3 227 1 78 2 80 3 15 1 247 1 221 6 97 1 362 1 312 1 20 1 157 3 175 1 53 1 
188 2 206 1 299 2 208 1 47 6 211 1 212 1 267 1 49 1 247 2 221 13 97 2 362 2 10 1 175 2 251 2 368 2 13 1 227 1 78 4 375 1 80 7 15 2 20 2 157 3 261 1 
241 1 251 1 188 1 299 1 47 3 227 1 155 1 80 3 221 6 157 2 187 1 
188 1 47 1 64 1 227 1 78 2 155 1 80 2 15 1 247 1 221 3 97 1 82 1 10 1 157 2 187 1 22 1 175 1 
241 1 188 2 299 1 206 1 47 4 64 1 267 1 49 1 247 1 221 8 97 1 175 1 251 1 316 1 78 2 155 1 375 1 80 4 15 1 82 1 157 2 261 1 187 1 
241 1 188 2 206 2 299 2 47 6 64 1 264 1 267 1 49 1 247 2 221 11 97 2 312 1 175 2 251 1 316 1 368 1 227 1 78 4 155 1 375 1 80 5 15 2 82 1 20 1 157 3 187 1 261 1 
206 1 299 2 208 1 47 6 211 1 212 1 267 1 49 1 247 2 221 12 97 2 362 2 312 1 175 2 251 2 368 2 13 1 227 1 78 4 375 1 80 6 15 2 20 2 157 1 261 1 
188 2 206 1 299 2 208 1 47 7 211 1 212 1 267 1 49 1 247 4 221 12 97 4 362 1 312 1 10 2 175 4 251 1 368 2 13 1 227 1 78 8 375 1 80 5 15 4 20 2 157 3 261 1 
241 1 188 2 299 1 206 1 47 4 64 1 267 1 49 1 247 1 221 8 97 1 175 1 251 1 316 1 78 2 155 1 375 1 80 4 15 1 82 1 157 2 261 1 187 1 
188 2 206 1 299 2 208 1 47 6 211 1 212 1 267 1 49 1 247 2 221 13 97 2 362 2 10 1 175 2 251 2 368 2 13 1 227 1 78 4 375 1 80 7 15 2 20 2 157 3 261 1 
206 1 299 2 208 1 47 7 211 1 212 1 267 1 49 1 247 3 221 11 97 3 362 1 312 1 10 1 175 3 251 1 368 2 13 1 227 1 78 6 375 1 80 4 15 3 20 2 157 1 261 1 
188 1 206 1 299 2 208 1 47 7 211 1 212 1 267 1 49 1 247 3 221 11 97 3 362 1 10 1 175 3 251 1 368 2 13 1 227 2 78 6 200 1 375 1 80 4 15 3 20 2 157 3 261 1 
241 1 251 1 188 3 299 1 47 3 64 2 227 3 155 3 80 4 221 7 82 1 157 6 187 3 
206 1 299 2 208 1 47 7 211 1 212 1 267 1 49 1 247 3 221 11 97 3 362 1 10 1 175 3 251 1 368 2 13 1 227 1 78 6 200 1 375 1 80 4 15 3 20 2 157 1 261 1 
241 1 188 3 251 2 299 2 47 5 227 2 78 2 155 2 375 1 80 5 15 1 247 1 221 10 97 1 363 1 157 5 175 1 187 2 
299 1 47 2 227 1 78 2 375 1 15 1 247 1 221 2 97 1 20 1 157 1 175 1 
188 1 251 1 299 1 368 1 47 2 227 1 78 2 375 1 80 2 15 1 247 1 221 4 362 1 97 1 20 1 157 2 175 1 
188 1 47 1 227 1 200 1 78 6 155 1 375 1 80 2 15 3 247 3 221 3 97 3 10 1 157 2 22 1 175 3 187 1 
241 2 188 7 206 4 299 5 159 1 47 16 64 1 118 1 264 1 49 1 247 5 221 34 97 5 362 3 312 1 10 2 173 1 175 5 251 5 316 1 368 3 227 5 200 1 78 10 155 3 375 1 80 18 15 5 82 1 20 3 157 12 187 3 22 1 261 3 
216 1 151 1 331 1 293 1 67 1 222 1 319 1 
151 1 293 1 359 1 319 1 216 1 331 1 81 1 67 1 34 1 222 1 85 1 364 1 
350 1 263 1 355 1 131 1 145 1 68 1 332 1 191 1 83 1 214 1 30 1 
350 1 100 1 151 1 293 1 355 1 131 1 369 1 191 1 214 1 307 1 282 1 30 1 229 1 121 1 67 2 68 1 222 2 83 1 
355 3 191 1 214 1 30 1 282 2 307 1 360 1 193 1 121 1 67 2 68 1 148 1 149 1 222 2 72 1 100 1 151 2 293 1 369 1 131 2 178 1 229 2 83 1 
1 1 355 3 191 2 214 1 30 2 282 2 307 1 360 1 193 1 218 1 67 2 68 2 148 1 149 1 222 2 72 1 100 1 151 2 293 1 369 1 131 2 178 1 229 2 83 1 
350 1 252 1 355 4 131 1 24 1 191 3 371 2 214 1 341 1 373 2 30 3 360 1 31 1 193 1 229 1 218 1 41 1 68 3 52 1 148 1 124 1 83 1 249 1 
350 1 355 4 131 1 191 3 371 2 214 1 341 1 373 2 30 3 360 1 31 1 193 1 229 1 218 1 41 1 68 3 52 1 148 1 124 1 84 1 83 1 249 1 
68 1 191 1 103 1 83 1 214 1 30 1 
350 2 324 1 355 3 131 2 115 1 317 1 103 1 191 7 214 3 30 6 229 1 51 1 40 1 68 7 235 1 271 1 83 2 279 1 174 1 348 1 127 1 
241 1 188 2 89 1 299 1 302 1 355 1 47 3 64 1 327 1 25 1 191 1 214 1 282 1 307 1 30 1 121 1 247 2 67 2 221 6 68 1 97 2 222 2 175 2 251 1 36 1 253 2 100 1 254 1 151 1 293 2 316 1 131 1 369 1 78 4 155 1 80 3 15 2 133 1 229 1 19 2 137 1 82 1 83 1 279 1 157 2 44 1 187 1 
350 1 262 1 45 2 352 1 304 1 355 2 90 1 191 1 30 1 285 2 31 1 215 1 68 1 52 1 124 1 249 2 256 1 338 2 339 1 180 1 371 3 341 1 373 3 106 1 277 2 41 1 84 1 185 1 
355 2 131 1 103 1 191 2 341 1 214 2 30 2 374 1 229 1 40 1 68 2 83 1 279 1 
350 1 355 1 131 1 257 1 191 4 214 1 30 4 218 1 145 1 68 4 332 1 83 1 279 1 
158 1 355 1 131 1 115 1 191 2 29 1 214 2 30 2 360 1 182 1 229 1 68 2 83 1 348 1 
350 1 68 1 71 1 191 1 83 1 28 1 214 1 21 1 30 1 164 1 
355 1 131 1 317 1 191 2 48 1 214 1 30 2 68 2 235 1 83 1 279 1 
350 1 324 1 355 3 131 2 257 1 191 5 214 2 30 4 360 1 145 1 68 5 235 1 332 1 83 2 279 1 127 1 
350 1 324 1 355 3 131 2 257 1 191 5 214 2 30 4 360 1 16 1 145 1 68 5 235 1 332 1 83 2 279 1 
350 1 1 1 100 1 151 1 293 1 355 1 131 1 369 1 191 1 214 1 307 1 282 1 30 1 229 1 67 2 68 1 222 2 83 1 
355 1 131 1 115 1 191 1 214 2 30 1 360 1 229 1 40 1 68 1 271 1 83 1 348 1 
272 1 301 1 189 1 130 1 151 1 67 1 138 1 222 1 349 1 
61 1 246 1 301 1 
272 1 301 1 130 1 293 1 42 1 
272 2 301 1 130 2 293 1 178 1 356 1 371 2 373 2 31 1 215 1 246 1 61 1 41 1 42 2 52 1 149 1 72 1 125 1 379 1 
263 1 337 1 172 1 245 1 
169 1 170 1 337 1 5 1 172 1 245 1 74 1 
169 1 108 1 238 1 
337 1 370 1 5 1 305 1 342 1 245 1 169 3 170 3 17 2 346 1 172 1 74 1 
169 2 170 2 337 1 5 1 172 1 245 1 120 1 197 1 74 1 
56 1 141 1 370 1 5 1 245 1 164 1 169 1 170 1 230 1 21 1 74 1 
169 1 170 1 337 1 370 1 5 1 245 1 74 1 
169 1 170 1 337 2 370 1 5 1 172 1 74 1 
337 1 370 1 5 2 142 1 245 1 169 2 170 2 147 1 203 1 74 2 
177 1 337 1 370 1 5 1 120 2 245 2 169 3 170 3 230 1 172 1 111 1 74 1 225 1 
365 1 337 1 141 1 370 1 5 1 245 1 164 1 120 1 169 2 170 2 195 1 71 1 172 1 21 2 74 1 
337 1 370 1 5 2 120 2 245 2 169 4 170 4 230 1 268 1 172 1 111 1 74 2 197 1 
169 1 170 1 337 1 370 1 5 1 172 1 245 1 74 1 
337 2 116 1 305 1 5 1 120 2 245 3 169 4 170 4 230 1 17 1 346 1 172 2 111 1 74 1 
337 1 370 1 5 1 154 1 372 1 306 1 245 1 120 1 169 2 170 2 172 1 74 1 
292 1 337 1 370 1 5 1 305 2 245 1 169 3 170 3 17 2 346 1 172 1 74 1 
310 1 65 2 276 1 245 2 
169 1 170 1 7 1 370 1 5 1 74 1 
169 2 170 2 177 1 337 1 370 1 5 1 172 1 245 1 120 1 74 1 
378 1 
169 1 170 1 337 1 370 1 5 1 172 1 245 1 74 1 
177 1 337 1 370 1 5 1 120 1 245 1 169 3 170 3 17 1 172 1 74 1 
230 1 116 1 111 1 245 1 
337 1 245 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | RETURN | 1770 | return null
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | RETURN | 4723 | return null
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
137 2 67 2 205 3 209 1 257 3 328 1 38 1 96 1 120 1 162 1 155 2 53 1 303 1 
155 1 67 1 205 1 3 1 257 1 38 1 
155 1 67 1 205 1 3 1 257 1 38 1 
155 1 67 1 205 1 3 1 257 1 38 1 
155 1 67 1 205 1 3 1 257 1 38 1 
137 3 67 1 205 4 149 2 209 1 257 4 328 2 38 1 120 1 369 1 162 1 199 1 155 1 354 1 52 1 31 1 375 1 303 3 
137 1 67 1 205 2 116 1 209 1 257 2 38 1 40 1 96 1 162 1 155 1 199 1 133 1 31 1 180 1 159 1 
137 5 67 2 205 9 209 1 328 4 257 9 120 3 96 1 162 1 52 1 354 1 31 1 166 1 33 1 53 1 303 7 149 2 38 1 308 1 369 1 155 2 199 1 373 1 375 1 
137 5 67 2 205 9 209 1 328 4 257 9 120 3 96 1 162 1 52 1 354 1 31 1 166 1 33 1 53 1 303 7 149 2 38 1 308 1 369 1 155 2 199 1 373 1 375 1 
263 1 171 1 58 1 13 1 119 1 226 1 121 1 353 1 278 1 124 1 227 1 168 1 242 1 302 1 
283 1 
262 1 226 2 263 1 283 1 85 1 215 1 13 2 331 1 
262 1 114 2 56 1 263 2 264 1 283 1 11 1 85 1 13 5 216 2 178 1 331 2 71 1 226 5 336 1 32 2 281 1 271 1 358 1 
68 1 283 1 85 1 
323 2 283 1 338 1 
310 1 119 2 121 2 353 2 171 2 227 2 58 2 242 1 
294 1 48 2 210 1 237 1 119 2 332 1 121 2 72 1 353 2 164 1 298 1 186 1 34 1 6 2 188 2 241 1 170 1 242 1 100 1 80 1 9 1 171 3 266 2 224 2 103 1 58 2 285 1 286 1 367 1 310 1 311 1 43 1 227 3 203 1 63 1 321 1 272 1 
119 1 121 1 353 1 171 1 278 1 124 1 227 1 58 1 242 1 302 1 
182 1 46 1 115 1 171 1 283 1 85 1 13 1 352 1 226 1 353 1 15 1 124 1 300 1 227 1 
182 1 115 1 171 1 283 1 58 1 85 1 13 2 119 1 226 2 121 1 353 1 15 1 124 1 300 1 227 1 
226 1 263 1 214 1 13 1 331 1 
262 1 226 2 263 1 165 1 283 1 85 1 13 2 331 1 
226 1 13 1 331 1 
171 2 58 1 106 1 119 1 310 2 121 1 353 2 44 1 227 2 
279 1 87 1 125 1 
171 1 48 1 224 1 177 1 285 1 286 1 310 1 332 1 43 1 186 1 227 1 188 1 241 1 170 1 100 1 272 1 
171 2 48 1 138 1 224 1 58 1 285 1 286 1 119 1 332 1 43 1 353 1 186 1 227 2 125 1 241 1 188 1 170 1 100 1 54 1 272 1 
310 1 68 1 
231 1 46 1 171 5 138 1 58 4 274 1 119 4 310 1 121 1 353 5 44 1 227 5 7 1 54 2 
119 2 353 2 171 2 278 1 124 1 227 2 58 2 26 1 
310 1 119 3 121 1 353 3 171 3 227 3 58 3 54 1 
119 1 353 1 171 1 278 1 124 1 227 1 58 1 
119 1 121 1 353 1 171 1 124 1 44 1 227 1 58 1 106 1 
182 1 115 1 48 1 138 1 210 1 237 1 332 1 119 3 121 2 72 1 353 3 164 1 186 1 298 1 221 1 124 1 300 1 6 1 241 1 188 1 170 1 242 1 100 1 54 1 80 1 171 4 266 2 224 1 104 1 58 3 285 1 13 1 286 1 367 1 310 1 311 1 43 1 226 1 15 1 44 1 227 4 63 1 321 1 272 1 
310 1 119 1 46 1 353 2 171 2 227 2 58 1 7 1 54 1 
182 1 230 1 115 1 171 3 138 1 283 1 58 3 13 1 119 3 121 1 226 1 353 3 221 1 15 1 124 1 44 1 300 1 227 3 54 2 
171 2 58 2 119 2 121 1 353 2 279 1 44 1 227 2 125 1 54 1 
171 1 48 1 224 1 285 1 286 1 310 1 332 1 43 1 186 1 227 1 188 1 241 1 170 1 100 1 272 1 
20 1 171 1 48 1 224 1 361 1 285 1 286 1 310 1 43 1 227 1 188 1 241 1 170 1 100 1 272 1 
349 1 47 1 92 1 210 1 25 1 237 1 72 1 164 1 73 1 279 2 34 2 339 1 6 4 125 2 357 1 80 2 304 1 266 2 59 1 367 1 311 1 87 2 88 1 113 1 
119 1 115 1 353 1 171 1 124 1 227 1 58 1 26 1 
66 1 351 1 307 1 
66 2 289 1 16 1 290 1 23 1 307 2 
66 1 307 1 
66 1 307 1 
290 1 23 1 
290 1 23 1 
290 1 23 1 
66 1 99 1 307 1 
66 1 99 1 307 1 
66 1 99 1 307 1 
179 1 66 1 307 1 
179 1 66 1 307 1 
179 1 66 1 307 1 
253 1 66 1 273 1 351 1 296 1 119 2 297 1 5 1 353 2 219 1 148 1 102 1 171 2 306 1 58 2 307 1 13 1 309 1 310 1 226 1 372 1 157 1 227 2 17 1 
66 2 253 3 102 2 283 1 174 1 69 1 307 2 13 2 296 2 248 1 368 1 226 2 29 1 163 1 5 1 289 1 372 2 157 2 55 2 
52 1 245 2 31 2 133 1 291 1 
199 1 52 1 31 1 
199 1 31 1 133 1 
288 1 52 2 245 1 31 3 133 1 291 1 
52 1 132 1 245 1 31 2 133 1 291 1 
114 1 323 3 350 1 91 2 92 1 254 1 25 1 216 1 331 1 71 1 334 1 219 1 32 1 336 3 281 2 339 1 338 1 262 1 148 1 263 4 265 2 304 1 283 2 306 1 193 2 172 1 150 1 84 1 13 5 85 1 226 5 345 1 
114 2 323 9 89 1 325 5 92 3 25 3 214 5 216 2 331 6 71 1 334 1 219 4 355 1 240 1 32 2 336 8 281 6 339 3 338 3 262 1 147 1 263 7 265 6 304 3 11 1 283 5 193 6 172 2 84 2 13 9 85 1 153 1 198 1 226 9 345 3 
114 1 323 4 350 1 91 1 254 1 92 1 25 1 216 1 219 1 32 1 336 3 281 2 339 1 338 2 263 2 265 2 304 1 283 3 11 1 193 2 172 1 84 1 85 1 13 3 226 3 345 1 
114 1 323 7 89 1 350 1 91 2 254 1 92 2 25 2 216 1 219 2 240 1 32 1 336 5 281 4 339 2 338 3 263 3 265 4 304 2 283 4 11 1 193 4 172 1 84 1 85 1 13 4 153 1 226 4 345 2 
4 1 
68 1 21 1 286 1 
286 1 51 1 
43 1 170 1 286 1 
232 1 286 1 
43 1 286 1 
43 1 187 1 21 2 170 1 286 3 276 1 
80 3 101 1 293 1 82 1 92 1 207 1 341 1 117 1 365 1 249 2 73 3 370 1 34 4 339 1 6 7 201 1 88 2 229 1 
45 1 293 5 92 4 207 2 210 1 234 1 117 2 25 3 185 1 142 1 73 10 164 1 34 16 339 4 6 31 80 15 82 1 266 2 304 3 83 1 341 1 127 3 365 2 367 1 311 1 249 3 345 3 154 1 200 1 370 1 201 1 319 4 88 5 229 2 
293 1 92 1 207 1 210 2 117 1 164 2 73 4 34 5 339 1 6 9 80 4 82 1 266 4 83 1 267 1 363 1 365 1 367 2 311 2 249 2 370 1 201 1 88 3 229 1 
80 3 293 1 82 1 92 1 207 1 341 1 117 1 365 1 249 2 73 3 370 1 34 4 339 1 6 7 201 1 88 2 229 1 
80 3 293 1 82 1 92 1 207 1 341 1 117 1 365 1 249 2 73 3 370 1 34 4 339 1 6 7 201 1 88 2 229 1 
67 1 359 1 205 1 48 1 50 1 224 1 257 1 285 1 286 1 86 1 96 2 43 1 155 1 61 1 122 2 315 2 76 1 188 1 100 1 112 1 134 2 272 1 228 1 
67 1 48 1 205 1 256 1 257 1 235 1 96 1 52 1 122 1 31 2 299 1 188 1 169 1 260 1 244 1 305 1 224 1 38 1 285 1 199 1 155 1 288 1 315 1 133 1 134 1 272 1 
137 1 67 1 48 1 205 2 256 1 209 1 257 2 235 1 96 1 162 1 52 1 122 1 31 2 188 1 169 1 260 1 303 1 244 1 305 1 224 1 38 1 285 1 199 1 155 1 60 1 288 1 315 1 133 1 134 1 272 1 
137 1 67 1 48 1 205 3 255 1 256 1 50 1 209 1 257 3 235 1 96 1 162 1 52 1 122 1 31 2 299 1 188 1 260 1 303 2 244 1 305 1 224 1 285 1 199 1 155 1 288 1 315 1 133 1 134 1 272 1 
137 1 48 1 205 2 255 1 256 1 209 1 257 2 235 1 96 1 162 1 122 1 52 1 31 2 299 1 188 1 303 2 244 1 224 1 285 1 199 1 288 1 315 1 133 1 134 1 272 1 
35 1 
323 2 182 1 46 1 48 2 331 6 280 2 336 2 281 2 338 2 188 2 100 2 8 2 191 2 283 2 12 1 152 1 195 2 13 5 285 1 286 1 15 1 202 1 18 1 114 1 115 1 212 1 211 1 216 1 352 1 118 2 71 1 353 1 32 1 124 1 300 1 167 1 262 3 171 1 224 2 84 1 85 1 176 4 269 1 86 1 42 2 129 1 130 1 43 1 226 5 312 1 371 2 227 1 376 1 228 1 272 1 
262 1 182 1 115 1 46 1 171 1 12 1 152 1 215 1 176 2 13 3 352 1 331 2 118 1 129 1 312 1 226 3 353 1 15 1 124 1 300 1 227 1 202 1 
262 1 182 1 115 1 46 1 171 1 283 1 12 1 152 1 215 1 85 1 176 3 13 3 352 1 331 1 129 1 312 1 226 3 353 1 371 1 15 1 124 1 300 1 227 1 202 1 
182 1 46 1 115 1 215 1 352 1 118 1 331 2 353 1 124 1 300 1 262 1 171 1 283 1 12 1 152 1 13 3 176 3 85 1 42 1 129 1 226 3 312 1 15 1 371 1 227 1 202 1 
182 1 46 1 331 7 145 1 336 1 280 2 281 1 338 2 8 2 191 2 283 5 12 1 152 1 195 2 13 5 196 1 15 1 202 1 18 1 114 1 115 1 215 1 352 1 216 1 118 4 71 1 353 1 124 1 32 1 300 1 222 1 262 3 78 1 171 1 362 1 176 6 85 5 42 4 129 1 312 1 226 5 130 1 371 4 227 1 
182 1 323 2 46 1 331 4 336 1 280 2 281 1 338 2 8 2 191 2 283 2 12 1 152 1 195 2 13 4 15 1 202 1 18 1 114 1 115 1 216 1 352 1 118 2 71 1 353 1 124 1 32 1 300 1 167 1 262 2 171 1 176 4 85 1 42 2 129 1 312 1 226 4 130 1 371 2 227 1 
114 1 182 1 46 1 115 1 352 1 216 1 118 2 331 4 71 1 353 1 280 2 336 1 32 1 124 1 300 1 281 1 222 1 338 2 8 2 262 2 78 1 191 2 171 1 283 1 12 1 152 1 195 2 362 1 85 1 13 4 176 4 42 2 129 1 130 1 226 4 312 1 371 2 15 1 227 1 202 1 18 1 
114 1 182 1 46 1 115 1 352 1 216 1 118 2 331 4 71 1 353 1 280 2 336 1 32 1 124 1 300 1 281 1 222 1 338 2 8 2 262 2 78 1 191 2 171 1 283 1 12 1 152 1 195 2 362 1 85 1 13 4 176 4 42 2 129 1 130 1 226 4 312 1 371 2 15 1 227 1 202 1 18 1 
114 1 323 2 182 1 46 1 115 1 352 1 277 1 216 1 118 2 331 4 71 1 353 1 336 1 32 1 124 1 300 1 281 1 8 2 262 2 78 1 171 1 283 1 12 1 151 2 152 1 195 2 85 1 13 4 176 4 42 2 129 1 130 1 226 4 312 1 344 1 371 2 15 1 227 1 202 1 320 2 64 1 
114 1 182 1 46 1 115 1 216 1 352 1 118 3 331 5 71 1 353 1 145 1 280 2 336 1 32 1 124 1 300 1 281 1 222 1 338 2 8 2 262 2 78 1 191 2 171 1 283 1 12 1 152 1 195 2 362 1 85 1 13 4 176 5 42 3 129 1 130 1 226 4 312 1 15 1 371 3 227 1 202 1 18 1 
114 1 182 1 46 1 115 1 216 1 352 1 118 3 331 5 71 1 353 1 145 1 280 2 336 1 32 1 124 1 300 1 281 1 222 1 338 2 8 2 262 2 78 1 191 2 171 1 283 1 12 1 152 1 195 2 362 1 85 1 13 4 176 5 42 3 129 1 130 1 226 4 312 1 15 1 371 3 227 1 202 1 18 1 
182 1 323 2 46 1 331 4 336 1 281 1 8 2 283 1 12 1 152 1 151 2 195 2 13 4 15 1 202 1 64 1 114 1 115 1 216 1 352 1 118 2 71 1 353 1 124 1 32 1 300 1 167 1 262 2 171 1 176 4 85 1 42 2 129 1 312 1 226 4 130 1 371 2 227 1 320 2 
349 1 49 1 48 8 210 2 237 2 95 1 119 1 353 1 72 2 164 2 299 1 34 1 188 8 6 2 243 1 100 2 54 1 80 1 9 1 171 1 266 4 224 7 58 1 39 1 285 2 286 3 86 1 367 2 311 2 343 1 43 2 60 1 346 1 318 1 227 1 203 2 321 1 272 2 228 1 
92 1 210 1 25 1 237 1 119 1 121 1 72 1 353 1 73 1 164 1 123 1 279 1 34 1 339 1 125 1 6 3 80 2 171 1 266 2 304 1 58 1 367 1 311 1 107 1 345 1 44 1 87 1 227 1 88 1 
349 1 68 1 92 1 210 1 117 1 237 1 72 1 164 1 73 2 279 1 34 3 339 1 125 1 6 6 80 3 82 1 266 2 367 1 311 1 310 2 249 1 370 1 87 1 201 1 88 2 229 1 
0 1 293 1 92 2 210 2 234 1 24 1 25 2 237 1 144 1 72 2 73 2 164 2 239 1 279 4 34 8 339 1 6 14 125 11 80 6 9 1 266 4 304 1 127 3 367 2 310 1 311 2 107 1 345 2 200 1 87 11 319 3 321 1 88 1 
48 1 138 1 210 1 237 1 332 1 119 1 72 1 353 1 186 1 164 1 279 1 34 1 241 1 188 1 6 2 170 1 100 1 54 1 261 1 80 1 9 1 171 2 266 2 192 1 224 1 58 1 285 1 177 1 286 1 367 1 310 1 311 1 43 1 107 1 314 1 227 2 321 1 272 1 
136 2 48 3 138 1 92 3 237 3 332 2 186 2 279 7 146 1 339 3 188 3 6 20 241 2 100 1 54 1 190 2 9 1 58 1 284 1 285 2 14 1 286 2 249 1 107 1 345 2 201 1 63 2 293 4 210 3 117 1 25 2 119 1 353 1 72 3 164 3 73 8 299 1 34 10 125 7 170 2 80 10 82 1 171 3 126 2 266 6 304 2 224 3 367 3 310 2 311 3 43 2 370 1 227 3 87 7 88 4 321 1 322 2 229 1 272 2 
349 1 293 1 266 2 92 1 210 1 25 1 237 1 367 1 311 1 72 1 73 1 164 1 279 1 34 2 87 1 125 1 6 2 113 1 
349 1 80 2 47 1 266 2 304 1 210 1 237 1 367 1 311 1 72 1 73 1 164 1 279 1 87 1 339 1 125 1 6 2 88 1 
349 1 293 1 92 1 210 1 25 1 237 1 72 1 164 1 73 2 279 2 34 2 339 1 6 4 125 2 80 2 266 2 304 1 367 1 311 1 345 1 87 2 88 1 
293 1 266 2 92 1 210 1 25 1 237 1 95 1 367 1 311 1 72 1 73 1 164 1 279 1 34 2 87 1 125 1 6 2 113 1 
80 2 47 1 266 2 304 1 210 1 237 1 95 1 367 1 311 1 72 1 73 1 164 1 279 1 87 1 339 1 125 1 6 2 88 1 
293 1 92 1 210 1 25 1 237 1 95 1 72 1 164 1 73 2 279 2 34 2 339 1 6 4 125 2 80 2 266 2 304 1 367 1 311 1 345 1 87 2 88 1 
293 1 92 1 210 1 25 1 237 1 72 1 164 1 73 2 279 2 34 2 339 1 6 4 125 2 80 2 266 2 304 1 367 1 311 1 345 1 87 2 88 1 
48 1 210 1 237 1 332 1 72 1 186 1 164 1 34 1 6 2 241 1 188 1 170 1 100 1 80 1 9 1 171 1 266 2 224 1 285 1 286 1 367 1 310 1 311 1 43 1 227 1 63 1 321 1 272 1 
20 1 19 1 48 1 210 1 237 1 72 1 164 1 34 1 6 2 241 1 188 1 170 1 100 1 80 1 9 1 171 1 266 2 224 1 361 1 285 1 286 1 367 1 310 1 311 1 43 1 227 1 321 1 272 1 
293 1 92 1 210 1 25 1 237 1 72 1 164 1 73 2 279 2 34 2 339 1 6 4 125 2 80 2 266 2 304 1 367 1 311 1 107 1 345 1 87 2 88 1 
293 1 136 1 48 1 92 1 210 1 25 1 237 1 332 1 72 1 73 2 186 1 164 1 279 2 34 2 339 1 125 2 6 4 241 1 188 1 170 1 80 2 171 1 304 1 266 2 224 1 285 1 286 1 367 1 311 1 43 1 345 1 60 1 87 2 227 1 63 1 88 1 272 1 
293 1 92 1 210 1 25 1 237 1 119 1 121 1 72 1 353 1 73 1 164 1 279 1 34 2 339 1 6 3 125 1 80 1 223 1 171 1 304 1 266 2 58 1 367 1 311 1 107 1 345 1 44 1 227 1 87 1 
252 1 293 3 92 3 210 2 234 1 329 1 25 3 275 2 98 1 164 2 73 6 34 9 339 3 6 19 77 1 80 10 266 4 304 3 267 1 127 1 367 2 311 2 345 3 200 1 111 1 374 1 181 1 158 2 319 2 88 3 
1 1 252 1 293 2 92 3 210 3 329 1 25 3 275 1 98 2 73 4 164 3 74 1 34 14 339 2 6 26 80 12 266 6 304 2 83 2 57 1 267 1 127 2 128 1 367 3 311 3 345 3 200 2 109 1 111 1 374 2 158 4 319 2 88 2 292 1 
1 1 92 5 234 1 329 1 275 1 98 1 339 5 6 41 57 1 249 1 345 4 200 3 347 1 109 1 111 1 201 1 158 4 292 1 252 1 293 4 210 3 25 4 117 1 73 8 164 3 74 1 34 20 77 1 80 21 82 1 304 4 266 6 83 1 267 1 127 3 128 1 367 3 311 3 370 1 374 2 319 4 88 4 229 1 
1 1 252 1 293 3 92 5 210 4 234 1 117 1 329 1 25 4 275 1 98 1 164 4 73 7 74 1 34 20 339 4 6 38 77 1 80 18 82 1 266 8 304 3 83 2 57 1 267 1 127 3 128 1 367 4 311 4 249 1 345 4 347 1 200 3 370 1 109 1 111 1 374 2 201 1 158 4 319 4 292 1 88 4 229 1 
1 1 0 2 252 1 293 7 92 8 210 2 234 2 117 1 329 1 25 7 275 1 98 1 164 2 73 14 74 1 34 27 339 8 6 52 80 25 82 1 266 4 304 7 83 1 57 1 267 1 127 4 128 1 367 2 311 2 249 1 345 7 200 2 370 1 109 1 111 1 374 1 201 1 158 4 319 4 292 1 88 7 229 1 
66 1 163 1 102 1 289 1 372 1 157 1 233 1 174 1 307 1 296 1 
297 1 351 1 
81 1 66 1 102 1 372 1 157 1 93 1 307 1 287 1 296 1 
295 1 99 1 
179 1 16 1 360 1 
66 1 253 2 102 1 283 1 174 1 69 1 307 1 13 1 296 1 248 1 226 1 29 1 163 1 5 1 289 1 372 1 157 1 55 1 
66 1 253 2 102 1 283 1 174 1 69 1 307 1 13 1 296 1 248 1 226 1 29 1 163 1 5 1 289 1 372 1 157 1 55 1 
66 1 253 2 102 1 283 1 174 1 69 1 307 1 13 1 296 1 248 1 226 1 29 1 163 1 5 1 289 1 372 1 157 1 55 1 
295 1 16 1 99 1 
295 1 16 1 99 1 
179 1 360 1 
179 1 16 1 360 1 
273 1 309 1 
66 1 253 1 273 1 351 1 296 1 297 1 119 2 29 1 353 2 219 1 356 1 55 1 263 1 148 1 171 2 102 1 306 1 307 1 58 2 13 1 309 1 310 1 226 1 372 1 157 1 227 2 17 1 
48 2 22 1 210 1 140 1 213 1 237 1 72 1 353 2 164 1 34 1 188 2 6 2 340 1 80 1 9 1 171 2 266 2 224 2 342 1 285 1 39 1 286 1 367 1 311 1 343 1 43 1 107 1 227 2 203 2 321 1 272 1 
183 1 48 1 224 1 285 1 286 1 86 1 217 1 43 1 122 1 188 1 100 1 112 1 272 1 228 1 
244 1 48 1 305 1 224 1 235 1 175 1 285 1 217 1 199 1 288 1 52 1 122 1 31 2 133 1 299 1 110 1 188 1 272 1 
244 1 48 2 305 1 224 2 235 1 175 1 285 1 217 1 199 1 288 1 60 1 52 1 122 1 31 2 133 1 299 1 110 1 188 2 272 1 
244 1 48 1 305 1 224 1 235 1 364 1 285 1 199 1 288 1 52 1 122 1 31 2 133 1 299 1 110 1 188 1 272 1 
317 1 
114 1 283 1 85 1 216 1 71 1 32 1 336 1 281 1 271 1 358 1 
79 1 323 10 265 5 92 2 304 2 283 5 193 5 173 2 25 2 345 2 336 5 281 5 338 5 339 2 322 1 
262 1 226 1 283 1 85 1 13 1 331 1 
114 2 48 4 211 1 212 2 236 1 258 1 216 2 331 4 71 1 218 1 32 2 336 2 281 2 188 4 100 2 262 2 11 1 224 4 84 2 285 1 13 3 286 1 86 1 313 2 43 1 226 3 376 1 272 1 228 1 
68 1 283 1 336 1 281 1 271 1 85 1 358 1 
114 1 323 1 216 1 331 1 71 1 280 1 336 1 32 1 281 1 338 1 262 1 191 1 283 2 13 1 85 1 226 1 18 1 
114 1 135 1 48 1 224 1 285 2 51 1 286 2 216 1 276 1 43 1 71 1 32 1 337 1 188 1 170 1 100 1 272 1 
1 1 114 2 323 6 92 2 212 1 25 2 216 2 331 1 71 2 336 8 32 2 281 5 338 3 339 2 262 1 79 1 265 5 304 2 283 5 194 1 193 5 57 1 173 2 127 1 84 1 128 1 13 1 85 2 197 1 226 1 345 2 200 1 109 1 319 1 292 1 
114 1 92 2 117 1 216 1 119 1 71 1 121 1 353 1 278 1 124 1 32 1 336 2 222 1 281 2 339 1 168 1 242 1 302 1 79 1 171 1 173 2 58 1 13 1 226 1 108 1 370 1 227 1 229 1 
48 1 210 1 237 1 119 2 332 1 121 2 353 2 72 1 298 1 186 1 164 1 6 1 188 1 241 1 242 1 170 1 100 1 80 1 171 3 266 2 224 1 58 2 285 1 286 1 367 1 310 1 311 1 43 1 227 3 63 1 321 1 272 1 
114 1 323 4 265 2 283 4 193 2 212 1 84 1 85 2 216 1 249 1 71 1 32 1 336 1 281 2 338 2 
160 1 372 1 157 1 174 1 309 1 
327 1 372 1 157 1 
327 1 372 1 157 1 
327 1 372 1 157 1 
238 1 372 1 157 1 
238 1 372 1 157 1 
238 1 372 1 157 1 
372 1 157 1 
66 1 307 1 
80 5 293 2 266 2 92 2 210 1 267 1 117 2 367 1 311 1 108 1 164 1 73 5 370 1 34 5 339 2 6 10 88 3 229 2 
293 1 266 2 92 1 267 1 210 1 25 1 367 1 311 1 164 1 73 1 34 2 6 2 
80 2 293 1 304 1 266 2 92 1 267 1 210 1 25 1 367 1 311 1 345 1 73 2 164 1 34 2 339 1 6 4 88 1 
80 2 293 1 204 1 266 6 83 1 267 1 210 3 117 1 367 3 311 3 164 3 73 2 34 1 6 3 77 1 88 1 229 1 
293 5 204 1 92 5 210 5 234 1 117 3 25 3 142 1 185 1 333 1 164 5 73 12 34 16 339 5 6 34 77 1 80 18 82 1 266 10 304 3 83 2 267 1 127 3 367 5 311 5 249 1 154 1 345 3 200 1 370 2 201 1 319 4 88 7 229 3 
92 1 210 1 117 1 164 1 73 2 34 4 339 1 6 8 80 4 82 1 266 2 267 1 127 1 367 1 311 1 249 1 200 1 370 1 201 1 319 1 292 1 88 2 229 1 
293 1 92 2 210 2 234 1 117 1 25 1 333 1 164 2 73 3 34 6 339 1 6 11 80 5 82 1 266 4 267 1 127 1 367 2 311 2 249 1 345 1 200 1 370 1 201 1 319 2 88 2 292 1 229 1 
1 1 293 1 92 3 210 3 117 1 25 2 333 1 164 3 73 4 34 9 339 3 6 19 80 10 82 1 266 6 304 2 83 1 57 1 267 1 127 1 128 1 367 3 311 3 249 1 345 2 200 1 370 1 109 1 201 1 319 1 292 1 88 3 229 1 
1 1 293 2 92 3 210 3 117 1 25 2 333 1 164 3 73 5 34 10 339 2 6 17 80 7 82 1 266 6 304 1 83 1 57 1 267 1 127 1 128 1 367 3 311 3 249 1 345 2 200 1 370 1 109 1 201 1 319 1 292 1 88 3 229 1 
92 1 210 1 117 1 164 1 73 2 34 4 339 1 6 8 80 4 82 1 266 2 267 1 127 1 367 1 311 1 249 1 200 1 370 1 201 1 319 1 292 1 88 2 229 1 
1 1 293 1 92 2 210 1 25 2 164 1 73 2 34 6 339 2 6 12 80 6 266 2 304 2 57 1 267 1 127 1 128 1 367 1 311 1 345 2 200 1 109 1 319 1 292 1 88 1 
1 1 293 2 92 3 210 4 117 1 25 2 333 1 164 4 73 5 34 10 339 2 6 18 80 8 82 1 266 8 304 1 83 2 57 1 267 1 127 1 128 1 367 4 311 4 249 1 345 2 200 1 370 1 109 1 201 1 319 1 292 1 88 3 229 1 
1 1 293 3 92 3 210 4 25 3 164 4 73 6 34 9 339 2 6 16 77 1 80 7 266 8 304 2 83 2 57 1 267 1 127 1 128 1 367 4 311 4 345 3 200 1 109 1 319 1 292 1 88 3 
80 4 293 3 82 2 92 1 117 3 73 6 370 1 34 3 339 1 6 7 201 1 88 3 229 3 
1 1 293 1 92 3 210 4 117 1 25 2 164 4 73 4 34 10 339 2 6 18 77 1 80 8 82 1 266 8 304 1 83 2 57 1 267 1 127 1 128 1 367 4 311 4 249 1 345 2 200 1 370 1 109 1 201 1 319 1 292 1 88 3 229 1 
80 4 293 1 82 1 92 1 266 4 83 1 210 2 117 1 367 2 311 2 249 1 73 3 164 2 370 1 34 4 339 1 6 8 201 1 88 2 229 1 
80 3 82 1 68 1 92 1 117 1 249 1 73 2 370 1 34 3 339 1 6 6 201 1 88 2 229 1 
80 2 293 1 304 1 266 2 92 1 210 1 25 1 367 1 311 1 333 1 345 1 73 2 164 1 34 2 339 1 6 4 88 1 
80 4 293 1 304 1 92 1 234 1 127 1 25 1 345 1 73 2 200 1 34 3 339 1 6 7 319 2 88 1 
0 1 293 4 204 1 92 3 210 2 234 1 117 2 25 2 24 1 73 9 164 2 34 11 339 3 6 23 80 12 82 1 304 2 266 4 83 2 127 2 367 2 311 2 249 1 345 2 370 1 201 1 319 2 88 5 229 2 
80 1 6 1 319 1 
34 1 6 1 127 1 
80 3 293 1 266 2 92 1 304 1 210 1 25 1 367 1 311 1 333 1 345 1 164 1 73 3 34 3 339 1 6 6 322 1 88 2 
1 1 293 1 92 2 210 1 25 2 164 1 73 2 34 6 339 2 6 12 80 6 266 2 304 2 57 1 267 1 127 1 128 1 367 1 311 1 345 2 200 1 109 1 319 1 292 1 88 1 
80 3 293 1 92 1 117 1 73 2 370 1 34 3 339 1 6 6 88 1 229 1 
80 2 293 1 82 1 204 1 266 2 83 1 210 1 117 1 367 1 311 1 73 2 164 1 34 1 6 3 201 1 88 1 229 1 
310 1 353 1 46 1 171 1 227 1 330 1 7 1 
310 1 90 1 353 1 46 1 171 1 348 1 270 1 227 1 268 1 139 1 330 1 7 1 
48 4 208 1 224 4 285 1 86 1 286 1 41 1 43 1 60 1 188 4 100 1 228 1 272 1 
48 2 224 2 285 2 14 1 286 1 27 1 313 1 43 1 28 1 250 1 188 2 170 1 301 1 272 1 
244 1 199 1 48 1 31 1 133 1 224 1 188 1 285 1 100 1 272 1 
48 2 224 2 213 1 39 1 285 1 286 1 43 1 60 1 299 1 188 2 272 1 
48 5 49 1 224 4 39 1 285 2 86 1 286 3 41 1 313 1 43 2 60 1 188 5 243 1 100 1 228 1 272 2 
48 5 49 1 224 4 225 1 39 1 285 2 86 1 286 3 41 1 313 1 43 2 60 1 188 5 100 1 228 1 272 2 
43 1 48 1 68 1 224 1 188 1 285 1 100 1 286 1 86 1 272 1 228 1 
171 2 48 1 224 1 58 1 285 1 286 1 310 1 119 1 43 1 353 1 186 1 227 2 241 1 188 1 170 1 100 1 54 1 272 1 
115 1 48 1 232 1 119 2 353 2 186 1 220 1 124 1 300 1 188 1 241 1 170 2 54 1 171 2 224 1 58 1 285 1 286 3 310 1 313 1 43 2 227 2 272 1 
20 1 115 1 48 2 208 1 232 1 119 2 353 2 220 1 124 1 300 1 188 2 241 1 170 2 54 1 171 2 224 2 58 1 285 1 286 3 310 1 313 1 43 2 227 2 272 1 
182 1 48 3 208 1 232 1 21 1 51 1 331 1 70 1 220 1 188 3 170 1 100 1 283 1 224 3 13 2 285 1 85 1 286 4 313 1 226 2 43 1 316 1 272 1 
182 1 48 3 208 1 283 1 232 1 224 3 21 1 85 1 285 1 13 2 51 1 286 4 331 1 43 1 226 2 313 1 220 1 30 1 188 3 170 1 100 1 272 1 
48 1 224 1 318 1 188 1 285 1 272 1 
324 1 49 1 48 7 224 6 39 1 285 3 276 1 286 3 43 2 28 1 60 1 346 1 250 1 299 1 318 1 188 7 243 1 170 1 203 1 100 2 272 2 
136 1 48 1 92 1 210 2 117 1 237 2 119 1 332 1 72 2 353 1 73 2 164 2 186 1 279 1 34 3 339 1 125 1 6 6 241 1 188 1 170 1 54 1 80 3 190 1 82 1 171 2 266 4 224 1 342 1 58 1 285 1 286 1 367 2 310 2 311 2 249 1 43 1 107 1 60 1 370 1 87 1 227 2 201 1 63 1 88 2 229 1 272 1 
114 2 182 1 48 1 21 1 216 2 51 1 331 2 71 2 218 1 335 1 30 1 336 1 32 2 281 1 188 1 100 1 358 1 262 1 263 1 283 1 224 1 246 1 105 1 85 1 13 3 286 2 226 3 271 1 
48 2 224 2 21 1 285 2 276 1 286 2 43 1 60 1 337 1 318 1 188 2 170 1 272 1 
20 1 171 2 48 1 224 1 58 1 285 1 286 1 310 1 119 1 43 1 353 1 227 2 241 1 188 1 170 1 100 1 54 1 272 1 
324 1 48 1 224 1 285 2 276 1 286 1 313 1 43 1 28 1 250 1 188 1 170 1 272 1 
310 1 97 1 37 1 75 1 141 1 
182 1 263 1 115 1 37 2 283 1 141 2 85 1 94 1 13 2 247 1 310 1 226 2 97 2 156 1 75 1 221 1 15 1 124 1 300 1 
97 1 353 1 171 1 37 1 75 1 22 1 227 1 140 1 340 1 
156 1 75 1 247 1 
137 1 162 1 155 1 67 1 205 1 209 1 257 1 38 1 
137 3 67 1 205 4 209 2 161 1 257 4 328 1 184 1 366 1 120 1 162 2 155 1 159 1 303 2 
137 1 67 1 205 2 257 2 209 1 38 1 162 1 155 1 62 1 166 1 251 1 303 1 
137 1 67 1 205 3 257 3 209 1 38 1 184 2 366 1 155 1 162 1 189 1 159 2 
137 2 131 2 259 1 143 1 
155 1 67 1 205 1 206 1 257 1 38 1 
137 1 162 1 155 1 67 1 205 2 209 1 33 1 257 2 38 1 303 1 
326 1 
137 1 162 1 155 1 67 1 205 1 209 1 257 1 38 1 
137 1 162 1 68 1 209 1 
137 1 162 1 155 1 67 1 205 1 209 1 257 1 
96 1 315 1 257 1 
65 1 137 1 162 1 155 1 67 1 205 3 209 1 257 3 38 1 184 1 159 2 366 1 
137 1 162 1 155 1 67 1 149 1 205 2 209 1 257 2 303 1 
137 1 67 1 205 1 257 1 328 1 38 1 369 1 155 1 199 1 52 1 31 1 
137 1 162 1 155 1 67 1 205 1 257 1 38 1 
162 2 155 1 67 1 205 1 209 1 257 1 38 1 
2 1 137 1 10 1 67 2 205 2 282 1 257 2 38 1 162 1 155 2 
137 2 67 1 205 3 209 1 257 3 328 1 38 1 308 1 120 1 162 1 155 1 33 1 303 2 
137 1 67 1 36 1 205 2 209 1 257 2 38 1 162 1 155 1 199 1 288 1 52 1 133 1 31 2 303 1 
137 2 67 2 205 4 149 1 209 1 257 4 328 1 38 1 120 1 162 1 155 2 354 1 303 2 
137 1 162 1 155 1 67 1 205 3 33 1 209 1 257 3 38 1 159 1 303 1 
120 1 137 1 161 1 328 1 
137 1 162 1 

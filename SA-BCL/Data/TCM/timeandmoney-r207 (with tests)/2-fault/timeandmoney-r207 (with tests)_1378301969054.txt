#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
109 3 68 2 222 1 112 1 77 1 338 2 288 6 291 9 31 9 51 1 294 5 225 2 17 1 173 1 302 1 95 1 277 1 349 2 239 1 121 1 123 1 378 2 149 2 178 1 352 1 307 4 259 1 309 2 
109 3 68 2 222 1 112 1 77 1 338 2 288 6 291 9 31 9 51 1 294 5 225 2 17 1 173 1 302 1 95 1 277 1 349 2 239 1 121 1 123 1 149 2 378 2 178 1 352 1 307 4 259 1 309 2 
109 4 68 2 222 1 112 1 77 1 338 2 288 7 291 10 31 10 51 1 294 6 225 2 17 1 173 1 302 1 95 1 277 1 349 2 239 1 121 1 123 1 149 2 378 2 178 1 352 1 307 5 259 1 309 2 
109 2 68 2 222 1 112 1 77 1 338 2 288 4 291 7 31 7 51 1 294 4 225 1 17 1 173 1 302 1 95 1 277 1 349 2 239 1 121 1 123 1 149 2 378 2 178 1 352 1 307 3 309 2 
109 1 68 1 95 1 349 1 277 1 239 1 77 1 338 1 288 3 149 1 291 4 352 1 31 4 307 2 294 3 225 2 259 1 309 1 
68 1 246 1 223 1 95 1 349 1 278 1 239 1 338 1 123 1 378 1 291 2 352 1 31 2 294 1 309 1 17 1 
109 1 378 1 291 3 31 3 68 2 352 1 294 2 307 1 95 1 349 2 239 1 288 1 173 1 
109 3 133 1 68 2 222 1 77 1 288 7 338 1 291 9 31 9 294 5 318 1 225 2 173 1 95 1 349 2 277 1 239 1 378 1 149 1 178 1 352 1 307 4 259 1 309 1 
109 3 133 1 68 2 222 1 77 1 288 7 338 1 291 9 31 9 294 5 318 1 225 2 173 1 95 1 349 2 277 1 239 1 378 1 149 1 178 1 352 1 307 4 259 1 309 1 
117 1 6 1 7 1 
345 2 116 1 6 1 
329 2 84 1 245 2 100 2 266 2 293 1 248 2 315 2 
284 1 0 1 264 1 245 2 364 2 266 2 183 1 207 1 286 2 248 2 315 2 48 1 166 1 78 1 250 1 271 1 293 1 142 1 211 1 144 1 370 1 84 1 300 1 93 2 57 1 200 1 64 1 377 1 329 3 240 1 127 2 100 3 305 1 242 1 25 1 261 2 282 1 
329 1 245 1 100 1 266 1 293 1 317 1 330 1 198 1 248 1 315 1 
298 1 117 1 174 1 69 1 198 1 6 1 315 1 20 1 329 1 10 1 100 1 367 1 153 1 190 1 
117 1 174 1 245 1 266 1 248 1 198 1 6 1 315 1 20 1 10 2 329 1 100 1 367 1 153 2 190 1 
10 1 90 1 153 1 22 1 72 1 
10 2 117 1 128 1 153 2 22 1 6 1 72 1 273 1 
10 1 153 1 22 1 
245 1 266 1 198 1 248 1 72 1 315 1 366 1 10 1 329 1 100 1 293 1 153 1 317 1 330 1 
6 1 
10 2 117 1 161 1 153 2 22 1 6 1 72 1 273 1 
117 1 87 1 134 1 184 1 216 1 256 1 347 1 6 1 72 2 10 5 281 2 369 1 153 5 203 2 22 2 83 2 41 1 379 1 273 1 
0 1 364 1 266 1 2 1 57 1 93 1 248 1 315 1 166 1 329 2 202 1 305 1 100 2 142 1 242 1 211 1 261 1 370 1 282 1 107 1 
84 1 7 1 
213 1 84 2 245 1 266 1 162 1 248 1 315 2 329 2 100 2 
151 1 2 1 119 1 
84 1 0 1 364 1 57 1 93 1 74 1 166 1 329 1 100 1 305 1 142 1 242 1 211 1 261 1 282 1 370 1 
329 3 84 1 245 1 100 3 266 3 248 3 315 3 107 1 
329 1 100 1 266 1 330 1 198 1 248 1 315 1 
329 1 213 1 245 1 100 1 266 1 162 1 198 1 248 1 315 1 
108 1 0 1 264 1 245 2 364 1 266 3 162 1 183 1 207 1 286 2 248 3 48 1 315 3 166 1 10 1 78 1 250 1 271 1 142 1 367 1 293 1 15 1 211 1 190 1 370 1 84 1 174 1 57 1 93 1 198 1 20 1 64 1 377 1 329 4 127 1 202 1 305 1 100 4 242 1 153 1 25 1 261 1 282 1 107 1 
329 2 84 1 69 1 100 2 266 1 368 1 248 1 315 2 107 1 
174 1 245 1 266 3 162 1 198 1 248 3 6 1 315 3 199 1 20 1 10 1 329 3 202 1 100 3 367 1 153 1 15 1 190 1 107 2 
245 1 266 2 162 1 2 1 119 1 248 2 315 2 329 2 100 2 107 1 
84 1 0 1 364 1 57 1 93 1 166 1 329 1 100 1 305 1 142 1 242 1 211 1 261 1 282 1 370 1 
84 1 181 1 0 1 364 1 57 1 93 1 166 1 329 1 100 1 305 1 141 1 142 1 242 1 211 1 261 1 
132 1 264 1 43 1 221 1 207 1 286 2 2 2 208 1 78 1 250 1 271 2 275 1 92 1 59 1 119 2 377 1 63 1 240 2 151 2 127 4 152 1 332 1 331 1 25 1 
329 1 100 1 266 1 28 1 198 1 248 1 315 1 20 1 
84 1 245 1 69 1 266 4 162 1 248 4 315 5 329 5 202 1 100 5 368 1 310 1 231 1 107 2 
329 2 100 2 266 2 28 1 330 1 198 1 248 2 315 2 
299 1 145 1 
299 1 145 1 
99 1 61 1 
99 1 61 1 
99 1 61 1 
299 1 337 1 145 1 
299 1 337 1 145 1 
299 1 226 1 145 1 
299 2 373 1 99 1 23 1 61 1 145 2 
299 1 337 1 145 1 
34 1 299 1 145 1 
34 1 299 1 145 1 
34 1 299 1 145 1 
372 1 299 2 85 2 220 3 214 2 185 1 196 1 6 1 10 2 270 2 82 2 14 1 153 2 320 1 319 2 23 1 322 1 145 2 16 1 
220 1 182 1 266 2 248 2 315 2 49 1 10 1 270 1 319 1 226 1 145 1 16 1 84 1 85 1 299 1 254 1 214 1 303 1 58 1 329 2 100 2 153 1 154 1 106 1 
149 1 309 1 338 1 
246 1 309 1 338 1 
149 2 290 1 81 1 246 1 228 1 338 3 
149 1 81 1 65 1 246 1 228 1 338 2 
149 1 81 2 246 1 228 1 338 2 
134 2 221 1 182 1 45 1 46 1 72 4 6 2 287 1 49 1 114 1 10 5 116 1 83 1 189 1 273 1 275 1 117 1 345 3 92 1 58 1 59 1 347 1 60 2 39 1 150 1 304 2 281 1 153 5 203 1 22 1 24 2 41 3 
134 6 221 3 182 4 72 7 6 5 114 2 10 9 140 1 116 3 188 1 83 2 189 2 273 1 87 1 275 3 117 1 345 9 90 5 276 5 146 1 18 1 92 3 59 3 347 1 60 6 38 1 39 1 150 3 304 6 281 2 103 1 153 9 22 6 203 2 41 8 
221 1 134 2 182 1 45 1 6 3 72 2 287 1 114 1 10 3 116 2 83 1 189 1 117 1 275 1 87 1 345 4 92 1 59 1 60 2 150 1 304 2 281 1 153 3 203 1 24 1 41 3 
221 2 134 4 182 2 45 1 6 4 72 3 287 1 114 1 10 4 116 3 83 1 189 1 117 1 275 2 87 1 345 7 146 1 92 2 59 2 60 4 38 1 150 2 304 4 281 1 103 1 153 4 203 1 24 2 41 5 
177 1 0 1 7 1 
0 1 125 1 
54 1 
0 1 242 1 
177 2 0 3 314 1 242 1 166 1 165 1 
0 1 242 1 166 1 
0 1 376 1 
131 1 26 1 262 1 275 1 274 1 92 1 91 1 346 1 4 2 118 1 120 1 63 2 240 4 127 7 271 3 102 1 332 3 
131 1 26 1 262 1 275 1 274 1 92 1 91 1 346 1 4 2 118 1 120 1 63 2 240 4 127 7 271 3 102 1 332 3 
131 1 262 1 26 1 275 1 274 1 92 1 91 1 346 1 4 2 118 1 120 1 63 2 240 4 340 1 127 7 271 3 102 1 332 3 
131 1 262 1 26 1 221 3 264 1 313 4 207 1 286 2 4 3 30 1 250 1 271 15 227 1 274 2 275 4 91 1 175 1 92 4 325 1 346 5 59 3 118 2 120 2 348 1 377 1 63 5 240 16 258 1 150 3 201 1 127 31 241 3 102 2 332 10 
131 1 285 1 26 1 262 1 110 1 264 2 207 2 286 4 4 2 250 2 271 4 275 1 274 1 92 1 346 1 118 1 120 1 377 2 63 3 240 5 258 1 127 9 102 1 332 4 
364 1 68 1 1 1 246 1 268 1 163 1 5 1 113 1 167 1 288 1 338 2 290 1 291 2 31 2 142 1 294 1 324 1 93 1 197 1 95 1 349 1 239 1 149 1 378 1 351 1 352 1 98 1 305 1 309 1 261 1 
364 1 68 1 246 1 163 1 5 1 113 1 167 1 288 2 338 2 290 1 291 3 31 3 142 1 294 1 324 1 56 1 93 1 375 1 197 1 95 1 349 1 239 1 149 1 378 1 351 1 98 1 305 1 309 1 261 1 156 1 
364 1 246 1 5 1 113 1 167 1 288 2 338 2 290 1 291 2 31 2 142 1 294 1 324 1 56 1 93 1 197 1 95 1 239 1 378 1 149 1 351 1 305 1 309 1 261 1 156 1 
0 1 89 1 68 1 364 1 324 2 375 1 57 1 93 1 197 2 111 1 349 1 113 2 12 1 378 2 291 1 21 1 31 1 305 1 142 1 242 1 180 1 243 1 261 1 
364 1 68 1 1 1 246 1 163 1 5 1 113 1 167 1 338 2 290 1 291 1 31 1 142 1 324 1 93 1 197 1 349 1 149 1 378 1 351 1 352 1 98 1 305 1 309 1 261 1 156 1 
97 1 
335 2 334 2 0 1 6 2 10 5 209 4 341 1 116 2 298 1 117 1 343 2 174 1 345 2 344 1 57 2 255 2 347 1 20 1 122 1 21 1 353 1 305 1 179 1 180 1 22 6 261 2 134 2 364 2 69 1 71 2 315 1 29 1 137 1 142 1 367 1 189 1 83 1 190 1 273 3 93 2 147 2 198 1 37 1 279 2 328 1 329 1 101 1 100 1 281 1 242 1 153 5 203 1 105 1 41 2 244 1 
161 1 69 1 315 1 29 1 10 3 209 2 341 1 367 1 190 1 273 1 298 1 174 1 344 1 198 1 20 1 122 1 279 1 329 1 100 1 153 3 22 2 105 1 
161 1 69 1 315 1 6 1 29 1 10 3 209 3 341 1 367 1 190 1 273 1 298 1 174 1 117 1 344 1 255 1 198 1 20 1 122 1 329 1 100 1 153 3 22 1 105 1 
335 1 161 1 69 1 315 1 6 1 29 1 10 3 209 3 341 1 367 1 190 1 273 1 298 1 174 1 117 1 344 1 255 1 198 1 20 1 122 1 279 1 329 1 100 1 153 3 22 2 105 1 
335 4 334 2 161 1 6 5 10 5 209 6 341 1 116 2 298 1 174 1 117 5 343 2 344 1 255 4 347 1 20 1 122 1 22 7 361 1 134 1 69 1 71 2 315 1 29 1 138 1 367 1 272 1 83 1 190 1 273 3 88 1 198 1 147 2 37 1 238 1 279 4 328 1 329 1 100 1 281 1 153 5 203 1 105 1 41 1 
334 2 335 2 6 2 10 4 209 4 341 1 116 2 298 1 174 1 343 2 117 1 344 1 345 2 255 2 347 1 20 1 122 1 22 4 134 1 69 1 71 2 315 1 29 1 367 1 83 1 190 1 273 2 198 1 147 2 37 1 279 2 328 1 329 1 100 1 101 1 281 1 153 4 203 1 105 1 41 1 
335 2 334 2 134 1 69 1 71 2 6 1 315 1 29 1 10 4 138 1 209 4 341 1 367 1 116 2 272 1 83 1 190 1 273 2 298 1 117 1 343 2 174 1 88 1 344 1 255 2 147 2 198 1 347 1 37 1 20 1 279 2 122 1 328 1 329 1 100 1 281 1 153 4 22 4 203 1 105 1 41 1 
335 2 334 2 134 1 69 1 71 2 6 1 315 1 29 1 10 4 138 1 209 4 341 1 367 1 116 2 272 1 83 1 190 1 273 2 298 1 117 1 343 2 174 1 88 1 344 1 255 2 147 2 198 1 347 1 37 1 20 1 279 2 122 1 328 1 329 1 100 1 281 1 153 4 22 4 203 1 105 1 41 1 
335 2 334 2 134 1 363 1 69 1 6 1 315 1 29 1 10 4 115 1 209 4 341 1 367 1 83 1 190 1 273 2 298 1 117 1 253 2 174 1 345 2 88 1 344 1 301 1 255 2 147 2 198 1 347 1 37 1 20 1 279 2 122 1 329 1 100 1 281 1 153 4 356 2 22 4 203 1 105 1 41 1 
334 2 335 3 134 1 69 1 71 2 6 1 315 1 29 1 10 4 138 1 209 5 341 1 367 1 116 2 272 1 83 1 190 1 273 2 298 1 117 1 343 2 174 1 88 1 344 1 255 3 147 2 347 1 198 1 37 1 20 1 122 1 279 3 328 1 329 1 100 1 281 1 153 4 203 1 22 5 105 1 41 1 361 1 
334 2 335 3 134 1 69 1 71 2 6 1 315 1 29 1 10 4 138 1 209 5 341 1 367 1 116 2 272 1 83 1 190 1 273 2 298 1 117 1 343 2 174 1 88 1 344 1 255 3 147 2 347 1 198 1 37 1 20 1 122 1 279 3 328 1 329 1 100 1 281 1 153 4 203 1 22 5 105 1 41 1 361 1 
334 2 335 2 6 1 10 4 209 4 341 1 298 1 174 1 253 2 117 1 344 1 345 2 301 1 255 2 347 1 20 1 122 1 356 2 22 4 134 1 69 1 315 1 29 1 367 1 83 1 190 1 273 2 198 1 147 2 37 1 279 2 329 1 100 1 101 1 281 1 153 4 203 1 105 1 41 1 
131 1 262 1 26 1 264 1 2 1 207 1 286 2 4 1 7 1 78 1 250 1 271 3 84 2 274 1 275 1 92 1 119 1 118 1 377 1 63 2 240 3 151 1 127 6 152 1 332 2 25 1 
264 2 221 2 313 3 207 2 286 4 2 11 8 1 78 2 30 1 250 2 271 6 227 1 84 1 275 1 92 2 237 1 346 1 59 1 36 1 119 4 200 1 64 1 63 1 217 1 377 2 240 8 151 11 150 2 127 14 241 3 332 2 25 1 312 1 
0 1 264 1 364 1 27 1 266 1 286 2 207 1 248 1 315 1 166 1 74 1 78 1 250 1 271 1 142 1 211 1 370 1 84 1 193 1 195 1 93 1 57 1 119 1 200 1 377 1 64 1 329 2 240 1 127 2 202 1 305 1 100 2 242 1 25 1 261 1 282 1 312 1 107 1 
0 2 160 2 207 3 286 6 2 7 3 2 4 1 248 1 48 2 166 2 250 3 211 2 57 1 346 4 59 2 118 1 119 7 63 4 64 1 127 20 305 2 25 3 261 3 312 1 131 1 262 1 26 1 264 3 221 2 364 3 266 1 269 2 315 1 75 1 73 1 78 3 271 10 142 2 230 1 370 2 233 2 84 2 274 1 275 3 92 3 93 3 200 1 377 3 329 3 240 10 151 7 150 2 202 1 100 3 242 2 332 8 156 1 282 2 107 1 
0 3 264 2 364 7 266 1 207 2 286 4 268 1 248 1 315 1 78 2 339 1 250 2 271 1 142 2 171 1 144 2 212 1 229 1 192 1 296 1 93 8 57 2 19 1 200 1 377 2 64 1 329 1 240 1 127 2 152 1 21 1 100 1 305 2 180 1 242 2 25 2 261 8 156 1 107 1 
264 1 221 1 245 1 266 1 162 1 2 1 207 1 286 2 248 1 315 1 249 1 78 1 250 1 271 2 275 1 92 1 59 1 119 1 63 1 377 1 329 1 240 1 151 1 150 1 127 3 100 1 332 1 25 1 312 1 
264 1 43 1 221 1 92 1 2 1 286 2 207 1 346 1 119 1 377 1 78 1 240 2 151 1 127 2 250 1 152 1 332 1 25 1 
275 1 264 1 2 1 286 2 207 1 59 1 119 1 208 1 63 1 377 1 78 1 151 1 127 2 250 1 152 1 271 2 332 1 25 1 
221 1 264 1 207 1 286 2 2 2 78 1 250 1 271 2 275 1 92 1 346 1 59 1 119 2 377 1 63 1 240 2 150 1 151 2 127 4 152 1 332 2 25 1 
264 1 43 1 221 1 92 1 2 1 286 2 207 1 346 1 19 1 119 1 377 1 78 1 240 2 151 1 127 2 250 1 332 1 25 1 
275 1 264 1 2 1 286 2 207 1 19 1 59 1 119 1 208 1 63 1 377 1 78 1 151 1 127 2 250 1 271 2 332 1 25 1 
221 1 264 1 207 1 286 2 2 2 78 1 250 1 271 2 275 1 92 1 19 1 346 1 59 1 119 2 377 1 63 1 240 2 150 1 151 2 127 4 332 2 25 1 
275 1 264 1 221 1 92 1 2 2 286 2 207 1 59 1 346 1 119 2 63 1 377 1 78 1 240 2 151 2 150 1 250 1 127 4 271 2 332 2 25 1 
0 1 264 1 364 1 286 2 207 1 48 1 166 1 78 1 250 1 271 1 142 1 211 1 370 1 84 1 93 1 57 1 200 1 377 1 64 1 329 1 240 1 127 2 305 1 100 1 242 1 25 1 261 1 282 1 
181 1 0 1 264 1 364 1 286 2 207 1 166 1 78 1 169 1 250 1 271 1 142 1 141 1 211 1 84 1 93 1 57 1 200 1 377 1 64 1 329 1 240 1 127 2 305 1 100 1 242 1 25 1 261 1 
221 1 264 1 207 1 286 2 2 2 78 1 250 1 271 2 275 1 92 1 346 1 59 1 119 2 377 1 63 1 240 2 150 1 151 2 127 4 332 2 25 1 312 1 
0 1 221 1 264 1 364 1 2 2 286 2 207 1 268 1 269 1 48 1 166 1 78 1 250 1 271 2 142 1 211 1 370 1 275 1 92 1 93 1 59 1 346 1 119 2 63 1 377 1 329 1 240 2 151 2 150 1 127 4 305 1 100 1 242 1 332 2 25 1 261 1 282 1 
264 1 221 1 245 1 266 1 162 1 207 1 286 2 2 1 248 1 315 1 136 1 78 1 250 1 271 1 275 1 92 1 59 1 346 1 119 1 377 1 329 1 240 2 150 1 151 1 127 3 100 1 332 1 25 1 312 1 
285 1 264 2 221 3 313 2 207 2 286 4 30 1 50 1 250 2 271 10 227 1 342 1 232 1 275 3 92 3 346 3 59 3 124 1 63 3 377 2 96 2 240 9 150 3 127 19 241 1 355 1 308 1 332 6 155 1 311 2 
285 1 264 3 221 3 313 2 365 1 267 1 207 3 286 6 316 1 50 1 250 3 271 12 227 2 275 2 92 3 94 1 346 2 59 2 124 1 63 2 377 3 258 2 96 4 240 14 150 3 127 26 241 2 354 1 355 1 308 2 204 1 332 4 155 2 311 1 
131 1 262 1 26 1 285 1 264 3 221 4 313 4 267 1 365 1 207 3 286 6 4 1 316 1 30 1 50 1 250 3 271 21 227 3 232 1 274 1 275 5 92 5 94 1 346 4 59 4 118 1 124 1 63 4 377 3 258 1 96 4 240 20 150 4 127 41 241 3 354 1 130 1 355 1 308 2 204 1 332 8 155 1 311 1 
131 1 262 1 26 1 285 1 264 4 221 4 313 4 267 1 365 1 207 4 286 8 4 1 316 1 30 1 50 1 250 4 271 18 227 3 232 1 274 1 275 4 92 5 94 1 346 3 59 3 118 1 124 1 63 4 377 4 258 2 96 4 240 20 150 4 127 38 241 3 354 1 130 1 355 1 308 2 204 1 332 7 155 1 311 1 
131 1 262 1 26 1 285 1 264 2 221 7 313 4 267 1 365 1 207 2 286 4 4 1 316 1 30 2 50 1 250 2 271 25 227 2 274 1 275 8 92 8 94 1 346 7 59 7 118 1 36 2 124 1 63 7 377 2 258 1 96 4 240 27 150 7 127 52 241 4 354 1 355 1 308 1 204 1 332 14 155 1 311 1 
372 1 85 1 299 1 270 1 214 1 185 1 319 1 23 1 53 1 145 1 
154 1 226 1 
206 1 85 1 299 1 270 1 214 1 319 1 357 1 145 1 148 1 
372 1 299 1 85 1 220 2 214 1 185 1 196 1 6 1 10 1 270 1 82 1 14 1 153 1 319 1 23 1 322 1 145 1 16 1 
372 1 299 1 85 1 220 2 214 1 185 1 196 1 6 1 10 1 270 1 82 1 14 1 153 1 319 1 23 1 322 1 145 1 16 1 
372 1 299 1 85 1 220 2 214 1 185 1 196 1 6 1 10 1 270 1 82 1 14 1 153 1 319 1 23 1 322 1 145 1 16 1 
139 1 373 1 337 1 
139 1 373 1 337 1 
362 1 34 1 
362 1 34 1 373 1 
254 1 106 1 
220 1 182 1 266 2 248 2 72 1 315 2 49 1 10 1 270 1 82 1 319 1 143 1 226 1 145 1 84 1 85 1 299 1 254 1 214 1 196 1 303 1 58 1 329 2 100 2 153 1 154 1 106 1 
139 1 337 1 
362 1 34 1 373 1 
0 1 264 1 364 2 286 2 207 1 315 2 289 1 78 1 339 1 292 1 250 1 271 1 142 1 171 1 144 2 93 2 200 1 377 1 64 1 329 2 350 1 240 1 127 2 305 1 100 2 242 1 40 1 25 1 261 2 67 1 312 1 
364 2 265 1 246 1 93 2 268 1 5 1 62 1 113 1 167 1 338 2 149 1 290 1 98 1 305 1 142 1 309 1 261 2 156 1 252 1 
364 1 246 1 93 1 5 1 113 1 167 1 338 2 149 1 290 1 98 1 305 1 142 1 309 1 358 1 261 1 156 1 252 1 
0 1 89 1 364 1 57 1 93 1 62 1 113 1 21 1 305 1 187 1 142 1 242 1 180 1 261 1 
364 1 265 1 246 1 93 1 5 1 62 1 113 1 167 1 338 2 149 1 290 1 98 1 305 1 142 1 309 1 261 1 156 1 252 1 
176 1 
117 1 134 1 184 1 256 1 6 1 41 1 7 1 
134 1 71 1 6 2 10 1 116 1 83 1 273 1 343 1 117 1 345 1 347 1 328 1 281 1 153 1 203 1 22 1 41 1 
0 10 160 2 47 2 6 8 166 3 165 1 9 2 10 5 116 6 117 2 345 12 57 1 59 2 256 1 347 4 60 6 125 3 257 1 177 2 353 1 305 3 306 2 304 6 66 1 22 5 261 3 221 2 134 8 364 3 184 1 70 2 268 1 135 1 224 2 79 1 142 4 33 2 189 2 83 4 190 2 273 3 323 1 86 2 194 2 275 2 92 2 93 3 376 2 150 2 281 4 242 3 153 5 203 4 41 9 
134 5 221 2 313 1 365 1 267 1 47 2 6 5 224 1 316 1 10 1 116 3 189 1 321 1 227 1 83 2 273 1 297 1 275 2 117 2 345 6 92 2 94 1 59 2 347 2 60 5 150 2 353 1 304 5 241 1 354 1 281 2 153 1 22 1 203 2 41 8 
131 1 134 2 245 1 266 1 248 1 47 2 315 1 224 1 366 1 10 1 293 1 317 1 272 1 83 1 191 1 274 1 275 1 92 2 198 1 118 1 347 1 329 1 100 1 281 1 153 1 330 1 203 1 41 2 
117 1 134 1 184 1 256 1 347 1 6 1 281 1 203 1 83 1 41 1 
275 2 221 2 134 5 345 10 160 1 92 2 59 2 47 2 60 5 6 5 224 1 150 2 304 5 116 5 41 5 
10 1 117 1 153 1 22 1 6 1 273 1 
0 1 134 2 364 4 135 2 137 1 10 3 79 1 142 1 32 1 83 2 189 2 273 2 87 1 93 4 57 2 347 1 21 1 305 1 353 2 281 2 242 1 153 3 180 1 203 2 22 4 261 4 41 2 244 1 157 1 
0 1 264 1 364 1 245 2 266 2 183 1 207 1 286 2 248 2 315 2 48 1 166 1 78 1 250 1 271 1 293 1 142 1 211 1 370 1 84 1 93 1 57 1 64 1 377 1 329 3 127 1 100 3 305 1 242 1 25 1 261 1 282 1 
117 2 345 4 134 2 4 1 347 1 60 2 6 4 304 2 353 1 281 1 116 2 203 1 83 1 189 1 41 1 
85 1 270 1 374 1 
85 1 270 1 374 1 
85 1 270 1 254 1 185 1 260 1 
85 1 270 1 374 1 
85 1 35 1 270 1 
85 1 35 1 270 1 
85 1 35 1 270 1 
85 1 270 1 
299 1 145 1 
131 1 26 1 262 1 275 1 274 1 264 2 92 1 286 4 207 2 4 1 346 1 118 1 63 2 377 2 240 4 258 1 127 8 250 2 271 4 332 3 
131 1 26 1 262 1 274 1 275 1 92 1 4 1 118 1 7 1 63 2 240 3 127 6 271 3 332 2 
275 1 264 1 221 1 92 1 286 2 207 1 59 1 346 1 63 1 377 1 240 2 150 1 250 1 127 4 271 2 332 2 380 1 
275 1 221 1 313 2 92 1 59 1 346 1 63 1 240 3 30 1 150 1 127 7 271 4 241 1 332 2 227 1 
131 1 262 1 26 1 221 2 264 2 313 2 286 4 207 2 4 1 30 1 250 2 271 12 274 2 275 3 215 1 92 3 346 4 59 2 118 2 36 1 217 1 63 5 377 2 240 11 258 2 150 2 127 23 241 2 332 9 
127 1 271 1 313 1 
240 1 127 1 241 1 
275 1 264 1 221 1 160 1 92 1 207 1 286 2 346 1 59 1 377 1 63 2 240 3 150 1 250 1 127 6 271 3 332 3 380 1 
285 1 264 1 221 2 313 1 365 1 267 1 207 1 286 2 316 1 250 1 271 6 227 1 275 2 92 2 94 1 346 1 59 2 377 1 63 1 240 6 150 2 127 12 241 1 354 1 332 2 
131 1 275 1 274 1 92 1 346 1 118 1 63 1 240 3 127 6 271 3 332 2 
262 1 26 1 274 1 264 1 215 1 286 2 207 1 346 1 118 1 63 1 377 1 240 1 258 1 127 3 250 1 271 2 332 2 
131 1 285 1 274 2 275 2 264 1 92 2 207 1 286 2 346 2 118 2 377 1 63 3 240 5 250 1 127 10 271 5 332 5 191 1 
285 1 264 1 221 1 92 1 286 2 207 1 346 1 377 1 240 2 250 1 127 2 332 1 
285 1 275 1 264 1 221 1 92 1 286 2 207 1 59 1 346 1 63 1 377 1 240 2 150 1 250 1 127 4 271 2 332 2 
285 1 274 1 264 3 215 1 286 6 207 3 346 1 118 1 377 3 63 1 258 1 240 1 127 3 250 3 271 2 332 2 232 1 
131 2 262 1 26 1 285 1 264 5 221 3 313 4 207 5 286 10 4 1 30 1 250 5 271 18 227 1 232 1 274 3 275 5 215 1 325 1 175 1 92 5 346 5 59 3 118 3 348 1 377 5 63 7 258 2 240 16 150 3 127 34 241 3 332 12 380 1 
131 1 285 1 26 1 262 1 264 1 313 1 365 1 207 1 286 2 4 1 250 1 271 4 227 1 275 1 274 1 92 1 118 1 377 1 63 2 240 4 127 8 241 1 332 2 
131 1 262 1 26 1 285 1 264 2 221 1 313 2 365 1 207 2 286 4 4 1 30 1 250 2 271 5 227 1 275 1 274 1 92 2 346 1 118 1 63 2 377 2 240 6 150 1 127 11 241 1 332 3 380 1 
131 1 262 1 26 1 285 1 264 3 221 2 313 1 365 1 267 1 207 3 286 6 4 1 316 1 250 3 271 10 227 1 274 1 275 3 92 3 94 1 346 1 59 2 118 1 377 3 63 3 240 9 258 1 150 2 127 19 241 1 354 1 332 4 380 1 
131 1 262 1 26 1 285 1 264 3 221 2 313 1 365 1 267 1 207 3 286 6 4 1 316 1 250 3 271 7 227 1 274 1 275 2 92 3 94 1 346 2 59 1 118 1 377 3 63 3 258 1 240 10 150 2 127 17 241 1 354 1 332 5 380 1 
131 1 285 1 26 1 262 1 264 1 313 1 365 1 207 1 286 2 4 1 250 1 271 4 227 1 275 1 274 1 92 1 118 1 377 1 63 2 240 4 127 8 241 1 332 2 
285 1 264 1 221 2 313 1 365 1 267 1 207 1 286 2 316 1 250 1 271 6 227 1 275 2 92 2 94 1 346 1 59 2 377 1 63 1 240 6 150 2 127 12 241 1 354 1 332 2 
131 1 262 1 26 1 285 1 264 4 221 2 313 1 365 1 267 1 207 4 286 8 4 1 316 1 250 4 271 8 227 1 274 1 275 2 92 3 94 1 346 2 59 1 118 1 377 4 63 3 240 10 258 2 150 2 127 18 241 1 354 1 332 5 380 1 
285 1 264 4 221 3 313 1 365 1 267 1 207 4 286 8 316 1 250 4 271 7 227 1 232 1 275 2 92 3 94 1 346 3 59 2 377 4 63 3 240 9 258 2 150 3 127 16 241 1 354 1 332 6 
131 1 26 1 262 2 275 1 274 3 92 1 346 3 118 3 63 3 240 3 127 7 271 4 332 6 
131 1 262 1 26 1 285 1 264 4 221 2 313 1 365 1 267 1 207 4 286 8 4 1 316 1 250 4 271 8 227 1 232 1 274 1 275 2 92 3 94 1 346 1 59 1 118 1 377 4 63 3 240 10 258 2 150 2 127 18 241 1 354 1 332 4 
329 1 84 1 100 1 69 1 368 1 315 1 205 1 
329 1 84 1 100 1 69 1 368 1 326 1 219 1 336 1 315 1 205 1 359 1 381 1 
0 1 21 1 364 1 305 1 142 1 242 1 180 1 93 1 57 1 261 1 7 1 
84 1 0 1 364 1 266 1 57 1 93 1 248 1 315 1 166 1 329 2 100 2 305 1 142 1 242 1 211 1 261 1 370 1 107 1 
84 1 0 3 364 1 266 2 93 1 198 1 248 1 135 1 315 2 166 2 20 1 376 1 9 1 329 2 100 2 305 1 367 1 142 1 242 2 211 1 261 1 370 1 107 1 
181 1 0 3 364 2 266 2 135 1 248 1 315 2 166 2 9 1 210 1 142 1 367 1 211 1 84 1 93 2 198 1 20 1 376 1 329 2 305 1 100 2 242 2 261 2 107 1 
0 4 364 3 135 1 6 1 166 1 9 1 11 1 10 2 210 1 142 1 251 1 190 1 117 1 93 3 57 1 125 1 376 1 177 1 305 1 153 2 242 1 22 1 261 3 
117 1 0 4 364 3 70 1 57 1 93 3 135 1 6 1 166 1 376 1 9 1 125 1 10 2 177 1 210 1 305 1 142 1 242 1 153 2 22 1 190 1 261 3 
364 1 305 1 142 1 93 1 261 1 212 1 
0 3 364 6 57 2 93 7 268 1 247 1 165 1 166 1 339 1 305 2 142 3 242 2 218 1 144 1 212 1 229 1 261 7 156 1 192 1 296 1 172 1 
0 1 207 2 286 4 2 1 4 1 248 1 48 1 166 1 250 2 211 1 119 1 118 1 63 2 127 6 305 1 25 2 261 1 312 1 131 1 26 1 262 1 264 2 364 1 266 1 268 1 269 1 315 1 78 2 271 3 142 1 370 1 233 1 84 2 274 1 275 1 92 1 93 1 377 2 329 2 240 3 151 1 100 2 242 1 40 1 332 2 282 1 107 1 
0 2 134 1 364 1 184 1 70 1 6 1 72 1 10 3 79 1 83 2 33 1 190 1 273 1 117 1 86 1 194 1 93 1 57 1 256 1 347 2 125 1 177 1 281 2 153 3 203 2 22 2 41 1 261 1 
177 1 0 2 364 2 305 1 142 2 242 1 93 2 268 1 66 1 166 1 165 1 261 2 212 1 
0 1 44 1 364 4 57 1 93 4 268 1 21 1 210 1 305 1 142 1 180 1 242 1 261 4 
0 1 364 2 93 2 247 1 135 1 75 1 166 1 13 1 305 1 142 2 242 1 261 2 295 1 172 1 
364 1 305 1 142 1 246 1 93 1 57 1 309 1 5 1 261 1 338 1 
0 1 339 1 364 2 305 1 142 1 242 1 93 2 268 1 261 2 156 1 67 1 
0 3 44 1 364 4 57 1 93 5 268 1 135 1 339 1 21 1 305 2 142 2 180 1 242 2 261 5 229 1 192 1 
0 3 44 1 364 4 57 1 93 5 268 1 135 1 339 1 21 1 305 2 129 1 142 2 180 1 242 2 261 5 229 1 
84 1 0 1 181 1 364 1 266 1 57 1 93 1 248 1 315 1 166 1 329 2 100 2 305 1 142 1 242 1 211 1 261 1 107 1 
0 1 364 1 93 1 247 1 135 1 165 1 166 1 305 1 142 2 242 1 218 1 261 1 172 1 
371 1 315 1 76 1 186 1 289 1 329 1 350 1 292 1 100 1 
52 1 76 1 283 1 
84 1 371 1 263 1 76 1 186 1 
84 1 371 2 117 1 174 1 263 2 236 1 198 1 6 1 72 1 76 1 20 1 186 2 10 2 367 1 153 2 52 1 15 1 190 1 283 1 
294 1 95 1 239 1 7 1 
291 1 31 1 68 1 294 1 95 1 349 1 239 1 
378 1 291 1 197 1 
42 1 68 1 95 1 349 1 327 1 239 1 168 1 291 3 352 1 31 3 294 1 17 2 
291 2 31 2 68 1 294 1 225 1 95 1 349 1 239 1 288 1 
149 1 291 1 31 1 68 1 352 1 294 1 307 1 309 1 277 1 349 1 338 1 
291 1 31 1 68 1 352 1 294 1 95 1 349 1 
291 1 31 1 68 1 352 1 95 2 349 1 239 1 
291 2 31 2 68 2 352 1 294 1 104 1 95 1 164 1 349 2 280 1 
109 1 291 3 178 1 31 3 68 1 352 1 222 1 294 2 307 1 95 1 349 1 239 1 288 2 
68 1 235 1 246 1 95 1 349 1 239 1 338 2 288 1 290 1 149 1 291 2 352 1 31 2 294 1 309 1 
109 1 291 4 31 4 68 2 352 1 294 2 307 1 225 1 259 1 95 1 349 2 239 1 288 2 
291 1 31 1 68 1 352 1 294 1 95 1 349 1 239 1 
42 1 109 1 68 1 95 2 349 1 239 2 288 2 168 1 291 4 31 4 307 1 294 3 17 1 360 1 
159 1 133 1 68 1 95 1 349 1 239 1 288 1 291 2 352 1 31 2 294 1 170 1 
42 1 68 1 95 1 349 1 239 1 168 2 291 3 80 1 352 1 31 3 294 1 17 2 
126 1 55 1 234 2 294 2 
333 1 291 1 31 1 68 1 352 1 349 1 
291 2 31 2 68 1 352 1 222 1 294 1 95 1 349 1 239 1 288 1 
158 1 
291 1 31 1 68 1 352 1 294 1 95 1 349 1 239 1 
291 3 31 3 68 1 352 1 222 1 294 1 95 1 349 1 239 1 17 1 288 1 
109 1 294 1 307 1 360 1 
294 1 95 1 

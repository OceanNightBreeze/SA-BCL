#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence; | CONSTANT | 850 | 2 -> 3
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7071 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 1 3 1 272 1 176 2 341 1 294 1 133 4 87 1 278 2 301 9 14 1 15 7 144 1 348 1 372 2 375 1 264 1 73 3 74 1 171 9 221 5 328 1 173 1 124 1 
26 1 3 1 272 1 176 2 341 1 294 1 133 4 87 1 278 2 301 9 14 1 15 7 144 1 348 1 372 2 375 1 264 1 73 3 74 1 171 9 221 5 328 1 173 1 124 1 
103 1 26 2 228 1 3 1 272 1 176 2 341 1 294 1 133 4 135 1 297 1 87 1 278 2 301 9 15 6 256 1 144 1 348 1 119 1 372 2 375 2 264 2 74 1 73 3 171 9 221 5 328 2 124 1 
103 1 26 2 228 1 3 1 272 1 176 2 341 1 294 1 133 4 135 1 297 1 87 1 278 2 301 9 15 6 256 1 144 1 348 1 119 1 372 2 375 2 264 2 74 1 73 3 171 9 221 5 328 2 124 1 
103 1 26 2 228 1 3 1 272 1 176 2 341 1 294 1 133 5 135 1 297 1 87 1 278 2 301 10 15 7 256 1 144 1 348 1 119 1 372 2 375 2 264 2 74 1 73 4 171 10 221 6 328 2 124 1 
103 1 26 2 228 1 3 1 272 1 176 1 341 1 294 1 133 3 135 1 297 1 87 1 278 2 301 7 15 4 256 1 144 1 348 1 119 1 372 2 375 2 264 2 74 1 73 2 171 7 221 4 328 2 
278 1 26 1 301 4 15 3 3 1 272 1 176 2 372 1 341 1 294 1 133 2 375 1 73 1 74 1 171 4 221 3 328 1 124 1 
278 1 301 2 26 1 228 1 3 1 272 1 107 1 372 1 241 1 377 1 264 1 74 1 135 1 221 1 171 2 328 1 
278 2 301 3 15 1 3 1 272 1 348 1 372 2 133 1 264 1 74 1 73 1 171 3 221 2 
200 1 172 1 137 1 
200 1 247 2 186 1 
23 1 89 2 182 2 44 2 141 1 356 2 364 2 374 2 
23 1 203 1 27 1 155 1 336 2 130 1 340 1 108 1 83 1 109 1 207 1 182 3 161 1 33 1 343 1 363 2 214 1 364 2 60 1 61 1 163 1 89 3 255 1 141 1 235 1 91 2 258 2 169 1 373 1 42 1 374 2 193 2 44 2 309 1 355 1 21 1 356 2 
23 1 166 1 226 1 252 1 89 1 182 1 44 1 356 1 364 1 374 1 
313 1 290 1 200 1 89 1 205 1 250 1 170 1 252 1 44 1 182 1 222 1 137 1 36 1 378 1 
313 2 290 1 200 1 89 1 205 1 170 1 374 1 252 1 44 1 182 1 222 1 137 1 356 1 364 1 378 2 
289 1 313 1 293 1 306 1 378 1 
313 2 293 1 200 1 147 1 114 1 137 1 306 1 378 2 
313 1 306 1 378 1 
313 1 23 1 166 1 226 1 89 1 374 1 94 1 293 1 252 1 44 1 182 1 356 1 364 1 378 1 
200 1 
313 2 293 1 200 1 248 1 114 1 137 1 306 1 378 2 
313 5 53 1 200 1 24 1 64 1 140 2 306 2 5 1 293 2 31 2 47 2 345 1 114 1 137 1 11 1 188 1 254 1 378 5 189 1 
89 2 54 1 27 1 235 1 335 1 336 1 130 1 258 1 373 1 108 1 374 1 193 1 207 1 44 1 182 2 161 1 220 1 214 1 364 1 61 1 
141 1 172 1 
89 2 141 2 374 1 44 2 182 2 284 1 356 1 364 1 276 1 
122 1 54 1 160 1 
357 1 89 1 141 1 27 1 235 1 336 1 258 1 130 1 373 1 193 1 108 1 207 1 182 1 161 1 214 1 61 1 
89 3 182 3 44 3 141 1 220 1 356 1 364 3 374 3 
166 1 252 1 89 1 182 1 44 1 364 1 374 1 
252 1 89 1 182 1 44 1 284 1 356 1 364 1 374 1 276 1 
313 1 23 1 290 1 203 1 27 1 335 1 155 1 336 1 130 1 340 1 205 1 108 1 109 1 207 1 252 1 182 4 161 1 343 1 363 1 214 1 364 3 60 1 61 1 89 4 141 1 235 1 91 2 304 1 258 1 169 1 373 1 42 1 170 1 374 3 193 1 43 1 44 3 284 1 220 1 355 1 21 1 222 1 356 2 378 1 
89 2 182 2 44 2 141 1 367 1 220 1 250 1 364 1 374 1 
313 1 290 1 200 1 89 3 335 1 28 1 304 1 205 1 170 1 374 3 252 1 44 3 182 3 284 1 220 2 222 1 356 1 364 3 378 1 
89 2 54 1 182 2 44 2 284 1 220 1 160 1 356 1 364 2 374 2 
89 1 141 1 235 1 27 1 336 1 258 1 130 1 373 1 193 1 108 1 207 1 182 1 161 1 214 1 61 1 
89 1 141 1 27 1 336 1 258 1 130 1 373 1 193 1 108 1 207 1 71 1 182 1 161 1 45 1 61 1 
291 1 54 2 203 1 160 2 249 1 340 1 58 1 83 2 109 1 251 1 320 1 343 2 363 4 213 1 60 1 302 1 217 1 91 2 169 1 42 1 122 2 51 1 287 1 244 1 
252 1 89 1 182 1 44 1 285 1 222 1 364 1 374 1 
358 1 89 5 367 1 141 1 335 1 250 1 374 4 44 5 182 5 284 1 49 1 220 2 356 1 364 4 
166 1 252 1 89 2 182 2 44 2 285 1 364 2 374 2 
342 1 139 1 
342 1 139 1 
209 1 368 1 
209 1 368 1 
209 1 368 1 
63 1 342 1 139 1 
342 1 204 1 139 1 
209 1 342 2 314 1 368 1 305 1 139 2 
63 1 342 1 139 1 
63 1 342 1 139 1 
342 1 257 1 139 1 
342 1 257 1 139 1 
342 1 257 1 139 1 
313 2 329 1 347 1 200 1 279 1 314 1 167 2 40 2 68 2 339 1 371 3 319 1 326 1 342 2 136 2 296 2 151 1 139 2 378 2 
313 1 268 1 199 1 269 1 204 1 182 2 342 1 136 1 296 1 298 1 364 2 139 1 89 2 279 1 141 1 303 1 167 1 68 1 371 1 323 1 374 2 44 2 282 1 378 1 
26 1 375 1 328 1 
26 1 377 1 328 1 
295 1 116 1 375 2 26 3 377 1 197 1 
116 1 375 1 26 2 377 1 197 1 145 1 
116 1 375 1 26 2 377 1 197 2 
313 5 199 1 24 1 200 2 53 3 104 1 105 1 247 3 230 2 249 1 58 1 31 1 293 4 110 1 183 1 113 2 186 1 114 1 11 2 137 1 115 2 140 1 261 1 323 1 306 1 93 1 282 1 47 1 50 1 51 1 287 1 378 5 
289 5 313 9 200 5 24 1 53 8 104 3 105 1 246 1 247 9 230 6 249 3 58 3 293 7 31 2 181 1 9 5 186 3 114 1 11 6 137 1 189 1 115 6 140 2 142 1 370 1 323 4 306 6 93 2 324 1 240 1 47 2 50 2 51 3 287 3 378 9 
313 3 200 3 53 3 104 1 247 4 230 2 249 1 58 1 293 2 31 1 110 1 183 1 113 1 186 2 137 1 11 2 189 1 115 2 140 1 323 1 93 1 47 1 50 1 51 1 287 1 378 3 
313 4 200 4 53 5 104 2 247 7 230 4 249 2 58 2 31 1 293 3 181 1 110 1 183 1 113 2 186 3 137 1 11 4 189 1 115 4 140 1 142 1 370 1 323 2 93 1 47 1 50 1 51 2 287 2 378 4 
227 1 27 1 172 1 
365 1 27 1 
231 1 
27 1 130 1 
227 2 27 3 84 1 130 1 118 1 108 1 
27 1 130 1 108 1 
27 1 206 1 
291 2 128 1 333 2 216 1 157 1 159 1 249 1 83 4 251 3 208 1 98 1 343 3 51 1 363 7 232 1 274 1 52 1 
291 2 128 1 333 2 216 1 157 1 159 1 249 1 83 4 251 3 208 1 98 1 343 3 51 1 363 7 232 1 274 1 52 1 
291 2 128 1 333 2 216 1 157 1 238 1 159 1 249 1 83 4 251 3 208 1 98 1 343 3 51 1 363 7 232 1 274 1 52 1 
291 5 127 1 128 1 104 3 333 3 157 2 159 1 249 4 340 1 58 3 109 1 83 16 208 2 251 10 343 15 363 31 232 2 274 2 346 1 216 1 90 1 91 2 349 1 169 1 42 1 120 3 218 4 98 1 376 1 354 1 51 4 287 3 311 1 52 5 
291 3 128 1 333 2 175 1 157 1 159 1 249 1 340 2 109 2 83 5 208 1 251 4 343 4 363 9 274 1 232 1 216 1 91 4 169 2 42 2 354 1 51 1 52 1 379 1 
125 1 26 2 336 1 3 1 272 1 129 1 207 1 295 1 59 1 210 1 321 1 88 1 61 1 164 1 62 1 234 1 278 1 301 2 15 1 258 1 372 1 193 1 121 1 375 1 264 1 377 1 74 1 221 1 171 2 328 1 
106 1 26 2 336 1 3 1 272 1 207 1 295 1 59 1 210 1 321 1 88 1 61 1 164 1 62 1 234 1 278 1 301 3 15 2 258 1 372 1 193 1 121 1 375 1 96 1 264 1 377 1 221 1 171 3 328 1 22 1 
106 1 26 2 336 1 3 1 272 1 207 1 295 1 59 1 210 1 88 1 61 1 164 1 234 1 301 2 15 2 258 1 193 1 121 1 96 1 375 1 264 1 377 1 221 1 171 2 328 1 
234 2 278 1 301 1 27 1 336 1 130 1 258 1 372 1 373 1 193 1 194 1 207 1 46 1 264 2 86 1 171 1 198 1 22 1 88 2 61 1 77 1 225 1 164 2 
125 1 106 1 26 2 336 1 207 1 295 1 59 1 210 1 321 1 88 1 61 1 164 1 62 1 234 1 278 1 301 1 258 1 372 1 193 1 121 1 375 1 264 1 377 1 74 1 171 1 328 1 
37 1 
290 1 200 1 53 1 245 1 55 1 337 1 205 1 250 1 252 1 212 3 10 1 114 2 12 5 11 1 215 1 66 2 350 3 170 1 306 5 352 1 222 1 313 4 24 1 78 1 79 3 360 2 317 2 30 1 31 1 132 1 182 1 186 2 36 1 137 1 89 1 140 1 242 2 44 1 99 1 47 1 149 1 378 4 
313 4 290 1 200 1 53 1 24 1 78 1 79 3 245 1 55 1 337 1 360 2 317 2 205 1 250 1 31 1 30 1 132 1 252 1 182 1 212 3 10 1 114 2 186 2 137 1 11 1 36 1 12 5 215 1 89 1 140 1 66 2 350 3 170 1 306 5 242 2 44 1 47 1 352 1 99 1 149 1 222 1 378 4 
290 1 53 1 200 1 292 1 55 1 247 2 205 1 250 1 252 1 212 2 114 2 12 4 11 1 215 1 66 2 350 2 170 1 306 4 352 1 265 2 222 1 267 1 313 4 24 1 79 2 360 2 273 2 31 1 30 1 132 1 182 1 36 1 137 1 89 1 140 1 44 1 47 1 99 1 378 4 
0 1 290 1 200 2 53 2 292 1 336 2 55 1 247 2 205 1 250 1 207 1 252 1 8 1 212 2 114 3 11 2 12 4 61 1 215 1 66 2 258 2 350 2 170 1 306 6 352 1 222 1 77 1 313 5 24 1 78 1 79 2 27 1 360 2 130 1 317 2 31 1 30 1 132 1 182 1 362 1 186 2 137 1 36 1 89 1 140 1 373 2 193 2 242 2 44 1 327 1 47 1 99 1 50 1 198 1 378 5 
313 3 215 1 290 1 89 1 55 1 248 1 350 1 205 1 250 1 170 1 306 2 30 1 252 1 44 1 182 1 99 1 352 1 114 1 222 1 12 2 36 1 378 3 
313 3 215 1 290 1 200 1 89 1 55 1 248 1 205 1 250 1 170 1 306 1 30 1 252 1 44 1 182 1 99 1 352 1 212 1 114 1 222 1 137 1 12 3 36 1 378 3 
313 3 290 1 200 1 79 1 55 1 248 1 205 1 250 1 30 1 252 1 182 1 212 1 114 1 36 1 12 3 137 1 215 1 89 1 350 1 170 1 306 2 44 1 352 1 99 1 222 1 378 3 
290 1 200 5 53 1 245 1 55 1 337 1 248 1 205 1 250 1 252 1 212 4 10 1 114 3 12 6 11 1 215 1 66 2 67 1 350 4 170 1 306 7 352 1 222 1 313 5 24 1 78 1 79 4 360 2 317 2 30 1 31 1 132 1 182 1 186 2 36 1 137 5 89 1 140 1 242 2 44 1 99 1 47 1 149 1 378 5 
290 1 53 1 200 2 292 1 55 1 247 2 205 1 250 1 252 1 212 2 114 2 12 4 11 1 215 1 66 2 350 2 170 1 306 4 352 1 222 1 313 4 24 1 78 1 79 2 360 2 317 2 31 1 30 1 132 1 182 1 186 2 36 1 137 1 89 1 140 1 242 2 44 1 47 1 99 1 378 4 
313 4 290 1 200 1 53 1 24 1 78 1 79 2 245 1 55 1 360 2 317 2 205 1 250 1 30 1 31 1 132 1 252 1 182 1 212 2 10 1 114 2 186 2 137 1 11 1 36 1 12 4 215 1 89 1 140 1 66 2 350 2 170 1 306 4 242 2 44 1 352 1 99 1 47 1 149 1 222 1 378 4 
313 4 290 1 200 1 53 1 24 1 78 1 79 2 245 1 55 1 360 2 317 2 205 1 250 1 30 1 31 1 132 1 252 1 182 1 212 2 10 1 114 2 186 2 137 1 11 1 36 1 12 4 215 1 89 1 140 1 66 2 350 2 170 1 306 4 242 2 44 1 352 1 99 1 47 1 149 1 222 1 378 4 
313 4 290 1 200 1 53 1 24 1 79 2 245 1 55 1 247 2 360 2 205 1 250 1 273 2 30 1 31 1 132 1 252 1 182 1 212 2 114 2 137 1 11 1 36 1 12 4 215 1 89 1 140 1 66 2 350 2 92 1 170 1 306 4 262 1 44 1 352 1 99 1 47 1 265 2 222 1 267 1 378 4 
291 2 54 1 128 1 333 1 203 1 157 1 160 1 159 1 340 1 249 1 109 1 83 3 251 2 320 1 343 3 363 6 232 1 60 1 216 1 141 2 91 2 169 1 42 1 122 1 51 1 172 1 
291 1 54 11 104 2 203 2 160 4 340 2 249 2 58 2 109 2 83 8 251 2 343 6 35 1 363 14 60 1 346 1 255 1 65 1 366 1 141 1 91 4 169 2 69 1 42 2 120 3 122 11 218 3 219 1 51 1 21 1 287 1 311 1 52 1 
357 1 27 1 203 1 336 1 335 1 82 1 130 1 160 1 340 1 108 1 207 1 109 1 83 1 182 2 161 1 111 1 343 1 363 2 214 1 364 1 61 1 60 1 89 2 255 1 141 1 235 1 91 2 258 1 373 1 169 1 42 1 193 1 374 1 44 1 219 1 220 1 19 1 21 1 
291 4 54 7 104 2 106 1 333 1 203 3 336 3 335 1 157 1 158 2 159 1 160 7 340 3 249 3 108 2 58 2 109 3 207 2 251 8 161 2 343 10 112 1 214 2 60 3 61 2 255 1 216 1 117 1 258 3 169 3 122 7 219 1 220 1 355 2 21 1 128 1 27 2 81 2 130 2 83 10 182 3 363 20 232 1 364 1 233 2 89 3 141 2 235 2 236 1 91 6 191 2 373 1 42 3 193 3 374 1 44 1 51 3 287 2 52 4 
174 1 106 1 334 1 27 3 203 2 2 1 336 7 129 1 130 2 340 2 180 1 57 1 207 2 109 2 83 1 134 1 182 1 320 1 343 1 363 2 162 1 364 1 61 2 60 2 163 2 89 1 255 1 91 4 258 8 373 2 169 2 42 2 374 1 193 8 44 1 220 1 21 1 198 1 77 1 
291 1 54 1 104 1 203 1 359 1 160 1 340 1 249 1 58 1 109 1 83 1 251 1 182 1 343 2 363 3 364 1 60 1 89 1 91 2 169 1 42 1 374 1 122 1 44 1 284 1 219 1 51 1 287 1 356 1 
54 1 302 1 203 1 91 2 160 1 169 1 340 1 249 1 42 1 58 1 109 1 83 2 251 1 122 1 320 1 363 2 52 1 60 1 
291 1 54 1 203 1 91 2 160 1 169 1 340 1 42 1 109 1 251 1 122 1 320 1 343 2 51 1 363 2 244 1 287 1 60 1 
291 1 104 1 54 2 203 1 160 2 249 1 340 1 58 1 83 2 109 1 251 2 320 1 343 2 363 4 60 1 91 2 169 1 42 1 122 2 51 1 287 1 52 1 
174 1 54 1 302 1 203 1 91 2 160 1 169 1 340 1 249 1 42 1 58 1 109 1 83 2 251 1 122 1 363 2 52 1 60 1 
174 1 291 1 54 1 203 1 91 2 160 1 169 1 340 1 42 1 109 1 251 1 122 1 343 2 51 1 363 2 244 1 287 1 60 1 
174 1 291 1 104 1 54 2 203 1 160 2 249 1 340 1 58 1 83 2 109 1 251 2 343 2 363 4 60 1 91 2 169 1 42 1 122 2 51 1 287 1 52 1 
291 1 104 1 54 2 203 1 160 2 249 1 340 1 58 1 83 2 109 1 251 2 343 2 363 4 60 1 91 2 169 1 42 1 122 2 51 1 287 1 52 1 
27 1 203 1 336 1 130 1 340 1 108 1 83 1 207 1 109 1 182 1 161 1 343 1 363 2 214 1 61 1 60 1 89 1 255 1 141 1 235 1 91 2 258 1 373 1 169 1 42 1 193 1 355 1 21 1 
330 1 27 1 203 1 336 1 130 1 340 1 108 1 83 1 207 1 109 1 182 1 161 1 343 1 363 2 61 1 60 1 89 1 255 1 141 1 91 2 258 1 373 1 169 1 42 1 193 1 71 1 45 1 21 1 
291 1 104 1 54 2 203 1 160 2 249 1 340 1 58 1 83 2 109 1 251 2 343 2 363 4 60 1 91 2 169 1 42 1 122 2 219 1 51 1 287 1 52 1 
291 1 54 2 104 1 27 1 203 1 336 1 129 1 130 1 160 2 249 1 340 1 108 1 58 1 83 2 207 1 109 1 251 2 182 1 161 1 343 2 363 4 214 1 61 1 60 1 233 1 89 1 235 1 91 2 258 1 169 1 42 1 193 1 122 2 51 1 355 1 287 1 52 1 
104 1 54 1 203 1 160 1 340 1 249 1 58 1 109 1 83 2 251 1 182 1 343 1 363 3 364 1 13 1 60 1 89 1 91 2 169 1 42 1 374 1 122 1 44 1 284 1 219 1 51 1 287 1 356 1 52 1 
291 2 104 4 201 1 175 1 340 2 249 4 178 1 58 4 109 2 83 15 251 5 211 1 343 16 363 31 346 1 237 1 91 4 169 2 42 2 120 3 70 1 146 1 243 1 283 1 218 4 72 1 100 1 75 1 196 2 51 4 286 1 287 4 312 1 311 3 52 3 288 3 
291 3 104 4 201 1 175 1 340 3 249 4 178 1 58 4 109 3 83 17 251 6 211 1 343 15 363 32 346 1 237 1 91 6 169 3 42 3 120 3 70 1 146 1 243 1 283 1 218 4 72 1 354 1 100 1 75 1 196 2 51 3 286 1 287 3 312 1 311 3 52 3 288 4 
291 7 128 1 104 7 333 1 201 1 175 1 157 1 159 1 340 2 249 8 178 1 58 7 109 2 83 27 251 15 211 1 343 25 363 52 232 1 346 2 366 2 216 1 237 1 91 4 169 2 42 2 120 4 70 1 146 1 243 1 283 1 218 4 72 1 354 1 100 1 196 1 51 8 286 1 287 7 311 2 52 8 288 4 
291 3 104 3 175 1 340 2 249 3 178 2 58 3 109 2 83 9 251 6 211 1 343 10 363 19 346 1 91 4 169 2 42 2 120 1 70 1 243 1 218 2 72 1 75 1 196 1 51 3 287 3 311 1 52 3 101 1 288 2 
291 1 104 3 201 1 175 1 340 2 249 3 178 1 58 3 109 2 83 13 251 2 343 10 211 1 363 23 91 4 237 1 169 2 42 2 120 2 70 1 146 1 243 2 283 1 72 1 218 2 354 1 100 1 51 2 196 2 286 1 287 2 52 1 311 2 288 3 
347 1 326 1 342 1 314 1 167 1 68 1 136 1 310 1 296 1 139 1 
303 1 204 1 
165 1 342 1 167 1 315 1 68 1 136 1 177 1 296 1 139 1 
313 1 329 1 347 1 200 1 279 1 314 1 167 1 40 1 68 1 339 1 371 2 326 1 342 1 136 1 296 1 151 1 378 1 139 1 
313 1 329 1 347 1 200 1 279 1 314 1 167 1 40 1 68 1 339 1 371 2 326 1 342 1 136 1 296 1 151 1 378 1 139 1 
313 1 329 1 347 1 200 1 279 1 314 1 167 1 40 1 68 1 339 1 371 2 326 1 342 1 136 1 296 1 151 1 378 1 139 1 
63 1 25 1 305 1 
63 1 25 1 305 1 
257 1 76 1 
257 1 305 1 76 1 
268 1 269 1 
313 1 329 1 268 1 199 1 269 1 204 1 293 1 182 2 342 1 136 1 296 1 298 1 364 2 139 1 89 2 141 1 303 1 167 1 40 1 68 1 371 1 323 1 374 2 195 1 282 1 44 2 378 1 
63 1 25 1 
257 1 305 1 76 1 
331 1 334 1 27 1 203 1 336 2 130 1 340 1 180 1 207 1 109 1 83 1 182 2 343 1 363 2 61 1 60 1 163 2 89 2 255 1 168 1 17 1 91 2 258 2 169 1 42 1 193 2 44 2 219 1 20 1 150 1 21 1 
62 1 234 1 26 2 106 1 336 2 56 1 258 2 129 1 41 1 193 2 121 1 207 1 295 1 375 1 97 1 59 1 377 1 328 1 61 1 
62 1 234 1 26 2 106 1 336 1 258 1 193 1 121 1 207 1 295 1 375 1 97 1 59 1 377 1 353 1 328 1 61 1 
234 1 27 1 336 1 56 1 130 1 258 1 373 1 193 1 207 1 263 1 86 1 198 1 61 1 77 1 
62 1 234 1 26 2 106 1 336 1 56 1 258 1 41 1 193 1 121 1 207 1 295 1 375 1 97 1 59 1 377 1 328 1 61 1 
308 1 
23 1 27 1 203 1 336 1 155 1 130 1 340 1 108 1 109 1 207 1 182 3 161 1 343 1 363 1 214 1 364 2 61 1 60 1 89 3 141 1 235 1 91 2 258 1 169 1 373 1 42 1 193 1 374 2 44 2 355 1 21 1 356 2 
115 2 24 1 53 1 200 4 140 1 333 1 247 4 230 2 31 1 47 1 362 1 50 1 186 2 11 2 137 2 
53 1 200 1 172 1 345 1 137 1 11 1 188 1 
313 1 200 2 24 1 53 1 140 1 78 1 247 1 317 1 306 1 31 1 242 1 47 1 114 1 186 1 137 1 11 1 378 1 
53 9 153 2 200 8 104 2 336 3 247 12 249 2 205 2 4 2 206 2 108 3 58 2 207 3 7 1 345 1 114 3 11 8 61 4 115 6 258 3 118 1 260 1 306 5 224 1 313 5 24 4 227 2 27 10 81 2 129 1 130 3 230 6 131 2 31 4 32 2 362 1 185 1 186 6 137 2 188 1 275 2 365 3 140 4 190 2 280 2 369 1 373 1 239 2 193 3 47 4 50 2 51 2 287 2 378 5 
53 6 24 1 200 3 104 2 201 1 247 6 230 5 249 2 58 2 31 1 32 1 186 3 11 4 115 5 140 1 237 1 120 1 283 1 218 1 47 1 100 1 51 2 286 1 287 2 311 1 
313 1 23 1 226 1 24 1 53 2 338 1 157 1 249 2 31 1 32 2 252 1 182 1 232 1 11 2 364 1 166 1 89 1 140 1 216 1 190 1 374 1 94 1 44 1 47 1 149 1 51 1 356 1 378 1 
24 1 200 1 53 1 140 1 31 1 47 1 345 1 11 1 137 1 188 1 
115 5 200 5 53 5 104 2 190 1 81 1 247 10 230 5 249 2 58 2 32 2 51 2 186 5 287 2 11 5 
313 1 200 1 114 1 137 1 378 1 306 1 
313 3 0 1 24 1 53 2 27 1 336 4 130 1 207 1 31 2 362 2 185 2 114 2 11 2 61 1 189 1 140 2 39 1 258 4 373 2 193 4 306 4 327 1 47 2 48 1 50 2 198 1 224 1 378 3 77 1 
34 1 136 1 296 1 
268 1 326 1 229 1 136 1 296 1 
34 1 136 1 296 1 
34 1 136 1 296 1 
80 1 136 1 296 1 
80 1 136 1 296 1 
80 1 136 1 296 1 
136 1 296 1 
342 1 139 1 
291 2 128 1 333 1 175 1 157 1 159 1 249 1 340 1 109 1 83 4 251 2 343 4 363 8 232 1 216 1 91 2 169 1 120 1 42 1 218 1 51 1 286 1 311 1 
291 2 128 1 104 1 333 1 175 1 157 1 159 1 340 2 249 2 58 1 109 2 83 6 251 3 343 5 363 11 232 1 346 1 216 1 91 4 169 2 322 1 42 2 120 1 218 2 51 1 286 1 311 1 52 1 
291 1 104 2 201 1 175 1 340 2 249 2 58 2 109 2 83 6 251 2 343 6 363 12 91 4 237 1 322 1 169 2 120 1 42 2 218 1 283 1 100 1 51 2 286 1 287 2 52 1 311 1 
291 2 128 1 104 2 333 1 201 1 175 1 157 1 159 1 340 3 249 3 58 2 109 3 83 10 251 4 343 7 363 17 232 1 216 1 91 6 237 1 322 1 169 3 120 1 42 3 218 1 283 1 354 1 100 1 51 2 286 1 287 1 311 1 52 2 
291 2 128 1 333 1 175 1 157 1 159 1 249 1 340 1 109 1 83 4 251 2 343 4 363 8 232 1 216 1 91 2 169 1 120 1 42 1 218 1 51 1 286 1 311 1 
104 2 201 1 175 1 340 1 249 2 58 2 109 1 83 6 251 1 343 6 363 12 91 2 237 1 169 1 120 1 42 1 218 1 283 1 100 1 51 2 286 1 287 2 311 1 52 1 
291 1 104 2 201 1 175 1 340 3 249 2 58 2 109 3 83 7 251 2 343 4 363 11 91 6 237 1 322 1 169 3 42 3 120 1 218 1 283 1 354 1 100 1 51 1 286 1 287 1 52 1 311 1 
291 3 104 3 201 1 175 1 340 4 249 3 58 3 109 4 83 9 251 6 343 7 363 16 91 8 237 1 169 4 42 4 120 1 283 1 218 1 354 2 100 1 75 1 51 2 286 1 287 2 52 3 311 1 
291 3 128 2 216 1 157 3 159 1 249 1 83 3 251 6 343 4 51 1 363 7 232 3 52 3 
291 4 128 1 104 2 333 1 201 1 175 1 157 1 159 1 340 4 249 3 58 2 109 4 83 10 251 5 343 8 363 18 232 1 216 1 91 8 237 1 169 4 42 4 120 1 283 1 218 1 354 2 100 1 75 1 51 2 286 1 287 1 52 1 311 1 
291 2 128 1 333 1 216 1 91 4 157 1 169 2 159 1 249 1 340 2 42 2 83 4 109 2 251 3 343 4 354 1 51 1 363 8 232 1 52 1 
83 3 251 2 291 2 128 1 333 1 216 1 343 3 51 1 157 1 363 6 159 1 172 1 249 1 232 1 
291 1 104 1 91 2 322 1 169 1 340 1 249 1 42 1 58 1 109 1 83 2 251 2 343 2 51 1 363 4 287 1 52 1 
291 1 104 1 249 1 120 1 58 1 83 3 251 2 218 2 343 4 51 1 363 7 287 1 311 1 52 1 346 1 
291 5 128 1 104 2 333 1 157 2 159 1 249 3 340 2 58 2 83 11 109 2 251 9 343 12 363 23 232 2 346 1 366 1 216 1 91 4 169 2 192 1 69 1 120 2 42 2 218 2 354 2 51 3 287 2 52 4 
218 1 343 1 363 1 
83 1 363 1 120 1 
291 2 104 1 81 1 91 2 169 1 322 1 340 1 249 1 42 1 58 1 109 1 83 3 251 3 343 3 51 1 363 6 287 1 52 1 
291 1 104 2 201 1 175 1 340 1 249 2 58 2 109 1 83 6 251 2 343 6 363 12 91 2 237 1 169 1 120 1 42 1 218 1 283 1 100 1 51 2 286 1 287 2 52 1 311 1 
291 1 216 1 157 1 249 1 83 3 251 2 343 3 51 1 363 6 232 1 52 1 
291 1 128 1 91 2 157 1 192 1 169 1 159 1 340 1 42 1 83 1 109 1 251 2 343 2 354 1 363 3 232 1 52 1 
291 3 175 1 216 1 338 1 91 2 157 2 169 1 340 1 249 2 42 1 109 1 83 5 251 5 343 5 51 2 363 10 232 2 52 2 
175 1 91 2 169 1 340 1 249 1 42 1 58 1 109 1 83 2 251 1 363 2 52 1 
291 1 104 1 175 1 91 2 169 1 340 1 249 1 42 1 58 1 109 1 83 2 251 2 343 2 51 1 363 4 287 1 52 1 
291 1 175 1 91 6 157 1 192 1 169 3 340 3 42 3 109 3 83 1 251 2 354 1 343 2 75 1 363 3 232 1 52 1 
127 1 291 7 128 1 104 3 333 1 175 1 157 3 159 1 340 5 249 5 58 3 109 5 83 16 251 12 343 18 363 34 232 3 346 1 216 2 91 10 349 1 192 1 322 1 169 5 42 5 120 3 218 4 376 1 354 2 75 1 51 5 287 3 311 1 52 5 
89 1 182 1 44 1 361 1 141 1 367 1 250 1 
89 1 141 1 1 1 367 1 38 1 250 1 361 1 44 1 182 1 253 1 95 1 152 1 
207 1 27 1 336 1 130 1 258 1 172 1 373 1 198 1 61 1 193 1 77 1 
89 2 141 1 27 1 235 1 336 1 130 1 258 1 373 1 108 1 374 1 193 1 207 1 44 1 182 2 161 1 220 1 364 1 61 1 
290 1 27 3 336 1 130 2 4 1 206 1 108 2 207 1 252 1 182 2 161 1 185 1 364 1 61 1 89 2 141 1 235 1 258 1 193 1 374 2 44 2 220 1 222 1 
290 1 27 3 336 2 130 2 4 1 206 1 108 2 207 1 252 1 182 2 161 1 185 1 364 1 61 1 300 1 89 2 141 1 258 2 193 2 374 2 71 1 44 2 220 1 222 1 
313 2 365 1 200 1 271 1 227 1 27 4 336 3 130 1 258 3 373 1 205 1 206 1 4 1 108 1 193 3 306 1 207 1 325 1 185 1 137 1 61 1 378 2 300 1 
313 2 365 1 200 1 227 1 27 4 336 3 130 1 258 3 373 1 205 1 206 1 4 1 108 1 193 3 306 1 207 1 185 1 137 1 275 1 61 1 378 2 300 1 
207 1 134 1 336 1 258 1 61 1 193 1 
106 1 334 1 27 3 2 1 336 6 129 1 258 7 118 1 130 2 373 2 179 1 193 7 108 1 57 1 307 1 207 2 134 1 148 1 162 1 61 3 163 1 
331 1 291 2 54 1 333 1 203 2 336 1 157 1 160 1 159 1 340 2 249 1 108 1 109 2 207 1 251 2 161 1 343 3 214 1 60 2 61 1 216 1 258 1 169 2 122 1 219 1 220 1 355 1 128 1 27 1 129 1 130 1 83 3 182 2 363 6 232 1 364 1 233 1 89 2 235 1 141 2 191 1 91 4 42 2 193 1 374 1 44 1 51 1 
313 3 53 1 200 1 24 2 227 1 27 2 336 1 131 1 205 1 31 2 293 1 345 1 114 1 137 1 11 1 188 1 275 1 365 1 140 2 280 1 258 1 373 1 239 1 193 1 306 2 47 2 224 1 378 3 
227 1 27 2 336 2 129 1 258 2 118 1 130 1 193 2 108 1 207 1 7 1 134 1 61 2 
27 1 336 4 143 1 258 4 129 1 130 1 373 1 193 4 207 1 198 1 61 1 300 1 77 1 
27 1 336 2 236 1 258 2 130 1 179 1 193 2 108 1 307 1 207 1 185 1 184 1 187 1 61 2 
207 1 26 1 59 1 377 1 336 1 258 1 373 1 328 1 61 1 193 1 
106 1 334 1 27 1 336 2 168 1 129 1 258 2 130 1 193 2 207 1 61 1 
334 1 27 3 336 4 143 1 258 5 129 1 130 2 373 1 193 5 57 1 207 2 185 1 162 1 198 1 61 2 77 1 
334 1 27 3 336 4 143 1 258 5 129 1 130 2 373 1 29 1 193 5 57 1 207 2 185 1 198 1 61 2 77 1 
89 2 141 1 27 1 336 1 130 1 258 1 373 1 108 1 374 1 193 1 207 1 71 1 44 1 182 2 161 1 220 1 364 1 61 1 
27 1 336 1 258 1 118 1 130 1 179 1 193 1 108 1 307 1 207 1 148 1 185 1 61 2 
89 1 202 1 17 1 44 1 182 1 20 1 150 1 138 1 299 1 
6 1 202 1 281 1 
202 1 141 1 156 1 138 1 299 1 
313 2 290 1 200 1 202 1 141 1 156 2 304 1 205 1 281 1 170 1 293 1 252 1 6 1 123 1 222 1 137 1 138 2 299 2 378 2 
278 1 301 3 15 1 74 1 144 1 3 1 135 1 272 1 221 1 171 3 372 1 
133 1 73 1 259 1 221 1 
272 1 221 1 
3 1 272 1 221 1 172 1 
278 1 301 1 3 1 272 1 221 1 171 1 372 1 
301 1 264 1 164 1 
278 1 301 3 154 1 3 1 272 1 372 1 351 1 74 1 135 2 221 1 171 3 266 1 
278 1 301 2 15 1 3 1 272 1 176 1 221 1 171 2 372 1 
278 1 301 1 26 1 372 1 341 1 133 1 375 1 74 1 171 1 221 1 328 1 
278 1 301 1 74 1 272 1 221 1 171 1 372 1 
278 1 301 1 74 1 3 1 272 2 171 1 372 1 
277 1 270 1 278 2 301 2 272 1 372 2 74 1 221 1 344 1 171 2 
278 1 301 3 15 2 3 1 144 1 272 1 372 1 133 1 74 1 73 1 171 3 221 2 87 1 
278 1 26 2 301 2 15 1 3 1 272 1 372 1 295 1 375 1 377 1 74 1 221 1 171 2 223 1 328 1 
278 2 301 4 15 2 3 1 272 1 176 1 372 2 133 1 74 1 73 1 171 4 221 2 124 1 
278 1 301 1 74 1 3 1 272 1 221 1 171 1 372 1 
278 1 301 4 15 2 3 2 272 2 259 1 372 1 351 1 133 1 73 1 135 1 266 1 171 4 221 3 
126 1 278 1 301 2 15 1 3 1 272 1 372 1 74 1 221 1 171 2 173 1 102 1 
278 1 301 3 3 1 316 1 272 1 372 1 351 1 74 1 135 2 221 1 171 3 266 2 
332 1 16 1 221 2 18 2 
278 1 301 1 74 1 318 1 171 1 372 1 
278 1 301 2 15 1 74 1 3 1 144 1 272 1 221 1 171 2 372 1 
85 1 
278 1 301 1 74 1 3 1 272 1 221 1 171 1 372 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V FAILED junit.framework.AssertionFailedError 57 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testNextDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarDateTest:testMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 269 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 31 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 5 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.NullPointerException (211,271) (211,271) 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 124 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 224 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V ERROR java.lang.NullPointerException 148 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 148 60 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 228 22 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 340 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 340 81 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 132 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 132 131 247 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 132 131 247 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 132 131 230 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 340 81 183 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 340 81 183 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 132 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V ERROR java.lang.NullPointerException (211,271) (211,271) 
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V ERROR java.lang.NullPointerException (211,271) (211,271) 
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V ERROR java.lang.NullPointerException (211,271) (211,271) 
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 5 307 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 57 
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 304 (284,310) 296 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 285 164 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V ERROR java.lang.NullPointerException (30,36) 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException (52,323) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException (146,321) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I | CONDITION | 2636 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate; | RETURN | 804 | return null
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
191 1 0 2 102 9 236 2 111 5 116 1 61 2 118 1 283 2 167 9 169 1 128 1 75 2 205 4 206 1 176 1 77 6 78 2 294 1 138 1 334 1 185 1 218 1 90 1 145 2 268 1 338 3 189 1 
191 1 0 2 102 9 236 2 111 5 116 1 61 2 118 1 283 2 167 9 169 1 128 1 75 2 205 4 206 1 176 1 77 6 78 2 294 1 138 1 334 1 185 1 218 1 90 1 145 2 268 1 338 3 189 1 
191 1 0 2 102 10 236 2 111 6 116 1 61 2 118 1 283 2 167 10 169 1 128 1 75 2 205 5 206 1 176 1 77 7 78 2 294 1 138 1 334 1 185 1 218 1 90 1 145 2 268 1 338 4 189 1 
0 2 102 7 236 2 111 4 116 1 61 2 118 1 283 2 167 7 169 1 128 1 75 2 205 3 206 1 176 1 77 4 78 1 294 1 138 1 334 1 185 1 218 1 90 1 145 2 268 1 338 2 189 1 
191 1 0 1 75 1 205 2 206 1 102 4 77 3 78 2 236 1 294 1 111 3 334 1 116 1 61 1 167 4 145 1 338 1 189 1 
75 1 102 2 236 1 111 1 115 1 334 1 116 1 263 1 117 1 61 1 167 2 283 1 218 1 145 1 90 1 189 1 
205 1 102 3 77 1 111 2 334 1 116 1 61 2 167 3 283 1 145 2 268 1 338 1 189 1 
128 1 191 1 0 1 75 1 205 4 206 1 102 9 135 1 77 7 78 2 236 1 294 1 111 5 114 1 334 1 116 1 118 1 61 2 167 9 283 1 145 2 268 1 338 3 189 1 
128 1 191 1 0 1 75 1 205 4 206 1 102 9 135 1 77 7 78 2 236 1 294 1 111 5 114 1 334 1 116 1 118 1 61 2 167 9 283 1 145 2 268 1 338 3 189 1 
57 1 
250 1 325 1 20 1 252 1 79 1 329 1 108 1 139 1 200 1 184 1 216 1 62 1 
250 2 325 1 20 1 154 1 252 1 79 1 329 1 139 2 162 1 184 1 216 1 62 1 120 1 
250 1 139 1 113 1 
250 1 139 1 113 1 
250 1 139 1 
250 1 139 1 113 1 
250 1 139 1 113 1 
127 1 55 1 250 2 139 2 94 1 113 1 195 1 
333 1 57 1 
20 2 154 1 79 2 237 1 162 1 333 2 62 2 120 1 246 1 
324 1 59 1 244 1 
92 2 171 1 96 1 151 1 20 1 21 1 194 1 23 2 277 1 158 2 26 1 333 1 198 1 86 1 62 1 321 1 87 1 121 1 35 1 
92 1 171 1 96 1 151 1 20 2 154 1 23 1 79 1 158 1 26 1 198 1 86 1 244 1 264 1 62 2 321 1 87 1 65 1 120 1 121 1 
272 1 276 1 20 5 154 4 79 5 108 1 258 1 162 1 333 1 62 5 264 1 65 2 120 4 246 1 
20 2 62 2 154 2 120 2 329 1 79 2 322 1 159 1 
162 1 333 1 20 3 62 3 154 3 65 1 120 3 79 3 
20 1 62 1 154 1 120 1 329 1 79 1 159 1 
162 1 20 1 62 1 154 1 120 1 329 1 79 1 246 1 237 1 
250 1 174 1 325 1 20 2 252 1 154 2 329 1 79 2 139 1 162 1 216 1 184 1 264 1 62 2 65 1 120 2 246 1 269 1 
333 1 276 1 20 2 62 2 154 1 120 1 65 1 79 2 108 1 
250 1 174 1 325 1 20 1 252 1 154 1 329 1 79 1 139 1 184 1 216 1 264 1 62 1 31 1 65 1 120 1 
20 2 154 2 79 2 162 1 59 1 62 2 244 1 65 1 120 2 246 1 
92 1 171 1 96 1 151 1 20 1 23 1 158 1 26 1 333 1 198 1 86 1 62 1 321 1 87 1 121 1 
92 1 171 1 323 1 96 1 151 1 20 1 23 1 158 1 26 1 333 1 241 1 198 1 62 1 87 1 121 1 
273 1 40 1 192 1 232 1 101 1 105 1 48 1 7 1 53 1 239 1 197 2 59 2 244 2 318 1 168 4 172 1 71 1 324 2 254 1 293 1 80 1 141 1 335 2 187 2 
216 1 20 1 62 1 154 1 120 1 329 1 79 1 322 1 
97 1 222 1 
97 1 222 1 
309 1 212 1 
309 1 212 1 
309 1 212 1 
97 1 153 1 222 1 
97 1 153 1 222 1 
97 1 222 1 314 1 
142 1 97 2 309 1 202 1 222 2 212 1 
97 1 153 1 222 1 
39 1 97 1 222 1 
39 1 97 1 222 1 
39 1 97 1 222 1 
250 1 70 1 97 1 1 1 20 1 154 1 5 1 134 1 79 1 139 1 82 1 181 1 62 1 120 1 222 1 286 1 
271 1 250 2 70 2 38 1 97 2 1 2 134 2 210 1 211 1 139 2 82 2 181 2 222 2 286 1 
0 1 75 1 236 1 
115 1 75 1 236 1 
261 1 0 2 115 1 75 3 119 1 123 1 
261 1 0 1 115 1 75 2 119 1 50 1 
0 1 261 2 115 1 75 2 119 1 
250 1 139 1 113 1 124 1 
250 2 139 2 288 1 113 2 73 1 224 1 
250 2 127 1 93 1 94 1 74 1 148 1 195 1 55 1 139 2 9 1 113 1 217 1 
250 1 127 1 93 1 94 1 74 1 148 1 195 1 55 1 139 1 9 1 217 1 60 1 
171 1 274 1 57 1 
171 1 6 1 
186 1 
171 1 96 1 121 1 
171 1 28 1 
171 1 121 1 
274 2 171 3 96 1 233 1 336 1 121 1 
172 1 19 1 229 1 3 2 152 1 291 1 80 1 256 1 239 2 335 4 318 3 245 1 63 1 168 7 223 1 187 3 125 1 
172 1 19 1 229 1 3 2 152 1 291 1 80 1 256 1 239 2 335 4 318 3 245 1 63 1 168 7 223 1 187 3 125 1 
172 1 19 1 229 1 3 2 152 1 291 1 157 1 80 1 256 1 239 2 335 4 318 3 245 1 63 1 168 7 223 1 187 3 125 1 
273 1 192 1 229 5 3 3 152 1 105 1 7 3 196 1 239 5 197 2 245 1 318 10 319 1 63 1 285 1 168 31 125 2 287 3 172 4 19 2 289 3 76 1 254 3 291 2 293 1 256 2 80 4 25 1 335 16 144 4 32 1 88 1 223 1 187 15 
273 2 192 2 229 1 3 2 152 1 105 2 239 3 197 4 318 4 245 1 168 9 125 1 172 1 19 1 76 1 291 1 293 2 80 1 256 1 335 5 266 1 223 1 187 4 339 1 
92 1 227 1 0 1 44 1 102 2 155 1 236 1 158 1 313 1 110 1 111 1 163 1 115 1 198 1 116 1 61 1 167 2 283 1 16 1 123 1 249 1 75 2 23 1 77 1 26 1 334 1 89 1 145 1 189 1 225 1 
92 1 227 1 95 1 0 1 44 1 234 1 102 3 155 1 236 1 158 1 313 1 111 1 163 1 115 1 198 1 61 1 167 3 283 1 123 1 16 1 75 2 23 1 77 2 26 1 334 1 89 1 145 1 188 1 189 1 225 1 
92 1 227 1 95 1 0 1 44 1 234 1 102 2 158 1 236 1 111 1 163 1 115 1 198 1 283 1 167 2 16 1 123 1 75 2 23 1 77 2 26 1 334 1 89 1 189 1 225 1 
92 1 151 1 102 1 158 1 312 1 198 1 165 1 61 1 243 1 167 1 283 2 121 1 16 2 171 1 290 1 23 1 136 1 26 1 180 1 89 2 145 1 188 1 225 2 
92 1 227 1 0 1 44 1 234 1 102 1 155 1 236 1 158 1 313 1 110 1 163 1 115 1 198 1 116 1 61 1 167 1 283 1 16 1 123 1 75 2 23 1 26 1 89 1 145 1 225 1 
45 1 
250 1 127 1 92 1 228 1 94 1 74 1 151 1 22 1 23 1 195 1 158 1 238 1 139 1 217 1 
250 2 325 1 20 1 252 1 329 1 79 1 255 1 108 1 51 1 139 2 200 1 317 1 216 1 184 1 62 1 267 1 66 1 340 1 
250 2 325 1 20 1 252 1 329 1 79 1 255 1 108 1 51 1 139 2 200 1 317 1 282 1 216 1 184 1 62 1 267 1 66 1 
250 2 325 1 20 1 252 1 329 1 79 1 255 1 108 1 51 1 139 2 81 1 200 1 317 1 216 1 184 1 62 1 267 1 66 1 340 1 
250 1 139 1 
94 1 195 1 108 1 51 1 238 1 315 1 10 1 200 1 317 1 62 1 66 1 127 1 250 2 325 1 132 1 20 1 252 1 79 1 329 1 255 1 137 1 331 1 139 2 184 1 216 1 217 1 337 1 267 1 
94 1 195 1 108 1 51 1 238 1 315 1 10 1 200 1 317 1 62 1 66 1 247 1 250 2 127 1 131 1 325 1 132 1 20 1 252 1 79 1 329 1 24 1 255 1 137 1 331 1 139 2 217 1 184 1 216 1 337 1 267 1 
94 1 195 1 108 1 51 1 238 1 315 1 10 1 200 1 317 1 62 1 66 1 247 1 250 2 127 1 131 1 325 1 132 1 20 1 252 1 79 1 329 1 24 1 255 1 137 1 331 1 139 2 217 1 184 1 216 1 337 1 267 1 
94 1 230 1 195 1 108 1 51 1 238 1 10 1 200 1 317 1 62 1 14 1 66 1 250 2 127 1 69 1 131 1 325 1 132 1 20 1 252 1 79 1 329 1 255 1 331 1 295 1 139 2 217 1 184 1 216 1 337 1 267 1 
250 2 325 1 20 1 252 1 329 1 79 1 255 1 108 1 51 1 139 2 81 1 200 1 183 1 317 1 216 1 184 1 62 1 267 1 66 1 340 1 
250 2 325 1 20 1 252 1 329 1 79 1 255 1 108 1 51 1 139 2 81 1 200 1 183 1 317 1 216 1 184 1 62 1 267 1 66 1 340 1 
94 1 195 1 108 1 51 1 238 1 10 1 200 1 317 1 62 1 66 1 127 1 250 2 69 1 325 1 132 1 20 1 252 1 79 1 329 1 255 1 331 1 295 1 139 2 217 1 184 1 216 1 337 1 267 1 
273 1 192 1 232 1 3 1 152 1 101 1 105 1 48 1 239 2 197 2 57 1 59 1 244 1 245 1 318 2 168 6 125 1 172 1 324 1 19 1 293 1 80 1 333 2 335 3 223 1 187 3 
273 2 41 1 192 2 229 1 308 1 101 1 105 2 48 2 7 2 239 1 8 1 197 4 59 4 318 2 244 11 285 1 168 14 248 1 287 3 172 1 324 11 289 2 254 1 293 2 80 2 332 1 260 1 333 1 335 8 144 3 32 1 33 1 187 6 
92 1 273 1 41 1 192 1 96 1 151 1 308 1 154 1 101 1 105 1 104 1 158 1 48 1 197 2 198 1 59 1 62 2 321 1 120 1 65 1 121 1 168 2 171 1 21 1 20 2 326 1 23 1 79 1 293 1 26 1 260 1 333 1 335 1 86 1 264 1 87 1 34 1 187 1 
92 3 273 3 192 3 96 2 193 2 3 1 101 3 105 3 107 1 109 2 7 2 197 6 198 2 120 1 121 2 125 1 19 1 289 2 20 3 23 3 293 3 26 2 223 1 305 1 41 1 229 4 151 1 308 1 152 1 154 1 234 1 158 3 48 3 310 2 239 4 59 7 245 1 62 3 244 7 318 8 321 2 65 1 168 20 172 3 171 2 324 7 72 2 175 1 254 2 79 1 80 3 260 1 333 2 335 10 85 2 86 2 264 1 87 2 187 10 
92 8 273 2 275 1 192 2 151 2 232 1 308 1 154 1 234 1 101 2 105 2 158 7 48 2 56 1 197 4 198 2 62 1 243 1 120 1 65 1 168 2 121 2 126 1 249 1 129 1 171 3 20 1 23 8 79 1 293 2 257 1 26 2 260 1 180 1 335 1 219 1 301 1 35 2 187 1 
273 1 41 1 192 1 154 1 101 1 105 1 48 1 7 1 239 1 197 2 162 1 59 1 318 1 244 1 62 1 120 1 246 1 168 3 172 1 324 1 289 1 20 1 254 1 79 1 293 1 80 1 335 1 187 2 91 1 
273 1 71 1 324 1 192 1 229 1 232 1 101 1 105 1 48 1 293 1 7 1 80 1 197 2 335 2 59 1 318 1 244 1 168 2 
273 1 172 1 324 1 192 1 232 1 101 1 105 1 254 1 48 1 293 1 239 1 197 2 141 1 59 1 318 1 244 1 168 2 187 2 
273 1 192 1 229 1 232 1 101 1 105 1 48 1 7 1 239 1 197 2 59 2 244 2 318 2 168 4 172 1 324 2 289 1 254 1 293 1 80 1 335 2 187 2 
273 1 71 1 324 1 275 1 192 1 229 1 101 1 105 1 48 1 293 1 7 1 80 1 197 2 335 2 59 1 318 1 244 1 168 2 
273 1 172 1 324 1 275 1 192 1 101 1 105 1 254 1 48 1 293 1 239 1 197 2 141 1 59 1 318 1 244 1 168 2 187 2 
273 1 172 1 324 2 275 1 192 1 229 1 289 1 101 1 254 1 105 1 48 1 293 1 7 1 80 1 239 1 197 2 335 2 59 2 318 2 244 2 168 4 187 2 
273 1 172 1 324 2 192 1 229 1 289 1 101 1 254 1 105 1 48 1 293 1 7 1 80 1 239 1 197 2 335 2 59 2 318 2 244 2 168 4 187 2 
92 1 273 1 192 1 96 1 151 1 308 1 101 1 105 1 158 1 48 1 197 2 198 1 62 1 321 1 168 2 121 1 171 1 20 1 23 1 293 1 26 1 260 1 333 1 335 1 86 1 85 1 87 1 187 1 
92 1 273 1 192 1 96 1 151 1 308 1 101 1 105 1 158 1 48 1 197 2 241 1 198 1 242 1 62 1 168 2 121 1 171 1 323 1 20 1 23 1 293 1 26 1 260 1 333 1 335 1 87 1 187 1 
273 1 172 1 324 2 41 1 192 1 229 1 289 1 101 1 254 1 105 1 48 1 293 1 7 1 80 1 239 1 197 2 335 2 59 2 318 2 244 2 168 4 187 2 
92 1 273 1 192 1 229 1 96 1 101 1 105 1 158 1 48 1 7 1 239 1 197 2 198 1 59 2 318 2 244 2 62 1 321 1 168 4 121 1 249 1 172 1 171 1 324 2 72 1 289 1 20 1 23 1 254 1 293 1 80 1 26 1 335 2 86 1 85 1 87 1 187 2 
273 1 41 1 192 1 229 1 154 1 101 1 105 1 48 1 7 1 197 2 162 1 59 1 318 1 62 1 244 1 120 1 246 1 168 3 172 1 324 1 289 1 20 1 254 1 209 1 79 1 293 1 80 1 335 2 187 1 
273 2 192 2 42 1 229 3 105 2 7 3 54 1 239 3 240 1 197 4 318 6 285 1 64 1 168 19 170 2 287 1 172 3 289 3 207 2 254 3 293 2 80 3 259 1 335 9 215 1 144 2 266 1 32 1 220 1 187 10 
273 3 190 1 192 3 229 2 105 3 156 1 7 3 54 1 239 2 240 2 197 6 164 1 11 1 318 4 320 1 64 2 285 2 168 26 170 1 287 2 172 2 289 3 76 2 207 4 254 2 293 3 80 3 259 1 335 14 215 1 144 2 266 1 270 1 187 12 
273 3 190 1 192 3 42 1 229 4 3 1 152 1 105 3 156 1 278 1 7 4 54 1 239 4 240 1 197 6 164 1 11 1 245 1 318 8 320 1 285 3 64 2 168 41 170 1 125 1 287 3 172 5 19 1 289 4 76 1 207 4 254 4 293 3 80 5 259 1 335 20 215 1 144 4 266 1 32 1 223 1 270 1 187 21 
273 4 190 1 192 4 42 1 229 3 3 1 152 1 105 4 156 1 278 1 7 4 54 1 239 4 240 1 197 8 164 1 11 1 245 1 318 7 320 1 285 3 64 2 168 38 170 1 125 1 287 3 172 4 19 1 289 4 76 2 207 4 254 3 293 4 80 5 259 1 335 20 215 1 144 4 266 1 32 1 223 1 270 1 187 18 
273 2 190 1 192 2 229 7 3 1 152 1 105 2 156 1 7 7 54 1 239 7 240 1 197 4 164 1 11 1 245 1 318 14 320 1 285 2 64 1 168 52 170 1 125 1 287 4 172 8 19 1 289 7 76 1 207 4 254 7 293 2 80 8 259 1 335 27 215 1 144 4 266 1 32 2 33 2 223 1 270 1 187 25 
70 1 214 1 1 1 97 1 181 1 262 1 58 1 134 1 202 1 222 1 
314 1 160 1 
204 1 70 1 150 1 1 1 97 1 181 1 134 1 222 1 15 1 
68 1 153 1 
39 1 142 1 182 1 
271 1 250 1 70 1 38 1 97 1 1 1 134 1 210 1 211 1 139 1 82 2 181 1 222 1 286 1 
271 1 250 1 70 1 38 1 97 1 1 1 134 1 210 1 211 1 139 1 82 2 181 1 222 1 286 1 
271 1 250 1 70 1 38 1 97 1 1 1 134 1 210 1 211 1 139 1 82 2 181 1 222 1 286 1 
68 1 142 1 153 1 
68 1 142 1 153 1 
39 1 182 1 
39 1 142 1 182 1 
213 1 147 1 
250 1 70 1 38 1 97 1 1 1 307 1 5 1 134 1 210 1 139 1 82 1 113 1 181 1 222 1 
92 2 273 1 41 1 192 1 308 1 101 1 105 1 48 1 158 2 197 2 198 1 201 1 62 2 121 1 168 2 129 1 171 1 173 1 20 2 23 2 79 2 292 1 293 1 26 1 179 1 260 1 300 1 335 1 301 1 35 2 187 1 
92 2 249 1 0 1 75 2 231 1 100 1 44 1 234 1 23 2 155 1 236 1 158 2 26 1 177 1 115 1 163 1 198 1 123 1 16 1 
92 1 0 1 75 2 100 1 44 1 234 1 23 1 155 1 236 1 158 1 26 1 115 1 163 1 198 1 123 1 16 1 17 1 
92 1 171 1 151 1 23 1 158 1 312 1 26 1 177 1 316 1 198 1 180 1 243 1 121 1 16 1 
92 1 0 1 75 2 231 1 100 1 44 1 234 1 23 1 155 1 236 1 158 1 26 1 177 1 115 1 163 1 198 1 123 1 16 1 
149 1 
36 1 57 1 30 1 337 1 
127 1 238 1 315 1 94 1 217 1 337 1 195 1 137 1 
127 1 92 1 171 2 94 1 74 1 96 1 151 1 233 1 23 1 195 1 158 1 6 1 238 1 296 1 26 1 198 2 217 1 284 1 121 1 304 1 303 1 
287 1 127 1 238 1 94 1 164 1 217 1 144 1 337 1 285 1 195 1 
250 1 127 1 172 1 94 1 19 1 4 1 328 1 24 1 195 1 80 2 238 1 161 2 139 1 217 1 337 2 223 1 125 1 
36 1 127 1 238 1 94 1 337 1 195 1 
172 1 289 1 217 1 337 1 254 1 7 1 80 1 
92 1 151 1 23 1 158 1 
127 1 238 1 94 1 306 1 74 1 217 1 337 1 195 1 
203 1 70 1 1 1 
203 1 70 1 1 1 
70 1 213 1 1 1 262 1 29 1 
203 1 70 1 1 1 
70 1 1 1 143 1 
70 1 1 1 143 1 
70 1 1 1 143 1 
70 1 1 1 
97 1 222 1 
273 2 172 1 192 2 19 1 229 1 3 1 152 1 76 1 105 2 293 2 80 1 239 2 197 4 335 4 318 3 245 1 168 8 223 1 187 4 125 1 
239 2 172 1 19 1 57 1 335 3 3 1 318 2 245 1 152 1 168 6 223 1 187 3 80 1 125 1 
273 1 172 1 192 1 229 1 289 1 254 1 105 1 293 1 7 1 80 1 239 1 197 2 335 2 318 2 12 1 168 4 187 2 
287 1 172 1 229 1 289 1 254 1 7 1 80 1 239 1 335 3 144 2 318 2 32 1 285 1 168 7 187 4 
273 2 192 2 229 4 3 1 152 1 105 2 7 2 239 5 197 4 245 1 318 9 13 1 168 23 125 2 287 2 248 1 172 3 19 2 289 2 76 2 254 2 293 2 80 3 335 11 144 2 32 1 33 1 223 1 187 12 
144 1 168 1 187 1 
287 1 335 1 168 1 
273 1 172 1 192 1 193 1 229 1 289 1 105 1 254 1 293 1 7 1 80 1 239 2 197 2 335 3 12 1 318 3 168 6 187 3 
273 1 190 1 192 1 229 1 105 1 156 1 7 2 239 1 197 2 164 1 11 1 318 2 285 1 168 12 287 1 172 2 289 2 254 2 293 1 80 2 335 6 144 1 266 1 187 6 270 1 
172 1 19 1 229 1 80 1 239 1 335 3 318 2 168 6 223 1 187 3 125 1 
273 1 19 1 192 1 229 1 152 1 76 1 105 1 293 1 239 1 197 2 335 1 318 2 245 1 13 1 168 3 187 2 125 1 
273 1 172 2 192 1 19 2 229 2 4 1 105 1 293 1 80 2 239 3 197 2 335 5 318 5 266 1 168 10 223 1 187 5 125 2 
273 1 192 1 229 1 105 1 293 1 7 1 80 1 197 2 335 2 318 1 266 1 168 2 
273 1 172 1 192 1 229 1 289 1 254 1 105 1 293 1 7 1 80 1 239 1 197 2 335 2 318 2 266 1 168 4 187 2 
273 3 192 3 19 1 42 1 229 1 76 1 105 3 293 3 239 1 197 6 335 1 13 1 318 2 266 1 168 3 187 2 125 1 
273 5 192 5 42 1 229 5 3 1 152 1 105 5 196 1 7 3 239 7 197 10 245 1 13 1 319 1 12 1 318 12 285 1 168 34 125 3 287 3 172 5 19 3 289 3 76 2 254 3 293 5 80 5 25 1 335 16 144 4 266 1 32 1 223 2 187 18 
287 1 273 1 172 1 19 1 192 1 3 1 152 1 105 1 293 1 80 1 239 2 197 2 164 1 335 4 318 2 245 1 144 1 266 1 285 1 168 8 223 1 187 4 125 1 
273 2 192 2 229 1 3 1 152 1 105 2 7 1 239 2 197 4 164 1 245 1 12 1 318 3 285 1 168 11 125 1 287 1 172 1 19 1 289 1 293 2 80 2 335 6 144 2 266 1 32 1 223 1 187 5 
273 3 190 1 192 3 229 1 3 1 152 1 105 3 156 1 7 2 239 3 197 6 164 1 11 1 245 1 12 1 318 4 285 1 168 19 125 1 287 1 172 3 19 1 289 2 76 1 254 2 293 3 80 3 335 9 144 1 266 1 223 1 270 1 187 10 
273 3 190 1 192 3 229 2 3 1 152 1 105 3 156 1 7 2 239 3 197 6 164 1 11 1 245 1 12 1 318 5 285 1 168 17 125 1 287 1 172 2 19 1 289 2 76 1 254 1 293 3 80 3 335 10 144 1 266 1 223 1 187 7 270 1 
287 1 273 1 172 1 19 1 192 1 3 1 152 1 105 1 293 1 80 1 239 2 197 2 164 1 335 4 318 2 245 1 144 1 266 1 285 1 168 8 223 1 187 4 125 1 
273 1 190 1 192 1 229 1 105 1 156 1 7 2 239 1 197 2 164 1 11 1 318 2 285 1 168 12 287 1 172 2 289 2 254 2 293 1 80 2 335 6 144 1 266 1 187 6 270 1 
273 4 190 1 192 4 229 2 3 1 152 1 105 4 156 1 7 2 239 3 197 8 164 1 11 1 245 1 12 1 318 5 285 1 168 18 125 1 287 1 172 2 19 1 289 2 76 2 254 1 293 4 80 3 335 10 144 1 266 1 223 1 270 1 187 8 
273 4 190 1 192 4 229 3 42 1 105 4 156 1 7 3 239 3 197 8 164 1 11 1 318 6 285 1 168 16 287 1 172 2 289 3 76 2 254 2 293 4 80 3 335 9 144 1 266 1 270 1 187 7 
172 1 19 3 229 3 152 1 80 1 239 3 335 3 245 2 318 6 168 7 223 1 187 4 125 3 
273 4 190 1 192 4 229 1 42 1 3 1 152 1 105 4 156 1 7 2 239 3 197 8 164 1 11 1 245 1 318 4 285 1 168 18 125 1 287 1 172 2 19 1 289 2 76 2 254 1 293 4 80 3 335 10 144 1 266 1 223 1 270 1 187 8 
333 1 276 1 20 1 62 1 79 1 108 1 311 1 
276 1 251 1 20 1 79 1 235 1 108 1 311 1 297 1 299 1 280 1 333 1 62 1 
92 1 26 1 171 1 198 1 180 1 57 1 151 1 243 1 23 1 121 1 158 1 
92 1 171 1 96 1 151 1 20 2 154 1 23 1 79 1 158 1 26 1 333 1 198 1 62 2 321 1 87 1 65 1 120 1 121 1 
92 1 37 1 96 2 154 2 106 1 158 1 198 1 62 2 321 1 120 1 65 1 121 2 67 1 171 3 20 2 23 1 79 2 329 2 26 1 333 1 28 1 184 1 216 1 87 1 
92 1 37 1 96 2 154 2 106 1 158 1 198 1 62 2 120 1 65 1 121 2 67 1 171 3 323 1 20 2 23 1 79 2 329 2 26 1 333 1 28 1 184 1 216 1 87 1 
92 1 250 1 37 1 139 1 171 1 23 1 158 1 6 1 52 1 
146 1 92 1 250 1 37 1 139 1 171 1 23 1 158 1 6 1 
92 1 26 1 198 1 23 1 158 1 126 1 
249 1 92 7 171 3 96 1 151 2 2 1 233 1 234 1 23 7 103 1 158 6 56 1 257 1 26 2 298 1 198 3 219 1 301 1 121 2 35 1 126 1 
92 1 273 2 41 1 192 2 96 1 3 1 152 1 154 1 101 2 105 2 48 2 158 1 310 1 239 2 197 4 198 1 59 1 244 1 318 2 245 1 62 2 321 1 120 1 65 1 168 6 121 1 125 1 249 1 172 1 171 1 324 1 19 1 72 1 20 2 23 1 79 1 292 1 293 2 80 1 26 1 333 2 335 3 85 1 86 1 87 1 223 1 187 3 
250 1 139 1 113 1 
249 1 92 2 274 1 171 2 96 1 233 1 23 2 158 2 26 1 198 2 121 1 303 1 126 1 
92 4 249 1 171 1 151 1 23 4 327 1 158 4 140 1 26 1 198 1 180 1 243 1 121 1 
92 2 37 1 171 1 96 1 2 1 175 1 23 2 158 2 279 1 26 1 298 1 178 1 198 2 121 1 
92 1 26 1 115 1 163 1 198 1 75 1 151 1 23 1 236 1 158 1 
92 2 249 1 26 1 171 1 179 1 198 1 234 1 23 2 121 1 301 1 158 2 
92 5 249 1 37 1 171 3 151 1 23 5 158 4 140 1 26 2 56 1 180 1 198 2 243 1 219 1 301 1 121 2 
92 5 249 1 226 1 37 1 171 3 151 1 23 5 158 4 140 1 26 2 56 1 180 1 198 2 243 1 301 1 121 2 
92 1 171 1 323 1 96 1 151 1 20 2 154 1 23 1 79 1 158 1 26 1 333 1 198 1 62 2 87 1 65 1 120 1 121 1 
92 1 37 1 171 1 96 1 2 1 233 1 23 1 103 1 158 1 26 1 298 1 198 2 121 1 
18 1 333 1 83 1 98 1 47 1 
250 2 18 2 130 1 98 2 174 1 325 1 252 1 329 1 46 1 47 2 139 2 113 1 333 1 83 1 216 1 184 1 122 1 
18 1 173 1 20 1 79 1 47 1 83 1 300 1 201 1 62 1 
130 1 83 1 122 1 
111 1 334 1 57 1 189 1 
111 1 334 1 61 1 102 1 167 1 145 1 189 1 
283 1 102 1 89 1 
133 1 208 1 102 3 253 1 111 1 334 1 116 1 61 1 167 3 218 2 145 1 189 1 
111 1 334 1 61 1 102 2 167 2 77 1 78 1 145 1 189 1 
0 1 205 1 75 1 102 1 236 1 294 1 111 1 116 1 61 1 167 1 145 1 
111 1 334 1 116 1 61 1 102 1 167 1 145 1 
334 2 116 1 61 1 102 1 167 1 145 1 189 1 
102 2 111 1 112 1 334 1 116 1 84 1 61 2 167 2 221 1 145 2 
128 1 205 1 102 3 77 2 111 2 334 1 116 1 61 1 118 1 167 3 145 1 338 1 189 1 
0 1 75 2 102 2 77 1 236 1 111 1 115 1 334 1 199 1 116 1 61 1 167 2 145 1 123 1 189 1 
191 1 205 1 102 4 77 2 78 1 111 2 334 1 116 1 61 2 167 4 145 2 338 1 189 1 
111 1 334 1 116 1 61 1 102 1 167 1 145 1 189 1 
205 1 133 1 253 1 102 4 77 2 111 3 334 2 61 1 167 4 218 1 302 1 145 1 338 1 189 2 
111 1 114 1 334 1 43 1 116 1 99 1 61 1 102 2 167 2 77 1 145 1 189 1 
133 1 102 3 253 2 111 1 281 1 334 1 116 1 61 1 167 3 218 2 145 1 189 1 
27 2 111 2 166 1 265 1 
116 1 61 1 102 1 167 1 145 1 49 1 
111 1 334 1 116 1 118 1 61 1 102 2 167 2 77 1 145 1 189 1 
330 1 
111 1 334 1 116 1 61 1 102 1 167 1 145 1 189 1 
102 3 77 1 111 1 334 1 116 1 61 1 118 1 167 3 218 1 145 1 189 1 
111 1 205 1 302 1 338 1 
111 1 334 1 

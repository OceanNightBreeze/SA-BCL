#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9328 | stmt -> ;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> -1
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
332 1 25 2 257 2 366 2 132 1 64 1 187 1 138 1 3 1 109 3 44 1 66 9 221 9 350 2 351 1 14 4 271 6 293 1 294 1 276 1 178 2 230 1 377 1 278 2 180 1 24 1 78 1 233 2 
332 1 25 2 257 2 366 2 132 1 64 1 187 1 138 1 3 1 109 3 44 1 66 9 221 9 350 2 351 1 14 4 271 6 293 1 294 1 178 2 276 1 230 1 377 1 278 2 180 1 78 1 24 1 233 2 
332 1 25 2 257 2 366 2 132 1 64 1 187 1 138 1 3 1 109 4 44 1 66 10 221 10 350 2 351 1 14 5 271 7 293 1 294 1 178 2 276 1 230 1 377 1 278 2 180 1 78 1 24 1 233 2 
332 1 25 2 257 2 366 1 132 1 64 1 187 1 138 1 109 2 44 1 66 7 221 7 350 2 351 1 14 3 271 4 293 1 294 1 178 2 276 1 230 1 377 1 278 2 180 1 78 1 24 1 233 2 
332 1 25 1 66 4 257 1 350 1 221 4 366 2 271 3 14 2 187 1 138 1 3 1 294 1 109 1 178 1 24 1 233 1 44 1 
332 1 66 3 257 2 221 3 351 1 14 1 271 1 187 1 138 1 294 1 109 1 278 1 233 2 
332 1 25 1 257 2 366 2 338 1 132 1 187 1 138 1 36 1 3 1 109 3 44 1 66 9 221 9 350 1 351 1 14 4 271 7 178 1 294 1 377 1 278 1 24 1 233 2 
332 1 25 1 257 2 366 2 338 1 132 1 187 1 138 1 36 1 3 1 109 3 44 1 66 9 221 9 350 1 351 1 14 4 271 7 178 1 294 1 377 1 278 1 24 1 233 2 
332 1 25 1 66 2 257 1 364 1 221 2 350 1 84 1 64 1 187 1 138 1 198 1 294 1 278 1 180 1 233 1 
322 1 245 1 311 1 
46 1 244 1 374 1 173 1 162 1 31 1 326 1 248 1 214 1 292 1 19 1 199 1 331 1 5 1 
322 1 
57 1 322 1 245 1 331 2 118 1 356 1 292 2 214 1 
127 2 67 1 57 2 158 1 146 1 245 1 105 1 107 2 13 1 283 2 197 1 356 1 214 2 292 5 275 1 322 1 124 1 331 5 191 1 
57 1 322 1 245 1 331 2 356 1 249 1 292 2 214 1 
57 1 331 1 292 1 
322 1 168 2 252 1 
46 2 208 1 19 1 244 2 173 2 5 2 31 2 326 2 
304 1 208 1 306 1 103 1 334 1 211 1 61 1 31 3 134 1 339 2 189 2 261 1 369 2 264 2 5 2 7 1 45 1 46 2 220 1 114 1 115 1 324 1 69 1 244 3 173 2 272 1 121 1 326 2 250 1 315 1 227 1 17 1 19 1 328 1 154 1 279 2 379 1 
46 1 19 1 244 1 199 1 374 1 173 1 5 1 31 1 326 1 248 1 
162 1 31 2 322 1 342 1 5 1 46 2 195 1 244 2 245 1 374 1 173 1 15 1 151 1 326 1 248 1 292 1 19 1 199 2 331 1 155 1 317 1 
46 2 195 1 244 2 245 1 374 1 173 2 162 1 31 2 15 1 326 2 248 1 292 2 19 1 322 1 342 1 199 2 331 2 5 2 317 1 
16 1 57 1 331 1 292 1 214 1 
208 1 311 1 
46 2 170 1 208 2 244 2 173 1 31 2 326 1 5 1 242 1 
203 1 327 1 108 1 
220 1 45 1 208 1 324 1 334 1 244 1 61 1 211 1 31 1 164 1 339 1 261 1 328 1 154 1 264 1 279 1 
46 3 208 1 244 3 173 3 5 1 31 3 326 3 113 1 
46 1 244 1 199 1 374 1 173 1 31 1 326 1 
46 1 170 1 244 1 199 1 173 1 5 1 31 1 326 1 242 1 
334 1 306 1 208 1 61 1 211 1 339 1 261 1 342 1 264 1 265 1 5 2 169 1 7 1 113 1 220 1 9 1 115 1 69 1 173 3 272 1 15 1 121 1 315 1 17 1 19 1 279 1 317 1 128 1 31 4 134 1 189 1 369 2 242 1 46 3 45 1 324 1 195 1 244 4 326 3 292 1 250 1 328 1 199 2 331 1 154 1 
46 2 208 1 244 2 173 1 204 1 31 2 151 1 326 1 113 1 
46 3 195 1 244 3 337 1 173 3 31 3 15 1 326 3 292 1 322 1 199 1 342 1 331 1 265 1 5 1 169 1 317 1 242 1 113 2 
46 2 244 2 173 2 31 2 326 2 108 1 203 1 5 1 242 1 113 1 
220 1 45 1 208 1 324 1 334 1 244 1 61 1 211 1 31 1 339 1 261 1 328 1 154 1 264 1 279 1 
220 1 45 1 208 1 324 1 334 1 244 1 61 1 211 1 373 1 31 1 339 1 261 1 96 1 264 1 279 1 
306 1 59 1 135 1 85 1 189 4 108 2 216 1 369 2 39 1 110 1 40 1 370 1 349 1 114 2 115 1 69 1 270 1 272 1 121 1 327 2 290 1 250 2 17 1 203 2 
46 1 244 1 199 1 342 1 173 1 31 1 163 1 326 1 
45 1 220 1 46 1 334 1 324 1 244 2 211 1 61 1 173 1 31 2 339 1 326 1 108 1 261 1 328 1 154 1 264 1 265 1 279 1 113 1 
362 1 46 5 208 1 244 5 173 4 31 5 151 1 326 4 265 1 5 1 204 1 242 1 113 2 183 1 
46 2 244 2 199 1 374 1 173 2 163 1 31 2 326 2 
98 1 90 1 361 1 
341 1 97 1 98 2 74 1 299 1 90 2 
98 1 90 1 
98 1 90 1 
341 1 74 1 
341 1 74 1 
341 1 74 1 
98 1 90 1 94 1 
98 1 90 1 94 1 
98 1 90 1 94 1 
235 1 98 1 90 1 
235 1 98 1 90 1 
235 1 98 1 90 1 
80 1 333 1 208 1 60 1 28 1 83 1 31 2 111 1 90 1 268 1 46 2 145 1 244 2 173 2 93 1 326 2 292 1 20 1 98 1 331 1 153 1 359 1 75 1 361 1 
10 1 26 1 149 1 60 2 93 2 83 2 353 1 237 2 368 1 292 2 322 1 201 1 98 2 20 3 331 2 153 1 299 1 111 2 90 2 
25 1 178 1 350 1 
25 1 350 1 84 1 
25 3 178 2 117 1 54 1 63 1 84 1 
25 2 178 1 310 1 117 1 54 1 84 1 
25 2 178 1 54 1 117 2 84 1 
80 1 127 1 57 1 105 3 107 1 28 1 283 1 85 1 214 4 322 2 110 1 40 1 370 1 168 3 238 2 344 1 323 1 347 1 144 2 145 1 222 2 288 1 245 1 13 2 197 1 274 1 356 1 292 5 296 1 331 5 252 1 56 1 
127 2 57 6 256 5 82 1 105 8 28 4 107 2 32 1 283 2 85 3 214 7 322 5 110 3 40 3 370 3 168 9 238 6 344 2 284 1 347 2 286 1 146 1 222 6 288 3 245 1 13 6 197 1 175 1 292 9 356 1 16 5 331 9 252 3 179 1 56 1 
127 1 105 3 107 1 28 1 283 1 85 1 214 2 322 3 110 1 40 1 370 1 344 1 238 2 168 4 323 1 347 1 144 1 146 1 245 1 288 1 222 2 13 2 274 1 292 3 331 3 252 2 
127 1 105 5 107 1 28 2 283 1 85 2 214 3 322 4 110 2 40 2 370 2 168 7 238 4 344 1 284 1 323 1 347 1 144 2 286 1 146 1 245 1 222 4 288 2 13 4 274 1 175 1 292 4 331 4 252 3 
311 1 241 1 261 1 
301 1 
45 1 261 1 
45 1 200 1 211 1 320 1 241 2 261 3 
45 1 211 1 261 1 
141 1 261 1 
29 1 261 1 
114 4 234 1 58 1 336 1 367 1 120 1 225 1 85 1 189 7 308 1 250 3 216 3 39 2 277 1 370 1 167 1 42 2 
114 4 234 1 58 1 336 1 367 1 120 1 225 1 85 1 189 7 308 1 250 3 216 3 39 2 277 1 370 1 167 1 42 2 
114 4 234 1 58 1 336 1 367 1 120 1 225 1 85 1 189 7 308 1 250 3 216 3 39 2 277 1 298 1 370 1 167 1 42 2 
157 3 306 1 234 1 2 4 58 2 336 5 367 2 85 4 308 1 189 31 139 1 216 10 369 2 110 3 39 5 190 1 40 3 167 2 370 4 42 3 372 1 114 16 69 1 288 3 49 1 50 1 120 1 272 1 225 1 121 1 250 15 277 2 125 1 255 1 
306 2 58 1 336 1 367 1 85 1 189 9 308 1 216 4 369 4 39 3 370 1 167 1 42 2 8 1 114 5 69 2 50 1 120 1 272 2 225 1 121 2 250 4 277 1 182 1 
332 1 25 2 257 1 81 1 334 1 63 1 339 1 84 1 187 1 138 1 37 1 264 1 343 1 220 1 66 2 194 1 350 1 221 2 247 1 375 1 271 1 223 1 294 1 178 1 329 1 295 1 278 1 279 1 253 1 233 1 
332 1 25 2 257 1 81 1 334 1 63 1 339 1 84 1 187 1 262 1 264 1 343 1 220 1 66 3 194 1 350 1 221 3 171 1 247 1 375 1 223 1 271 2 289 1 294 1 178 1 329 1 278 1 279 1 253 1 233 1 
332 1 25 2 81 1 334 1 63 1 339 1 84 1 187 1 262 1 264 1 343 1 220 1 66 2 194 1 221 2 350 1 247 1 223 1 271 2 289 1 294 1 178 1 278 1 279 1 253 1 
334 1 257 1 104 1 1 1 106 1 339 1 261 1 264 1 45 1 220 1 66 1 324 1 221 1 171 1 352 1 247 2 223 2 122 1 52 1 278 2 279 1 253 2 233 1 
25 2 257 1 81 1 334 1 63 1 339 1 84 1 138 1 37 1 264 1 343 1 220 1 66 1 194 1 350 1 221 1 247 1 375 1 223 1 289 1 178 1 329 1 278 1 279 1 253 1 233 1 
101 1 
57 5 105 1 107 1 342 1 116 3 13 1 15 1 356 2 73 1 316 1 23 5 317 1 280 1 127 1 133 1 30 1 31 1 136 3 283 1 282 1 34 2 322 3 38 1 88 1 89 2 192 2 142 2 46 1 195 1 91 1 244 1 92 1 245 3 287 1 325 3 151 1 197 1 292 4 199 1 331 4 155 1 252 2 
127 1 57 5 105 1 107 1 31 1 30 1 133 1 282 1 283 1 136 3 34 2 322 3 38 1 342 1 88 1 89 2 192 2 142 2 46 1 91 1 195 1 92 1 244 1 287 1 245 3 116 3 325 3 13 1 15 1 151 1 197 1 356 2 292 4 199 1 155 1 331 4 73 1 252 2 316 1 280 1 317 1 23 5 
57 4 105 1 107 1 342 1 168 2 112 2 116 2 13 1 15 1 356 2 73 1 316 1 23 4 317 1 79 1 127 1 31 1 30 1 283 1 136 2 322 3 38 1 88 1 89 2 142 2 46 1 195 1 244 1 245 3 287 1 325 2 151 1 197 1 152 2 292 4 199 1 331 4 155 1 100 1 
57 6 334 1 104 1 1 1 105 2 107 1 339 2 261 1 342 1 168 2 344 1 264 2 220 1 68 1 116 2 13 2 15 1 356 3 176 1 357 1 73 1 279 2 316 1 317 1 23 4 79 1 127 1 30 1 31 1 136 2 283 1 282 1 34 2 322 3 38 1 88 1 89 2 192 2 142 2 45 1 46 1 324 2 195 1 244 1 287 1 245 2 325 2 151 1 197 1 51 1 292 5 199 1 331 5 155 1 252 2 
57 2 31 1 30 1 322 2 342 1 88 1 46 1 195 1 244 1 287 1 245 2 116 1 118 1 15 1 151 1 356 1 292 3 199 1 155 1 331 3 73 1 316 1 317 1 23 2 
46 1 195 1 244 1 245 2 287 1 325 1 30 1 31 1 151 1 15 1 292 2 322 2 199 1 342 1 73 1 331 2 155 1 88 1 316 1 23 3 317 1 
57 2 31 1 30 1 136 1 322 2 342 1 88 1 46 1 195 1 244 1 287 1 245 2 116 1 325 1 118 1 15 1 151 1 356 1 292 3 199 1 155 1 331 3 73 1 316 1 317 1 23 3 
57 7 105 1 107 1 162 1 342 1 5 1 116 4 173 1 118 1 13 1 15 1 356 3 19 1 73 1 316 1 23 5 317 1 280 1 127 1 31 2 30 1 133 1 136 4 283 1 282 1 34 2 322 4 38 1 88 1 89 2 192 2 43 1 142 2 46 2 195 1 91 1 244 2 92 1 245 4 287 1 325 3 374 1 151 1 326 1 197 1 248 1 292 5 199 2 331 5 155 1 252 2 
57 4 105 1 107 1 342 1 168 2 116 2 13 1 15 1 356 2 73 1 316 1 23 4 317 1 79 1 127 1 31 1 30 1 283 1 282 1 136 2 34 2 322 4 38 1 88 1 89 2 192 2 142 2 46 1 195 1 244 1 245 3 287 1 325 2 151 1 197 1 292 4 199 1 331 4 155 1 252 2 
127 1 57 4 105 1 107 1 31 1 30 1 136 2 282 1 283 1 34 2 322 3 38 1 342 1 88 1 89 2 192 2 142 2 46 1 91 1 195 1 244 1 92 1 287 1 245 3 116 2 325 2 13 1 15 1 151 1 197 1 356 2 292 4 199 1 155 1 331 4 73 1 252 2 316 1 317 1 23 4 280 1 
127 1 57 4 105 1 107 1 31 1 30 1 136 2 282 1 283 1 34 2 322 3 38 1 342 1 88 1 89 2 192 2 142 2 46 1 91 1 195 1 244 1 92 1 287 1 245 3 116 2 325 2 13 1 15 1 151 1 197 1 356 2 292 4 199 1 155 1 331 4 73 1 252 2 316 1 317 1 23 4 280 1 
127 1 57 4 105 1 107 1 31 1 30 1 136 2 283 1 322 3 38 1 342 1 168 2 88 1 89 2 112 2 142 2 46 1 91 1 195 1 244 1 287 1 245 3 116 2 325 2 119 1 13 1 15 1 151 1 152 2 197 1 356 2 292 4 199 1 100 1 155 1 331 4 73 1 316 1 317 1 23 4 77 1 
306 1 208 2 367 1 135 1 85 1 108 1 308 1 189 6 216 2 369 2 39 2 167 1 370 1 42 1 115 1 114 3 69 1 311 1 120 1 272 1 225 1 121 1 327 1 250 3 17 1 203 1 
157 3 208 1 306 2 2 3 336 1 184 1 85 2 189 14 108 11 216 2 39 1 369 4 110 2 40 1 370 1 266 1 7 1 372 1 115 1 114 8 11 1 69 2 288 2 246 1 272 2 121 2 327 11 250 6 227 1 17 2 203 4 380 1 255 1 
363 1 334 2 306 2 103 2 104 1 1 1 236 1 31 1 135 1 339 8 189 2 261 3 369 4 264 8 218 1 240 1 7 1 113 1 219 1 46 1 220 2 45 2 324 2 115 2 114 1 244 1 69 2 173 1 272 2 326 1 121 2 289 1 250 1 17 2 227 1 295 1 279 7 206 1 303 1 
306 1 31 1 85 1 108 1 189 3 216 1 39 1 369 2 110 1 40 1 263 1 370 1 5 1 242 1 46 1 115 1 114 1 69 1 244 1 288 1 246 1 173 1 272 1 327 1 121 1 326 1 250 2 17 1 203 1 
318 1 208 1 334 1 306 1 211 1 61 1 164 1 31 2 212 1 339 1 189 2 261 1 321 1 369 2 264 1 265 1 7 1 113 1 45 1 220 1 46 1 324 1 115 1 114 1 244 2 69 1 246 1 173 1 272 1 121 1 326 1 250 1 17 1 227 1 328 1 154 1 203 1 279 1 
208 2 306 3 334 2 336 4 61 2 211 2 339 3 308 1 108 7 261 2 216 8 110 2 167 1 264 3 265 1 7 1 113 1 220 2 115 3 114 10 69 3 309 2 173 1 120 1 313 2 272 3 225 1 121 3 315 2 227 1 17 3 279 3 367 1 281 2 31 3 85 3 189 20 39 4 369 6 40 2 370 3 41 1 42 1 46 1 45 2 47 1 324 1 147 1 244 3 288 2 246 1 326 1 327 7 289 1 250 10 328 2 154 2 203 7 55 2 
115 1 306 1 114 2 69 1 336 1 272 1 135 1 327 1 121 1 85 1 108 1 189 2 290 1 17 1 216 1 369 2 110 1 203 1 
349 1 115 1 306 1 69 1 272 1 135 1 327 1 121 1 108 1 189 2 250 2 17 1 216 1 39 1 369 2 40 1 203 1 370 1 
306 1 336 1 135 1 85 1 189 4 108 2 216 2 110 1 369 2 39 1 40 1 370 1 114 2 115 1 69 1 288 1 272 1 121 1 327 2 250 2 17 1 203 2 
115 1 306 1 114 2 69 1 336 1 272 1 327 1 121 1 85 1 108 1 189 2 290 1 17 1 216 1 369 2 110 1 203 1 240 1 
349 1 115 1 306 1 69 1 272 1 327 1 121 1 108 1 189 2 250 2 17 1 216 1 39 1 369 2 40 1 203 1 370 1 240 1 
306 1 336 1 85 1 189 4 108 2 216 2 110 1 369 2 39 1 40 1 370 1 240 1 114 2 115 1 69 1 288 1 272 1 121 1 327 2 250 2 17 1 203 2 
306 1 336 1 85 1 189 4 108 2 216 2 110 1 369 2 39 1 40 1 370 1 114 2 115 1 69 1 288 1 272 1 121 1 327 2 250 2 17 1 203 2 
208 1 334 1 306 1 211 1 61 1 31 1 339 1 189 2 261 1 369 2 264 1 7 1 45 1 220 1 114 1 324 1 115 1 244 1 69 1 272 1 121 1 250 1 315 1 227 1 17 1 328 1 154 1 279 1 
208 1 334 1 306 1 211 1 61 1 31 1 339 1 189 2 261 1 369 2 264 1 7 1 45 1 220 1 114 1 324 1 115 1 244 1 69 1 373 1 272 1 121 1 250 1 71 1 227 1 17 1 96 1 279 1 
306 1 336 1 85 1 189 4 108 2 216 2 110 1 369 2 39 1 40 1 370 1 114 2 115 1 69 1 288 1 246 1 272 1 121 1 327 2 250 2 17 1 203 2 
334 1 306 1 336 1 211 1 61 1 281 1 31 1 339 1 85 1 108 2 189 4 261 1 216 2 39 1 110 1 369 2 40 1 370 1 264 1 220 1 45 1 114 2 115 1 244 1 69 1 288 1 272 1 327 2 121 1 250 2 315 1 17 1 328 1 295 1 154 1 203 2 279 1 
306 1 336 1 31 1 85 1 189 3 108 1 216 1 369 2 110 1 40 1 370 1 5 1 242 1 46 1 115 1 114 2 69 1 244 1 288 1 246 1 173 1 272 1 121 1 326 1 327 1 250 1 17 1 202 1 203 1 
157 3 306 3 2 4 336 4 210 1 160 1 340 1 308 1 216 8 110 4 167 1 8 1 114 20 69 3 120 1 272 3 225 1 121 3 72 1 231 1 232 1 360 1 129 1 27 4 131 1 367 1 186 1 85 5 189 41 369 6 39 4 40 4 370 5 239 1 42 1 371 1 372 3 288 4 50 1 250 21 156 2 205 1 255 1 
157 3 129 1 306 4 2 4 336 3 131 1 27 4 210 1 367 1 186 1 160 1 85 5 308 1 340 1 189 38 216 7 39 4 369 8 110 4 40 3 167 1 370 4 239 1 42 1 371 1 8 1 372 3 114 20 69 4 288 4 50 2 120 1 272 4 225 1 121 4 250 18 72 1 231 1 205 1 360 1 156 2 232 1 255 1 
157 4 129 1 306 2 2 4 336 7 27 4 210 1 367 1 186 1 160 1 85 8 308 1 340 1 189 52 216 14 39 7 369 4 110 7 40 7 167 1 370 8 239 1 266 2 42 1 371 1 8 1 372 2 114 27 69 2 288 7 50 1 120 1 272 2 225 1 121 2 250 25 72 1 231 1 360 1 156 1 232 1 255 2 
157 1 306 2 2 2 336 3 27 2 210 1 160 1 85 3 189 19 216 6 39 3 369 4 110 3 40 3 370 3 371 2 8 1 372 1 193 1 114 9 69 2 288 3 272 2 121 2 250 10 231 1 205 1 156 1 232 1 255 1 
157 2 129 1 306 3 2 2 336 2 27 4 210 1 186 1 160 1 85 3 189 26 340 1 216 4 39 2 369 6 110 3 40 2 370 2 239 1 371 1 8 1 372 2 114 14 69 3 288 3 50 2 272 3 121 3 250 12 72 1 231 1 156 2 232 2 360 1 
166 1 98 1 149 1 299 1 60 1 111 1 83 1 93 1 90 1 368 1 
361 1 268 1 
143 1 358 1 98 1 60 1 111 1 83 1 93 1 90 1 35 1 
159 1 94 1 
97 1 235 1 258 1 
10 1 26 1 149 1 60 1 93 1 83 1 353 1 237 1 368 1 292 1 322 1 98 1 20 2 153 1 331 1 299 1 111 1 90 1 
10 1 26 1 149 1 60 1 93 1 83 1 353 1 237 1 368 1 292 1 322 1 98 1 20 2 153 1 331 1 299 1 111 1 90 1 
10 1 26 1 149 1 60 1 93 1 83 1 353 1 237 1 368 1 292 1 322 1 98 1 20 2 153 1 331 1 299 1 111 1 90 1 
97 1 159 1 94 1 
97 1 159 1 94 1 
235 1 258 1 
97 1 235 1 258 1 
333 1 359 1 
80 1 333 1 208 1 26 1 60 1 28 1 83 1 31 2 237 1 214 1 111 1 90 1 268 1 46 2 145 1 244 2 173 2 93 1 326 2 292 1 98 1 20 1 331 1 359 1 22 1 75 1 361 1 
363 1 334 1 306 1 103 2 213 1 31 2 339 2 189 2 261 1 369 2 264 2 345 1 7 1 220 1 45 1 46 2 115 1 114 1 244 2 69 1 246 1 272 1 121 1 174 1 250 1 17 1 227 1 297 1 279 2 181 1 303 1 
25 2 220 1 334 1 194 1 81 1 350 1 247 1 375 1 63 1 84 1 339 2 289 1 355 1 95 1 178 1 65 1 295 1 264 2 279 2 
25 2 220 1 194 1 81 1 334 1 350 1 247 1 375 1 63 1 84 1 339 1 188 1 289 1 178 1 65 1 264 1 279 1 
220 1 45 1 334 1 324 1 104 1 1 1 106 1 247 1 339 1 355 1 261 1 70 1 264 1 279 1 
25 2 220 1 334 1 194 1 81 1 350 1 247 1 375 1 63 1 84 1 339 1 289 1 355 1 95 1 178 1 65 1 264 1 279 1 
12 1 
67 1 322 1 158 1 245 1 105 1 311 1 13 1 
127 1 67 1 158 1 245 1 105 1 107 1 13 1 283 1 197 1 322 1 
309 1 288 2 222 5 105 5 376 1 13 5 85 2 322 5 110 2 40 2 238 5 168 10 370 2 252 5 102 2 
57 1 322 1 245 1 331 1 292 1 356 1 
127 2 57 4 334 1 104 1 1 1 105 2 107 2 283 2 339 4 261 1 264 4 344 2 220 1 45 1 324 2 48 1 146 1 13 2 197 1 51 1 354 1 356 2 292 3 176 1 357 2 331 3 279 4 300 1 254 2 
208 1 306 1 334 1 61 1 211 1 31 3 339 1 134 1 189 1 261 1 369 2 264 1 5 2 7 1 46 2 220 1 45 1 324 1 115 1 69 1 244 3 173 2 272 1 326 2 121 1 250 1 315 1 17 1 19 1 328 1 154 1 279 1 
127 1 222 2 245 2 105 1 107 1 13 2 283 1 197 1 322 4 357 1 168 4 238 2 344 1 252 2 42 1 
127 1 57 1 105 1 107 1 282 1 283 1 34 1 322 2 168 1 192 1 245 1 13 1 197 1 356 1 292 1 331 1 252 1 
57 2 334 2 209 1 105 4 211 1 107 2 339 1 261 4 110 1 344 1 264 1 168 6 220 1 309 1 222 3 13 3 356 1 279 1 317 1 127 2 126 1 29 2 283 2 33 1 137 1 85 1 87 1 322 3 40 1 238 3 370 1 241 1 45 1 324 1 288 1 197 2 291 1 292 2 200 1 331 2 252 3 102 1 302 1 
127 2 157 1 57 1 2 1 105 8 107 2 186 1 283 2 85 2 340 1 322 5 110 2 40 2 344 1 140 1 168 6 238 5 370 2 239 1 372 1 222 5 288 2 245 2 312 1 376 1 13 5 197 2 292 1 356 1 357 1 72 1 331 1 252 3 360 1 102 2 
127 1 105 2 367 1 107 1 162 1 31 1 283 1 85 2 167 1 370 1 5 1 46 1 348 1 244 1 92 1 374 1 173 1 376 1 13 2 225 1 197 1 326 1 248 1 292 1 19 1 199 1 331 1 102 2 
333 1 0 1 149 1 83 1 93 1 
62 1 83 1 93 1 
62 1 83 1 93 1 
62 1 83 1 93 1 
83 1 93 1 243 1 
83 1 93 1 243 1 
83 1 93 1 243 1 
83 1 93 1 
98 1 90 1 
157 1 306 1 2 1 367 1 85 1 189 8 308 1 216 2 369 2 39 2 370 1 167 1 42 1 8 1 372 1 114 4 69 1 120 1 272 1 225 1 121 1 250 4 360 1 
157 1 306 2 2 2 336 1 367 1 85 2 308 1 189 11 216 3 39 2 369 4 110 1 370 1 167 1 6 1 42 1 8 1 372 1 114 6 69 2 288 1 120 1 272 2 225 1 121 2 250 5 360 1 255 1 
157 1 306 3 2 1 336 1 367 1 186 1 85 3 308 1 189 19 340 1 216 4 369 6 110 2 39 3 40 2 167 1 370 3 239 1 6 1 42 1 8 1 372 1 114 9 69 3 288 2 50 1 120 1 272 3 225 1 121 3 250 10 72 1 360 1 
157 1 306 3 2 1 336 2 367 1 186 1 85 3 308 1 189 17 340 1 216 5 369 6 110 2 39 3 40 1 167 1 370 2 239 1 6 1 42 1 8 1 372 1 114 10 69 3 288 2 50 1 120 1 272 3 225 1 121 3 250 7 72 1 360 1 
157 1 306 1 2 1 367 1 85 1 189 8 308 1 216 2 369 2 39 2 370 1 167 1 42 1 8 1 372 1 114 4 69 1 120 1 272 1 225 1 121 1 250 4 360 1 
157 1 306 1 2 1 336 1 186 1 85 2 189 12 340 1 216 2 369 2 110 2 39 1 40 2 370 2 239 1 8 1 372 1 114 6 69 1 288 2 272 1 121 1 250 6 72 1 360 1 
157 1 306 4 2 1 336 2 367 1 186 1 85 3 308 1 189 18 340 1 216 5 369 8 110 2 39 3 40 1 167 1 370 2 239 1 6 1 42 1 8 1 372 1 114 10 69 4 288 2 50 2 120 1 272 4 225 1 121 4 250 8 72 1 360 1 
157 1 306 4 2 1 336 3 186 1 85 3 189 16 340 1 216 6 369 8 110 3 39 3 40 2 370 2 239 1 8 1 372 1 114 9 69 4 288 3 50 2 272 4 121 4 250 7 72 1 360 1 205 1 
114 3 336 3 367 3 120 2 225 1 85 1 189 7 308 1 250 4 216 6 39 3 370 1 167 3 
157 1 306 4 2 1 336 1 367 1 186 1 85 3 308 1 189 18 340 1 216 4 369 8 110 2 39 3 40 1 167 1 370 2 239 1 42 1 8 1 372 1 114 10 69 4 288 2 50 2 120 1 272 4 225 1 121 4 250 8 72 1 360 1 205 1 
114 4 306 2 69 2 336 1 50 1 367 1 120 1 272 2 225 1 85 1 121 2 189 8 308 1 250 4 216 3 39 2 369 4 370 1 167 1 42 1 
114 3 216 2 39 2 370 1 167 1 311 1 367 1 120 1 225 1 85 1 42 1 189 6 308 1 250 3 
306 1 114 2 69 1 288 1 336 1 272 1 121 1 85 1 189 4 250 2 216 2 39 1 369 2 110 1 40 1 370 1 6 1 
372 1 157 1 114 3 2 2 288 1 336 1 85 1 189 7 250 4 216 2 39 1 110 1 40 1 370 1 255 1 
157 2 306 2 2 2 336 4 367 2 85 3 308 1 189 23 216 9 110 2 39 5 369 4 40 2 167 2 370 3 266 1 42 1 114 11 11 1 69 2 269 1 288 2 50 2 120 1 272 2 225 1 121 2 250 12 255 1 
2 1 189 1 250 1 
157 1 114 1 189 1 
306 1 114 3 69 1 309 1 288 1 336 1 272 1 121 1 85 1 189 6 250 3 216 3 369 2 110 1 39 2 40 1 370 1 6 1 
157 1 306 1 2 1 336 1 186 1 85 2 189 12 340 1 216 2 369 2 110 2 39 1 40 2 370 2 239 1 8 1 372 1 114 6 69 1 288 2 272 1 121 1 250 6 72 1 360 1 
114 3 336 1 367 1 225 1 85 1 189 6 250 3 216 2 39 1 370 1 167 1 
114 1 306 1 269 1 69 1 336 1 50 1 367 1 120 1 272 1 121 1 189 3 308 1 250 2 216 2 39 1 369 2 167 1 
348 1 306 1 114 5 69 1 336 2 367 2 272 1 225 1 121 1 85 2 189 10 250 5 216 5 369 2 39 3 167 2 370 2 8 1 
306 1 114 2 69 1 336 1 272 1 121 1 85 1 189 2 216 1 369 2 110 1 8 1 
306 1 114 2 69 1 288 1 336 1 272 1 121 1 85 1 189 4 250 2 216 2 39 1 369 2 110 1 40 1 370 1 8 1 
306 3 114 1 269 1 69 3 336 1 50 1 367 1 272 3 121 3 189 3 250 2 216 2 369 6 39 1 167 1 205 1 8 1 
157 3 306 5 2 4 336 5 367 3 85 5 308 1 189 34 216 12 369 10 110 3 39 7 190 1 40 3 167 3 370 5 6 1 42 1 8 1 372 1 114 16 269 1 69 5 288 3 50 2 49 1 120 1 272 5 225 2 121 5 250 18 125 1 205 1 255 1 
46 1 208 1 244 1 130 1 365 1 172 1 31 1 151 1 165 1 330 1 251 1 204 1 
46 1 208 1 244 1 31 1 204 1 151 1 165 1 
220 1 45 1 334 1 324 1 104 1 1 1 311 1 264 1 279 1 339 1 261 1 
45 1 220 1 334 1 324 1 104 1 1 1 339 4 261 1 295 1 264 4 229 1 279 4 346 1 
45 1 220 1 334 2 147 1 211 1 339 2 215 1 261 1 177 1 264 2 279 2 267 1 254 1 285 1 
25 1 220 1 334 1 81 1 324 1 350 1 264 1 279 1 84 1 339 1 
45 1 220 1 363 1 334 1 339 2 174 1 289 1 261 1 295 1 264 2 279 2 
45 2 220 2 363 1 324 1 334 2 104 1 1 1 339 5 261 3 295 1 264 5 279 4 206 1 254 1 346 1 219 1 
45 2 220 2 363 1 324 1 334 2 104 1 1 1 196 1 339 5 261 3 295 1 264 5 279 4 206 1 254 1 346 1 
45 1 46 1 220 1 208 1 334 1 324 1 244 2 211 1 61 1 173 1 31 2 339 1 326 1 261 1 328 1 264 1 279 1 113 1 
208 1 334 1 61 1 211 2 31 2 339 1 261 3 342 1 264 1 141 1 113 1 220 1 46 2 45 2 195 1 244 2 173 1 326 2 328 1 199 1 53 1 279 1 254 1 
208 1 334 1 61 1 211 2 31 2 339 2 261 3 342 1 264 2 141 1 113 1 220 1 46 2 45 2 195 1 244 2 373 1 173 1 326 2 199 1 53 1 229 1 279 2 254 1 
57 1 334 1 319 1 211 1 162 1 29 1 31 1 339 1 261 4 322 1 264 1 5 1 141 1 241 1 46 1 220 1 45 1 244 1 245 1 374 1 173 1 326 1 248 1 292 2 18 1 19 1 199 1 53 1 331 2 279 1 317 1 254 1 
57 1 334 1 211 1 162 1 29 1 31 1 339 1 261 4 87 1 322 1 264 1 5 1 141 1 241 1 46 1 220 1 45 1 244 1 245 1 374 1 173 1 326 1 248 1 292 2 19 1 199 1 53 1 331 2 279 1 317 1 254 1 
220 1 334 1 264 1 218 1 279 1 339 1 
45 2 220 2 363 1 103 1 324 2 334 3 211 1 236 1 339 7 289 1 261 3 177 1 295 1 200 1 264 7 218 1 279 6 206 1 207 1 285 1 219 1 
208 2 334 1 306 2 367 1 211 1 61 1 281 1 31 2 339 1 85 1 108 1 189 6 308 1 261 1 216 2 39 2 369 4 370 1 167 1 264 1 345 1 42 1 113 1 45 1 220 1 46 1 114 3 115 2 244 2 69 2 246 1 173 1 120 1 313 1 272 2 225 1 327 1 121 2 326 1 250 3 315 1 17 2 328 1 295 1 154 1 203 1 279 1 
57 2 158 1 105 4 107 2 162 1 339 1 261 2 214 1 264 1 167 1 5 1 67 1 348 1 173 1 13 5 225 1 356 1 19 1 279 1 317 1 127 2 367 1 29 1 31 1 283 2 33 1 137 1 85 2 87 1 322 2 370 2 241 1 46 1 324 1 244 1 245 2 374 1 376 1 197 2 326 1 291 1 248 1 292 3 199 1 331 3 300 1 102 2 
45 1 220 1 334 2 211 1 339 2 261 2 295 1 200 1 264 2 218 1 279 2 241 1 302 1 
45 1 46 1 220 1 208 1 334 1 324 1 244 2 211 1 61 1 173 1 373 1 31 2 339 1 326 1 261 1 264 1 279 1 113 1 
45 1 220 1 334 2 211 1 339 1 261 1 177 1 200 1 264 1 279 1 254 1 207 1 285 1 
46 1 123 1 244 1 297 1 260 1 161 1 31 1 213 1 181 1 
99 1 260 1 86 1 
123 1 208 1 260 1 76 1 161 1 
260 1 161 1 162 1 31 1 86 1 214 1 322 1 342 1 5 1 169 1 46 1 195 1 244 1 245 1 374 1 173 1 15 1 326 1 248 1 292 2 123 1 19 1 99 1 199 2 331 2 21 1 76 1 317 1 
332 1 294 1 311 1 187 1 
332 1 66 1 257 1 294 1 221 1 187 1 233 1 
66 1 278 1 223 1 
332 1 305 1 66 3 257 1 221 3 259 1 138 1 307 1 187 1 294 1 180 2 233 1 
332 1 66 2 257 1 294 1 221 2 366 1 271 1 187 1 233 1 
25 1 66 1 257 1 178 1 350 1 221 1 14 1 138 1 24 1 233 1 
332 1 66 1 257 1 221 1 187 1 138 1 233 1 
66 1 257 1 294 1 221 1 187 2 138 1 233 1 
332 1 66 2 335 1 257 2 221 2 185 1 187 1 138 1 378 1 233 2 
332 1 66 3 257 1 221 3 132 1 271 2 14 1 187 1 138 1 294 1 109 1 377 1 233 1 
332 1 25 2 66 2 257 1 221 2 350 1 63 1 271 1 84 1 187 1 138 1 294 1 178 1 217 1 233 1 
332 1 66 4 257 2 221 4 366 1 271 2 14 1 187 1 138 1 3 1 294 1 109 1 233 2 
332 1 66 1 257 1 294 1 221 1 187 1 138 1 233 1 
332 2 66 4 257 1 221 4 259 1 150 1 271 2 14 1 307 1 187 2 294 2 109 1 180 1 233 1 
332 1 66 2 257 1 221 2 338 1 271 1 187 1 138 1 273 1 294 1 381 1 233 1 
332 1 66 3 257 1 221 3 259 2 307 1 138 1 187 1 226 1 294 1 180 2 233 1 
332 2 148 1 4 1 314 2 
66 1 257 1 228 1 221 1 138 1 233 1 
332 1 66 2 257 1 294 1 221 2 271 1 132 1 187 1 138 1 233 1 
224 1 
332 1 66 1 257 1 294 1 221 1 187 1 138 1 233 1 
332 1 66 3 257 1 221 3 271 1 132 1 138 1 187 1 294 1 180 1 233 1 
66 1 109 1 221 1 271 1 14 1 
332 1 187 1 

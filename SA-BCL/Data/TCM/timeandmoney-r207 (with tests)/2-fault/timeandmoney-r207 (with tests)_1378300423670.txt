#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (36,303) (36,303) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (36,303) (36,303) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (36,303) (36,303) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (36,303) (36,303) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 4503 | 0 -> 1
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio; | STATEMENT | 894 | stmt -> ;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 356 1 36 1 252 1 76 1 378 1 81 1 59 1 205 1 35 1 96 1 
303 1 356 1 36 1 252 1 76 1 378 1 81 1 59 1 205 1 35 1 96 1 
303 1 356 1 36 1 252 1 76 1 378 1 81 1 59 1 205 1 35 1 96 1 
303 1 356 1 36 1 252 1 76 1 378 1 81 1 59 1 205 1 35 1 96 1 
300 1 252 4 76 1 316 3 161 1 139 2 205 1 48 1 258 1 39 1 193 3 121 1 81 1 19 1 177 2 354 1 110 1 96 4 
356 1 99 1 300 1 252 2 76 1 246 1 375 1 77 1 205 1 193 1 121 1 81 1 19 1 354 1 96 2 35 1 
356 1 300 1 252 3 76 1 316 1 205 2 258 1 193 2 349 1 81 2 177 1 354 1 96 3 
356 1 300 1 252 9 254 1 161 1 139 2 205 2 48 1 258 3 121 1 309 1 96 9 343 1 76 1 316 7 193 5 39 1 349 1 81 2 19 1 177 4 354 1 110 1 273 1 
356 1 300 1 252 9 254 1 161 1 139 2 205 2 48 1 258 3 121 1 309 1 96 9 343 1 76 1 316 7 193 5 39 1 349 1 81 2 19 1 177 4 354 1 110 1 273 1 
130 1 331 1 117 1 
130 1 98 1 379 2 
166 1 173 2 103 2 235 2 14 2 229 2 133 2 191 1 
229 2 301 1 62 1 231 1 88 2 27 1 118 1 182 1 166 1 235 2 304 1 363 1 143 1 145 1 69 1 7 1 310 1 243 1 125 1 188 1 100 2 347 2 317 2 9 1 128 1 292 1 191 1 102 1 173 2 103 3 14 2 132 1 133 3 176 1 220 1 20 1 61 2 
173 1 103 1 235 1 295 1 14 1 229 1 133 1 241 1 191 1 135 1 
266 1 210 1 244 1 373 1 229 1 117 1 130 1 103 1 133 1 250 1 95 1 241 1 148 1 224 1 
373 2 210 1 244 2 229 1 117 1 130 1 173 1 235 1 103 1 14 1 133 1 250 1 95 1 241 1 224 1 
373 1 244 1 112 1 178 1 164 1 
130 1 299 1 373 2 244 2 117 1 178 1 225 1 164 1 
373 1 244 1 178 1 
244 1 373 1 229 1 47 1 191 1 164 1 173 1 235 1 103 1 295 1 14 1 133 1 241 1 135 1 
130 1 
130 1 373 2 244 2 197 1 117 1 178 1 225 1 164 1 
342 1 244 5 373 5 25 1 211 1 117 1 171 1 268 1 164 2 130 1 280 1 80 2 93 2 41 1 271 1 261 1 34 2 225 1 178 2 
166 1 331 1 
229 2 173 1 166 2 103 2 235 1 14 1 131 1 133 2 285 1 
189 1 344 1 190 1 
188 1 301 1 347 1 231 1 88 1 118 1 102 1 166 1 103 1 321 1 363 1 132 1 133 1 20 1 61 1 243 1 
266 1 275 1 158 1 229 5 113 2 138 1 173 4 166 1 235 4 103 5 14 1 131 1 133 5 242 1 
173 2 103 2 235 2 295 1 229 2 133 2 290 1 241 1 
188 1 229 1 301 1 190 1 113 1 347 1 231 1 88 1 118 1 102 1 173 1 235 1 103 2 132 1 363 1 133 2 20 1 243 1 242 1 61 1 
166 1 173 3 103 3 235 3 14 1 229 3 133 3 113 1 
173 1 103 1 235 1 295 1 229 1 133 1 241 1 
173 1 103 1 235 1 14 1 229 1 131 1 133 1 241 1 285 1 
229 3 301 1 62 1 46 1 113 1 231 1 163 1 88 1 27 1 118 1 182 1 166 1 235 3 304 1 363 1 143 1 95 1 241 1 310 1 243 1 242 1 188 1 210 1 244 1 373 1 100 1 347 1 317 2 9 1 128 1 292 1 191 1 102 1 173 3 103 4 14 2 132 1 131 1 133 4 250 1 176 1 20 1 224 1 61 1 
166 1 173 1 266 1 103 2 235 1 229 2 133 2 113 1 138 1 
373 1 244 1 210 1 229 3 113 2 46 1 130 1 173 3 235 3 103 3 14 1 119 1 131 1 133 3 250 1 95 1 241 1 224 1 242 1 
229 2 113 1 344 1 190 1 173 2 235 2 103 2 14 1 131 1 133 2 
188 1 301 1 347 1 231 1 88 1 118 1 102 1 166 1 103 1 363 1 132 1 133 1 20 1 61 1 243 1 
188 1 301 1 347 1 231 1 88 1 102 1 166 1 103 1 132 1 133 1 142 1 20 1 325 1 61 1 243 1 
62 2 255 1 230 1 204 1 182 1 336 1 143 1 33 1 340 1 209 1 189 2 313 1 100 4 190 2 344 2 317 2 9 1 128 1 292 1 219 1 176 1 220 2 199 1 355 1 
173 1 103 1 235 1 229 1 133 1 95 1 241 1 290 1 
114 1 366 1 
114 1 366 1 
335 1 305 1 
335 1 305 1 
335 1 305 1 
37 1 114 1 366 1 
37 1 114 1 366 1 
114 1 366 1 289 1 
371 1 335 1 305 1 137 1 114 2 366 2 
37 1 114 1 366 1 
365 1 114 1 366 1 
365 1 114 1 366 1 
365 1 114 1 366 1 
179 1 229 2 114 1 277 1 66 1 361 1 166 1 235 2 184 1 366 1 373 1 244 1 267 1 346 1 289 1 247 1 249 1 173 2 12 1 103 2 133 2 377 1 22 1 43 1 
371 1 244 2 373 2 288 1 228 2 253 1 374 1 114 2 277 1 247 3 361 2 130 1 12 2 184 2 4 1 366 2 83 1 43 2 72 1 
121 1 19 1 161 1 
99 1 121 1 19 1 
99 1 10 1 161 2 19 3 21 1 302 1 
99 1 10 1 198 1 161 1 19 2 21 1 
99 1 10 2 161 1 19 2 21 1 
179 1 200 2 26 1 255 1 358 2 117 1 2 1 164 4 280 2 93 1 71 1 34 1 340 1 342 1 98 1 373 5 244 5 267 1 313 1 318 2 319 1 268 3 249 1 130 2 80 1 379 3 60 1 134 1 272 1 199 1 178 1 225 1 
200 6 112 5 26 2 255 3 358 6 117 1 2 3 164 7 280 6 68 1 93 2 237 1 262 1 34 2 340 3 342 1 98 3 373 9 244 9 313 3 211 1 213 1 319 1 268 8 249 4 130 5 80 2 18 5 58 1 108 1 379 9 272 2 199 3 178 6 225 1 
200 2 26 1 255 1 117 1 358 2 2 1 164 2 280 2 93 1 34 1 340 1 98 2 373 3 244 3 313 1 211 1 318 1 268 3 249 1 130 3 80 1 379 4 60 1 134 1 272 1 199 1 
200 4 26 1 255 2 117 1 358 4 2 2 164 3 280 4 93 1 34 1 340 2 98 3 373 4 244 4 313 2 211 1 213 1 318 2 268 5 249 2 130 4 80 1 58 1 108 1 379 7 60 1 134 1 272 1 199 2 
231 1 331 1 167 1 
311 1 231 1 
90 1 
188 1 231 1 102 1 
105 1 231 1 
231 1 102 1 
293 1 188 1 29 1 231 3 167 2 102 1 
209 2 330 1 62 3 100 7 255 1 89 2 294 1 153 1 30 1 94 1 306 1 220 4 33 3 147 1 156 1 44 1 340 1 
209 2 330 1 62 3 100 7 255 1 89 2 294 1 153 1 30 1 94 1 306 1 220 4 33 3 147 1 156 1 44 1 340 1 
209 2 330 1 62 3 100 7 255 1 203 1 89 2 294 1 153 1 30 1 94 1 306 1 220 4 33 3 147 1 44 1 156 1 340 1 
327 1 330 2 62 15 255 4 89 3 2 3 182 1 183 1 185 1 30 2 186 1 94 1 283 3 306 5 143 1 147 2 33 10 340 4 312 1 209 5 313 3 100 31 317 2 101 1 292 1 11 1 153 1 294 2 176 1 220 16 353 4 44 1 156 1 199 3 
209 3 330 1 62 4 100 9 317 4 255 1 89 2 292 2 182 2 294 1 186 1 30 1 196 1 94 1 306 1 143 2 176 2 220 5 147 1 33 4 70 1 44 1 156 1 340 1 
356 1 300 1 252 2 161 1 88 1 1 1 205 1 302 1 334 1 121 1 337 1 239 1 307 1 31 1 96 2 124 1 99 1 76 1 347 1 316 1 193 1 79 1 132 1 81 1 20 1 19 2 222 1 354 1 45 1 61 1 
356 1 300 1 252 3 161 1 88 1 65 1 1 1 302 1 205 1 141 1 334 1 121 1 337 1 239 1 307 1 96 3 99 1 347 1 316 2 193 1 79 1 132 1 81 1 20 1 19 2 222 1 354 1 45 1 61 1 326 1 
356 1 300 1 252 2 161 1 88 1 65 1 1 1 302 1 121 1 337 1 307 1 96 2 99 1 347 1 316 2 193 1 79 1 132 1 20 1 19 2 222 1 354 1 45 1 61 1 326 1 
208 1 356 2 252 1 301 1 347 1 231 1 88 1 140 1 205 1 141 1 259 1 102 1 195 1 3 1 132 1 79 2 337 2 240 1 307 2 81 1 20 1 96 1 61 1 
356 1 99 1 252 1 76 1 347 1 161 1 88 1 1 1 302 1 205 1 334 1 132 1 79 1 121 1 239 1 337 1 31 1 307 1 81 1 19 2 20 1 222 1 45 1 96 1 326 1 61 1 
380 1 
227 1 274 1 229 1 86 1 180 2 231 1 181 2 88 2 91 1 49 2 280 2 3 1 93 1 95 1 241 1 148 1 342 1 98 2 244 5 53 1 347 2 102 1 103 1 195 1 350 1 250 1 107 1 20 1 109 2 157 2 61 2 301 2 160 1 26 1 117 1 28 2 123 1 367 2 34 1 207 1 266 1 373 5 210 1 216 4 268 2 376 1 130 2 80 1 132 1 133 1 379 2 223 1 224 1 225 3 178 6 
227 1 274 1 229 1 91 1 95 1 241 1 367 1 148 1 266 1 373 3 244 3 210 1 53 1 216 2 376 1 103 1 133 1 250 1 197 1 224 1 178 2 225 1 
227 1 274 1 229 1 180 1 117 1 91 1 95 1 241 1 148 1 266 1 373 3 244 3 210 1 53 1 216 3 376 1 130 1 103 1 133 1 250 1 197 1 224 1 178 1 225 1 
227 1 274 1 229 1 180 1 117 1 91 1 49 1 95 1 241 1 367 1 148 1 266 1 373 3 244 3 210 1 53 1 216 3 376 1 130 1 103 1 133 1 197 1 250 1 224 1 225 1 178 2 
274 1 227 1 229 1 278 1 180 4 181 2 91 1 49 4 280 1 93 1 95 1 241 1 187 1 148 1 342 1 244 5 98 2 53 1 103 1 250 1 197 1 109 2 157 2 117 5 28 2 123 1 367 4 34 1 207 1 266 1 369 1 210 1 373 5 216 6 268 1 376 1 130 5 38 1 80 1 133 1 224 1 225 3 178 7 84 1 
274 1 227 1 229 1 180 2 181 2 91 1 49 2 280 1 93 1 95 1 241 1 148 1 342 1 244 4 98 2 53 1 103 1 250 1 109 2 157 2 160 1 117 1 28 2 123 1 367 2 34 1 207 1 266 1 210 1 373 4 216 4 268 1 376 1 130 2 80 1 133 1 379 2 224 1 225 2 178 4 
227 1 274 1 229 1 278 1 180 2 181 2 117 1 28 2 91 1 49 2 280 1 93 1 123 1 95 1 241 1 367 2 148 1 34 1 207 1 342 1 266 1 369 1 98 2 373 4 244 4 210 1 53 1 216 4 268 1 376 1 130 1 103 1 80 1 133 1 250 1 109 2 224 1 178 4 225 2 84 1 157 2 
227 1 274 1 229 1 278 1 180 2 181 2 117 1 28 2 91 1 49 2 280 1 93 1 123 1 95 1 241 1 367 2 148 1 34 1 207 1 342 1 266 1 369 1 98 2 373 4 244 4 210 1 53 1 216 4 268 1 376 1 130 1 103 1 80 1 133 1 250 1 109 2 224 1 178 4 225 2 84 1 157 2 
227 1 274 1 229 1 180 2 117 1 234 1 91 1 49 2 280 1 93 1 51 2 95 1 241 1 367 2 148 1 34 1 207 1 342 1 266 1 373 4 244 4 210 1 212 1 53 1 216 4 170 2 172 1 268 1 376 1 130 1 103 1 80 1 133 1 250 1 379 2 109 2 224 1 178 4 225 2 84 1 157 2 
227 1 274 1 229 1 278 1 180 3 181 2 117 1 28 2 91 1 49 3 280 1 93 1 123 1 95 1 241 1 367 3 148 1 34 1 207 1 342 1 369 1 266 1 98 2 373 4 244 4 210 1 53 1 216 5 268 1 376 1 130 1 103 1 38 1 80 1 133 1 250 1 109 2 224 1 225 2 84 1 178 5 157 2 
227 1 274 1 229 1 278 1 180 3 181 2 117 1 28 2 91 1 49 3 280 1 93 1 123 1 95 1 241 1 367 3 148 1 34 1 207 1 342 1 369 1 266 1 98 2 373 4 244 4 210 1 53 1 216 5 268 1 376 1 130 1 103 1 38 1 80 1 133 1 250 1 109 2 224 1 225 2 84 1 178 5 157 2 
274 1 227 1 229 1 180 2 91 1 49 2 280 1 93 1 51 2 95 1 241 1 148 1 342 1 244 4 53 1 103 1 250 1 109 2 157 2 160 1 117 1 367 2 34 1 207 1 266 1 210 1 373 4 212 1 216 4 170 2 268 1 376 1 130 1 80 1 133 1 379 2 224 1 225 2 178 4 
62 3 331 1 255 1 89 1 182 1 166 2 94 1 143 1 147 1 33 2 340 1 209 2 189 1 100 6 344 1 190 1 317 2 9 1 128 1 292 1 294 1 176 1 220 3 44 1 156 1 355 1 
226 1 62 6 255 2 27 1 2 2 67 1 182 2 183 1 166 1 185 1 306 1 283 3 143 2 33 2 340 1 125 1 209 1 189 11 313 2 100 14 190 11 344 4 317 4 9 1 128 2 292 2 248 1 15 1 16 1 176 2 220 8 353 3 199 1 
298 1 301 1 229 1 62 1 113 1 231 1 88 1 27 1 118 1 182 1 166 1 235 1 363 1 143 1 6 1 243 1 242 1 265 1 188 1 125 1 100 2 347 1 344 1 9 1 317 2 128 1 292 1 248 1 102 1 173 1 103 2 321 1 132 1 133 2 176 1 20 1 220 1 61 1 
328 1 229 1 231 2 88 3 89 1 2 2 182 3 235 1 94 1 143 3 147 1 340 3 242 1 243 2 188 2 189 7 149 2 100 20 347 3 190 7 344 7 9 3 292 3 248 1 102 2 294 1 103 3 20 2 296 1 156 1 199 2 61 3 301 1 62 10 113 1 255 3 202 2 27 1 118 2 166 2 304 2 120 1 363 2 306 4 33 8 168 2 125 1 209 4 313 2 317 6 128 3 173 1 132 2 133 3 176 3 220 10 323 2 44 1 326 1 
276 1 229 1 301 2 62 1 113 1 231 3 88 8 27 1 182 2 235 1 282 1 3 1 143 2 7 2 341 1 124 1 125 1 100 2 347 8 317 4 9 2 128 2 292 2 151 1 102 2 173 1 103 1 195 1 132 2 270 1 133 1 176 2 20 2 220 1 82 1 221 1 326 1 355 1 61 7 
229 1 62 2 255 1 2 1 182 1 235 1 364 1 143 1 33 1 340 1 209 1 189 1 313 1 100 3 344 1 190 1 317 2 9 1 128 1 292 1 248 1 173 1 103 1 14 1 131 1 133 1 176 1 220 1 199 1 
189 1 313 1 100 2 344 1 190 1 9 1 317 2 128 1 255 1 292 1 182 1 306 1 336 1 143 1 176 1 220 2 33 1 355 1 
209 1 189 1 100 2 62 2 344 1 190 1 9 1 317 2 128 1 292 1 182 1 143 1 176 1 219 1 33 1 199 1 355 1 340 1 
62 2 255 1 2 1 182 1 306 1 143 1 33 2 340 1 209 1 313 1 189 2 100 4 190 2 344 2 317 2 9 1 128 1 292 1 176 1 220 2 199 1 355 1 
189 1 313 1 100 2 344 1 190 1 9 1 317 2 128 1 255 1 292 1 182 1 306 1 336 1 143 1 176 1 220 2 221 1 33 1 
209 1 189 1 100 2 62 2 344 1 190 1 9 1 317 2 128 1 292 1 182 1 143 1 176 1 219 1 221 1 33 1 199 1 340 1 
62 2 255 1 2 1 182 1 306 1 143 1 33 2 340 1 209 1 313 1 189 2 100 4 190 2 344 2 317 2 9 1 128 1 292 1 176 1 220 2 221 1 199 1 
62 2 255 1 2 1 182 1 306 1 143 1 33 2 340 1 209 1 313 1 189 2 100 4 190 2 344 2 317 2 9 1 128 1 292 1 176 1 220 2 199 1 
301 1 62 1 231 1 88 1 27 1 118 1 182 1 166 1 304 1 363 1 143 1 243 1 125 1 188 1 100 2 347 1 9 1 317 2 128 1 292 1 102 1 103 1 132 1 133 1 176 1 220 1 20 1 61 1 
301 1 62 1 231 1 88 1 27 1 182 1 166 1 165 1 142 1 143 1 243 1 125 1 188 1 100 2 347 1 9 1 317 2 128 1 292 1 102 1 103 1 132 1 133 1 176 1 220 1 20 1 325 1 61 1 
62 2 255 1 2 1 182 1 306 1 143 1 33 2 340 1 209 1 313 1 189 2 100 4 190 2 344 2 317 2 9 1 128 1 292 1 248 1 176 1 220 2 199 1 
62 2 255 1 231 1 88 1 2 1 118 1 182 1 304 1 363 1 306 1 143 1 33 2 168 1 340 1 243 1 124 1 209 1 188 1 189 2 313 1 100 4 344 2 190 2 347 1 9 1 317 2 128 1 292 1 102 1 103 1 132 1 133 1 176 1 220 2 20 1 199 1 61 1 
136 1 229 1 62 1 255 1 2 1 182 1 235 1 306 1 143 1 33 1 340 1 313 1 189 1 100 3 190 1 344 1 317 2 9 1 128 1 292 1 248 1 173 1 103 1 14 1 131 1 133 1 176 1 220 2 199 1 
159 2 62 10 255 3 233 1 2 3 182 2 183 1 333 1 185 1 283 1 306 3 238 1 143 2 146 2 284 1 70 1 33 6 340 3 370 1 209 3 372 1 313 3 100 19 317 4 292 2 129 1 176 2 220 9 353 2 199 3 
24 1 62 12 159 4 255 3 2 3 182 3 183 2 281 1 333 2 236 1 186 2 306 2 283 2 238 1 143 3 5 1 146 1 52 1 33 4 70 1 340 2 370 1 209 2 372 1 313 3 100 26 317 6 292 3 129 2 176 3 106 1 220 14 353 2 199 2 
24 1 159 4 62 21 255 5 89 1 233 1 2 4 182 3 183 3 281 1 333 2 185 1 236 1 186 1 94 1 283 3 306 4 5 1 238 1 143 3 146 1 52 1 147 1 70 1 33 8 340 5 370 1 209 4 372 1 313 4 100 41 317 6 292 3 129 1 294 1 174 1 106 1 176 3 220 20 353 4 44 1 156 1 199 4 
24 1 159 4 62 18 255 5 89 1 233 1 2 4 182 4 183 3 281 1 333 2 185 1 236 1 186 2 94 1 283 3 306 3 5 1 238 1 143 4 146 1 52 1 147 1 70 1 33 7 340 4 370 1 209 4 372 1 313 4 100 38 317 8 292 4 129 1 294 1 174 1 106 1 176 4 220 20 353 4 44 1 156 1 199 3 
24 1 226 2 159 4 62 25 255 8 89 1 2 7 182 2 183 2 281 1 333 1 185 2 236 1 186 1 94 1 283 4 306 7 5 1 238 1 143 2 146 1 52 1 147 1 70 1 33 14 340 8 370 1 209 7 372 1 313 7 100 52 317 4 292 2 129 1 294 1 106 1 176 2 220 27 353 4 44 1 156 1 199 7 
12 1 184 1 371 1 253 1 374 1 114 1 366 1 308 1 43 1 361 1 
377 1 289 1 
97 1 12 1 184 1 114 1 351 1 366 1 291 1 43 1 361 1 
37 1 175 1 
137 1 365 1 63 1 
371 1 244 1 373 1 288 1 228 1 253 1 374 1 277 1 114 1 247 2 361 1 130 1 12 1 184 1 4 1 366 1 43 1 72 1 
371 1 244 1 373 1 288 1 228 1 253 1 374 1 277 1 114 1 247 2 361 1 130 1 12 1 184 1 4 1 366 1 43 1 72 1 
371 1 244 1 373 1 288 1 228 1 253 1 374 1 277 1 114 1 247 2 361 1 130 1 12 1 184 1 4 1 366 1 43 1 72 1 
37 1 137 1 175 1 
37 1 137 1 175 1 
365 1 63 1 
137 1 365 1 63 1 
346 1 66 1 
179 1 228 1 229 2 114 1 66 1 164 1 361 1 166 1 184 1 235 2 366 1 72 1 373 1 244 1 267 1 214 1 346 1 289 1 247 1 249 1 12 1 173 2 103 2 133 2 377 1 22 1 43 1 
276 1 229 2 87 1 62 1 231 1 88 2 27 1 182 1 143 1 7 2 341 1 8 1 125 1 75 1 100 2 347 2 315 1 9 1 317 2 128 1 292 1 248 1 102 1 152 1 103 2 132 1 133 2 176 1 20 1 220 1 61 2 
99 1 347 2 161 1 88 2 54 1 302 1 132 1 79 1 121 1 322 1 239 1 19 2 20 1 222 1 45 1 326 1 61 2 339 1 124 1 
99 1 329 1 347 1 161 1 88 1 54 1 302 1 79 1 132 1 121 1 239 1 19 2 20 1 222 1 45 1 326 1 61 1 
301 1 347 1 231 1 88 1 360 1 102 1 3 1 195 1 132 1 79 1 240 1 20 1 61 1 339 1 
99 1 347 1 161 1 88 1 54 1 302 1 79 1 132 1 121 1 322 1 239 1 19 2 20 1 222 1 45 1 326 1 61 1 339 1 
50 1 
130 1 280 1 25 1 271 1 331 1 117 1 268 1 
181 1 117 1 28 1 280 1 93 1 123 1 34 1 342 1 98 1 244 1 373 1 268 1 130 2 80 1 379 1 225 1 178 1 
232 1 231 10 88 3 2 2 280 8 93 4 144 2 340 2 342 4 188 3 244 5 98 6 149 2 347 3 102 3 56 2 57 2 350 1 105 2 20 4 199 2 61 3 200 6 25 1 301 1 26 2 255 2 64 1 117 2 358 6 29 1 206 2 122 1 263 2 167 2 34 4 124 1 311 3 73 2 368 2 373 5 74 2 313 2 78 1 268 9 130 8 132 3 80 4 271 1 379 12 224 2 178 5 225 3 85 1 
24 1 200 5 26 1 255 2 358 5 117 2 256 1 2 2 183 1 281 1 280 5 93 2 283 1 144 1 5 1 206 2 52 1 34 2 340 2 342 2 169 1 373 1 244 1 98 3 313 2 268 8 130 5 80 2 350 1 106 1 379 6 353 1 178 1 225 1 199 2 
229 1 255 2 47 1 280 2 235 1 93 1 94 1 144 1 206 2 241 1 147 1 34 1 340 1 342 1 369 1 373 1 244 1 191 1 268 2 173 1 103 1 294 1 295 1 14 1 80 1 133 1 381 1 135 1 
342 1 25 1 117 1 268 1 130 1 280 1 80 1 93 1 271 1 34 1 
200 5 98 5 313 2 149 1 255 2 358 5 2 2 268 5 130 5 280 5 144 1 206 2 379 10 199 2 340 2 
130 1 373 1 244 1 117 1 178 1 225 1 
111 1 301 2 26 2 232 2 231 1 64 1 88 4 280 2 3 1 93 2 34 2 342 1 244 3 373 3 211 1 347 4 268 2 102 1 195 1 132 1 80 2 350 2 20 1 107 1 223 1 23 1 178 4 225 2 61 4 
301 1 229 2 62 1 231 1 88 1 27 1 118 1 182 1 166 1 235 2 304 1 363 1 143 1 310 1 243 1 188 1 100 1 347 1 317 2 9 1 128 1 292 1 191 1 102 1 173 2 103 3 14 2 132 1 133 3 176 1 20 1 61 1 
342 1 200 2 98 2 26 1 89 1 358 2 117 2 268 1 130 4 280 2 80 1 93 1 350 1 379 4 34 1 
55 1 184 1 43 1 
55 1 184 1 43 1 
184 1 253 1 346 1 150 1 43 1 
55 1 184 1 43 1 
184 1 320 1 43 1 
184 1 320 1 43 1 
184 1 320 1 43 1 
184 1 43 1 
114 1 366 1 
209 2 62 4 100 8 317 4 255 1 89 1 292 2 182 2 294 1 186 1 94 1 306 1 143 2 176 2 220 4 33 3 147 1 156 1 44 1 340 1 
209 2 62 3 100 6 331 1 255 1 89 1 294 1 94 1 220 3 147 1 33 2 156 1 44 1 340 1 
209 1 313 1 62 2 100 4 317 2 255 1 292 1 2 1 182 1 306 1 17 1 143 1 176 1 220 2 33 2 199 1 340 1 
209 1 313 1 62 4 100 7 255 1 2 1 183 1 185 1 283 1 306 1 220 3 353 2 33 2 199 1 340 1 
226 1 62 12 255 3 89 1 2 2 182 2 185 1 186 2 94 1 306 4 283 2 143 2 147 2 33 9 340 3 209 5 313 2 100 23 317 4 292 2 294 2 16 1 176 2 220 11 353 2 155 1 44 1 156 1 199 2 
100 1 62 1 353 1 
100 1 283 1 220 1 
209 2 313 1 149 1 62 3 100 6 317 2 255 1 292 1 2 1 182 1 306 1 143 1 17 1 176 1 220 3 33 3 199 1 340 1 
24 1 62 6 255 2 2 2 182 1 183 1 281 1 306 1 283 1 5 1 143 1 52 1 70 1 33 2 340 2 209 1 313 2 100 12 317 2 292 1 176 1 106 1 220 6 353 1 199 2 
294 1 209 1 306 1 62 3 100 6 94 1 220 3 255 1 33 2 147 1 340 1 
209 1 62 2 100 3 317 2 292 1 182 1 294 1 186 1 306 1 143 1 176 1 220 1 33 2 147 1 155 1 44 1 156 1 
209 3 100 10 62 5 317 2 255 2 292 1 182 1 294 2 306 2 94 1 143 1 176 1 220 5 70 1 147 2 33 5 381 1 340 2 
313 1 100 2 317 2 255 1 292 1 182 1 306 1 143 1 176 1 220 2 70 1 33 1 
209 1 313 1 62 2 100 4 317 2 255 1 292 1 2 1 182 1 306 1 143 1 176 1 220 2 33 2 70 1 199 1 340 1 
209 1 62 2 100 3 317 6 292 3 233 1 182 3 294 1 186 1 306 1 143 3 176 3 220 1 70 1 147 1 33 2 155 1 
327 1 62 18 255 5 89 1 233 1 2 3 182 5 183 1 185 1 186 2 94 2 283 3 306 5 143 5 147 3 70 1 33 12 340 5 312 1 209 7 313 3 100 34 101 1 317 10 292 5 294 3 17 1 176 5 220 16 353 4 155 1 44 1 156 1 199 3 
62 4 255 1 89 1 182 1 183 1 283 1 94 1 5 1 143 1 70 1 147 1 33 2 340 1 209 2 100 8 317 2 292 1 294 1 176 1 220 4 353 1 156 1 44 1 
62 5 255 2 89 1 2 1 182 2 183 1 185 1 94 1 283 1 306 1 5 1 143 2 147 1 70 1 33 3 340 1 209 2 313 1 100 11 317 4 292 2 294 1 17 1 176 2 220 6 353 2 44 1 156 1 
24 1 62 10 255 3 89 1 2 2 182 3 183 1 281 1 186 1 94 1 306 1 283 1 5 1 143 3 52 1 147 1 70 1 33 4 340 3 209 3 313 2 100 19 317 6 292 3 294 1 17 1 176 3 106 1 220 9 353 1 44 1 156 1 199 2 
24 1 62 7 255 3 89 1 2 2 182 3 183 1 281 1 186 1 94 1 306 2 283 1 5 1 143 3 52 1 147 1 70 1 33 5 340 2 209 3 313 2 100 17 317 6 292 3 294 1 17 1 176 3 106 1 220 10 353 1 44 1 156 1 199 1 
62 4 255 1 89 1 182 1 183 1 283 1 94 1 5 1 143 1 70 1 147 1 33 2 340 1 209 2 100 8 317 2 292 1 294 1 176 1 220 4 353 1 156 1 44 1 
24 1 62 6 255 2 2 2 182 1 183 1 281 1 306 1 283 1 5 1 143 1 52 1 70 1 33 2 340 2 209 1 313 2 100 12 317 2 292 1 176 1 106 1 220 6 353 1 199 2 
24 1 62 8 255 3 89 1 2 2 182 4 183 1 281 1 186 2 94 1 306 2 283 1 5 1 143 4 52 1 147 1 70 1 33 5 340 2 209 3 313 2 100 18 317 8 292 4 294 1 17 1 176 4 106 1 220 10 353 1 44 1 156 1 199 1 
24 1 62 7 255 3 233 1 2 3 182 4 183 1 281 1 186 2 306 3 283 1 5 1 143 4 52 1 70 1 33 6 340 2 209 3 313 3 100 16 317 8 292 4 176 4 106 1 220 9 353 1 199 2 
209 3 62 4 100 7 255 1 294 3 306 3 94 1 220 3 147 3 33 6 156 1 44 2 340 1 
24 1 62 8 255 3 89 1 233 1 2 2 182 4 183 1 281 1 186 2 94 1 306 1 283 1 5 1 143 4 52 1 147 1 70 1 33 4 340 2 209 3 313 2 100 18 317 8 292 4 294 1 176 4 106 1 220 10 353 1 44 1 156 1 199 1 
166 1 103 1 266 1 269 1 229 1 133 1 138 1 
266 1 229 1 127 1 345 1 215 1 138 1 166 1 103 1 269 1 133 1 104 1 297 1 
195 1 3 1 132 1 301 1 347 1 20 1 231 1 331 1 88 1 102 1 61 1 
188 1 229 1 301 1 113 1 347 1 231 1 88 1 118 1 102 1 166 1 173 1 235 1 103 2 132 1 133 2 20 1 243 1 61 1 
229 2 113 1 232 1 231 3 88 1 118 1 166 1 235 1 95 1 241 1 243 1 368 1 188 2 210 1 347 1 102 2 173 2 103 2 132 1 133 2 105 1 20 1 61 1 
229 2 113 1 115 1 232 1 231 3 88 2 166 1 235 1 142 1 95 1 241 1 243 1 368 1 188 2 210 1 347 2 102 2 173 2 103 2 132 1 133 2 105 1 20 1 61 2 
311 1 368 1 188 1 244 2 373 2 301 1 347 3 115 1 232 1 231 4 162 1 88 3 117 1 102 1 130 1 13 1 132 1 105 1 20 1 167 1 224 1 178 1 61 3 
311 1 368 1 73 1 188 1 244 2 373 2 301 1 347 3 115 1 232 1 231 4 88 3 117 1 102 1 130 1 132 1 105 1 20 1 167 1 224 1 178 1 61 3 
132 1 347 1 20 1 88 1 82 1 61 1 
188 1 301 2 347 7 217 1 231 3 88 7 151 1 192 1 102 2 348 1 282 1 29 1 132 2 270 1 20 3 82 1 7 1 326 1 341 1 124 1 61 6 
229 1 231 1 88 1 89 1 182 2 235 1 94 1 143 2 147 1 243 1 340 1 188 1 189 1 100 6 344 1 347 1 190 1 9 2 292 2 248 1 152 1 102 1 103 2 294 1 20 1 156 1 61 1 62 3 113 1 255 1 118 1 166 2 304 1 363 1 33 2 168 1 124 1 209 2 317 4 128 2 173 1 132 1 133 2 176 2 220 3 323 1 44 1 
25 1 301 1 231 2 64 1 88 1 117 1 164 1 280 1 93 2 263 1 167 1 34 2 342 2 311 1 73 1 373 3 244 3 74 1 347 1 268 1 130 1 80 2 56 1 271 1 224 1 178 2 225 1 61 1 
188 1 347 2 231 2 88 2 78 1 102 1 29 1 132 1 20 2 82 1 167 1 124 1 61 2 
314 1 301 1 347 4 115 1 231 1 88 4 102 1 3 1 195 1 132 1 20 1 61 4 124 1 
188 1 347 2 245 1 217 1 232 1 231 1 88 2 116 1 102 1 348 1 120 1 132 1 20 2 61 2 
99 1 132 1 301 1 121 1 347 1 19 1 20 1 222 1 88 1 61 1 
75 1 347 2 231 1 88 2 102 1 132 1 20 1 124 1 61 2 326 1 341 1 
314 1 301 1 347 5 232 1 231 3 88 5 102 2 282 1 195 1 3 1 132 2 270 1 20 2 61 4 124 1 341 1 
314 1 301 1 347 5 232 1 231 3 88 5 257 1 102 2 195 1 3 1 132 2 270 1 20 2 61 4 124 1 341 1 
188 1 229 1 301 1 113 1 347 1 231 1 88 1 102 1 166 1 173 1 235 1 103 2 132 1 133 2 142 1 20 1 243 1 61 1 
188 1 347 1 217 1 232 1 231 1 88 1 192 1 102 1 348 1 29 1 132 1 20 2 61 1 
166 1 332 1 357 1 201 1 324 1 
210 1 244 2 373 2 357 2 46 1 201 2 117 1 279 1 218 1 164 1 166 1 130 1 332 1 250 1 95 1 241 1 338 1 224 1 324 2 
8 1 229 1 87 1 315 1 201 1 103 1 332 1 133 1 324 1 
332 1 338 1 218 1 
193 1 300 1 331 1 354 1 
193 1 300 1 252 1 81 1 354 1 205 1 96 1 
356 1 337 1 96 1 
252 3 300 1 76 1 246 2 205 1 359 1 193 1 40 1 154 1 81 1 354 1 96 3 
193 1 300 1 252 2 316 1 81 1 354 1 139 1 205 1 96 2 
252 1 76 1 161 1 205 1 39 1 193 1 121 1 81 1 19 1 177 1 96 1 
193 1 300 1 252 1 76 1 81 1 205 1 96 1 
300 2 252 1 76 1 81 1 354 1 205 1 96 1 
287 1 300 1 252 2 76 1 205 2 193 1 260 1 81 2 32 1 96 2 
300 1 252 3 343 1 76 1 316 2 205 1 258 1 193 2 81 1 177 1 354 1 309 1 96 3 
99 1 300 1 252 2 76 1 316 1 161 1 205 1 302 1 362 1 193 1 121 1 81 1 19 2 354 1 96 2 
300 1 252 4 76 1 316 2 139 1 205 2 48 1 258 1 193 2 81 2 177 1 354 1 96 4 
193 1 300 1 252 1 76 1 81 1 354 1 205 1 96 1 
300 2 252 4 246 1 316 2 359 1 205 1 258 1 193 3 154 1 81 1 352 1 177 1 354 2 96 4 
300 1 252 2 76 1 316 1 0 1 205 1 92 1 193 1 81 1 354 1 96 2 273 1 
252 3 300 1 76 1 246 2 359 1 205 1 193 1 154 2 81 1 354 1 96 3 264 1 
251 2 193 2 126 1 42 1 
194 1 252 1 76 1 81 1 205 1 96 1 
193 1 300 1 343 1 252 2 76 1 316 1 81 1 354 1 205 1 96 2 
286 1 
193 1 300 1 252 1 76 1 81 1 354 1 205 1 96 1 
252 3 300 1 343 1 76 1 316 1 246 1 205 1 193 1 81 1 354 1 96 3 
193 1 352 1 177 1 258 1 
193 1 300 1 

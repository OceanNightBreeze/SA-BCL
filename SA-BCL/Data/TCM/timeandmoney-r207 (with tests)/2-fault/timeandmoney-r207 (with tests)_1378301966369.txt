#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 231 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | OPERATOR | 4411 | > -> <=
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
355 1 213 1 232 9 68 5 91 1 169 1 361 1 197 1 28 1 313 1 29 1 147 2 273 2 52 6 175 2 149 4 181 1 277 3 128 1 79 1 223 2 80 2 332 1 376 9 157 2 84 2 334 1 19 1 
355 1 213 1 232 9 68 5 91 1 169 1 361 1 197 1 28 1 313 1 29 1 147 2 273 2 52 6 175 2 149 4 181 1 277 3 128 1 79 1 223 2 80 2 332 1 376 9 157 2 84 2 334 1 19 1 
355 1 213 1 232 10 68 6 91 1 169 1 361 1 197 1 28 1 313 1 29 1 147 2 273 2 52 7 175 2 149 5 181 1 277 4 128 1 79 1 223 2 80 2 332 1 376 10 157 2 84 2 334 1 19 1 
355 1 213 1 232 7 68 4 91 1 169 1 361 1 197 1 28 1 313 1 29 1 147 2 273 2 52 4 175 2 149 3 181 1 277 2 128 1 79 1 223 2 80 1 376 7 157 2 84 2 334 1 19 1 
273 1 52 3 175 1 149 2 232 4 181 1 68 3 91 1 277 1 79 1 223 1 80 2 332 1 157 1 376 4 313 1 29 1 147 1 
273 1 232 2 54 1 68 1 181 1 79 1 361 1 223 1 267 1 157 1 376 2 28 1 313 1 84 1 107 1 147 1 
273 2 52 1 149 1 232 3 181 1 68 2 277 1 79 1 197 1 157 2 376 3 313 1 84 1 
232 9 68 5 91 1 169 1 143 1 197 1 313 1 29 1 147 1 52 7 273 2 175 1 149 4 181 1 277 3 79 1 223 1 80 2 376 9 157 2 332 1 84 1 334 1 87 1 
232 9 68 5 91 1 169 1 143 1 197 1 313 1 29 1 147 1 52 7 273 2 175 1 149 4 181 1 277 3 79 1 223 1 80 2 376 9 157 2 332 1 84 1 334 1 87 1 
306 1 18 1 291 1 
264 1 18 1 9 2 
293 2 162 2 110 1 296 2 322 2 140 1 30 2 15 2 
230 1 162 2 110 1 193 1 140 1 286 1 44 2 141 2 114 2 214 1 234 1 72 1 235 1 268 2 121 1 8 1 315 1 30 2 241 1 293 2 368 1 294 1 296 3 322 3 180 1 324 1 15 2 129 1 279 1 327 1 186 1 333 2 353 1 378 1 303 1 225 1 138 1 
25 1 293 1 162 1 219 1 296 1 322 1 140 1 30 1 15 1 335 1 
211 1 177 1 219 1 307 1 42 1 322 1 296 1 45 1 18 1 198 1 291 1 30 1 228 1 347 1 
211 1 293 1 162 1 177 2 219 1 42 1 322 1 296 1 15 1 18 1 198 1 291 1 30 1 228 2 347 1 
59 1 177 1 276 1 340 1 228 1 
59 1 18 1 177 2 364 1 276 1 291 1 108 1 228 2 
177 1 276 1 228 1 
293 1 177 1 162 1 219 1 322 1 296 1 140 1 15 1 59 1 246 1 25 1 30 1 228 1 335 1 
18 1 
59 1 367 1 18 1 177 2 276 1 291 1 108 1 228 2 
188 1 97 1 34 1 177 5 203 1 244 2 66 1 67 2 233 2 276 2 373 1 115 1 59 2 118 1 18 1 154 1 291 1 108 1 228 5 
306 1 110 1 
293 1 162 1 53 1 110 2 322 2 296 2 15 1 302 1 30 2 
132 1 134 1 160 1 
230 1 294 1 110 1 296 1 322 1 180 1 286 1 141 1 129 1 279 1 327 1 300 1 268 1 333 1 378 1 138 1 
293 1 230 1 162 1 294 1 192 1 322 2 296 2 286 1 180 1 260 1 141 1 279 1 129 1 327 1 134 1 268 1 333 1 378 1 138 1 30 1 
293 3 162 3 192 1 110 1 296 3 322 3 30 3 15 1 
25 1 293 1 162 1 219 1 296 1 322 1 30 1 
293 1 162 1 219 1 53 1 302 1 296 1 322 1 30 1 15 1 
211 1 230 1 162 3 192 1 110 1 42 1 193 1 286 1 167 1 260 1 140 1 44 1 141 1 114 2 234 1 72 1 235 1 198 1 268 1 121 1 8 1 30 3 347 1 241 1 293 3 177 1 294 1 219 1 296 4 322 4 180 1 323 1 324 1 15 2 279 1 129 1 327 1 186 1 302 1 333 1 378 1 225 1 138 1 228 1 
293 1 162 1 192 1 307 1 110 1 296 2 322 2 287 1 30 2 
211 1 293 3 177 1 162 3 219 1 192 2 42 1 322 3 296 3 260 1 323 1 15 1 265 1 18 1 198 1 302 1 30 3 228 1 347 1 
293 2 162 2 192 1 322 2 296 2 15 1 132 1 134 1 302 1 30 2 
230 1 294 1 110 1 296 1 322 1 180 1 286 1 141 1 129 1 279 1 327 1 268 1 333 1 378 1 138 1 
230 1 294 1 110 1 296 1 322 1 286 1 141 1 129 1 279 1 268 1 333 1 62 1 7 1 378 1 138 1 
193 1 288 1 89 1 44 4 168 1 114 2 214 2 234 1 235 1 121 1 8 1 240 1 270 1 316 1 346 1 241 1 13 1 179 1 151 1 132 2 186 2 134 2 40 1 160 2 
293 1 162 1 170 1 219 1 296 1 322 1 30 1 347 1 
293 4 162 4 191 1 192 2 307 1 110 1 302 1 296 5 322 5 260 1 287 1 226 1 30 5 15 1 
25 1 293 2 162 2 170 1 219 1 296 2 322 2 30 2 
131 1 182 1 
131 1 182 1 
345 1 261 1 
345 1 261 1 
345 1 261 1 
278 1 131 1 182 1 
278 1 131 1 182 1 
131 1 58 1 182 1 
131 2 33 1 369 1 345 1 261 1 182 2 
278 1 131 1 182 1 
131 1 185 1 182 1 
131 1 185 1 182 1 
131 1 185 1 182 1 
283 2 33 1 177 2 24 1 35 2 359 1 297 2 70 1 14 1 182 2 131 2 144 1 18 1 153 3 145 1 135 1 236 2 51 2 228 2 
283 1 162 2 24 1 110 1 43 1 215 1 30 2 51 1 293 2 177 1 35 1 322 2 296 2 320 1 297 1 182 1 58 1 131 1 153 1 156 1 253 1 63 1 137 1 228 1 
175 1 223 1 147 1 
223 1 107 1 147 1 
175 2 77 1 223 3 50 1 107 1 365 1 
175 1 77 1 223 2 266 1 50 1 107 1 
175 1 77 1 223 2 50 2 107 1 
1 1 67 1 288 1 233 1 115 2 264 1 196 1 118 1 215 1 9 3 146 1 291 1 10 1 316 1 12 1 97 3 348 2 177 5 244 1 179 1 220 2 151 1 103 1 276 1 59 4 18 2 251 2 156 1 105 1 253 1 108 1 228 5 
189 1 188 1 1 2 190 1 67 2 288 3 233 2 340 5 115 6 264 3 196 1 118 1 9 9 94 1 291 1 10 2 316 3 97 8 348 6 177 9 100 1 244 2 275 5 179 3 151 3 276 6 104 1 59 7 18 5 251 6 81 1 105 3 253 4 108 1 228 9 
188 1 1 1 67 1 288 1 233 1 115 2 264 2 146 1 9 4 291 1 10 1 316 1 97 3 177 3 348 2 244 1 179 1 220 1 151 1 103 1 59 2 18 3 251 2 105 1 253 1 228 3 
189 1 188 1 1 1 67 1 288 2 233 1 115 4 264 3 9 7 146 1 291 1 10 1 316 2 97 5 348 4 177 4 100 1 244 1 179 2 220 2 151 2 103 1 104 1 59 3 18 4 251 4 105 2 253 2 228 4 
306 1 26 1 230 1 
230 1 272 1 
299 1 
230 1 378 1 
299 1 26 2 230 3 294 1 378 1 336 1 200 1 
230 1 294 1 378 1 
230 1 2 1 
32 1 292 1 99 1 176 1 13 2 178 1 288 1 44 7 214 4 249 1 186 3 331 1 377 1 269 2 316 1 346 3 139 1 
32 1 292 1 99 1 176 1 13 2 178 1 288 1 44 7 214 4 249 1 186 3 331 1 377 1 269 2 316 1 346 3 139 1 
32 1 292 1 99 1 176 1 13 2 178 1 150 1 288 1 44 7 214 4 249 1 186 3 331 1 377 1 269 2 316 1 346 3 139 1 
258 4 65 1 288 4 44 31 71 1 114 2 142 1 234 1 214 16 235 1 199 1 8 1 269 3 316 4 346 10 32 5 241 1 292 1 99 2 176 2 13 5 178 1 179 3 151 3 325 1 183 1 249 1 186 15 252 1 331 2 105 3 280 3 377 2 139 1 
288 1 44 9 114 4 234 2 214 5 235 2 8 2 269 2 316 1 346 4 241 2 32 1 99 1 176 1 13 3 178 1 325 1 249 1 186 4 331 1 377 1 227 1 229 1 139 1 
232 2 286 1 68 1 141 1 312 1 216 1 268 1 313 1 314 1 365 1 147 1 52 1 273 1 175 1 123 1 148 1 242 1 36 1 181 1 79 1 152 1 129 1 37 1 223 2 374 1 333 1 376 2 157 1 84 1 107 1 
232 3 286 1 68 1 141 1 312 1 216 1 268 1 271 1 365 1 147 1 273 1 52 2 175 1 123 1 148 1 242 1 181 1 207 1 79 1 152 1 129 1 247 1 37 1 223 2 374 1 333 1 376 3 157 1 84 1 107 1 
232 2 286 1 68 1 141 1 312 1 216 1 268 1 271 1 365 1 147 1 52 2 123 1 175 1 148 1 242 1 181 1 79 1 152 1 129 1 247 1 223 2 333 1 376 2 84 1 107 1 
273 1 230 1 242 2 286 1 232 1 141 1 207 1 326 1 152 2 129 1 343 1 344 1 216 2 268 1 157 1 376 1 333 1 84 2 378 1 187 1 138 1 21 1 379 1 
232 1 286 1 141 1 312 1 216 1 268 1 313 1 314 1 365 1 147 1 273 1 175 1 123 1 148 1 242 1 152 1 129 1 247 1 37 1 223 2 374 1 333 1 376 1 157 1 84 1 107 1 
309 1 
1 1 230 1 42 1 339 1 286 1 233 1 141 2 45 1 343 1 4 1 198 1 9 2 291 1 347 1 201 1 97 2 243 1 244 1 296 1 205 4 16 2 350 2 18 2 352 2 108 3 20 1 211 1 161 2 356 2 67 1 307 1 111 1 69 1 115 2 264 2 118 1 268 2 75 2 31 1 30 1 174 1 177 5 219 1 322 1 276 6 221 1 129 1 330 1 333 2 375 1 378 1 281 2 138 2 228 5 379 1 
211 1 307 1 42 1 339 1 45 1 4 1 198 1 75 1 30 1 31 1 347 1 367 1 177 3 219 1 296 1 322 1 276 2 221 1 205 2 20 1 108 1 228 3 
211 1 307 1 42 1 339 1 45 1 4 1 198 1 291 1 30 1 31 1 347 1 367 1 177 3 219 1 296 1 322 1 276 1 221 1 205 3 18 1 352 1 20 1 108 1 228 3 
211 1 307 1 42 1 339 1 45 1 4 1 198 1 75 1 291 1 30 1 31 1 347 1 367 1 177 3 219 1 296 1 322 1 276 2 221 1 205 3 16 1 18 1 352 1 108 1 20 1 228 3 
42 1 339 1 233 1 45 1 4 1 198 1 237 1 291 5 347 1 95 1 201 1 97 1 244 1 296 1 205 6 16 4 350 2 18 5 351 1 352 4 108 3 20 1 211 1 161 2 356 2 109 1 307 1 67 1 115 1 264 2 118 1 218 1 75 4 31 1 30 1 174 1 367 1 177 5 219 1 322 1 276 7 221 1 281 2 228 5 
42 1 339 1 233 1 45 1 4 1 198 1 9 2 291 1 347 1 201 1 97 1 244 1 296 1 205 4 16 2 350 2 18 2 352 2 20 1 108 2 211 1 161 2 356 2 307 1 67 1 69 1 115 1 264 2 118 1 75 2 30 1 31 1 174 1 177 4 219 1 322 1 276 4 221 1 281 2 228 4 
211 1 161 2 356 2 307 1 67 1 42 1 339 1 233 1 45 1 115 1 264 2 118 1 4 1 198 1 218 1 291 1 75 2 30 1 31 1 95 1 347 1 174 1 201 1 97 1 177 4 244 1 219 1 296 1 322 1 276 4 221 1 205 4 16 2 350 2 18 1 351 1 352 2 281 2 108 2 20 1 228 4 
211 1 161 2 356 2 307 1 67 1 42 1 339 1 233 1 45 1 115 1 264 2 118 1 4 1 198 1 218 1 291 1 75 2 30 1 31 1 95 1 347 1 174 1 201 1 97 1 177 4 244 1 219 1 296 1 322 1 276 4 221 1 205 4 16 2 350 2 18 1 351 1 352 2 281 2 108 2 20 1 228 4 
211 1 161 2 307 1 67 1 42 1 339 1 233 1 310 1 45 1 115 1 118 1 4 1 198 1 9 2 291 1 75 2 30 1 31 1 95 1 347 1 174 1 97 1 177 4 204 1 244 1 219 1 274 1 296 1 322 1 276 4 245 2 221 1 78 2 205 4 16 2 350 2 18 1 352 2 108 2 20 1 228 4 
211 1 161 2 356 2 67 1 307 1 42 1 339 1 233 1 45 1 115 1 264 2 118 1 4 1 198 1 237 1 218 1 291 1 75 3 30 1 31 1 95 1 347 1 174 1 201 1 97 1 177 4 244 1 219 1 296 1 322 1 276 5 221 1 205 5 16 3 350 2 18 1 351 1 352 3 281 2 108 2 20 1 228 4 
211 1 161 2 356 2 67 1 307 1 42 1 339 1 233 1 45 1 115 1 264 2 118 1 4 1 198 1 237 1 218 1 291 1 75 3 30 1 31 1 95 1 347 1 174 1 201 1 97 1 177 4 244 1 219 1 296 1 322 1 276 5 221 1 205 5 16 3 350 2 18 1 351 1 352 3 281 2 108 2 20 1 228 4 
42 1 339 1 233 1 45 1 4 1 198 1 9 2 291 1 347 1 97 1 244 1 296 1 245 2 205 4 16 2 350 2 18 1 352 2 20 1 108 2 211 1 161 2 307 1 67 1 69 1 115 1 118 1 75 2 30 1 31 1 174 1 177 4 219 1 274 1 322 1 276 4 221 1 78 2 228 4 
306 1 110 2 193 1 288 1 44 6 114 2 234 1 214 3 235 1 121 1 8 1 269 1 346 2 316 1 241 1 13 2 178 1 249 1 132 1 186 3 134 1 331 1 377 1 40 1 139 1 160 1 
258 3 65 1 110 1 193 2 288 1 44 14 46 1 142 1 114 4 234 2 214 8 235 2 121 1 8 2 346 2 316 2 32 1 241 2 13 1 179 2 151 1 324 1 60 1 250 1 132 4 186 6 133 1 134 11 301 1 105 2 280 3 353 1 160 11 
230 1 162 1 192 1 110 1 286 1 193 1 260 1 194 1 141 1 44 2 114 2 234 1 214 1 73 1 235 1 268 1 121 1 8 1 30 1 241 1 293 1 294 1 296 2 322 2 180 1 324 1 279 1 129 1 327 1 132 1 186 1 133 1 300 1 333 1 378 1 353 1 138 1 159 1 
230 2 192 1 193 3 286 2 288 3 141 3 44 20 234 3 3 2 235 3 8 3 346 8 241 3 293 1 13 4 294 2 296 3 151 2 209 1 247 1 249 1 105 2 353 1 160 7 162 1 110 2 260 1 112 2 114 6 214 10 119 1 268 3 121 3 269 1 30 1 316 3 32 4 178 1 322 3 179 2 180 2 324 1 130 1 129 2 279 2 327 2 132 7 186 10 224 2 331 1 133 1 134 7 333 3 377 1 85 2 225 2 378 2 138 1 139 1 
337 1 230 3 162 1 192 1 165 1 308 1 286 2 193 2 141 8 44 2 263 1 114 4 234 2 214 1 116 1 342 1 343 1 235 2 268 8 121 2 8 2 315 2 30 1 241 2 293 1 36 1 296 1 322 1 324 1 208 1 129 2 247 1 186 1 333 7 353 1 378 2 138 2 40 1 379 1 
162 1 193 1 288 1 44 3 114 2 234 1 214 1 235 1 121 1 8 1 290 1 346 1 30 1 316 1 241 1 293 1 13 1 322 1 296 1 179 1 151 1 15 1 132 1 186 2 134 1 133 1 302 1 105 1 160 1 
32 1 241 1 179 1 193 1 89 1 44 2 114 2 234 1 214 2 132 1 235 1 134 1 121 1 8 1 346 1 40 1 316 1 160 1 
241 1 13 1 193 1 151 1 288 1 44 2 114 2 234 1 132 1 235 1 186 2 134 1 121 1 8 1 240 1 346 1 40 1 160 1 
32 1 241 1 13 1 179 1 193 1 288 1 151 1 44 4 114 2 234 1 214 2 132 2 186 2 235 1 134 2 121 1 105 1 8 1 346 2 40 1 316 1 160 2 
32 1 241 1 179 1 193 1 89 1 44 2 114 2 234 1 214 2 342 1 132 1 235 1 134 1 121 1 8 1 346 1 316 1 160 1 
241 1 13 1 193 1 151 1 288 1 44 2 114 2 234 1 342 1 132 1 235 1 186 2 134 1 121 1 8 1 240 1 346 1 160 1 
32 1 241 1 13 1 179 1 193 1 288 1 151 1 44 4 114 2 234 1 214 2 342 1 132 2 186 2 235 1 134 2 121 1 105 1 8 1 346 2 316 1 160 2 
32 1 241 1 13 1 179 1 193 1 288 1 151 1 44 4 114 2 234 1 214 2 132 2 186 2 235 1 134 2 121 1 105 1 8 1 346 2 316 1 160 2 
230 1 110 1 286 1 193 1 44 2 141 1 114 2 214 1 234 1 235 1 268 1 121 1 8 1 241 1 294 1 322 1 296 1 180 1 324 1 279 1 129 1 327 1 186 1 333 1 353 1 378 1 225 1 138 1 
230 1 110 1 286 1 193 1 44 2 141 1 114 2 214 1 234 1 235 1 268 1 121 1 7 1 8 1 173 1 241 1 294 1 322 1 296 1 324 1 279 1 129 1 186 1 62 1 333 1 353 1 378 1 138 1 
32 1 241 1 13 1 179 1 193 1 288 1 151 1 44 4 114 2 234 1 214 2 132 2 186 2 235 1 134 2 133 1 121 1 105 1 8 1 346 2 316 1 160 2 
230 1 286 1 193 1 288 1 44 4 141 1 114 2 214 2 234 1 235 1 268 1 121 1 8 1 346 2 316 1 32 1 241 1 13 1 294 1 179 1 36 1 322 1 296 1 180 1 151 1 279 1 129 1 327 1 132 2 186 2 134 2 333 1 105 1 85 1 225 1 378 1 160 2 
162 1 193 1 288 1 44 3 114 2 234 1 214 2 235 1 121 1 8 1 346 1 30 1 316 1 32 1 241 1 293 1 322 1 296 1 179 1 151 1 56 1 15 1 132 1 186 1 133 1 134 1 302 1 105 1 160 1 
23 2 258 4 65 1 285 1 288 5 44 41 142 3 341 1 114 6 234 3 214 20 48 1 117 1 235 3 5 1 8 3 269 1 316 5 346 8 11 4 241 3 32 4 319 1 13 4 178 1 295 1 179 4 102 1 371 1 151 4 325 1 206 1 249 1 210 1 186 21 61 1 331 1 105 4 280 3 377 1 304 1 227 1 139 1 
23 2 258 4 65 1 285 1 288 4 44 38 142 3 341 1 114 8 234 4 214 20 48 1 117 1 235 4 5 1 8 4 269 1 316 5 346 7 11 4 241 4 32 3 319 1 13 4 178 1 295 1 179 4 102 1 371 1 151 3 325 2 206 1 249 1 210 1 186 18 61 1 331 1 105 4 280 3 377 1 304 1 227 1 139 1 
23 1 258 4 65 2 285 1 288 8 44 52 142 2 341 1 114 4 234 2 214 27 48 1 117 1 235 2 5 1 8 2 269 1 316 8 346 14 11 4 241 2 32 7 319 1 13 7 178 1 295 1 179 7 102 1 371 1 151 7 325 1 249 1 210 1 186 25 331 1 301 2 105 7 280 4 377 1 304 1 227 1 139 1 
23 1 258 2 65 1 288 3 44 19 142 1 341 1 114 4 234 2 214 9 235 2 5 1 8 2 316 3 346 6 11 2 241 2 32 3 13 3 179 3 102 1 151 3 210 2 186 10 61 1 105 3 280 1 39 1 304 1 227 1 
23 2 258 2 285 1 288 2 44 26 341 1 114 6 142 2 234 3 214 14 48 1 117 1 235 3 5 2 8 3 346 4 316 3 11 4 32 2 241 3 319 1 13 2 295 1 179 3 102 1 371 1 151 2 325 2 210 1 186 12 105 3 280 2 304 1 227 1 
283 1 131 1 33 1 163 1 35 1 359 1 297 1 14 1 51 1 182 1 
320 1 58 1 
317 1 41 1 283 1 131 1 212 1 35 1 297 1 51 1 182 1 
283 1 33 1 24 1 177 1 35 1 359 1 297 1 70 1 14 1 182 1 131 1 18 1 153 2 145 1 135 1 236 1 228 1 51 1 
283 1 33 1 24 1 177 1 35 1 359 1 297 1 70 1 14 1 182 1 131 1 18 1 153 2 145 1 135 1 236 1 228 1 51 1 
283 1 33 1 24 1 177 1 35 1 359 1 297 1 70 1 14 1 182 1 131 1 18 1 153 2 145 1 135 1 236 1 228 1 51 1 
278 1 328 1 369 1 
278 1 328 1 369 1 
185 1 83 1 
185 1 369 1 83 1 
43 1 137 1 
283 1 162 2 110 1 43 1 70 1 215 1 74 1 236 1 30 2 51 1 293 2 177 1 35 1 296 2 322 2 320 1 297 1 182 1 58 1 59 1 131 1 153 1 156 1 253 1 63 1 137 1 228 1 
278 1 328 1 
185 1 369 1 83 1 
0 1 230 1 259 1 286 1 308 1 193 1 141 2 44 2 114 2 234 1 214 1 362 1 235 1 268 2 217 1 121 1 8 1 238 1 315 2 30 2 241 1 296 2 322 2 324 1 208 1 129 1 186 1 133 1 333 2 378 1 353 1 
175 1 123 1 127 1 36 1 286 1 141 2 152 1 129 1 247 1 37 1 312 1 223 2 268 2 333 2 255 1 107 1 365 1 147 1 76 1 
175 1 123 1 125 1 286 1 141 1 152 1 129 1 247 1 37 1 312 1 223 2 268 1 333 1 107 1 365 1 147 1 76 1 
230 1 286 1 141 1 152 1 129 1 343 1 344 1 120 1 268 1 333 1 255 1 378 1 138 1 379 1 
175 1 123 1 127 1 286 1 141 1 152 1 129 1 247 1 37 1 312 1 223 2 268 1 333 1 255 1 107 1 365 1 147 1 76 1 
366 1 
306 1 97 1 18 1 34 1 66 1 291 1 115 1 
356 1 67 1 233 1 115 1 264 1 118 1 9 1 291 1 201 1 97 1 177 1 244 1 276 1 18 2 281 1 108 1 228 1 
230 2 244 1 294 1 231 1 67 1 286 1 360 1 233 1 141 1 129 2 118 1 268 1 333 1 378 1 138 1 272 1 336 1 
1 1 258 1 67 2 285 1 233 2 288 2 142 1 115 5 264 3 48 1 117 1 118 2 9 6 291 2 316 2 98 2 97 8 126 1 177 1 348 5 243 1 244 2 295 1 179 2 55 1 370 1 371 1 276 1 151 2 18 5 251 5 105 2 280 1 108 1 228 1 
162 1 357 1 67 1 140 1 233 1 288 1 115 2 25 1 118 1 316 2 30 1 293 1 98 2 97 2 177 1 244 1 219 1 178 1 296 1 322 1 55 1 15 1 246 1 331 1 351 1 377 1 228 1 335 1 
97 1 34 1 244 1 66 1 67 1 233 1 115 1 118 1 18 1 291 1 
98 2 97 5 348 5 179 2 55 1 151 2 288 2 115 5 264 5 3 1 18 5 251 5 105 2 9 10 316 2 
18 1 177 1 276 1 291 1 108 1 228 1 
284 1 188 1 1 2 230 1 67 2 286 1 111 1 233 2 141 4 115 2 118 1 343 1 268 4 172 1 318 2 202 1 97 2 177 3 244 2 243 2 276 4 129 1 330 1 333 4 378 1 138 2 108 2 228 3 379 1 
230 1 162 2 110 1 140 1 286 1 193 1 44 1 141 1 114 2 234 1 72 1 235 1 268 1 121 1 8 1 30 2 241 1 293 2 294 1 296 3 322 3 180 1 324 1 15 2 129 1 279 1 327 1 186 1 333 1 225 1 378 1 138 1 
1 1 97 1 348 2 244 1 243 1 67 1 233 1 115 2 264 2 118 1 18 4 251 2 9 4 269 1 291 2 
22 1 35 1 51 1 
22 1 35 1 51 1 
96 1 35 1 359 1 43 1 51 1 
22 1 35 1 51 1 
136 1 35 1 51 1 
136 1 35 1 51 1 
136 1 35 1 51 1 
35 1 51 1 
131 1 182 1 
258 1 288 1 44 8 142 1 114 2 234 1 214 4 117 1 235 1 8 1 269 1 316 1 346 2 241 1 13 2 178 1 249 1 186 4 331 1 280 1 377 1 227 1 139 1 
258 2 65 1 288 1 44 11 142 1 114 4 234 2 214 6 117 1 235 2 8 2 269 1 316 2 346 3 241 2 32 1 13 2 178 1 179 1 249 1 186 5 331 1 105 1 280 1 377 1 227 1 139 1 305 1 
258 1 285 1 288 3 44 19 142 1 114 6 234 3 214 9 48 1 117 1 235 3 8 3 269 1 316 3 346 4 32 1 241 3 13 3 178 1 295 1 179 2 371 1 151 2 325 1 249 1 186 10 331 1 105 2 280 1 377 1 227 1 139 1 305 1 
258 1 285 1 288 2 44 17 142 1 114 6 234 3 214 10 48 1 117 1 235 3 8 3 269 1 316 3 346 5 32 2 241 3 13 3 178 1 295 1 179 2 151 1 371 1 325 1 249 1 186 7 331 1 105 2 280 1 377 1 227 1 139 1 305 1 
258 1 288 1 44 8 142 1 114 2 234 1 214 4 117 1 235 1 8 1 269 1 316 1 346 2 241 1 13 2 178 1 249 1 186 4 331 1 280 1 377 1 227 1 139 1 
258 1 285 1 288 2 44 12 142 1 114 2 234 1 214 6 48 1 117 1 235 1 8 1 316 2 346 2 32 1 241 1 13 1 295 1 179 2 151 2 371 1 186 6 105 2 280 1 227 1 
258 1 285 1 288 2 44 18 142 1 114 8 234 4 214 10 48 1 117 1 235 4 8 4 269 1 316 3 346 5 32 2 241 4 13 3 178 1 295 1 179 2 371 1 151 1 325 2 249 1 186 8 331 1 105 2 280 1 377 1 227 1 139 1 305 1 
258 1 285 1 288 2 44 16 142 1 114 8 234 4 214 9 48 1 117 1 235 4 8 4 316 3 346 6 32 3 241 4 13 3 295 1 179 3 371 1 151 2 325 2 186 7 61 1 105 3 280 1 227 1 
32 3 13 3 178 1 288 1 44 7 214 3 249 2 186 4 331 3 377 3 346 6 316 1 139 1 
258 1 285 1 288 2 44 18 142 1 114 8 234 4 214 10 48 1 117 1 235 4 8 4 269 1 316 3 346 4 32 1 241 4 13 3 178 1 295 1 179 2 371 1 151 1 325 2 249 1 186 8 331 1 61 1 105 2 280 1 377 1 227 1 139 1 
32 1 241 2 13 2 178 1 288 1 44 8 325 1 114 4 214 4 234 2 249 1 186 4 235 2 331 1 8 2 377 1 269 1 316 1 346 3 139 1 
306 1 13 2 178 1 288 1 44 6 214 3 249 1 186 3 331 1 377 1 269 1 346 2 316 1 139 1 
241 1 32 1 13 1 179 1 288 1 151 1 44 4 114 2 234 1 214 2 186 2 235 1 105 1 8 1 346 2 316 1 305 1 
32 1 258 2 65 1 13 1 179 1 288 1 151 1 44 7 142 1 214 3 186 4 105 1 280 1 316 1 346 2 
258 2 65 1 288 3 44 23 90 1 114 4 214 11 234 2 235 2 8 2 269 1 346 9 316 3 32 4 241 2 13 5 178 1 179 2 151 2 325 2 249 1 60 1 186 12 331 2 105 2 301 1 280 2 377 2 139 1 
258 1 186 1 44 1 
214 1 280 1 44 1 
241 1 32 1 13 2 179 1 151 1 288 1 44 6 114 2 234 1 3 1 214 3 235 1 186 3 105 1 8 1 316 1 346 3 305 1 
258 1 285 1 288 2 44 12 142 1 114 2 234 1 214 6 48 1 117 1 235 1 8 1 316 2 346 2 32 1 241 1 13 1 295 1 179 2 151 2 371 1 186 6 105 2 280 1 227 1 
32 1 13 1 178 1 288 1 44 6 214 3 186 3 331 1 377 1 316 1 346 2 
32 1 241 1 13 1 90 1 44 3 325 1 114 2 214 1 234 1 249 1 186 2 235 1 331 1 8 1 377 1 346 2 139 1 
241 1 32 2 357 1 13 3 178 1 288 2 44 10 114 2 234 1 214 5 235 1 186 5 331 2 8 1 377 2 227 1 346 5 316 2 
241 1 32 1 179 1 44 2 114 2 234 1 214 2 235 1 8 1 227 1 316 1 346 1 
241 1 32 1 13 1 179 1 288 1 151 1 44 4 114 2 234 1 214 2 186 2 235 1 105 1 8 1 227 1 346 2 316 1 
241 3 32 1 13 1 325 1 90 1 44 3 114 6 234 3 214 1 186 2 235 3 61 1 331 1 8 3 377 1 227 1 346 2 
258 4 65 1 288 5 90 1 44 34 71 1 142 1 114 10 234 5 214 16 235 5 199 1 8 5 269 1 316 5 346 12 241 5 32 5 13 7 178 2 179 3 151 3 325 2 183 1 249 1 186 18 331 3 61 1 105 3 280 3 377 3 227 1 139 1 305 1 
307 1 110 1 296 1 322 1 287 1 113 1 30 1 
358 1 307 1 289 1 110 1 296 1 322 1 93 1 287 1 113 1 372 1 30 1 298 1 
129 1 306 1 230 1 343 1 268 1 333 1 286 1 378 1 141 1 138 1 379 1 
293 1 230 1 162 1 294 1 192 1 110 1 322 2 296 2 180 1 286 1 141 1 279 1 129 1 268 1 333 1 378 1 138 1 30 1 
211 1 230 3 162 1 192 1 110 1 2 1 286 1 141 1 268 1 30 2 347 1 318 1 293 2 294 2 219 1 296 2 322 2 180 1 129 1 279 1 333 1 254 1 378 2 
211 1 230 3 162 1 192 1 110 1 2 1 286 1 262 1 141 2 268 2 30 2 347 1 318 1 293 2 294 2 219 1 296 2 322 2 129 1 279 1 62 1 333 2 254 1 378 2 
230 4 2 1 42 1 286 1 262 1 141 3 26 1 268 3 291 1 272 1 318 1 177 2 294 1 276 1 349 1 129 1 18 1 333 3 82 1 254 1 378 1 138 1 228 2 
318 1 230 4 177 2 294 1 42 1 2 1 286 1 262 1 276 1 141 3 129 1 26 1 18 1 268 3 333 3 254 1 378 1 138 1 291 1 64 1 228 2 272 1 
129 1 268 1 333 1 286 1 141 1 263 1 
257 1 337 1 230 3 294 1 165 1 36 1 166 1 308 1 286 2 141 7 263 1 129 3 247 1 116 1 155 1 268 7 333 6 378 2 315 1 138 2 336 1 
0 1 230 1 162 1 192 1 110 2 286 1 193 2 288 1 112 1 44 6 141 1 114 4 214 3 234 2 235 2 268 1 121 2 8 2 269 1 316 1 346 2 30 1 241 2 293 1 13 2 178 1 294 1 296 2 322 2 36 1 180 1 279 1 129 1 249 1 327 1 132 1 186 3 134 1 331 1 133 1 333 1 377 1 85 1 378 1 225 1 160 1 139 1 
230 2 66 1 67 2 42 1 233 2 141 1 92 1 115 1 26 1 118 2 268 1 172 1 291 1 272 1 97 1 34 1 177 3 244 2 276 2 59 1 17 1 222 1 18 1 333 1 138 1 64 1 108 1 228 3 
230 2 294 1 36 1 360 1 286 1 141 2 263 1 129 2 26 1 268 2 333 2 378 1 336 1 
230 1 36 1 286 1 262 1 141 4 129 1 343 1 268 4 333 4 378 1 138 1 256 1 379 1 
257 1 318 1 230 1 88 1 294 1 286 1 141 2 129 2 248 1 119 1 155 1 268 2 333 2 378 1 
129 1 123 1 223 1 268 1 333 1 286 1 141 1 138 1 107 1 147 1 
230 1 36 1 308 1 286 1 141 2 129 1 247 1 268 2 333 2 238 1 378 1 
337 1 318 1 230 3 36 1 308 1 286 2 141 5 129 2 116 1 343 1 268 5 333 4 378 2 138 1 256 1 379 1 
337 1 318 1 230 3 101 1 36 1 308 1 286 2 141 5 129 2 343 1 268 5 333 4 378 2 138 1 256 1 379 1 
293 1 230 1 162 1 294 1 192 1 110 1 322 2 296 2 286 1 141 1 279 1 129 1 268 1 333 1 62 1 378 1 138 1 30 1 
257 1 318 1 230 1 294 1 166 1 286 1 141 1 129 2 155 1 268 1 333 1 378 1 336 1 
259 1 322 1 296 1 311 1 362 1 217 1 158 1 239 1 30 1 
122 1 6 1 239 1 
110 1 158 1 239 1 311 1 282 1 
211 1 122 1 177 2 219 1 110 1 42 1 323 1 311 2 184 1 59 1 18 1 198 1 6 1 158 2 239 1 291 1 228 2 347 1 282 2 
79 1 306 1 68 1 181 1 
79 1 273 1 376 1 157 1 232 1 68 1 181 1 
216 1 376 1 84 1 
273 1 338 1 124 1 232 3 68 1 195 1 181 1 79 1 157 1 376 3 28 2 313 1 
79 1 52 1 273 1 80 1 376 2 157 1 232 2 68 1 181 1 
273 1 175 1 149 1 232 1 68 1 91 1 223 1 157 1 376 1 313 1 147 1 
79 1 273 1 376 1 157 1 232 1 313 1 68 1 
79 2 273 1 376 1 157 1 232 1 313 1 181 1 
273 2 232 2 68 1 79 1 47 1 38 1 157 2 376 2 106 1 313 1 
273 1 52 2 149 1 232 3 181 1 68 2 169 1 277 1 79 1 157 1 376 3 313 1 334 1 
273 1 52 1 175 1 321 1 232 2 68 1 181 1 79 1 223 2 157 1 376 2 313 1 107 1 365 1 147 1 
273 2 52 2 149 1 232 4 181 1 68 2 277 1 79 1 80 1 157 2 376 4 332 1 313 1 
79 1 273 1 376 1 157 1 232 1 313 1 68 1 181 1 
354 1 52 2 273 1 124 1 149 1 232 4 195 1 181 2 68 3 277 1 79 2 376 4 157 1 28 1 
273 1 52 1 164 1 232 2 68 1 181 1 79 1 49 1 157 1 376 2 313 1 87 1 
273 1 124 1 232 3 68 1 195 2 181 1 57 1 79 1 157 1 376 3 28 2 313 1 
27 1 329 2 171 1 68 2 
273 1 363 1 376 1 157 1 232 1 313 1 
79 1 52 1 273 1 376 2 157 1 232 2 313 1 68 1 181 1 169 1 
86 1 
79 1 273 1 376 1 157 1 232 1 313 1 68 1 181 1 
52 1 273 1 232 3 181 1 68 1 169 1 79 1 157 1 376 3 28 1 313 1 
354 1 149 1 68 1 277 1 
79 1 68 1 

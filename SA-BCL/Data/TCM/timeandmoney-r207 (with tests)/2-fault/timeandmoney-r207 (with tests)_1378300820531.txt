#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V ERROR java.lang.IllegalArgumentException (239,348) 
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.IllegalArgumentException (239,348) 344 269 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V ERROR java.lang.IllegalArgumentException (239,348) 344 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V | CONDITION | 1184 | if (x) -> if (!x)
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 159 2 219 1 198 1 273 2 95 2 99 1 305 1 11 5 251 3 326 1 14 1 284 1 82 9 35 1 286 2 145 2 188 2 311 1 148 2 261 1 38 1 260 4 237 1 238 1 336 1 340 9 157 6 
114 1 159 2 219 1 198 1 273 2 95 2 99 1 305 1 11 5 251 3 326 1 14 1 284 1 82 9 35 1 286 2 145 2 188 2 311 1 148 2 261 1 38 1 260 4 237 1 238 1 336 1 340 9 157 6 
114 1 159 2 219 1 198 1 273 2 95 2 99 1 305 1 11 6 251 4 326 1 14 1 284 1 82 10 35 1 286 2 145 2 188 2 311 1 148 2 261 1 38 1 260 5 237 1 238 1 336 1 340 10 157 7 
114 1 159 2 219 1 198 1 273 2 95 1 99 1 11 4 251 2 326 1 14 1 284 1 82 7 35 1 286 2 145 2 188 2 311 1 148 2 261 1 38 1 260 3 237 1 238 1 336 1 340 7 157 4 
188 1 159 1 198 1 148 1 273 1 95 2 260 2 305 1 237 1 11 3 238 1 251 1 326 1 14 1 82 4 286 1 340 4 157 3 
145 1 188 1 37 1 148 1 273 1 21 1 38 1 99 1 295 1 11 1 238 1 326 1 14 1 82 2 286 1 340 2 
114 1 145 1 273 2 260 1 11 2 238 1 251 1 326 1 14 1 82 3 286 2 340 3 157 1 
114 1 145 1 188 1 159 1 219 1 198 1 148 1 273 2 95 2 293 1 260 4 305 1 237 1 262 1 11 5 238 1 336 1 251 3 326 1 14 1 82 9 286 2 340 9 157 7 
114 1 145 1 188 1 159 1 219 1 198 1 148 1 273 2 95 2 293 1 260 4 305 1 237 1 262 1 11 5 238 1 336 1 251 3 326 1 14 1 82 9 286 2 340 9 157 7 
217 1 64 1 8 1 
217 1 50 1 277 2 
248 2 140 2 322 2 208 2 28 2 282 1 128 1 254 2 
0 1 1 1 322 2 197 1 272 1 223 1 324 1 246 1 100 2 248 3 10 2 30 1 140 2 250 1 280 1 252 1 349 1 282 1 254 3 104 1 189 2 124 1 289 1 208 2 290 1 85 2 210 1 60 1 128 1 214 1 266 1 41 2 153 1 28 2 29 1 69 1 92 1 
248 1 203 1 140 1 322 1 208 1 28 1 211 1 128 1 231 1 254 1 
115 1 217 1 57 1 208 1 22 1 191 1 201 1 138 1 248 1 64 1 90 1 254 1 194 1 231 1 
115 1 217 1 57 2 322 1 208 1 138 2 201 1 248 1 64 1 140 1 90 1 28 1 254 1 194 1 231 1 
57 1 356 1 103 1 193 1 138 1 
217 1 64 1 57 2 356 1 142 1 193 1 303 1 138 2 
57 1 356 1 138 1 
205 1 57 1 322 1 208 1 211 1 128 1 138 1 248 1 203 1 140 1 28 1 193 1 231 1 254 1 
217 1 
217 1 64 1 57 2 321 1 356 1 193 1 303 1 138 2 
217 1 57 5 169 2 352 1 353 1 75 1 355 2 303 1 151 1 213 1 138 5 23 1 64 1 42 1 228 2 356 2 357 1 193 2 330 1 
282 1 8 1 
322 1 208 2 248 2 140 1 111 1 28 1 282 2 254 2 176 1 
106 1 149 1 122 1 
343 1 272 1 197 1 85 1 324 1 210 1 248 1 10 1 30 1 41 1 29 1 252 1 349 1 282 1 92 1 254 1 
322 4 208 5 98 1 22 1 248 5 249 1 315 1 140 4 111 1 28 1 79 1 282 1 71 2 254 5 
248 2 140 2 322 2 208 2 211 1 231 1 254 2 45 1 
322 1 197 1 272 1 208 1 85 1 324 1 210 1 248 2 249 1 10 1 30 1 140 1 41 1 29 1 349 1 252 1 122 1 92 1 71 1 254 2 
248 3 140 3 322 3 208 3 28 1 282 1 71 1 254 3 
248 1 140 1 322 1 208 1 211 1 231 1 254 1 
248 1 140 1 322 1 208 1 28 1 111 1 231 1 254 1 176 1 
0 1 72 1 115 1 322 3 197 1 272 1 223 1 324 1 201 1 138 1 100 2 248 4 249 1 10 1 30 1 140 3 349 1 252 1 282 1 254 4 231 1 104 1 189 1 124 1 289 1 57 1 208 3 85 1 210 1 60 1 128 1 26 1 214 1 266 1 41 1 153 1 90 1 28 2 111 1 29 1 69 1 92 1 71 1 194 1 
248 2 140 1 322 1 208 2 79 1 282 1 22 1 71 1 254 2 
72 1 115 1 217 1 57 1 322 3 208 3 138 1 24 1 201 1 248 3 249 1 140 3 90 1 28 1 111 1 71 2 231 1 254 3 194 1 
322 2 208 2 149 1 248 2 140 2 111 1 28 1 71 1 122 1 254 2 
272 1 197 1 85 1 324 1 210 1 248 1 10 1 30 1 41 1 29 1 252 1 349 1 282 1 92 1 254 1 
272 1 197 1 85 1 210 1 248 1 89 1 10 1 30 1 41 1 29 1 297 1 349 1 282 1 92 1 254 1 
223 1 162 1 74 1 100 2 202 1 250 2 76 1 329 1 122 2 81 1 189 4 289 1 124 2 106 2 354 1 60 1 149 2 214 1 153 1 68 1 155 1 69 1 268 1 242 1 
248 1 115 1 140 1 322 1 208 1 231 1 254 1 45 1 
239 1 313 1 
239 1 313 1 
348 1 230 1 
348 1 230 1 
348 1 230 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
239 1 313 1 
269 1 57 1 239 1 309 1 344 1 313 1 138 1 
239 1 309 1 344 1 313 1 
188 1 159 1 148 1 
188 1 148 1 21 1 
159 2 188 3 184 1 83 1 180 1 21 1 
306 1 159 1 188 2 184 1 83 1 21 1 
159 1 188 2 83 1 184 2 21 1 
217 2 161 1 50 1 200 1 136 1 303 1 138 5 277 3 202 1 119 1 76 1 228 1 281 2 81 1 350 1 57 5 58 1 169 1 291 2 352 2 355 1 236 1 213 3 314 2 64 1 265 1 131 1 356 1 357 1 193 4 268 1 113 1 
217 5 3 1 50 3 200 3 303 1 138 9 277 9 278 1 202 3 101 1 76 3 228 2 103 5 281 6 33 1 81 3 350 2 57 9 169 2 333 1 291 6 352 6 355 2 170 1 151 1 213 8 27 5 64 1 265 4 131 2 356 6 193 7 357 1 268 3 113 1 
217 3 50 2 136 1 200 1 138 3 277 4 202 1 228 1 76 1 281 2 81 1 350 1 58 1 57 3 169 1 291 2 352 2 355 1 151 1 213 3 314 1 64 1 265 1 131 1 193 2 268 1 
217 4 50 3 136 1 200 2 138 4 277 7 278 1 202 2 101 1 228 1 76 2 281 4 81 2 350 1 57 4 58 1 169 1 291 4 352 4 355 1 170 1 151 1 213 5 314 2 64 1 265 2 131 1 193 3 268 2 
39 1 92 1 8 1 
141 1 92 1 
63 1 
30 1 197 1 92 1 
325 1 92 1 
30 1 92 1 
30 1 197 1 185 1 143 1 39 2 92 3 
189 7 270 1 124 3 105 1 221 1 74 2 224 2 345 1 226 1 202 1 68 3 250 4 15 1 81 1 174 1 285 1 232 1 
189 7 270 1 124 3 105 1 221 1 74 2 224 2 345 1 226 1 202 1 68 3 250 4 15 1 81 1 174 1 285 1 232 1 
189 7 270 1 124 3 105 1 221 1 74 2 224 2 345 1 226 1 202 1 68 3 43 1 250 4 15 1 81 1 174 1 285 1 232 1 
270 2 221 1 223 1 275 1 224 3 74 5 96 1 302 1 200 3 345 1 226 2 100 2 202 4 250 16 76 3 283 1 15 2 16 1 81 4 285 1 232 2 257 4 189 31 289 1 124 15 105 5 192 1 68 10 153 1 319 3 69 1 268 3 174 1 359 1 
270 1 221 1 245 1 223 2 224 2 74 3 226 1 345 1 100 4 202 1 250 5 15 1 81 1 167 1 285 1 232 1 189 9 289 2 124 4 105 1 192 1 153 2 68 4 69 2 
159 1 180 1 273 1 11 1 10 1 229 1 77 1 349 1 326 1 14 1 82 2 286 1 145 1 188 2 207 1 85 1 148 1 86 1 21 1 234 1 210 1 108 1 238 1 41 1 67 1 215 1 298 1 339 1 157 1 340 2 
159 1 180 1 273 1 182 1 11 1 10 1 229 1 166 1 77 1 349 1 326 1 14 1 82 3 286 1 145 1 287 1 188 2 85 1 148 1 86 1 21 1 234 1 210 1 108 1 41 1 67 1 215 1 298 1 340 3 157 2 
159 1 180 1 182 1 11 1 10 1 229 1 166 1 349 1 326 1 14 1 82 2 145 1 188 2 85 1 86 1 148 1 21 1 234 1 210 1 108 1 41 1 67 1 298 1 340 2 157 2 
181 1 273 1 347 1 10 1 30 1 229 2 349 1 327 1 82 1 286 1 145 2 287 1 125 1 85 1 86 2 234 2 210 1 41 1 29 1 240 1 92 1 46 1 340 1 
159 1 180 1 273 1 182 1 10 1 229 1 77 1 349 1 82 1 286 1 145 1 188 2 207 1 85 1 148 1 86 1 21 1 234 1 210 1 108 1 238 1 41 1 67 1 215 1 298 1 340 1 
17 1 
217 2 93 1 4 1 50 2 138 5 277 2 10 2 228 1 54 1 231 1 187 4 331 1 56 2 57 5 59 1 292 1 107 1 22 1 235 1 191 1 61 1 64 1 29 2 337 1 194 1 195 2 115 1 303 3 201 1 346 1 248 1 347 1 163 2 30 1 349 1 253 2 254 1 350 1 256 2 258 1 208 1 85 2 169 1 352 2 355 1 210 1 213 2 41 2 90 1 318 2 356 6 357 1 320 2 92 1 46 1 
115 1 321 1 303 1 201 1 138 3 248 1 54 1 253 1 254 1 231 1 187 2 331 1 57 3 208 1 292 1 22 1 107 1 191 1 61 1 90 1 356 2 194 1 
115 1 217 1 321 1 303 1 201 1 138 3 248 1 54 1 254 1 231 1 187 3 331 1 57 3 208 1 292 1 22 1 107 1 191 1 61 1 64 1 90 1 356 1 194 1 195 1 
115 1 217 1 321 1 303 1 201 1 138 3 248 1 163 1 54 1 253 1 254 1 231 1 187 3 331 1 57 3 208 1 292 1 22 1 107 1 191 1 61 1 64 1 90 1 356 2 194 1 195 1 
217 5 271 1 321 1 4 1 50 2 138 5 228 1 54 1 231 1 187 6 331 1 56 2 57 5 59 1 292 1 107 1 22 1 61 1 191 1 64 5 65 1 194 1 195 4 115 1 303 3 201 1 248 1 163 4 307 1 31 1 80 1 253 4 254 1 256 2 208 1 169 1 352 1 355 1 213 1 90 1 318 2 356 7 357 1 320 2 
217 2 4 1 50 2 138 4 277 2 228 1 54 1 231 1 187 4 331 1 56 2 57 4 59 1 292 1 22 1 107 1 61 1 191 1 64 1 194 1 195 2 115 1 303 2 201 1 346 1 248 1 163 2 253 2 254 1 256 2 208 1 169 1 352 1 355 1 213 1 90 1 318 2 356 4 357 1 320 2 
115 1 217 1 271 1 4 1 50 2 303 2 201 1 138 4 248 1 163 2 31 1 228 1 54 1 80 1 253 2 254 1 231 1 187 4 256 2 331 1 56 2 57 4 59 1 208 1 169 1 352 1 292 1 355 1 22 1 107 1 191 1 61 1 213 1 64 1 90 1 318 2 356 4 357 1 320 2 194 1 195 2 
115 1 217 1 271 1 4 1 50 2 303 2 201 1 138 4 248 1 163 2 31 1 228 1 54 1 80 1 253 2 254 1 231 1 187 4 256 2 331 1 56 2 57 4 59 1 208 1 169 1 352 1 292 1 355 1 22 1 107 1 191 1 61 1 213 1 64 1 90 1 318 2 356 4 357 1 320 2 194 1 195 2 
115 1 217 1 4 1 6 1 303 2 201 1 138 4 277 2 304 2 248 1 163 2 31 1 228 1 54 1 253 2 254 1 231 1 187 4 331 1 56 2 57 4 208 1 169 1 352 1 292 1 294 2 355 1 22 1 107 1 171 1 191 1 61 1 213 1 64 1 316 1 90 1 356 4 357 1 320 2 194 1 195 2 
115 1 217 1 322 1 201 1 138 2 248 2 163 1 203 1 140 1 307 1 54 1 253 1 254 2 231 2 187 3 205 1 331 1 57 2 208 2 292 1 211 1 128 1 22 1 107 1 191 1 61 1 64 1 90 1 28 1 356 1 194 1 195 1 
115 1 217 1 322 1 201 1 138 2 248 2 163 1 203 1 140 1 307 1 54 1 253 1 254 2 231 2 187 3 205 1 331 1 57 2 208 2 292 1 211 1 128 1 22 1 107 1 191 1 61 1 64 1 90 1 28 1 356 1 194 1 195 1 
217 1 4 1 138 4 277 2 228 1 54 1 231 1 187 4 331 1 56 2 57 4 292 1 294 2 22 1 107 1 61 1 191 1 64 1 194 1 195 2 115 1 303 2 201 1 304 2 346 1 248 1 163 2 253 2 254 1 208 1 169 1 352 1 355 1 213 1 316 1 90 1 356 4 357 1 320 2 
270 1 221 1 223 1 74 2 224 1 8 1 345 1 100 2 202 1 250 3 282 2 122 1 81 1 285 1 232 1 189 6 289 1 124 3 106 1 149 1 60 1 214 1 153 1 68 2 155 1 69 1 
0 1 160 1 1 1 223 2 74 1 200 2 100 4 139 1 202 2 250 8 76 2 282 1 283 1 122 11 186 1 81 1 255 1 257 3 189 14 124 6 289 2 105 1 106 11 127 1 60 2 149 4 214 1 68 2 153 2 319 3 69 2 268 1 359 1 
0 1 1 1 322 1 197 1 272 1 343 1 324 1 223 1 199 1 7 1 183 1 139 1 248 2 100 2 249 1 10 1 30 1 140 1 250 1 349 1 252 1 282 1 254 2 189 2 289 1 124 1 208 1 85 1 210 1 149 1 60 1 214 1 41 1 153 1 29 1 69 1 92 1 71 1 
0 1 270 1 1 1 220 1 322 1 272 2 221 1 223 3 324 2 224 1 182 1 100 6 139 1 10 3 140 1 282 2 285 1 232 1 104 2 189 20 288 1 18 1 289 3 105 4 106 7 60 3 149 7 153 3 68 8 29 1 69 3 71 1 299 2 197 2 74 4 200 2 345 1 248 3 249 1 202 3 30 2 164 2 165 2 76 2 250 10 252 2 349 2 122 7 81 3 254 3 124 10 208 1 85 3 210 2 214 3 41 3 268 2 92 2 175 2 
0 1 218 1 1 1 2 1 322 1 223 2 182 1 248 1 100 4 347 1 10 8 30 2 227 1 140 1 250 1 349 2 280 2 254 1 55 1 189 2 289 2 124 1 208 1 85 7 210 2 60 2 87 1 264 1 214 2 41 8 153 2 29 2 132 1 155 1 69 2 71 1 92 3 339 1 46 1 
322 1 223 1 74 1 200 1 100 2 139 1 248 1 9 1 202 1 140 1 76 1 250 1 122 1 254 1 81 1 189 3 289 1 124 2 208 1 106 1 149 1 60 1 214 1 68 1 153 1 28 1 111 1 69 1 268 1 
189 2 289 1 105 1 223 1 106 1 354 1 149 1 60 1 100 2 202 1 214 1 68 1 153 1 76 1 250 2 155 1 69 1 122 1 
189 2 289 1 124 2 223 1 74 1 106 1 149 1 60 1 100 2 214 1 68 1 153 1 155 1 69 1 268 1 122 1 329 1 81 1 
223 1 74 1 200 1 100 2 202 1 250 2 76 1 122 2 81 1 189 4 289 1 124 2 105 1 106 2 60 1 149 2 214 1 153 1 68 2 155 1 69 1 268 1 
189 2 289 1 105 1 223 1 106 1 354 1 149 1 60 1 100 2 202 1 214 1 68 1 153 1 76 1 250 2 132 1 69 1 122 1 
189 2 289 1 124 2 223 1 74 1 106 1 149 1 60 1 100 2 214 1 68 1 153 1 132 1 69 1 268 1 122 1 329 1 81 1 
223 1 74 1 200 1 100 2 202 1 250 2 76 1 122 2 81 1 189 4 289 1 124 2 105 1 106 2 60 1 149 2 214 1 153 1 68 2 132 1 69 1 268 1 
189 4 124 2 289 1 105 1 223 1 74 1 106 2 149 2 60 1 200 1 100 2 202 1 214 1 68 2 153 1 76 1 250 2 69 1 268 1 122 2 81 1 
0 1 1 1 197 1 272 1 324 1 223 1 248 1 100 2 10 1 30 1 250 1 349 1 252 1 282 1 254 1 104 1 189 2 289 1 124 1 85 1 210 1 60 1 214 1 41 1 153 1 29 1 69 1 92 1 
0 1 1 1 197 1 272 1 223 1 248 1 100 2 10 1 30 1 250 1 349 1 282 1 254 1 189 2 289 1 124 1 85 1 210 1 60 1 89 1 214 1 41 1 153 1 173 1 297 1 29 1 69 1 92 1 
223 1 74 1 200 1 100 2 139 1 202 1 250 2 76 1 122 2 81 1 189 4 289 1 124 2 105 1 106 2 60 1 149 2 214 1 153 1 68 2 69 1 268 1 
197 1 272 1 324 1 223 1 74 1 200 1 248 1 100 2 202 1 10 1 30 1 165 1 250 2 76 1 349 1 252 1 122 2 81 1 254 1 104 1 189 4 124 2 289 1 105 1 85 1 106 2 210 1 149 2 60 1 214 1 41 1 68 2 153 1 69 1 268 1 92 1 339 1 
322 1 223 1 200 1 52 1 100 2 139 1 248 1 202 1 140 1 76 1 250 2 122 1 81 1 254 1 189 3 124 1 289 1 105 1 208 1 106 1 60 1 149 1 214 1 68 1 153 1 28 1 111 1 69 1 268 1 
341 2 274 1 223 2 74 3 200 3 100 4 202 3 250 9 76 3 78 1 120 1 283 1 121 1 144 1 167 1 81 3 257 2 189 19 289 2 124 10 105 3 147 1 153 2 68 6 110 2 319 1 69 2 268 3 134 1 359 1 
47 1 341 1 222 1 274 2 223 3 74 2 200 3 100 6 202 3 250 14 76 3 78 1 120 1 283 2 81 2 144 2 167 1 257 2 189 26 124 12 289 3 105 2 335 1 192 2 68 4 153 3 110 4 319 2 44 1 241 1 69 3 268 2 156 1 134 1 
47 1 270 1 222 1 221 1 223 3 274 1 224 1 100 6 283 3 144 2 285 1 232 1 189 41 289 3 105 4 147 1 335 1 192 1 68 8 153 3 110 4 69 3 241 1 156 1 341 1 74 4 200 4 345 1 202 5 76 4 250 20 78 1 120 1 81 5 167 1 204 1 257 4 124 21 319 3 44 1 268 4 134 1 359 1 
47 1 270 1 341 1 221 1 222 1 274 1 223 4 224 1 74 4 200 4 345 1 100 8 202 5 250 20 76 4 78 1 120 1 283 3 144 2 167 1 81 4 204 1 285 1 232 1 257 4 189 38 289 4 124 18 105 3 147 1 335 1 192 2 153 4 68 7 44 1 110 4 319 3 241 1 69 4 268 3 156 1 134 1 359 1 
47 1 270 1 341 1 221 1 222 1 274 1 223 2 224 1 74 7 200 7 345 1 100 4 202 8 250 27 76 7 78 1 120 1 283 2 144 1 167 1 81 8 285 1 232 1 257 4 189 52 289 2 124 25 105 7 127 2 335 1 192 1 153 2 68 14 44 1 110 4 319 4 241 1 69 2 268 7 156 1 134 1 359 2 
0 1 218 1 1 1 223 1 139 1 248 2 100 2 10 2 30 1 250 1 349 1 32 1 280 2 34 1 254 2 168 1 189 2 36 1 289 1 124 1 332 1 208 2 85 2 210 1 60 1 264 1 214 1 41 2 153 1 69 1 92 1 
159 1 188 2 206 1 180 1 85 2 148 1 21 1 210 1 182 1 108 1 172 1 10 2 41 2 229 1 77 1 91 1 349 1 298 1 339 1 
159 1 188 2 206 1 180 1 85 1 148 1 21 1 210 1 182 1 97 1 108 1 10 1 41 1 229 1 77 1 349 1 298 1 
172 1 347 1 179 1 10 1 30 1 41 1 229 1 85 1 29 1 349 1 327 1 210 1 92 1 46 1 
159 1 188 2 206 1 180 1 85 1 148 1 21 1 210 1 182 1 108 1 172 1 10 1 41 1 229 1 77 1 91 1 349 1 298 1 
243 1 
217 1 64 1 352 1 353 1 330 1 213 1 8 1 
217 2 50 1 303 1 138 1 277 1 228 1 256 1 57 1 59 1 169 1 352 1 355 1 213 1 64 1 318 1 356 1 357 1 
217 8 323 1 50 6 5 2 138 5 277 12 10 3 141 3 325 2 228 4 185 1 281 6 328 1 330 1 57 5 291 6 64 2 296 2 29 1 339 1 196 1 116 2 197 3 73 2 200 2 303 3 117 2 202 2 30 3 76 2 349 4 81 2 350 2 312 2 258 1 85 3 169 4 351 1 353 1 352 8 210 3 355 4 39 2 40 1 213 9 88 2 129 2 41 3 90 2 356 5 357 4 268 2 92 10 175 2 
217 5 222 1 73 2 5 1 50 3 200 2 303 1 138 1 277 6 202 2 228 2 76 2 281 5 283 1 81 2 350 1 257 1 123 1 57 1 258 1 84 1 169 2 291 5 352 5 355 2 213 8 335 1 64 2 319 1 44 1 356 1 357 2 241 1 268 2 156 1 
158 1 270 1 271 1 322 1 73 2 5 1 138 1 345 1 248 1 202 2 203 1 140 1 228 1 231 1 254 1 81 1 232 1 205 1 57 1 208 1 169 1 352 2 211 1 355 1 128 1 213 2 28 1 357 1 
217 1 169 1 353 1 352 1 355 1 213 1 64 1 228 1 357 1 330 1 
217 5 73 2 291 5 352 5 5 1 50 5 200 2 213 5 277 10 202 2 76 2 281 5 268 2 81 2 175 1 
217 1 64 1 57 1 356 1 303 1 138 1 
342 1 93 1 303 2 138 3 347 1 10 4 30 1 228 2 349 1 328 1 350 2 57 3 258 2 85 4 169 2 352 2 210 1 355 2 40 2 151 1 235 1 213 2 41 4 267 1 29 2 356 4 357 1 92 1 46 1 
0 1 322 2 272 1 197 1 223 1 324 1 100 2 248 3 10 1 30 1 140 2 252 1 349 1 282 1 254 3 104 1 189 1 124 1 289 1 208 2 85 1 210 1 60 1 128 1 214 1 41 1 266 1 153 1 28 2 29 1 69 1 92 1 
217 4 258 1 169 1 291 2 224 1 352 2 50 2 355 1 213 1 277 4 64 2 228 1 357 1 281 2 350 1 
209 1 112 1 25 1 
178 1 209 1 112 1 51 1 118 1 
209 1 112 1 25 1 
209 1 112 1 25 1 
209 1 112 1 62 1 
209 1 112 1 62 1 
209 1 112 1 62 1 
209 1 112 1 
239 1 313 1 
189 8 270 1 124 4 289 2 105 1 221 1 223 2 224 1 74 2 345 1 100 4 202 1 192 1 250 4 68 3 153 2 69 2 81 1 285 1 232 1 
189 6 270 1 124 3 221 1 224 1 74 2 8 1 345 1 202 1 68 2 250 3 81 1 285 1 232 1 
189 4 124 2 244 1 289 1 105 1 223 1 74 1 200 1 100 2 202 1 68 2 153 1 76 1 250 2 69 1 268 1 81 1 
257 2 189 7 124 4 105 1 74 1 200 1 202 1 250 3 76 1 68 2 319 1 268 1 283 1 81 1 359 1 
160 1 270 2 221 1 49 1 223 2 224 1 74 5 200 2 345 1 100 4 202 3 76 2 250 11 81 3 285 1 232 2 257 2 189 23 124 12 289 2 105 4 127 1 192 2 68 9 153 2 319 2 69 2 268 2 359 1 
257 1 189 1 124 1 
189 1 250 1 319 1 
189 6 289 1 244 1 124 3 105 1 223 1 74 2 200 1 100 2 202 1 153 1 76 1 250 3 68 3 69 1 268 1 81 1 175 1 
222 1 223 1 74 1 200 2 100 2 202 2 250 6 76 2 283 1 167 1 81 2 257 1 189 12 124 6 289 1 105 1 335 1 153 1 68 2 319 1 44 1 69 1 241 1 268 2 156 1 
189 6 270 1 124 3 105 1 74 1 345 1 202 1 250 3 68 2 81 1 232 1 
189 3 270 1 124 2 289 1 105 1 49 1 221 1 223 1 74 1 100 2 192 1 250 1 68 2 153 1 69 1 285 1 232 1 
158 1 189 10 270 2 289 1 124 5 105 2 223 1 74 3 345 1 100 2 202 2 153 1 68 5 250 5 69 1 167 1 81 2 232 2 
189 2 289 1 105 1 223 1 100 2 202 1 153 1 76 1 250 2 68 1 69 1 167 1 
189 4 124 2 289 1 105 1 223 1 74 1 200 1 100 2 202 1 68 2 153 1 76 1 250 2 69 1 268 1 81 1 167 1 
189 3 270 1 124 2 289 3 105 1 49 1 147 1 223 3 74 1 100 6 192 1 153 3 68 2 250 1 69 3 167 1 232 1 
270 3 244 1 221 1 49 1 275 1 223 5 224 1 74 7 302 1 200 3 345 2 100 10 202 5 250 16 76 3 283 1 16 1 167 1 81 5 285 1 232 3 257 4 189 34 124 18 289 5 105 5 147 1 192 2 153 5 68 12 319 3 69 5 268 3 359 1 
270 1 221 1 223 1 224 1 74 2 345 1 100 2 202 1 250 4 283 1 81 1 167 1 285 1 232 1 257 1 189 8 124 4 289 1 335 1 153 1 68 2 319 1 69 1 
270 1 244 1 221 1 223 2 224 1 74 2 200 1 345 1 100 4 202 2 250 6 76 1 283 1 81 1 167 1 285 1 232 1 257 2 189 11 124 5 289 2 105 1 335 1 153 2 68 3 319 1 69 2 359 1 
270 1 244 1 221 1 222 1 223 3 224 1 74 3 200 2 345 1 100 6 202 3 250 9 76 2 283 1 167 1 81 3 285 1 232 1 257 1 189 19 124 10 289 3 105 1 335 1 192 1 153 3 68 4 319 1 44 1 241 1 69 3 268 2 156 1 
270 1 244 1 221 1 222 1 223 3 224 1 74 3 200 2 345 1 100 6 202 3 250 10 76 2 283 1 167 1 81 2 285 1 232 1 257 1 189 17 124 7 289 3 105 2 335 1 192 1 153 3 68 5 319 1 44 1 69 3 241 1 268 1 156 1 
270 1 221 1 223 1 224 1 74 2 345 1 100 2 202 1 250 4 283 1 81 1 167 1 285 1 232 1 257 1 189 8 124 4 289 1 335 1 153 1 68 2 319 1 69 1 
222 1 223 1 74 1 200 2 100 2 202 2 250 6 76 2 283 1 167 1 81 2 257 1 189 12 124 6 289 1 105 1 335 1 153 1 68 2 319 1 44 1 69 1 241 1 268 2 156 1 
270 1 244 1 221 1 222 1 223 4 224 1 74 3 200 2 345 1 100 8 202 3 250 10 76 2 283 1 167 1 81 2 285 1 232 1 257 1 189 18 124 8 289 4 105 2 335 1 192 2 153 4 68 5 319 1 44 1 241 1 69 4 268 1 156 1 
222 1 223 4 74 3 200 3 100 8 202 3 250 9 76 3 283 1 167 1 81 2 257 1 189 16 124 7 289 4 105 3 147 1 335 1 192 2 153 4 68 6 319 1 44 1 241 1 69 4 268 2 156 1 
189 7 270 3 124 4 105 3 221 1 74 3 345 1 202 1 68 6 250 3 81 1 285 2 232 3 
270 1 221 1 222 1 223 4 224 1 74 3 200 2 345 1 100 8 202 3 250 10 76 2 283 1 167 1 81 2 285 1 232 1 257 1 189 18 124 8 289 4 105 1 147 1 335 1 192 2 153 4 68 4 319 1 44 1 241 1 69 4 268 1 156 1 
248 1 208 1 79 1 282 1 22 1 254 1 276 1 
248 1 208 1 259 1 20 1 79 1 282 1 225 1 22 1 137 1 216 1 254 1 276 1 
347 1 10 1 30 1 41 1 85 1 29 1 349 1 210 1 92 1 46 1 8 1 
322 1 197 1 272 1 208 1 85 1 210 1 248 2 10 1 30 1 140 1 41 1 29 1 349 1 252 1 282 1 92 1 71 1 254 2 
115 1 116 1 322 1 197 2 272 1 208 2 85 1 210 1 40 1 248 2 10 1 30 2 325 1 140 2 41 1 349 1 252 1 282 1 92 3 71 1 231 1 194 1 254 2 
115 1 322 1 116 1 272 1 197 2 248 2 10 2 30 2 140 2 325 1 102 1 349 1 282 1 254 2 231 1 208 2 85 2 210 1 40 1 41 2 297 1 71 1 92 3 194 1 
217 1 116 1 197 1 135 1 138 2 10 3 30 1 141 1 325 1 102 1 349 1 308 1 57 2 85 3 210 1 39 1 40 1 64 1 41 3 90 1 356 1 29 1 92 4 
217 1 312 1 57 2 116 1 197 1 85 3 210 1 39 1 40 1 138 2 10 3 64 1 30 1 325 1 41 3 141 1 90 1 102 1 29 1 356 1 349 1 92 4 
10 1 41 1 85 1 349 1 210 1 87 1 
55 1 2 1 197 1 85 6 190 1 94 1 210 2 182 1 87 1 264 1 279 1 10 7 30 2 227 1 41 7 185 1 29 2 280 1 349 3 92 3 339 1 
270 1 322 1 272 1 221 1 324 1 223 2 224 1 100 4 139 1 10 1 140 1 282 2 285 1 232 1 104 1 189 6 289 2 332 1 106 1 149 1 60 2 153 2 68 2 69 2 71 1 339 1 197 1 74 2 345 1 248 2 202 1 30 1 165 1 164 1 250 3 252 1 349 1 122 1 254 2 81 1 124 3 208 1 85 1 210 1 214 2 41 1 92 1 
217 1 303 1 138 3 10 1 141 1 228 2 328 1 330 1 312 1 57 3 85 1 169 2 352 1 353 1 355 2 39 1 213 1 88 1 64 1 41 1 129 1 296 1 90 1 29 1 356 2 357 2 193 1 92 2 
10 2 30 1 41 2 197 1 185 1 85 2 323 1 349 2 210 1 39 1 92 2 339 1 87 1 
85 4 210 1 347 1 10 4 30 1 41 4 102 1 29 1 349 1 70 1 92 1 339 1 46 1 
288 1 233 1 197 1 85 2 146 1 94 1 210 1 40 1 279 1 10 2 30 1 41 2 349 2 92 1 
188 1 10 1 41 1 85 1 148 1 29 1 349 1 21 1 210 1 108 1 
264 1 10 2 30 1 41 2 85 2 349 1 210 1 182 1 92 1 34 1 339 1 
55 1 85 4 210 2 40 1 347 1 264 1 10 5 30 2 41 5 227 1 29 1 349 2 70 1 92 3 339 1 46 1 
55 1 85 4 210 2 40 1 347 1 264 1 10 5 30 2 41 5 29 1 349 2 70 1 92 3 339 1 46 1 177 1 
322 1 197 1 272 1 208 1 85 1 210 1 248 2 10 1 30 1 140 1 41 1 29 1 297 1 349 1 282 1 92 1 71 1 254 2 
197 1 85 1 190 1 94 1 210 1 40 1 279 1 10 1 30 1 41 1 185 1 349 2 92 1 
109 1 130 1 12 1 133 1 282 1 
115 1 72 1 217 1 57 2 300 1 150 1 138 2 201 1 334 1 109 2 64 1 130 2 90 1 12 1 193 1 133 2 282 1 231 1 194 1 
248 1 168 1 109 1 36 1 130 1 208 1 12 1 32 1 254 1 
12 1 150 1 334 1 
11 1 326 1 14 1 8 1 
11 1 273 1 326 1 14 1 82 1 340 1 286 1 
145 1 234 1 82 1 
19 1 273 1 301 1 99 2 11 1 238 1 154 1 326 1 14 1 82 3 286 1 340 3 
11 1 273 1 326 1 14 1 95 1 82 2 157 1 340 2 286 1 
188 1 159 1 11 1 238 1 148 1 273 1 260 1 82 1 237 1 340 1 286 1 
11 1 238 1 273 1 14 1 82 1 340 1 286 1 
238 1 273 1 326 1 14 2 82 1 340 1 286 1 
263 1 11 1 238 1 317 1 273 2 14 1 338 1 82 2 340 2 286 2 
219 1 273 1 260 1 11 2 238 1 336 1 251 1 326 1 14 1 82 3 286 1 340 3 157 2 
188 2 159 1 180 1 148 1 273 1 21 1 212 1 11 1 238 1 326 1 14 1 82 2 286 1 340 2 157 1 
273 2 95 1 260 1 305 1 11 2 238 1 251 1 326 1 14 1 82 4 286 2 340 4 157 2 
11 1 238 1 273 1 326 1 14 1 82 1 340 1 286 1 
19 1 273 1 260 1 99 1 11 3 66 1 154 1 251 1 326 2 14 2 82 4 157 2 340 4 286 1 
48 1 273 1 293 1 247 1 11 1 238 1 326 1 14 1 82 2 286 1 340 2 157 1 
11 1 238 1 19 2 154 1 273 1 326 1 14 1 53 1 82 3 99 2 340 3 286 1 
310 1 11 2 126 1 152 2 
238 1 273 1 358 1 82 1 340 1 286 1 
11 1 238 1 219 1 273 1 326 1 14 1 82 2 157 1 340 2 286 1 
13 1 
11 1 238 1 273 1 326 1 14 1 82 1 340 1 286 1 
219 1 273 1 99 1 11 1 238 1 326 1 14 1 82 3 157 1 286 1 340 3 
11 1 66 1 251 1 260 1 
11 1 14 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException (190,320) 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (145,345) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (190,320) 228 315 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException (190,320) 228 104 (212,266) (212,266) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2771 | return null
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
360 5 153 1 17 1 229 2 344 1 282 2 60 6 139 1 237 2 372 1 347 1 346 1 117 1 8 2 238 1 288 1 24 1 144 1 215 2 27 3 191 1 295 9 49 9 51 2 172 1 220 1 174 2 331 4 
360 5 153 1 17 1 229 2 344 1 282 2 60 6 139 1 237 2 372 1 347 1 346 1 117 1 8 2 238 1 288 1 24 1 144 1 215 2 27 3 191 1 295 9 49 9 51 2 172 1 220 1 174 2 331 4 
360 6 153 1 17 1 229 2 344 1 282 2 60 7 139 1 237 2 372 1 347 1 346 1 117 1 8 2 238 1 288 1 24 1 144 1 215 2 27 4 191 1 295 10 49 10 51 2 172 1 220 1 174 2 331 5 
360 4 153 1 17 1 229 1 282 2 60 4 139 1 237 2 372 1 347 1 346 1 117 1 8 2 238 1 288 1 24 1 144 1 215 2 27 2 191 1 295 7 49 7 51 2 172 1 220 1 174 2 331 3 
360 3 229 2 24 1 215 1 27 1 344 1 191 1 49 4 295 4 51 1 282 1 172 1 60 3 174 1 372 1 8 1 331 2 288 1 
360 1 17 1 215 1 58 1 49 2 295 2 51 1 12 1 172 1 220 1 237 1 174 1 372 1 8 1 70 1 288 1 
360 2 153 1 27 1 49 3 295 3 51 2 172 1 60 1 237 1 372 1 8 2 331 1 288 1 
360 5 153 1 229 2 344 1 279 1 183 1 282 1 60 7 237 1 372 1 117 1 8 2 288 1 144 1 24 1 215 1 27 3 191 1 295 9 49 9 51 2 172 1 174 1 331 4 
360 5 153 1 229 2 344 1 279 1 183 1 282 1 60 7 237 1 372 1 117 1 8 2 288 1 144 1 24 1 215 1 27 3 191 1 295 9 49 9 51 2 172 1 174 1 331 4 
181 1 93 1 277 1 
82 1 245 2 181 1 
326 2 368 1 291 1 146 2 61 2 363 2 156 2 258 2 
249 2 179 2 77 1 363 2 155 1 4 2 135 1 134 1 137 1 156 2 258 2 38 1 112 1 5 2 161 1 368 1 306 1 233 1 371 1 61 2 209 1 88 1 118 2 291 1 26 1 146 2 323 1 94 1 326 2 128 1 53 1 176 1 101 1 
159 1 326 1 368 1 146 1 61 1 363 1 330 1 137 1 156 1 258 1 
71 1 181 1 363 1 187 1 322 1 156 1 137 1 277 1 217 1 116 1 61 1 162 1 223 1 284 1 
181 1 146 1 187 2 363 1 322 2 156 1 137 1 277 1 258 1 217 1 326 1 61 1 162 1 223 1 284 1 
120 1 339 1 187 1 42 1 322 1 
120 1 181 1 189 1 187 2 42 1 322 2 277 1 177 1 
120 1 187 1 322 1 
226 1 146 1 187 1 363 1 322 1 137 1 156 1 258 1 159 1 326 1 368 1 61 1 330 1 42 1 
181 1 
120 1 214 1 181 1 187 2 42 1 322 2 277 1 177 1 
120 2 74 1 181 1 301 1 66 2 352 1 187 5 321 2 365 1 322 5 377 1 35 1 277 1 219 1 83 1 327 2 42 2 21 1 177 1 
291 1 93 1 
63 1 291 2 146 1 363 2 156 2 258 1 326 1 61 2 165 1 
228 1 345 1 320 1 
179 1 291 1 134 1 323 1 94 1 137 1 5 1 161 1 100 1 118 1 
129 1 179 1 146 1 363 1 320 1 134 1 94 1 323 1 108 1 156 1 5 1 326 1 61 1 118 1 
326 3 291 1 146 3 61 3 363 3 108 1 156 3 258 1 
326 1 146 1 61 1 363 1 330 1 137 1 156 1 
63 1 326 1 146 1 61 1 363 1 165 1 137 1 156 1 258 1 
129 1 249 1 179 1 77 1 363 3 155 1 4 2 134 1 156 3 108 1 137 1 276 1 258 2 5 1 368 1 233 1 306 1 371 1 209 1 84 1 61 3 162 1 284 1 165 1 88 1 118 1 291 1 146 3 187 1 322 1 94 1 323 1 217 1 326 3 53 1 223 1 176 1 101 1 
29 1 326 1 291 1 116 1 146 1 61 2 363 2 156 2 108 1 
129 1 181 1 146 3 187 1 363 3 322 1 137 1 108 2 156 3 258 1 217 1 326 3 208 1 61 3 84 1 162 1 284 1 223 1 165 1 
146 2 363 2 320 1 108 1 156 2 258 1 326 2 345 1 61 2 165 1 
179 1 291 1 134 1 323 1 94 1 137 1 5 1 161 1 118 1 
179 1 375 1 241 1 167 1 291 1 65 1 134 1 156 1 37 1 158 1 5 1 184 1 13 1 61 1 118 1 
249 4 228 2 252 1 77 1 155 2 4 2 38 2 233 1 306 1 371 1 209 1 345 2 163 1 87 1 141 1 62 1 239 1 145 1 320 2 190 1 197 1 332 1 176 1 200 1 
217 1 326 1 146 1 61 1 363 1 137 1 156 1 78 1 
129 1 55 1 291 1 10 1 146 4 363 5 108 2 156 5 258 1 29 1 326 4 116 1 61 5 165 1 
326 2 146 2 61 2 363 2 330 1 78 1 137 1 156 2 
86 1 269 1 
86 1 269 1 
271 1 107 1 
271 1 107 1 
271 1 107 1 
75 1 86 1 269 1 
75 1 86 1 269 1 
115 1 86 1 269 1 
262 1 86 2 271 1 272 1 107 1 269 2 
75 1 86 1 269 1 
302 1 86 1 269 1 
302 1 86 1 269 1 
302 1 86 1 269 1 
264 1 64 1 181 1 376 3 304 1 187 2 67 2 322 2 136 2 216 2 269 2 297 1 262 1 126 1 7 2 309 1 164 1 86 2 32 2 
92 1 291 1 362 1 146 2 376 1 363 2 187 1 123 1 322 1 67 1 156 2 216 1 269 1 111 1 261 1 115 1 326 2 7 1 61 2 309 1 373 1 86 1 348 1 32 1 
282 1 215 1 174 1 
215 1 174 1 70 1 
243 1 282 2 380 1 342 1 174 3 70 1 
282 1 380 1 342 1 354 1 174 2 70 1 
282 1 380 2 342 1 174 2 70 1 
16 2 301 2 181 2 365 1 277 1 79 1 82 1 42 4 348 1 239 1 62 1 120 1 45 1 92 1 11 1 147 2 66 1 316 1 187 5 321 1 123 1 322 5 377 3 148 2 52 1 245 3 327 1 329 1 197 1 15 1 332 1 177 1 
275 1 301 6 181 5 339 5 56 1 205 1 365 1 277 1 59 1 82 3 232 5 42 7 21 1 239 3 62 3 142 1 120 6 45 1 92 4 11 2 147 6 66 2 187 9 321 2 322 9 377 8 148 6 245 9 327 2 329 3 197 3 15 2 224 1 332 3 177 1 
16 1 181 3 301 2 277 1 79 1 82 2 42 2 21 1 239 1 62 1 92 1 11 1 316 1 66 1 147 2 187 3 321 1 322 3 377 3 148 2 245 4 327 1 329 1 15 1 197 1 332 1 
16 2 275 1 181 4 301 4 277 1 79 1 59 1 82 3 42 3 21 1 239 2 62 2 92 2 11 1 147 4 66 1 316 1 187 4 321 1 322 4 377 5 148 4 245 7 327 1 329 2 15 1 197 2 224 1 332 2 
206 1 93 1 158 1 
293 1 158 1 
268 1 
241 1 158 1 
206 2 184 1 379 1 241 1 158 3 90 1 
184 1 241 1 158 1 
20 1 158 1 
212 1 249 7 250 1 104 2 105 1 266 1 154 1 168 1 155 3 157 1 38 4 185 1 141 2 299 1 200 3 239 1 62 1 
212 1 249 7 250 1 104 2 105 1 266 1 154 1 168 1 155 3 157 1 38 4 185 1 141 2 299 1 200 3 239 1 62 1 
212 1 213 1 249 7 250 1 104 2 266 1 105 1 154 1 168 1 155 3 157 1 38 4 185 1 141 2 299 1 200 3 239 1 62 1 
249 31 250 2 0 3 77 1 104 3 105 1 154 2 155 15 4 2 157 5 367 1 110 1 80 1 38 16 81 1 185 1 6 1 371 1 308 1 209 1 141 5 62 4 239 4 212 1 25 4 266 1 168 2 329 3 197 3 299 2 359 1 176 1 332 3 200 10 
249 9 250 1 77 2 104 2 154 1 155 4 4 4 157 1 367 1 38 5 185 1 371 2 209 2 141 3 239 1 62 1 212 1 318 1 266 1 168 1 125 1 299 1 176 2 200 4 
360 1 179 1 1 1 259 1 5 1 282 1 114 1 60 1 186 1 237 1 372 1 8 1 118 1 288 1 375 1 91 1 167 1 215 1 317 1 122 1 324 1 295 2 49 2 243 1 246 1 51 1 172 1 357 1 174 2 70 1 
360 1 179 1 1 1 230 1 5 1 282 1 40 1 60 2 186 1 237 1 372 1 8 1 118 1 311 1 375 1 91 1 167 1 215 1 317 1 122 1 324 1 295 3 49 3 243 1 246 1 51 1 172 1 357 1 174 2 70 1 
360 1 179 1 230 1 5 1 282 1 40 1 60 2 186 1 237 1 372 1 118 1 375 1 91 1 167 1 215 1 122 1 324 1 295 2 49 2 243 1 246 1 172 1 357 1 174 2 70 1 
375 1 241 1 179 1 167 1 122 2 134 1 124 1 231 1 324 2 158 1 49 1 295 1 5 1 270 1 246 2 51 1 210 1 328 1 237 2 298 1 8 1 118 1 311 1 
179 1 1 1 259 1 5 1 282 1 40 1 186 1 237 1 8 1 118 1 288 1 375 1 91 1 167 1 215 1 317 1 122 1 324 1 295 1 49 1 243 1 246 1 51 1 357 1 174 2 70 1 
2 1 
334 1 71 1 179 2 335 1 181 2 134 2 137 1 277 1 82 2 5 2 280 2 234 1 236 1 283 2 284 1 89 4 241 1 9 1 11 1 187 5 296 2 244 1 245 2 14 2 298 1 199 1 251 1 301 2 363 1 256 2 365 1 156 1 158 1 109 1 116 1 61 1 162 1 118 2 374 2 120 6 23 1 375 1 167 1 66 1 319 2 321 1 322 5 124 1 377 2 170 1 217 1 327 1 223 1 175 1 177 3 
120 2 23 1 71 1 214 1 9 1 251 1 187 3 363 1 256 1 322 3 137 1 156 1 217 1 116 1 162 1 61 1 284 1 223 1 175 1 177 1 199 1 89 2 
71 1 251 1 181 1 363 1 156 1 137 1 277 1 116 1 61 1 162 1 284 1 89 3 120 1 23 1 374 1 9 1 214 1 187 3 322 3 217 1 223 1 175 1 199 1 177 1 
71 1 251 1 181 1 363 1 256 1 156 1 137 1 277 1 116 1 61 1 162 1 284 1 89 3 23 1 120 2 374 1 214 1 9 1 187 3 322 3 217 1 296 1 223 1 175 1 177 1 199 1 
71 1 181 5 132 1 137 1 277 5 82 2 280 2 283 2 284 1 89 6 9 1 187 5 95 1 242 1 296 4 244 1 14 2 199 1 251 1 301 1 363 1 256 4 365 1 156 1 260 1 116 1 162 1 61 1 120 7 23 1 374 4 214 1 66 1 319 2 321 1 322 5 377 1 170 1 217 1 327 1 223 1 175 1 333 1 177 3 
71 1 181 2 137 1 277 1 82 2 280 2 283 2 236 1 284 1 89 4 9 1 187 4 244 1 296 2 245 2 14 2 199 1 251 1 301 1 363 1 365 1 256 2 156 1 116 1 162 1 61 1 23 1 120 4 374 2 66 1 319 2 321 1 322 4 377 1 170 1 217 1 327 1 223 1 175 1 177 2 
71 1 251 1 181 1 301 1 363 1 256 2 365 1 156 1 137 1 277 1 82 2 280 2 116 1 283 2 61 1 162 1 284 1 89 4 374 2 120 4 23 1 9 1 66 1 187 4 319 2 321 1 322 4 377 1 95 1 242 1 170 1 217 1 296 2 244 1 14 2 327 1 223 1 175 1 333 1 177 2 199 1 
71 1 251 1 181 1 301 1 363 1 256 2 365 1 156 1 137 1 277 1 82 2 280 2 116 1 283 2 61 1 162 1 284 1 89 4 374 2 120 4 23 1 9 1 66 1 187 4 319 2 321 1 322 4 377 1 95 1 242 1 170 1 217 1 296 2 244 1 14 2 327 1 223 1 175 1 333 1 177 2 199 1 
71 1 251 1 181 1 338 2 301 1 363 1 256 2 365 1 156 1 137 1 277 1 138 2 278 1 116 1 307 1 61 1 162 1 284 1 286 1 89 4 374 2 120 4 23 1 9 1 66 1 187 4 319 2 321 1 322 4 377 1 217 1 296 2 244 1 245 2 14 2 327 1 223 1 175 1 333 1 177 2 199 1 
71 1 251 1 181 1 301 1 363 1 132 1 365 1 256 3 156 1 137 1 277 1 82 2 280 2 116 1 283 2 61 1 162 1 284 1 89 5 23 1 120 5 374 3 9 1 66 1 187 4 319 2 321 1 322 4 377 1 95 1 242 1 170 1 217 1 244 1 296 3 14 2 327 1 223 1 175 1 333 1 177 2 199 1 
71 1 251 1 181 1 301 1 363 1 132 1 365 1 256 3 156 1 137 1 277 1 82 2 280 2 116 1 283 2 61 1 162 1 284 1 89 5 23 1 120 5 374 3 9 1 66 1 187 4 319 2 321 1 322 4 377 1 95 1 242 1 170 1 217 1 244 1 296 3 14 2 327 1 223 1 175 1 333 1 177 2 199 1 
71 1 338 2 181 1 137 1 277 1 138 2 236 1 284 1 286 1 89 4 9 1 187 4 244 1 296 2 245 2 14 2 199 1 251 1 301 1 363 1 365 1 256 2 156 1 116 1 162 1 61 1 23 1 120 4 374 2 66 1 319 2 321 1 322 4 377 1 217 1 327 1 223 1 175 1 177 2 
249 6 228 1 250 1 252 1 77 1 104 1 154 1 155 3 4 2 38 3 185 1 233 1 306 1 345 1 371 1 209 1 141 2 62 1 239 1 212 1 291 2 93 1 266 1 320 1 176 1 200 2 
249 14 228 11 0 3 131 1 77 2 254 1 155 6 4 4 157 1 182 1 110 1 38 8 6 1 233 2 306 1 235 1 371 2 209 2 345 4 141 1 62 2 239 1 313 1 25 3 291 1 26 1 320 11 329 2 53 1 197 2 176 2 332 1 200 2 
129 1 179 1 249 2 303 1 77 1 363 1 155 1 134 1 4 2 156 1 108 1 38 1 5 1 233 1 306 1 235 1 345 1 209 1 61 1 371 1 118 1 291 1 146 1 26 1 94 1 323 1 326 1 195 1 196 1 53 1 100 1 176 1 
129 1 228 3 249 7 179 1 77 2 340 1 363 1 133 1 155 4 4 4 134 1 156 1 108 1 38 3 5 1 233 2 306 2 235 1 345 3 209 2 61 1 371 2 141 1 349 1 118 1 239 1 62 1 315 1 314 1 146 1 320 3 94 1 323 1 326 1 329 1 53 1 197 1 332 1 176 2 200 1 101 1 
73 1 179 8 33 1 249 2 336 1 252 1 76 1 77 2 363 1 204 1 155 1 134 2 4 4 156 1 108 1 158 3 38 1 5 7 114 1 40 1 233 2 306 2 61 1 371 2 209 2 118 8 375 2 241 2 167 2 146 1 26 1 124 1 355 1 171 1 326 1 128 2 53 1 298 1 176 2 
228 1 249 3 77 1 363 1 155 2 4 2 3 1 156 1 258 1 38 1 233 1 306 1 235 1 345 1 371 1 209 1 61 1 141 1 165 1 62 1 239 1 146 1 320 1 326 1 329 1 197 1 176 1 332 1 200 1 
228 1 249 2 252 1 77 1 320 1 4 2 157 1 38 2 306 1 233 1 345 1 209 1 371 1 163 1 197 1 176 1 200 1 62 1 
228 1 249 2 252 1 77 1 320 1 155 2 4 2 306 1 233 1 345 1 209 1 371 1 141 1 87 1 176 1 332 1 200 1 239 1 
228 2 249 4 252 1 77 1 320 2 155 2 4 2 157 1 38 2 306 1 233 1 345 2 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
228 1 249 2 33 1 77 1 320 1 4 2 157 1 38 2 306 1 233 1 345 1 209 1 371 1 163 1 197 1 176 1 200 1 62 1 
228 1 249 2 33 1 77 1 320 1 155 2 4 2 306 1 233 1 345 1 209 1 371 1 141 1 87 1 176 1 332 1 200 1 239 1 
228 2 249 4 33 1 77 1 320 2 155 2 4 2 157 1 38 2 306 1 233 1 345 2 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
228 2 249 4 77 1 320 2 155 2 4 2 157 1 38 2 306 1 233 1 345 2 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
179 1 249 2 77 1 155 1 4 2 134 1 137 1 38 1 5 1 161 1 233 1 306 1 209 1 371 1 118 1 291 1 26 1 94 1 323 1 53 1 176 1 101 1 
249 2 179 1 77 1 155 1 134 1 4 2 156 1 37 1 158 1 38 1 184 1 5 1 306 1 233 1 61 1 209 1 371 1 118 1 241 1 375 1 167 1 291 1 65 1 26 1 13 1 53 1 54 1 176 1 
228 2 249 4 77 1 320 2 155 2 4 2 157 1 38 2 235 1 306 1 233 1 345 2 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
179 1 249 3 228 1 77 1 155 2 4 2 38 1 5 1 114 1 233 1 306 1 345 1 209 1 371 1 141 1 118 1 62 1 239 1 314 1 320 1 94 1 323 1 329 1 197 1 176 1 332 1 200 1 101 1 
249 3 228 1 77 1 363 1 155 1 4 2 156 1 157 1 258 1 38 2 233 1 306 1 235 1 371 1 209 1 61 1 345 1 165 1 239 1 62 1 146 1 320 1 294 1 326 1 329 1 197 1 332 1 176 1 200 1 
152 1 249 19 0 1 77 2 155 10 4 4 157 3 110 1 38 9 6 1 85 1 371 2 209 2 141 3 62 3 239 3 240 1 25 2 290 2 46 1 125 1 193 2 194 1 127 1 329 3 197 3 176 2 332 3 200 6 248 1 
152 1 249 26 0 2 77 3 155 12 4 6 157 2 367 2 38 14 110 2 281 1 85 2 371 3 209 3 140 1 141 2 239 2 62 3 25 2 290 4 46 2 351 1 125 1 193 1 149 1 194 1 221 1 329 3 197 3 358 1 176 3 332 2 200 4 248 1 
152 1 249 41 250 1 0 3 104 1 77 3 154 1 155 21 4 6 157 4 367 1 110 3 38 20 185 1 281 1 6 1 85 2 371 3 209 3 140 1 141 4 62 5 239 5 212 1 25 4 351 1 290 4 46 1 266 1 125 1 193 1 149 1 194 1 247 1 127 1 221 1 329 4 197 4 358 1 176 3 332 4 200 8 248 1 
152 1 249 38 250 1 0 3 104 1 77 4 154 1 155 18 4 8 157 3 367 2 110 3 38 20 185 1 281 1 6 1 85 2 371 4 209 4 140 1 141 4 62 5 239 4 212 1 25 4 351 1 290 4 46 1 266 1 125 1 193 1 149 1 194 1 247 1 127 1 221 1 329 4 197 4 358 1 176 4 332 3 200 7 248 1 
152 1 249 52 250 1 0 4 104 1 131 2 77 2 154 1 155 25 4 4 157 7 367 1 110 2 38 27 185 1 281 1 6 2 85 1 371 2 209 2 140 1 141 7 62 8 239 8 212 1 25 4 351 1 290 4 46 1 266 1 125 1 193 1 149 1 194 1 221 1 329 7 197 7 358 1 176 2 332 7 200 14 248 1 
262 1 113 1 264 1 7 1 164 1 86 1 67 1 216 1 32 1 269 1 
115 1 373 1 
69 1 7 1 19 1 86 1 67 1 381 1 216 1 32 1 269 1 
264 1 64 1 181 1 376 2 304 1 187 1 322 1 67 1 136 1 216 1 269 1 262 1 126 1 7 1 309 1 164 1 86 1 32 1 
264 1 64 1 181 1 376 2 304 1 187 1 322 1 67 1 136 1 216 1 269 1 262 1 126 1 7 1 309 1 164 1 86 1 32 1 
264 1 64 1 181 1 376 2 304 1 187 1 322 1 67 1 136 1 216 1 269 1 262 1 126 1 7 1 309 1 164 1 86 1 32 1 
75 1 272 1 366 1 
75 1 272 1 366 1 
302 1 378 1 
302 1 272 1 378 1 
261 1 362 1 
362 1 363 2 156 2 136 1 111 1 261 1 115 1 7 1 61 2 42 1 86 1 373 1 348 1 92 1 64 1 291 1 146 2 376 1 187 1 322 1 67 1 123 1 216 1 269 1 326 2 201 1 32 1 
75 1 366 1 
302 1 272 1 378 1 
179 2 249 2 336 1 34 1 77 1 363 2 106 1 255 1 155 1 4 2 156 2 158 1 38 1 5 2 39 1 207 1 233 1 306 1 235 1 209 1 61 2 371 1 118 2 375 1 241 1 167 1 26 1 355 1 128 2 53 1 176 1 
375 1 179 2 167 1 253 1 215 1 317 1 5 2 243 1 282 1 246 1 114 1 40 1 369 1 186 1 173 1 174 2 357 1 70 1 118 2 
179 1 375 1 167 1 215 1 317 1 96 1 5 1 243 1 282 1 246 1 40 1 186 1 173 1 174 2 357 1 70 1 118 1 
375 1 241 1 179 1 167 1 253 1 203 1 134 1 124 1 231 1 158 1 5 1 246 1 298 1 118 1 
179 1 375 1 167 1 253 1 215 1 317 1 5 1 243 1 282 1 246 1 40 1 369 1 186 1 173 1 174 2 357 1 70 1 118 1 
289 1 
83 1 181 1 301 1 93 1 377 1 35 1 277 1 
301 1 181 2 365 1 277 1 82 1 280 1 283 1 120 1 66 1 187 1 321 1 322 1 377 1 170 1 245 1 327 1 177 1 
227 2 334 1 274 2 72 1 179 3 181 8 341 2 134 1 35 1 36 2 277 2 184 3 5 3 82 6 83 1 284 2 90 1 239 2 350 1 241 3 11 2 147 6 292 1 293 3 187 5 148 6 245 12 197 2 103 1 361 2 301 8 365 4 158 10 206 2 114 1 20 2 310 2 118 3 62 2 120 5 375 3 315 2 167 4 66 4 321 4 267 1 322 5 377 9 218 2 327 4 222 2 329 2 332 2 177 3 
334 1 274 2 0 1 181 5 301 5 341 1 365 2 277 2 110 1 82 3 281 1 140 1 119 1 62 2 239 2 120 1 121 1 25 1 351 1 11 1 147 5 66 2 187 1 321 2 322 1 377 8 148 5 149 1 245 6 327 2 329 2 197 2 358 1 332 2 177 1 
226 1 274 2 250 1 301 2 341 1 363 1 154 1 365 1 137 1 156 1 258 1 159 1 185 1 368 1 61 1 62 2 239 1 66 1 146 1 187 1 321 1 322 1 377 2 242 1 28 1 326 1 327 1 330 1 
66 1 301 1 181 1 321 1 365 1 35 1 377 1 277 1 83 1 327 1 
274 2 315 1 301 5 147 5 181 5 341 1 377 5 148 5 82 5 245 10 329 2 197 2 332 2 62 2 239 2 
120 1 181 1 187 1 322 1 277 1 177 1 
334 2 103 2 335 1 72 1 179 4 301 2 365 1 134 2 158 1 109 1 5 4 21 1 118 4 120 4 375 1 241 1 167 1 11 2 66 2 353 1 187 3 321 2 322 3 377 2 124 1 325 1 327 2 298 1 177 2 
249 1 179 1 77 1 363 2 155 1 134 1 4 2 156 2 258 2 5 1 368 1 306 1 233 1 61 2 209 1 371 1 118 1 88 1 291 1 146 2 323 1 94 1 326 2 53 1 176 1 101 1 
334 1 11 1 147 2 301 2 66 1 181 4 104 1 321 1 365 1 377 1 277 2 148 2 82 2 245 4 327 1 
67 1 300 1 32 1 
67 1 300 1 32 1 
261 1 264 1 169 1 67 1 32 1 
67 1 300 1 32 1 
67 1 273 1 32 1 
67 1 273 1 32 1 
67 1 273 1 32 1 
67 1 32 1 
86 1 269 1 
212 1 249 8 250 1 104 1 77 2 266 1 154 1 155 4 4 4 157 1 367 1 38 4 185 1 209 2 371 2 141 2 176 2 200 3 239 1 62 1 
38 3 212 1 249 6 185 1 250 1 93 1 104 1 266 1 154 1 155 3 141 2 200 2 239 1 62 1 
249 4 77 1 155 2 4 2 157 1 38 2 98 1 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
249 7 25 2 0 1 155 4 157 1 110 1 38 3 6 1 329 1 197 1 141 1 332 1 200 2 239 1 62 1 
249 23 250 2 0 2 104 1 131 1 77 2 254 1 154 2 155 12 4 4 157 4 367 2 38 11 185 1 6 1 209 2 371 2 370 1 141 5 62 3 239 3 212 1 25 2 266 1 329 2 197 2 332 2 176 2 200 9 
249 1 25 1 155 1 
38 1 249 1 0 1 
249 6 315 1 77 1 155 3 4 2 157 1 38 3 98 1 371 1 209 1 329 1 197 1 141 2 176 1 332 1 200 3 62 1 239 1 
249 12 0 1 77 1 155 6 4 2 157 1 110 1 38 6 281 1 371 1 209 1 140 1 141 1 62 2 239 2 25 1 351 1 125 1 149 1 329 2 197 2 358 1 176 1 332 2 200 2 
249 6 250 1 154 1 155 3 157 1 38 3 185 1 141 1 200 2 62 1 239 1 
212 1 249 3 250 1 77 1 266 1 154 1 155 2 4 2 157 1 367 1 38 1 370 1 209 1 371 1 141 1 176 1 200 2 
249 10 250 2 77 1 154 2 155 5 4 2 125 1 157 2 38 5 28 1 185 1 371 1 209 1 141 3 176 1 200 5 62 2 239 2 
249 2 77 1 4 2 125 1 157 1 38 2 209 1 371 1 197 1 176 1 200 1 62 1 
249 4 77 1 155 2 4 2 125 1 157 1 38 2 209 1 371 1 329 1 197 1 141 1 332 1 176 1 200 2 239 1 62 1 
249 3 250 1 77 3 154 1 155 2 4 6 125 1 157 1 367 1 38 1 127 1 370 1 209 3 371 3 141 1 176 3 200 2 
249 34 250 3 0 3 104 1 77 5 154 3 155 18 4 10 157 5 367 2 110 1 80 1 38 16 81 1 185 2 6 1 370 1 371 5 209 5 141 7 62 5 239 5 212 1 25 4 266 1 125 1 98 1 127 1 329 3 197 3 359 1 176 5 332 3 200 12 
249 8 250 1 0 1 104 1 77 1 154 1 155 4 4 2 110 1 38 4 185 1 371 1 209 1 141 2 239 1 62 1 212 1 25 1 351 1 266 1 125 1 176 1 200 2 
249 11 250 1 0 1 104 1 77 2 154 1 155 5 4 4 157 1 110 1 38 6 185 1 6 1 371 2 209 2 141 2 239 1 62 2 212 1 25 2 351 1 266 1 125 1 98 1 329 1 197 1 176 2 200 3 
249 19 250 1 0 1 104 1 77 3 154 1 155 10 4 6 157 1 367 1 110 1 38 9 185 1 281 1 371 3 209 3 140 1 141 3 62 3 239 3 212 1 25 1 351 1 266 1 125 1 98 1 149 1 329 2 197 2 358 1 176 3 332 2 200 4 
249 17 250 1 0 1 104 1 77 3 154 1 155 7 4 6 157 2 367 1 110 1 38 10 185 1 281 1 371 3 209 3 140 1 141 3 62 3 239 2 212 1 25 1 351 1 266 1 125 1 98 1 149 1 329 2 197 2 358 1 176 3 332 1 200 5 
249 8 250 1 0 1 104 1 77 1 154 1 155 4 4 2 110 1 38 4 185 1 371 1 209 1 141 2 239 1 62 1 212 1 25 1 351 1 266 1 125 1 176 1 200 2 
249 12 0 1 77 1 155 6 4 2 157 1 110 1 38 6 281 1 371 1 209 1 140 1 141 1 62 2 239 2 25 1 351 1 125 1 149 1 329 2 197 2 358 1 176 1 332 2 200 2 
249 18 250 1 0 1 104 1 77 4 154 1 155 8 4 8 157 2 367 2 110 1 38 10 185 1 281 1 371 4 209 4 140 1 141 3 62 3 239 2 212 1 25 1 351 1 266 1 125 1 98 1 149 1 329 2 197 2 358 1 176 4 332 1 200 5 
249 16 0 1 77 4 155 7 4 8 157 3 367 2 110 1 38 9 281 1 371 4 209 4 140 1 141 3 62 3 239 2 25 1 351 1 125 1 149 1 127 1 329 3 197 3 358 1 176 4 332 2 200 6 
212 1 249 7 250 3 266 2 154 3 155 4 157 3 38 3 185 1 141 3 200 6 239 1 62 1 
249 18 250 1 0 1 104 1 77 4 154 1 155 8 4 8 157 1 367 2 110 1 38 10 185 1 281 1 371 4 209 4 140 1 141 3 62 3 239 2 212 1 25 1 351 1 266 1 125 1 149 1 127 1 329 2 197 2 358 1 176 4 332 1 200 4 
356 1 29 1 291 1 116 1 61 1 363 1 156 1 
178 1 291 1 265 1 363 1 305 1 156 1 356 1 29 1 116 1 61 1 263 1 198 1 
5 1 375 1 241 1 179 1 167 1 93 1 298 1 134 1 124 1 118 1 158 1 
179 1 291 1 146 1 363 1 134 1 94 1 137 1 108 1 156 1 5 1 161 1 326 1 61 1 118 1 
103 1 179 1 291 1 146 1 363 1 94 1 137 1 108 1 156 1 5 1 161 1 326 1 61 1 118 1 
179 2 103 1 361 1 363 2 343 1 156 2 108 1 137 1 37 1 158 3 5 2 184 2 61 2 162 1 20 1 118 2 375 1 241 2 167 1 291 1 65 1 146 2 217 1 326 1 
120 1 241 1 103 1 179 3 166 1 375 1 167 1 181 1 361 1 187 2 293 1 134 1 322 2 343 1 277 1 158 4 184 1 5 3 206 1 68 1 284 1 20 1 118 3 
120 1 241 1 103 1 179 3 375 1 167 1 181 1 361 1 187 2 293 1 134 1 322 2 343 1 277 1 158 4 184 1 5 3 206 1 222 1 284 1 20 1 118 3 
5 1 375 1 179 1 167 1 76 1 118 1 
73 1 179 7 241 2 375 2 336 1 202 1 167 3 76 1 204 1 134 2 158 3 171 1 5 6 184 1 114 1 40 1 128 1 41 1 118 7 44 1 90 1 
228 1 249 5 179 1 250 1 104 1 77 2 363 1 154 1 155 2 255 1 133 1 4 4 156 1 108 1 38 3 5 1 185 1 114 1 233 2 306 2 235 1 209 2 61 1 371 2 141 1 118 1 239 1 62 1 212 1 314 1 291 2 146 1 266 1 320 1 323 1 94 1 326 1 176 2 200 1 101 1 
227 1 179 1 72 1 181 1 301 1 134 1 365 2 35 1 36 1 277 1 158 2 5 1 206 1 83 1 284 1 42 1 118 1 310 1 120 2 66 2 187 3 293 1 321 2 322 3 377 1 327 2 222 1 177 1 
350 1 179 2 241 1 375 1 167 2 76 1 158 2 206 1 5 2 184 1 114 1 118 2 90 1 
179 4 241 1 375 1 130 1 167 1 134 1 343 1 124 1 158 1 5 4 114 1 298 1 118 4 
103 1 179 2 241 1 375 1 202 1 167 2 188 1 57 1 47 1 158 1 5 2 184 1 41 1 118 2 
5 1 375 1 179 1 167 1 215 1 174 1 357 1 134 1 70 1 118 1 
5 2 375 1 241 1 179 2 114 1 167 1 336 1 40 1 207 1 118 2 158 1 
103 1 179 5 73 1 241 2 375 2 130 1 336 1 167 2 204 1 134 1 124 1 158 3 5 4 114 1 298 1 118 5 
103 1 179 5 241 2 375 2 130 1 336 1 167 2 204 1 134 1 124 1 158 3 5 4 114 1 30 1 298 1 118 5 
241 1 179 1 375 1 167 1 291 1 65 1 146 1 363 1 134 1 108 1 156 2 158 1 37 1 184 1 5 1 326 1 61 2 118 1 
103 1 179 1 241 1 375 1 202 1 167 2 158 1 5 1 184 1 41 1 118 1 44 1 90 1 
39 1 34 1 61 1 363 1 106 1 156 1 192 1 97 1 287 1 
99 1 22 1 192 1 
291 1 151 1 97 1 287 1 192 1 
143 1 291 1 181 1 187 2 322 2 137 1 277 1 192 1 97 2 217 1 99 1 162 1 151 2 84 1 284 1 223 1 42 1 22 1 287 2 
360 1 172 1 93 1 372 1 
360 1 295 1 49 1 51 1 172 1 372 1 8 1 
295 1 237 1 122 1 
360 1 49 3 295 3 160 1 51 1 172 1 220 2 31 1 372 1 8 1 43 1 288 1 
360 1 295 2 49 2 229 1 51 1 172 1 60 1 372 1 8 1 
360 1 295 1 49 1 282 1 24 1 51 1 215 1 174 1 8 1 331 1 288 1 
360 1 295 1 49 1 51 1 372 1 8 1 288 1 
295 1 49 1 51 1 172 1 372 2 8 1 288 1 
360 1 312 1 48 1 49 2 295 2 51 2 285 1 372 1 8 2 288 1 
360 2 144 1 27 1 49 3 295 3 51 1 172 1 60 2 372 1 117 1 8 1 331 1 288 1 
360 1 215 1 18 1 49 2 295 2 243 1 51 1 282 1 172 1 60 1 174 2 372 1 8 1 70 1 288 1 
360 2 229 1 27 1 344 1 49 4 295 4 51 2 172 1 60 2 372 1 8 2 331 1 288 1 
360 1 295 1 49 1 51 1 172 1 372 1 8 1 288 1 
360 3 180 1 27 1 49 4 295 4 160 1 51 1 172 2 60 2 220 1 372 2 8 1 331 1 43 1 
360 1 102 1 337 1 49 2 295 2 279 1 51 1 60 1 172 1 372 1 8 1 288 1 
360 1 364 1 49 3 295 3 160 1 51 1 172 1 220 2 372 1 8 1 43 2 288 1 
360 2 50 2 150 1 225 1 
295 1 49 1 51 1 8 1 257 1 288 1 
360 1 295 2 49 2 144 1 51 1 172 1 60 1 372 1 8 1 288 1 
211 1 
360 1 295 1 49 1 51 1 172 1 372 1 8 1 288 1 
360 1 144 1 49 3 295 3 51 1 60 1 172 1 220 1 372 1 8 1 288 1 
360 1 180 1 331 1 27 1 
360 1 372 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 90 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar; | ASSIGN | 464 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 7995 | > -> ==
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
266 1 147 9 26 1 175 2 301 1 274 2 178 1 277 9 93 1 8 1 282 1 329 1 119 1 41 1 135 2 255 2 284 5 353 1 63 1 104 1 292 2 21 6 339 1 357 2 22 4 295 2 213 3 360 1 
266 1 147 9 26 1 175 2 301 1 274 2 178 1 277 9 93 1 8 1 282 1 329 1 119 1 41 1 135 2 255 2 284 5 353 1 63 1 104 1 292 2 21 6 357 2 339 1 22 4 213 3 295 2 360 1 
266 1 147 10 26 1 175 2 301 1 274 2 178 1 277 10 93 1 8 1 282 1 329 1 119 1 41 1 135 2 255 2 284 6 353 1 63 1 104 1 292 2 21 7 357 2 339 1 22 5 213 4 295 2 360 1 
266 1 147 7 26 1 175 2 274 2 178 1 277 7 93 1 8 1 282 1 329 1 119 1 41 1 135 2 255 2 284 4 353 1 63 1 104 1 292 2 21 4 357 2 339 1 22 3 213 2 295 1 360 1 
119 1 41 1 135 1 266 1 255 1 284 3 147 4 175 1 301 1 292 1 277 4 21 3 357 1 22 2 213 1 295 2 329 1 360 1 
119 1 41 1 135 1 284 1 255 1 147 2 26 1 175 1 63 1 35 1 274 1 292 1 277 2 19 1 165 1 329 1 
119 1 41 1 135 2 284 2 147 3 175 2 274 1 178 1 277 3 21 1 22 1 213 1 329 1 
266 1 147 9 175 2 301 1 274 1 178 1 277 9 282 1 329 1 119 1 41 1 135 2 284 5 255 1 286 1 353 1 292 1 293 1 21 7 357 1 22 4 213 3 295 2 360 1 
266 1 147 9 175 2 301 1 274 1 178 1 277 9 282 1 329 1 119 1 41 1 135 2 284 5 255 1 286 1 353 1 292 1 293 1 21 7 357 1 22 4 213 3 295 2 360 1 
224 1 315 1 48 1 
303 1 116 2 315 1 
350 1 109 1 136 2 304 2 352 2 180 2 300 2 182 2 
89 1 109 1 298 2 249 1 73 1 300 2 51 1 323 2 270 2 252 1 149 1 223 1 349 1 153 1 304 2 180 2 10 1 182 3 350 1 156 1 121 1 159 1 285 1 310 2 183 1 136 2 209 2 256 1 352 3 338 1 290 1 291 1 239 1 125 1 20 1 106 1 241 1 
109 1 136 1 54 1 318 1 304 1 219 1 352 1 180 1 300 1 182 1 
331 1 69 1 229 1 120 1 136 1 48 1 49 1 352 1 162 1 201 1 315 1 356 1 318 1 182 1 
331 1 69 1 229 1 120 2 136 1 48 1 352 1 300 1 162 2 315 1 356 1 304 1 318 1 180 1 182 1 
130 1 259 1 120 1 191 1 162 1 
130 1 120 2 75 1 315 1 48 1 191 1 15 1 162 2 
120 1 191 1 162 1 
120 1 109 1 136 1 219 1 352 1 300 1 162 1 130 1 314 1 54 1 318 1 304 1 180 1 182 1 
315 1 
130 1 120 2 75 1 315 1 48 1 243 1 191 1 162 2 
332 1 120 5 196 1 48 1 313 2 235 1 162 5 130 2 150 2 75 1 94 1 240 1 131 1 315 1 261 1 191 2 306 1 203 2 215 1 
350 1 224 1 
350 2 195 1 136 2 352 2 300 1 304 1 190 1 180 1 182 2 
84 1 37 1 268 1 
350 1 121 1 159 1 298 1 209 1 249 1 352 1 73 1 270 1 149 1 239 1 20 1 241 1 153 1 182 1 320 1 
121 1 159 1 136 1 249 1 298 1 209 1 173 1 352 2 73 1 300 1 270 1 149 1 239 1 37 1 152 1 20 1 241 1 153 1 304 1 182 2 
350 1 136 3 173 1 304 3 180 1 352 3 300 3 182 3 
136 1 54 1 318 1 304 1 352 1 300 1 182 1 
195 1 136 1 318 1 304 1 352 1 180 1 190 1 300 1 182 1 
69 1 109 1 172 1 249 1 298 1 173 1 73 1 300 3 323 2 270 1 149 1 349 1 152 1 153 1 304 3 180 2 10 1 182 4 350 1 156 1 331 1 121 1 159 1 229 1 120 1 310 1 183 1 136 3 209 1 256 1 123 1 352 4 338 1 162 1 290 1 291 1 239 1 125 1 20 1 106 1 241 1 356 1 318 1 190 1 
350 1 230 1 136 2 173 1 49 1 304 1 352 2 300 1 182 2 
331 1 69 1 283 1 120 1 229 1 136 3 172 1 173 2 352 3 300 3 162 1 152 1 315 1 356 1 318 1 304 3 180 1 190 1 182 3 
136 2 173 1 352 2 268 1 300 2 37 1 304 2 190 1 180 1 182 2 
350 1 159 1 121 1 298 1 209 1 249 1 352 1 73 1 270 1 149 1 239 1 20 1 241 1 153 1 182 1 
350 1 159 1 121 1 298 1 209 1 249 1 352 1 73 1 289 1 270 1 149 1 239 1 153 1 342 1 182 1 
345 1 268 2 51 2 323 2 37 2 253 1 10 1 307 1 132 1 335 1 310 4 256 1 288 1 337 1 338 1 187 1 290 2 354 1 291 1 125 1 84 2 106 1 145 1 296 1 
69 1 136 1 66 1 318 1 304 1 352 1 300 1 182 1 
350 1 230 1 136 5 173 2 49 1 352 5 300 4 152 1 86 1 304 4 190 1 180 1 87 1 182 5 
66 1 136 2 54 1 318 1 304 2 352 2 300 2 182 2 
163 1 260 1 
163 1 260 1 
14 1 62 1 
14 1 62 1 
14 1 62 1 
163 1 260 1 257 1 
163 1 260 1 257 1 
163 1 260 1 13 1 
163 2 260 2 14 1 128 1 62 1 83 1 
163 1 260 1 257 1 
163 1 133 1 260 1 
163 1 133 1 260 1 
163 1 133 1 260 1 
193 2 46 2 120 2 127 1 71 2 112 2 139 1 271 1 83 1 162 2 302 1 163 2 273 2 260 2 315 1 96 1 359 3 76 1 319 1 
193 1 46 1 112 1 71 1 300 2 30 1 304 2 327 1 182 2 350 1 98 1 120 1 136 2 13 1 352 2 162 1 163 1 258 1 65 1 260 1 359 1 45 1 24 1 319 1 
255 1 292 1 357 1 
35 1 255 1 292 1 
35 1 292 3 95 1 244 1 357 2 143 1 
35 1 292 2 95 1 357 1 143 1 346 1 
35 1 292 2 95 1 357 1 143 2 
194 1 0 1 1 2 146 1 48 1 345 1 150 1 130 4 272 1 303 1 116 3 75 1 94 3 202 2 327 1 306 2 203 1 154 2 155 1 98 1 120 5 335 1 288 1 313 1 162 5 242 1 315 2 261 1 191 1 192 1 45 1 145 1 
194 1 0 3 1 6 48 1 174 1 345 3 130 7 150 2 303 3 116 9 75 1 94 8 279 1 202 6 306 6 203 2 155 2 120 9 99 1 161 1 335 3 288 3 313 2 235 1 162 9 259 5 126 1 44 5 315 5 340 1 261 1 191 6 45 4 192 2 145 3 
0 1 1 2 146 1 48 1 345 1 130 2 272 1 150 1 303 2 116 4 94 3 202 2 306 2 203 1 154 1 155 1 120 3 335 1 288 1 313 1 235 1 162 3 315 3 192 1 45 1 145 1 
0 2 1 4 146 1 48 1 174 1 345 2 150 1 272 1 130 3 303 3 116 7 94 5 202 4 306 4 203 1 154 2 155 1 120 4 335 2 288 2 313 1 235 1 162 4 126 1 315 4 340 1 192 1 45 2 145 2 
121 1 224 1 212 1 
134 1 121 1 
88 1 
121 1 153 1 
121 3 159 1 17 1 153 1 212 2 294 1 
121 1 159 1 153 1 
121 1 170 1 
79 1 335 1 171 1 197 2 310 7 2 1 124 1 345 1 51 4 5 1 33 1 290 3 36 1 253 2 68 1 204 1 296 3 
79 1 335 1 171 1 197 2 310 7 2 1 124 1 345 1 51 4 5 1 33 1 290 3 36 1 253 2 68 1 204 1 296 3 
79 1 335 1 171 1 197 2 310 7 2 1 124 1 72 1 345 1 51 4 5 1 33 1 290 3 36 1 253 2 68 1 204 1 296 3 
0 3 70 1 171 1 110 4 197 3 2 2 27 1 345 4 323 2 51 16 5 5 33 1 36 2 253 5 204 1 10 1 157 1 79 2 310 31 335 4 42 1 256 1 124 1 61 1 288 3 338 1 290 15 64 1 105 1 106 1 262 3 68 2 145 3 296 10 
197 2 171 1 2 1 345 1 323 4 51 5 5 1 33 1 36 1 253 3 10 2 79 1 335 1 310 9 256 2 124 1 82 1 338 2 290 4 105 1 106 2 317 1 68 1 296 4 
298 1 147 2 218 1 129 1 270 1 175 1 149 1 274 1 35 1 326 1 277 2 40 1 329 1 119 1 78 1 41 1 135 1 284 1 255 1 60 1 208 1 209 1 81 1 103 1 239 1 292 2 85 1 21 1 244 1 357 1 
298 1 147 3 129 1 270 1 175 1 149 1 274 1 35 1 326 1 277 3 40 1 329 1 78 1 158 1 41 1 135 1 284 1 255 1 60 1 208 1 209 1 81 1 103 1 239 1 292 2 21 2 244 1 316 1 357 1 169 1 
298 1 147 2 129 1 270 1 149 1 274 1 35 1 277 2 40 1 329 1 78 1 158 1 41 1 284 1 60 1 208 1 255 1 209 1 81 1 239 1 292 2 21 2 316 1 244 1 357 1 
78 2 121 1 135 1 60 2 351 1 147 1 298 1 209 1 250 1 73 1 129 2 175 1 270 1 149 1 52 1 34 1 115 1 274 2 239 1 277 1 55 1 153 1 169 1 
298 1 147 1 218 1 129 1 270 1 175 1 149 1 274 1 35 1 326 1 277 1 40 1 119 1 78 1 158 1 135 1 255 1 60 1 208 1 209 1 81 1 103 1 239 1 292 2 244 1 357 1 
236 1 
322 1 69 1 298 2 49 1 73 2 90 1 270 2 149 1 150 1 34 1 75 1 94 1 55 1 201 1 153 1 306 1 203 1 77 1 182 1 330 1 155 1 331 1 229 1 121 1 120 3 136 1 209 2 233 1 352 1 313 1 162 3 239 1 356 1 318 1 261 1 191 2 263 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
331 1 322 1 69 1 229 1 120 3 136 1 49 1 352 1 90 1 162 3 75 1 201 1 356 1 243 1 318 1 191 1 77 1 182 1 
331 1 322 1 69 1 229 1 120 2 136 1 49 1 352 1 313 1 90 1 162 2 150 1 201 1 356 1 318 1 261 1 203 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
322 1 331 1 69 1 229 1 120 2 136 1 49 1 352 1 90 1 162 2 201 1 356 1 318 1 77 1 182 1 
331 1 322 1 69 1 229 1 120 2 136 1 49 1 352 1 313 1 90 1 162 2 150 1 201 1 356 1 318 1 261 1 203 1 77 1 182 1 
171 1 197 1 268 1 345 1 323 2 51 3 33 1 224 1 37 1 253 2 10 1 350 2 79 1 310 6 335 1 256 1 124 1 337 1 338 1 290 3 291 1 125 1 84 1 106 1 68 1 296 2 
0 2 70 1 110 3 345 2 268 4 323 4 51 8 5 1 37 11 253 1 10 2 181 1 350 1 285 1 183 1 310 14 335 1 256 2 61 1 101 1 140 1 288 1 338 2 237 1 290 6 291 1 125 2 84 11 106 2 144 1 262 3 145 2 296 2 
249 1 298 1 173 1 73 1 268 1 300 1 270 1 323 2 51 1 149 1 325 1 200 1 152 1 153 1 304 1 328 1 10 1 181 1 182 2 350 1 121 1 159 1 136 1 183 1 310 2 285 1 209 1 256 1 352 2 338 1 290 1 239 1 291 1 125 1 20 1 241 1 106 1 320 1 
0 2 171 1 173 1 268 7 270 3 323 6 51 10 5 4 53 2 9 2 181 1 10 3 182 3 285 1 335 3 183 1 136 1 288 2 338 3 290 10 291 3 239 2 20 2 106 3 241 2 246 1 245 2 68 1 145 2 296 8 197 1 298 3 249 2 198 1 73 1 300 1 345 3 33 1 149 2 152 1 37 7 253 4 153 2 304 1 350 2 156 2 158 1 79 1 159 2 121 2 310 20 209 3 256 3 124 1 43 2 352 3 210 1 125 3 84 7 
298 8 173 1 73 2 29 1 300 1 270 7 323 4 51 1 252 2 149 2 34 1 55 1 153 2 304 1 10 2 205 1 182 1 158 1 12 1 121 3 207 1 309 1 136 1 285 1 310 2 183 1 209 8 256 2 311 1 352 1 337 1 338 2 290 1 239 2 291 2 355 1 125 2 85 1 106 2 
0 1 268 1 300 1 345 1 323 2 51 1 37 1 253 1 304 1 180 1 10 1 181 1 182 1 136 1 310 3 335 1 256 1 352 1 288 1 338 1 290 2 291 1 142 1 84 1 125 1 106 1 190 1 145 1 296 1 
310 2 256 1 268 1 345 1 337 1 323 2 51 2 5 1 338 1 187 1 291 1 84 1 125 1 37 1 106 1 10 1 145 1 296 1 
310 2 335 1 256 1 268 1 288 1 337 1 323 2 338 1 290 2 291 1 354 1 84 1 125 1 37 1 253 1 106 1 10 1 296 1 
0 1 345 1 268 2 51 2 323 2 5 1 37 2 253 1 10 1 310 4 335 1 256 1 288 1 337 1 338 1 290 2 291 1 125 1 84 2 106 1 145 1 296 2 
310 2 256 1 268 1 345 1 323 2 51 2 5 1 338 1 187 1 291 1 84 1 125 1 37 1 106 1 205 1 10 1 145 1 296 1 
310 2 335 1 256 1 268 1 288 1 323 2 338 1 290 2 291 1 354 1 84 1 125 1 37 1 253 1 106 1 205 1 10 1 296 1 
0 1 345 1 268 2 51 2 323 2 5 1 37 2 253 1 10 1 205 1 310 4 335 1 256 1 288 1 338 1 290 2 291 1 125 1 84 2 106 1 145 1 296 2 
0 1 345 1 268 2 51 2 323 2 5 1 37 2 253 1 10 1 310 4 335 1 256 1 288 1 338 1 290 2 291 1 125 1 84 2 106 1 145 1 296 2 
249 1 298 1 73 1 51 1 270 1 323 2 149 1 153 1 10 1 182 1 350 1 156 1 159 1 121 1 285 1 310 2 183 1 209 1 256 1 352 1 338 1 290 1 239 1 291 1 125 1 20 1 241 1 106 1 
249 1 298 1 73 1 51 1 270 1 323 2 149 1 153 1 10 1 182 1 350 1 159 1 121 1 285 1 310 2 232 1 183 1 209 1 256 1 352 1 289 1 338 1 290 1 239 1 291 1 125 1 106 1 342 1 
0 1 345 1 268 2 51 2 323 2 5 1 37 2 253 1 10 1 181 1 310 4 335 1 256 1 288 1 338 1 290 2 291 1 125 1 84 2 106 1 145 1 296 2 
0 1 249 1 298 1 268 2 345 1 51 2 270 1 323 2 5 1 149 1 37 2 53 1 253 1 153 1 10 1 182 1 156 1 159 1 121 1 335 1 310 4 209 1 256 1 352 1 288 1 338 1 290 2 239 1 291 1 84 2 125 1 85 1 20 1 241 1 106 1 145 1 296 2 
0 1 300 1 345 1 268 1 323 2 51 2 5 1 37 1 304 1 180 1 10 1 181 1 182 1 335 1 136 1 310 3 256 1 352 1 288 1 338 1 290 1 291 1 125 1 84 1 106 1 190 1 23 1 145 1 296 1 
0 3 70 1 110 2 345 3 323 4 51 9 5 3 74 2 222 1 253 3 10 2 333 1 310 19 335 3 138 1 256 2 61 1 186 1 288 3 338 2 290 10 141 1 106 2 317 1 189 1 67 2 168 1 262 1 145 3 296 6 
0 3 110 2 4 1 269 1 345 3 323 6 51 14 5 2 74 4 179 1 278 1 253 2 118 1 10 3 333 1 308 1 335 2 310 26 138 2 256 3 61 2 186 2 288 2 338 3 290 12 141 1 105 2 106 3 317 1 189 1 67 1 262 2 145 3 296 4 
0 4 171 1 4 1 269 1 51 20 323 6 5 4 278 1 179 1 227 1 10 3 333 1 335 5 138 2 61 3 186 1 288 4 338 3 290 21 141 1 105 1 106 3 189 1 67 1 145 4 68 1 296 8 70 1 110 4 197 1 345 5 74 4 33 1 253 4 118 1 79 1 308 1 310 41 256 3 124 1 317 1 168 1 262 3 
0 4 70 1 197 1 171 1 110 4 4 1 269 1 345 5 323 8 51 20 5 3 33 1 74 4 179 1 278 1 253 4 118 1 227 1 10 4 79 1 333 1 308 1 310 38 335 4 138 2 256 4 124 1 61 3 186 1 288 3 338 4 290 18 141 1 105 2 106 4 317 1 189 1 67 1 168 1 262 3 68 1 145 4 296 7 
0 7 70 2 197 1 171 1 110 4 4 1 269 1 345 8 323 4 51 27 5 7 33 1 74 4 179 1 278 1 253 7 118 1 10 2 79 1 333 1 308 1 310 52 335 8 138 1 256 2 124 1 61 2 186 1 288 7 338 2 290 25 141 1 105 1 106 2 317 1 189 1 67 1 144 2 262 4 68 1 145 7 296 14 
163 1 193 1 46 1 127 1 260 1 112 1 71 1 96 1 97 1 83 1 
258 1 13 1 
163 1 193 1 46 1 260 1 188 1 112 1 71 1 3 1 220 1 
193 1 46 1 120 1 127 1 71 1 112 1 139 1 83 1 162 1 302 1 163 1 273 1 260 1 315 1 96 1 359 2 76 1 319 1 
193 1 46 1 120 1 127 1 71 1 112 1 139 1 83 1 162 1 302 1 163 1 273 1 260 1 315 1 96 1 359 2 76 1 319 1 
193 1 46 1 120 1 127 1 71 1 112 1 139 1 83 1 162 1 302 1 163 1 273 1 260 1 315 1 96 1 359 2 76 1 319 1 
217 1 257 1 128 1 
217 1 257 1 128 1 
321 1 133 1 
321 1 133 1 128 1 
65 1 24 1 
193 1 46 1 112 1 71 1 30 1 300 2 130 1 273 1 304 2 327 1 182 2 350 1 58 1 98 1 120 1 13 1 136 2 352 2 139 1 162 1 163 1 258 1 65 1 260 1 359 1 45 1 24 1 
217 1 257 1 
321 1 133 1 128 1 
297 1 298 2 323 2 51 1 270 2 252 2 149 1 348 1 153 1 226 1 10 1 181 1 206 1 182 2 121 1 207 1 136 2 285 1 310 2 183 1 209 2 256 1 185 1 352 2 338 1 290 1 239 1 291 1 355 1 125 1 106 1 
11 1 158 1 255 1 208 1 298 2 209 2 129 1 270 2 113 1 103 1 149 1 6 1 35 1 292 2 239 1 85 1 244 1 357 1 40 1 
158 1 255 1 208 1 298 1 209 1 129 1 31 1 270 1 103 1 149 1 6 1 35 1 292 2 239 1 244 1 357 1 40 1 
121 1 298 1 209 1 73 1 250 1 129 1 270 1 113 1 149 1 34 1 239 1 117 1 55 1 153 1 
11 1 158 1 255 1 208 1 298 1 209 1 129 1 270 1 113 1 103 1 149 1 6 1 35 1 292 2 239 1 244 1 357 1 40 1 
276 1 
332 1 196 1 224 1 94 1 315 1 48 1 306 1 
265 1 48 1 28 1 150 1 303 1 116 1 75 1 94 1 56 1 306 1 203 1 120 1 313 1 162 1 315 2 261 1 191 1 
0 2 170 2 1 6 48 2 50 2 270 3 91 2 324 2 94 9 281 2 332 1 134 3 229 2 335 2 233 1 288 2 238 1 239 4 16 1 107 1 294 1 191 5 247 2 145 2 196 1 298 3 73 1 345 2 148 1 149 3 150 4 303 6 116 12 151 2 75 3 153 3 202 6 306 8 203 4 155 2 121 10 159 3 120 5 209 3 43 2 313 4 162 5 85 1 315 8 167 1 212 2 261 4 358 2 264 2 
0 2 1 5 110 1 48 2 4 1 221 1 269 1 345 2 150 2 324 1 303 3 116 6 151 2 75 1 94 8 179 1 278 1 202 5 305 1 306 5 203 2 155 1 120 1 308 1 335 2 233 1 61 1 313 2 288 2 162 1 315 5 261 2 191 1 262 1 145 2 
109 1 171 1 219 1 345 2 300 1 150 1 324 1 151 2 54 1 94 2 304 1 180 1 306 2 203 1 182 1 79 1 120 1 335 1 136 1 336 1 352 1 80 1 313 1 162 1 314 1 318 1 261 1 68 1 
150 1 332 1 196 1 94 1 315 1 48 1 261 1 313 1 306 1 203 1 
0 2 1 5 335 2 43 1 345 2 288 2 324 1 303 5 116 10 151 2 94 5 315 5 202 5 306 5 145 2 
120 1 75 1 315 1 48 1 191 1 162 1 
298 4 73 2 270 4 149 1 150 2 34 1 92 1 75 2 94 2 55 1 153 1 306 2 203 2 330 1 155 2 121 1 120 3 160 1 209 4 233 2 313 2 235 1 162 3 239 1 107 2 167 1 261 1 191 4 263 1 
109 1 298 1 249 1 73 1 300 2 323 2 270 1 149 1 349 1 153 1 304 2 180 2 10 1 182 3 350 1 156 1 159 1 121 1 310 1 183 1 136 2 209 1 256 1 352 3 338 1 290 1 239 1 291 1 125 1 20 1 106 1 241 1 
1 2 197 1 233 1 48 2 313 1 150 1 303 2 116 4 94 1 315 4 202 2 261 1 306 2 203 1 155 1 
46 1 111 1 112 1 
46 1 111 1 112 1 
46 1 65 1 112 1 38 1 96 1 
46 1 111 1 112 1 
46 1 248 1 112 1 
46 1 248 1 112 1 
46 1 248 1 112 1 
46 1 112 1 
163 1 260 1 
79 1 197 1 335 1 171 1 310 8 256 2 124 1 345 1 51 4 323 4 5 1 338 2 33 1 290 4 105 1 253 2 106 2 10 2 68 1 296 3 
79 1 197 1 171 1 310 6 335 1 124 1 345 1 51 3 33 1 290 3 224 1 253 2 68 1 296 2 
0 1 335 1 310 4 137 1 256 1 288 1 345 1 323 2 51 2 338 1 5 1 290 2 253 1 106 1 10 1 145 1 296 2 
0 1 70 1 335 1 110 2 310 7 61 1 288 1 345 1 51 3 5 1 290 4 253 1 262 1 145 1 296 2 
0 2 70 1 197 1 171 1 110 2 345 3 51 11 323 4 5 4 33 1 253 5 10 2 79 2 231 1 310 23 335 3 256 2 124 1 101 1 288 2 338 2 290 12 105 2 106 2 262 2 144 1 68 2 145 2 296 9 
290 1 310 1 110 1 
310 1 262 1 51 1 
0 1 310 6 335 1 137 1 256 1 43 1 345 1 288 1 323 2 51 3 338 1 5 1 290 3 106 1 253 2 10 1 145 1 296 3 
0 2 110 1 4 1 269 1 345 2 323 2 51 6 5 1 253 1 278 1 179 1 10 1 308 1 310 12 335 2 256 1 61 1 288 2 338 1 290 6 106 1 317 1 262 1 145 2 296 2 
79 1 171 1 310 6 335 1 345 1 51 3 5 1 290 3 253 1 68 1 296 2 
79 1 231 1 310 3 256 1 124 1 51 1 323 2 5 1 338 1 33 1 290 2 105 1 253 1 106 1 68 1 10 1 296 2 
79 2 310 10 171 1 335 2 256 1 80 1 345 2 323 2 51 5 338 1 5 2 290 5 106 1 253 3 317 1 10 1 68 2 296 5 
310 2 256 1 345 1 323 2 51 2 338 1 5 1 106 1 317 1 10 1 145 1 296 1 
0 1 335 1 310 4 256 1 288 1 345 1 323 2 51 2 338 1 5 1 290 2 253 1 106 1 317 1 10 1 145 1 296 2 
79 1 231 1 310 3 256 3 323 6 51 1 338 3 5 1 290 2 105 1 106 3 253 1 317 1 168 1 10 3 68 1 296 2 
0 3 70 1 197 1 171 2 110 4 345 5 323 10 51 16 5 5 33 1 253 7 10 5 157 1 79 3 231 1 42 1 310 34 335 5 137 1 256 5 124 1 61 1 288 3 338 5 290 18 64 1 105 2 106 5 317 1 168 1 262 3 68 3 145 3 296 12 
197 1 110 1 171 1 4 1 345 1 323 2 51 4 33 1 253 2 10 1 79 1 335 1 310 8 256 1 61 1 124 1 338 1 290 4 106 1 317 1 262 1 68 1 296 2 
0 1 70 1 197 1 171 1 110 2 4 1 345 2 323 4 51 6 5 1 33 1 253 2 10 2 79 1 335 1 310 11 137 1 256 2 124 1 61 1 338 2 290 5 106 2 317 1 262 1 68 1 145 1 296 3 
0 2 197 1 171 1 110 1 4 1 269 1 345 3 323 6 51 9 5 1 33 1 179 1 253 3 278 1 10 3 79 1 308 1 310 19 335 3 137 1 256 3 124 1 61 1 288 2 338 3 290 10 105 1 106 3 317 1 262 1 68 1 145 2 296 4 
0 2 197 1 171 1 110 1 4 1 269 1 345 3 323 6 51 10 5 2 33 1 253 3 278 1 179 1 10 3 79 1 308 1 310 17 335 2 137 1 256 3 124 1 61 1 288 1 338 3 290 7 105 1 106 3 317 1 262 1 68 1 145 2 296 5 
197 1 110 1 171 1 4 1 345 1 323 2 51 4 33 1 253 2 10 1 79 1 335 1 310 8 256 1 61 1 124 1 338 1 290 4 106 1 317 1 262 1 68 1 296 2 
0 2 110 1 4 1 269 1 345 2 323 2 51 6 5 1 253 1 278 1 179 1 10 1 308 1 310 12 335 2 256 1 61 1 288 2 338 1 290 6 106 1 317 1 262 1 145 2 296 2 
0 2 197 1 171 1 110 1 4 1 269 1 345 3 323 8 51 10 5 2 33 1 179 1 278 1 253 3 10 4 79 1 308 1 310 18 335 2 137 1 256 4 124 1 61 1 288 1 338 4 290 8 105 2 106 4 317 1 262 1 68 1 145 2 296 5 
0 3 110 1 4 1 269 1 345 3 323 8 51 9 5 3 179 1 278 1 253 3 10 4 308 1 310 16 335 2 256 4 61 1 288 2 338 4 290 7 105 2 106 4 317 1 168 1 262 1 145 3 296 6 
79 3 335 1 310 7 171 1 124 1 345 1 51 3 5 3 33 2 290 4 253 3 68 3 296 6 
0 2 197 1 171 1 110 1 4 1 269 1 345 3 323 8 51 10 5 1 33 1 179 1 278 1 253 3 10 4 79 1 308 1 310 18 335 2 256 4 124 1 61 1 288 1 338 4 290 8 105 2 106 4 317 1 168 1 262 1 68 1 145 2 296 4 
350 1 216 1 230 1 136 1 49 1 352 1 182 1 
350 1 216 1 230 1 136 1 47 1 299 1 49 1 352 1 18 1 211 1 166 1 182 1 
149 1 34 1 121 1 239 1 224 1 55 1 209 1 298 1 153 1 73 1 270 1 
350 1 121 1 159 1 136 1 249 1 298 1 209 1 173 1 352 2 73 1 300 1 270 1 149 1 239 1 241 1 153 1 304 1 182 2 
350 1 69 1 121 3 159 2 170 1 136 2 249 1 298 1 209 1 173 1 352 2 300 1 270 1 149 1 239 1 241 1 356 1 153 2 107 1 318 1 304 2 358 1 182 2 
69 1 170 1 298 2 249 1 173 1 300 1 270 2 149 1 153 2 225 1 304 2 182 2 350 1 159 2 121 3 136 2 209 2 352 2 239 1 107 1 356 1 318 1 358 1 342 1 
170 1 298 3 48 1 73 1 270 3 149 1 153 1 225 1 57 1 134 1 121 4 120 2 159 1 229 1 209 3 287 1 162 2 239 1 107 1 315 1 212 1 191 1 358 1 
134 1 229 1 159 1 120 2 121 4 170 1 298 3 209 3 48 1 73 1 270 3 162 2 149 1 239 1 315 1 153 1 107 1 225 1 212 1 358 1 191 1 264 1 
149 1 239 1 209 1 298 1 29 1 270 1 
254 1 158 1 12 1 159 1 121 3 309 1 100 1 298 7 209 7 311 1 73 2 29 1 270 6 252 1 149 2 164 1 239 3 355 1 85 1 153 2 294 1 
171 1 173 1 268 1 270 1 323 4 51 3 53 1 9 1 226 1 181 1 10 2 182 2 136 1 335 1 338 2 290 3 291 2 239 1 20 1 241 1 106 2 68 1 296 2 197 1 298 1 249 1 300 1 345 1 149 1 33 1 37 1 253 2 153 1 304 1 156 1 350 2 159 1 121 1 79 1 310 6 209 1 256 2 124 1 352 2 125 2 84 1 85 1 
196 1 298 1 48 1 73 1 270 1 150 2 130 1 91 1 75 1 94 1 306 1 281 1 203 2 332 1 134 1 120 3 121 2 229 1 209 1 313 2 162 3 315 1 167 1 212 1 261 2 191 2 247 1 264 1 
159 1 121 2 298 2 209 2 29 1 270 2 149 1 238 1 239 2 85 1 153 1 212 1 294 1 
25 1 121 1 298 4 209 4 73 1 270 4 149 1 34 1 239 1 85 1 55 1 153 1 225 1 
343 1 254 1 159 1 121 1 122 1 298 2 209 2 270 2 149 1 164 1 239 2 107 1 153 1 246 1 
149 1 35 1 255 1 292 1 239 1 209 1 298 1 73 1 40 1 270 1 
149 1 158 1 121 1 239 1 355 1 85 1 209 2 298 2 153 1 185 1 270 2 
25 1 121 3 12 1 309 1 298 5 209 5 73 1 270 4 149 2 34 1 239 2 355 1 85 1 55 1 107 1 153 2 
25 1 121 3 12 1 298 5 209 5 73 1 270 4 149 2 34 1 239 2 355 1 85 1 55 1 39 1 107 1 153 2 
350 1 121 1 159 1 136 1 249 1 298 1 209 1 173 1 352 2 73 1 300 1 270 1 149 1 239 1 153 1 304 1 342 1 182 2 
254 1 159 1 121 1 100 1 298 1 209 1 270 1 149 1 164 1 239 2 107 1 153 1 294 1 
177 1 348 1 297 1 136 1 7 1 234 1 352 1 206 1 182 1 
59 1 177 1 214 1 
350 1 114 1 177 1 7 1 234 1 
350 1 331 1 69 1 59 1 229 1 120 2 172 1 48 1 234 2 102 1 162 2 114 2 130 1 177 1 7 2 315 1 356 1 318 1 214 1 
41 1 284 1 224 1 329 1 
41 1 135 1 284 1 277 1 147 1 175 1 329 1 
78 1 274 1 277 1 
119 1 135 1 41 1 284 1 267 1 147 3 175 1 199 1 347 1 63 2 277 3 329 1 
41 1 135 1 284 1 277 2 147 2 21 1 295 1 175 1 329 1 
119 1 135 1 255 1 292 1 284 1 277 1 147 1 357 1 22 1 175 1 360 1 
119 1 135 1 284 1 277 1 147 1 175 1 329 1 
119 1 41 1 135 1 277 1 147 1 175 1 329 2 
119 1 135 2 284 1 334 1 277 2 147 2 341 1 175 2 32 1 329 1 
119 1 41 1 135 1 284 2 147 3 353 1 175 1 277 3 21 2 22 1 213 1 282 1 329 1 
119 1 41 1 135 1 284 1 255 1 147 2 175 1 35 1 292 2 277 2 21 1 244 1 357 1 108 1 329 1 
119 1 41 1 135 2 284 2 147 4 175 2 301 1 277 4 21 2 22 1 295 1 213 1 329 1 
119 1 41 1 135 1 284 1 277 1 147 1 175 1 329 1 
41 2 135 1 284 3 147 4 199 1 175 1 347 1 63 1 277 4 280 1 21 2 22 1 213 1 329 2 
176 1 119 1 41 1 135 1 284 1 293 1 277 2 147 2 21 1 251 1 175 1 329 1 
119 1 135 1 41 1 284 1 147 3 312 1 199 1 175 1 347 2 63 2 277 3 329 1 
284 1 275 1 184 1 
119 1 135 1 277 1 147 1 228 1 175 1 
119 1 41 1 135 1 284 1 277 2 147 2 21 1 353 1 175 1 329 1 
344 1 
119 1 41 1 135 1 284 1 277 1 147 1 175 1 329 1 
119 1 63 1 41 1 135 1 284 1 277 3 147 3 21 1 353 1 175 1 329 1 
284 1 280 1 22 1 213 1 
284 1 329 1 

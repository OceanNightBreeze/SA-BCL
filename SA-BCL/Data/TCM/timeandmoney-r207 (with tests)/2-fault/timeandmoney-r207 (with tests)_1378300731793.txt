#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4819 | stmt -> ;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONDITION | 1265 | if (x) -> if (!x)
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
135 1 0 1 1 9 272 9 273 1 226 2 35 1 121 1 22 2 96 3 305 5 148 2 43 1 368 2 24 1 153 1 262 4 26 6 340 2 196 1 264 1 376 1 197 2 132 1 114 1 19 1 345 1 346 2 
135 1 0 1 1 9 272 9 273 1 226 2 35 1 121 1 22 2 96 3 305 5 148 2 43 1 368 2 24 1 153 1 262 4 26 6 340 2 196 1 264 1 376 1 197 2 132 1 114 1 19 1 345 1 346 2 
135 1 0 1 1 10 272 10 273 1 226 2 35 1 121 1 22 2 96 4 305 6 148 2 43 1 368 2 24 1 153 1 262 5 26 7 340 2 196 1 264 1 376 1 197 2 132 1 114 1 19 1 345 1 346 2 
135 1 0 1 1 7 272 7 273 1 226 2 35 1 121 1 22 1 96 2 305 4 148 2 43 1 368 2 24 1 262 3 26 4 340 2 196 1 264 1 376 1 197 2 132 1 114 1 19 1 345 1 346 2 
135 1 1 4 272 4 273 1 368 1 43 1 226 1 153 1 262 2 26 3 35 1 340 1 376 1 22 2 197 1 96 1 346 1 305 3 
135 1 1 2 0 1 272 2 148 1 273 1 368 1 154 1 35 1 340 1 196 1 197 1 232 1 244 1 305 1 346 1 
135 1 1 3 272 3 148 1 273 1 262 1 26 1 35 1 340 2 121 1 96 1 346 2 305 2 
135 1 1 9 272 9 273 1 226 1 35 1 121 1 22 2 96 3 305 5 148 1 43 1 368 1 262 4 153 1 26 7 340 2 264 1 376 1 197 1 19 1 242 1 294 1 346 2 
135 1 1 9 272 9 273 1 226 1 35 1 121 1 22 2 96 3 305 5 148 1 43 1 368 1 262 4 153 1 26 7 340 2 264 1 376 1 197 1 19 1 242 1 294 1 346 2 
116 1 33 1 91 1 
238 1 91 1 356 2 
218 2 308 1 245 2 28 1 103 2 44 2 344 2 34 2 
270 1 221 1 162 1 245 2 320 1 57 1 353 1 276 1 34 2 61 1 92 1 170 2 205 1 300 1 330 1 143 1 209 1 210 1 101 1 306 1 308 1 189 2 73 2 177 1 103 2 44 2 259 2 151 1 260 1 156 1 50 1 263 1 218 3 28 1 344 3 85 1 318 2 
218 1 308 1 245 1 103 1 44 1 111 1 129 1 344 1 331 1 34 1 
116 1 245 1 145 1 72 1 223 1 46 1 91 1 21 1 60 1 218 1 29 1 344 1 331 1 10 1 
116 1 245 1 145 1 72 1 44 1 103 1 223 1 46 2 34 1 91 1 21 2 218 1 29 1 344 1 331 1 
45 1 46 1 42 1 304 1 21 1 
116 1 280 1 45 1 46 2 65 1 42 1 91 1 21 2 
45 1 46 1 21 1 
308 1 245 1 255 1 44 1 103 1 129 1 46 1 34 1 21 1 218 1 111 1 344 1 331 1 42 1 
91 1 
116 1 280 1 45 1 46 2 42 1 91 1 118 1 21 2 
116 1 365 1 295 1 75 1 45 2 46 5 91 1 21 5 49 1 107 1 280 1 316 2 301 1 109 1 251 2 78 1 198 1 42 2 160 2 
162 1 245 1 73 1 177 1 151 1 44 1 103 1 259 1 276 1 168 1 156 1 61 1 92 1 170 1 218 2 374 1 344 2 210 1 85 1 20 1 
28 1 33 1 
245 2 44 1 103 1 34 1 370 1 203 1 218 2 28 2 344 2 
230 1 168 1 228 1 
162 1 73 1 177 1 259 1 151 1 276 1 156 1 61 1 92 1 170 1 218 1 279 1 28 1 344 1 210 1 85 1 
218 3 374 1 245 3 28 1 103 3 44 3 344 3 34 1 
218 1 245 1 103 1 44 1 111 1 344 1 331 1 
218 1 245 1 103 1 44 1 344 1 331 1 34 1 370 1 203 1 
270 1 221 1 162 1 245 3 320 1 57 1 223 1 276 1 34 2 21 1 61 1 92 1 203 1 170 1 205 1 300 1 330 1 209 1 331 1 210 1 308 1 189 2 145 1 176 1 72 1 73 1 177 1 151 1 336 1 103 3 44 3 259 1 260 1 46 1 156 1 263 1 218 4 374 1 28 1 29 1 344 4 85 1 318 1 20 1 
218 2 245 2 374 1 28 1 103 1 44 1 172 1 344 2 60 1 
245 3 145 1 176 1 72 1 44 3 103 3 223 1 46 1 34 1 91 1 21 1 203 1 218 3 374 2 29 1 282 1 344 3 331 1 20 1 
245 2 44 2 103 2 34 1 168 1 228 1 203 1 218 2 374 1 344 2 
162 1 73 1 177 1 259 1 151 1 276 1 61 1 156 1 92 1 170 1 218 1 28 1 344 1 210 1 85 1 
347 1 162 1 73 1 350 1 177 1 259 1 151 1 61 1 156 1 92 1 170 1 218 1 28 1 344 1 210 1 
270 1 221 1 320 1 168 2 228 2 205 1 230 2 300 1 209 2 285 1 306 2 146 1 189 2 12 1 152 1 260 1 155 1 194 1 130 1 290 1 18 1 31 1 134 1 318 4 
218 1 245 1 72 1 309 1 103 1 44 1 344 1 331 1 
245 5 44 4 103 4 34 1 60 1 203 1 218 5 374 2 358 1 28 1 172 1 344 5 254 1 20 1 
218 2 245 2 309 1 103 2 44 2 111 1 344 2 331 1 
11 1 311 1 
11 1 311 1 
182 1 371 1 
182 1 371 1 
182 1 371 1 
11 1 311 1 84 1 
11 1 311 1 261 1 
373 1 11 2 311 2 25 1 182 1 371 1 
11 1 311 1 84 1 
11 1 311 1 84 1 
11 1 311 1 292 1 
11 1 311 1 292 1 
11 1 311 1 292 1 
348 1 271 2 222 2 11 2 214 1 311 2 25 1 297 3 46 2 47 1 91 1 21 2 355 2 171 1 315 2 6 1 7 1 159 1 213 2 
271 1 222 1 245 2 88 1 297 1 21 1 204 1 7 1 213 1 11 1 256 1 103 2 44 2 311 1 46 1 261 1 218 2 315 1 375 1 342 1 28 1 52 1 344 2 293 1 
368 1 197 1 226 1 
368 1 197 1 232 1 
163 1 197 3 181 1 232 1 226 2 326 1 
163 1 197 2 181 1 232 1 226 1 54 1 
163 2 197 2 181 1 232 1 226 1 
161 2 116 1 295 3 88 1 21 5 91 2 356 3 280 1 64 1 301 2 251 1 42 4 23 2 146 1 71 1 256 1 149 1 127 1 152 1 238 1 45 1 46 5 195 1 375 1 316 1 290 1 78 1 158 1 378 2 160 1 133 1 31 1 
161 6 116 1 295 8 2 1 138 1 21 9 91 5 356 9 249 1 280 1 301 6 251 2 9 5 42 7 304 5 365 1 146 3 71 1 256 4 149 3 127 2 152 3 238 3 45 6 46 9 316 2 290 3 78 1 131 1 79 1 158 2 378 6 266 1 160 2 31 3 
161 2 116 1 295 3 91 3 21 3 356 4 64 1 301 2 251 1 42 2 23 1 365 1 146 1 256 1 127 1 149 1 152 1 238 2 46 3 195 1 316 1 290 1 158 1 378 2 160 1 31 1 
161 4 116 1 295 5 138 1 91 4 21 4 356 7 64 1 301 4 251 1 23 2 42 3 365 1 146 2 256 2 127 1 149 2 152 2 238 3 46 4 195 1 316 1 290 2 131 1 79 1 158 1 378 4 160 1 31 2 
147 1 33 1 156 1 
39 1 156 1 
190 1 
156 1 92 1 
220 1 147 2 177 1 90 1 156 3 92 1 
177 1 156 1 92 1 
208 1 156 1 
146 1 12 2 128 1 354 1 137 1 338 1 130 3 357 1 180 1 37 1 94 1 241 2 283 1 209 3 31 1 306 4 318 7 
146 1 12 2 128 1 354 1 137 1 338 1 130 3 357 1 180 1 37 1 94 1 241 2 283 1 209 3 31 1 306 4 318 7 
146 1 12 2 274 1 128 1 354 1 137 1 338 1 130 3 357 1 180 1 37 1 94 1 241 2 283 1 209 3 31 1 306 4 318 7 
270 1 221 1 166 1 354 2 247 1 137 1 4 1 357 1 205 1 300 1 37 2 359 4 94 1 207 1 283 2 209 15 99 3 67 1 306 16 68 1 189 2 146 4 12 5 149 3 128 1 152 3 338 2 217 1 130 10 180 5 290 3 241 3 318 31 31 4 
270 1 221 1 296 1 354 1 137 1 205 1 357 1 300 1 37 1 94 1 283 1 209 4 306 5 146 2 189 2 175 1 12 2 338 1 130 3 180 1 241 1 112 1 31 2 318 9 
135 1 162 1 1 2 272 2 273 1 226 1 277 1 139 1 227 1 326 1 35 1 170 1 360 1 232 1 361 1 66 1 210 1 305 1 73 1 148 1 368 1 102 1 259 1 26 1 340 1 197 2 81 1 380 1 346 1 381 1 
87 1 135 1 162 1 1 3 272 3 273 1 226 1 277 1 139 1 326 1 170 1 360 1 232 1 361 1 66 1 210 1 305 1 73 1 148 1 368 1 102 1 259 1 26 2 340 1 17 1 27 1 197 2 81 1 346 1 381 1 
87 1 135 1 162 1 1 2 272 2 273 1 226 1 139 1 326 1 170 1 360 1 232 1 361 1 66 1 210 1 305 1 148 1 73 1 102 1 368 1 259 1 26 2 17 1 197 2 81 1 
162 1 1 1 272 1 61 1 3 1 92 1 170 1 360 2 361 2 66 2 210 1 235 1 73 1 148 2 259 1 192 1 15 1 156 1 340 1 27 1 110 1 113 1 346 1 
162 1 1 1 272 1 226 1 277 1 139 1 326 1 35 1 170 1 360 1 232 1 361 1 66 1 210 1 73 1 148 1 368 1 102 1 259 1 340 1 17 1 197 2 81 1 380 1 346 1 381 1 
286 1 
223 1 275 1 225 2 91 2 325 1 92 1 5 2 280 3 329 2 95 1 284 1 331 1 98 1 10 1 145 1 238 2 192 1 45 6 46 5 288 2 15 1 156 1 105 1 344 1 160 1 243 1 162 1 116 1 245 1 295 2 21 5 61 2 60 1 356 2 170 2 120 1 250 1 206 1 62 1 301 2 251 1 210 1 366 2 73 2 72 1 127 1 259 2 258 4 74 1 179 2 218 1 316 1 29 1 78 1 267 2 
245 1 145 1 366 1 72 1 258 2 223 1 74 1 45 2 46 3 118 1 21 3 60 1 105 1 218 1 280 1 62 1 29 1 344 1 331 1 284 1 243 1 10 1 
116 1 245 1 145 1 72 1 258 3 223 1 74 1 45 1 46 3 288 1 118 1 91 1 21 3 60 1 105 1 218 1 280 1 62 1 29 1 344 1 331 1 284 1 243 1 10 1 
245 1 116 1 223 1 118 1 21 3 91 1 60 1 280 1 62 1 329 1 284 1 331 1 10 1 145 1 72 1 366 1 258 3 74 1 45 2 46 3 288 1 105 1 218 1 29 1 344 1 243 1 
223 1 225 2 91 5 325 1 5 2 280 3 329 4 38 1 331 1 284 1 98 1 10 1 145 1 45 7 238 2 46 5 288 4 193 1 105 1 344 1 160 1 243 1 245 1 116 5 295 1 298 1 167 1 21 5 118 1 60 1 62 1 301 1 251 1 366 4 72 1 178 1 258 6 74 1 179 2 218 1 316 1 29 1 78 1 267 2 
116 1 245 1 295 1 223 1 275 1 225 2 91 2 325 1 21 4 60 1 356 2 5 2 280 2 62 1 329 2 301 1 251 1 284 1 331 1 98 1 10 1 145 1 366 2 72 1 258 4 74 1 45 4 238 2 46 4 288 2 179 2 105 1 218 1 316 1 29 1 78 1 344 1 160 1 267 2 243 1 
116 1 245 1 295 1 223 1 225 2 167 1 91 1 325 1 21 4 60 1 5 2 280 2 62 1 329 2 301 1 38 1 251 1 284 1 331 1 98 1 10 1 145 1 366 2 72 1 178 1 258 4 74 1 45 4 238 2 46 4 288 2 179 2 105 1 218 1 316 1 29 1 78 1 344 1 160 1 267 2 243 1 
116 1 245 1 295 1 223 1 225 2 167 1 91 1 325 1 21 4 60 1 5 2 280 2 62 1 329 2 301 1 38 1 251 1 284 1 331 1 98 1 10 1 145 1 366 2 72 1 178 1 258 4 74 1 45 4 238 2 46 4 288 2 179 2 105 1 218 1 316 1 29 1 78 1 344 1 160 1 267 2 243 1 
116 1 245 1 295 1 223 1 351 1 91 1 325 1 21 4 60 1 356 2 280 2 62 1 329 2 301 1 38 1 251 1 284 1 331 1 10 1 145 1 366 2 72 1 258 4 369 1 216 2 74 1 45 4 46 4 288 2 179 2 48 1 105 1 218 1 316 1 29 1 78 1 344 1 160 1 82 2 267 2 243 1 
116 1 245 1 295 1 223 1 225 2 167 1 91 1 325 1 21 4 60 1 5 2 280 2 62 1 301 1 329 3 38 1 251 1 284 1 331 1 98 1 10 1 145 1 72 1 366 3 178 1 258 5 74 1 238 2 45 5 46 4 179 2 288 3 193 1 105 1 218 1 316 1 29 1 78 1 344 1 160 1 267 2 243 1 
116 1 245 1 295 1 223 1 225 2 167 1 91 1 325 1 21 4 60 1 5 2 280 2 62 1 301 1 329 3 38 1 251 1 284 1 331 1 98 1 10 1 145 1 72 1 366 3 178 1 258 5 74 1 238 2 45 5 46 4 179 2 288 3 193 1 105 1 218 1 316 1 29 1 78 1 344 1 160 1 267 2 243 1 
223 1 275 1 325 1 91 1 280 2 329 2 331 1 284 1 10 1 145 1 45 4 46 4 288 2 48 1 105 1 344 1 160 1 243 1 245 1 116 1 295 1 21 4 60 1 356 2 62 1 301 1 251 1 72 1 366 2 258 4 74 1 216 2 179 2 218 1 316 1 29 1 78 1 267 2 82 2 
270 1 221 1 146 1 189 2 320 1 12 2 260 1 354 1 33 1 137 1 168 1 155 1 228 1 130 2 230 1 205 1 357 1 300 1 28 2 37 1 241 1 94 1 209 3 31 1 318 6 306 3 
270 2 221 2 320 2 166 1 57 1 58 1 168 11 228 4 205 2 230 11 300 2 63 1 359 3 281 1 143 1 209 6 253 1 99 3 67 1 306 8 189 4 146 2 12 1 149 2 260 1 152 1 130 2 28 1 180 1 77 1 290 2 318 14 31 1 
270 1 162 1 221 1 245 1 349 1 320 1 57 1 276 1 61 1 92 1 228 1 170 1 279 1 205 1 300 1 63 1 209 1 143 1 210 1 306 1 189 2 73 1 177 1 151 1 259 1 103 1 44 1 260 1 156 1 218 2 76 1 374 1 28 1 265 1 344 2 85 1 20 1 318 2 
270 3 221 3 320 3 136 2 276 2 137 1 92 2 228 7 328 1 230 7 37 1 94 1 143 1 97 1 333 2 189 6 146 3 12 4 150 1 44 1 103 1 151 2 149 2 152 2 191 2 156 2 17 1 290 2 241 1 344 3 20 1 162 2 245 1 57 1 354 1 168 7 61 1 170 3 357 1 205 3 300 3 63 1 209 10 210 2 212 2 306 10 73 3 177 2 259 3 260 3 263 2 130 8 218 3 374 1 28 2 180 4 85 2 31 3 318 20 
270 2 162 2 221 2 245 1 320 2 201 1 56 1 57 1 353 2 227 1 61 2 92 2 170 8 205 2 300 2 143 1 209 1 210 2 364 1 306 1 188 1 189 4 335 1 73 8 103 1 44 1 259 7 236 1 260 2 192 1 155 1 156 3 15 1 218 1 374 1 108 1 17 1 344 1 318 2 
270 1 221 1 245 1 320 1 168 1 34 1 228 1 203 1 230 1 205 1 300 1 63 1 252 1 209 2 306 1 189 2 146 1 12 1 44 1 103 1 149 1 260 1 152 1 130 1 218 1 290 1 344 1 318 3 31 1 
270 1 221 1 189 2 146 1 320 1 260 1 168 1 155 1 228 1 194 1 130 1 230 1 205 1 300 1 180 1 290 1 318 2 306 2 
270 1 221 1 189 2 320 1 12 1 260 1 152 1 168 1 155 1 228 1 130 1 230 1 205 1 300 1 209 2 318 2 134 1 31 1 
270 1 221 1 320 1 168 2 228 2 205 1 230 2 300 1 209 2 306 2 146 1 189 2 12 1 149 1 260 1 152 1 155 1 130 2 180 1 290 1 318 4 31 1 
270 1 221 1 189 2 146 1 201 1 320 1 260 1 168 1 228 1 194 1 130 1 230 1 205 1 300 1 180 1 290 1 318 2 306 2 
270 1 221 1 189 2 201 1 320 1 12 1 260 1 152 1 168 1 228 1 130 1 230 1 205 1 300 1 209 2 318 2 134 1 31 1 
270 1 221 1 320 1 201 1 168 2 228 2 205 1 230 2 300 1 209 2 306 2 146 1 189 2 12 1 149 1 260 1 152 1 130 2 180 1 290 1 318 4 31 1 
270 1 221 1 320 1 168 2 228 2 205 1 230 2 300 1 209 2 306 2 146 1 189 2 12 1 149 1 260 1 152 1 130 2 180 1 290 1 318 4 31 1 
270 1 162 1 221 1 320 1 57 1 276 1 61 1 92 1 170 1 205 1 300 1 143 1 209 1 210 1 306 1 189 2 73 1 177 1 151 1 259 1 260 1 156 1 263 1 218 1 28 1 344 1 85 1 318 2 
347 1 270 1 162 1 221 1 320 1 350 1 57 1 61 1 92 1 229 1 170 1 205 1 300 1 143 1 209 1 210 1 306 1 189 2 73 1 177 1 151 1 259 1 260 1 156 1 218 1 28 1 344 1 318 2 
270 1 221 1 320 1 168 2 228 2 205 1 230 2 300 1 63 1 209 2 306 2 146 1 189 2 12 1 149 1 260 1 152 1 130 2 180 1 290 1 318 4 31 1 
270 1 162 1 221 1 320 1 276 1 168 2 227 1 228 2 92 1 170 1 230 2 205 1 300 1 209 2 210 1 333 1 306 2 146 1 189 2 73 1 12 1 177 1 151 1 259 1 149 1 152 1 260 1 156 1 263 1 130 2 218 1 180 1 290 1 344 1 85 1 31 1 318 4 
270 1 221 1 245 1 320 1 34 1 168 1 203 1 228 1 205 1 230 1 300 1 63 1 209 1 306 2 189 2 146 1 44 1 103 1 149 1 152 1 260 1 372 1 130 1 218 1 180 1 290 1 344 1 31 1 318 3 
270 3 221 3 137 1 185 1 4 1 36 2 37 1 231 1 94 1 99 3 146 5 189 6 12 4 149 4 152 4 237 1 290 4 241 1 53 1 166 1 354 1 119 1 205 3 357 1 300 3 359 4 123 1 209 21 124 1 363 1 174 1 306 20 67 3 126 1 175 1 130 8 180 4 30 1 379 1 219 4 268 1 31 5 318 41 
270 4 221 4 166 1 354 1 137 1 185 1 119 1 4 2 357 1 205 4 36 2 300 4 37 1 231 1 359 4 94 1 123 1 124 1 209 18 363 1 99 3 174 1 67 3 306 20 126 1 189 8 146 5 175 1 12 4 149 4 237 1 152 3 130 7 180 3 30 1 290 4 241 1 379 1 53 1 268 1 219 4 318 38 31 4 
270 2 221 2 166 2 354 1 137 1 185 1 119 1 4 1 357 1 205 2 36 1 300 2 37 1 231 1 359 4 281 2 94 1 124 1 209 25 363 1 99 4 174 1 67 2 306 27 126 1 189 4 146 8 175 1 12 7 149 7 152 7 130 14 180 7 30 1 290 7 241 1 379 1 53 1 268 1 219 4 318 52 31 8 
270 2 221 2 166 1 119 1 205 2 36 1 300 2 359 2 123 1 209 10 363 1 99 1 67 1 306 9 126 1 189 4 146 3 175 1 12 3 149 3 310 1 152 3 130 6 180 3 290 3 53 1 268 2 219 2 318 19 31 3 
270 3 221 3 185 1 119 1 4 2 205 3 36 2 300 3 359 2 231 1 209 12 124 1 363 1 99 2 174 1 306 14 67 2 126 2 189 6 146 3 175 1 12 2 149 3 152 2 130 4 180 2 30 1 290 3 379 1 53 1 268 1 219 4 31 2 318 26 
271 1 69 1 222 1 11 1 315 1 6 1 311 1 25 1 47 1 213 1 
204 1 261 1 
271 1 222 1 11 1 315 1 93 1 311 1 339 1 86 1 213 1 
348 1 271 1 222 1 11 1 214 1 311 1 25 1 297 2 46 1 47 1 91 1 21 1 355 1 315 1 6 1 7 1 159 1 213 1 
348 1 271 1 222 1 11 1 214 1 311 1 25 1 297 2 46 1 47 1 91 1 21 1 355 1 315 1 6 1 7 1 159 1 213 1 
348 1 271 1 222 1 11 1 214 1 311 1 25 1 297 2 46 1 47 1 91 1 21 1 355 1 315 1 6 1 7 1 159 1 213 1 
373 1 184 1 84 1 
373 1 184 1 84 1 
291 1 292 1 
373 1 291 1 292 1 
342 1 293 1 
271 1 222 1 245 2 88 1 297 1 21 1 355 1 204 1 42 1 213 1 11 1 257 1 256 1 214 1 44 2 103 2 311 1 46 1 261 1 218 2 315 1 375 1 342 1 28 1 52 1 344 2 293 1 
184 1 84 1 
373 1 291 1 292 1 
270 1 162 1 221 1 245 2 32 1 320 1 57 1 353 2 170 2 205 1 122 1 300 1 63 1 143 1 209 1 210 1 306 1 189 2 73 2 367 1 236 1 259 2 260 1 157 1 218 2 377 1 344 2 318 2 
162 1 73 2 368 1 259 2 226 1 139 1 326 1 227 1 170 2 16 1 106 1 341 1 17 1 197 2 232 1 81 1 210 1 66 1 381 1 
162 1 73 1 368 1 259 1 226 1 139 1 326 1 170 1 16 1 314 1 17 1 197 2 232 1 81 1 66 1 210 1 381 1 
162 1 73 1 164 1 259 1 192 1 156 1 61 1 15 1 92 1 170 1 106 1 110 1 210 1 66 1 
162 1 73 1 368 1 259 1 226 1 139 1 326 1 170 1 16 1 106 1 341 1 17 1 197 2 232 1 81 1 66 1 210 1 381 1 
224 1 
116 1 301 1 295 1 109 1 33 1 91 1 49 1 
116 1 295 1 225 1 91 2 21 1 356 1 5 1 280 1 301 1 251 1 98 1 238 1 45 1 46 1 316 1 78 1 160 1 
223 2 90 1 323 2 91 8 227 1 92 3 280 3 39 3 8 2 233 2 144 2 100 2 146 2 147 2 149 2 152 2 45 5 238 6 46 5 156 10 49 1 289 1 290 2 109 1 343 2 160 4 161 6 162 4 116 2 55 2 117 1 295 9 21 5 248 2 61 1 170 3 356 12 250 1 301 8 251 4 302 1 208 2 210 3 212 2 307 1 73 3 177 3 127 2 259 3 316 4 78 4 378 6 317 1 31 2 
161 5 116 2 295 8 323 2 185 1 21 1 91 5 356 6 250 1 280 1 301 5 359 1 231 1 251 2 124 1 99 1 67 1 146 2 127 1 149 2 152 2 45 1 238 3 46 1 239 1 316 2 30 1 290 2 78 2 343 1 379 1 378 5 160 2 83 1 31 2 
245 1 295 2 354 1 323 2 167 1 34 1 21 1 37 1 301 2 251 1 94 1 331 1 308 1 146 2 255 1 44 1 103 1 129 1 46 1 218 1 316 1 111 1 78 1 343 1 112 1 344 1 160 1 31 1 
116 1 295 1 91 1 49 1 316 1 301 1 251 1 109 1 78 1 160 1 
161 5 146 2 149 2 295 5 152 2 238 5 323 2 91 5 356 10 301 5 290 2 343 1 378 5 212 1 31 2 
116 1 280 1 45 1 46 1 91 1 21 1 
162 1 295 2 21 3 61 2 92 1 170 4 250 2 206 1 280 2 301 2 251 2 95 1 302 1 334 1 210 1 307 2 365 1 73 4 259 4 127 2 45 4 192 1 46 3 156 1 15 1 316 2 78 1 160 2 183 1 
270 1 221 1 162 1 245 2 320 1 57 1 276 1 34 2 61 1 92 1 170 1 205 1 300 1 330 1 209 1 210 1 308 1 189 2 73 1 177 1 259 1 103 2 44 2 151 1 260 1 156 1 263 1 218 3 28 1 344 3 85 1 318 1 
161 2 116 2 127 1 295 1 238 2 91 4 356 4 250 1 316 1 301 2 251 1 241 1 78 1 378 2 160 1 
271 1 287 1 213 1 
271 1 342 1 6 1 41 1 213 1 
271 1 287 1 213 1 
271 1 287 1 213 1 
271 1 352 1 213 1 
271 1 352 1 213 1 
271 1 352 1 213 1 
271 1 213 1 
11 1 311 1 
270 1 221 1 354 1 137 1 205 1 357 1 300 1 37 1 359 1 231 1 94 1 209 4 99 1 67 1 306 4 146 1 189 2 175 1 12 2 130 2 241 1 31 1 318 8 
270 2 221 2 322 1 166 1 354 1 137 1 357 1 205 2 300 2 37 1 359 2 231 1 94 1 209 5 99 1 67 1 306 6 189 4 146 2 175 1 12 2 149 1 130 3 180 1 290 1 241 1 31 1 318 11 
270 3 221 3 322 1 354 1 137 1 185 1 4 1 357 1 205 3 300 3 37 1 359 1 231 1 94 1 209 10 124 1 99 1 67 1 306 9 189 6 146 3 175 1 12 3 149 2 152 2 130 4 180 1 30 1 290 2 241 1 379 1 318 19 31 3 
270 3 221 3 322 1 354 1 137 1 185 1 4 1 357 1 205 3 300 3 37 1 359 1 231 1 94 1 209 7 124 1 99 1 67 1 306 10 189 6 146 3 175 1 12 3 149 2 152 1 130 5 180 2 30 1 290 2 241 1 379 1 318 17 31 2 
270 1 221 1 354 1 137 1 205 1 357 1 300 1 37 1 359 1 231 1 94 1 209 4 99 1 67 1 306 4 146 1 189 2 175 1 12 2 130 2 241 1 31 1 318 8 
270 1 221 1 185 1 205 1 300 1 359 1 231 1 209 6 124 1 99 1 67 1 306 6 189 2 146 2 175 1 12 1 149 2 152 2 130 2 180 1 30 1 290 2 379 1 318 12 31 2 
270 4 221 4 322 1 354 1 137 1 185 1 4 2 357 1 205 4 300 4 37 1 359 1 231 1 94 1 209 8 124 1 99 1 67 1 306 10 189 8 146 3 175 1 12 3 149 2 152 1 130 5 180 2 30 1 290 2 241 1 379 1 318 18 31 2 
270 4 221 4 185 1 4 2 205 4 300 4 359 1 231 1 123 1 209 7 124 1 99 1 67 1 306 9 189 8 146 3 175 1 12 3 149 3 152 2 130 6 180 3 30 1 290 3 379 1 318 16 31 2 
146 1 12 3 354 3 137 1 130 6 357 2 37 3 180 3 94 1 209 4 31 1 318 7 306 3 
270 4 221 4 354 1 137 1 185 1 4 2 357 1 205 4 300 4 37 1 359 1 231 1 94 1 123 1 209 8 124 1 99 1 67 1 306 10 189 8 146 3 175 1 12 3 149 2 152 1 130 4 180 1 30 1 290 2 241 1 379 1 318 18 31 2 
270 2 221 2 146 1 189 4 12 2 354 1 137 1 130 3 4 1 205 2 357 1 300 2 180 1 37 1 241 1 94 1 209 4 31 1 318 8 306 4 
146 1 12 2 354 1 33 1 137 1 130 2 357 1 37 1 241 1 94 1 209 3 306 3 318 6 31 1 
270 1 221 1 189 2 146 1 12 1 322 1 149 1 152 1 130 2 205 1 300 1 180 1 290 1 209 2 31 1 306 2 318 4 
146 1 12 1 166 1 149 1 152 1 130 2 180 1 359 2 290 1 209 4 99 1 31 1 67 1 318 7 306 3 
270 2 221 2 166 1 354 2 137 1 4 2 357 1 205 2 300 2 37 2 359 2 281 1 94 1 209 12 99 2 306 11 146 3 189 4 12 5 149 2 152 2 14 1 130 9 180 4 290 2 77 1 241 1 318 23 31 3 
359 1 209 1 318 1 
99 1 318 1 306 1 
270 1 221 1 189 2 146 1 322 1 12 2 149 1 152 1 130 3 205 1 300 1 180 1 290 1 209 3 212 1 318 6 306 3 31 1 
270 1 221 1 185 1 205 1 300 1 359 1 231 1 209 6 124 1 99 1 67 1 306 6 189 2 146 2 175 1 12 1 149 2 152 2 130 2 180 1 30 1 290 2 379 1 318 12 31 2 
146 1 12 1 354 1 130 2 37 1 180 1 94 1 209 3 306 3 318 6 31 1 
270 1 221 1 189 2 12 1 354 1 137 1 14 1 130 2 4 1 357 1 205 1 300 1 180 1 37 1 209 2 306 1 318 3 
270 1 221 1 189 2 146 2 175 1 12 3 354 2 130 5 205 1 300 1 37 2 180 2 94 1 112 1 209 5 306 5 318 10 31 2 
270 1 221 1 189 2 146 1 175 1 130 1 205 1 300 1 180 1 290 1 306 2 318 2 
270 1 221 1 189 2 146 1 175 1 12 1 149 1 152 1 130 2 205 1 300 1 180 1 290 1 209 2 31 1 306 2 318 4 
270 3 221 3 189 6 175 1 12 1 354 1 14 1 130 2 4 1 205 3 300 3 37 1 180 1 123 1 209 2 318 3 306 1 
270 5 221 5 322 1 166 1 354 3 247 1 137 1 4 2 357 1 205 5 300 5 37 3 359 4 94 2 123 1 209 18 99 3 67 1 306 16 68 1 189 10 146 5 175 1 12 7 149 3 152 3 14 1 217 1 130 12 180 5 290 3 241 1 318 34 31 5 
218 1 245 1 28 1 141 1 172 1 344 1 60 1 
245 1 246 1 13 1 60 1 140 1 313 1 278 1 218 1 28 1 141 1 172 1 344 1 
162 1 73 1 259 1 192 1 33 1 210 1 156 1 15 1 61 1 92 1 170 1 
162 1 245 1 73 1 177 1 151 1 44 1 103 1 259 1 156 1 61 1 92 1 170 1 218 2 374 1 28 1 344 2 210 1 85 1 
307 1 162 1 245 2 72 1 73 1 177 2 151 1 44 1 103 2 259 1 156 3 92 2 170 1 218 2 374 1 28 1 29 1 8 1 208 1 344 2 331 1 210 1 85 1 
162 1 245 2 350 1 92 2 170 2 8 1 208 1 332 1 331 1 210 1 307 1 73 2 72 1 177 2 259 2 103 2 44 1 151 1 156 3 218 2 374 1 28 1 29 1 344 2 
307 1 162 1 116 1 147 1 73 3 177 1 259 3 223 1 104 1 45 1 46 2 91 1 21 2 61 1 202 1 156 4 92 1 170 3 39 1 8 1 208 1 332 1 210 1 
307 1 162 1 116 1 147 1 73 3 177 1 259 3 223 1 45 1 46 2 91 1 21 2 61 1 156 4 92 1 170 3 39 1 8 1 208 1 332 1 210 1 144 1 
162 1 73 1 108 1 259 1 210 1 170 1 
188 1 162 3 199 1 335 1 73 7 56 1 177 1 259 6 353 1 90 1 312 1 227 1 61 2 156 3 92 2 170 7 108 1 17 1 211 1 210 2 364 1 
270 2 221 2 320 2 276 1 137 1 227 1 228 1 92 1 230 1 37 1 94 1 333 1 189 4 146 1 12 2 44 1 103 1 151 1 191 1 156 1 241 1 344 2 162 1 245 1 354 1 168 1 170 1 205 2 357 1 122 1 300 2 63 1 209 3 210 1 306 3 73 1 177 1 259 1 260 2 263 1 130 2 218 2 374 1 28 2 85 1 318 6 31 1 
116 1 295 1 223 1 91 1 21 3 61 1 248 1 170 1 280 1 301 1 251 2 39 1 302 1 233 1 42 1 144 1 100 1 147 1 73 1 259 1 45 2 46 3 156 2 49 1 316 2 109 1 78 2 160 2 
162 2 147 1 73 2 177 1 259 2 90 1 227 1 156 2 92 1 170 2 108 1 317 1 210 1 
162 1 73 4 259 4 192 1 61 1 227 1 15 1 156 1 92 1 170 4 142 1 332 1 210 1 
307 1 162 2 199 1 200 1 73 2 177 1 150 1 259 2 312 1 156 1 92 1 170 2 187 1 210 1 
162 1 73 1 368 1 259 1 197 1 232 1 139 1 210 1 61 1 170 1 
157 1 162 1 17 1 73 2 259 2 210 1 227 1 170 2 
307 1 188 1 162 2 73 5 56 1 259 4 192 1 15 1 61 1 227 1 156 3 92 2 170 5 142 1 210 2 364 1 
307 1 319 1 188 1 162 2 73 5 259 4 192 1 15 1 61 1 227 1 156 3 92 2 170 5 142 1 210 2 364 1 
162 1 245 1 73 1 177 1 350 1 151 1 44 1 103 1 259 1 156 1 61 1 92 1 170 1 218 2 374 1 28 1 344 2 210 1 
307 1 162 2 199 1 73 1 177 1 259 1 90 1 312 1 156 1 92 1 170 1 211 1 210 1 
28 1 362 1 186 1 327 1 115 1 
116 1 145 1 72 1 176 1 165 1 223 1 215 1 324 1 46 2 91 1 21 2 186 2 327 2 28 1 29 1 331 1 42 1 362 2 115 1 
32 1 245 1 367 1 327 1 218 1 377 1 344 1 362 1 115 1 
165 1 215 1 115 1 
135 1 273 1 33 1 305 1 
135 1 1 1 272 1 273 1 305 1 346 1 340 1 
1 1 148 1 361 1 
135 1 1 3 272 3 273 1 337 1 35 1 340 1 299 1 240 1 196 2 305 1 346 1 
135 1 1 2 272 2 273 1 22 1 26 1 305 1 346 1 340 1 
1 1 272 1 43 1 368 1 226 1 262 1 35 1 340 1 197 1 346 1 305 1 
135 1 1 1 272 1 305 1 346 1 340 1 35 1 
135 2 1 1 272 1 273 1 346 1 340 1 35 1 
135 1 1 2 272 2 35 1 340 2 80 1 40 1 305 1 346 2 125 1 
135 1 1 3 272 3 273 1 262 1 26 2 35 1 340 1 264 1 96 1 19 1 346 1 305 2 
135 1 1 2 272 2 273 1 368 1 226 1 326 1 26 1 35 1 340 1 197 2 232 1 305 1 346 1 269 1 
135 1 1 4 272 4 273 1 153 1 262 1 26 2 35 1 340 2 22 1 96 1 346 2 305 2 
135 1 1 1 272 1 273 1 305 1 346 1 340 1 35 1 
135 2 1 4 272 4 273 2 262 1 26 2 169 1 340 1 299 1 196 1 240 1 96 1 346 1 305 3 
234 1 135 1 1 2 321 1 272 2 273 1 26 1 35 1 340 1 242 1 305 1 346 1 
135 1 1 3 70 1 272 3 273 1 35 1 340 1 299 1 240 2 196 2 305 1 346 1 
89 1 303 1 173 2 305 2 
51 1 1 1 272 1 346 1 340 1 35 1 
135 1 1 2 272 2 273 1 264 1 26 1 305 1 346 1 340 1 35 1 
59 1 
135 1 1 1 272 1 273 1 305 1 346 1 340 1 35 1 
135 1 196 1 1 3 272 3 264 1 273 1 26 1 305 1 346 1 340 1 35 1 
96 1 262 1 169 1 305 1 
135 1 305 1 

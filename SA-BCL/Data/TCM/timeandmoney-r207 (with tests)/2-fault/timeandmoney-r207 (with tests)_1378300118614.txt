#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V | STATEMENT | 1043 | stmt -> ;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | CONDITION | 11832 | if (x) -> if (!x)
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 5 254 1 27 1 220 2 28 2 199 2 5 1 260 2 142 1 265 6 267 1 205 4 270 9 182 1 42 1 41 1 273 9 294 1 94 1 49 1 356 1 185 2 210 2 298 2 71 1 168 1 72 1 171 3 
0 5 254 1 27 1 220 2 28 2 199 2 5 1 260 2 142 1 265 6 267 1 205 4 270 9 182 1 42 1 41 1 273 9 294 1 94 1 49 1 356 1 185 2 298 2 210 2 71 1 168 1 72 1 171 3 
0 6 254 1 27 1 220 2 28 2 199 2 5 1 260 2 142 1 265 7 267 1 205 5 270 10 182 1 42 1 41 1 273 10 294 1 94 1 49 1 356 1 185 2 298 2 210 2 71 1 168 1 72 1 171 4 
0 4 254 1 220 2 28 2 199 1 5 1 260 2 142 1 265 4 267 1 205 3 270 7 182 1 42 1 41 1 273 7 294 1 94 1 49 1 356 1 185 2 298 2 210 2 71 1 168 1 72 1 171 2 
267 1 205 2 270 4 0 3 27 1 182 1 28 1 220 1 273 4 199 2 294 1 94 1 260 1 210 1 298 1 72 1 171 1 265 3 
267 1 0 1 270 2 220 1 28 1 42 1 197 1 273 2 294 1 260 1 185 1 210 1 151 1 72 1 142 1 86 1 
267 1 205 1 270 3 0 2 220 2 273 3 294 1 185 1 210 2 168 1 72 1 171 1 265 1 
0 5 27 1 220 2 28 1 199 2 260 1 112 1 265 7 267 1 205 4 270 9 182 1 41 1 162 1 273 9 294 1 94 1 356 1 185 1 210 2 298 1 168 1 72 1 171 3 
0 5 27 1 220 2 28 1 199 2 260 1 112 1 265 7 267 1 205 4 270 9 182 1 41 1 162 1 273 9 294 1 94 1 356 1 185 1 210 2 298 1 168 1 72 1 171 3 
46 1 
163 1 143 1 87 2 
57 2 128 2 155 1 263 2 320 2 312 2 357 2 248 1 
214 2 128 2 155 1 76 1 320 3 284 1 362 1 303 1 57 3 324 1 201 1 263 2 366 1 367 1 139 1 38 1 144 2 161 1 312 2 91 1 238 1 67 1 44 1 315 2 93 1 374 2 242 1 19 1 122 2 100 1 296 1 125 1 357 2 248 1 170 1 190 1 280 1 
57 1 128 1 263 1 320 1 312 1 60 1 357 1 361 1 198 1 248 1 
268 1 299 1 75 1 311 1 320 1 118 1 2 1 40 1 361 1 57 1 295 1 226 1 263 1 143 1 
268 1 299 1 128 1 75 1 311 1 312 1 320 1 118 2 361 1 57 1 295 2 226 1 263 1 357 1 143 1 
282 1 295 1 118 1 141 1 302 1 
282 1 295 2 226 1 301 1 118 2 141 1 102 1 143 1 
295 1 118 1 141 1 
282 1 128 1 118 1 312 1 320 1 361 1 198 1 57 1 295 1 263 1 60 1 308 1 357 1 248 1 
143 1 
282 1 295 2 104 1 226 1 301 1 118 2 141 1 143 1 
282 2 345 2 301 1 118 5 145 1 107 1 175 1 295 5 9 1 226 1 32 2 377 1 84 1 141 2 143 1 172 1 281 1 126 2 333 1 
46 1 
128 1 155 2 320 2 312 1 292 1 57 2 263 2 357 1 231 1 
216 1 176 1 329 1 
214 1 155 1 38 1 320 1 44 1 315 1 57 1 324 1 201 1 242 1 122 1 366 1 14 1 170 1 280 1 190 1 
214 1 128 1 38 1 312 1 320 2 44 1 120 1 315 1 57 2 324 1 201 1 242 1 122 1 176 1 263 1 366 1 170 1 190 1 280 1 291 1 
179 1 128 4 271 1 155 1 312 4 320 5 2 1 292 1 120 1 57 5 263 5 357 1 278 1 291 2 
57 2 128 2 263 2 320 2 312 2 60 1 361 1 35 1 
57 3 128 3 155 1 263 3 320 3 312 3 357 1 291 1 
57 1 128 1 263 1 320 1 312 1 60 1 361 1 
57 1 128 1 263 1 320 1 312 1 357 1 292 1 361 1 231 1 
299 1 214 1 128 3 75 1 155 1 76 1 194 1 320 4 284 1 361 1 303 1 362 1 57 4 324 1 201 1 366 1 263 3 367 1 139 1 291 1 268 1 38 1 144 2 311 1 161 1 312 3 118 1 292 1 44 1 120 1 315 1 93 1 374 1 295 1 242 1 19 1 122 1 100 1 50 1 357 2 248 1 170 1 190 1 280 1 
57 2 128 1 155 1 271 1 263 2 320 2 312 1 2 1 291 1 
299 1 268 1 128 3 75 1 194 1 311 1 118 1 312 3 320 3 292 1 361 1 120 1 57 3 295 1 48 1 263 3 357 1 143 1 291 2 
128 2 216 1 312 2 320 2 292 1 57 2 263 2 176 1 357 1 291 1 
214 1 155 1 38 1 320 1 315 1 44 1 57 1 324 1 201 1 242 1 122 1 366 1 170 1 280 1 190 1 
214 1 155 1 38 1 320 1 348 1 315 1 44 1 354 1 57 1 324 1 201 1 242 1 122 1 170 1 190 1 
191 1 300 1 344 1 76 1 1 1 217 1 216 2 130 1 284 1 323 1 176 2 367 1 139 1 329 2 266 1 144 2 161 1 91 2 93 2 374 4 19 1 188 1 379 1 127 1 
57 1 75 1 128 1 263 1 320 1 312 1 361 1 35 1 
225 1 146 1 
225 1 146 1 
257 1 353 1 
257 1 353 1 
257 1 353 1 
225 1 140 1 146 1 
225 1 146 1 30 1 
225 2 160 1 257 1 65 1 146 2 353 1 
225 1 140 1 146 1 
225 1 140 1 146 1 
225 1 285 1 146 1 
225 1 285 1 146 1 
225 1 285 1 146 1 
128 2 25 1 155 1 215 1 320 2 256 1 30 1 57 2 56 1 225 1 263 2 12 1 230 1 180 1 116 1 89 1 312 2 118 1 146 1 314 1 45 1 147 1 295 1 52 1 
180 1 118 2 65 1 79 1 360 1 157 2 146 2 223 1 314 2 45 2 147 3 121 1 225 2 295 2 244 1 70 1 52 2 143 1 230 2 
260 1 28 1 298 1 
260 1 28 1 197 1 
252 1 261 1 298 2 28 3 197 1 17 1 
261 1 298 1 28 2 211 1 197 1 17 1 
261 1 298 1 28 2 197 1 17 2 
191 1 282 4 25 1 345 1 255 1 1 1 301 1 175 2 136 1 202 1 226 1 32 1 84 1 141 1 87 3 143 2 36 1 37 2 116 1 89 1 118 5 235 1 163 1 98 1 295 5 338 2 246 1 318 2 379 1 127 1 126 1 172 3 
191 3 282 7 25 4 345 2 1 3 301 1 222 1 302 5 53 1 107 1 175 6 133 1 135 1 136 3 365 5 202 2 226 1 32 2 141 6 84 1 85 1 87 9 143 5 118 9 235 2 163 3 295 9 149 1 338 6 246 1 318 6 379 3 127 3 126 2 172 8 
282 2 191 1 25 1 345 1 1 1 107 1 175 2 136 1 202 1 226 1 32 1 143 3 87 4 36 1 37 1 118 3 235 1 163 2 98 1 295 3 338 2 318 2 379 1 126 1 172 3 127 1 
282 3 191 2 25 2 345 1 1 2 53 1 107 1 175 4 133 1 136 2 202 1 226 1 32 1 85 1 143 4 87 7 36 1 37 2 118 4 235 1 163 3 98 1 295 4 338 4 318 4 379 2 126 1 172 5 127 2 
46 1 
233 1 44 1 
276 1 
324 1 44 1 190 1 
237 1 44 1 
44 1 190 1 
324 1 346 2 123 1 44 3 190 1 134 1 
191 1 359 1 344 2 39 1 351 1 91 4 156 1 196 1 207 2 93 3 323 3 148 1 109 1 374 7 289 1 249 1 379 1 
191 1 359 1 344 2 39 1 351 1 91 4 156 1 196 1 207 2 93 3 323 3 148 1 109 1 374 7 289 1 249 1 379 1 
191 1 359 1 344 2 39 1 351 1 272 1 91 4 196 1 156 1 207 2 93 3 323 3 148 1 109 1 374 7 289 1 249 1 379 1 
359 2 191 4 344 5 343 1 76 1 1 3 284 1 195 4 196 1 156 1 323 10 109 2 136 3 289 1 367 1 138 1 264 1 332 1 369 3 39 2 351 1 144 2 16 1 91 16 207 3 93 15 148 5 374 31 19 1 245 1 249 2 379 4 73 1 127 3 
191 1 359 1 344 3 76 2 284 2 156 1 196 1 323 4 109 1 289 1 367 2 290 1 39 1 232 1 144 4 91 5 207 2 93 4 148 1 374 9 19 2 249 1 379 1 73 1 
214 1 23 1 252 1 0 1 220 1 28 2 197 1 81 1 108 1 364 1 260 1 201 1 265 1 267 1 270 2 310 1 181 1 90 1 273 2 294 1 315 1 242 1 122 1 20 1 277 1 185 1 51 1 298 1 210 1 72 1 
252 1 214 1 0 1 220 1 28 2 197 1 304 1 81 1 108 1 260 1 201 1 265 2 270 3 310 1 181 1 90 1 273 3 294 1 315 1 275 1 355 1 242 1 122 1 20 1 277 1 185 1 51 1 298 1 210 1 72 1 
214 1 252 1 0 1 28 2 197 1 304 1 81 1 108 1 201 1 260 1 265 2 270 2 310 1 90 1 273 2 294 1 315 1 275 1 242 1 122 1 20 1 277 1 185 1 298 1 72 1 
214 1 270 1 38 1 310 2 131 1 90 2 220 1 66 1 313 1 273 1 44 1 6 1 315 1 201 1 242 1 18 1 355 1 122 1 137 1 277 2 185 2 210 1 190 1 
214 1 252 1 220 1 28 2 197 1 81 1 108 1 364 1 260 1 201 1 267 1 270 1 310 1 181 1 90 1 273 1 315 1 275 1 242 1 122 1 20 1 277 1 185 1 51 1 298 1 210 1 
375 1 
154 2 299 1 345 1 301 3 2 1 6 1 159 2 305 2 55 2 54 1 349 2 200 1 57 1 201 1 202 1 263 1 268 1 269 1 311 1 118 5 119 1 163 2 315 2 18 1 122 2 167 1 279 1 172 2 126 1 214 2 24 1 75 1 219 1 320 1 361 1 80 1 174 1 175 2 226 1 32 1 141 6 84 1 368 2 143 2 87 2 38 2 40 1 44 1 95 1 295 5 242 1 99 2 243 1 190 1 342 4 
299 1 154 1 24 1 75 1 104 1 301 1 320 1 2 1 361 1 54 1 57 1 200 1 263 1 141 2 268 1 269 1 311 1 118 3 40 1 295 3 279 1 342 2 
299 1 24 1 75 1 104 1 301 1 320 1 2 1 361 1 54 1 305 1 57 1 200 1 263 1 226 1 141 1 143 1 268 1 269 1 311 1 118 3 40 1 295 3 279 1 342 3 
299 1 154 1 24 1 75 1 104 1 301 1 320 1 2 1 361 1 54 1 305 1 57 1 200 1 263 1 226 1 141 2 143 1 268 1 269 1 311 1 118 3 40 1 295 3 99 1 279 1 342 3 
299 1 154 4 74 1 24 1 75 1 345 1 104 1 301 3 219 1 320 1 2 1 361 1 174 1 159 2 175 1 55 2 305 4 54 1 349 2 82 1 200 1 57 1 226 5 263 1 327 1 32 1 84 1 141 7 178 1 368 2 143 5 268 1 269 1 64 1 311 1 118 5 40 1 163 2 295 5 99 4 279 1 172 1 126 1 342 6 
154 2 299 1 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 80 1 174 1 159 2 175 1 305 2 55 2 54 1 349 2 200 1 57 1 226 1 263 1 32 1 141 4 84 1 368 2 143 2 87 2 268 1 269 1 311 1 118 4 40 1 163 2 295 4 99 2 279 1 172 1 126 1 342 4 
154 2 299 1 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 174 1 159 2 175 1 305 2 55 2 54 1 349 2 57 1 200 1 82 1 226 1 263 1 32 1 141 4 84 1 178 1 368 2 143 1 268 1 269 1 311 1 64 1 118 4 40 1 163 2 295 4 99 2 279 1 172 1 342 4 126 1 
154 2 299 1 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 174 1 159 2 175 1 305 2 55 2 54 1 349 2 57 1 200 1 82 1 226 1 263 1 32 1 141 4 84 1 178 1 368 2 143 1 268 1 269 1 311 1 64 1 118 4 40 1 163 2 295 4 99 2 279 1 172 1 342 4 126 1 
154 2 299 1 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 175 1 305 2 54 1 349 2 57 1 200 1 226 1 11 2 263 1 32 1 141 4 61 1 84 1 178 1 368 2 143 1 87 2 88 2 268 1 269 1 311 1 118 4 40 1 295 4 99 2 279 1 152 1 189 1 172 1 342 4 126 1 
299 1 154 3 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 174 1 159 2 175 1 55 2 54 1 305 3 349 2 82 1 57 1 200 1 226 1 263 1 327 1 32 1 84 1 141 5 178 1 368 2 143 1 268 1 269 1 311 1 64 1 118 4 40 1 163 2 295 4 99 3 279 1 172 1 126 1 342 5 
299 1 154 3 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 174 1 159 2 175 1 55 2 54 1 305 3 349 2 82 1 57 1 200 1 226 1 263 1 327 1 32 1 84 1 141 5 178 1 368 2 143 1 268 1 269 1 311 1 64 1 118 4 40 1 163 2 295 4 99 3 279 1 172 1 126 1 342 5 
154 2 299 1 24 1 75 1 345 1 301 2 219 1 320 1 2 1 361 1 80 1 175 1 305 2 54 1 349 2 200 1 57 1 226 1 11 2 263 1 32 1 141 4 84 1 368 2 143 1 87 2 88 2 268 1 269 1 311 1 118 4 40 1 295 4 99 2 279 1 152 1 172 1 126 1 342 4 
76 1 144 2 19 1 217 1 367 1 161 1 139 1 284 1 46 1 
191 2 344 1 155 1 76 2 216 4 1 1 284 2 195 3 323 2 110 1 136 2 288 1 176 11 264 1 367 2 139 1 329 11 138 1 62 1 369 3 144 4 161 2 91 8 371 1 67 1 93 6 148 1 374 14 19 2 100 1 379 1 340 1 127 2 
214 1 128 1 155 1 76 1 216 1 320 2 284 1 4 1 57 2 324 1 288 1 201 1 366 1 263 1 139 1 367 1 14 1 291 1 38 1 144 2 161 1 312 1 91 1 92 1 67 1 44 1 315 1 120 1 93 1 69 1 374 2 242 1 122 1 19 1 100 1 170 1 190 1 280 1 
191 3 344 4 155 2 1 2 196 1 156 1 303 2 57 3 201 2 263 1 309 2 115 1 312 1 161 3 67 1 207 1 315 3 120 1 275 1 122 3 19 3 170 2 212 2 280 2 127 2 214 3 128 1 76 3 216 7 77 1 320 3 284 3 29 2 323 8 136 2 288 1 324 2 289 1 366 2 176 7 367 3 139 3 329 7 291 1 39 1 38 1 336 2 144 6 91 10 43 1 44 2 93 10 148 4 374 20 242 2 100 1 249 1 379 3 190 2 
23 1 214 8 128 1 76 2 217 1 320 1 284 2 6 1 57 1 201 2 83 1 58 1 263 1 367 2 139 2 34 1 291 1 63 1 38 2 144 4 312 1 161 2 91 1 67 1 44 3 315 7 209 1 93 1 47 1 374 2 275 1 242 2 18 1 122 8 19 2 100 1 296 2 187 1 190 2 
191 1 344 1 128 1 76 1 216 1 1 1 320 1 284 1 221 1 323 1 57 1 136 1 288 1 176 1 263 1 329 1 367 1 139 1 144 2 161 1 312 1 91 1 292 1 93 2 374 3 19 1 357 1 379 1 127 1 
191 1 76 1 144 2 216 1 217 1 130 1 161 1 284 1 91 2 323 1 148 1 374 2 19 1 176 1 329 1 139 1 367 1 127 1 
344 1 76 1 144 2 216 1 217 1 1 1 161 1 284 1 93 2 323 1 374 2 19 1 176 1 329 1 139 1 367 1 188 1 379 1 
191 1 344 1 76 1 217 1 216 2 1 1 284 1 323 2 136 1 176 2 367 1 139 1 329 2 144 2 161 1 91 2 93 2 148 1 374 4 19 1 379 1 127 1 
191 1 63 1 76 1 144 2 216 1 130 1 161 1 284 1 91 2 323 1 148 1 374 2 19 1 176 1 329 1 139 1 367 1 127 1 
344 1 63 1 76 1 144 2 216 1 1 1 161 1 284 1 93 2 323 1 374 2 19 1 176 1 329 1 139 1 367 1 188 1 379 1 
191 1 344 1 76 1 216 2 1 1 284 1 323 2 136 1 176 2 367 1 139 1 329 2 63 1 144 2 161 1 91 2 93 2 148 1 374 4 19 1 379 1 127 1 
191 1 344 1 76 1 216 2 1 1 284 1 323 2 136 1 176 2 367 1 139 1 329 2 144 2 161 1 91 2 93 2 148 1 374 4 19 1 379 1 127 1 
214 1 155 1 76 1 320 1 284 1 303 1 57 1 324 1 201 1 366 1 139 1 367 1 38 1 144 2 161 1 91 1 67 1 315 1 44 1 93 1 374 2 242 1 122 1 19 1 100 1 170 1 190 1 280 1 
214 1 155 1 76 1 320 1 284 1 348 1 8 1 57 1 324 1 201 1 139 1 367 1 38 1 144 2 161 1 91 1 67 1 315 1 44 1 93 1 354 1 374 2 242 1 122 1 19 1 100 1 170 1 190 1 
191 1 344 1 76 1 216 2 1 1 284 1 323 2 136 1 288 1 176 2 367 1 139 1 329 2 144 2 161 1 91 2 93 2 148 1 374 4 19 1 379 1 127 1 
191 1 214 1 23 1 344 1 76 1 1 1 216 2 320 1 284 1 303 1 323 2 57 1 136 1 324 1 201 1 176 2 366 1 329 2 139 1 367 1 336 1 144 2 161 1 91 2 315 1 44 1 93 2 148 1 374 4 242 1 122 1 19 1 379 1 170 1 127 1 280 1 190 1 
191 1 128 1 76 1 1 1 216 1 320 1 284 1 323 1 363 1 57 1 136 1 288 1 263 1 176 1 367 1 139 1 329 1 144 2 161 1 312 1 91 2 292 1 93 1 148 1 374 3 19 1 357 1 379 1 127 1 
191 3 344 3 76 2 319 1 1 3 284 2 195 2 321 1 323 6 136 3 224 1 307 1 264 1 367 2 138 1 290 1 31 1 330 1 369 1 335 2 144 4 206 2 91 9 93 10 240 1 148 3 374 19 19 2 379 3 127 3 
191 3 76 2 319 1 1 2 284 2 195 2 321 2 323 1 136 3 111 1 307 2 367 2 264 2 290 1 31 1 228 1 203 1 369 2 335 3 144 4 206 1 370 1 91 13 93 11 240 1 148 1 374 24 19 2 358 1 379 2 73 1 341 1 127 3 
191 4 344 1 76 2 319 1 1 4 284 2 195 4 321 1 323 4 136 4 111 1 307 2 264 3 367 2 138 1 290 1 31 1 330 1 228 1 203 1 369 3 335 3 144 4 206 1 370 1 91 15 93 17 240 1 148 3 374 32 19 2 297 1 358 1 379 4 341 1 127 4 
191 4 344 2 76 3 319 1 1 3 284 3 195 4 321 1 323 5 136 4 111 1 307 2 264 3 367 3 138 1 290 1 31 1 330 1 228 1 203 1 369 3 335 4 144 6 206 1 370 1 91 17 93 16 240 1 148 3 374 33 19 3 297 1 358 1 379 3 73 1 341 1 127 4 
191 8 344 7 76 2 319 1 1 7 284 2 195 4 196 1 156 1 321 1 323 14 136 7 111 1 307 1 289 1 264 2 367 2 138 2 290 1 31 1 228 1 203 1 62 2 369 4 335 4 39 1 144 4 206 1 370 1 91 27 207 1 93 25 240 1 148 7 374 52 19 2 249 1 358 1 379 8 73 1 341 1 127 7 
225 1 376 1 244 1 70 1 65 1 146 1 52 1 314 1 45 1 230 1 
12 1 30 1 
225 1 173 1 146 1 52 1 314 1 45 1 169 1 230 1 274 1 
117 1 140 1 
160 1 285 1 347 1 
180 1 118 1 65 1 79 1 360 1 157 1 146 1 223 1 314 1 45 1 147 2 295 1 225 1 244 1 70 1 52 1 143 1 230 1 
180 1 118 1 65 1 79 1 360 1 157 1 146 1 223 1 314 1 45 1 147 2 295 1 225 1 244 1 70 1 52 1 143 1 230 1 
180 1 118 1 65 1 79 1 360 1 157 1 146 1 223 1 314 1 45 1 147 2 295 1 225 1 244 1 70 1 52 1 143 1 230 1 
117 1 160 1 140 1 
117 1 160 1 140 1 
285 1 347 1 
160 1 285 1 347 1 
56 1 215 1 
282 1 25 1 128 2 155 1 215 1 320 2 256 1 157 1 360 1 30 1 57 2 56 1 225 1 263 2 12 1 230 1 116 1 89 1 118 1 312 2 146 1 314 1 45 1 147 1 295 1 124 1 52 1 
214 2 76 1 320 2 218 1 284 1 106 1 57 2 288 1 201 1 262 1 263 2 139 1 367 1 144 2 161 1 234 1 91 1 67 1 44 1 315 2 209 1 93 1 97 1 47 1 374 2 242 1 122 2 19 1 100 1 296 2 190 1 
252 1 214 2 23 1 28 2 197 1 315 2 158 1 81 1 108 1 373 1 260 1 201 1 275 1 242 1 122 2 10 1 277 1 51 1 298 1 
252 1 214 1 28 2 197 1 315 1 158 1 81 1 108 1 260 1 275 1 201 1 242 1 122 1 277 1 51 1 298 1 378 1 
214 1 38 1 352 1 44 1 315 1 6 1 373 1 201 1 242 1 18 1 122 1 137 1 277 1 190 1 
252 1 214 1 28 2 197 1 315 1 158 1 81 1 108 1 373 1 260 1 201 1 275 1 242 1 122 1 10 1 277 1 51 1 298 1 
213 1 
46 1 
345 1 301 1 118 1 174 1 163 1 175 1 159 1 55 1 295 1 226 1 32 1 141 1 84 1 143 2 87 1 126 1 172 1 
299 2 191 2 103 2 193 2 345 4 253 1 346 2 301 3 1 2 201 4 259 2 202 2 113 2 114 2 118 5 315 3 163 6 166 1 122 3 123 1 21 2 318 6 281 1 172 9 126 4 127 2 23 1 214 3 29 2 175 8 136 2 324 3 226 2 32 4 84 4 141 5 87 12 143 8 334 2 38 1 233 3 237 2 183 1 44 10 241 1 295 5 242 3 338 6 243 1 186 1 377 1 379 2 153 2 190 3 
191 2 345 1 1 2 195 1 175 4 136 2 111 1 226 1 264 1 32 1 84 1 228 1 203 1 87 6 143 4 369 1 163 3 338 5 318 5 358 1 379 2 341 1 172 7 126 1 127 2 
191 2 103 2 128 1 345 1 320 1 361 1 198 1 175 2 57 1 82 1 289 1 263 1 32 1 60 1 84 1 308 1 39 1 118 1 312 1 295 1 357 1 249 1 248 1 22 1 379 1 153 1 126 1 172 2 
345 1 175 1 226 1 32 1 377 1 84 1 143 1 126 1 281 1 172 1 
191 2 103 2 1 2 163 5 29 1 175 5 136 2 338 5 318 5 379 2 153 1 87 10 143 5 127 2 172 5 
295 1 226 1 301 1 118 1 141 1 143 1 
214 4 345 2 253 2 301 2 3 1 6 1 107 1 175 2 201 1 202 2 32 2 84 1 141 4 38 2 118 3 119 1 44 1 183 1 315 4 96 1 295 3 242 1 18 1 167 1 122 4 243 2 190 1 126 2 172 2 
214 1 128 2 155 1 76 1 320 3 284 1 362 1 303 1 57 3 324 1 201 1 263 2 366 1 367 1 139 1 38 1 144 2 312 2 161 1 315 1 44 1 93 1 374 1 242 1 19 1 122 1 100 1 357 2 248 1 170 1 280 1 190 1 
345 1 207 1 163 2 175 2 202 1 338 2 226 2 243 1 32 1 84 1 318 2 87 4 143 4 126 1 172 1 
236 1 314 1 230 1 
215 1 244 1 208 1 314 1 230 1 
236 1 314 1 230 1 
236 1 314 1 230 1 
165 1 314 1 230 1 
165 1 314 1 230 1 
165 1 314 1 230 1 
314 1 230 1 
225 1 146 1 
191 1 344 2 76 2 39 1 144 4 284 2 91 4 156 1 196 1 207 1 93 4 323 3 148 1 374 8 289 1 19 2 367 2 249 1 379 1 73 1 
46 1 
191 1 344 1 76 1 144 2 1 1 284 1 91 2 93 2 323 2 148 1 136 1 374 4 19 1 367 1 59 1 379 1 127 1 
191 1 344 1 1 1 195 2 91 3 93 4 323 2 148 1 136 1 374 7 264 1 138 1 379 1 369 1 127 1 
191 3 344 5 76 2 105 1 1 2 284 2 195 2 196 1 156 1 323 9 136 2 289 1 138 1 367 2 369 2 62 1 39 2 144 4 91 11 371 1 207 1 93 12 148 4 374 23 19 2 249 2 379 3 73 2 127 2 
374 1 195 1 93 1 
374 1 91 1 369 1 
191 1 344 2 76 1 144 2 1 1 284 1 91 3 29 1 93 3 323 3 148 1 136 1 374 6 19 1 367 1 59 1 379 1 127 1 
191 2 344 1 76 1 1 2 284 1 195 1 323 2 136 2 111 1 264 1 367 1 290 1 228 1 203 1 369 1 144 2 91 6 93 6 148 1 374 12 19 1 358 1 379 2 341 1 127 2 
191 1 344 1 39 1 91 3 93 3 323 2 148 1 374 6 289 1 249 1 379 1 
344 1 39 1 76 1 105 1 144 2 284 1 91 1 196 1 156 1 93 2 323 2 148 1 374 3 19 1 367 1 249 1 73 1 
191 2 344 3 76 1 39 2 144 2 284 1 91 5 93 5 323 5 148 2 374 10 289 1 19 1 367 1 290 1 249 2 22 1 379 2 
191 1 76 1 144 2 284 1 91 2 323 1 148 1 374 2 19 1 367 1 290 1 127 1 
191 1 344 1 76 1 144 2 1 1 284 1 91 2 93 2 323 2 148 1 136 1 374 4 19 1 367 1 290 1 379 1 127 1 
344 1 76 3 39 1 105 1 144 6 284 3 91 1 93 2 323 2 148 1 374 3 19 3 367 3 290 1 330 1 249 1 73 1 
191 5 343 1 344 7 76 5 105 1 1 3 284 5 195 4 196 1 156 1 323 12 136 3 289 2 264 1 367 5 138 1 290 1 59 1 330 1 332 1 369 3 39 3 144 10 91 16 207 1 93 18 148 5 374 34 19 5 245 1 249 3 379 5 73 2 127 3 
191 1 344 2 76 1 284 1 195 1 156 1 196 1 323 2 289 1 264 1 367 1 290 1 369 1 39 1 144 2 91 4 207 1 93 4 374 8 19 1 358 1 249 1 379 1 
191 2 344 2 76 2 284 2 195 2 196 1 156 1 323 3 136 1 289 1 264 1 367 2 138 1 290 1 59 1 369 1 39 1 144 4 91 6 207 1 93 5 148 1 374 11 19 2 249 1 358 1 379 1 127 1 
191 2 76 2 1 2 284 2 195 1 323 1 136 2 111 1 264 1 367 2 290 1 59 1 228 1 203 1 369 1 144 4 91 6 93 7 148 1 374 13 19 2 358 1 379 2 341 1 127 2 
191 3 344 3 76 3 1 1 284 3 195 1 196 1 156 1 323 5 136 2 111 1 289 1 264 1 367 3 290 1 59 1 228 1 203 1 369 1 39 1 144 6 91 10 207 1 93 7 148 2 374 17 19 3 249 1 358 1 379 2 73 1 341 1 127 2 
191 1 344 2 76 1 284 1 195 1 156 1 196 1 323 2 289 1 264 1 367 1 290 1 369 1 39 1 144 2 91 4 207 1 93 4 374 8 19 1 358 1 249 1 379 1 
191 2 344 1 76 1 1 2 284 1 195 1 323 2 136 2 111 1 264 1 367 1 290 1 228 1 203 1 369 1 144 2 91 6 93 6 148 1 374 12 19 1 358 1 379 2 341 1 127 2 
191 2 76 3 1 1 284 3 195 1 323 1 136 2 111 1 264 1 367 3 290 1 59 1 228 1 203 1 369 1 144 6 91 7 93 5 148 1 374 12 19 3 358 1 379 1 73 1 341 1 127 2 
191 2 344 2 76 3 1 1 284 3 195 1 323 4 136 2 111 1 264 1 367 3 290 1 330 1 228 1 203 1 369 1 144 6 91 7 93 5 148 2 374 12 19 3 358 1 379 1 73 1 341 1 127 2 
191 1 344 3 39 3 91 3 156 1 196 2 93 4 323 6 148 3 374 7 289 1 249 3 379 1 
191 2 76 3 1 1 284 3 195 1 323 1 136 2 111 1 264 1 367 3 290 1 330 1 228 1 203 1 369 1 144 6 91 7 93 5 148 1 374 12 19 3 358 1 379 1 73 1 341 1 127 2 
57 1 155 1 271 1 129 1 263 1 320 1 2 1 
155 1 271 1 26 1 129 1 320 1 2 1 322 1 57 1 263 1 177 1 33 1 250 1 
214 1 38 1 122 1 315 1 46 1 
214 1 128 1 155 1 38 1 312 1 320 2 44 1 315 1 57 2 324 1 201 1 242 1 122 1 263 1 170 1 190 1 291 1 280 1 
268 1 214 1 75 1 128 1 155 1 253 1 312 2 320 2 237 1 361 1 44 3 315 1 57 2 324 2 201 1 242 1 122 1 263 2 113 1 170 1 190 2 291 1 280 1 
268 1 214 2 75 1 128 1 155 1 253 1 312 2 320 2 237 1 361 1 44 3 315 2 354 1 57 2 324 2 201 1 242 1 122 2 263 2 328 1 113 1 170 1 190 2 291 1 
299 1 214 3 38 1 253 1 346 1 118 2 233 1 237 1 293 1 315 3 44 4 306 1 324 1 295 2 201 1 242 1 122 3 226 1 328 1 141 1 113 1 143 1 190 1 
299 1 214 3 38 1 253 1 346 1 118 2 233 1 237 1 315 3 44 4 324 1 295 2 201 1 242 1 122 3 226 1 328 1 141 1 113 1 114 1 143 1 190 1 
214 1 201 1 242 1 122 1 187 1 315 1 
23 1 214 7 38 2 68 1 315 6 44 3 47 1 324 1 275 1 201 3 242 2 122 7 83 1 58 1 123 1 296 1 187 1 229 1 34 1 251 1 190 2 
191 1 23 1 214 1 344 2 128 1 155 2 76 2 216 1 320 2 284 2 196 1 156 1 106 1 303 1 323 2 57 2 324 1 288 1 289 1 201 1 176 1 263 1 366 1 329 1 139 2 367 2 309 1 291 1 39 1 336 1 144 4 161 2 312 1 91 3 207 1 44 1 315 1 93 3 374 6 242 1 19 2 122 1 249 1 379 1 170 1 190 1 280 1 
214 1 282 1 299 1 193 1 345 2 346 1 301 1 175 1 259 1 226 1 32 2 84 2 141 2 114 1 143 1 334 1 38 1 118 3 233 1 315 1 183 1 44 2 295 3 122 1 377 1 172 1 281 1 126 2 
23 1 214 2 346 1 315 2 44 2 324 1 166 1 201 2 242 1 122 2 123 1 187 1 190 1 
214 4 23 1 38 1 315 4 6 1 44 1 201 1 18 1 242 1 339 1 122 4 328 1 190 1 
214 2 192 1 253 1 77 1 68 1 315 2 44 1 239 1 324 1 201 2 242 1 122 2 229 1 190 1 
214 1 260 1 201 1 242 1 38 1 122 1 28 1 197 1 315 1 108 1 
47 1 214 2 23 1 201 1 275 1 242 1 122 2 44 1 315 2 97 1 190 1 
214 5 23 1 38 1 253 1 6 1 315 4 44 3 47 1 201 2 18 1 242 2 339 1 122 5 83 1 34 1 190 2 
214 5 23 1 38 1 253 1 6 1 315 4 44 3 47 1 201 2 18 1 242 2 339 1 122 5 34 1 350 1 190 2 
214 1 128 1 155 1 38 1 312 1 320 2 44 1 315 1 354 1 57 2 324 1 201 1 242 1 122 1 263 1 170 1 190 1 291 1 
214 1 253 1 68 1 315 1 44 1 324 1 201 2 242 1 122 1 123 1 229 1 251 1 190 1 
316 1 155 1 150 1 78 1 7 1 
299 1 268 1 282 1 283 1 75 1 155 1 194 1 311 1 118 2 78 2 361 1 372 1 7 1 316 2 295 2 226 1 150 2 331 1 143 1 
218 1 234 1 320 1 7 1 316 1 57 1 262 1 150 1 263 1 
283 1 331 1 7 1 
46 1 
0 1 270 1 210 1 220 1 273 1 294 1 72 1 
270 1 90 1 185 1 
267 1 0 1 270 3 220 1 286 1 273 3 294 1 132 1 13 1 210 1 142 2 72 1 
0 1 270 2 210 1 220 1 199 1 273 2 294 1 72 1 265 1 
267 1 205 1 270 1 0 1 220 1 28 1 273 1 94 1 260 1 210 1 298 1 
267 1 0 1 270 1 210 1 220 1 273 1 294 1 
267 1 270 1 210 1 220 1 273 1 294 2 72 1 
267 1 0 1 270 2 220 2 273 2 258 1 294 1 287 1 326 1 210 2 
267 1 205 1 270 3 0 2 220 1 41 1 273 3 294 1 356 1 210 1 72 1 171 1 265 2 
267 1 252 1 0 1 270 2 28 2 220 1 197 1 273 2 294 1 260 1 227 1 210 1 298 1 72 1 265 1 
267 1 205 1 270 4 0 2 27 1 220 2 273 4 199 1 294 1 210 2 72 1 171 1 265 2 
267 1 0 1 270 1 210 1 220 1 273 1 294 1 72 1 
205 1 270 4 0 3 220 1 273 4 294 2 132 1 325 1 13 1 210 1 142 1 72 2 171 1 265 2 
267 1 0 1 270 2 220 1 273 2 294 1 317 1 112 1 210 1 72 1 15 1 265 1 
267 1 0 1 270 3 220 1 273 3 294 1 132 1 337 1 13 2 210 1 142 2 72 1 
0 2 184 1 101 2 247 1 
164 1 267 1 270 1 210 1 220 1 273 1 
267 1 0 1 270 2 356 1 210 1 220 1 273 2 294 1 72 1 265 1 
204 1 
267 1 0 1 270 1 210 1 220 1 273 1 294 1 72 1 
267 1 0 1 270 3 356 1 210 1 220 1 273 3 294 1 72 1 142 1 265 1 
325 1 205 1 0 1 171 1 
0 1 294 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 349 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 79 1 292 3 153 2 83 1 5 9 4 4 85 1 11 2 112 1 15 2 283 1 116 1 192 5 374 1 94 1 175 1 196 1 124 1 27 7 181 1 379 9 330 1 308 1 
79 1 192 5 204 1 153 2 292 3 374 1 94 1 83 1 175 1 5 9 4 4 85 1 196 1 11 2 124 1 112 1 27 7 15 2 181 1 330 1 379 9 283 1 308 1 116 1 
204 2 79 1 153 2 292 3 56 1 5 9 4 4 85 1 279 1 11 2 15 2 283 2 116 1 169 1 192 5 374 2 94 1 175 1 196 1 45 1 73 1 124 1 27 6 181 1 379 9 330 2 308 1 224 1 
204 2 79 1 153 2 292 3 56 1 5 9 4 4 85 1 279 1 11 2 15 2 283 2 116 1 169 1 192 5 374 2 94 1 175 1 196 1 45 1 73 1 124 1 27 6 181 1 379 9 330 2 308 1 224 1 
204 2 79 1 153 2 292 4 56 1 5 10 4 5 85 1 279 1 11 2 15 2 283 2 116 1 169 1 192 6 374 2 94 1 175 1 196 1 45 1 73 1 124 1 27 7 181 1 379 10 330 2 308 1 224 1 
204 2 79 1 153 2 292 2 56 1 5 7 4 3 85 1 279 1 11 2 15 1 283 2 116 1 169 1 192 4 374 2 94 1 175 1 45 1 73 1 124 1 27 4 181 1 379 7 330 2 308 1 224 1 
192 3 292 1 153 1 374 1 94 1 175 1 5 4 4 2 85 1 196 1 11 1 124 1 27 3 15 2 330 1 379 4 283 1 116 1 
192 1 138 1 204 1 153 1 374 1 213 1 175 1 5 2 85 1 11 1 279 1 379 2 330 1 282 1 116 1 169 1 
204 1 192 2 153 2 292 1 175 1 5 3 4 1 85 1 11 2 27 1 379 3 308 1 116 1 
378 1 165 1 190 1 
34 1 378 1 16 2 
152 1 208 2 229 2 6 2 30 2 218 2 86 1 225 2 
80 1 152 1 53 1 365 1 339 1 159 1 229 2 275 2 6 2 86 1 297 1 38 1 161 2 299 2 60 1 316 2 208 3 17 1 91 1 318 1 93 1 172 1 195 1 353 1 244 1 218 3 197 1 99 2 47 1 48 1 148 1 49 1 149 1 30 2 310 1 76 1 225 2 
152 1 173 1 208 1 113 1 84 1 229 1 6 1 30 1 218 1 225 1 
33 1 193 1 66 1 84 1 176 1 218 1 342 1 208 1 13 1 378 1 284 1 362 1 190 1 225 1 
33 1 193 1 66 1 84 1 229 1 6 1 218 1 342 2 208 1 378 1 362 2 284 1 190 1 30 1 225 1 
373 1 342 1 174 1 362 1 77 1 
373 1 342 2 1 1 378 1 174 1 360 1 362 2 190 1 
373 1 342 1 362 1 
152 1 173 1 174 1 84 1 229 1 6 1 218 1 111 1 342 1 208 1 113 1 362 1 30 1 225 1 
378 1 
373 1 342 2 1 1 378 1 174 1 362 2 190 1 203 1 
373 2 64 2 1 1 174 2 274 1 304 1 276 1 324 1 186 1 342 5 378 1 40 1 104 1 202 1 362 5 190 1 127 2 128 2 226 1 
51 1 81 1 365 1 195 1 229 1 275 1 218 2 38 1 99 1 161 1 208 2 48 1 17 1 49 1 310 1 30 1 76 1 106 1 225 1 93 1 
165 1 86 1 
229 1 6 1 218 2 86 2 208 2 252 1 30 1 266 1 225 2 
278 1 51 1 331 1 
365 1 195 1 275 1 218 1 86 1 38 1 99 1 161 1 208 1 48 1 234 1 17 1 49 1 310 1 76 1 93 1 
208 3 81 1 229 3 6 1 30 3 218 3 86 1 225 3 
173 1 208 1 84 1 229 1 30 1 218 1 225 1 
208 1 84 1 252 1 229 1 6 1 30 1 218 1 266 1 225 1 
80 1 33 1 152 1 53 1 81 1 365 1 339 1 84 1 229 3 275 1 6 2 86 1 38 1 297 1 161 1 342 1 299 1 60 1 316 2 208 4 17 1 318 1 284 1 93 1 172 1 320 1 193 1 66 1 195 1 353 1 244 1 218 4 99 1 325 1 48 1 49 1 362 1 149 1 310 1 30 3 76 1 266 1 106 1 225 3 
268 1 208 2 81 1 176 1 229 1 30 1 218 2 86 1 225 2 
33 1 81 2 193 1 131 1 84 1 66 1 229 3 6 1 218 3 325 1 342 1 208 3 378 1 362 1 284 1 30 3 266 1 106 1 225 3 
51 1 81 1 229 2 6 1 218 2 278 1 208 2 30 2 266 1 225 2 
365 1 195 1 275 1 218 1 86 1 38 1 99 1 161 1 208 1 48 1 17 1 49 1 310 1 76 1 93 1 
365 1 195 1 275 1 218 1 86 1 99 1 161 1 208 1 48 1 17 1 346 1 310 1 76 1 93 1 336 1 
80 2 51 2 53 1 339 1 367 1 278 2 60 1 299 4 316 2 89 1 302 1 345 1 166 1 91 2 318 1 172 1 323 1 69 1 353 1 97 1 216 1 331 2 75 1 183 1 
208 1 84 1 66 1 229 1 30 1 105 1 218 1 225 1 
268 1 81 2 176 1 313 1 229 4 6 1 218 5 86 1 100 1 208 5 30 4 266 1 106 1 225 5 
173 1 208 2 84 1 229 2 105 1 30 2 218 2 225 2 
341 1 96 1 
341 1 96 1 
140 1 50 1 
140 1 50 1 
140 1 50 1 
215 1 341 1 96 1 
215 1 341 1 96 1 
300 1 341 1 96 1 
140 1 377 1 341 2 50 1 96 2 254 1 
215 1 341 1 96 1 
341 1 332 1 96 1 
341 1 332 1 96 1 
341 1 332 1 96 1 
255 1 2 2 273 1 338 2 194 1 95 3 341 2 314 1 96 2 58 1 355 2 342 2 24 1 378 1 14 2 309 1 362 2 254 1 31 2 
2 1 157 1 273 1 338 1 95 1 243 1 341 1 229 2 96 1 23 1 218 2 86 1 355 1 342 1 261 1 208 2 300 1 14 1 281 1 362 1 30 2 291 1 32 1 225 2 
374 1 330 1 283 1 
374 1 213 1 330 1 
374 3 220 1 213 1 283 2 352 1 319 1 
219 1 374 2 220 1 213 1 283 1 352 1 
374 2 220 2 213 1 283 1 352 1 
34 1 1 1 130 1 272 1 133 2 36 1 186 1 342 5 89 1 90 2 166 1 16 3 40 2 345 1 190 1 168 1 373 1 64 1 174 4 243 1 70 1 216 1 326 1 288 1 261 1 378 2 290 1 104 3 362 5 127 1 363 2 32 1 128 1 
78 1 34 3 1 1 272 3 133 6 36 2 276 1 366 1 186 1 342 9 89 3 90 6 166 3 16 9 40 6 345 3 190 1 373 6 64 2 241 5 174 7 20 1 143 1 216 3 326 3 261 4 288 2 201 1 263 1 378 5 290 1 104 8 362 9 127 2 77 5 128 2 
34 2 130 1 272 1 133 2 36 1 276 1 342 3 89 1 90 2 166 1 345 1 40 2 16 4 190 1 64 1 174 2 70 1 216 1 326 1 288 1 261 1 378 3 104 3 362 3 127 1 363 1 128 1 
34 3 130 1 272 2 133 4 36 1 276 1 342 4 89 2 90 4 166 2 16 7 345 2 40 4 190 1 64 1 174 3 20 1 143 1 70 1 216 2 326 2 288 1 261 2 378 4 263 1 104 5 362 4 127 1 363 2 128 1 
165 1 76 1 185 1 
337 1 76 1 
87 1 
195 1 76 1 
199 1 365 1 195 1 242 1 76 3 185 2 
365 1 195 1 76 1 
359 1 76 1 
80 3 41 1 141 1 69 3 198 1 162 2 251 1 299 7 102 1 166 1 345 1 361 1 91 4 115 1 74 1 75 2 364 1 
80 3 41 1 141 1 69 3 198 1 162 2 251 1 299 7 102 1 166 1 345 1 361 1 91 4 115 1 74 1 75 2 364 1 
80 3 41 1 21 1 141 1 69 3 198 1 162 2 251 1 299 7 102 1 166 1 345 1 361 1 91 4 115 1 74 1 75 2 364 1 
80 22 53 2 54 1 340 1 339 2 248 4 162 3 12 1 251 2 299 46 316 4 233 2 164 1 114 1 89 4 345 7 166 7 318 2 91 24 115 2 117 1 41 3 239 1 141 1 321 1 67 1 69 15 353 2 216 4 198 2 123 4 326 4 102 3 361 1 74 7 75 8 364 1 
162 1 251 1 299 1 53 1 316 2 349 1 339 1 318 1 91 1 115 1 353 1 206 1 
204 1 184 1 52 1 153 1 5 2 275 1 85 1 158 1 298 1 250 1 161 1 11 1 17 1 283 1 319 1 116 1 192 1 374 2 213 1 175 1 99 1 327 1 200 1 27 1 48 1 101 1 330 1 379 2 380 1 245 1 
204 1 184 1 153 1 5 3 275 1 158 1 135 1 298 1 250 1 161 1 11 1 17 1 283 1 319 1 116 1 285 1 192 1 374 2 213 1 175 1 99 1 327 1 200 1 27 2 48 1 101 1 330 1 379 3 182 1 380 1 
204 1 184 1 5 2 275 1 158 1 135 1 298 1 250 1 161 1 17 1 283 1 319 1 116 1 285 1 192 1 374 2 213 1 175 1 99 1 200 1 27 2 48 1 101 1 379 2 330 1 
204 2 184 2 153 1 5 1 275 1 296 1 298 2 250 2 161 1 11 1 280 1 370 1 17 1 93 1 214 1 195 1 256 1 43 1 99 1 48 1 379 1 182 1 76 1 
204 1 184 1 52 1 153 1 5 1 275 1 85 1 158 1 135 1 298 1 250 1 161 1 11 1 17 1 283 1 319 1 374 2 213 1 99 1 327 1 200 1 48 1 101 1 330 1 379 1 380 1 
262 1 
1 2 293 2 342 4 208 1 344 1 13 1 64 1 119 1 121 5 66 1 350 2 177 3 176 1 218 1 259 1 260 1 125 1 362 4 127 1 225 1 128 1 33 1 34 2 82 1 84 1 277 3 186 1 368 3 39 1 232 1 231 2 88 1 40 1 284 1 371 1 190 1 373 5 193 1 328 1 289 2 378 1 104 1 
33 1 1 2 34 2 82 1 293 2 84 1 277 3 186 1 368 3 39 1 342 4 231 2 232 1 208 1 13 1 344 1 88 1 40 1 284 1 190 1 371 1 373 5 64 1 119 1 193 1 121 5 350 2 66 1 176 1 177 3 218 1 259 1 260 1 328 1 289 2 378 1 125 1 104 1 362 4 127 1 128 1 225 1 
1 2 57 2 342 4 208 1 13 1 16 2 64 1 121 4 66 1 176 1 177 2 218 1 260 1 125 1 362 4 127 1 225 1 128 1 33 1 267 2 82 1 84 1 277 2 186 1 368 2 39 1 231 2 88 1 40 1 284 1 371 1 190 1 191 1 373 4 193 1 144 1 289 2 378 1 104 1 
1 3 293 2 55 1 161 2 342 5 208 1 13 1 16 2 17 1 64 1 121 4 350 2 214 1 66 1 177 2 176 1 218 1 179 1 260 1 125 1 362 5 127 1 76 1 128 1 225 1 33 1 34 2 82 1 84 1 275 2 277 2 186 1 368 2 39 1 231 2 88 1 370 1 40 2 317 1 284 1 190 1 371 1 93 2 373 6 193 1 42 1 195 1 144 1 99 2 288 1 328 1 289 2 48 1 378 2 104 2 
373 2 33 1 1 1 82 1 121 2 193 1 84 1 66 1 177 1 176 1 218 1 260 1 342 3 39 1 208 1 13 1 88 1 362 3 284 1 371 1 203 1 225 1 
33 1 1 1 82 1 84 1 277 1 39 1 342 3 208 1 13 1 88 1 284 1 371 1 190 1 373 1 193 1 121 3 66 1 176 1 218 1 260 1 378 1 362 3 203 1 225 1 
33 1 1 1 82 1 84 1 277 1 368 1 39 1 342 3 208 1 13 1 88 1 284 1 371 1 190 1 373 2 193 1 121 3 66 1 176 1 177 1 218 1 260 1 378 1 362 3 203 1 225 1 
1 3 293 2 342 5 208 1 13 1 344 1 64 1 119 1 121 6 66 1 350 2 177 4 176 1 218 1 259 1 260 1 125 1 362 5 127 1 225 1 128 1 33 1 34 2 82 1 84 1 277 4 186 1 368 4 39 1 232 1 231 2 88 1 40 1 284 1 371 1 190 5 373 7 193 1 322 1 328 1 289 2 378 5 104 1 203 1 
1 2 293 2 342 4 208 1 13 1 16 2 64 1 121 4 66 1 350 2 176 1 177 2 218 1 260 1 125 1 362 4 127 1 225 1 128 1 33 1 34 2 82 1 84 1 277 2 186 1 368 2 39 1 231 2 88 1 40 1 284 1 371 1 190 1 373 4 193 1 144 1 328 1 289 2 378 2 104 1 
33 1 1 2 34 2 82 1 293 2 84 1 277 2 186 1 368 2 39 1 342 4 231 2 232 1 208 1 13 1 88 1 40 1 284 1 190 1 371 1 373 4 64 1 119 1 193 1 121 4 350 2 66 1 177 2 176 1 218 1 259 1 260 1 328 1 289 2 378 1 125 1 104 1 362 4 127 1 225 1 128 1 
33 1 1 2 34 2 82 1 293 2 84 1 277 2 186 1 368 2 39 1 342 4 231 2 232 1 208 1 13 1 88 1 40 1 284 1 190 1 371 1 373 4 64 1 119 1 193 1 121 4 350 2 66 1 177 2 176 1 218 1 259 1 260 1 328 1 289 2 378 1 125 1 104 1 362 4 127 1 225 1 128 1 
267 2 33 1 1 2 82 1 155 1 57 2 84 1 277 2 186 1 368 2 39 1 342 4 231 2 232 1 208 1 13 1 88 1 16 2 40 1 284 1 190 1 371 1 191 1 373 4 64 1 193 1 121 4 287 1 66 1 177 2 176 1 218 1 260 1 289 2 378 1 125 1 104 1 362 4 127 1 225 1 128 1 
51 1 80 3 53 1 339 1 86 2 278 1 162 1 60 1 299 6 316 2 165 1 345 1 166 1 318 1 91 3 41 1 172 1 141 1 323 1 69 2 353 1 198 1 102 1 361 1 331 1 75 2 
80 6 51 11 53 2 340 1 339 2 159 1 248 3 86 1 12 1 278 4 60 1 299 14 316 4 114 1 89 1 345 2 166 1 318 2 91 8 210 1 170 1 172 2 69 2 353 2 216 2 354 1 356 1 123 3 326 2 331 11 149 1 74 1 75 1 
80 1 53 1 81 1 365 1 339 1 275 1 229 1 159 1 86 1 38 1 161 1 278 1 60 1 299 2 208 2 316 2 61 1 234 1 235 1 17 1 318 1 91 1 93 1 172 1 375 1 195 1 353 1 218 2 354 1 99 1 48 1 49 1 310 1 30 1 149 1 76 1 106 1 225 1 
51 7 53 3 339 3 159 1 59 2 297 2 162 1 161 3 60 3 299 20 343 1 208 3 301 1 166 3 17 2 345 3 303 2 172 3 118 2 351 2 69 8 353 3 218 3 216 2 354 1 361 1 30 1 310 2 74 4 75 4 76 2 225 1 80 10 81 1 132 1 365 2 275 3 229 1 135 1 86 2 38 2 278 7 316 6 89 2 318 3 91 10 93 1 41 1 141 1 195 2 198 1 99 3 326 2 48 2 102 1 331 7 49 2 149 1 106 1 
80 1 205 1 53 2 108 1 81 1 339 2 229 1 275 8 159 1 7 1 135 1 161 7 60 2 299 2 208 1 316 4 370 1 17 2 318 2 91 1 93 2 211 1 172 2 19 1 214 1 195 2 323 1 353 2 218 1 99 8 71 1 48 2 148 2 334 1 30 1 149 1 76 3 245 1 225 1 
51 1 80 2 53 1 339 1 229 1 6 1 278 1 60 1 299 3 316 2 208 1 89 1 345 1 166 1 318 1 91 1 172 1 139 1 69 1 353 1 218 1 216 1 354 1 326 1 331 1 30 1 75 1 266 1 225 1 
51 1 172 1 53 1 339 1 69 1 323 1 353 1 97 1 216 1 278 1 299 2 60 1 316 2 331 1 345 1 318 1 91 2 74 1 
51 1 80 2 172 1 53 1 339 1 69 1 323 1 353 1 278 1 299 2 60 1 316 2 89 1 331 1 166 1 318 1 75 1 183 1 
51 2 80 2 53 1 339 1 278 2 60 1 299 4 316 2 89 1 345 1 166 1 91 2 318 1 172 1 323 1 69 2 353 1 216 1 326 1 331 2 74 1 75 1 
51 1 172 1 53 1 339 1 69 1 353 1 97 1 216 1 71 1 278 1 299 2 60 1 316 2 331 1 345 1 318 1 91 2 74 1 
51 1 80 2 172 1 53 1 339 1 353 1 71 1 278 1 299 2 60 1 316 2 89 1 331 1 166 1 318 1 183 1 
80 2 51 2 172 1 53 1 339 1 353 1 216 1 71 1 278 2 326 1 299 4 60 1 316 2 89 1 166 1 331 2 345 1 318 1 91 2 
80 2 51 2 172 1 53 1 339 1 69 2 353 1 216 1 278 2 326 1 60 1 299 4 316 2 89 1 166 1 331 2 345 1 318 1 91 2 74 1 75 1 
80 1 53 1 365 1 339 1 159 1 275 1 86 1 38 1 297 1 161 1 299 2 60 1 208 1 316 2 17 1 91 1 318 1 93 1 172 1 195 1 353 1 218 1 99 1 48 1 49 1 310 1 149 1 76 1 
80 1 53 1 365 1 339 1 159 1 275 1 295 1 86 1 161 1 299 2 60 1 208 1 316 2 17 1 91 1 318 1 346 1 93 1 172 1 195 1 353 1 218 1 99 1 48 1 310 1 149 1 76 1 336 1 
51 2 80 2 53 1 339 1 278 2 60 1 299 4 316 2 89 1 345 1 166 1 91 2 318 1 172 1 69 2 353 1 216 1 354 1 326 1 331 2 74 1 75 1 
80 2 51 2 53 1 365 1 339 1 275 1 38 1 297 1 59 1 278 2 161 1 299 4 60 1 208 1 316 2 89 1 166 1 345 1 17 1 91 2 318 1 172 1 195 1 69 2 353 1 216 1 218 1 99 1 326 1 48 1 331 2 49 1 74 1 310 1 75 1 76 1 245 1 
80 1 51 1 53 1 339 1 229 1 6 1 278 1 188 1 60 1 299 3 316 2 208 1 89 1 166 1 345 1 318 1 91 2 172 1 69 1 353 1 218 1 216 1 354 1 326 1 331 1 74 1 30 1 266 1 225 1 
80 24 227 1 129 1 53 4 311 3 340 2 339 4 248 4 249 1 134 1 294 1 8 1 206 1 162 1 12 2 299 51 233 2 316 8 114 2 89 6 345 8 166 7 92 1 318 4 91 27 167 1 41 1 376 1 141 1 69 15 122 1 353 4 216 7 178 1 198 1 305 1 123 4 326 7 102 1 361 1 222 1 74 8 75 7 
80 12 227 1 129 2 53 3 311 4 339 3 340 2 249 1 134 1 248 2 294 1 206 1 8 1 299 26 233 2 316 6 89 2 166 2 345 3 92 2 318 3 91 14 167 1 212 1 376 1 69 4 122 1 353 3 216 3 178 1 123 2 326 3 74 2 75 2 
53 4 339 4 340 2 249 1 248 4 294 1 206 1 8 1 12 2 162 1 299 51 114 2 166 7 345 8 167 1 212 1 69 14 353 4 122 1 216 7 178 1 123 4 361 1 222 1 74 7 75 7 80 24 227 1 129 1 311 3 134 1 316 8 233 2 89 6 91 27 318 4 92 1 41 1 376 1 141 1 198 1 326 7 102 1 
53 4 339 4 340 2 249 1 248 4 294 1 206 1 8 1 12 2 162 1 299 53 114 2 166 7 345 8 167 1 212 1 69 14 353 4 122 1 216 7 178 1 123 4 361 1 222 1 74 7 75 7 80 25 227 1 129 1 311 4 134 1 316 8 233 2 89 6 91 28 318 4 92 1 41 1 376 1 141 1 198 1 326 7 102 1 
80 25 227 1 129 1 53 2 311 4 340 2 339 2 248 4 249 1 134 1 294 1 8 1 206 1 162 1 12 2 299 52 233 1 316 4 114 2 89 7 345 8 166 8 92 1 318 2 91 27 167 1 41 1 212 1 376 1 141 1 69 14 122 1 353 2 216 7 178 1 198 1 123 4 326 7 102 1 361 1 74 7 75 7 
24 1 120 1 2 1 14 1 338 1 309 1 341 1 96 1 254 1 355 1 
300 1 23 1 
145 1 369 1 2 1 14 1 338 1 341 1 96 1 107 1 355 1 
255 1 2 1 273 1 338 1 194 1 95 2 341 1 314 1 96 1 355 1 342 1 24 1 378 1 14 1 309 1 362 1 254 1 31 1 
255 1 2 1 273 1 338 1 194 1 95 2 341 1 314 1 96 1 355 1 342 1 24 1 378 1 14 1 309 1 362 1 254 1 31 1 
255 1 2 1 273 1 338 1 194 1 95 2 341 1 314 1 96 1 355 1 342 1 24 1 378 1 14 1 309 1 362 1 254 1 31 1 
147 1 377 1 215 1 
147 1 377 1 215 1 
332 1 335 1 
377 1 332 1 335 1 
157 1 291 1 
2 1 157 1 338 1 341 1 229 2 314 1 110 1 86 1 342 1 208 2 300 1 14 1 281 1 174 1 95 1 243 1 96 1 218 2 23 1 355 1 261 1 362 1 30 2 31 1 32 1 291 1 225 2 
147 1 215 1 
377 1 332 1 335 1 
80 1 247 1 53 1 339 1 275 2 159 1 207 1 161 2 60 1 299 2 208 2 316 2 17 1 318 1 91 1 211 1 172 1 195 1 353 1 218 2 354 1 98 1 99 2 258 1 48 1 148 2 307 1 334 1 149 1 76 1 225 2 
184 1 228 1 374 2 154 1 213 1 275 2 135 1 99 2 187 1 161 2 327 1 200 1 48 1 101 1 330 1 17 1 283 1 319 1 245 1 
184 1 374 2 213 1 275 1 135 1 99 1 187 1 161 1 327 1 200 1 25 1 48 1 101 1 330 1 17 1 283 1 319 1 
184 1 228 1 214 1 195 1 275 1 43 1 160 1 99 1 161 1 48 1 370 1 17 1 76 1 93 1 
184 1 228 1 374 2 154 1 213 1 275 1 135 1 99 1 187 1 161 1 327 1 200 1 48 1 101 1 330 1 17 1 283 1 319 1 
22 1 
80 1 152 1 53 1 365 1 339 1 275 1 229 2 6 2 86 1 297 1 38 1 161 1 299 1 60 1 316 2 208 3 17 1 318 1 93 1 172 1 195 1 353 1 244 1 218 3 99 1 48 1 49 1 149 1 30 2 310 1 76 1 225 2 
64 1 34 2 133 2 179 1 186 1 162 1 288 1 378 4 90 2 16 4 40 2 104 1 190 2 127 1 128 1 
378 1 165 1 40 1 274 1 104 1 202 1 190 1 
34 1 1 1 293 1 186 1 342 1 40 1 16 1 190 1 373 1 64 1 350 1 328 1 378 2 104 1 362 1 127 1 128 1 
246 2 1 3 337 3 9 2 161 3 342 5 17 4 16 12 345 2 166 2 118 2 64 4 216 2 179 1 180 1 358 1 359 2 28 2 29 1 362 5 76 10 127 4 128 4 33 2 34 6 270 2 271 1 272 2 365 3 274 1 312 2 133 6 275 3 185 2 186 4 315 2 89 2 90 6 40 8 190 2 93 1 373 5 195 3 242 1 99 3 326 2 46 2 288 2 48 3 378 8 202 1 104 9 103 1 245 1 
227 1 1 1 34 3 272 3 133 5 340 1 248 1 294 1 8 1 9 1 186 2 342 1 89 2 90 5 16 6 40 5 345 2 166 2 236 1 167 1 190 2 373 1 18 1 64 2 376 1 216 2 179 1 123 1 326 2 288 1 378 5 104 8 362 1 127 2 128 2 
152 1 272 2 84 1 229 1 6 1 9 1 186 1 111 1 342 1 208 1 164 1 113 1 345 2 40 2 166 1 41 1 64 1 173 1 119 1 218 1 198 1 102 1 104 2 362 1 30 1 127 1 128 1 225 1 
64 1 274 1 186 1 378 1 40 1 202 1 104 1 190 1 127 1 128 1 
118 1 34 5 272 2 133 5 216 2 9 1 326 2 378 5 89 2 90 5 345 2 40 5 16 10 166 2 104 5 
373 1 342 1 1 1 378 1 362 1 190 1 
1 2 275 4 276 1 186 1 161 4 342 3 370 1 17 1 317 1 40 2 253 1 93 2 373 4 64 2 42 1 214 1 195 1 179 2 99 4 288 2 48 1 358 2 221 1 104 2 29 1 362 3 76 1 127 2 128 2 
286 1 2 1 338 1 
286 1 2 1 338 1 
2 1 157 1 338 1 68 1 309 1 
286 1 2 1 338 1 
35 1 2 1 338 1 
35 1 2 1 338 1 
35 1 2 1 338 1 
2 1 338 1 
341 1 96 1 
80 4 41 1 53 2 339 2 141 1 69 3 353 2 198 1 162 1 299 8 316 4 233 1 102 1 166 1 345 1 361 1 91 4 318 2 74 1 75 2 
80 3 41 1 141 1 69 2 198 1 162 1 299 6 165 1 102 1 361 1 345 1 166 1 91 3 75 2 
80 2 53 1 339 1 69 1 353 1 216 1 326 1 299 4 316 2 89 1 166 1 264 1 345 1 318 1 91 2 75 1 
80 6 340 1 248 2 69 4 216 2 12 1 123 2 326 2 299 12 89 2 114 1 166 2 345 2 91 6 74 2 75 2 
80 16 53 2 339 2 248 2 162 1 12 1 299 30 233 2 316 4 164 1 114 1 89 2 345 4 166 4 91 14 318 2 41 4 239 1 141 1 69 12 353 2 216 2 198 2 123 2 356 1 326 2 102 4 361 1 74 5 75 7 
80 1 299 1 248 1 
123 1 299 1 91 1 
80 3 118 1 53 1 339 1 69 3 353 1 216 1 326 1 299 6 316 2 89 1 264 1 345 1 166 1 318 1 91 3 74 2 75 1 
80 6 227 1 53 1 340 1 339 1 248 1 294 1 206 1 8 1 299 12 316 2 89 2 345 2 166 2 318 1 91 6 167 1 376 1 69 2 353 1 216 2 123 1 326 2 74 1 75 1 
80 3 41 1 69 2 198 1 299 6 102 1 345 1 166 1 91 3 74 1 75 1 
80 2 41 1 239 1 53 1 339 1 141 1 69 2 353 1 299 3 233 1 316 2 102 1 361 1 91 1 318 1 74 1 75 1 
80 5 41 2 53 1 339 1 69 5 353 1 206 1 198 1 299 10 316 2 164 1 102 2 345 2 166 2 318 1 91 5 74 2 75 3 
53 1 339 1 69 1 206 1 353 1 216 1 299 2 316 2 345 1 318 1 91 2 74 1 
80 2 53 1 339 1 69 2 206 1 353 1 216 1 326 1 299 4 316 2 89 1 166 1 345 1 318 1 91 2 74 1 75 1 
80 2 239 1 41 1 53 3 339 3 69 2 206 1 353 3 299 3 233 1 316 6 102 1 318 3 91 1 222 1 74 1 75 1 
80 21 53 5 54 1 340 1 339 5 248 4 206 1 162 1 12 1 299 41 233 2 316 10 114 1 89 4 345 6 166 6 318 5 91 20 41 3 239 1 141 1 321 1 67 1 69 14 353 5 216 4 198 2 123 4 326 4 102 3 361 1 264 1 222 1 74 7 75 7 
80 4 227 1 53 1 340 1 339 1 248 1 206 1 162 1 299 8 316 2 166 1 345 1 318 1 91 4 41 1 141 1 69 2 353 1 198 1 123 1 102 1 361 1 75 2 
80 5 227 1 53 2 340 1 339 2 248 2 206 1 162 1 299 11 316 4 114 1 166 1 345 2 318 2 91 6 41 1 141 1 69 3 353 2 216 1 198 1 123 1 326 1 102 1 361 1 264 1 74 1 75 2 
80 10 227 1 53 3 340 1 339 3 248 1 294 1 206 1 8 1 162 1 299 19 316 6 233 1 89 2 345 3 166 3 318 3 91 9 167 1 41 1 376 1 141 1 69 5 353 3 216 2 198 1 123 1 326 2 102 1 361 1 264 1 74 1 75 4 
80 7 227 1 53 3 340 1 339 3 248 1 294 1 206 1 8 1 162 1 299 17 233 1 316 6 89 1 345 3 166 2 318 3 91 10 167 1 41 1 376 1 141 1 69 4 353 3 216 2 198 1 123 1 326 2 102 1 361 1 264 1 74 2 75 2 
80 4 227 1 53 1 340 1 339 1 248 1 206 1 162 1 299 8 316 2 166 1 345 1 318 1 91 4 41 1 141 1 69 2 353 1 198 1 123 1 102 1 361 1 75 2 
80 6 227 1 53 1 340 1 339 1 248 1 294 1 206 1 8 1 299 12 316 2 89 2 345 2 166 2 318 1 91 6 167 1 376 1 69 2 353 1 216 2 123 1 326 2 74 1 75 1 
80 8 227 1 53 4 340 1 339 4 248 1 294 1 206 1 8 1 162 1 299 18 316 8 233 2 89 1 345 3 166 2 318 4 91 10 167 1 41 1 376 1 141 1 69 5 353 4 216 2 198 1 123 1 326 2 102 1 361 1 264 1 74 2 75 3 
80 4 227 1 53 3 340 1 339 3 248 1 294 1 206 1 8 1 299 11 233 1 316 6 89 1 345 2 166 1 318 3 91 7 167 1 376 1 69 2 353 3 216 2 123 1 326 2 222 1 74 2 
80 4 41 3 141 1 69 6 198 1 299 7 102 3 166 1 361 2 345 1 91 3 74 3 75 3 
80 8 227 1 53 4 340 1 339 4 248 1 294 1 206 1 8 1 162 1 299 18 316 8 233 2 89 1 345 3 166 2 318 4 91 10 167 1 41 1 376 1 141 1 69 4 353 4 216 2 198 1 123 1 326 2 102 1 361 1 222 1 74 1 75 3 
208 1 268 1 176 1 333 1 218 1 86 1 225 1 
0 1 268 1 156 1 269 1 65 1 176 1 218 1 86 1 10 1 208 1 333 1 225 1 
161 1 48 1 165 1 370 1 17 1 214 1 195 1 275 1 76 1 99 1 93 1 
81 1 365 1 195 1 229 1 275 1 218 2 86 1 99 1 161 1 208 2 48 1 17 1 49 1 310 1 30 1 76 1 225 1 93 1 
81 1 193 1 365 2 312 1 84 1 66 1 195 2 229 2 275 1 218 2 86 1 99 1 161 1 208 2 48 1 359 1 358 1 17 1 49 1 310 1 30 1 76 3 225 2 
81 1 365 2 84 1 312 1 275 2 229 2 86 1 161 2 208 2 17 1 346 1 193 1 66 1 195 2 218 2 99 2 48 1 358 1 359 1 30 1 310 1 151 1 76 3 225 2 
33 1 337 1 365 1 312 1 275 3 185 1 161 3 342 2 17 1 190 1 93 1 373 1 240 1 195 1 99 3 72 1 48 1 358 1 359 1 378 1 362 2 151 1 76 4 
33 1 373 1 270 1 365 1 337 1 312 1 195 1 275 3 185 1 99 3 161 3 342 2 48 1 378 1 359 1 358 1 17 1 362 2 190 1 151 1 76 4 93 1 
161 1 48 1 17 1 275 1 7 1 99 1 
19 1 205 1 108 1 109 1 365 1 242 1 195 2 275 7 7 1 135 1 99 7 161 6 357 1 48 2 148 1 17 3 189 1 334 1 76 3 245 1 93 2 
51 1 53 2 339 2 297 1 59 1 161 1 162 1 60 2 299 6 208 2 17 1 345 1 166 1 303 1 172 2 69 2 353 2 218 2 354 1 361 1 30 1 310 1 76 1 75 2 225 1 80 3 81 1 365 1 275 1 229 1 38 1 86 2 278 1 316 4 318 2 91 3 41 1 195 1 141 1 98 1 198 1 99 1 48 1 102 1 331 1 49 1 245 1 
33 1 1 1 270 1 337 1 274 1 275 1 185 1 186 2 161 1 315 1 342 3 40 1 190 1 93 1 373 2 64 2 174 1 99 1 46 1 378 1 28 1 104 1 202 1 29 1 362 3 127 2 76 2 128 2 
271 1 365 1 242 1 195 1 275 2 7 1 185 1 99 2 161 2 48 1 17 2 76 2 245 1 
214 1 195 1 275 4 230 1 99 4 161 4 48 1 370 1 17 1 151 1 76 1 245 1 93 1 
137 1 171 1 109 1 365 1 195 1 275 2 99 2 161 2 357 1 48 1 358 1 301 1 17 2 76 1 
161 1 200 1 374 1 48 1 213 1 330 1 17 1 275 1 99 1 93 1 
195 1 275 2 135 1 207 1 99 2 161 2 48 1 17 1 334 1 76 1 245 1 
205 1 108 1 214 1 195 2 275 5 230 1 99 5 161 4 48 2 358 1 370 1 17 2 334 1 76 3 245 1 93 1 
108 1 214 1 195 2 275 5 230 1 99 5 161 4 146 1 48 2 358 1 370 1 17 2 334 1 76 3 245 1 93 1 
81 1 365 1 195 1 229 1 275 1 218 2 86 1 99 1 161 1 208 2 48 1 17 1 346 1 310 1 30 1 76 1 225 1 93 1 
109 1 365 1 242 1 195 1 275 1 99 1 161 1 357 1 48 1 358 1 17 2 189 1 76 1 
329 1 126 1 223 1 150 1 86 1 
33 1 193 1 174 1 84 1 66 1 3 1 86 1 325 1 342 2 378 1 329 2 126 2 223 1 362 2 284 1 190 1 265 1 150 2 63 1 
258 1 247 1 208 1 329 1 126 1 307 1 223 1 218 1 225 1 
3 1 223 1 63 1 
192 1 11 1 153 1 27 1 181 1 175 1 379 3 5 3 85 1 116 1 169 1 
192 1 292 1 4 1 44 1 
192 1 116 1 
192 1 165 1 175 1 116 1 
192 1 11 1 153 1 175 1 379 1 5 1 116 1 
204 1 5 1 298 1 
238 1 192 1 153 1 175 1 5 3 85 1 257 1 11 1 306 1 379 3 116 1 169 2 
192 1 11 1 153 1 27 1 15 1 175 1 379 2 5 2 116 1 
192 1 153 1 374 1 94 1 5 1 4 1 85 1 11 1 379 1 330 1 283 1 
192 1 11 1 153 1 379 1 5 1 85 1 116 1 
11 1 153 1 175 1 379 1 5 1 85 1 116 2 
192 1 153 2 348 1 5 2 85 1 11 2 379 2 209 1 237 1 116 1 
79 1 192 2 153 1 292 1 175 1 5 3 4 1 85 1 11 1 27 2 181 1 379 3 116 1 
192 1 153 1 374 2 213 1 175 1 5 2 85 1 217 1 11 1 27 1 379 2 330 1 283 1 319 1 116 1 
192 2 153 2 292 1 175 1 5 4 4 1 85 1 196 1 11 2 27 2 15 1 379 4 116 1 
192 1 11 1 153 1 175 1 379 1 5 1 85 1 116 1 
192 3 153 1 292 1 175 2 5 4 4 1 257 1 44 1 11 1 27 2 306 1 379 4 116 2 169 1 
192 1 153 1 175 1 5 2 85 1 11 1 112 1 26 1 27 1 379 2 116 1 372 1 
192 1 153 1 175 1 5 3 85 1 257 1 37 1 11 1 306 2 379 3 116 1 169 2 
192 2 136 2 62 1 347 1 
11 1 163 1 153 1 379 1 5 1 85 1 
192 1 11 1 153 1 27 1 181 1 175 1 379 2 5 2 85 1 116 1 
142 1 
192 1 11 1 153 1 175 1 379 1 5 1 85 1 116 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 336 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | STATEMENT | 1303 | stmt -> ;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z | OPERATOR | 5522 | < -> >
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 3 184 5 308 2 54 2 256 2 310 1 269 1 211 9 56 1 361 1 59 1 298 1 88 4 62 2 276 1 90 1 11 1 169 1 42 1 172 2 302 1 247 1 66 9 97 2 19 6 326 1 305 2 351 1 
287 3 184 5 308 2 54 2 256 2 310 1 269 1 211 9 56 1 361 1 59 1 298 1 88 4 62 2 276 1 90 1 11 1 169 1 42 1 172 2 302 1 247 1 66 9 97 2 19 6 326 1 305 2 351 1 
287 4 184 6 308 2 54 2 256 2 310 1 269 1 211 10 56 1 361 1 59 1 298 1 88 5 62 2 276 1 90 1 11 1 169 1 42 1 172 2 302 1 247 1 66 10 97 2 19 7 326 1 305 2 351 1 
287 2 184 4 308 2 54 2 256 1 310 1 269 1 211 7 56 1 361 1 298 1 88 3 62 2 276 1 90 1 11 1 169 1 42 1 172 2 302 1 247 1 66 7 97 2 19 4 326 1 305 2 351 1 
298 1 88 2 62 1 287 1 276 1 184 3 54 1 308 1 169 1 172 1 256 2 211 4 302 1 66 4 19 3 326 1 59 1 305 1 
62 1 184 1 276 1 308 1 42 1 54 1 172 1 17 1 211 2 302 1 247 1 66 2 97 1 326 1 203 1 164 1 
88 1 276 1 287 1 184 2 11 1 308 2 172 2 211 3 302 1 66 3 97 1 19 1 326 1 
287 3 184 5 77 1 308 2 54 1 256 2 269 1 4 1 211 9 56 1 59 1 298 1 88 4 62 1 276 1 11 1 169 1 172 2 302 1 66 9 97 1 19 7 326 1 305 1 
287 3 184 5 77 1 308 2 54 1 256 2 269 1 4 1 211 9 56 1 59 1 298 1 88 4 62 1 276 1 11 1 169 1 172 2 302 1 66 9 97 1 19 7 326 1 305 1 
177 1 373 1 40 1 
89 1 40 1 222 2 
273 1 31 2 347 2 338 2 64 2 323 2 44 1 147 2 
182 2 183 1 152 1 335 1 109 1 236 1 358 2 83 1 31 2 338 3 36 1 295 1 195 1 112 2 113 1 364 1 343 1 342 1 320 1 344 1 273 1 260 1 13 1 322 1 64 3 279 1 93 1 246 1 323 2 44 1 142 2 223 2 347 2 127 1 147 2 23 1 253 1 
25 1 31 1 347 1 338 1 1 1 64 1 314 1 323 1 44 1 147 1 
25 1 267 1 52 1 64 1 193 1 333 1 278 1 323 1 338 1 373 1 133 1 20 1 181 1 40 1 
25 1 267 2 52 1 64 1 193 1 333 1 278 2 323 1 31 1 347 1 338 1 373 1 147 1 181 1 40 1 
267 1 374 1 278 1 318 1 141 1 
267 2 354 1 373 1 374 1 278 2 120 1 141 1 40 1 
267 1 374 1 278 1 
25 1 267 1 1 1 64 1 278 1 44 1 323 1 141 1 31 1 347 1 303 1 338 1 314 1 147 1 
40 1 
267 2 373 1 374 1 278 2 251 1 120 1 141 1 40 1 
267 5 219 1 277 1 170 1 346 1 278 5 154 1 120 1 141 2 45 1 67 2 264 2 248 1 124 1 132 1 373 1 374 2 340 2 40 1 
367 1 182 1 320 1 260 1 64 2 152 1 246 1 323 1 142 1 270 1 358 1 31 1 338 2 295 1 127 1 113 1 364 1 147 1 253 1 286 1 
273 1 177 1 
273 2 321 1 64 2 323 2 31 1 347 1 338 2 180 1 147 1 
367 1 221 1 128 1 
182 1 320 1 273 1 260 1 64 1 152 1 246 1 142 1 358 1 338 1 295 1 113 1 127 1 306 1 364 1 253 1 
273 1 31 3 347 1 338 3 64 3 323 3 147 3 286 1 
25 1 31 1 338 1 1 1 64 1 323 1 147 1 
25 1 31 1 347 1 338 1 321 1 64 1 180 1 323 1 147 1 
266 1 25 1 267 1 182 1 52 1 183 1 193 1 152 1 333 1 335 1 109 1 236 1 270 1 358 1 31 3 338 4 36 1 295 1 195 1 112 2 113 1 364 1 343 1 342 1 320 1 273 1 260 1 64 4 279 1 278 1 246 1 323 3 44 1 142 1 223 1 347 2 180 1 127 1 147 3 181 1 23 1 253 1 24 1 286 1 
273 1 31 1 338 2 64 2 20 1 327 1 323 2 147 1 286 1 
267 1 25 1 366 1 52 1 64 3 193 1 333 1 278 1 323 3 270 1 31 3 347 1 338 3 180 1 147 3 181 1 40 1 286 2 24 1 
367 1 64 2 323 2 31 2 347 1 338 2 180 1 128 1 147 2 286 1 
182 1 320 1 273 1 260 1 64 1 152 1 246 1 142 1 358 1 338 1 295 1 113 1 127 1 364 1 253 1 
182 1 273 1 260 1 64 1 152 1 246 1 280 1 142 1 358 1 68 1 338 1 295 1 113 1 127 1 253 1 
183 1 209 1 105 1 157 1 335 1 236 2 32 1 8 1 36 1 112 2 343 1 342 1 367 2 299 1 344 2 41 1 221 2 279 1 223 4 100 1 128 2 103 1 
25 1 31 1 338 1 64 1 171 1 323 1 181 1 147 1 
207 1 273 1 64 5 323 5 270 1 31 4 347 1 338 5 20 1 180 1 327 1 237 1 147 4 286 2 
25 1 31 2 338 2 1 1 64 2 171 1 323 2 147 2 
63 1 146 1 
63 1 146 1 
111 1 91 1 
111 1 91 1 
111 1 91 1 
63 1 28 1 146 1 
63 1 28 1 146 1 
63 1 146 1 365 1 
63 2 144 1 111 1 91 1 146 2 94 1 
63 1 28 1 146 1 
63 1 146 1 235 1 
63 1 146 1 235 1 
63 1 146 1 235 1 
330 2 267 2 63 2 275 2 332 1 106 1 278 2 263 3 94 1 82 2 312 1 46 1 257 1 126 2 47 1 146 2 102 1 40 1 228 2 
330 1 267 1 355 1 53 1 332 1 82 1 31 2 359 1 338 2 35 1 365 1 273 1 63 1 12 1 64 2 263 1 278 1 200 1 323 2 175 1 126 1 146 1 147 2 228 1 
62 1 54 1 305 1 
62 1 54 1 164 1 
62 3 262 1 58 1 305 2 87 1 164 1 
62 2 166 1 262 1 305 1 87 1 164 1 
62 2 262 2 305 1 87 1 164 1 
105 1 1 1 214 1 157 1 338 1 340 1 10 1 299 1 219 3 170 1 64 1 14 2 120 1 222 3 67 1 264 1 347 1 303 1 267 5 25 1 355 1 190 2 31 1 132 2 314 1 363 1 319 1 40 2 89 1 278 5 44 1 323 1 201 1 141 4 281 1 373 1 374 1 100 1 250 2 147 1 
105 1 1 1 214 1 157 1 338 1 340 1 299 1 219 3 64 1 170 1 14 2 174 1 120 1 222 3 67 1 347 1 264 1 303 1 267 5 25 1 355 1 309 1 31 1 132 2 314 1 318 2 319 1 40 2 89 1 370 2 278 5 323 1 44 1 201 1 141 4 281 1 373 1 374 3 100 1 250 2 147 1 
25 1 267 3 355 1 105 1 190 1 1 1 214 1 157 1 31 1 338 1 132 2 314 1 363 1 340 1 10 1 319 1 40 2 219 1 89 1 64 1 14 1 346 1 278 3 323 1 44 1 141 2 281 1 222 2 67 1 347 1 264 1 303 1 373 1 250 1 147 1 
267 2 355 1 105 1 190 1 214 1 157 1 336 1 132 2 363 1 340 1 10 1 319 1 40 1 219 1 89 1 14 1 346 1 278 2 141 1 281 1 222 2 67 1 264 1 250 1 
177 1 293 1 295 1 
295 1 165 1 
104 1 
295 1 127 1 
260 1 293 2 34 1 295 3 127 1 30 1 
260 1 295 1 127 1 
345 1 295 1 
299 1 344 4 208 2 105 1 243 1 357 3 158 1 18 1 236 3 223 7 6 1 121 1 33 1 216 2 163 1 39 1 329 1 
299 1 344 4 208 2 105 1 243 1 357 3 158 1 18 1 236 3 223 7 6 1 121 1 33 1 216 2 163 1 39 1 329 1 
299 1 344 4 208 2 105 1 243 1 357 3 158 1 18 1 236 3 223 7 33 1 6 1 96 1 121 1 216 2 163 1 39 1 329 1 
74 1 208 3 105 4 233 1 212 1 157 3 158 1 357 8 236 15 33 1 6 2 216 3 36 1 112 2 163 1 135 1 39 2 343 1 342 1 344 16 299 4 279 1 243 5 119 3 281 3 18 2 223 31 121 2 176 1 225 4 50 1 249 1 100 3 329 1 
208 3 105 1 233 1 357 4 236 4 6 1 33 1 36 2 216 2 112 4 163 1 343 2 342 2 39 1 299 1 344 5 92 1 279 2 243 1 18 1 223 9 121 1 179 1 329 1 
182 1 254 1 184 1 189 1 54 1 192 1 308 1 268 1 152 1 234 1 211 2 358 1 58 1 162 1 113 1 272 1 164 1 38 1 199 1 137 1 62 2 276 1 172 1 302 1 142 1 66 2 97 1 19 1 326 1 305 1 
182 1 254 1 149 1 184 1 54 1 192 1 308 1 268 1 152 1 234 1 211 3 358 1 57 1 58 1 162 1 113 1 272 1 164 1 199 1 137 1 62 2 65 1 172 1 302 1 142 1 66 3 97 1 19 2 326 1 305 1 
182 1 254 1 149 1 184 1 192 1 268 1 54 1 152 1 211 2 358 1 57 1 58 1 113 1 272 1 164 1 199 1 137 1 62 2 302 1 142 1 66 2 97 1 19 2 326 1 305 1 
182 1 254 2 255 1 192 2 308 1 152 1 211 1 358 1 337 1 295 1 113 1 272 2 274 1 65 1 172 1 15 1 142 1 66 1 371 1 123 1 97 2 127 1 253 1 
182 1 254 1 54 1 192 1 308 1 268 1 152 1 234 1 211 1 358 1 57 1 58 1 162 1 113 1 272 1 164 1 38 1 199 1 137 1 62 2 276 1 172 1 142 1 66 1 97 1 305 1 
372 1 
52 1 288 1 255 1 152 1 333 1 289 1 213 1 55 2 291 1 338 1 295 1 60 1 340 1 113 1 341 1 219 2 170 1 64 1 120 3 222 2 67 1 264 1 226 2 71 1 20 1 127 1 21 1 181 1 267 5 182 2 25 1 232 1 191 1 193 1 358 2 85 2 132 2 133 1 316 2 319 1 40 2 241 4 89 2 138 1 140 2 368 1 278 5 323 1 143 2 142 2 371 1 373 1 374 6 252 2 253 2 
267 3 25 1 52 1 191 1 193 1 333 1 289 1 338 1 133 1 60 1 341 1 241 2 138 1 64 1 278 3 323 1 120 1 20 1 374 2 251 1 181 1 252 1 
267 3 25 1 52 1 191 1 193 1 333 1 289 1 338 1 133 1 60 1 341 1 241 3 40 1 138 1 64 1 278 3 323 1 120 1 226 1 373 1 374 1 20 1 251 1 181 1 
267 3 25 1 52 1 191 1 193 1 333 1 289 1 338 1 133 1 60 1 341 1 241 3 40 1 138 1 140 1 64 1 278 3 323 1 120 1 226 1 373 1 20 1 374 2 251 1 181 1 252 1 
52 1 333 1 289 1 213 1 55 2 338 1 60 1 340 1 341 1 219 1 117 1 220 1 261 1 64 1 170 1 120 3 67 1 264 1 226 4 20 1 71 1 181 1 25 1 267 5 193 1 191 1 78 1 85 2 132 1 133 1 316 2 241 6 40 5 138 1 242 1 89 2 140 4 278 5 323 1 143 2 373 5 374 7 251 1 252 4 
52 1 288 1 333 1 289 1 213 1 55 2 338 1 60 1 340 1 341 1 219 1 64 1 170 1 120 2 222 2 67 1 264 1 226 2 20 1 71 1 181 1 25 1 267 4 193 1 191 1 85 2 132 1 133 1 316 2 241 4 40 2 138 1 89 2 140 2 278 4 323 1 143 2 373 1 374 4 252 2 
267 4 25 1 52 1 191 1 193 1 78 1 333 1 289 1 213 1 55 2 85 2 338 1 132 1 133 1 60 1 316 2 340 1 341 1 40 1 241 4 219 1 89 2 242 1 138 1 140 2 220 1 64 1 170 1 278 4 323 1 120 2 143 2 67 1 264 1 373 1 226 2 374 4 71 1 20 1 252 2 181 1 
267 4 25 1 52 1 191 1 193 1 78 1 333 1 289 1 213 1 55 2 85 2 338 1 132 1 133 1 60 1 316 2 340 1 341 1 40 1 241 4 219 1 89 2 242 1 138 1 140 2 220 1 64 1 170 1 278 4 323 1 120 2 143 2 67 1 264 1 373 1 226 2 374 4 71 1 20 1 252 2 181 1 
267 4 25 1 52 1 210 2 191 1 193 1 333 1 107 1 289 1 55 2 338 1 132 1 133 1 60 1 340 1 341 1 40 1 241 4 219 1 242 1 138 1 140 2 64 1 170 1 278 4 323 1 120 2 222 2 143 2 67 1 264 1 373 1 226 2 98 1 374 4 71 1 20 1 328 2 252 2 181 1 101 1 
267 4 25 1 52 1 78 1 191 1 193 1 333 1 289 1 213 1 55 2 85 2 338 1 132 1 133 1 60 1 316 2 340 1 341 1 40 1 241 5 219 1 89 2 242 1 138 1 140 3 220 1 261 1 170 1 64 1 278 4 323 1 120 2 143 2 67 1 264 1 373 1 226 3 71 1 20 1 374 5 181 1 252 3 
267 4 25 1 52 1 78 1 191 1 193 1 333 1 289 1 213 1 55 2 85 2 338 1 132 1 133 1 60 1 316 2 340 1 341 1 40 1 241 5 219 1 89 2 242 1 138 1 140 3 220 1 261 1 170 1 64 1 278 4 323 1 120 2 143 2 67 1 264 1 373 1 226 3 71 1 20 1 374 5 181 1 252 3 
52 1 288 1 210 2 333 1 107 1 289 1 55 2 338 1 60 1 340 1 341 1 219 1 64 1 170 1 120 2 222 2 67 1 264 1 226 2 20 1 71 1 181 1 25 1 267 4 193 1 191 1 132 1 133 1 241 4 40 1 138 1 140 2 278 4 323 1 143 2 373 1 374 4 328 2 252 2 
367 1 273 2 299 1 344 3 208 2 183 1 221 1 105 1 279 1 357 2 335 1 18 1 236 3 223 6 33 1 177 1 8 1 216 1 36 1 112 2 128 1 163 1 39 1 342 1 343 1 329 1 
183 1 151 1 105 2 212 1 157 2 357 1 335 2 81 1 236 4 259 1 294 1 36 2 112 4 135 1 343 2 342 2 367 10 273 1 344 8 221 10 322 1 279 2 243 1 119 3 281 2 223 12 225 3 128 3 23 1 285 1 
182 1 76 1 183 1 356 1 152 1 335 1 358 1 270 1 236 1 31 1 259 1 338 2 295 1 36 1 112 2 113 1 364 1 342 1 343 1 320 1 273 1 344 1 260 1 64 2 322 1 279 1 246 1 323 1 301 1 142 1 223 2 127 1 306 1 128 1 147 1 253 1 23 1 286 1 
208 1 105 1 152 1 157 1 335 2 338 2 259 1 295 1 215 1 112 4 113 1 343 2 342 2 344 3 260 1 118 1 221 2 64 2 223 5 122 1 69 1 127 1 22 1 128 2 23 1 182 1 183 2 357 1 236 2 358 1 270 1 31 1 36 2 195 1 364 1 320 1 367 2 279 2 246 1 323 1 281 1 142 1 147 1 253 1 286 1 
182 8 183 2 255 1 189 1 331 1 27 1 152 2 3 1 335 2 358 7 236 1 31 1 57 1 338 1 8 1 295 3 36 2 112 4 113 2 343 2 342 2 240 1 344 1 64 1 322 1 279 2 93 2 323 1 142 8 224 1 282 1 283 1 223 2 371 1 127 2 147 1 253 2 23 1 286 1 
208 1 183 1 26 1 105 1 157 1 357 1 335 1 236 2 31 1 259 1 338 1 36 1 112 2 343 1 342 1 367 1 344 1 299 1 221 1 64 1 279 1 323 1 281 1 223 3 347 1 180 1 100 1 128 1 147 1 
367 1 344 2 183 1 209 1 221 1 105 1 279 1 157 1 335 1 223 2 8 1 36 1 112 2 128 1 342 1 343 1 
367 1 299 1 208 1 183 1 221 1 279 1 357 1 335 1 236 2 223 2 32 1 8 1 36 1 112 2 100 1 128 1 342 1 343 1 
367 1 344 2 183 1 221 1 105 1 279 1 157 1 335 1 281 1 223 2 8 1 36 1 112 2 128 1 342 1 343 1 
367 1 344 2 183 1 209 1 221 1 105 1 279 1 157 1 335 1 223 2 282 1 36 1 112 2 128 1 342 1 343 1 
367 1 299 1 208 1 183 1 221 1 279 1 357 1 335 1 236 2 223 2 282 1 32 1 36 1 112 2 100 1 128 1 342 1 343 1 
367 1 344 2 183 1 221 1 105 1 279 1 157 1 335 1 281 1 223 2 282 1 36 1 112 2 128 1 342 1 343 1 
367 1 344 2 183 1 221 1 105 1 279 1 157 1 335 1 281 1 223 2 36 1 112 2 128 1 342 1 343 1 
182 1 183 1 152 1 335 1 358 1 236 1 338 1 195 1 295 1 36 1 112 2 113 1 364 1 342 1 343 1 320 1 344 1 273 1 260 1 322 1 64 1 279 1 246 1 142 1 223 2 127 1 253 1 23 1 
182 1 183 1 152 1 335 1 358 1 236 1 338 1 295 1 36 1 112 2 113 1 134 1 342 1 343 1 344 1 273 1 260 1 322 1 64 1 279 1 246 1 280 1 142 1 68 1 223 2 127 1 253 1 23 1 
367 1 344 2 183 1 221 1 105 1 279 1 157 1 335 1 281 1 223 2 259 1 36 1 112 2 128 1 342 1 343 1 
182 1 183 1 105 1 189 1 152 1 157 1 335 1 358 1 338 1 195 1 295 1 36 1 112 2 113 1 364 1 342 1 343 1 367 1 320 1 344 2 260 1 221 1 118 1 64 1 279 1 246 1 281 1 142 1 223 2 127 1 128 1 
75 1 183 1 105 1 157 1 335 1 236 1 31 1 259 1 338 1 36 1 112 2 343 1 342 1 367 1 299 1 344 2 221 1 64 1 279 1 323 1 281 1 223 3 347 1 180 1 100 1 147 1 
105 2 212 1 157 2 357 1 236 5 292 1 131 1 36 2 112 4 196 1 296 1 135 1 343 2 342 2 115 1 344 6 299 1 168 1 279 2 243 1 119 1 281 2 223 11 225 2 145 1 304 1 179 1 100 1 
208 1 231 1 105 3 233 1 212 2 157 3 357 1 236 9 313 1 292 1 131 2 36 2 112 4 218 1 197 1 296 1 343 2 342 2 136 1 299 1 344 12 168 2 279 2 43 1 119 2 324 1 281 3 223 21 225 2 145 3 304 1 179 1 100 1 
105 2 212 1 157 2 357 1 236 8 292 1 131 1 36 2 112 4 296 1 135 1 343 2 342 2 136 1 115 1 344 7 299 2 168 1 279 2 243 1 119 1 281 2 223 15 225 2 145 2 304 1 179 1 100 2 
105 2 212 1 157 2 357 1 236 8 292 1 131 1 36 2 112 4 296 1 135 1 343 2 342 2 136 1 115 1 344 7 299 2 168 1 279 2 243 1 119 1 281 2 223 15 225 2 145 2 304 1 179 1 100 2 
208 2 231 1 105 5 233 1 212 2 157 4 357 4 236 15 313 1 33 1 292 1 131 1 216 1 36 2 112 4 218 1 163 1 197 1 296 1 135 1 39 1 343 2 342 2 136 1 299 3 344 18 168 1 243 2 279 2 43 1 119 2 324 1 281 4 18 1 223 33 225 3 304 1 145 4 179 1 100 2 329 1 
330 1 82 1 312 1 148 1 63 1 126 1 106 1 146 1 94 1 228 1 
35 1 365 1 
330 1 82 1 116 1 63 1 230 1 194 1 126 1 146 1 228 1 
267 1 330 1 63 1 275 1 332 1 106 1 278 1 263 2 94 1 82 1 312 1 257 1 126 1 47 1 146 1 102 1 40 1 228 1 
267 1 330 1 63 1 275 1 332 1 106 1 278 1 263 2 94 1 82 1 312 1 257 1 126 1 47 1 146 1 102 1 40 1 228 1 
267 1 330 1 63 1 275 1 332 1 106 1 278 1 263 2 94 1 82 1 312 1 257 1 126 1 47 1 146 1 102 1 40 1 228 1 
144 1 28 1 114 1 
144 1 28 1 114 1 
160 1 235 1 
160 1 144 1 235 1 
359 1 53 1 
267 1 330 1 355 1 53 1 82 1 31 2 359 1 338 2 35 1 365 1 273 1 275 1 63 1 12 1 64 2 278 1 263 1 200 1 323 2 141 1 175 1 47 1 126 1 146 1 206 1 147 2 228 1 
28 1 114 1 
160 1 144 1 235 1 
182 2 183 1 331 1 152 1 79 1 335 1 236 1 358 2 259 1 338 2 362 1 295 1 36 1 161 1 112 2 113 1 342 1 343 1 344 1 300 1 64 2 322 1 279 1 93 2 323 2 142 2 283 1 223 2 127 1 284 1 23 1 
182 2 353 1 254 1 137 1 62 2 189 1 54 1 268 1 152 1 142 2 358 2 202 1 57 1 58 1 305 1 113 1 162 1 51 1 164 1 
182 1 254 1 137 1 62 2 188 1 54 1 268 1 152 1 142 1 358 1 57 1 58 1 305 1 162 1 113 1 51 1 164 1 
182 1 353 1 254 1 274 1 255 1 152 1 142 1 358 1 371 1 295 1 113 1 127 1 217 1 253 1 
182 1 353 1 254 1 137 1 62 2 54 1 268 1 152 1 142 1 358 1 202 1 57 1 58 1 305 1 113 1 162 1 51 1 164 1 
229 1 
219 1 177 1 277 1 248 1 132 1 373 1 40 1 
267 1 213 1 85 1 132 1 340 1 316 1 40 2 219 1 89 1 170 1 278 1 120 1 222 1 67 1 264 1 373 1 374 1 
267 2 182 1 52 1 186 1 105 1 152 1 29 1 157 1 80 1 30 1 358 1 84 1 293 1 132 3 295 4 315 1 340 2 113 2 165 2 319 1 40 2 219 2 89 2 260 1 14 2 170 2 278 2 281 1 120 1 222 4 142 1 67 2 264 2 48 1 125 1 374 2 127 1 250 2 22 1 129 1 253 1 
267 1 231 1 105 2 212 1 157 2 313 1 132 5 315 2 340 2 218 1 197 1 319 1 40 5 219 8 299 2 89 3 368 1 14 5 170 2 278 1 43 1 119 1 120 1 281 2 95 1 222 6 67 2 325 1 264 2 225 1 373 2 374 1 100 2 250 5 204 1 
25 1 267 1 0 1 105 2 1 1 78 1 31 1 338 1 132 2 314 1 315 2 340 1 163 1 39 1 299 1 219 2 64 1 170 1 278 1 44 1 323 1 18 1 67 1 325 1 264 1 347 1 303 1 147 1 
219 1 277 1 170 1 67 1 264 1 248 1 132 1 373 1 340 1 40 1 
89 1 105 1 14 1 157 1 281 1 222 2 132 2 250 1 40 1 
267 1 373 1 278 1 374 1 120 1 40 1 
182 4 267 3 185 1 255 1 232 1 152 1 334 1 130 2 311 1 358 4 132 2 295 1 113 1 340 2 319 2 219 2 368 2 170 1 346 1 278 3 120 2 142 4 67 2 371 1 264 2 374 4 127 1 21 1 253 2 
182 1 183 1 152 1 335 1 109 1 236 1 358 1 31 2 338 3 36 1 195 1 295 1 112 2 113 1 364 1 343 1 342 1 320 1 273 1 260 1 64 3 279 1 246 1 323 2 44 1 142 1 223 1 347 2 127 1 147 2 23 1 253 1 
219 1 89 2 368 1 14 2 170 1 222 4 67 1 264 1 132 2 373 2 216 1 340 1 250 2 319 1 40 4 
330 1 339 1 228 1 
330 1 339 1 228 1 
330 1 359 1 258 1 106 1 228 1 
330 1 339 1 228 1 
330 1 271 1 228 1 
330 1 271 1 228 1 
330 1 271 1 228 1 
330 1 228 1 
63 1 146 1 
299 1 344 4 208 2 105 1 243 1 279 2 233 1 357 3 18 1 236 4 223 8 33 1 216 1 36 2 112 4 163 1 342 2 343 2 39 1 329 1 
236 3 299 1 223 6 344 3 208 2 33 1 177 1 105 1 216 1 163 1 357 2 39 1 18 1 329 1 
344 2 105 1 279 1 157 1 281 1 223 2 7 1 36 1 112 2 342 1 343 1 
299 1 344 3 105 1 243 1 119 1 212 1 157 1 281 1 357 1 236 4 223 7 225 2 100 1 135 1 
0 1 208 4 151 1 105 5 233 1 157 2 357 8 236 10 33 1 216 1 36 1 112 2 163 2 135 1 39 2 342 1 343 1 344 13 299 4 243 4 279 1 119 2 281 2 18 2 223 23 225 2 100 1 285 1 329 1 
236 1 223 1 225 1 
223 1 344 1 119 1 
344 3 299 1 105 1 243 1 157 1 281 1 357 1 236 3 223 6 100 1 22 1 
208 1 231 1 105 2 233 1 212 1 157 2 357 2 236 5 313 1 36 2 112 4 218 1 197 1 343 2 342 2 299 1 344 6 43 1 279 2 243 1 119 1 281 2 223 11 225 1 179 1 100 1 
344 3 299 1 208 1 105 1 243 1 357 2 18 1 236 3 223 6 163 1 39 1 
344 1 208 1 243 1 233 1 279 1 245 1 357 2 18 1 236 2 223 3 33 1 36 1 112 2 39 1 342 1 343 1 329 1 
0 1 344 5 299 2 208 3 105 2 279 1 243 2 357 5 18 2 236 5 223 10 36 1 179 1 112 2 163 1 343 1 342 1 39 2 
344 2 105 1 279 1 157 1 223 2 179 1 36 1 112 2 342 1 343 1 
344 2 105 1 279 1 157 1 281 1 223 2 179 1 36 1 112 2 342 1 343 1 
115 1 344 1 208 1 233 1 279 3 243 1 245 1 357 2 18 1 236 2 223 3 179 1 36 3 112 6 342 3 343 3 39 1 
74 1 208 4 105 5 233 2 212 1 157 3 357 9 236 18 33 1 7 1 216 1 36 5 112 10 163 2 135 1 39 3 343 5 342 5 115 1 344 16 299 5 279 5 243 5 245 1 119 3 281 3 18 3 223 34 176 1 225 4 179 1 50 1 100 3 329 1 
208 2 105 1 212 1 357 2 236 4 33 1 216 1 36 1 112 2 163 1 343 1 342 1 39 1 299 1 344 4 43 1 279 1 119 1 18 1 223 8 225 1 179 1 329 1 
208 2 105 2 212 1 157 1 357 3 236 5 33 1 7 1 216 1 36 2 112 4 163 1 135 1 39 1 343 2 342 2 299 1 344 6 43 1 279 2 243 1 119 1 281 1 18 1 223 11 225 2 179 1 329 1 
208 3 231 1 105 3 233 1 212 1 157 2 357 4 236 8 313 1 33 1 7 1 216 1 36 3 112 6 218 1 163 1 197 1 39 1 343 3 342 3 299 2 344 9 43 1 279 3 243 1 119 1 281 2 18 1 223 17 225 1 179 1 100 1 329 1 
0 1 208 4 231 1 105 5 233 1 212 1 157 2 357 7 236 11 313 1 33 1 7 1 216 1 36 3 112 6 218 1 163 2 197 1 39 2 343 3 342 3 299 4 344 13 243 3 43 1 279 3 119 1 281 2 18 2 223 24 225 1 179 1 100 1 329 1 
208 2 105 1 212 1 357 2 236 4 33 1 216 1 36 1 112 2 163 1 343 1 342 1 39 1 299 1 344 4 43 1 279 1 119 1 18 1 223 8 225 1 179 1 329 1 
208 1 231 1 105 2 233 1 212 1 157 2 357 2 236 5 313 1 36 2 112 4 218 1 197 1 343 2 342 2 299 1 344 6 43 1 279 2 243 1 119 1 281 2 223 11 225 1 179 1 100 1 
208 1 231 1 105 2 233 1 212 1 157 2 357 1 236 5 313 1 7 1 36 3 112 6 218 1 197 1 343 3 342 3 299 1 344 6 43 1 279 3 119 1 281 2 223 11 225 1 179 1 100 1 
208 2 231 1 105 3 233 2 212 1 157 3 357 5 236 5 313 1 36 4 112 8 218 1 197 1 343 4 342 4 299 1 115 1 344 9 243 3 43 1 279 4 119 1 281 3 223 14 225 1 179 1 100 1 
299 1 344 3 208 3 105 1 243 3 357 6 18 3 236 4 223 7 33 2 163 1 39 3 329 1 
208 1 231 1 105 2 233 1 212 1 157 2 357 1 236 5 313 1 36 3 112 6 218 1 197 1 343 3 342 3 299 1 115 1 344 6 43 1 279 3 119 1 281 2 223 11 225 1 179 1 100 1 
273 1 338 1 64 1 20 1 327 1 323 1 239 1 
61 1 273 1 352 1 139 1 64 1 153 1 323 1 338 1 20 1 327 1 86 1 239 1 
182 1 358 1 371 1 255 1 177 1 152 1 295 1 113 1 127 1 253 1 142 1 
182 1 273 1 260 1 64 2 152 1 246 1 323 1 142 1 358 1 31 1 338 2 295 1 127 1 113 1 364 1 147 1 253 1 286 1 
25 1 182 1 273 1 345 1 260 2 193 1 64 2 152 1 246 1 323 2 130 1 142 1 358 1 31 1 338 2 295 3 127 2 113 1 364 1 297 1 181 1 147 2 286 1 
25 1 182 2 273 1 345 1 260 2 193 1 64 2 152 1 246 1 323 2 280 1 130 1 142 2 358 2 31 1 338 2 178 1 295 3 127 2 113 1 297 1 181 1 147 2 286 1 
182 3 267 2 52 1 152 1 156 1 130 1 358 3 293 1 110 1 295 4 113 1 165 1 297 1 40 1 345 1 260 1 278 2 142 3 178 1 373 1 374 1 127 1 253 1 
267 2 182 3 52 1 345 1 260 1 152 1 278 2 130 1 142 3 358 3 293 1 178 1 373 1 295 4 374 1 127 1 113 1 297 1 129 1 165 1 253 1 40 1 
182 1 358 1 152 1 27 1 113 1 142 1 
182 7 187 1 260 1 189 1 369 1 331 1 27 1 152 2 93 1 3 1 30 1 142 7 358 6 224 1 57 1 295 3 127 2 113 3 350 1 253 2 240 1 
182 1 208 2 183 2 105 1 189 1 152 1 357 2 335 2 236 3 358 1 33 1 31 1 259 1 338 2 362 1 216 1 295 1 36 2 195 1 112 4 113 1 364 1 163 1 39 1 342 2 343 2 367 1 320 1 273 2 299 1 344 3 260 1 221 1 118 1 64 2 279 2 246 1 323 1 18 1 142 1 223 6 69 1 127 1 128 1 147 1 329 1 286 1 
182 1 267 3 52 1 185 1 80 1 358 1 84 1 293 1 132 1 295 2 340 2 165 1 40 1 219 1 277 1 170 2 278 3 141 1 120 1 142 1 67 2 264 2 248 1 373 1 125 1 374 2 129 1 253 1 
182 2 186 1 260 1 189 1 27 1 152 1 30 1 142 2 358 2 293 1 295 2 127 1 113 2 
182 4 255 1 189 1 152 1 142 4 358 4 371 1 178 1 295 1 113 1 127 1 198 1 253 1 
182 2 187 1 260 1 152 1 244 1 290 1 130 1 142 2 358 2 295 1 127 1 113 2 350 1 227 1 
182 1 358 1 137 1 62 1 54 1 152 1 113 1 164 1 253 1 142 1 
182 2 189 1 331 1 152 1 142 2 358 2 57 1 295 1 127 1 113 1 284 1 
182 5 255 1 189 1 331 1 152 2 130 1 3 1 142 5 358 4 371 1 295 3 127 2 113 2 198 1 253 1 240 1 
182 5 150 1 255 1 189 1 331 1 152 2 130 1 3 1 142 5 358 4 371 1 295 3 127 2 113 2 198 1 253 1 
182 1 273 1 260 1 64 2 152 1 246 1 323 1 280 1 142 1 358 1 31 1 338 2 295 1 127 1 113 1 147 1 253 1 286 1 
182 1 187 1 260 1 369 1 152 1 130 1 30 1 142 1 358 1 295 1 127 1 113 2 350 1 
273 1 159 1 167 1 99 1 16 1 
25 1 267 2 273 1 52 1 167 2 193 1 333 1 278 2 155 1 16 2 173 1 141 1 159 1 373 1 238 1 99 2 181 1 40 1 24 1 
159 1 338 1 300 1 167 1 64 1 161 1 79 1 16 1 323 1 
159 1 155 1 238 1 
184 1 326 1 177 1 302 1 
184 1 326 1 308 1 172 1 211 1 302 1 66 1 
97 1 192 1 211 1 
184 1 276 1 308 1 172 1 211 3 247 2 302 1 66 3 326 1 360 1 37 1 348 1 
184 1 19 1 326 1 308 1 172 1 256 1 211 2 302 1 66 2 
88 1 62 1 184 1 276 1 54 1 169 1 308 1 172 1 305 1 211 1 66 1 
184 1 276 1 308 1 172 1 211 1 302 1 66 1 
276 1 326 1 308 1 172 1 211 1 302 2 66 1 
184 1 276 1 308 2 172 2 2 1 211 2 302 1 66 2 317 1 349 1 
88 1 276 1 287 1 184 2 308 1 172 1 269 1 211 3 302 1 66 3 56 1 19 2 326 1 
62 2 184 1 276 1 308 1 54 1 172 1 108 1 211 2 302 1 66 2 19 1 326 1 58 1 305 1 164 1 
88 1 276 1 287 1 184 2 308 2 172 2 256 1 211 4 302 1 66 4 19 2 326 1 59 1 
184 1 276 1 326 1 308 1 172 1 211 1 302 1 66 1 
88 1 287 1 184 3 308 1 172 1 211 4 247 1 302 2 5 1 66 4 19 2 326 2 37 1 348 1 
184 1 276 1 308 1 77 1 172 1 211 2 302 1 66 2 19 1 326 1 70 1 265 1 
184 1 276 1 308 1 307 1 172 1 211 3 247 2 302 1 66 3 326 1 37 1 348 2 
184 2 72 2 9 1 73 1 
276 1 308 1 172 1 205 1 211 1 66 1 
184 1 19 1 276 1 326 1 308 1 172 1 269 1 211 2 302 1 66 2 
49 1 
184 1 276 1 326 1 308 1 172 1 211 1 302 1 66 1 
276 1 184 1 308 1 172 1 269 1 211 3 247 1 302 1 66 3 19 1 326 1 
88 1 184 1 287 1 5 1 
184 1 302 1 

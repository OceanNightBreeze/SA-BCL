#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 122 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 28 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (4,173,234) (4,173,234) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (4,173,234) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (4,173,234) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (150,339) (150,339) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (4,173,234) (4,173,234) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V | STATEMENT | 561 | stmt -> ;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 1325 | return null
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
45 2 22 2 262 1 320 1 53 1 151 1 323 1 103 2 69 2 70 9 300 1 277 1 302 1 181 1 304 2 371 6 127 1 159 1 109 1 128 5 329 2 61 4 213 9 362 3 42 1 15 1 311 1 288 2 
45 2 22 2 262 1 320 1 53 1 151 1 323 1 103 2 69 2 70 9 300 1 277 1 302 1 181 1 304 2 371 6 127 1 159 1 109 1 128 5 329 2 61 4 213 9 362 3 42 1 15 1 311 1 288 2 
45 2 22 2 262 1 320 1 53 1 151 1 323 1 103 2 69 2 70 10 300 1 277 1 302 1 181 1 304 2 371 7 127 1 159 1 109 1 128 6 329 2 61 5 213 10 362 4 42 1 15 1 311 1 288 2 
45 1 22 2 262 1 320 1 53 1 151 1 323 1 103 2 69 2 70 7 300 1 277 1 302 1 181 1 304 2 371 4 127 1 109 1 128 4 329 2 61 3 213 7 362 2 42 1 15 1 311 1 288 2 
45 2 371 3 304 1 159 1 22 1 262 1 128 3 61 2 151 1 213 4 362 1 103 1 69 1 42 1 70 4 15 1 288 1 302 1 
181 1 197 1 22 1 108 1 128 1 262 1 329 1 53 1 151 1 213 2 103 1 69 1 70 2 15 1 237 1 288 1 
371 1 22 2 262 1 128 2 329 1 61 1 151 1 213 3 362 1 70 3 15 1 300 1 288 2 
45 2 22 2 262 1 96 1 151 1 103 1 69 1 70 9 300 1 302 1 371 7 304 1 127 1 280 1 159 1 109 1 128 5 329 1 61 4 213 9 362 3 42 1 15 1 288 2 
45 2 22 2 262 1 96 1 151 1 103 1 69 1 70 9 300 1 302 1 371 7 304 1 127 1 280 1 159 1 109 1 128 5 329 1 61 4 213 9 362 3 42 1 15 1 288 2 
29 1 369 1 156 1 
370 2 29 1 217 1 
164 2 209 2 2 2 87 2 192 2 148 1 278 1 331 2 
123 1 260 2 261 2 23 1 293 1 146 1 148 1 1 1 2 2 3 2 274 1 55 1 68 1 301 1 5 1 278 1 207 1 126 1 157 1 229 1 209 2 354 1 58 1 79 1 185 1 373 1 82 1 331 2 39 1 83 1 164 3 62 2 12 1 85 1 136 2 87 3 192 2 
164 1 209 1 2 1 87 1 192 1 259 1 36 1 194 1 148 1 331 1 
209 1 316 1 8 1 233 1 36 1 148 1 331 2 246 1 29 1 164 2 2 1 152 1 192 1 87 2 259 2 194 1 369 1 381 1 
209 2 316 1 8 1 36 1 148 1 331 2 246 1 29 1 164 2 2 2 345 1 192 2 87 2 259 2 31 1 194 1 369 1 381 1 
134 1 345 1 358 1 31 1 168 1 
307 1 84 1 29 1 345 2 358 1 31 2 369 1 168 1 
345 1 358 1 31 1 
209 1 8 1 36 1 148 1 331 1 164 1 2 1 345 1 192 1 87 1 259 1 31 1 194 1 168 1 
29 1 
307 1 29 1 93 1 345 2 358 1 31 2 369 1 168 1 
208 1 66 1 358 2 252 1 97 2 225 1 330 1 366 1 307 1 284 1 29 1 125 2 298 1 345 5 86 1 174 2 31 5 369 1 168 2 
156 1 278 1 
209 1 264 1 331 2 164 2 2 1 87 2 192 1 299 1 278 2 
222 1 203 1 350 1 
126 1 157 1 229 1 354 1 58 1 260 1 261 1 162 1 82 1 164 1 1 1 12 1 136 1 87 1 278 1 207 1 
164 3 2 1 209 3 124 1 87 3 192 3 278 1 331 3 
164 1 209 1 87 1 192 1 259 1 36 1 331 1 
164 1 209 1 2 1 87 1 192 1 259 1 299 1 264 1 331 1 
122 1 209 2 316 1 124 1 264 1 331 2 246 1 164 2 2 1 192 2 87 2 259 1 176 1 117 1 381 1 
164 2 209 1 124 1 233 1 235 1 87 2 192 1 278 1 331 2 
209 1 316 1 124 1 331 1 246 1 28 1 164 1 192 1 87 1 259 1 176 1 117 1 381 1 
209 2 124 1 264 1 331 2 164 2 2 1 203 1 350 1 192 2 87 2 
126 1 229 1 157 1 354 1 58 1 260 1 261 1 82 1 164 1 1 1 12 1 136 1 87 1 278 1 207 1 
157 1 354 1 58 1 198 1 260 1 261 1 82 1 164 1 1 1 12 1 136 1 87 1 326 1 278 1 207 1 
140 1 222 2 23 2 146 2 99 1 227 1 172 1 321 1 3 2 274 1 203 2 55 1 350 2 351 1 301 1 158 1 160 1 185 1 253 1 39 1 62 4 85 1 88 1 139 1 
164 1 41 1 209 1 87 1 192 1 259 1 381 1 331 1 
126 1 157 1 229 1 354 1 209 1 58 1 124 1 260 1 261 1 82 1 331 1 1 1 164 2 12 1 136 1 203 1 192 1 87 2 176 1 207 1 
209 4 124 2 161 1 233 1 264 1 224 1 331 5 164 5 2 1 235 1 192 4 87 5 176 1 278 1 
41 1 164 2 209 2 87 2 192 2 259 1 36 1 331 2 
318 1 289 1 
318 1 289 1 
359 1 90 1 
359 1 90 1 
359 1 90 1 
318 1 282 1 289 1 
318 1 282 1 289 1 
318 1 380 1 289 1 
347 1 359 1 318 2 238 1 289 2 90 1 
318 1 282 1 289 1 
78 1 318 1 289 1 
78 1 318 1 289 1 
78 1 318 1 289 1 
314 3 318 2 149 2 112 2 378 1 29 1 343 2 114 1 345 2 347 1 335 1 43 1 286 1 205 2 324 1 31 2 89 2 64 1 289 2 
279 1 291 1 314 1 209 2 318 1 187 1 149 1 331 2 190 1 112 1 113 1 164 2 343 1 269 1 345 1 348 1 87 2 324 1 205 1 192 2 380 1 31 1 289 1 278 1 
304 1 103 1 69 1 
103 1 108 1 69 1 
195 1 304 2 47 1 92 1 103 3 108 1 
195 1 304 1 313 1 92 1 103 2 108 1 
195 2 304 1 92 1 103 2 108 1 
140 1 292 2 97 1 365 1 99 1 247 1 226 2 29 2 269 1 321 1 125 1 345 5 174 1 368 2 276 1 31 5 369 1 370 3 208 2 327 1 160 1 358 1 37 1 211 1 187 1 330 1 307 1 113 1 284 3 13 1 217 1 168 4 
140 3 141 1 24 1 97 2 341 1 99 3 27 1 226 6 29 5 321 3 125 2 345 9 174 2 368 6 276 3 31 9 369 1 370 9 208 6 327 2 160 3 358 6 60 5 37 1 187 4 330 1 307 1 361 1 284 8 134 5 215 1 86 1 13 2 217 3 168 7 
140 1 292 1 97 1 365 1 99 1 29 3 226 2 125 1 321 1 345 3 174 1 31 3 276 1 368 2 369 1 370 4 327 1 208 2 160 1 211 1 187 1 284 3 86 1 13 1 217 2 168 2 
140 2 292 2 24 1 97 1 365 1 99 2 27 1 29 4 226 4 125 1 321 2 345 4 174 1 368 4 31 4 276 2 369 1 370 7 327 1 208 4 160 2 211 1 187 2 361 1 284 5 86 1 13 1 217 3 168 3 
157 1 156 1 107 1 
157 1 374 1 
80 1 
157 1 207 1 
75 1 157 3 58 1 50 1 107 2 207 1 
157 1 58 1 207 1 
157 1 244 1 
44 1 140 1 183 1 59 2 281 1 23 4 200 1 146 3 111 1 227 2 321 1 332 1 62 7 191 1 65 1 139 3 337 1 
44 1 140 1 183 1 59 2 281 1 23 4 200 1 146 3 111 1 227 2 321 1 332 1 62 7 191 1 65 1 139 3 337 1 
44 1 140 1 183 1 59 2 281 1 23 4 200 1 146 3 111 1 227 2 321 1 332 1 62 7 191 1 352 1 65 1 139 3 337 1 
44 5 140 4 315 1 23 16 200 2 146 15 265 1 99 3 227 5 321 4 3 2 274 1 276 3 249 1 183 2 231 1 59 3 281 1 160 3 356 1 185 1 11 3 10 1 111 1 39 1 163 1 62 31 332 2 85 1 191 1 65 2 17 4 139 10 337 1 
44 1 140 1 23 5 200 1 146 4 227 3 321 1 3 4 274 2 32 1 183 1 59 2 185 2 281 1 10 1 111 1 39 2 62 9 332 1 85 2 236 1 65 1 139 4 337 1 
19 1 22 1 260 1 261 1 329 1 234 1 189 1 151 1 213 1 136 1 4 1 70 1 288 1 
371 1 19 1 22 1 250 1 260 1 261 1 329 1 213 2 271 1 136 1 4 1 70 2 288 1 336 1 
371 1 19 1 213 1 173 1 271 1 136 1 250 1 261 1 260 1 70 1 329 1 
339 1 19 2 22 1 260 1 261 1 329 2 150 1 308 1 213 1 12 1 136 1 70 1 288 1 336 1 
19 1 22 1 260 1 261 1 329 1 234 1 151 1 213 1 271 1 136 1 4 1 70 1 288 1 
206 1 
241 1 48 1 143 1 242 1 97 1 294 2 52 1 246 1 295 1 1 1 297 1 345 4 152 1 105 2 207 1 208 2 157 1 353 1 303 1 355 2 110 2 358 6 307 3 164 1 214 1 12 2 14 2 217 2 259 1 316 1 260 2 261 2 267 2 29 1 125 1 322 2 273 1 174 1 31 4 179 2 370 2 327 1 76 1 34 1 233 1 82 1 330 1 38 1 331 1 284 2 136 2 87 1 381 1 
353 1 303 1 76 1 316 1 93 1 358 2 233 1 38 1 331 1 246 1 307 1 297 1 164 1 345 2 152 1 87 1 259 1 31 2 381 1 179 1 
353 1 303 1 76 1 316 1 110 1 233 1 267 1 38 1 331 1 246 1 297 1 164 1 345 1 152 1 87 1 259 1 31 1 381 1 
316 1 93 1 246 1 267 1 297 1 152 1 345 2 31 2 179 1 303 1 353 1 76 1 355 1 358 2 110 1 233 1 331 1 38 1 307 1 164 1 87 1 259 1 381 1 
48 1 242 1 93 1 145 1 97 1 148 1 246 1 294 2 297 1 2 1 345 4 152 1 202 1 105 2 353 1 303 1 208 1 209 1 8 1 355 4 110 3 358 7 307 3 164 2 14 2 259 2 217 2 218 1 316 1 223 1 267 3 29 2 125 1 322 2 174 1 31 4 369 2 179 4 76 1 233 1 36 1 38 1 331 2 330 1 133 1 284 1 192 1 87 2 194 1 381 1 
48 1 316 1 242 1 97 1 267 2 294 2 246 1 29 2 297 1 125 1 322 2 152 1 345 3 174 1 105 2 31 3 369 1 179 2 370 2 303 1 353 1 208 1 76 1 355 2 110 2 358 4 233 1 38 1 330 1 331 1 307 2 164 1 284 1 214 1 14 2 87 1 217 2 259 1 381 1 
48 1 316 1 242 1 223 1 97 1 267 2 294 2 246 1 29 1 297 1 125 1 322 2 152 1 345 3 174 1 105 2 31 3 369 1 179 2 208 1 303 1 353 1 76 1 355 2 110 2 358 4 233 1 331 1 38 1 330 1 307 2 133 1 284 1 164 1 14 2 87 1 217 2 259 1 218 1 381 1 
48 1 316 1 242 1 223 1 97 1 267 2 294 2 246 1 29 1 297 1 125 1 322 2 152 1 345 3 174 1 105 2 31 3 369 1 179 2 208 1 303 1 353 1 76 1 355 2 110 2 358 4 233 1 331 1 38 1 330 1 307 2 133 1 284 1 164 1 14 2 87 1 217 2 259 1 218 1 381 1 
48 1 316 1 25 2 97 1 267 2 246 1 29 1 297 1 125 1 322 2 152 1 345 3 349 2 174 1 204 1 105 2 31 3 369 1 179 2 370 2 208 1 303 1 353 1 76 1 355 2 110 2 358 4 233 1 331 1 38 1 330 1 307 2 284 1 164 1 87 1 259 1 63 1 218 1 381 1 219 1 
48 1 242 1 316 1 97 1 223 1 294 2 246 1 267 3 29 1 297 1 125 1 322 2 152 1 345 3 202 1 174 1 105 2 31 3 369 1 179 3 208 1 303 1 353 1 76 1 355 3 358 5 110 3 233 1 330 1 331 1 38 1 307 2 133 1 284 1 164 1 14 2 87 1 217 2 259 1 218 1 381 1 
48 1 242 1 316 1 97 1 223 1 294 2 246 1 267 3 29 1 297 1 125 1 322 2 152 1 345 3 202 1 174 1 105 2 31 3 369 1 179 3 208 1 303 1 353 1 76 1 355 3 358 5 110 3 233 1 330 1 331 1 38 1 307 2 133 1 284 1 164 1 14 2 87 1 217 2 259 1 218 1 381 1 
48 1 316 1 25 2 97 1 267 2 246 1 29 1 297 1 125 1 322 2 152 1 345 3 349 2 174 1 105 2 31 3 369 1 179 2 370 2 303 1 353 1 208 1 76 1 355 2 110 2 358 4 233 1 38 1 330 1 331 1 307 2 164 1 284 1 214 1 87 1 259 1 63 1 381 1 
140 1 222 1 23 3 200 1 146 3 227 2 321 1 3 2 203 1 274 1 350 1 55 1 301 1 156 1 278 2 158 1 183 1 59 1 281 1 185 1 111 1 39 1 62 6 85 1 139 2 337 1 
44 1 222 11 140 1 315 1 123 1 23 8 146 6 99 2 227 1 321 2 102 1 3 4 274 2 203 11 55 1 350 4 276 2 301 2 278 1 230 1 231 1 185 2 160 1 254 1 11 3 39 2 83 1 62 14 85 2 285 1 16 1 139 2 17 3 
46 1 123 1 261 1 260 1 124 1 23 1 146 1 1 1 3 2 274 1 350 1 55 1 176 1 301 1 278 1 207 1 126 1 157 1 229 1 354 1 209 1 58 1 185 1 162 1 35 1 82 1 331 1 39 1 83 1 164 2 62 2 12 1 85 1 136 1 285 1 87 2 192 1 166 1 
44 4 140 3 142 2 243 1 200 1 146 10 99 2 1 2 3 6 203 7 55 3 350 7 301 3 207 2 157 2 209 1 354 2 58 2 59 1 160 2 111 1 164 3 62 20 12 1 258 1 312 1 120 2 222 7 123 1 261 3 260 3 124 1 23 10 227 4 321 3 271 1 274 3 68 2 176 1 276 2 278 2 126 2 229 2 183 1 281 1 185 3 372 2 82 2 331 1 39 3 83 1 85 3 135 2 136 3 285 1 192 1 87 3 139 8 337 1 
338 1 241 1 123 1 124 1 261 8 260 7 23 1 146 1 98 1 295 1 1 2 271 1 3 4 274 2 55 2 325 1 301 2 5 2 207 2 157 3 158 1 209 1 185 2 251 1 186 1 360 1 82 2 189 1 331 1 39 2 83 1 164 1 62 2 12 2 85 2 136 8 137 1 87 1 192 1 
222 1 140 1 23 1 264 1 146 2 99 1 342 1 227 1 2 1 321 1 3 2 203 1 274 1 350 1 55 1 276 1 301 1 209 1 185 1 160 1 331 1 39 1 164 1 62 3 85 1 285 1 192 1 87 1 139 1 
44 1 222 1 158 1 185 1 23 2 253 1 99 1 39 1 62 2 321 1 85 1 3 2 203 1 274 1 350 1 55 1 301 1 139 1 
222 1 140 1 158 1 185 1 160 1 146 2 39 1 227 1 62 2 85 1 3 2 203 1 274 1 350 1 55 1 88 1 301 1 139 1 
44 1 222 2 140 1 23 2 146 2 99 1 227 1 321 1 3 2 274 1 203 2 55 1 350 2 276 1 301 1 158 1 185 1 160 1 39 1 62 4 85 1 139 2 
44 1 222 1 185 1 23 2 253 1 99 1 39 1 62 2 321 1 85 1 3 2 203 1 274 1 350 1 55 1 325 1 301 1 139 1 
222 1 140 1 185 1 160 1 146 2 39 1 227 1 62 2 85 1 3 2 203 1 274 1 350 1 55 1 325 1 88 1 301 1 139 1 
44 1 140 1 222 2 160 1 185 1 23 2 146 2 99 1 39 1 227 1 62 4 321 1 85 1 3 2 203 2 274 1 350 2 55 1 325 1 276 1 301 1 139 2 
44 1 140 1 222 2 160 1 185 1 23 2 146 2 99 1 39 1 227 1 321 1 62 4 85 1 3 2 203 2 274 1 350 2 55 1 276 1 301 1 139 2 
123 1 261 1 260 1 23 1 146 1 1 1 3 2 274 1 68 1 55 1 301 1 278 1 207 1 126 1 229 1 157 1 354 1 58 1 185 1 82 1 39 1 83 1 164 1 62 2 12 1 85 1 136 1 87 1 
123 1 198 1 261 1 260 1 23 1 245 1 146 1 1 1 3 2 274 1 55 1 326 1 301 1 278 1 207 1 157 1 354 1 58 1 185 1 82 1 39 1 83 1 164 1 62 2 12 1 85 1 136 1 87 1 
44 1 140 1 222 2 160 1 185 1 23 2 146 2 99 1 39 1 227 1 62 4 321 1 85 1 285 1 3 2 203 2 274 1 350 2 55 1 276 1 301 1 139 2 
44 1 140 1 222 2 142 1 261 1 260 1 23 2 146 2 99 1 227 1 1 1 321 1 3 2 203 2 274 1 350 2 68 1 55 1 276 1 301 1 207 1 126 1 229 1 157 1 354 1 58 1 160 1 185 1 82 1 189 1 39 1 164 1 62 4 85 1 136 1 87 1 139 2 
44 1 140 1 222 1 23 2 264 1 146 1 99 1 2 1 321 1 3 2 274 1 203 1 55 1 350 1 276 1 301 1 209 1 160 1 185 1 331 1 39 1 164 1 62 3 85 1 285 1 287 1 192 1 87 1 139 1 
121 1 44 4 221 2 140 5 315 3 23 20 364 1 200 1 199 1 263 1 146 21 99 4 227 4 321 5 3 6 274 3 104 1 153 1 276 4 74 1 6 1 182 1 183 1 59 1 231 1 281 1 185 3 160 4 10 1 11 3 283 1 111 1 376 4 39 3 212 1 62 41 333 1 257 1 85 3 236 1 17 4 139 8 337 1 
121 1 44 3 221 2 140 4 315 3 23 20 364 1 200 1 199 1 263 1 146 18 99 4 227 4 321 5 3 8 274 4 104 1 153 1 276 4 74 1 6 1 182 1 183 1 59 1 231 1 281 1 185 4 160 3 10 2 11 3 283 1 111 1 376 4 39 4 212 1 62 38 333 1 257 1 85 4 236 1 17 4 139 7 337 1 
121 1 44 7 221 1 140 8 315 2 23 27 364 1 200 1 199 1 263 1 146 25 99 7 227 7 321 8 102 2 3 4 274 2 104 1 153 1 276 7 74 1 6 1 182 1 183 1 59 1 231 2 281 1 185 2 160 7 10 1 11 4 283 1 111 1 376 4 39 2 62 52 257 1 85 2 236 1 17 4 139 14 337 1 
44 3 221 1 140 3 315 1 23 9 364 1 146 10 99 3 227 3 321 3 3 4 274 2 104 1 153 1 276 3 57 1 182 1 231 1 185 2 160 3 11 1 283 2 376 2 39 2 62 19 333 1 85 2 236 1 17 2 139 6 
44 2 121 1 140 2 221 2 315 2 23 14 364 1 199 1 263 1 146 12 99 3 227 2 321 3 3 6 274 3 104 1 153 2 276 3 74 1 6 1 182 1 185 3 160 2 10 2 11 2 283 1 376 4 39 3 62 26 257 1 85 3 236 1 139 4 17 2 
112 1 343 1 347 1 335 1 286 1 318 1 205 1 289 1 149 1 220 1 
279 1 380 1 
112 1 343 1 184 1 318 1 205 1 275 1 289 1 106 1 149 1 
314 2 318 1 149 1 112 1 378 1 29 1 343 1 114 1 345 1 347 1 335 1 286 1 324 1 205 1 31 1 89 1 64 1 289 1 
314 2 318 1 149 1 112 1 378 1 29 1 343 1 114 1 345 1 347 1 335 1 286 1 324 1 205 1 31 1 89 1 64 1 289 1 
314 2 318 1 149 1 112 1 378 1 29 1 343 1 114 1 345 1 347 1 335 1 286 1 324 1 205 1 31 1 89 1 64 1 289 1 
177 1 238 1 282 1 
177 1 238 1 282 1 
78 1 334 1 
78 1 334 1 238 1 
190 1 291 1 
314 1 291 1 318 1 149 1 343 1 269 1 345 1 348 1 205 1 31 1 178 1 278 1 279 1 209 2 187 1 331 2 112 1 190 1 113 1 164 2 114 1 87 2 192 2 380 1 89 1 289 1 168 1 
177 1 282 1 
78 1 334 1 238 1 
123 1 261 2 260 2 23 1 146 1 266 1 1 1 201 1 3 2 274 1 55 1 155 1 301 1 5 2 207 1 157 1 185 1 251 1 360 1 306 1 82 1 331 2 39 1 83 1 164 2 62 2 85 1 136 2 285 1 379 1 87 2 
304 1 47 1 49 1 210 1 108 1 260 2 261 2 144 1 130 1 82 1 189 1 268 1 1 1 270 1 271 1 136 2 103 2 69 1 363 1 
304 1 47 1 108 1 260 1 261 1 144 1 130 1 82 1 268 1 1 1 270 1 271 1 136 1 103 2 69 1 363 1 180 1 
157 1 241 1 49 1 260 1 261 1 144 1 340 1 82 1 295 1 1 1 12 1 136 1 175 1 207 1 
304 1 47 1 49 1 210 1 108 1 260 1 261 1 144 1 130 1 82 1 268 1 1 1 270 1 271 1 136 1 103 2 69 1 363 1 
377 1 
366 1 208 1 284 1 29 1 66 1 369 1 156 1 
242 1 97 1 294 1 29 2 125 1 345 1 174 1 31 1 369 1 370 1 208 1 358 1 330 1 307 1 284 1 14 1 217 1 
196 2 140 2 143 1 94 2 50 1 97 4 244 2 51 1 99 2 54 1 100 1 1 3 345 5 207 3 107 2 157 10 7 2 208 8 58 3 305 2 160 2 358 5 9 1 307 3 12 1 310 2 165 2 217 6 119 2 66 1 67 1 260 3 261 3 366 1 226 6 29 8 125 4 321 2 174 4 71 2 31 5 368 6 276 2 72 2 369 2 370 12 327 2 374 3 82 4 189 1 330 4 284 9 135 2 136 3 
121 1 140 2 315 1 143 1 94 1 199 1 263 1 97 2 99 2 228 1 226 5 29 5 125 2 321 2 345 1 272 1 174 2 31 1 368 5 276 2 74 1 369 2 370 6 327 1 208 5 305 2 160 2 358 1 11 1 330 2 307 1 284 8 257 1 217 3 17 1 
140 1 94 1 200 1 97 1 223 1 148 1 125 1 321 2 2 1 345 1 174 1 31 1 208 2 209 1 183 1 305 2 8 1 129 1 36 1 330 1 331 1 164 1 284 2 87 1 192 1 259 1 194 1 337 1 
208 1 66 1 97 1 330 1 366 1 29 1 284 1 125 1 174 1 369 1 
370 10 208 5 140 2 305 2 160 2 94 1 99 2 226 5 29 5 284 5 321 2 135 1 276 2 368 5 217 5 
307 1 29 1 345 1 358 1 31 1 369 1 
20 1 241 1 169 1 143 2 261 4 260 4 97 2 52 1 54 1 295 1 1 1 125 2 345 3 174 2 31 3 207 1 157 1 327 2 208 2 34 1 358 4 9 2 82 1 330 1 307 2 284 2 12 2 136 4 86 1 
261 1 260 1 146 1 148 1 1 1 2 2 3 2 274 1 68 1 55 1 301 1 278 1 207 1 126 1 229 1 157 1 209 2 354 1 79 1 58 1 185 1 82 1 331 2 39 1 83 1 164 3 62 1 12 1 85 1 136 1 87 3 192 2 
370 4 208 2 327 1 143 1 59 1 97 1 330 1 226 2 284 1 29 4 125 1 174 1 368 2 217 2 369 2 
112 1 171 1 343 1 
112 1 171 1 343 1 
112 1 343 1 291 1 286 1 26 1 
112 1 171 1 343 1 
112 1 343 1 33 1 
112 1 343 1 33 1 
112 1 343 1 33 1 
112 1 343 1 
318 1 289 1 
121 1 140 1 315 1 23 4 200 1 146 4 227 2 321 1 3 2 274 1 183 1 59 1 185 1 281 1 11 1 111 1 39 1 62 8 85 1 236 1 17 1 139 2 337 1 
121 1 44 1 140 1 315 1 23 6 200 1 146 5 99 1 227 2 321 2 3 4 274 2 276 1 183 1 59 1 231 1 281 1 185 2 357 1 11 1 111 1 39 2 62 11 85 2 236 1 17 2 139 3 337 1 
44 1 121 1 140 3 315 1 23 9 200 1 263 1 199 1 146 10 99 2 227 3 321 3 3 6 274 3 276 2 74 1 183 1 59 1 281 1 185 3 160 2 357 1 11 1 10 1 111 1 39 3 62 19 257 1 85 3 236 1 17 1 139 4 337 1 
44 2 121 1 140 2 315 1 23 10 200 1 263 1 199 1 146 7 99 2 227 3 321 3 3 6 274 3 276 2 74 1 183 1 59 1 281 1 185 3 160 1 357 1 10 1 11 1 111 1 39 3 62 17 85 3 257 1 236 1 17 1 139 5 337 1 
121 1 140 1 315 1 23 4 200 1 146 4 227 2 321 1 3 2 274 1 183 1 59 1 185 1 281 1 11 1 111 1 39 1 62 8 85 1 236 1 17 1 139 2 337 1 
44 1 121 1 140 2 315 1 23 6 263 1 199 1 146 6 99 2 227 1 321 2 3 2 274 1 276 2 74 1 185 1 160 2 11 1 39 1 62 12 85 1 257 1 236 1 17 1 139 2 
44 2 121 1 140 2 315 1 23 10 200 1 199 1 263 1 146 8 99 2 227 3 321 3 3 8 274 4 276 2 74 1 183 1 59 1 281 1 185 4 160 1 357 1 11 1 10 2 111 1 39 4 62 18 257 1 85 4 236 1 17 1 139 5 337 1 
44 3 121 1 140 2 315 1 23 9 199 1 263 1 146 7 99 3 227 3 321 3 3 8 274 4 276 3 74 1 185 4 160 2 11 1 10 2 39 4 62 16 333 1 257 1 85 4 236 1 17 1 139 6 
44 3 140 1 183 3 281 2 23 3 200 3 146 4 111 1 227 3 62 7 321 1 139 6 337 1 
44 1 121 1 140 2 315 1 23 10 200 1 199 1 263 1 146 8 99 2 227 3 321 3 3 8 274 4 276 2 74 1 183 1 59 1 281 1 185 4 160 1 11 1 10 2 111 1 39 4 62 18 333 1 257 1 85 4 236 1 17 1 139 4 337 1 
44 1 140 1 183 1 59 1 185 2 281 1 23 4 200 1 146 4 10 1 111 1 39 2 227 2 321 1 62 8 85 2 3 4 274 2 139 3 337 1 
140 1 227 2 62 6 321 1 183 1 59 1 281 1 23 3 200 1 146 3 156 1 139 2 111 1 337 1 
44 1 140 1 160 1 185 1 357 1 23 2 146 2 99 1 39 1 227 1 321 1 62 4 85 1 3 2 274 1 276 1 139 2 
44 1 140 1 315 1 231 1 160 1 23 3 146 4 11 1 99 1 227 1 62 7 321 1 276 1 17 2 139 2 
44 4 140 3 23 11 200 2 146 12 99 2 227 5 296 1 321 3 102 1 3 4 274 2 276 2 183 2 59 1 231 1 281 1 160 2 185 2 254 1 11 2 10 2 111 1 39 2 62 23 85 2 139 9 17 2 337 1 
62 1 146 1 17 1 
62 1 23 1 11 1 
44 1 140 1 185 1 160 1 357 1 23 3 146 3 99 1 39 1 227 2 62 6 321 1 85 1 135 1 3 2 274 1 276 1 139 3 
44 1 121 1 140 2 315 1 23 6 263 1 199 1 146 6 99 2 227 1 321 2 3 2 274 1 276 2 74 1 185 1 160 2 11 1 39 1 62 12 85 1 257 1 236 1 17 1 139 2 
44 1 140 1 183 1 23 3 200 1 146 3 227 1 321 1 62 6 139 2 337 1 
44 1 183 1 281 1 185 1 23 1 200 1 146 2 10 1 111 1 39 1 227 1 296 1 62 3 85 1 3 2 274 1 139 2 
44 2 140 2 183 2 185 1 23 5 129 1 200 2 146 5 39 1 227 3 62 10 321 2 85 1 3 2 274 1 236 1 139 5 337 1 
44 1 185 1 23 2 99 1 39 1 321 1 62 2 85 1 3 2 274 1 236 1 139 1 
44 1 140 1 160 1 185 1 23 2 146 2 99 1 39 1 227 1 321 1 62 4 85 1 3 2 274 1 236 1 276 1 139 2 
44 1 183 1 185 3 23 1 200 1 146 2 10 1 39 3 296 1 227 1 62 3 333 1 85 3 3 6 274 3 236 1 139 2 
44 5 140 5 315 1 23 16 200 3 146 18 265 1 99 3 296 1 227 7 321 5 3 10 274 5 276 3 183 3 59 1 231 1 281 1 356 1 185 5 160 3 357 1 10 2 11 3 111 1 39 5 163 1 62 34 333 1 85 5 236 1 17 4 139 12 337 2 
164 1 87 1 233 1 235 1 81 1 278 1 331 1 
77 1 328 1 233 1 319 1 81 1 331 1 164 1 30 1 101 1 235 1 87 1 278 1 
295 1 157 1 1 1 241 1 12 1 136 1 261 1 260 1 82 1 156 1 207 1 
126 1 157 1 354 1 209 1 58 1 124 1 260 1 261 1 82 1 331 1 164 2 1 1 12 1 136 1 192 1 87 2 278 1 207 1 
316 1 261 1 260 1 124 1 244 1 1 1 278 1 207 2 126 1 157 3 7 1 209 1 354 1 58 2 9 1 82 1 331 2 164 2 136 1 87 2 192 2 259 1 381 1 
316 1 198 1 261 2 260 2 124 1 244 1 1 1 278 1 207 2 157 3 7 1 209 1 354 1 58 2 9 1 82 1 331 2 164 2 216 1 136 2 87 2 192 2 259 1 381 1 
317 1 261 3 260 3 244 1 1 1 344 1 29 1 345 2 31 2 72 1 369 1 107 1 207 1 157 4 7 1 58 1 358 1 9 1 374 1 82 1 12 1 216 1 136 3 
196 1 7 1 157 4 58 1 260 3 261 3 358 1 244 1 9 1 82 1 374 1 29 1 1 1 12 1 345 2 216 1 136 3 31 2 72 1 369 1 207 1 107 1 
1 1 136 1 261 1 260 1 82 1 98 1 
338 1 157 3 58 1 0 1 260 6 261 7 186 1 50 1 360 1 98 1 82 3 189 1 40 1 1 2 12 2 271 1 346 1 136 7 137 1 5 1 207 2 
140 1 142 1 200 1 146 3 201 1 1 1 3 4 203 1 350 1 55 2 301 2 207 1 157 1 209 1 354 1 58 1 59 1 111 1 164 2 62 6 222 1 261 1 260 1 124 1 23 3 227 2 321 1 274 2 68 1 278 2 126 1 229 1 183 1 185 2 281 1 372 1 82 1 189 1 331 1 39 2 85 2 136 1 285 1 192 1 87 2 139 2 337 1 
196 1 66 1 261 1 260 1 97 2 366 1 54 1 29 1 125 2 345 3 174 2 31 3 72 1 369 1 107 1 208 1 157 2 358 2 374 1 330 2 307 1 284 1 12 1 136 1 310 1 165 1 168 1 119 1 
157 2 58 1 260 2 261 2 50 1 98 1 51 1 82 2 189 1 1 1 136 2 107 1 207 1 
157 1 241 1 260 4 261 4 131 1 82 1 189 1 295 1 1 1 12 1 216 1 136 4 207 1 
157 1 58 1 170 1 0 1 260 2 261 2 9 1 82 2 40 1 1 1 136 2 115 1 312 1 207 1 
1 1 12 1 136 1 103 1 108 1 261 1 260 1 69 1 130 1 82 1 
157 1 1 1 271 1 136 2 261 2 260 2 360 1 306 1 82 1 207 1 189 1 
157 3 338 1 241 1 260 4 261 5 186 1 131 1 9 1 360 1 82 2 189 1 295 1 1 2 12 1 136 5 207 2 
157 3 338 1 241 1 260 4 261 5 131 1 9 1 360 1 82 2 189 1 295 1 1 2 12 1 136 5 116 1 207 2 
157 1 354 1 209 1 58 1 198 1 124 1 260 1 261 1 82 1 331 1 164 2 1 1 12 1 136 1 192 1 87 2 278 1 207 1 
157 1 58 1 0 1 260 1 261 1 50 1 9 1 82 2 40 1 1 1 346 1 136 1 207 1 
232 1 266 1 331 1 164 1 379 1 193 1 87 1 155 1 239 1 
240 1 193 1 138 1 
256 1 232 1 193 1 239 1 278 1 
240 1 290 1 316 1 148 1 246 1 29 1 2 1 345 1 31 1 369 1 209 1 232 1 8 1 36 1 331 1 164 1 256 1 87 1 192 1 193 1 138 1 259 2 194 1 117 1 239 1 168 1 381 1 
128 1 262 1 15 1 156 1 
213 1 22 1 128 1 262 1 70 1 15 1 288 1 
309 1 70 1 329 1 
181 2 22 1 128 1 262 1 375 1 151 1 213 3 70 3 56 1 154 1 15 1 288 1 
371 1 45 1 213 2 22 1 128 1 262 1 70 2 15 1 288 1 
304 1 151 1 213 1 22 1 103 1 69 1 128 1 70 1 61 1 302 1 288 1 
151 1 213 1 22 1 128 1 262 1 70 1 288 1 
151 1 213 1 22 1 262 2 70 1 15 1 288 1 
21 1 22 2 128 1 262 1 95 1 132 1 151 1 213 2 70 2 288 2 
371 2 127 1 22 1 109 1 262 1 128 2 61 1 151 1 213 3 362 1 70 3 15 1 288 1 
304 1 371 1 47 1 22 1 108 1 128 1 262 1 151 1 213 2 367 1 103 2 69 1 70 2 15 1 288 1 
45 1 371 2 22 2 159 1 262 1 128 2 61 1 151 1 213 4 362 1 70 4 15 1 288 2 
151 1 213 1 22 1 128 1 262 1 70 1 15 1 288 1 
181 1 371 2 22 1 262 2 128 3 61 1 213 4 362 1 248 1 70 4 154 1 56 1 15 2 288 1 
18 1 371 1 22 1 280 1 128 1 262 1 188 1 151 1 213 2 70 2 15 1 288 1 
181 2 22 1 128 1 262 1 147 1 151 1 213 3 70 3 56 1 154 2 15 1 288 1 
128 2 73 2 167 1 118 1 
151 1 213 1 91 1 22 1 70 1 288 1 
371 1 151 1 213 2 22 1 109 1 128 1 262 1 70 2 15 1 288 1 
255 1 
151 1 213 1 22 1 128 1 262 1 70 1 15 1 288 1 
181 1 371 1 151 1 213 3 22 1 109 1 128 1 262 1 70 3 15 1 288 1 
362 1 248 1 128 1 61 1 
128 1 262 1 

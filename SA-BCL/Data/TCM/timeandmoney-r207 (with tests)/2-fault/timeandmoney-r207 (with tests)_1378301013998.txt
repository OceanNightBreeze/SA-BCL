#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 3683 | 1 -> 0
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2309 | if (x) -> if (!x)
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 2 335 1 322 1 292 1 116 1 161 3 326 1 300 1 34 1 38 1 95 2 346 3 369 2 
98 2 335 1 270 2 292 3 56 1 300 1 34 1 363 1 274 1 38 1 133 1 346 9 369 5 322 4 175 1 231 1 161 9 116 1 139 1 326 7 215 1 353 1 144 1 95 2 
98 2 335 1 270 2 292 3 56 1 300 1 34 1 363 1 274 1 38 1 133 1 346 9 369 5 322 4 175 1 231 1 161 9 116 1 139 1 326 7 215 1 353 1 144 1 95 2 
98 2 335 1 270 2 292 3 341 1 56 1 107 1 300 1 34 1 363 2 38 2 133 1 11 1 346 9 369 5 87 1 322 4 231 2 161 9 116 1 139 2 326 6 374 1 215 1 353 1 144 1 379 1 95 2 
98 2 335 1 270 2 292 3 341 1 56 1 107 1 300 1 34 1 363 2 38 2 133 1 11 1 346 9 369 5 87 1 322 4 231 2 161 9 116 1 139 2 326 6 374 1 215 1 353 1 144 1 379 1 95 2 
98 2 335 1 270 2 292 4 341 1 56 1 107 1 300 1 34 1 363 2 38 2 133 1 11 1 346 10 369 6 87 1 322 5 231 2 161 10 116 1 139 2 326 7 374 1 215 1 353 1 144 1 379 1 95 2 
98 2 335 1 270 1 292 2 341 1 56 1 107 1 300 1 34 1 363 2 38 2 11 1 346 7 369 4 87 1 322 3 231 2 161 7 116 1 139 2 326 4 374 1 215 1 353 1 144 1 379 1 95 2 
98 1 322 2 231 1 270 2 292 1 116 1 161 4 139 1 326 3 300 1 34 1 363 1 215 1 144 1 133 1 95 1 346 4 369 3 
98 1 320 1 100 1 231 1 116 1 161 2 341 1 139 1 361 1 374 1 300 1 34 1 38 1 95 1 369 1 346 2 
127 1 15 1 79 1 281 1 183 1 163 1 70 1 301 1 122 1 40 1 354 1 152 1 41 1 166 1 
247 1 
64 1 247 1 127 1 15 2 79 1 281 1 183 1 329 1 163 1 70 1 301 1 122 1 354 1 40 1 152 1 145 1 112 1 41 1 166 2 
287 1 336 1 64 1 0 1 247 1 46 1 15 5 281 2 181 2 182 2 235 1 173 1 329 1 20 1 39 1 194 2 112 2 302 1 166 5 
64 1 247 1 315 1 
269 1 221 1 196 1 248 1 127 2 197 1 170 1 79 3 199 1 80 1 301 2 40 2 367 2 41 2 44 1 209 1 305 1 349 1 136 1 16 1 49 1 140 1 164 2 331 1 70 1 71 1 352 1 121 1 378 1 50 1 123 1 355 2 354 3 333 1 285 2 284 1 286 2 
163 1 70 1 301 1 127 1 122 1 354 1 40 1 152 1 79 1 41 1 
62 1 64 1 247 1 127 1 313 1 15 1 79 1 358 1 216 1 122 1 332 1 354 1 60 1 166 1 
62 1 64 1 247 1 127 1 313 1 15 2 79 1 358 1 301 1 216 1 122 1 40 1 354 1 41 1 166 2 
206 1 112 1 15 1 166 1 281 1 
329 1 64 1 247 1 316 1 112 1 15 2 166 2 281 1 
112 1 15 1 166 1 
247 1 82 2 253 1 
70 1 301 2 127 2 354 2 40 2 197 1 79 2 41 2 
304 1 127 2 197 2 79 2 301 1 354 2 40 1 41 1 153 1 
364 1 104 1 4 1 
44 1 209 1 248 1 349 1 296 1 197 1 170 1 79 1 164 1 331 1 71 1 354 1 367 1 333 1 285 1 284 1 
315 1 197 1 
244 1 44 1 209 1 248 1 127 1 349 1 170 1 4 1 79 2 331 1 164 1 71 1 40 1 354 2 84 1 367 1 41 1 333 1 285 1 284 1 
244 1 301 1 127 3 354 3 40 3 197 1 79 3 41 3 
127 1 122 1 354 1 40 1 152 1 79 1 41 1 
304 1 301 1 127 1 122 1 354 1 40 1 79 1 41 1 153 1 
244 1 269 1 248 1 127 3 313 1 197 1 170 1 79 4 358 1 80 1 301 2 58 1 40 3 84 1 367 1 41 3 154 1 153 1 62 1 44 1 209 1 305 1 349 1 136 1 15 1 16 1 49 1 140 1 331 1 164 1 71 1 70 1 352 1 216 1 378 1 122 1 50 1 355 1 354 4 333 1 284 1 285 1 286 2 166 1 
244 1 127 2 332 1 168 1 354 2 40 1 197 1 79 2 41 1 
244 2 62 1 247 1 127 3 313 1 15 1 224 1 79 3 358 1 301 1 216 1 58 1 122 1 40 3 354 3 84 1 41 3 153 1 166 1 
244 1 301 1 127 2 104 1 354 2 40 2 4 1 79 2 41 2 153 1 
44 1 209 1 248 1 349 1 197 1 170 1 79 1 164 1 331 1 71 1 354 1 367 1 333 1 285 1 284 1 
276 1 44 1 209 1 248 1 197 1 3 1 170 1 79 1 164 1 331 1 71 1 354 1 367 1 333 1 285 1 
27 1 220 1 269 2 245 1 146 1 30 1 104 2 4 2 359 1 80 1 362 1 364 2 9 1 277 1 305 1 65 1 16 1 49 1 140 1 238 1 121 2 50 1 355 4 286 2 
62 1 127 1 122 1 94 1 354 1 40 1 79 1 41 1 
244 2 127 5 168 1 197 1 79 5 7 1 301 1 332 1 40 4 354 5 84 1 41 4 368 1 153 1 
127 2 122 1 94 1 354 2 40 2 152 1 79 2 41 2 
134 1 162 1 272 1 
106 1 232 1 263 1 162 2 272 2 219 1 
162 1 272 1 
162 1 272 1 
263 1 219 1 
263 1 219 1 
263 1 219 1 
190 1 162 1 272 1 
190 1 162 1 272 1 
190 1 162 1 272 1 
295 1 162 1 272 1 
295 1 162 1 272 1 
295 1 162 1 272 1 
290 1 127 2 76 1 197 1 272 1 79 2 110 1 40 2 41 2 318 1 135 1 323 1 208 1 134 1 162 1 15 1 328 1 375 1 376 1 217 1 354 2 51 1 73 1 166 1 
229 1 247 1 290 2 135 3 232 1 162 2 272 2 15 2 328 2 149 2 376 2 343 1 283 1 110 1 311 1 256 1 155 1 318 2 166 2 
250 1 320 1 231 2 363 1 141 2 
231 1 363 1 139 1 
320 1 231 1 139 1 
250 1 320 1 231 3 363 2 141 1 137 1 
250 1 320 1 231 2 363 1 141 1 278 1 
243 2 27 1 245 1 29 2 146 1 247 2 0 3 30 1 148 1 169 1 33 1 273 1 82 3 253 1 10 2 112 1 302 1 64 1 208 1 323 1 233 1 15 5 182 1 181 1 281 4 329 1 186 1 20 2 217 1 194 1 25 1 166 5 
287 1 27 3 245 3 29 6 146 3 247 5 0 8 30 3 148 2 105 1 33 1 227 1 82 9 253 3 10 6 112 6 131 1 319 1 302 1 206 5 12 1 64 1 323 4 233 3 15 9 325 5 281 7 181 2 182 2 329 1 186 2 143 1 20 6 194 2 166 9 
287 1 243 1 27 1 245 1 29 2 146 1 247 3 0 3 30 1 148 1 169 1 273 1 82 4 253 2 10 2 64 1 323 1 233 1 15 3 281 2 182 1 181 1 186 1 20 2 194 1 166 3 
287 1 243 2 27 2 245 2 29 4 146 2 247 4 0 5 30 2 148 1 169 1 105 1 273 1 82 7 253 3 10 4 319 1 64 1 12 1 323 2 233 2 15 4 182 1 181 1 281 3 186 1 20 4 194 1 166 4 
267 1 
35 1 209 1 315 1 
209 1 248 1 
101 1 35 2 44 1 209 3 248 1 210 1 
209 1 128 1 
44 1 209 1 248 1 
205 1 209 1 
52 1 27 1 220 3 269 3 245 1 222 1 289 2 177 1 337 1 234 1 308 1 362 2 185 1 342 1 344 1 121 4 355 7 59 1 
52 1 27 4 220 10 269 15 222 1 124 4 289 3 245 4 1 1 146 3 291 1 337 2 30 3 198 1 80 1 362 5 201 1 342 2 344 5 37 1 42 3 177 1 305 1 233 3 67 1 179 1 16 1 234 2 308 2 185 1 121 16 50 1 355 31 286 2 
52 1 27 1 220 4 269 4 245 1 289 2 222 1 337 1 198 1 80 2 362 3 342 1 344 1 111 1 262 1 177 1 305 2 16 2 234 1 308 1 121 5 50 2 355 9 286 4 
52 1 27 1 220 3 269 3 245 1 222 1 289 2 177 1 337 1 234 1 308 1 362 2 185 1 342 1 344 1 121 4 355 7 
52 1 27 1 220 3 269 3 245 1 222 1 289 2 177 1 337 1 234 1 308 1 362 2 185 1 342 1 344 1 121 4 355 7 
259 1 98 1 53 2 209 1 248 1 348 1 294 2 161 1 31 1 373 1 213 2 331 1 164 1 71 1 191 1 38 2 367 1 312 1 333 1 24 1 95 1 285 1 346 1 
98 1 53 1 75 1 294 1 81 1 225 1 363 1 38 1 367 1 346 1 320 1 231 2 45 1 161 1 116 1 66 1 137 1 139 1 213 1 164 1 331 1 18 1 71 1 19 1 285 1 95 1 
98 1 53 1 75 1 294 1 81 1 300 1 34 1 363 1 38 1 367 1 369 1 346 2 320 1 231 2 45 1 161 2 116 1 66 1 137 1 139 1 326 1 213 1 164 1 331 1 18 1 71 1 19 1 334 1 285 1 95 1 
98 1 53 1 75 1 294 1 225 1 300 1 34 1 363 1 38 1 367 1 369 1 346 3 320 1 231 2 45 1 161 3 66 1 137 1 139 1 326 2 213 1 330 1 164 1 331 1 18 1 71 1 19 1 312 1 285 1 95 1 
53 1 75 1 294 1 225 1 300 1 34 1 363 1 38 1 367 1 369 1 346 2 320 1 231 2 161 2 66 1 137 1 139 1 326 2 213 1 330 1 164 1 331 1 18 1 71 1 285 1 
126 1 
246 1 247 1 0 1 297 1 200 5 253 2 112 5 151 1 60 1 302 1 61 1 62 1 63 1 64 1 15 4 211 2 17 2 216 1 20 1 122 1 354 1 218 3 26 3 166 4 127 1 271 2 313 1 79 1 358 1 226 3 83 1 279 1 371 1 48 1 181 1 182 1 327 1 329 2 332 1 194 1 241 1 97 2 
246 1 247 1 0 1 127 1 271 2 313 1 79 1 297 1 358 1 200 5 226 3 253 2 83 1 151 1 112 5 60 1 302 1 61 1 62 1 64 1 63 1 279 1 48 1 371 1 15 4 211 2 182 1 181 1 327 1 329 2 17 2 216 1 20 1 122 1 354 1 332 1 194 1 241 1 218 3 97 2 166 4 26 3 
0 1 247 1 200 4 202 1 112 4 60 1 302 1 61 1 157 2 62 1 63 1 261 1 64 1 15 4 216 1 20 1 122 1 354 1 218 2 166 4 26 2 127 1 271 2 313 1 79 1 358 1 226 2 82 2 83 1 279 1 371 1 181 1 182 1 327 1 329 2 92 2 332 1 194 1 97 2 
247 2 0 2 248 1 297 1 299 1 200 4 109 1 253 2 112 6 60 1 302 1 61 1 259 1 62 1 64 1 261 1 63 1 209 1 15 5 211 2 17 2 164 2 71 1 216 1 20 2 122 1 354 1 218 2 26 2 166 5 127 1 271 2 313 1 79 1 358 1 360 1 172 1 226 2 82 2 83 1 367 2 279 1 371 1 181 1 182 1 327 1 373 1 329 3 186 1 331 1 332 1 194 1 333 2 285 2 97 2 
127 1 313 1 79 1 358 1 200 2 112 2 60 1 61 1 62 1 63 1 279 1 371 1 15 3 327 1 329 1 216 1 122 1 354 1 332 1 145 1 166 3 26 1 
247 1 127 1 313 1 79 1 358 1 200 3 112 1 60 1 61 1 62 1 63 1 64 1 279 1 371 1 15 3 327 1 329 1 216 1 122 1 354 1 332 1 145 1 218 1 166 3 
127 1 313 1 79 1 358 1 200 3 226 1 112 2 60 1 61 1 62 1 63 1 279 1 371 1 15 3 327 1 329 1 216 1 122 1 354 1 332 1 145 1 218 1 166 3 26 1 
246 1 247 1 0 1 297 1 200 4 301 1 252 1 253 2 152 1 112 7 151 1 60 1 302 1 61 1 62 1 64 1 63 1 15 5 211 2 17 2 163 1 70 1 216 1 20 1 122 2 354 2 218 2 26 4 166 5 127 2 271 2 313 1 79 2 358 1 226 4 83 1 40 1 41 1 279 1 371 1 48 1 181 1 182 1 327 1 183 1 329 3 332 1 145 1 194 1 241 1 97 2 
0 1 247 2 297 1 200 4 253 2 112 4 60 1 302 1 61 1 62 1 63 1 261 1 64 1 15 4 211 2 17 2 216 1 20 1 122 1 354 1 218 2 166 4 26 2 127 1 271 2 313 1 79 1 358 1 226 2 82 2 83 1 279 1 371 1 181 1 182 1 327 1 329 2 332 1 194 1 97 2 
246 1 247 1 0 1 127 1 271 2 313 1 79 1 297 1 358 1 200 4 226 2 253 2 83 1 112 4 151 1 60 1 302 1 61 1 62 1 64 1 63 1 279 1 48 1 371 1 15 4 211 2 182 1 181 1 327 1 329 2 17 2 216 1 20 1 122 1 354 1 332 1 194 1 218 2 26 2 97 2 166 4 
246 1 247 1 0 1 127 1 271 2 313 1 79 1 297 1 358 1 200 4 226 2 253 2 83 1 112 4 151 1 60 1 302 1 61 1 62 1 64 1 63 1 279 1 48 1 371 1 15 4 211 2 182 1 181 1 327 1 329 2 17 2 216 1 20 1 122 1 354 1 332 1 194 1 218 2 26 2 97 2 166 4 
125 1 247 1 0 1 127 1 271 2 313 1 79 1 358 1 200 4 226 2 82 2 83 1 202 1 112 4 60 1 302 1 157 2 61 1 62 1 64 1 63 1 279 1 48 1 371 1 15 4 182 1 181 1 327 1 329 2 92 2 216 1 142 1 20 1 122 1 354 1 332 1 194 1 218 2 26 2 97 2 166 4 
244 1 269 1 127 1 196 1 248 2 2 1 79 1 199 2 80 2 225 1 108 1 366 1 40 1 367 7 41 1 259 1 277 1 209 3 305 2 47 1 136 1 16 2 49 2 140 2 184 1 373 1 331 2 164 8 71 2 121 1 50 2 240 1 354 1 355 2 334 1 333 2 23 1 285 8 286 4 
220 1 27 1 269 2 245 1 146 1 127 1 30 1 104 1 4 1 79 1 80 1 362 1 150 1 301 1 364 1 40 1 41 1 153 1 305 1 233 1 14 1 16 1 49 1 140 1 121 1 50 1 354 1 355 3 286 2 
52 1 220 2 27 1 269 3 222 1 245 1 289 1 337 1 104 1 197 2 4 1 80 1 362 2 342 1 364 1 315 1 277 1 177 1 305 1 16 1 49 1 140 1 121 3 50 1 355 6 286 2 
220 2 27 2 269 6 124 3 245 1 1 1 146 1 291 1 196 1 30 2 104 4 197 1 4 11 80 2 362 1 150 1 344 1 364 11 42 3 158 1 230 1 305 2 233 2 136 1 16 2 49 2 140 1 266 1 188 1 121 8 50 2 355 14 286 4 
244 1 269 1 248 1 127 1 196 1 104 1 296 1 197 1 170 1 79 2 80 1 150 1 40 1 367 1 84 1 41 1 44 1 115 1 209 1 305 1 349 1 136 1 16 1 280 1 49 1 140 1 118 1 331 1 164 1 71 1 121 1 50 1 354 2 355 2 333 1 284 1 285 1 286 2 
52 1 242 1 244 1 289 1 245 3 146 2 196 1 248 2 337 1 104 7 197 2 4 7 298 1 150 1 342 1 344 4 255 2 209 2 305 3 349 2 16 3 212 2 119 2 164 3 71 2 352 2 121 10 354 3 355 20 27 3 220 8 269 10 222 1 127 1 30 2 170 2 79 3 80 3 225 1 362 4 364 7 228 1 40 1 367 3 84 1 41 1 44 2 177 1 233 2 136 1 49 3 140 3 91 2 331 2 50 3 333 1 285 3 284 2 286 6 
220 1 27 1 277 1 305 1 30 1 104 1 4 1 16 1 49 1 359 1 140 1 80 1 344 1 364 1 121 2 50 1 355 2 286 2 
220 1 277 1 269 2 245 1 146 1 305 1 104 1 4 1 16 1 49 1 140 1 80 1 362 1 364 1 9 1 50 1 355 2 286 2 
220 2 27 1 269 2 277 1 245 1 146 1 305 1 233 1 30 1 104 2 4 2 16 1 49 1 140 1 80 1 362 1 344 1 364 2 121 2 50 1 355 4 286 2 
220 1 27 1 305 1 30 1 104 1 4 1 16 1 49 1 359 1 140 1 80 1 184 1 344 1 364 1 121 2 50 1 355 2 286 2 
220 1 269 2 245 1 146 1 305 1 104 1 4 1 16 1 49 1 140 1 80 1 362 1 184 1 364 1 9 1 50 1 355 2 286 2 
220 2 27 1 269 2 245 1 146 1 305 1 233 1 30 1 104 2 4 2 16 1 49 1 140 1 80 1 362 1 184 1 344 1 364 2 121 2 50 1 355 4 286 2 
220 2 27 1 269 2 245 1 146 1 305 1 233 1 30 1 104 2 4 2 16 1 49 1 140 1 80 1 362 1 344 1 364 2 121 2 50 1 355 4 286 2 
269 1 196 1 248 1 197 1 170 1 79 1 80 1 367 1 44 1 209 1 305 1 349 1 136 1 16 1 49 1 140 1 331 1 164 1 71 1 352 1 121 1 50 1 355 2 354 1 333 1 284 1 285 1 286 2 
269 1 196 1 248 1 197 1 170 1 3 1 79 1 80 1 367 1 276 1 44 1 209 1 305 1 136 1 16 1 49 1 140 1 331 1 164 1 71 1 239 1 121 1 50 1 355 2 354 1 333 1 285 1 286 2 
220 2 27 1 269 2 245 1 146 1 305 1 233 1 30 1 104 2 4 2 16 1 49 1 140 1 80 1 362 1 150 1 344 1 364 2 121 2 50 1 355 4 286 2 
220 2 27 1 269 2 245 1 146 1 248 1 30 1 104 2 170 1 4 2 79 1 80 1 362 1 344 1 364 2 367 1 44 1 209 1 305 1 233 1 349 1 16 1 49 1 140 1 212 1 331 1 164 1 71 1 352 1 121 2 50 1 355 4 354 1 334 1 284 1 285 1 286 2 
220 1 27 1 269 1 245 1 146 1 127 1 30 1 104 1 79 1 4 1 80 1 150 1 301 1 344 1 364 1 40 1 41 1 153 1 305 1 233 1 68 1 16 1 49 1 140 1 121 2 50 1 354 1 355 3 286 2 
356 1 27 3 220 4 28 1 269 15 124 5 245 3 1 2 146 3 291 3 30 3 223 1 314 2 5 1 80 2 362 2 344 2 42 3 303 1 159 1 176 1 262 1 305 2 233 3 16 2 214 1 189 4 121 13 93 1 50 2 355 28 286 4 
356 1 27 3 220 5 28 1 269 15 124 5 245 3 1 2 146 3 291 3 30 3 223 1 314 2 5 1 80 2 362 3 344 2 42 3 303 1 159 1 176 1 262 1 305 2 233 3 16 2 214 1 189 4 121 13 93 1 50 2 355 28 286 4 
52 3 27 6 220 9 28 1 269 19 289 3 222 3 124 3 245 6 1 1 146 3 291 2 337 3 30 3 223 1 314 1 80 1 362 6 342 3 344 3 42 3 303 1 159 1 176 1 262 1 177 3 305 1 233 3 16 1 266 1 214 1 189 4 121 22 93 1 50 1 355 41 286 2 
356 1 27 4 220 7 28 1 269 16 124 4 245 4 1 2 146 4 291 2 30 4 223 1 314 1 80 2 362 4 344 3 132 1 42 2 303 1 159 2 176 1 262 1 305 2 233 4 16 2 214 1 189 4 121 14 93 1 50 2 355 30 286 4 
27 1 269 5 124 1 245 1 146 1 291 1 30 1 223 1 314 2 80 1 42 1 159 1 176 1 262 1 305 1 233 1 16 1 214 1 189 2 121 5 93 2 50 1 355 10 286 2 
328 1 8 1 376 1 290 1 232 1 311 1 162 1 272 1 155 1 318 1 
134 1 73 1 
328 1 321 1 309 1 207 1 376 1 290 1 162 1 272 1 318 1 
190 1 57 1 
106 1 88 1 295 1 
229 1 247 1 290 1 135 2 232 1 162 1 15 1 272 1 328 1 149 1 376 1 343 1 283 1 110 1 311 1 155 1 318 1 166 1 
229 1 247 1 290 1 135 2 232 1 162 1 15 1 272 1 328 1 149 1 376 1 343 1 283 1 110 1 311 1 155 1 318 1 166 1 
229 1 247 1 290 1 135 2 232 1 162 1 15 1 272 1 328 1 149 1 376 1 343 1 283 1 110 1 311 1 155 1 318 1 166 1 
106 1 190 1 57 1 
106 1 190 1 57 1 
88 1 295 1 
106 1 88 1 295 1 
375 1 51 1 
290 1 76 1 127 2 197 1 272 1 79 2 149 1 343 1 40 2 41 2 318 1 135 1 323 1 208 1 134 1 162 1 15 1 281 1 328 1 375 1 376 1 217 1 354 2 51 1 73 1 74 1 166 1 
269 1 288 1 248 1 127 2 196 1 249 1 2 1 79 2 199 2 32 1 80 1 150 1 251 1 367 2 209 1 305 1 136 1 16 1 49 1 140 1 331 1 164 2 71 1 351 1 121 1 50 1 240 1 354 2 355 2 285 2 286 2 
259 1 357 1 209 1 248 1 294 1 373 1 331 1 164 1 71 1 22 1 191 1 367 1 333 1 285 1 
320 1 99 1 75 1 231 2 357 1 294 1 66 1 137 1 139 1 225 1 164 1 331 1 363 1 71 1 377 1 19 1 367 1 285 1 
320 1 99 1 75 1 231 2 357 1 294 1 66 1 137 1 139 1 225 1 331 1 164 2 363 1 71 1 377 1 19 1 367 2 334 1 285 2 
320 1 99 1 75 1 231 2 294 1 66 1 137 1 139 1 225 1 164 1 331 1 363 1 71 1 19 1 367 1 285 1 204 1 
339 1 
173 1 64 1 0 1 247 1 46 1 20 1 194 1 182 1 181 1 302 1 
27 2 245 2 29 5 247 5 146 2 0 5 233 2 30 2 103 1 91 1 268 2 20 5 82 10 253 5 10 5 
329 1 64 1 247 1 15 1 112 1 166 1 
287 1 0 2 248 1 360 1 299 1 109 2 365 1 36 2 367 4 112 4 302 1 259 1 114 1 209 1 15 3 182 2 181 2 373 1 186 2 329 2 187 1 331 1 164 4 71 1 20 2 194 2 333 2 285 4 166 3 
173 1 64 1 0 1 247 1 46 1 20 1 315 1 
0 1 247 2 297 1 82 1 253 1 112 1 302 1 64 1 15 1 182 1 181 1 211 1 17 1 329 1 20 1 194 1 166 1 
101 1 245 2 55 2 0 9 247 8 146 2 248 3 293 2 103 2 109 1 253 6 254 2 10 6 112 5 302 4 203 2 114 1 205 2 64 2 160 2 209 10 15 5 164 3 71 4 120 2 268 2 20 8 166 5 27 2 29 6 30 2 313 2 128 3 171 1 173 1 35 2 36 1 82 12 367 3 44 3 46 1 233 2 181 4 182 4 91 2 186 2 329 3 331 3 380 1 194 4 334 1 333 1 285 3 96 1 
27 2 28 1 124 1 245 2 54 1 29 5 0 8 247 5 146 2 291 1 30 2 103 1 109 1 82 6 253 3 275 1 10 5 112 1 302 2 42 1 113 1 64 2 89 1 233 2 264 1 15 1 182 2 181 2 69 1 186 1 329 1 268 2 20 5 194 2 166 1 
27 2 222 1 245 1 0 2 127 1 337 1 103 1 79 1 342 1 301 1 40 1 152 1 151 1 41 1 302 1 15 1 182 1 181 1 183 1 163 1 70 1 268 2 21 1 20 2 122 1 354 1 194 1 166 1 
269 1 127 2 248 1 197 1 170 1 79 3 80 1 301 2 40 2 367 1 41 2 44 1 209 1 305 1 349 1 136 1 16 1 49 1 140 1 164 1 331 1 70 1 71 1 352 1 378 1 50 1 355 1 354 3 333 1 285 1 284 1 286 2 
289 1 64 2 29 2 0 1 247 4 181 1 182 1 186 1 109 1 20 2 82 4 253 2 10 2 194 1 302 1 
237 1 328 1 311 1 51 1 318 1 
328 1 192 1 318 1 
328 1 192 1 318 1 
328 1 192 1 318 1 
328 1 318 1 258 1 
328 1 318 1 258 1 
328 1 318 1 258 1 
328 1 318 1 
162 1 272 1 
52 1 27 1 220 2 269 4 28 1 289 1 245 1 124 1 222 1 291 1 337 1 80 1 362 2 342 1 42 1 262 1 177 1 305 1 16 1 121 4 50 1 355 8 286 2 
52 1 27 2 220 3 269 5 28 1 289 1 245 1 222 1 124 2 1 1 291 1 337 1 30 1 80 2 362 2 342 1 344 1 43 1 42 1 262 1 177 1 305 2 233 1 16 2 121 6 50 2 355 11 286 4 
52 1 27 3 220 4 269 10 28 1 289 1 222 1 124 1 245 3 54 1 146 2 291 1 337 1 30 2 198 1 80 3 362 3 342 1 344 1 275 1 43 1 42 1 113 1 262 1 177 1 305 3 233 2 264 1 16 3 121 9 50 3 355 19 286 6 
52 1 27 3 220 5 269 7 28 1 289 1 222 1 124 1 245 2 54 1 146 1 291 1 337 1 30 2 198 1 80 3 362 3 342 1 344 2 275 1 43 1 42 1 113 1 262 1 177 1 305 3 233 2 264 1 16 3 121 10 50 3 355 17 286 6 
52 1 27 1 220 2 269 4 28 1 289 1 245 1 124 1 222 1 291 1 337 1 80 1 362 2 342 1 42 1 262 1 177 1 305 1 16 1 121 4 50 1 355 8 286 2 
27 2 220 2 269 6 28 1 124 1 245 2 54 1 146 2 291 1 30 2 80 1 362 1 344 1 275 1 42 1 113 1 262 1 305 1 233 2 264 1 16 1 121 6 50 1 355 12 286 2 
52 1 27 3 220 5 269 8 28 1 289 1 222 1 124 1 245 2 54 1 146 1 291 1 337 1 30 2 198 2 80 4 362 3 342 1 344 2 275 1 43 1 42 1 113 1 262 1 177 1 305 4 233 2 264 1 16 4 121 10 50 4 355 18 286 8 
356 1 27 3 220 6 269 7 28 1 124 1 245 2 54 1 146 2 291 1 30 3 198 2 80 4 362 3 344 3 275 1 42 1 113 1 262 1 305 4 233 3 264 1 16 4 121 9 50 4 355 16 286 8 
52 1 220 6 27 1 269 4 245 1 222 1 177 2 337 3 362 3 342 3 344 3 121 3 355 7 
52 1 356 1 27 3 220 4 269 8 28 1 289 1 222 1 124 1 245 2 54 1 146 1 291 1 337 1 30 2 198 2 80 4 362 3 342 1 344 1 275 1 42 1 113 1 262 1 177 1 305 4 233 2 264 1 16 4 121 10 50 4 355 18 286 8 
220 5 27 2 269 5 262 1 222 1 245 2 305 1 337 2 16 1 80 1 362 3 342 2 344 2 21 1 121 5 50 1 355 10 286 2 
27 1 220 1 262 1 305 1 30 1 16 1 80 1 344 1 121 2 50 1 355 2 286 2 
220 2 27 1 269 2 245 1 262 1 146 1 305 1 233 1 30 1 16 1 80 1 362 1 344 1 121 2 50 1 355 4 286 2 
356 1 220 2 269 2 262 1 102 1 305 3 337 1 198 1 16 3 80 3 362 1 342 1 344 1 121 1 50 3 355 3 286 6 
52 1 356 1 27 5 220 12 269 18 289 1 222 2 124 4 245 5 102 1 1 1 146 3 291 1 337 3 30 3 198 2 80 5 362 7 201 1 342 3 344 5 37 1 43 1 42 3 262 1 177 1 305 5 233 3 179 1 16 5 121 16 50 5 355 34 286 10 
52 1 27 1 220 3 269 4 289 1 245 1 222 1 177 1 305 2 337 1 16 2 198 1 80 2 362 2 342 1 344 1 121 4 50 2 355 8 286 4 
52 1 220 2 27 1 269 3 289 1 222 1 245 1 177 1 337 1 362 2 342 1 121 3 315 1 355 6 
220 2 27 1 269 2 245 1 146 1 305 1 233 1 30 1 16 1 80 1 362 1 344 1 121 2 50 1 355 4 43 1 286 2 
27 1 220 2 269 4 245 1 124 2 146 1 1 1 291 1 233 1 30 1 362 1 344 1 121 3 355 7 42 1 
52 1 220 9 27 3 269 12 289 1 222 1 124 2 245 3 102 1 1 1 146 2 337 2 30 2 198 2 80 2 362 5 342 2 344 4 42 2 177 1 305 2 233 2 16 2 266 1 188 1 121 11 50 2 355 23 286 4 
269 1 124 1 355 1 
121 1 355 1 42 1 
27 1 220 3 269 3 245 1 146 1 305 1 233 1 30 1 16 1 80 1 91 1 362 2 344 1 121 3 50 1 355 6 286 2 43 1 
27 2 220 2 269 6 28 1 124 1 245 2 54 1 146 2 291 1 30 2 80 1 362 1 344 1 275 1 42 1 113 1 262 1 305 1 233 2 264 1 16 1 121 6 50 1 355 12 286 2 
27 1 220 2 269 3 222 1 245 1 337 1 362 1 342 1 344 1 121 3 355 6 
52 1 220 2 269 2 102 1 177 1 305 1 337 1 198 1 16 1 80 1 362 1 342 1 344 1 121 1 50 1 355 3 286 2 
86 1 127 1 168 1 197 1 79 1 372 1 282 1 236 1 130 1 129 1 332 1 354 1 
236 1 127 1 354 1 332 1 168 1 197 1 79 1 
259 1 209 1 248 1 6 1 373 1 164 4 331 1 71 1 367 4 381 1 333 1 334 1 285 4 
260 1 44 1 209 1 248 1 370 1 90 1 298 1 164 2 331 1 71 2 36 1 72 1 367 2 285 2 
320 1 75 1 231 1 331 1 164 1 71 1 367 1 333 1 285 1 139 1 
209 1 248 1 249 1 225 1 164 2 331 1 71 1 240 1 367 2 334 1 285 2 
259 1 209 3 248 2 47 1 373 1 164 5 331 2 108 1 71 2 36 1 240 1 367 4 381 1 333 1 334 1 285 5 
259 1 174 1 209 3 248 2 47 1 373 1 164 5 331 2 71 2 36 1 240 1 367 4 381 1 333 1 334 1 285 5 
259 1 373 1 331 1 164 1 71 1 209 1 248 1 315 1 367 1 333 1 285 1 
244 1 44 1 209 1 248 1 127 1 349 1 197 1 170 1 79 2 164 1 331 1 71 1 40 1 354 2 367 1 41 1 333 1 285 1 
244 1 127 2 248 2 293 1 197 1 170 1 79 2 358 1 36 1 40 1 367 1 41 2 62 1 205 1 44 2 209 3 349 1 331 1 164 1 71 1 122 1 354 2 285 1 
244 1 127 2 248 2 293 1 197 1 3 1 170 1 79 2 358 1 6 1 36 1 40 1 367 2 41 2 62 1 205 1 44 2 209 3 331 1 164 2 71 1 122 1 354 2 285 2 
205 1 64 1 44 1 247 1 209 4 248 1 293 1 313 1 15 2 340 1 128 1 6 1 164 3 35 1 331 1 71 1 36 1 345 1 367 3 112 1 333 1 285 3 166 2 
205 1 64 1 44 1 160 1 247 1 209 4 248 1 293 1 313 1 15 2 128 1 6 1 164 3 35 1 331 1 71 1 36 1 367 3 112 1 333 1 285 3 166 2 
331 1 164 1 71 1 366 1 367 1 285 1 
101 1 260 1 44 1 209 3 248 2 47 1 338 1 199 1 225 1 164 7 331 2 108 1 71 3 72 1 366 1 240 1 367 6 334 1 333 2 23 1 285 7 
52 1 244 1 27 1 220 2 269 3 289 1 245 1 222 1 248 1 127 1 337 1 104 1 197 2 170 1 4 1 79 2 80 2 362 2 150 1 342 1 364 1 40 1 367 1 41 1 44 1 177 1 209 1 305 2 349 1 16 2 49 2 140 2 212 1 119 1 331 1 164 1 71 1 351 1 352 1 121 3 50 2 355 6 354 2 334 1 285 1 284 1 286 4 
55 1 0 1 247 1 313 1 128 1 173 1 35 1 254 1 367 1 112 2 302 2 114 1 64 1 160 1 209 2 46 1 15 3 182 2 181 2 281 1 329 1 164 1 120 1 20 1 194 2 333 1 285 1 166 3 
244 1 44 1 209 1 248 1 127 1 197 1 170 1 3 1 79 2 164 1 331 1 71 1 40 1 354 2 367 1 41 1 333 1 285 1 
101 1 260 1 44 1 209 1 248 1 338 1 164 1 331 1 71 2 36 1 72 1 367 1 285 1 
101 1 44 1 209 2 248 1 35 1 164 2 331 1 71 2 366 1 367 2 334 1 285 2 96 1 
288 1 127 1 77 1 138 1 79 1 32 1 251 1 310 1 354 1 
165 1 77 1 178 1 
77 1 310 1 197 1 193 1 138 1 
62 1 64 1 247 1 313 1 77 1 178 1 197 1 15 2 138 2 358 1 281 1 216 1 165 1 58 1 122 1 310 2 193 2 156 1 166 2 
98 1 300 1 34 1 161 1 116 1 95 1 369 1 346 1 
98 1 322 1 292 1 161 4 350 1 180 1 326 2 374 1 300 2 34 2 257 1 95 1 346 4 369 3 
98 1 175 1 195 1 116 1 161 2 117 1 326 1 300 1 34 1 95 1 369 1 346 2 
98 1 116 1 161 3 350 1 374 2 34 1 300 1 317 1 95 1 257 2 369 1 346 3 
85 2 306 1 369 2 307 1 
98 1 161 1 116 1 265 1 95 1 346 1 
326 1 56 1 98 1 300 1 34 1 161 2 116 1 95 1 369 1 346 2 
347 1 
98 1 300 1 34 1 161 1 116 1 95 1 369 1 346 1 
300 1 34 1 315 1 369 1 
326 1 56 1 98 1 374 1 300 1 34 1 161 3 116 1 95 1 369 1 346 3 
322 1 292 1 180 1 369 1 
300 1 369 1 
98 1 300 1 34 1 161 1 95 1 369 1 346 1 
213 1 38 1 346 1 
98 1 13 1 116 1 161 3 350 1 374 2 34 1 300 1 95 1 257 1 369 1 346 3 
326 1 98 1 300 1 34 1 270 1 161 2 95 1 369 1 346 2 
98 1 322 1 231 1 363 1 144 1 161 1 116 1 95 1 139 1 369 1 346 1 
98 1 300 1 161 1 116 1 95 1 369 1 346 1 
98 1 300 2 34 1 161 1 116 1 95 1 346 1 
98 2 116 1 161 2 147 1 78 1 324 1 300 1 95 2 369 1 346 2 
98 1 322 1 292 1 116 1 161 3 326 2 56 1 300 1 34 1 353 1 95 1 346 3 369 2 
320 1 98 1 167 1 231 2 116 1 161 2 137 1 139 1 326 1 300 1 34 1 363 1 95 1 369 1 346 2 
98 2 322 1 270 1 292 1 116 1 161 4 326 2 300 1 34 1 95 2 133 1 346 4 369 2 

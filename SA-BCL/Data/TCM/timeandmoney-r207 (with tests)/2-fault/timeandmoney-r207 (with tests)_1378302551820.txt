#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 303 (32,95) 242 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 303 187 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 303 (32,95) 242 79 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 147 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 303 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (41,252,319) (17,26,334) (17,26,334) (17,26,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (41,252,319) (17,26,334) (17,26,334) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (41,252,319) (17,26,334) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (88,257) (59,322) (59,322) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (41,252,319) (17,26,334) (17,26,334) (17,26,334) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 303 187 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 37 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 50 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 303 (32,95) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 147 89 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 303 (32,95) (32,95) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.util.NoSuchElementException 153 172 70 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.util.NoSuchElementException 153 172 70 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.util.NoSuchElementException 153 172 70 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.util.NoSuchElementException 153 172 70 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.util.NoSuchElementException 153 172 70 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (41,252,319) (41,252,319) (41,252,319) 
com.domainlanguage.time.TimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (41,252,319) (41,252,319) 
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException (88,257) (88,257) 
com.domainlanguage.time.TimeRateTest:testRounding()V ERROR java.lang.NullPointerException (41,252,319) (41,252,319) (41,252,319) 
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 52 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 303 (32,95) 242 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 76 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testDivide()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 2215 | while (x) -> while (!x)
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration; | RETURN | 2005 | return null
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
301 1 46 2 271 1 127 1 274 1 231 1 53 1 130 2 234 5 184 2 10 1 312 2 16 1 143 1 106 1 66 1 243 4 286 1 246 9 25 1 249 2 325 2 206 1 78 9 114 1 83 3 297 6 298 2 
301 1 46 2 271 1 127 1 274 1 231 1 53 1 130 2 234 5 184 2 10 1 312 2 16 1 143 1 106 1 66 1 243 4 286 1 246 9 25 1 249 2 325 2 206 1 78 9 114 1 83 3 297 6 298 2 
301 1 46 2 271 1 127 1 274 1 231 1 53 1 130 2 234 6 184 2 10 1 312 2 16 1 143 1 106 1 66 1 243 5 286 1 246 10 25 1 249 2 325 2 206 1 78 10 114 1 83 4 297 7 298 2 
301 1 46 2 271 1 127 1 274 1 231 1 53 1 130 2 234 4 184 1 10 1 312 2 16 1 143 1 106 1 66 1 243 3 246 7 25 1 249 2 325 2 206 1 78 7 114 1 83 2 297 4 298 2 
301 1 243 2 46 1 286 1 246 4 249 1 271 1 130 1 206 1 78 4 234 3 114 1 184 2 83 1 312 1 297 3 298 1 143 1 
301 1 263 1 67 1 246 2 271 1 249 1 94 1 325 1 53 1 130 1 78 2 234 1 114 1 10 1 312 1 298 1 
301 1 243 1 246 3 271 1 325 1 231 1 130 2 78 3 234 2 114 1 312 2 83 1 297 1 
301 1 46 1 271 1 127 1 231 1 130 2 233 1 234 5 184 2 312 2 143 1 243 4 286 1 246 9 25 1 249 1 325 1 206 1 78 9 114 1 82 1 83 3 297 7 298 1 
301 1 46 1 271 1 127 1 231 1 130 2 233 1 234 5 184 2 312 2 143 1 243 4 286 1 246 9 25 1 249 1 325 1 206 1 78 9 114 1 82 1 83 3 297 7 298 1 
76 1 138 1 4 1 
258 2 4 1 313 1 
329 2 92 2 135 2 136 2 47 2 335 1 199 2 314 1 
145 1 303 1 242 1 3 1 92 1 47 1 177 2 199 1 72 1 74 1 95 1 329 1 135 1 136 1 335 1 
329 1 77 1 268 1 92 1 135 1 136 1 47 1 335 1 237 1 199 1 
194 1 44 1 45 1 268 1 47 1 4 1 326 1 6 1 253 1 329 1 136 1 138 1 57 1 216 1 
194 2 44 1 45 1 92 1 268 1 47 1 4 1 199 1 253 1 329 1 135 1 136 1 138 1 57 1 216 2 
194 1 330 1 224 1 165 1 216 1 
302 1 194 2 330 1 138 1 4 1 340 1 165 1 216 2 
194 1 330 1 216 1 
194 1 268 1 92 1 47 1 199 1 202 1 77 1 329 1 135 1 136 1 335 1 237 1 165 1 216 1 
4 1 
302 1 194 2 330 1 138 1 4 1 29 1 165 1 216 2 
192 1 302 1 0 2 194 5 118 1 197 1 4 1 308 1 112 1 203 1 330 2 113 1 56 1 138 1 139 2 165 2 163 1 142 2 216 5 
76 1 314 1 
329 2 92 1 135 1 136 2 47 2 248 1 124 1 199 1 314 2 
320 1 230 1 168 1 
303 1 177 1 187 1 74 1 
329 3 135 1 92 3 136 3 47 3 14 1 199 3 314 1 
329 1 268 1 92 1 136 1 47 1 237 1 199 1 
329 1 268 1 92 1 135 1 136 1 47 1 124 1 248 1 199 1 
194 1 303 1 242 1 44 1 45 1 268 1 92 3 47 3 177 1 248 1 199 3 74 1 95 1 253 1 329 3 135 2 136 3 333 1 335 1 79 1 57 1 14 1 216 1 316 1 
329 2 92 1 136 2 47 2 259 1 14 1 199 1 314 1 6 1 
194 1 44 1 45 1 268 1 92 3 47 3 248 1 4 1 199 3 156 1 253 1 329 3 135 1 136 3 333 1 57 1 14 2 216 1 316 1 
329 2 92 2 135 1 136 2 47 2 248 1 14 1 230 1 199 2 168 1 
303 1 177 1 74 1 
147 1 177 1 74 1 
267 1 305 1 226 2 307 1 230 2 48 1 272 1 7 1 311 1 236 1 188 1 238 1 141 1 63 1 64 2 19 1 68 1 320 2 31 1 209 4 159 1 332 2 36 1 168 2 
329 1 45 1 268 1 92 1 136 1 47 1 199 1 190 1 
303 1 329 1 92 1 136 1 333 1 47 1 177 1 14 1 199 1 74 1 
92 4 47 5 248 1 199 4 324 1 6 1 329 5 135 1 136 5 333 1 259 1 14 2 338 1 314 1 
329 2 268 1 92 2 136 2 47 2 237 1 199 2 190 1 
12 1 87 1 
12 1 87 1 
120 1 189 1 
120 1 189 1 
120 1 189 1 
182 1 12 1 87 1 
284 1 12 1 87 1 
244 1 120 1 12 2 189 1 87 2 40 1 
182 1 12 1 87 1 
182 1 12 1 87 1 
285 1 12 1 87 1 
285 1 12 1 87 1 
285 1 12 1 87 1 
194 2 244 1 171 2 318 2 178 1 4 1 200 1 8 2 9 1 215 1 80 1 81 2 11 2 12 2 60 1 296 1 216 2 87 2 219 3 
171 1 92 2 47 2 121 1 181 1 133 1 136 2 11 1 12 1 13 1 314 1 105 1 194 1 284 1 318 1 199 2 327 1 157 1 329 2 215 1 81 1 216 1 219 1 87 1 
46 1 249 1 298 1 
249 1 94 1 298 1 
241 1 196 1 46 2 256 1 94 1 298 3 
241 1 196 1 46 1 245 1 94 1 298 2 
241 1 196 2 46 1 94 1 298 2 
0 1 302 1 306 1 4 2 179 1 308 2 48 1 181 1 54 1 133 1 56 1 236 1 100 2 138 1 139 1 313 1 188 1 142 1 194 5 22 2 68 1 154 1 201 1 112 3 327 1 205 1 330 1 258 3 165 4 166 2 216 5 299 1 
302 1 0 2 91 1 224 5 306 1 4 5 308 6 48 3 129 1 232 1 133 4 54 2 56 1 236 3 138 1 139 2 313 3 188 3 142 2 239 1 144 1 194 9 22 6 68 3 154 2 201 3 112 8 330 6 35 1 258 9 163 1 165 7 166 6 216 9 86 5 
0 1 4 3 308 2 48 1 54 1 133 1 138 1 100 1 236 1 139 1 313 2 188 1 142 1 194 3 22 2 68 1 154 1 201 1 112 3 205 1 258 4 165 2 163 1 216 3 166 2 299 1 
0 1 4 4 308 4 48 2 129 1 232 1 54 1 133 2 138 1 100 2 236 2 139 1 313 3 188 2 142 1 194 4 22 4 68 2 154 1 201 2 112 5 205 1 35 1 258 7 163 1 165 3 166 4 216 4 299 1 
76 1 176 1 42 1 
108 1 176 1 
295 1 
65 1 176 1 
65 1 55 1 176 3 300 1 282 1 42 2 
65 1 176 1 300 1 
176 1 229 1 
240 1 267 2 68 1 226 4 123 1 152 1 287 2 309 1 277 1 209 7 183 1 336 1 162 1 36 3 186 1 188 1 64 3 
240 1 267 2 68 1 226 4 123 1 152 1 287 2 309 1 277 1 209 7 183 1 336 1 162 1 36 3 186 1 188 1 64 3 
240 1 267 2 68 1 226 4 123 1 152 1 287 2 309 1 277 1 209 7 183 1 336 1 162 1 36 3 186 1 188 1 15 1 64 3 
221 1 265 3 267 5 119 1 226 16 123 2 307 1 48 3 309 1 277 1 183 1 311 1 236 3 186 2 188 4 63 1 64 15 240 5 150 4 68 4 27 1 152 2 287 3 71 1 201 3 31 1 209 31 211 1 331 1 332 2 336 2 162 1 36 10 164 1 
267 3 226 5 123 1 307 2 275 1 309 1 277 1 311 2 186 1 188 1 63 2 64 4 240 1 193 1 68 1 152 1 287 2 71 1 31 2 209 9 332 4 336 1 36 4 162 1 
246 1 177 1 26 1 271 1 126 1 325 1 130 1 328 1 78 1 334 1 161 1 312 1 17 1 41 1 342 1 191 1 
107 1 246 2 270 1 198 1 177 1 126 1 325 1 130 1 328 1 78 2 334 1 312 1 17 1 297 1 41 1 342 1 191 1 
328 1 78 1 270 1 246 1 334 1 198 1 177 1 126 1 297 1 325 1 41 1 191 1 
88 1 107 1 246 1 322 1 177 1 126 2 74 1 325 2 130 1 328 2 78 1 293 1 59 1 312 1 191 2 
246 1 270 1 177 1 26 1 271 1 126 1 325 1 130 1 328 1 78 1 334 1 312 1 17 1 41 1 342 1 191 1 
269 1 
0 1 264 1 1 2 268 1 177 2 175 2 4 2 6 1 280 2 185 1 194 5 24 1 28 1 109 1 30 1 112 2 290 2 291 1 216 5 116 2 117 1 38 1 302 3 43 2 44 1 45 1 47 1 308 2 310 1 54 1 136 1 56 1 138 1 57 1 139 1 313 2 142 1 61 4 62 2 74 2 326 1 253 1 329 1 330 6 258 2 339 1 167 1 
302 1 194 3 44 1 45 1 268 1 47 1 28 1 109 1 29 1 326 1 6 1 253 1 310 1 329 1 330 2 291 1 136 1 57 1 185 1 216 3 61 2 62 1 
302 1 43 1 194 3 44 1 45 1 268 1 47 1 28 1 4 1 109 1 29 1 326 1 6 1 253 1 310 1 329 1 330 1 291 1 136 1 138 1 57 1 185 1 216 3 61 3 
302 1 43 1 44 1 45 1 268 1 47 1 4 1 6 1 310 1 136 1 57 1 138 1 185 1 61 3 62 1 194 3 28 1 109 1 29 1 326 1 253 1 329 1 330 2 291 1 216 3 116 1 
0 1 1 2 268 1 175 2 4 5 6 1 278 1 97 1 280 2 185 1 194 5 28 1 109 1 29 1 112 1 288 1 207 1 290 2 291 1 216 5 116 4 38 1 302 3 43 4 44 1 45 1 225 1 47 1 308 1 310 1 136 1 56 1 57 1 138 5 139 1 313 2 142 1 61 6 62 4 326 1 253 1 329 1 330 7 339 1 
0 1 1 2 268 1 175 2 4 2 6 1 280 2 185 1 194 4 24 1 28 1 109 1 112 1 290 2 291 1 216 4 38 1 116 2 302 2 43 2 44 1 45 1 47 1 308 1 310 1 136 1 56 1 57 1 138 1 139 1 313 2 142 1 61 4 62 2 326 1 253 1 329 1 330 4 258 2 339 1 
302 2 0 1 43 2 1 2 44 1 45 1 268 1 47 1 175 2 4 1 308 1 6 1 310 1 97 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 313 2 142 1 61 4 62 2 194 4 28 1 109 1 326 1 112 1 288 1 253 1 329 1 207 1 330 4 290 2 291 1 339 1 216 4 116 2 38 1 
302 2 0 1 43 2 1 2 44 1 45 1 268 1 47 1 175 2 4 1 308 1 6 1 310 1 97 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 313 2 142 1 61 4 62 2 194 4 28 1 109 1 326 1 112 1 288 1 253 1 329 1 207 1 330 4 290 2 291 1 339 1 216 4 116 2 38 1 
302 2 0 1 43 2 90 1 44 1 45 1 268 1 47 1 4 1 308 1 128 1 276 2 6 1 310 1 97 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 142 1 61 4 62 2 18 2 194 4 149 1 28 1 109 1 326 1 112 1 253 1 329 1 330 4 290 2 291 1 258 2 339 1 216 4 116 2 
302 2 0 1 1 2 43 3 44 1 45 1 268 1 225 1 47 1 175 2 4 1 308 1 6 1 310 1 97 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 313 2 142 1 61 5 62 3 194 4 28 1 109 1 326 1 112 1 288 1 253 1 207 1 329 1 290 2 330 5 291 1 339 1 216 4 38 1 116 3 
302 2 0 1 1 2 43 3 44 1 45 1 268 1 225 1 47 1 175 2 4 1 308 1 6 1 310 1 97 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 313 2 142 1 61 5 62 3 194 4 28 1 109 1 326 1 112 1 288 1 253 1 207 1 329 1 290 2 330 5 291 1 339 1 216 4 38 1 116 3 
302 2 0 1 43 2 44 1 90 1 45 1 268 1 47 1 4 1 308 1 276 2 6 1 310 1 280 2 136 1 56 1 138 1 57 1 139 1 185 1 142 1 61 4 62 2 18 2 194 4 24 1 28 1 109 1 326 1 112 1 253 1 329 1 330 4 290 2 291 1 258 2 339 1 216 4 116 2 
267 2 226 3 123 1 307 1 230 1 309 1 7 1 277 1 311 1 186 1 238 1 141 1 188 1 314 2 63 1 64 3 68 1 320 1 287 1 31 1 76 1 209 6 332 2 36 2 162 1 168 1 
169 1 267 1 265 3 119 1 226 8 174 1 122 1 307 2 230 11 48 1 7 1 311 2 236 2 314 1 238 2 188 1 63 2 64 6 240 1 150 3 320 11 68 2 321 1 201 2 31 2 254 1 208 1 209 14 33 1 331 1 332 4 36 2 168 4 
170 1 303 1 266 1 92 1 226 1 47 1 174 1 177 1 307 1 7 1 311 1 136 1 14 1 187 1 238 1 63 1 64 1 321 1 199 1 74 1 31 1 329 1 209 2 208 1 332 2 333 1 341 1 168 1 
92 1 174 1 47 1 321 1 177 1 307 1 199 1 74 1 31 1 7 1 209 1 329 1 311 1 332 2 136 1 333 1 14 1 238 1 37 1 63 1 64 1 
3 1 92 1 226 1 47 1 174 1 177 4 307 2 50 1 7 2 311 2 136 1 235 1 14 1 141 1 238 2 63 2 64 1 21 1 199 1 74 2 31 2 208 1 209 2 329 1 332 4 161 1 
267 1 92 1 226 1 47 1 307 1 230 1 48 1 7 1 311 1 135 1 136 1 236 1 238 1 188 1 63 1 64 2 146 1 320 1 68 1 321 1 248 1 199 1 201 1 31 1 329 1 209 3 332 2 36 1 168 1 
240 1 320 1 68 1 226 2 307 1 230 1 272 1 31 1 7 1 209 2 311 1 332 2 236 1 36 1 141 1 238 1 168 1 63 1 
267 1 305 1 320 1 307 1 230 1 48 1 31 1 7 1 209 2 311 1 332 2 36 1 141 1 238 1 188 1 168 1 63 1 64 2 
240 1 267 1 320 2 68 1 226 2 307 1 230 2 48 1 201 1 31 1 7 1 209 4 311 1 332 2 236 1 36 2 188 1 141 1 238 1 168 2 63 1 64 2 
240 1 320 1 68 1 226 2 307 1 230 1 272 1 31 1 7 1 209 2 311 1 332 2 235 1 236 1 36 1 238 1 168 1 63 1 
267 1 305 1 320 1 307 1 230 1 48 1 31 1 7 1 209 2 311 1 332 2 235 1 36 1 238 1 188 1 168 1 63 1 64 2 
240 1 267 1 320 2 68 1 226 2 307 1 230 2 48 1 201 1 31 1 7 1 209 4 311 1 332 2 235 1 236 1 36 2 188 1 238 1 168 2 63 1 64 2 
240 1 267 1 320 2 68 1 226 2 307 1 230 2 48 1 201 1 31 1 7 1 209 4 311 1 332 2 236 1 36 2 188 1 238 1 168 2 63 1 64 2 
95 1 303 1 177 1 74 1 
89 1 147 1 177 1 74 1 
240 1 267 1 320 2 68 1 226 2 321 1 307 1 230 2 48 1 201 1 31 1 7 1 209 4 311 1 332 2 236 1 36 2 188 1 238 1 168 2 63 1 64 2 
95 1 303 1 177 1 161 1 32 1 
92 1 226 2 47 1 307 1 230 1 48 1 7 1 311 1 135 1 136 1 236 1 101 1 188 1 238 1 63 1 64 1 240 1 68 1 320 1 321 1 248 1 199 1 201 1 31 1 329 1 209 3 332 2 36 1 168 1 
311 1 172 1 332 2 247 1 70 1 153 1 307 1 31 1 63 1 275 1 
311 1 172 1 332 2 247 1 70 1 153 1 307 1 31 1 63 1 275 1 
311 1 172 1 332 2 247 1 70 1 153 1 307 1 31 1 63 1 275 1 
311 1 172 1 332 2 247 1 70 1 153 1 307 1 31 1 63 1 275 1 
311 1 172 1 332 2 247 1 70 1 153 1 307 1 31 1 63 1 275 1 
75 1 244 1 171 1 318 1 11 1 81 1 12 1 178 1 200 1 87 1 
284 1 13 1 
96 1 171 1 318 1 34 1 11 1 81 1 12 1 87 1 220 1 
194 1 244 1 171 1 318 1 178 1 4 1 200 1 8 1 9 1 215 1 80 1 81 1 11 1 12 1 60 1 216 1 87 1 219 2 
194 1 244 1 171 1 318 1 178 1 4 1 200 1 8 1 9 1 215 1 80 1 81 1 11 1 12 1 60 1 216 1 87 1 219 2 
194 1 244 1 171 1 318 1 178 1 4 1 200 1 8 1 9 1 215 1 80 1 81 1 11 1 12 1 60 1 216 1 87 1 219 2 
262 1 182 1 40 1 
262 1 182 1 40 1 
285 1 283 1 
285 1 40 1 283 1 
157 1 105 1 
171 1 92 2 47 2 121 1 181 1 8 1 133 1 136 2 11 1 12 1 13 1 314 1 60 1 105 1 194 1 284 1 318 1 199 2 327 1 157 1 329 2 81 1 165 1 216 1 217 1 87 1 219 1 
262 1 182 1 
285 1 40 1 283 1 
21 1 3 2 226 1 174 1 47 2 321 1 177 2 307 1 49 1 31 1 180 1 7 1 209 2 208 1 329 2 311 1 332 2 136 2 213 1 160 1 238 1 63 1 64 1 
319 1 270 1 161 1 177 2 126 1 250 1 41 1 342 1 252 1 
20 1 270 1 177 1 126 1 41 1 342 1 252 1 
88 1 257 1 177 1 126 1 250 1 74 1 
319 1 270 1 177 1 126 1 250 1 41 1 342 1 252 1 
131 1 
192 1 76 1 138 1 4 1 308 1 112 1 203 1 
0 1 302 1 1 1 175 1 4 2 308 1 56 1 138 1 139 1 313 1 142 1 194 1 112 1 330 1 258 1 216 1 38 1 
0 1 56 1 177 1 139 1 142 1 74 1 52 1 
302 1 0 2 304 1 265 1 119 1 4 5 308 5 48 2 279 1 54 1 56 2 58 1 236 2 138 2 139 2 313 3 142 2 188 2 103 1 104 1 194 1 22 5 150 1 68 2 201 2 112 8 289 1 330 1 292 2 258 6 260 1 85 1 167 1 216 1 166 5 
0 1 268 1 92 1 47 1 123 1 308 2 279 1 135 1 136 1 56 1 139 1 237 1 186 1 142 1 188 1 194 1 68 2 199 1 202 1 251 1 112 2 329 1 207 1 77 1 292 2 335 1 162 1 216 1 
192 1 0 1 4 1 308 1 203 1 112 1 56 1 138 1 139 1 142 1 
22 5 68 2 4 5 308 5 48 2 201 2 112 5 279 1 292 2 236 2 258 10 313 5 188 2 166 5 261 1 
302 1 194 1 330 1 138 1 4 1 216 1 
302 2 0 2 194 3 264 1 23 1 151 1 173 2 177 4 308 2 73 1 74 2 112 2 330 4 54 2 56 1 139 2 163 1 142 2 216 3 167 2 117 1 
95 1 303 1 329 1 242 1 92 1 135 1 136 1 47 1 335 1 177 1 199 1 74 1 
0 1 22 2 4 4 287 1 308 2 112 1 54 1 56 1 258 4 138 2 139 1 313 2 142 1 166 2 167 1 
171 1 134 1 11 1 
157 1 171 1 11 1 178 1 110 1 
171 1 134 1 11 1 
171 1 134 1 11 1 
171 1 11 1 51 1 
171 1 11 1 51 1 
171 1 11 1 51 1 
171 1 11 1 
12 1 87 1 
240 1 267 2 68 1 226 4 123 1 307 2 287 1 71 1 31 2 309 1 277 1 209 8 311 2 332 4 162 1 36 3 186 1 188 1 63 2 64 4 
267 2 68 1 226 3 123 1 287 1 309 1 277 1 76 1 209 6 36 2 162 1 186 1 188 1 64 3 
240 1 267 1 68 1 226 2 307 1 48 1 201 1 273 1 31 1 209 4 311 1 332 2 236 1 36 2 188 1 63 1 64 2 
240 1 267 1 265 1 119 1 150 2 226 3 68 1 48 1 201 1 209 7 331 1 236 1 36 2 188 1 64 4 
169 1 265 2 267 5 226 11 123 2 122 1 307 2 48 2 309 1 277 1 311 2 236 2 186 2 188 3 63 2 64 12 240 4 150 2 68 3 287 1 71 2 201 2 31 2 204 1 209 23 331 1 332 4 162 1 36 9 
209 1 150 1 64 1 
209 1 265 1 226 1 
240 1 267 2 68 1 226 3 307 1 48 1 201 1 31 1 273 1 209 6 311 1 332 2 236 1 36 3 188 1 63 1 261 1 64 3 
265 1 267 1 119 1 226 6 307 1 48 2 275 1 311 1 236 2 58 1 188 2 103 1 63 1 64 6 240 1 150 1 68 2 201 2 31 1 209 12 289 1 332 2 36 2 260 1 85 1 
240 1 267 1 68 1 226 3 123 1 209 6 162 1 36 2 186 1 188 1 64 3 
240 1 267 1 226 1 123 1 307 1 71 1 31 1 309 1 204 1 277 1 209 3 311 1 332 2 36 2 186 1 63 1 64 2 
240 2 267 3 226 5 68 2 123 2 307 1 31 1 275 1 251 1 209 10 311 1 332 2 36 5 162 1 186 2 188 2 63 1 64 5 
240 1 68 1 226 2 307 1 31 1 275 1 209 2 311 1 332 2 236 1 36 1 63 1 
240 1 267 1 68 1 226 2 307 1 48 1 201 1 31 1 275 1 209 4 311 1 332 2 236 1 36 2 188 1 63 1 64 2 
240 1 148 1 267 1 226 1 123 1 307 3 71 1 31 3 275 1 204 1 209 3 311 3 332 6 36 2 186 1 63 3 64 2 
265 3 267 7 119 1 226 16 123 3 307 5 48 3 273 1 275 1 309 1 277 1 311 5 236 3 186 3 188 5 63 5 64 18 240 5 148 1 150 4 68 5 27 1 287 1 71 2 201 3 31 5 204 1 209 34 211 1 331 1 332 10 162 2 36 12 164 1 
265 1 267 2 119 1 226 4 123 1 307 1 275 1 309 1 277 1 311 1 186 1 188 1 103 1 63 1 64 4 150 1 68 1 287 1 31 1 209 8 332 2 36 2 162 1 
267 2 265 1 119 1 226 6 123 1 307 2 273 1 275 1 309 1 277 1 311 2 236 1 186 1 188 1 103 1 63 2 64 5 240 1 150 2 68 2 287 1 201 1 31 2 209 11 331 1 332 4 162 1 36 3 
265 1 267 3 119 1 226 9 123 1 307 3 48 2 273 1 275 1 309 1 277 1 311 3 58 1 236 2 186 1 188 3 103 1 63 3 64 10 240 1 150 1 68 3 287 1 71 1 201 2 31 3 209 19 289 1 332 6 162 1 36 4 260 1 85 1 
265 1 267 3 119 1 226 10 123 1 307 3 48 1 273 1 275 1 309 1 277 1 311 3 236 2 58 1 186 1 188 2 103 1 63 3 64 7 240 2 150 1 68 3 287 1 71 1 201 2 31 3 209 17 289 1 332 6 162 1 36 5 260 1 85 1 
265 1 267 2 119 1 226 4 123 1 307 1 275 1 309 1 277 1 311 1 186 1 188 1 103 1 63 1 64 4 150 1 68 1 287 1 31 1 209 8 332 2 36 2 162 1 
265 1 267 1 119 1 226 6 307 1 48 2 275 1 311 1 236 2 58 1 188 2 103 1 63 1 64 6 240 1 150 1 68 2 201 2 31 1 209 12 289 1 332 2 36 2 260 1 85 1 
265 1 267 3 119 1 226 10 123 1 307 4 48 1 273 1 275 1 309 1 277 1 311 4 58 1 236 2 186 1 188 2 103 1 63 4 64 8 240 2 150 1 68 3 287 1 71 2 201 2 31 4 289 1 209 18 332 8 162 1 36 5 260 1 85 1 
265 1 267 3 119 1 226 9 307 4 48 2 275 1 311 4 58 1 236 3 188 2 103 1 63 4 64 7 240 3 148 1 150 1 68 3 71 2 201 3 31 4 289 1 209 16 332 8 36 6 260 1 85 1 
240 3 267 3 68 1 226 3 123 3 309 2 277 1 209 7 36 6 162 1 186 3 188 1 64 4 
265 1 267 3 119 1 226 10 123 1 307 4 48 1 275 1 309 1 277 1 311 4 58 1 236 2 186 1 188 2 103 1 63 4 64 8 240 1 148 1 150 1 68 3 287 1 71 2 201 2 31 4 289 1 209 18 332 8 162 1 36 4 260 1 85 1 
329 1 132 1 136 1 47 1 259 1 314 1 6 1 
47 1 6 1 329 1 99 1 132 1 136 1 115 1 259 1 140 1 337 1 314 1 315 1 
76 1 177 1 74 1 
329 1 92 1 136 1 47 1 177 1 14 1 199 1 74 1 
329 1 92 1 173 1 136 1 47 1 177 1 14 1 199 1 
329 1 92 1 173 1 136 1 47 1 177 1 14 1 199 1 
194 1 173 1 177 1 216 1 
194 1 173 1 177 1 216 1 
177 1 111 1 
177 1 74 1 
92 1 47 1 321 1 177 1 307 1 199 1 49 1 31 1 7 1 329 1 311 1 332 2 136 1 161 1 14 1 238 1 63 1 
0 1 194 1 23 1 56 1 177 1 139 1 142 1 165 1 74 1 216 1 
177 1 111 1 
161 1 177 4 84 1 5 1 74 1 
281 1 177 1 
177 1 74 1 
270 1 177 2 161 1 
161 1 177 2 74 1 
161 1 177 2 74 1 
329 1 92 1 136 1 47 1 177 1 14 1 199 1 74 1 
173 1 177 1 
195 1 329 1 2 1 136 1 213 1 47 1 160 1 218 1 180 1 
69 1 39 1 218 1 
195 1 2 1 214 1 314 1 218 1 
194 2 195 2 44 1 45 1 2 2 268 1 69 1 4 1 253 1 210 1 214 2 138 1 57 1 314 1 165 1 216 2 218 1 39 1 316 1 
301 1 76 1 234 1 114 1 
301 1 130 1 78 1 234 1 114 1 246 1 312 1 
78 1 325 1 191 1 
301 1 130 1 78 3 234 1 114 1 246 3 10 2 294 1 312 1 271 1 155 1 102 1 
301 1 130 1 78 2 234 1 114 1 184 1 246 2 312 1 297 1 
130 1 243 1 206 1 46 1 78 1 234 1 246 1 249 1 312 1 271 1 298 1 
301 1 130 1 78 1 234 1 246 1 312 1 271 1 
301 2 130 1 78 1 114 1 246 1 312 1 271 1 
301 1 223 1 246 2 227 1 271 1 130 2 98 1 78 2 234 1 312 2 
301 1 243 1 246 3 25 1 271 1 127 1 130 1 78 3 234 2 114 1 312 1 83 1 297 2 
301 1 317 1 46 1 246 2 271 1 249 1 94 1 130 1 78 2 256 1 234 1 114 1 312 1 297 1 298 2 
301 1 243 1 286 1 246 4 271 1 130 2 78 4 234 2 114 1 184 1 312 2 83 1 297 2 
301 1 130 1 78 1 234 1 114 1 246 1 312 1 271 1 
301 2 243 1 246 4 228 1 155 1 130 1 78 4 234 3 114 2 10 1 312 1 83 1 102 1 297 2 
301 1 130 1 222 1 233 1 212 1 78 2 234 1 114 1 246 2 312 1 271 1 297 1 
301 1 246 3 271 1 155 2 130 1 78 3 234 1 137 1 114 1 10 2 312 1 102 1 
255 2 234 2 93 1 323 1 
130 1 158 1 78 1 246 1 312 1 271 1 
301 1 130 1 78 2 234 1 114 1 246 2 312 1 271 1 127 1 297 1 
125 1 
301 1 130 1 78 1 234 1 114 1 246 1 312 1 271 1 
301 1 130 1 78 3 234 1 114 1 246 3 10 1 312 1 271 1 127 1 297 1 
243 1 234 1 228 1 83 1 
301 1 234 1 

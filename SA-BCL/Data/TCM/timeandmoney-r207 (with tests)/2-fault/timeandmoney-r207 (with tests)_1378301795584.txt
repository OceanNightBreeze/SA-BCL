#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 914 | * -> %
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | CONDITION | 4947 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
331 1 99 3 354 9 127 1 243 2 218 6 244 1 24 1 3 1 177 1 199 1 179 1 108 1 342 1 269 2 249 4 343 2 318 1 116 1 229 2 118 9 328 5 93 2 148 2 121 1 168 1 380 2 16 1 
331 1 99 3 354 9 127 1 243 2 218 6 244 1 24 1 3 1 177 1 199 1 179 1 108 1 342 1 269 2 249 4 343 2 318 1 116 1 229 2 118 9 328 5 93 2 148 2 121 1 168 1 16 1 380 2 
331 1 99 4 354 10 127 1 243 2 218 7 244 1 24 1 3 1 177 1 199 1 179 1 108 1 342 1 269 2 249 5 343 2 318 1 116 1 229 2 118 10 328 6 93 2 148 2 121 1 168 1 16 1 380 2 
331 1 99 2 354 7 127 1 243 2 218 4 244 1 24 1 3 1 177 1 199 1 179 1 108 1 342 1 269 2 249 3 343 2 318 1 116 1 229 2 118 7 328 4 93 2 148 2 121 1 16 1 380 1 
331 1 343 1 99 1 127 1 354 4 243 1 218 3 244 1 229 1 118 4 199 1 328 3 148 1 93 1 168 1 380 2 342 1 249 2 
331 1 343 1 127 1 354 2 243 1 156 1 229 1 279 1 116 1 118 2 328 1 199 1 144 1 148 1 179 1 269 1 
331 1 343 2 99 1 127 1 354 3 218 1 229 2 118 3 199 1 328 2 108 1 269 1 249 1 
331 1 284 1 99 3 354 9 127 1 243 1 218 7 244 1 199 1 108 1 249 4 269 1 342 1 343 2 229 2 118 9 328 5 93 1 148 1 121 1 235 1 16 1 380 2 168 1 
331 1 284 1 99 3 354 9 127 1 243 1 218 7 244 1 199 1 108 1 249 4 269 1 342 1 343 2 229 2 118 9 328 5 93 1 148 1 121 1 235 1 16 1 380 2 168 1 
36 1 166 1 336 1 
166 1 268 1 308 2 
339 1 222 2 304 2 65 1 367 2 349 2 23 2 317 2 
332 2 151 1 237 1 311 2 101 1 65 1 45 1 1 1 174 1 23 3 338 1 339 1 222 2 175 1 267 1 200 1 202 2 317 2 78 1 274 1 28 1 367 3 140 1 349 2 30 1 323 1 370 1 143 1 185 1 34 1 372 2 374 2 187 1 304 2 120 1 232 1 95 1 
361 1 222 1 304 1 65 1 367 1 349 1 167 1 352 1 23 1 317 1 
60 1 124 1 367 1 321 1 299 1 104 1 289 1 23 1 222 1 361 1 36 1 166 1 230 1 231 1 
124 1 367 1 321 1 349 1 299 2 289 1 23 1 222 1 361 1 36 1 304 1 166 1 230 1 231 2 317 1 
197 1 281 1 299 1 305 1 231 1 
293 1 36 1 166 1 281 1 299 2 305 1 231 2 215 1 
281 1 299 1 231 1 
65 1 367 1 349 1 299 1 23 1 361 1 222 1 266 1 304 1 167 1 305 1 231 1 352 1 317 1 
166 1 
293 1 195 1 36 1 166 1 281 1 299 2 305 1 231 2 
205 1 293 1 181 1 82 2 299 5 66 2 194 2 133 1 11 1 134 1 36 1 119 1 166 1 198 1 281 2 75 1 305 2 231 5 340 1 
78 1 332 1 101 1 140 1 367 2 30 1 349 1 370 1 333 1 174 1 23 2 338 1 222 1 302 1 34 1 372 1 304 1 188 1 200 1 202 1 
339 1 336 1 
339 2 222 2 304 1 367 2 276 1 349 1 357 1 317 1 23 2 
302 1 115 1 169 1 
78 1 332 1 18 1 101 1 367 1 140 1 30 1 370 1 174 1 23 1 338 1 339 1 34 1 372 1 200 1 202 1 
339 1 222 3 304 3 367 3 188 1 349 3 317 1 23 3 
361 1 222 1 304 1 367 1 349 1 167 1 23 1 
361 1 222 1 304 1 276 1 367 1 349 1 357 1 23 1 317 1 
124 1 332 1 151 1 237 1 311 1 101 1 65 1 45 1 333 1 174 1 289 1 357 1 23 4 338 1 48 1 339 1 49 1 222 3 361 1 175 1 267 1 200 1 202 1 317 2 78 1 274 1 28 1 140 1 367 4 321 1 30 1 349 3 299 1 370 1 143 1 34 1 372 1 374 2 304 3 120 1 188 1 230 1 231 1 95 1 
339 1 222 2 304 1 367 2 349 1 188 1 104 1 123 1 23 2 
124 1 367 3 321 1 349 3 299 1 333 1 289 1 357 1 23 3 48 1 361 1 222 3 304 3 166 1 188 2 230 1 231 1 149 1 317 1 
367 2 349 2 357 1 23 2 222 2 302 1 304 2 188 1 169 1 317 1 
78 1 332 1 101 1 367 1 140 1 30 1 370 1 174 1 23 1 338 1 339 1 34 1 372 1 200 1 202 1 
332 1 101 1 367 1 140 1 30 1 370 1 174 1 23 1 338 1 339 1 372 1 200 1 202 1 159 1 59 1 
125 1 151 1 311 4 45 1 128 1 175 1 267 1 6 1 274 2 53 1 207 1 28 1 323 2 369 1 115 2 298 1 300 1 256 1 302 2 373 1 374 2 213 1 95 1 169 2 
361 1 222 1 304 1 321 1 367 1 349 1 130 1 23 1 
367 5 349 4 333 1 104 1 357 1 23 5 222 5 339 1 186 1 304 4 188 2 283 1 123 1 317 1 
361 1 222 2 304 2 367 2 130 1 349 2 167 1 23 2 
126 1 180 1 
126 1 180 1 
15 1 38 1 
15 1 38 1 
15 1 38 1 
126 1 112 1 180 1 
126 1 322 1 180 1 
126 2 81 1 171 1 15 1 38 1 180 2 
126 1 112 1 180 1 
126 1 112 1 180 1 
126 1 180 1 47 1 
126 1 180 1 47 1 
126 1 180 1 47 1 
7 2 126 2 171 1 297 2 10 2 84 1 299 2 193 2 67 1 337 1 258 2 90 1 166 1 147 1 180 2 231 2 139 3 330 1 204 1 
126 1 172 1 173 1 193 1 23 2 339 1 222 2 180 1 139 1 7 1 27 1 367 2 322 1 349 2 10 1 84 1 299 1 324 1 227 1 258 1 165 1 304 2 375 1 231 1 
148 1 93 1 243 1 
148 1 243 1 156 1 
275 1 208 1 190 1 93 2 243 3 156 1 
9 1 275 1 208 1 93 1 243 2 156 1 
275 2 208 1 93 1 243 2 156 1 
61 1 172 1 261 1 66 1 194 1 72 2 312 2 198 2 315 1 75 3 6 1 268 1 316 1 205 1 293 1 365 1 80 1 53 1 27 1 55 1 82 1 299 5 227 1 256 1 210 2 373 1 36 1 281 1 166 2 305 4 231 5 308 3 
17 1 65 1 358 1 23 1 361 1 222 1 196 1 266 1 197 1 317 1 367 1 349 1 299 2 36 1 304 1 281 1 166 1 167 1 305 2 231 2 352 1 
61 1 66 1 194 1 72 2 312 1 315 1 198 2 75 3 6 1 268 2 365 1 80 1 27 1 53 1 55 1 82 1 299 3 256 1 210 2 11 1 373 1 36 1 166 3 305 2 231 3 308 4 
61 1 152 1 66 1 194 1 72 4 312 2 315 1 198 4 75 5 6 2 26 1 268 3 365 1 80 2 27 2 53 2 82 1 55 1 299 4 256 2 210 4 11 1 373 2 36 1 166 4 376 1 305 3 231 4 308 7 
245 1 370 1 336 1 
370 1 40 1 
106 1 
370 1 174 1 
296 1 245 2 101 1 252 1 370 3 174 1 
101 1 370 1 174 1 
191 1 370 1 
79 1 206 1 274 3 153 1 311 7 19 1 128 3 323 4 300 2 162 2 32 1 256 1 12 1 373 1 39 1 341 1 203 1 
79 1 206 1 274 3 153 1 311 7 19 1 128 3 323 4 300 2 162 2 32 1 256 1 12 1 373 1 39 1 341 1 203 1 
79 1 206 1 274 3 153 1 311 7 19 1 128 3 323 4 300 2 32 1 162 2 256 1 12 1 373 1 37 1 39 1 341 1 203 1 
151 1 153 2 311 31 19 1 45 1 128 10 359 4 225 1 176 1 6 3 341 2 51 1 110 3 203 1 77 1 76 1 79 2 206 5 274 15 80 3 53 3 28 1 323 16 32 1 162 3 300 5 256 4 57 1 12 1 374 2 373 4 39 2 150 1 95 1 
151 2 153 1 311 9 45 2 128 4 19 1 360 1 341 1 79 1 206 1 274 4 28 2 323 5 162 2 300 3 32 1 256 1 12 1 373 1 374 4 39 1 150 1 95 2 41 1 
331 1 332 1 354 2 127 1 239 1 131 1 155 1 243 2 218 1 156 1 71 1 220 1 199 1 202 1 250 1 269 1 343 1 346 1 140 1 30 1 229 1 88 1 372 1 118 2 35 1 190 1 328 1 148 1 93 1 94 1 
331 1 332 1 354 3 239 1 241 1 131 1 155 1 243 2 218 2 156 1 220 1 199 1 202 1 269 1 343 1 364 1 346 1 140 1 30 1 229 1 88 1 372 1 118 3 35 1 190 1 92 1 328 1 148 1 93 1 94 1 
331 1 332 1 354 2 239 1 241 1 131 1 155 1 243 2 218 2 156 1 220 1 199 1 202 1 269 1 346 1 140 1 30 1 372 1 118 2 92 1 190 1 328 1 93 1 148 1 94 1 
364 1 343 1 332 1 346 2 251 1 140 1 83 1 354 1 30 1 370 1 239 2 174 1 255 1 117 1 229 1 220 2 372 1 118 1 226 1 200 1 292 1 202 1 269 2 
332 1 354 1 127 1 239 1 131 1 155 1 243 2 156 1 71 1 220 1 202 1 269 1 343 1 346 1 140 1 30 1 229 1 88 1 372 1 118 1 35 1 92 1 190 1 148 1 93 1 94 1 
253 1 
332 2 238 1 104 1 242 2 289 1 194 1 198 2 200 2 292 1 202 2 247 2 248 1 293 3 205 1 8 2 299 5 211 2 163 2 166 2 307 1 308 2 310 2 60 1 124 1 174 1 66 1 219 1 23 1 222 1 361 1 221 1 315 1 178 1 75 2 363 1 268 2 366 1 83 1 82 1 140 1 367 1 321 1 30 1 85 1 86 1 370 1 142 1 372 2 89 1 36 1 281 6 230 1 282 2 377 4 231 5 
124 1 60 1 238 1 104 1 289 1 23 1 222 1 361 1 195 1 248 1 293 1 367 1 321 1 85 1 299 3 142 1 89 1 281 2 230 1 377 2 282 1 231 3 
124 1 60 1 238 1 104 1 289 1 23 1 222 1 361 1 195 1 248 1 293 1 367 1 321 1 85 1 299 3 142 1 163 1 89 1 36 1 281 1 166 1 230 1 377 3 231 3 
124 1 60 1 238 1 104 1 289 1 23 1 222 1 361 1 195 1 248 1 293 1 367 1 321 1 85 1 299 3 142 1 211 1 163 1 89 1 36 1 281 2 166 1 230 1 377 3 282 1 231 3 
0 1 238 1 104 1 289 1 242 2 194 1 195 1 198 1 201 1 248 1 247 2 293 3 205 1 8 2 299 5 211 4 163 4 166 5 310 2 124 1 60 1 63 1 66 1 23 1 22 1 361 1 222 1 135 1 75 1 178 1 268 2 321 1 367 1 82 1 85 1 86 1 142 1 89 1 36 5 281 7 230 1 282 4 377 6 231 5 
238 1 104 1 289 1 242 2 194 1 198 1 248 1 247 2 205 1 293 2 8 2 299 4 211 2 163 2 166 2 307 1 308 2 310 2 124 1 60 1 66 1 23 1 361 1 222 1 75 1 178 1 268 2 321 1 367 1 82 1 86 1 85 1 142 1 89 1 36 1 281 4 230 1 377 4 282 2 231 4 
124 1 60 1 63 1 238 1 104 1 242 2 289 1 66 1 194 1 23 1 22 1 222 1 361 1 135 1 198 1 178 1 75 1 247 2 248 1 268 2 293 2 205 1 8 2 82 1 367 1 321 1 86 1 85 1 299 4 142 1 211 2 163 2 89 1 36 1 166 1 281 4 230 1 282 2 377 4 231 4 310 2 
124 1 60 1 63 1 238 1 104 1 242 2 289 1 66 1 194 1 23 1 22 1 222 1 361 1 135 1 198 1 178 1 75 1 247 2 248 1 268 2 293 2 205 1 8 2 82 1 367 1 321 1 86 1 85 1 299 4 142 1 211 2 163 2 89 1 36 1 166 1 281 4 230 1 282 2 377 4 231 4 310 2 
124 1 60 1 238 1 154 2 104 1 289 1 66 1 194 1 23 1 222 1 361 1 135 1 74 1 198 1 178 1 75 1 247 2 248 1 293 2 205 1 8 2 82 1 367 1 321 1 85 1 299 4 254 2 142 1 161 1 211 2 163 2 89 1 36 1 166 1 281 4 230 1 282 2 377 4 146 1 231 4 308 2 
124 1 60 1 63 1 238 1 104 1 242 2 66 1 289 1 194 1 23 1 22 1 222 1 361 1 135 1 198 1 178 1 75 1 201 1 247 2 248 1 268 2 293 2 205 1 8 2 82 1 367 1 321 1 86 1 85 1 299 4 142 1 211 3 163 3 89 1 36 1 166 1 281 5 230 1 377 5 282 3 231 4 310 2 
124 1 60 1 63 1 238 1 104 1 242 2 66 1 289 1 194 1 23 1 22 1 222 1 361 1 135 1 198 1 178 1 75 1 201 1 247 2 248 1 268 2 293 2 205 1 8 2 82 1 367 1 321 1 86 1 85 1 299 4 142 1 211 3 163 3 89 1 36 1 166 1 281 5 230 1 377 5 282 3 231 4 310 2 
238 1 154 2 104 1 289 1 194 1 198 1 248 1 247 2 205 1 293 2 8 2 299 4 254 2 211 2 163 2 166 1 307 1 308 2 124 1 60 1 66 1 23 1 361 1 222 1 74 1 75 1 178 1 321 1 367 1 82 1 85 1 142 1 89 1 36 1 281 4 230 1 377 4 282 2 231 4 
151 1 153 1 311 6 45 1 128 2 19 1 336 1 339 2 175 1 267 1 341 1 274 3 28 1 369 1 323 3 115 1 32 1 300 2 162 1 256 1 302 1 12 1 374 2 373 1 169 1 95 1 
151 2 311 14 353 1 128 2 45 2 1 1 359 3 339 1 175 1 25 1 267 2 6 1 110 3 77 1 206 1 274 6 272 1 80 2 182 1 53 2 28 2 115 11 323 8 300 1 256 2 57 1 164 1 302 11 374 4 373 1 120 1 95 2 169 4 
332 1 151 1 101 1 18 1 311 2 353 1 45 1 333 1 1 1 174 1 23 2 338 1 339 1 222 1 175 1 314 1 291 1 200 1 267 1 202 1 158 1 78 1 274 1 140 1 28 1 367 2 30 1 349 1 323 1 370 1 34 1 372 1 374 2 304 1 120 1 188 1 169 1 95 1 
285 1 332 3 151 3 237 2 153 1 101 2 45 3 333 1 1 1 338 2 339 2 200 1 202 3 6 2 341 1 160 1 206 4 344 2 53 2 349 1 115 7 162 1 300 4 256 3 12 1 302 7 304 1 259 2 120 1 169 7 311 20 353 1 19 1 128 8 260 1 174 2 20 2 23 3 222 1 175 3 267 3 78 2 274 10 80 2 367 3 28 3 140 2 30 2 323 10 370 2 32 1 87 2 34 2 372 3 373 3 374 6 92 1 188 1 95 3 
332 8 151 2 287 1 311 2 216 1 129 1 45 2 1 1 174 2 23 1 222 1 175 2 200 2 267 2 202 7 292 1 250 1 274 1 183 1 347 1 367 1 140 2 28 2 83 1 349 1 30 2 369 1 323 1 370 3 31 1 372 8 374 4 187 2 304 1 120 1 92 1 188 1 309 1 95 2 
151 1 311 3 353 1 217 1 128 1 45 1 357 1 23 1 222 1 175 1 267 1 6 1 317 1 80 1 274 2 53 1 28 1 367 1 349 1 115 1 323 1 300 1 256 1 302 1 374 2 373 1 304 1 169 1 95 1 
206 1 151 1 53 1 311 2 28 1 128 1 45 1 115 1 369 1 323 2 256 1 302 1 175 1 374 2 267 1 213 1 169 1 95 1 
125 1 274 2 151 1 311 2 28 1 128 1 45 1 115 1 369 1 300 1 302 1 175 1 374 2 373 1 267 1 6 1 169 1 95 1 
151 1 311 4 45 1 128 2 175 1 267 1 6 1 206 1 80 1 274 2 53 1 28 1 323 2 369 1 115 2 300 1 256 1 302 2 374 2 373 1 95 1 169 2 
206 1 151 1 53 1 311 2 28 1 128 1 45 1 115 1 323 2 31 1 256 1 302 1 175 1 374 2 267 1 213 1 169 1 95 1 
125 1 274 2 151 1 311 2 28 1 128 1 45 1 115 1 31 1 300 1 302 1 175 1 374 2 373 1 267 1 6 1 169 1 95 1 
151 1 311 4 45 1 128 2 175 1 267 1 6 1 206 1 80 1 274 2 53 1 28 1 323 2 115 2 31 1 300 1 256 1 302 2 374 2 373 1 95 1 169 2 
151 1 311 4 45 1 128 2 175 1 267 1 6 1 206 1 80 1 274 2 53 1 28 1 323 2 115 2 300 1 256 1 302 2 374 2 373 1 95 1 169 2 
332 1 237 1 151 1 311 2 101 1 45 1 1 1 174 1 23 1 338 1 339 1 175 1 200 1 267 1 202 1 78 1 274 1 140 1 367 1 28 1 30 1 323 1 370 1 34 1 372 1 374 2 120 1 95 1 
332 1 151 1 311 2 101 1 45 1 1 1 174 1 23 1 338 1 339 1 175 1 200 1 267 1 202 1 159 1 274 1 140 1 367 1 28 1 30 1 323 1 325 1 370 1 372 1 374 2 120 1 59 1 95 1 
151 1 311 4 353 1 45 1 128 2 175 1 267 1 6 1 206 1 80 1 274 2 53 1 28 1 323 2 115 2 300 1 256 1 302 2 374 2 373 1 95 1 169 2 
332 1 237 1 151 1 311 4 101 1 128 2 45 1 174 1 23 1 338 1 175 1 267 1 6 1 202 1 250 1 78 1 206 1 274 2 80 1 53 1 140 1 367 1 28 1 30 1 115 2 323 2 370 1 300 1 256 1 87 1 302 2 34 1 372 1 373 1 374 2 169 2 95 1 
151 1 311 3 353 1 128 1 45 1 357 1 23 1 222 1 175 1 267 1 6 1 317 1 206 1 274 1 80 1 53 1 184 1 28 1 367 1 349 1 323 2 115 1 256 1 302 1 373 1 374 2 304 1 95 1 169 1 
151 2 192 1 311 19 45 2 128 6 355 2 359 2 136 1 6 3 109 1 110 1 77 1 270 1 206 3 274 10 80 3 53 3 28 2 114 2 323 9 300 3 256 3 57 1 303 1 374 4 373 3 189 1 214 1 95 2 41 1 
151 3 192 2 311 26 128 4 45 3 355 4 356 1 132 1 359 2 136 2 138 1 6 2 110 2 270 1 77 2 206 2 274 12 80 3 53 3 113 1 28 3 114 1 323 14 300 2 256 3 373 2 303 1 374 6 189 1 233 1 306 1 150 2 95 3 41 1 
151 3 192 2 153 1 45 3 6 4 341 1 110 3 206 4 53 4 113 1 114 1 350 1 300 4 162 1 256 5 57 1 12 1 303 1 306 1 214 1 311 41 128 8 19 1 355 4 356 1 359 4 132 1 136 1 138 1 270 1 77 3 80 4 274 21 28 3 323 20 32 1 373 5 374 6 189 1 233 1 150 1 41 1 95 3 
151 4 153 1 192 2 311 38 19 1 45 4 128 7 356 1 355 4 132 1 359 4 136 1 138 1 6 3 341 1 110 3 77 3 270 1 206 3 274 18 80 4 53 4 113 1 28 4 114 1 323 20 350 1 162 1 32 1 300 4 256 5 57 1 12 1 303 1 374 8 373 4 189 1 233 1 306 1 150 2 214 1 95 4 41 1 
151 2 153 1 192 1 311 52 19 1 45 2 128 14 356 1 355 4 132 1 359 4 136 1 25 2 138 1 6 7 341 1 110 4 77 2 270 1 206 7 274 25 80 7 53 7 113 1 28 2 114 1 323 27 162 1 32 1 300 7 256 8 57 2 12 1 303 1 374 4 373 8 189 1 233 1 306 1 150 1 95 2 41 1 
7 1 126 1 258 1 171 1 90 1 368 1 10 1 180 1 193 1 337 1 
165 1 322 1 
7 1 126 1 58 1 327 1 258 1 10 1 180 1 234 1 193 1 
7 1 126 1 171 1 297 1 84 1 10 1 299 1 193 1 67 1 337 1 258 1 90 1 166 1 147 1 231 1 180 1 139 2 204 1 
7 1 126 1 171 1 297 1 84 1 10 1 299 1 193 1 67 1 337 1 258 1 90 1 166 1 147 1 231 1 180 1 139 2 204 1 
7 1 126 1 171 1 297 1 84 1 10 1 299 1 193 1 67 1 337 1 258 1 90 1 166 1 147 1 231 1 180 1 139 2 204 1 
112 1 81 1 378 1 
112 1 81 1 378 1 
62 1 47 1 
81 1 62 1 47 1 
324 1 173 1 
126 1 172 1 173 1 335 1 193 1 23 2 339 1 222 2 180 1 139 1 7 1 27 1 297 1 367 2 322 1 10 1 349 2 299 1 324 1 227 1 258 1 165 1 304 2 375 1 147 1 305 1 231 1 
112 1 378 1 
81 1 62 1 47 1 
43 1 332 2 151 1 64 1 311 2 353 1 45 1 1 1 174 1 262 1 23 2 222 2 264 1 175 1 223 1 267 1 202 2 274 1 183 1 347 1 140 1 28 1 367 2 30 1 323 1 370 1 372 2 374 2 187 2 120 1 95 1 
332 2 54 1 140 1 102 1 30 1 239 1 131 1 243 2 156 1 33 1 88 1 372 2 190 1 92 1 148 1 93 1 202 2 94 1 250 1 
332 1 54 1 140 1 30 1 239 1 131 1 243 2 156 1 278 1 88 1 372 1 190 1 92 1 148 1 93 1 202 1 94 1 
332 1 236 1 140 1 83 1 30 1 370 1 239 1 174 1 33 1 117 1 372 1 200 1 202 1 292 1 
332 1 54 1 102 1 140 1 30 1 239 1 131 1 243 2 156 1 33 1 88 1 372 1 190 1 92 1 148 1 93 1 202 1 94 1 
334 1 
181 1 36 1 119 1 166 1 198 1 75 1 336 1 
66 1 242 1 194 1 198 1 75 1 268 1 205 1 293 1 82 1 86 1 299 1 36 1 166 2 281 1 231 1 308 1 310 1 
191 2 332 3 100 1 101 3 103 2 289 2 194 4 2 1 245 2 198 8 200 1 5 1 202 3 6 2 250 1 205 4 293 3 345 1 295 2 53 2 252 1 299 5 301 2 256 2 210 6 13 2 119 1 166 8 308 12 174 3 66 4 20 2 219 1 72 6 73 2 313 2 315 2 75 9 268 6 271 2 181 1 80 2 140 3 82 4 30 4 370 10 277 2 372 3 373 2 36 2 281 5 145 1 231 5 40 3 
66 2 356 1 194 2 219 1 359 1 72 5 290 1 315 1 198 5 75 8 138 1 6 2 268 3 110 1 77 1 293 1 271 2 205 2 80 2 53 2 113 1 82 2 299 1 256 2 210 5 13 1 373 2 36 2 281 1 166 5 231 1 233 1 306 1 308 6 329 1 
63 1 153 1 65 1 19 1 66 1 194 1 23 1 361 1 222 1 266 1 246 1 198 2 75 2 341 1 317 1 271 2 205 1 367 1 82 1 349 1 299 1 256 2 13 1 373 1 304 1 167 1 231 1 352 1 
205 1 181 1 82 1 66 1 194 1 119 1 36 1 198 1 166 1 75 1 
271 2 80 2 53 2 20 1 256 2 210 5 72 5 13 1 373 2 198 5 166 5 75 5 6 2 308 10 268 5 
293 1 36 1 166 1 281 1 299 1 231 1 
332 4 97 1 174 1 66 2 21 1 194 2 219 2 315 2 198 2 200 2 75 2 5 1 363 1 202 4 292 1 205 1 293 2 366 1 140 1 82 2 83 1 30 1 299 3 370 1 11 1 372 4 281 4 145 2 231 3 
332 1 151 1 237 1 311 1 65 1 101 1 45 1 174 1 23 3 338 1 339 1 222 2 175 1 200 1 267 1 202 1 317 2 78 1 274 1 367 3 140 1 28 1 349 2 30 1 370 1 143 1 34 1 372 1 374 2 304 2 120 1 95 1 
205 1 82 1 162 1 66 1 194 1 210 2 219 1 72 2 36 2 198 2 315 1 166 4 75 1 268 2 308 4 
98 1 258 1 10 1 
258 1 10 1 141 1 324 1 337 1 
98 1 258 1 10 1 
98 1 258 1 10 1 
258 1 14 1 10 1 
258 1 14 1 10 1 
258 1 14 1 10 1 
258 1 10 1 
126 1 180 1 
206 1 274 4 151 2 153 1 311 8 28 2 19 1 128 3 45 2 323 4 162 1 300 2 32 1 256 1 12 1 373 1 374 4 341 1 150 1 95 2 
274 3 153 1 311 6 128 2 19 1 323 3 162 1 32 1 300 2 256 1 336 1 12 1 373 1 341 1 
206 1 274 2 80 1 151 1 53 1 311 4 28 1 128 2 45 1 323 2 300 1 256 1 265 1 373 1 374 2 6 1 95 1 
206 1 274 4 80 1 53 1 311 7 128 2 323 3 300 1 256 1 359 2 57 1 373 1 6 1 110 1 77 1 
151 2 153 2 311 23 19 1 128 9 45 2 359 2 25 1 6 2 341 2 110 2 206 4 80 2 274 12 53 2 28 2 323 11 162 1 32 1 300 5 351 1 256 3 57 1 12 1 164 1 373 3 374 4 150 2 95 2 
274 1 311 1 359 1 
311 1 323 1 110 1 
206 1 274 3 80 1 151 1 53 1 311 6 28 1 45 1 128 3 323 3 300 2 20 1 256 1 265 1 374 2 373 1 6 1 95 1 
151 1 311 12 45 1 128 2 356 1 359 1 6 2 138 1 110 1 77 1 206 1 274 6 80 2 53 2 113 1 28 1 323 6 300 1 256 2 374 2 373 2 233 1 306 1 95 1 41 1 
206 1 274 3 153 1 373 1 311 6 128 2 19 1 323 3 300 1 341 1 256 1 
206 1 274 2 151 1 153 1 311 3 28 1 128 2 45 1 323 1 300 1 32 1 351 1 12 1 374 2 341 1 150 1 95 1 
206 2 274 5 151 1 153 2 311 10 28 1 45 1 128 5 19 1 323 5 300 3 256 2 374 2 373 2 246 1 341 2 95 1 41 1 
206 1 151 1 53 1 374 2 311 2 28 1 128 1 45 1 323 2 256 1 95 1 41 1 
206 1 274 2 80 1 151 1 53 1 311 4 28 1 128 2 45 1 323 2 300 1 256 1 373 1 374 2 6 1 41 1 95 1 
206 1 274 2 151 3 153 1 311 3 28 3 45 3 128 2 323 1 351 1 300 1 374 6 341 1 150 1 214 1 41 1 95 3 
151 5 153 3 311 34 19 2 45 5 128 12 359 4 265 1 225 1 176 1 6 3 341 3 51 1 110 3 77 1 206 5 274 18 80 3 53 3 28 5 323 16 162 1 32 1 351 1 300 7 256 5 57 1 12 1 374 10 373 5 150 2 214 1 95 5 41 1 
151 1 153 1 311 8 45 1 128 2 19 1 359 1 341 1 110 1 77 1 274 4 28 1 323 4 162 1 32 1 300 2 256 1 12 1 373 1 374 2 233 1 95 1 41 1 
151 2 153 1 311 11 19 1 45 2 128 3 359 2 265 1 341 1 110 1 77 1 206 1 274 5 80 1 53 1 28 2 323 6 162 1 300 2 32 1 256 2 57 1 12 1 373 1 374 4 233 1 41 1 95 2 
151 3 153 1 311 19 19 1 45 3 128 4 356 1 359 1 265 1 6 2 138 1 341 1 110 1 77 1 206 1 274 10 80 2 53 2 113 1 28 3 323 9 162 1 32 1 300 3 256 3 12 1 374 6 373 3 233 1 306 1 150 1 95 3 41 1 
151 3 153 1 311 17 19 1 45 3 128 5 356 1 359 1 265 1 6 1 138 1 341 1 110 1 77 1 206 2 274 7 80 2 53 2 113 1 28 3 323 10 162 1 32 1 300 3 256 3 12 1 374 6 373 2 233 1 306 1 150 1 95 3 41 1 
151 1 153 1 311 8 45 1 128 2 19 1 359 1 341 1 110 1 77 1 274 4 28 1 323 4 162 1 32 1 300 2 256 1 12 1 373 1 374 2 233 1 95 1 41 1 
151 1 311 12 45 1 128 2 356 1 359 1 6 2 138 1 110 1 77 1 206 1 274 6 80 2 53 2 113 1 28 1 323 6 300 1 256 2 374 2 373 2 233 1 306 1 95 1 41 1 
151 4 153 1 311 18 19 1 45 4 128 5 356 1 359 1 265 1 138 1 6 1 341 1 110 1 77 1 206 2 274 8 80 2 53 2 113 1 28 4 323 10 162 1 32 1 300 3 256 3 12 1 374 8 373 2 233 1 306 1 150 2 95 4 41 1 
151 4 311 16 45 4 128 6 356 1 359 1 138 1 6 2 110 1 77 1 206 3 274 7 80 3 53 3 113 1 28 4 323 9 300 3 256 3 374 8 373 2 233 1 306 1 150 2 41 1 95 4 214 1 
206 3 274 4 153 3 311 7 128 6 19 1 323 3 32 2 300 3 256 1 12 1 373 1 341 3 
151 4 153 1 311 18 19 1 45 4 128 4 356 1 359 1 138 1 6 1 341 1 110 1 77 1 206 1 274 8 80 2 53 2 113 1 28 4 323 10 162 1 32 1 300 3 256 3 12 1 374 8 373 2 233 1 306 1 150 2 41 1 95 4 214 1 
339 1 222 1 157 1 367 1 104 1 123 1 23 1 
286 1 367 1 104 1 240 1 23 1 70 1 339 1 222 1 157 1 50 1 379 1 123 1 
332 1 372 1 140 1 83 1 30 1 200 1 370 1 292 1 202 1 174 1 336 1 
332 1 101 1 367 2 140 1 30 1 349 1 370 1 174 1 23 2 338 1 339 1 222 1 34 1 372 1 304 1 188 1 200 1 202 1 
191 1 332 1 101 2 103 1 174 2 23 2 338 1 339 1 222 2 361 1 202 1 140 1 367 2 321 1 349 2 30 1 370 3 34 1 372 1 304 1 188 1 145 1 230 1 
191 1 332 2 101 2 103 1 174 2 23 2 338 1 339 1 222 2 361 1 202 2 159 1 140 1 367 2 321 1 349 2 30 1 209 1 370 3 372 2 304 1 188 1 145 1 230 1 
96 1 191 1 332 3 101 1 103 1 174 1 289 1 245 1 200 1 202 3 140 1 30 1 209 1 299 2 370 4 372 3 36 1 281 1 166 1 145 1 231 2 40 1 122 1 
191 1 332 3 101 1 103 1 140 1 30 1 209 1 299 2 370 4 289 1 174 1 301 1 372 3 36 1 245 1 166 1 281 1 200 1 145 1 231 2 202 3 40 1 
332 1 372 1 287 1 140 1 30 1 202 1 
332 7 183 1 287 1 252 1 101 1 216 1 140 2 129 1 30 3 370 3 174 2 105 1 257 1 372 7 187 1 92 1 4 1 200 2 202 6 309 1 250 1 
332 1 237 1 151 2 153 1 101 1 45 2 338 1 339 2 202 1 341 1 250 1 344 1 349 1 115 1 300 2 162 1 256 1 12 1 302 1 304 1 169 1 311 6 353 1 128 2 19 1 262 1 174 1 23 2 222 1 175 2 267 2 78 1 274 3 367 2 28 2 140 1 30 1 323 3 370 1 32 1 87 1 34 1 372 1 374 4 373 1 188 1 95 2 
332 1 66 2 289 1 194 2 73 1 245 1 198 1 75 1 200 1 5 1 202 1 205 2 293 1 181 1 295 1 82 2 299 3 370 2 301 1 277 1 372 1 36 1 119 1 166 1 281 2 305 1 231 3 40 1 
332 2 345 1 287 1 252 1 101 1 140 1 30 2 370 2 174 1 372 2 245 1 202 2 250 1 
332 4 83 1 140 1 30 1 209 1 370 1 174 1 372 4 362 1 200 1 202 4 292 1 250 1 
332 2 101 1 140 1 30 2 260 1 370 1 174 1 105 1 371 1 372 2 107 1 4 1 145 1 202 2 
332 1 372 1 140 1 30 1 200 1 148 1 202 1 94 1 243 1 156 1 
332 2 183 1 140 1 30 1 370 1 174 1 264 1 372 2 92 1 202 2 250 1 
332 5 183 1 83 1 140 2 216 1 129 1 30 2 370 3 174 2 372 5 362 1 145 1 200 1 292 1 202 4 250 1 
332 5 183 1 83 1 140 2 216 1 30 2 370 3 174 2 372 5 224 1 362 1 145 1 200 1 292 1 202 4 250 1 
332 1 101 1 367 2 140 1 30 1 349 1 370 1 174 1 23 2 338 1 339 1 222 1 372 1 304 1 188 1 200 1 202 1 159 1 
332 1 252 1 101 1 140 1 30 2 370 1 174 1 105 1 257 1 372 1 4 1 145 1 202 1 
222 1 43 1 294 1 223 1 64 1 367 1 280 1 91 1 23 1 
42 1 44 1 91 1 
69 1 339 1 294 1 280 1 91 1 
42 1 124 1 294 2 44 1 321 1 299 2 289 1 69 2 48 1 339 1 361 1 228 1 36 1 280 2 166 1 91 1 230 1 305 1 231 2 
331 1 328 1 199 1 336 1 
331 1 343 1 229 1 118 1 354 1 328 1 199 1 
346 1 118 1 269 1 
343 1 170 1 331 1 348 1 127 1 354 3 288 1 229 1 118 3 328 1 199 1 179 2 
331 1 343 1 229 1 118 2 354 2 328 1 199 1 218 1 380 1 
343 1 229 1 118 1 354 1 127 1 328 1 148 1 93 1 243 1 249 1 342 1 
331 1 343 1 229 1 118 1 354 1 127 1 328 1 
331 2 343 1 229 1 118 1 354 1 127 1 199 1 
331 1 343 2 319 1 127 1 354 2 229 2 212 1 118 2 328 1 137 1 
331 1 343 1 99 1 127 1 354 3 218 2 229 1 118 3 199 1 328 2 121 1 16 1 249 1 
331 1 343 1 127 1 354 2 243 2 156 1 218 1 229 1 263 1 118 2 190 1 328 1 199 1 93 1 148 1 
331 1 343 2 99 1 127 1 354 4 218 2 229 2 118 4 199 1 328 2 168 1 380 1 249 1 
331 1 343 1 229 1 118 1 354 1 127 1 328 1 199 1 
170 1 331 2 343 1 99 1 320 1 354 4 288 1 218 2 229 1 118 4 199 2 328 3 179 1 249 1 
331 1 343 1 52 1 284 1 127 1 354 2 218 1 229 1 326 1 118 2 328 1 199 1 
170 1 343 1 331 1 127 1 354 3 288 2 68 1 229 1 118 3 328 1 199 1 179 2 
111 1 273 1 46 2 328 2 
343 1 229 1 118 1 354 1 127 1 29 1 
331 1 343 1 229 1 118 2 354 2 127 1 328 1 199 1 121 1 218 1 
56 1 
331 1 343 1 229 1 118 1 354 1 127 1 328 1 199 1 
331 1 343 1 229 1 118 3 354 3 127 1 328 1 199 1 121 1 179 1 218 1 
99 1 320 1 328 1 249 1 
331 1 328 1 

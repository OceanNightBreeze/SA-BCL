#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 98 38 366 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 98 38 366 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 98 38 366 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 98 38 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V | ASSIGN | 1012 | = null
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
337 1 267 1 32 1 339 3 5 1 62 2 6 1 255 2 215 1 318 9 63 2 114 2 320 4 323 1 139 1 220 1 275 1 278 1 176 1 224 9 244 2 106 1 308 2 50 5 375 6 25 2 357 1 358 1 
337 1 267 1 32 1 339 3 5 1 62 2 6 1 255 2 215 1 318 9 63 2 114 2 320 4 323 1 139 1 220 1 275 1 278 1 176 1 244 2 224 9 106 1 308 2 50 5 375 6 25 2 357 1 358 1 
337 1 267 1 32 1 339 4 5 1 62 2 6 1 255 2 215 1 318 10 63 2 114 2 320 5 323 1 139 1 220 1 275 1 278 1 176 1 244 2 224 10 106 1 308 2 50 6 375 7 25 2 357 1 358 1 
337 1 267 1 32 1 339 2 5 1 62 2 6 1 255 2 215 1 318 7 63 2 114 2 320 3 139 1 220 1 275 1 278 1 176 1 244 2 224 7 106 1 308 2 50 4 375 4 25 1 357 1 358 1 
267 1 224 4 176 1 244 1 32 1 339 1 308 1 5 1 255 1 50 3 375 3 63 1 318 4 114 1 320 2 323 1 139 1 25 2 
267 1 224 2 32 1 308 1 5 1 62 1 255 1 6 1 50 1 318 2 247 1 63 1 114 1 357 1 379 1 17 1 
267 1 224 3 106 1 32 1 308 2 339 1 5 1 62 1 255 2 50 2 375 1 318 3 320 1 
337 1 267 1 338 1 32 1 339 3 5 1 62 1 255 2 318 9 63 1 320 4 114 1 139 1 323 1 40 1 278 1 106 1 224 9 176 1 244 1 308 2 50 5 375 7 25 2 
337 1 267 1 338 1 32 1 339 3 5 1 62 1 255 2 318 9 63 1 320 4 114 1 139 1 323 1 40 1 278 1 106 1 224 9 176 1 244 1 308 2 50 5 375 7 25 2 
294 1 164 1 210 1 
189 1 1 2 164 1 
311 2 46 1 273 2 91 2 356 2 71 2 230 2 219 1 
131 1 253 1 112 1 91 2 193 1 64 1 361 1 342 1 273 3 69 1 302 1 71 2 219 1 172 2 15 2 202 1 305 1 75 1 46 1 203 2 369 1 207 1 121 1 21 1 329 1 311 2 312 1 376 1 289 1 228 2 85 1 183 2 86 1 356 3 230 2 316 1 380 1 
311 1 280 1 46 1 273 1 91 1 213 1 356 1 71 1 230 1 270 1 
190 1 251 1 174 1 205 1 149 1 300 1 210 1 270 1 344 1 273 1 356 1 71 1 164 1 141 1 
251 2 190 2 174 1 91 1 149 1 300 1 210 1 270 1 311 1 273 1 356 1 230 1 71 1 164 1 141 1 
251 1 190 1 116 1 125 1 348 1 
251 2 190 2 158 1 116 1 125 1 8 1 164 1 210 1 
251 1 190 1 116 1 
190 1 251 1 280 1 46 1 91 1 213 1 270 1 311 1 125 1 126 1 273 1 356 1 230 1 71 1 
164 1 
251 2 190 2 158 1 116 1 125 1 164 1 210 1 89 1 
190 5 251 5 371 2 298 1 285 2 226 1 210 1 34 1 12 1 158 1 343 1 125 2 116 2 68 1 39 1 53 1 186 1 164 1 263 2 
305 1 253 1 369 1 203 1 281 1 91 1 299 1 311 1 376 1 361 1 289 1 228 1 85 1 273 2 183 1 86 1 302 1 356 2 71 1 57 1 
294 1 219 1 
359 1 130 1 91 1 311 1 273 2 356 2 71 2 230 1 219 2 
113 1 57 1 232 1 
305 1 253 1 203 1 369 1 3 1 376 1 361 1 289 1 228 1 273 1 85 1 183 1 86 1 302 1 356 1 219 1 
130 1 43 1 205 1 268 1 281 2 91 4 299 1 311 4 273 5 356 5 71 5 230 1 219 1 345 1 
311 2 280 1 273 2 91 2 356 2 92 1 71 2 270 1 
311 3 281 1 273 3 91 3 356 3 230 1 71 3 219 1 
311 1 280 1 273 1 91 1 356 1 71 1 270 1 
359 1 311 1 130 1 273 1 91 1 356 1 71 1 230 1 270 1 
130 1 190 1 251 1 253 1 112 1 91 3 299 1 300 1 270 1 64 1 361 1 342 1 273 4 137 1 302 1 71 3 219 1 172 1 15 2 141 1 202 1 305 1 75 1 174 1 369 1 46 1 203 1 281 1 149 1 121 1 21 1 311 3 312 1 376 1 289 1 228 1 85 1 183 1 86 1 356 4 162 1 230 2 316 1 380 1 
311 1 205 1 268 1 273 2 281 1 91 1 356 2 71 2 219 1 
130 1 251 1 190 1 223 1 174 1 281 2 91 3 149 1 299 1 300 1 270 1 311 3 273 3 137 1 356 3 230 1 71 3 164 1 141 1 
130 1 281 1 91 2 113 1 311 2 273 2 356 2 230 1 71 2 57 1 
305 1 253 1 203 1 369 1 361 1 376 1 289 1 228 1 273 1 85 1 183 1 86 1 302 1 356 1 219 1 
305 1 253 1 203 1 369 1 206 1 376 1 289 1 228 1 273 1 85 1 183 1 160 1 86 1 356 1 219 1 
30 1 112 1 133 1 113 2 216 1 64 1 95 1 342 2 69 2 218 1 99 1 15 2 172 4 202 1 75 1 145 1 368 1 204 1 151 1 250 1 57 2 316 1 232 2 380 1 
311 1 273 1 91 1 149 1 356 1 71 1 92 1 270 1 
277 1 360 1 
277 1 360 1 
241 1 84 1 
241 1 84 1 
241 1 84 1 
11 1 277 1 360 1 
11 1 277 1 360 1 
277 1 360 1 330 1 
277 2 360 2 236 1 261 1 241 1 84 1 
11 1 277 1 360 1 
277 1 360 1 262 1 
277 1 360 1 262 1 
277 1 360 1 262 1 
277 1 190 1 251 1 360 1 297 1 4 1 91 2 330 1 23 1 288 1 180 1 311 2 271 1 156 1 157 1 124 1 123 1 273 2 182 1 171 1 356 2 71 2 219 1 293 1 
277 2 143 1 190 2 251 2 104 1 0 1 360 2 328 1 4 2 261 1 180 2 288 1 123 2 377 2 182 2 55 1 101 1 164 1 293 3 
114 1 244 1 63 1 
114 1 63 1 17 1 
291 1 244 2 14 1 81 1 63 3 17 1 
291 1 244 1 97 1 81 1 63 2 17 1 
244 1 291 2 81 1 63 2 17 1 
189 1 317 2 251 5 190 5 252 1 1 3 298 3 271 1 116 1 301 2 68 1 96 1 171 1 218 1 304 1 222 1 242 1 276 2 364 1 145 1 368 1 371 1 151 1 285 1 226 2 210 1 156 1 158 1 125 4 355 1 263 1 164 2 
189 3 317 6 251 9 190 9 1 9 298 8 7 1 34 1 258 1 116 6 301 6 68 1 96 2 218 3 222 3 364 2 365 5 145 3 367 1 368 3 371 2 348 5 151 3 150 1 285 2 226 6 210 1 22 1 156 4 158 1 290 1 125 7 355 1 164 5 263 2 
189 2 317 2 251 3 190 3 252 1 1 4 298 3 34 1 301 2 96 1 218 1 242 1 364 1 276 1 222 1 145 1 368 1 371 1 151 1 285 1 226 2 210 1 156 1 125 2 164 3 263 1 
189 3 317 4 251 4 190 4 252 1 1 7 298 5 34 1 258 1 301 4 96 1 218 2 242 1 364 1 276 2 222 2 145 2 367 1 368 2 371 1 151 2 285 1 226 4 210 1 156 2 290 1 125 3 164 4 263 1 
294 1 376 1 54 1 
376 1 197 1 
225 1 
376 1 289 1 85 1 
376 1 78 1 
376 1 289 1 
376 3 289 1 90 1 85 1 54 2 56 1 
45 1 243 1 368 1 167 1 349 1 151 1 134 1 51 1 216 2 95 3 36 1 342 3 69 4 324 2 314 1 172 7 118 1 
45 1 243 1 368 1 167 1 349 1 151 1 134 1 51 1 216 2 95 3 36 1 342 3 69 4 324 2 314 1 172 7 118 1 
45 1 243 1 368 1 327 1 167 1 349 1 151 1 134 1 51 1 216 2 95 3 36 1 342 3 69 4 324 2 314 1 172 7 118 1 
167 1 235 1 134 2 216 5 64 1 95 10 169 1 36 2 342 15 136 1 170 1 69 16 324 3 218 3 15 2 172 31 118 2 222 3 202 1 145 3 75 1 243 2 45 5 368 4 349 1 151 4 51 1 310 4 335 3 353 1 314 1 315 1 380 1 265 1 
202 2 75 2 45 1 243 1 368 1 167 1 151 1 134 1 195 1 51 1 216 3 246 1 64 2 95 4 36 1 342 4 69 5 324 2 314 1 315 1 172 9 15 4 118 1 380 2 
267 1 32 1 5 1 62 1 255 1 214 1 269 1 318 2 63 2 114 1 13 1 14 1 17 1 201 1 305 1 203 1 244 1 224 2 370 1 308 1 179 1 50 1 153 1 375 1 332 1 228 1 183 1 86 1 231 1 26 1 
267 1 32 1 62 1 255 1 214 1 269 1 318 3 63 2 114 1 13 1 14 1 17 1 102 1 201 1 305 1 119 1 203 1 244 1 224 3 308 1 179 1 50 1 153 1 375 2 228 1 183 1 86 1 109 1 231 1 26 1 
267 1 32 1 62 1 318 2 63 2 114 1 13 1 14 1 17 1 201 1 305 1 119 1 203 1 224 2 244 1 179 1 50 1 153 1 375 2 228 1 183 1 86 1 109 1 231 1 26 1 
305 1 253 1 203 1 224 1 308 1 192 1 62 2 373 1 255 1 179 2 153 2 135 1 318 1 376 1 289 1 37 1 159 1 228 1 183 1 86 1 26 2 188 1 102 1 
5 1 62 1 255 1 214 1 269 1 318 1 63 2 114 1 13 1 14 1 17 1 201 1 305 1 119 1 203 1 244 1 224 1 370 1 308 1 179 1 153 1 228 1 183 1 86 1 231 1 26 1 
80 1 
251 5 253 2 296 1 1 2 298 2 300 1 10 1 344 1 116 6 68 1 71 1 305 1 174 1 347 4 20 2 120 2 226 2 228 2 183 2 86 1 87 2 356 1 28 2 263 1 189 2 190 5 132 1 270 1 238 2 273 1 96 1 140 1 274 1 141 1 42 1 103 1 146 2 279 1 203 2 47 1 205 1 371 1 149 1 373 1 285 1 152 2 286 1 210 1 155 1 376 1 289 1 158 3 159 1 58 1 164 2 
42 1 190 3 251 3 347 2 174 1 279 1 205 1 149 1 152 1 286 1 300 1 270 1 158 1 344 1 116 2 273 1 356 1 71 1 140 1 274 1 89 1 141 1 
251 3 190 3 300 1 270 1 344 1 116 1 273 1 71 1 140 1 274 1 141 1 42 1 174 1 347 3 279 1 205 1 149 1 20 1 286 1 210 1 158 1 356 1 164 1 89 1 
251 3 190 3 300 1 270 1 344 1 273 1 116 2 71 1 140 1 274 1 141 1 42 1 174 1 347 3 279 1 205 1 149 1 20 1 286 1 152 1 210 1 158 1 356 1 87 1 89 1 164 1 
251 5 298 1 300 1 344 1 116 7 68 1 71 1 347 6 174 1 79 1 20 4 120 2 226 1 87 4 356 1 28 2 89 1 263 1 264 1 189 2 190 5 266 1 132 1 270 1 238 2 273 1 140 1 274 1 141 1 42 1 146 2 279 1 205 1 371 1 149 1 285 1 152 4 286 1 210 5 158 3 378 1 58 1 111 1 164 5 
251 4 1 2 298 1 300 1 344 1 116 4 68 1 71 1 347 4 174 1 120 2 20 2 226 1 356 1 87 2 28 2 263 1 189 2 190 4 132 1 270 1 238 2 273 1 140 1 274 1 141 1 42 1 103 1 146 2 279 1 205 1 371 1 149 1 285 1 286 1 152 2 210 1 158 2 58 1 164 2 
189 2 251 4 190 4 266 1 132 1 298 1 300 1 270 1 238 2 344 1 116 4 273 1 68 1 71 1 140 1 274 1 141 1 42 1 146 2 174 1 347 4 279 1 205 1 371 1 149 1 79 1 20 2 120 2 285 1 152 2 286 1 226 1 210 1 158 2 87 2 378 1 356 1 58 1 28 2 164 1 263 1 
189 2 251 4 190 4 266 1 132 1 298 1 300 1 270 1 238 2 344 1 116 4 273 1 68 1 71 1 140 1 274 1 141 1 42 1 146 2 174 1 347 4 279 1 205 1 371 1 149 1 79 1 20 2 120 2 285 1 152 2 286 1 226 1 210 1 158 2 87 2 378 1 356 1 58 1 28 2 164 1 263 1 
251 4 190 4 132 1 1 2 61 1 254 2 298 1 256 2 300 1 341 1 270 1 344 1 116 4 273 1 68 1 71 1 140 1 274 1 141 1 42 1 146 2 174 1 347 4 279 1 205 1 371 1 149 1 20 2 285 1 152 2 286 1 226 1 309 1 210 1 158 2 87 2 378 1 356 1 28 2 164 1 263 1 
189 2 266 1 251 4 190 4 132 1 298 1 300 1 270 1 238 2 344 1 273 1 116 5 68 1 71 1 140 1 274 1 141 1 42 1 146 2 174 1 347 5 279 1 205 1 371 1 149 1 79 1 120 2 20 3 285 1 286 1 152 3 226 1 210 1 158 2 378 1 356 1 87 3 58 1 28 2 164 1 263 1 264 1 
189 2 266 1 251 4 190 4 132 1 298 1 300 1 270 1 238 2 344 1 273 1 116 5 68 1 71 1 140 1 274 1 141 1 42 1 146 2 174 1 347 5 279 1 205 1 371 1 149 1 79 1 120 2 20 3 285 1 286 1 152 3 226 1 210 1 158 2 378 1 356 1 87 3 58 1 28 2 164 1 263 1 264 1 
251 4 190 4 132 1 1 2 61 1 254 2 298 1 256 2 300 1 270 1 344 1 116 4 273 1 68 1 71 1 140 1 274 1 141 1 42 1 103 1 146 2 174 1 347 4 279 1 205 1 371 1 149 1 20 2 285 1 152 2 286 1 226 1 210 1 158 2 87 2 356 1 28 2 164 1 263 1 
294 1 30 1 167 1 112 1 113 1 134 1 216 2 64 1 95 2 342 3 69 3 324 1 219 2 15 2 172 6 118 1 202 1 75 1 368 1 151 1 51 1 57 1 314 1 316 1 232 1 380 1 
112 2 113 4 193 1 216 1 196 1 64 2 95 2 342 6 69 8 70 1 218 1 219 1 15 4 172 14 173 1 222 2 202 2 76 1 75 2 145 2 45 1 368 1 151 2 310 3 350 1 312 1 335 3 353 1 57 11 316 1 232 11 265 1 380 2 
253 1 3 1 112 1 91 1 113 1 193 1 299 1 64 1 361 1 342 1 273 2 69 1 302 1 71 1 219 1 15 2 172 2 173 1 305 1 202 1 75 1 369 1 203 1 281 1 284 1 122 1 311 1 376 1 312 1 289 1 228 1 85 1 183 1 86 1 356 2 316 1 129 1 380 1 
253 1 167 1 112 3 113 7 299 1 216 4 257 1 64 3 342 10 259 2 69 10 302 2 218 2 71 1 219 2 15 6 172 20 118 1 173 1 222 2 305 2 119 1 75 3 77 2 121 2 311 1 312 1 228 3 85 2 183 3 86 2 356 3 314 1 316 3 232 7 233 2 91 1 193 1 134 1 361 2 95 8 273 3 324 1 198 1 202 3 145 2 45 4 368 3 203 3 369 2 281 1 283 1 151 3 374 2 51 1 376 2 289 2 57 7 380 3 
30 1 253 2 112 2 91 1 193 1 168 1 64 2 342 1 273 1 260 1 69 1 71 1 15 4 172 2 305 2 202 2 119 1 326 1 75 2 203 8 281 1 19 1 207 2 373 1 209 1 332 1 311 1 376 3 312 1 334 1 289 2 228 7 159 1 183 8 161 1 86 2 356 1 316 2 380 2 
130 1 112 1 91 1 113 1 216 1 64 1 95 1 342 2 273 1 69 1 218 1 71 1 15 2 172 3 173 1 222 1 202 1 75 1 145 1 368 1 147 1 151 1 311 1 356 1 230 1 57 1 316 1 232 1 380 1 
30 1 202 1 75 1 145 1 45 1 204 1 112 1 113 1 151 1 64 1 95 1 69 2 57 1 172 2 316 1 15 2 232 1 380 1 
30 1 202 1 75 1 368 1 112 1 113 1 133 1 216 1 64 1 95 1 342 2 218 1 57 1 172 2 316 1 15 2 232 1 380 1 
30 1 112 1 113 2 216 1 64 1 95 2 342 2 69 2 218 1 15 2 172 4 222 1 202 1 145 1 75 1 45 1 368 1 151 1 57 2 316 1 232 2 380 1 
202 1 75 1 145 1 45 1 204 1 112 1 113 1 151 1 64 1 95 1 161 1 69 2 57 1 172 2 316 1 15 2 232 1 380 1 
202 1 75 1 368 1 112 1 113 1 133 1 216 1 64 1 95 1 342 2 161 1 218 1 57 1 172 2 316 1 15 2 232 1 380 1 
112 1 113 2 216 1 64 1 95 2 342 2 69 2 218 1 15 2 172 4 222 1 202 1 145 1 75 1 45 1 368 1 151 1 161 1 57 2 316 1 232 2 380 1 
112 1 113 2 216 1 64 1 95 2 342 2 69 2 218 1 172 4 15 2 222 1 202 1 145 1 75 1 45 1 368 1 151 1 57 2 316 1 232 2 380 1 
253 1 112 1 193 1 64 1 361 1 342 1 273 1 69 1 302 1 219 1 172 2 15 2 305 1 202 1 75 1 369 1 203 1 121 1 376 1 312 1 289 1 228 1 85 1 183 1 86 1 356 1 316 1 380 1 
253 1 112 1 193 1 64 1 342 1 273 1 69 1 219 1 172 2 16 1 15 2 305 1 202 1 75 1 369 1 203 1 206 1 376 1 312 1 289 1 228 1 85 1 160 1 183 1 86 1 356 1 316 1 380 1 
112 1 113 2 216 1 64 1 95 2 342 2 69 2 218 1 15 2 172 4 173 1 222 1 202 1 145 1 75 1 45 1 368 1 151 1 57 2 316 1 232 2 380 1 
112 1 113 2 216 1 64 1 95 2 361 1 342 2 273 1 69 2 302 1 218 1 172 4 15 2 222 1 305 1 202 1 145 1 75 1 45 1 368 1 369 1 203 1 77 1 151 1 121 1 332 1 376 1 289 1 228 1 85 1 183 1 86 1 356 1 57 2 316 1 232 2 380 1 
130 1 112 1 91 1 113 1 64 1 95 1 342 1 273 1 69 2 218 1 71 1 15 2 363 1 172 3 173 1 222 1 202 1 75 1 145 1 45 1 368 1 151 1 311 1 356 1 230 1 57 1 316 1 232 1 380 1 
295 1 195 1 216 1 64 2 95 3 342 10 38 1 138 1 322 2 69 9 218 2 98 1 15 4 172 19 222 2 202 2 366 1 75 2 145 2 45 2 368 2 151 2 310 3 335 2 353 1 229 1 185 1 127 1 165 3 265 2 380 2 
295 1 195 1 216 2 64 2 95 4 342 10 38 1 138 1 322 2 69 9 218 2 98 1 15 4 172 19 222 2 202 2 366 1 75 2 145 2 45 2 368 2 151 2 310 3 335 2 353 1 229 1 185 1 127 1 165 3 265 2 380 2 
167 1 134 1 195 1 216 3 196 1 64 1 95 5 342 10 38 1 138 1 322 1 69 11 324 1 218 2 98 1 15 2 172 21 118 1 222 2 202 1 366 1 75 1 145 2 45 2 368 3 151 3 51 1 310 2 335 2 353 1 314 1 165 2 265 1 380 1 
295 1 195 1 216 3 64 2 95 6 342 10 38 1 138 1 322 1 69 9 218 3 15 4 172 19 222 3 202 2 366 1 75 2 145 3 45 3 368 3 48 1 151 3 310 2 335 1 353 1 185 1 127 2 165 2 265 1 380 2 
202 1 75 1 366 1 195 1 310 1 64 1 335 1 342 3 38 2 138 1 69 3 322 2 98 1 172 6 15 2 265 1 380 1 165 2 
277 1 180 1 104 1 123 1 360 1 182 1 4 1 261 1 72 1 101 1 
330 1 23 1 
277 1 180 1 31 1 352 1 123 1 360 1 182 1 4 1 94 1 
11 1 336 1 
66 1 236 1 262 1 
277 1 143 1 190 1 251 1 104 1 0 1 360 1 4 1 261 1 288 1 180 1 123 1 377 1 182 1 55 1 101 1 164 1 293 2 
277 1 143 1 190 1 251 1 104 1 0 1 360 1 4 1 261 1 288 1 180 1 123 1 377 1 182 1 55 1 101 1 164 1 293 2 
277 1 143 1 190 1 251 1 104 1 0 1 360 1 4 1 261 1 288 1 180 1 123 1 377 1 182 1 55 1 101 1 164 1 293 2 
11 1 236 1 336 1 
11 1 236 1 336 1 
66 1 262 1 
66 1 236 1 262 1 
157 1 297 1 
251 1 190 1 360 1 4 1 297 1 91 2 271 1 273 2 171 1 71 2 219 1 143 1 277 1 330 1 23 1 180 1 311 2 156 1 157 1 377 1 123 1 124 1 125 1 182 1 356 2 88 1 293 1 
112 1 212 1 193 1 168 1 64 1 319 1 65 1 342 1 273 2 69 1 71 2 15 2 172 2 142 1 173 1 305 1 202 1 75 1 203 2 207 2 209 1 376 1 312 1 289 1 52 1 228 2 183 2 86 1 356 2 316 1 380 1 
74 1 305 1 201 1 119 1 203 2 244 1 153 1 269 1 63 2 332 1 114 1 13 1 228 2 14 1 321 1 183 2 86 1 17 1 18 1 
201 1 305 1 119 1 203 1 244 1 282 1 153 1 269 1 63 2 114 1 13 1 228 1 14 1 321 1 183 1 86 1 17 1 
305 1 253 1 203 1 33 1 373 1 153 1 376 1 289 1 37 1 228 1 159 1 183 1 86 1 18 1 
74 1 305 1 201 1 119 1 203 1 244 1 153 1 269 1 63 2 114 1 13 1 228 1 14 1 321 1 183 1 86 1 17 1 18 1 
177 1 
294 1 343 1 298 1 186 1 226 1 164 1 210 1 
189 1 190 1 251 1 1 1 298 1 238 1 116 1 68 1 371 1 120 1 285 1 226 1 210 1 158 1 58 1 263 1 164 2 
251 2 190 2 90 1 253 1 237 1 298 1 9 1 116 2 68 2 96 1 197 2 221 1 141 1 73 1 200 1 305 2 203 1 371 2 285 2 82 1 211 1 376 4 158 1 289 1 228 1 85 1 183 1 54 1 86 1 263 2 
317 5 189 3 251 1 190 1 60 1 1 6 194 1 298 8 10 1 239 2 116 1 301 5 68 2 96 1 218 2 222 2 145 2 368 2 371 2 151 2 285 2 226 5 331 1 154 1 310 1 210 2 24 1 351 1 158 1 335 1 354 1 27 1 263 2 164 5 265 1 
266 1 251 1 190 1 91 1 213 1 194 1 298 2 134 1 270 1 239 2 273 1 68 1 71 1 118 1 280 1 368 1 46 1 371 1 151 2 285 1 226 2 51 1 311 1 126 1 356 1 230 1 110 1 263 1 
343 1 371 1 68 1 298 1 285 1 186 1 226 1 164 1 210 1 263 1 
222 2 317 5 189 5 145 2 368 2 1 10 194 1 151 2 298 5 374 1 226 5 239 2 301 5 218 2 164 5 
251 1 190 1 158 1 116 1 164 1 210 1 
190 3 251 3 296 1 253 2 298 2 34 1 10 2 116 4 68 1 96 2 305 1 203 4 371 2 148 1 245 2 285 2 373 1 226 2 155 1 376 1 289 1 158 2 248 1 228 4 159 1 292 1 183 4 86 1 263 2 
253 1 112 1 91 2 64 1 361 1 342 1 273 3 302 1 71 2 219 1 172 1 15 2 202 1 305 1 75 1 203 1 46 1 369 1 121 1 21 1 311 2 312 1 376 1 289 1 228 1 85 1 183 1 86 1 356 3 230 2 316 1 380 1 
317 2 189 2 1 4 371 1 285 1 298 1 226 2 210 2 10 1 301 2 68 1 96 1 324 1 263 1 164 4 
199 1 123 1 4 1 
199 1 123 1 4 1 
157 1 104 1 123 1 4 1 372 1 
199 1 123 1 4 1 
123 1 4 1 83 1 
123 1 4 1 83 1 
123 1 4 1 83 1 
123 1 4 1 
277 1 360 1 
202 1 75 1 368 1 167 1 151 1 134 1 195 1 51 1 216 2 310 1 64 1 95 2 351 1 342 4 335 1 69 4 324 1 314 1 15 2 172 8 118 1 380 1 265 1 
167 1 134 1 195 1 216 2 64 2 95 3 342 5 69 6 324 1 303 1 172 11 15 4 118 1 222 1 202 2 75 2 145 1 45 1 368 1 151 2 51 1 310 2 351 1 335 1 353 1 314 1 265 1 380 2 
60 1 167 1 134 1 195 1 216 3 64 3 95 4 342 10 69 9 324 1 218 2 303 1 172 19 15 6 118 1 222 2 202 3 75 3 145 2 45 1 368 3 151 3 51 1 310 1 331 1 24 1 351 1 335 1 314 1 315 1 27 1 265 1 380 3 
60 1 167 1 134 1 195 1 216 3 64 3 95 5 342 7 69 10 324 1 218 1 303 1 172 17 15 6 118 1 222 2 202 3 75 3 145 2 45 2 368 2 151 3 51 1 310 1 331 1 351 1 24 1 335 1 314 1 315 1 27 1 265 1 380 3 
202 1 75 1 368 1 167 1 151 1 134 1 195 1 51 1 216 2 310 1 64 1 95 2 351 1 342 4 335 1 69 4 324 1 314 1 15 2 172 8 118 1 380 1 265 1 
222 2 202 1 145 2 60 1 75 1 45 1 368 2 151 2 195 1 331 1 216 1 310 1 64 1 24 1 95 2 351 1 342 6 335 1 69 6 218 2 27 1 15 2 172 12 380 1 265 1 
60 1 167 1 134 1 195 1 216 3 64 4 95 5 342 8 69 10 324 1 218 1 303 1 172 18 15 8 118 1 222 2 202 4 75 4 145 2 45 2 368 2 151 3 51 1 331 1 310 1 24 1 351 1 335 1 314 1 315 2 27 1 265 1 380 4 
60 1 195 1 216 3 64 4 95 6 342 7 69 9 218 2 172 16 15 8 222 3 202 4 75 4 145 3 45 3 368 2 151 3 331 1 310 1 24 1 351 1 335 1 185 1 315 2 27 1 265 1 380 4 
45 3 368 1 167 1 151 1 134 3 216 3 51 1 95 6 342 4 69 3 314 2 172 7 118 3 
60 1 167 1 134 1 195 1 216 3 64 4 95 4 342 8 69 10 324 1 218 1 172 18 15 8 118 1 222 2 202 4 75 4 145 2 45 1 368 2 151 3 51 1 331 1 310 1 24 1 351 1 335 1 185 1 314 1 315 2 27 1 265 1 380 4 
202 2 75 2 45 1 368 1 167 1 151 1 134 1 51 1 216 2 64 2 95 3 342 4 69 4 324 1 315 1 314 1 172 8 15 4 118 1 380 2 
294 1 368 1 167 1 151 1 134 1 216 2 51 1 95 2 342 3 69 3 324 1 314 1 172 6 118 1 
222 1 202 1 75 1 145 1 45 1 368 1 151 1 216 1 64 1 95 2 342 2 69 2 218 1 303 1 15 2 172 4 380 1 
222 1 145 1 45 1 368 1 151 1 216 1 310 2 95 2 342 4 335 1 353 1 69 3 218 1 172 7 265 1 
167 1 134 2 216 5 196 1 64 2 95 9 342 12 69 11 324 1 218 2 172 23 15 4 118 2 222 2 202 2 145 2 76 1 75 2 45 4 368 3 151 3 287 1 51 1 310 2 335 2 353 1 314 1 315 2 380 2 
342 1 172 1 310 1 
335 1 69 1 172 1 
222 1 202 1 75 1 145 1 45 1 368 1 151 1 374 1 216 2 64 1 95 3 342 3 69 3 218 1 303 1 15 2 172 6 380 1 
222 2 202 1 145 2 60 1 75 1 45 1 368 2 151 2 195 1 331 1 216 1 310 1 64 1 24 1 95 2 351 1 342 6 335 1 69 6 218 2 27 1 15 2 172 12 380 1 265 1 
45 1 368 1 151 1 134 1 51 1 216 1 95 2 342 3 69 3 172 6 118 1 
202 1 75 1 45 1 167 1 287 1 134 1 216 1 64 1 95 2 342 2 69 1 314 1 315 1 172 3 15 2 118 1 380 1 
202 1 75 1 45 2 368 2 151 2 195 1 134 2 216 3 51 1 64 1 95 5 342 5 69 5 110 1 15 2 172 10 118 2 380 1 
202 1 75 1 145 1 45 1 151 1 195 1 64 1 95 1 69 2 15 2 172 2 380 1 
222 1 202 1 75 1 145 1 45 1 368 1 151 1 195 1 216 1 64 1 95 2 342 2 69 2 218 1 15 2 172 4 380 1 
202 3 75 3 45 1 287 1 195 1 134 1 216 1 64 3 95 2 342 2 185 1 69 1 315 1 172 3 15 6 118 1 380 3 
167 1 235 1 134 3 195 1 216 7 64 5 95 12 342 18 170 1 136 1 69 16 324 1 218 3 303 1 15 10 172 34 118 3 222 3 202 5 75 5 145 3 45 5 368 5 151 5 287 1 51 2 310 4 335 3 353 1 185 1 314 1 315 2 265 1 380 5 
273 1 205 1 268 1 356 1 71 1 219 1 128 1 
325 1 268 1 205 1 178 1 340 1 217 1 273 1 356 1 71 1 219 1 128 1 29 1 
294 1 305 1 376 1 289 1 253 1 159 1 203 1 228 1 183 1 86 1 373 1 
305 1 253 1 369 1 203 1 281 1 91 1 311 1 376 1 289 1 228 1 85 1 273 2 183 1 86 1 302 1 356 2 71 1 219 1 
305 1 174 1 369 1 203 1 281 1 78 1 191 1 91 2 149 1 245 1 270 1 311 1 376 3 289 2 228 1 85 2 273 2 183 1 86 1 302 1 356 2 71 2 219 1 
91 2 191 1 270 1 273 2 71 2 219 1 305 1 174 1 203 2 369 1 307 1 281 1 206 1 78 1 245 1 149 1 311 1 376 3 289 2 228 2 85 2 183 2 86 1 356 2 
305 1 190 2 251 2 253 1 203 3 307 1 78 1 191 1 245 1 210 1 376 4 289 1 228 3 181 1 85 1 115 1 116 1 183 3 54 1 86 1 197 1 164 1 141 1 
305 1 190 2 251 2 253 1 203 3 307 1 78 1 191 1 245 1 210 1 211 1 376 4 289 1 228 3 85 1 116 1 183 3 54 1 86 1 197 1 164 1 141 1 
305 1 334 1 203 1 228 1 183 1 86 1 
144 1 305 3 119 1 326 1 234 1 90 1 253 2 203 7 19 1 207 1 168 1 332 1 376 3 334 1 289 2 228 6 85 1 183 7 260 1 86 2 346 1 
233 1 167 1 112 2 91 1 113 1 134 1 216 2 64 2 95 2 361 1 65 1 342 3 273 2 69 3 302 1 324 1 71 1 219 2 172 6 15 4 118 1 173 1 305 1 202 2 75 2 368 1 369 1 203 1 281 1 77 1 151 1 121 1 51 1 332 1 311 1 376 1 289 1 228 1 85 1 183 1 86 1 356 2 57 1 314 1 316 2 232 1 380 2 
251 3 190 3 253 1 298 1 9 1 343 1 116 2 68 2 197 1 73 1 141 1 203 1 371 2 148 1 285 2 82 1 226 1 210 1 211 1 376 2 158 1 228 1 125 1 183 1 54 1 186 1 164 1 263 2 
305 2 90 1 203 2 332 1 376 2 334 1 289 1 228 2 85 1 183 2 54 1 86 1 221 1 
305 1 253 1 203 4 307 1 373 1 332 1 35 1 376 1 289 1 228 4 159 1 183 4 86 1 
144 1 305 2 203 2 49 1 245 1 376 1 289 1 228 2 85 1 183 2 240 1 86 1 346 1 198 1 
305 1 114 1 13 1 253 1 203 1 228 1 183 1 86 1 63 1 17 1 
305 1 119 1 203 2 168 1 332 1 376 1 289 1 228 2 183 2 86 1 142 1 
305 2 253 1 203 5 19 1 245 1 373 1 168 1 332 1 35 1 376 3 289 2 159 1 228 4 183 5 260 1 86 2 
305 2 253 1 203 5 175 1 19 1 245 1 373 1 168 1 332 1 35 1 376 3 289 2 159 1 228 4 183 5 86 2 
305 1 253 1 369 1 203 1 281 1 91 1 206 1 311 1 376 1 289 1 228 1 85 1 273 2 183 1 86 1 356 2 71 1 219 1 
144 1 305 2 234 1 90 1 203 1 245 1 376 1 289 1 228 1 85 1 183 1 86 1 346 1 
41 1 107 1 219 1 187 1 59 1 
41 2 190 2 251 2 174 1 44 1 149 1 300 1 210 1 270 1 272 1 107 2 125 1 137 1 184 1 219 1 187 1 164 1 141 1 59 2 
319 1 52 1 107 1 273 1 212 1 356 1 71 1 187 1 59 1 
44 1 272 1 187 1 
294 1 267 1 32 1 50 1 
267 1 224 1 32 1 308 1 255 1 50 1 318 1 
62 1 26 1 318 1 
267 1 224 3 308 1 32 1 5 1 255 1 50 1 318 3 333 1 362 1 108 1 357 2 
267 1 224 2 32 1 308 1 25 1 255 1 50 1 375 1 318 2 
224 1 176 1 244 1 308 1 5 1 255 1 50 1 318 1 63 1 320 1 114 1 
267 1 224 1 308 1 5 1 255 1 50 1 318 1 
267 2 224 1 32 1 308 1 5 1 255 1 318 1 
267 1 224 2 308 2 5 1 93 1 255 2 208 1 50 1 318 2 100 1 
278 1 337 1 267 1 224 3 32 1 308 1 339 1 5 1 255 1 50 2 375 2 318 3 320 1 
267 1 224 2 244 1 32 1 308 1 5 1 255 1 50 1 375 1 63 2 318 2 114 1 14 1 163 1 17 1 
267 1 224 4 32 1 308 2 339 1 5 1 255 2 50 2 375 2 318 4 320 1 323 1 25 1 
267 1 224 1 32 1 308 1 5 1 255 1 50 1 318 1 
267 2 105 1 224 4 32 2 308 1 339 1 255 1 50 3 375 2 318 4 333 1 320 1 108 1 357 1 
267 1 224 2 2 1 308 1 32 1 5 1 255 1 50 1 375 1 318 2 67 1 40 1 
267 1 224 3 308 1 32 1 5 1 255 1 50 1 227 1 318 3 333 1 108 2 357 2 
306 1 249 2 313 1 50 2 
166 1 224 1 308 1 5 1 255 1 318 1 
337 1 267 1 224 2 32 1 308 1 5 1 255 1 50 1 375 1 318 2 
117 1 
267 1 224 1 32 1 308 1 5 1 255 1 50 1 318 1 
337 1 267 1 224 3 32 1 308 1 5 1 357 1 255 1 50 1 375 1 318 3 
320 1 105 1 339 1 50 1 
267 1 50 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (79,84,178,333) (79,84,178,333) (115,212,236,262) 175 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (79,84,178,333) (79,84,178,333) (115,212,236,262) 175 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 65 52 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V ERROR java.lang.NullPointerException (79,84,178,333) (79,84,178,333) (115,212,236,262) (115,212,236,262) (115,212,236,262) 
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z | CONDITION | 5144 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money; | ASSIGN | 5752 | = null
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
333 2 302 1 109 1 81 1 84 2 282 2 284 9 239 1 262 1 241 1 122 4 362 1 26 1 88 1 69 1 217 1 221 5 30 2 293 1 320 2 98 2 35 1 226 2 370 1 101 1 178 9 232 3 79 6 
333 2 302 1 109 1 81 1 84 2 282 2 284 9 239 1 262 1 241 1 122 4 362 1 26 1 88 1 69 1 217 1 221 5 30 2 293 1 320 2 98 2 35 1 226 2 370 1 101 1 178 9 232 3 79 6 
333 2 302 1 109 1 81 1 84 2 282 2 284 10 239 1 262 1 241 1 122 5 362 1 26 1 88 1 69 1 217 1 221 6 30 2 293 1 320 2 98 2 35 1 226 2 370 1 101 1 178 10 232 4 79 7 
333 2 302 1 109 1 81 1 84 2 282 2 284 7 239 1 262 1 241 1 122 3 26 1 88 1 69 1 217 1 221 4 30 1 293 1 320 2 98 2 35 1 226 2 370 1 101 1 178 7 232 2 79 4 
30 2 333 1 302 1 320 1 84 1 282 1 284 4 226 1 262 1 122 2 362 1 26 1 101 1 217 1 178 4 232 1 79 3 221 3 
333 1 302 1 109 1 84 1 320 1 98 1 282 1 35 1 284 2 278 1 227 1 202 1 101 1 217 1 178 2 221 1 
333 2 302 1 84 2 98 1 284 3 241 1 122 1 101 1 217 1 178 3 232 1 221 2 79 1 
333 1 302 1 212 1 84 1 284 1 178 2 79 1 175 1 
333 1 302 1 212 1 84 1 284 1 178 2 79 1 175 1 
229 1 315 1 303 1 
55 2 303 1 292 1 
66 1 154 2 155 2 361 2 95 2 259 1 152 2 145 2 
66 1 143 1 162 1 20 2 116 1 259 1 145 2 166 1 265 1 336 1 267 1 361 3 289 2 151 1 191 1 126 1 152 2 342 1 341 1 242 1 154 3 155 2 56 2 243 1 95 2 321 1 58 1 200 1 157 1 371 1 99 2 350 1 253 1 14 2 379 1 207 1 80 1 
66 1 154 1 155 1 32 1 361 1 95 1 152 1 145 1 43 1 160 1 
315 1 314 1 154 1 95 1 303 1 113 1 283 1 23 1 11 1 361 1 347 1 13 1 269 1 160 1 
315 1 155 1 154 1 95 1 303 1 113 2 145 1 23 1 11 2 361 1 347 1 13 1 269 1 152 1 160 1 
11 1 113 1 183 1 156 1 355 1 
11 2 315 1 357 1 248 1 303 1 113 2 183 1 355 1 
11 1 113 1 183 1 
66 1 155 1 154 1 32 1 95 1 113 1 145 1 355 1 11 1 361 1 43 1 152 1 160 1 234 1 
303 1 
11 2 315 1 248 1 303 1 113 2 183 1 105 1 355 1 
140 1 315 1 195 2 303 1 113 5 304 2 183 2 129 1 201 1 355 2 11 5 176 1 248 1 12 1 268 1 337 2 102 1 312 1 138 1 
229 1 259 1 
335 1 154 2 155 1 95 2 259 2 145 1 356 1 361 2 152 1 
263 1 53 1 21 1 
341 1 154 1 143 1 162 1 116 1 259 1 166 1 371 1 99 1 361 1 289 1 5 1 191 1 14 1 207 1 80 1 
341 1 7 1 155 1 154 2 95 1 143 1 162 1 116 1 166 1 371 1 99 1 361 2 289 1 191 1 53 1 28 1 14 1 152 1 207 1 80 1 
154 3 155 3 361 3 95 3 259 1 28 1 145 1 152 3 
154 1 155 1 32 1 361 1 95 1 152 1 160 1 
356 1 335 1 154 1 155 1 361 1 95 1 152 1 145 1 160 1 
66 1 143 1 113 1 162 1 20 2 116 1 259 1 145 2 23 1 166 1 356 1 267 1 361 4 289 1 151 1 191 1 269 1 28 1 152 3 168 1 342 1 341 1 7 1 242 1 154 4 155 3 56 1 243 1 95 3 58 1 200 1 157 1 11 1 371 1 99 1 347 1 13 1 350 1 253 1 14 1 207 1 206 1 80 1 160 1 
154 2 155 1 361 2 95 2 283 1 270 1 259 1 28 1 152 1 
7 1 155 3 154 3 95 3 303 1 113 1 145 1 23 1 11 1 356 1 361 3 347 1 13 1 125 1 269 1 28 2 152 3 168 1 160 1 
155 2 154 2 95 2 21 1 145 1 356 1 361 2 53 1 28 1 152 2 
341 1 154 1 143 1 162 1 116 1 259 1 166 1 371 1 99 1 361 1 289 1 191 1 14 1 207 1 80 1 
341 1 154 1 223 1 116 1 259 1 166 1 371 1 99 1 361 1 289 1 191 1 14 1 27 1 207 1 80 1 
20 2 21 2 285 1 214 1 263 2 151 1 190 1 53 2 342 2 242 1 316 1 56 4 243 1 96 1 321 2 225 1 323 1 157 1 298 1 375 1 63 1 377 1 350 1 253 1 
154 1 155 1 361 1 95 1 205 1 152 1 23 1 160 1 
7 1 155 4 154 5 95 5 182 1 283 1 259 1 145 1 356 1 361 5 311 1 270 1 28 2 152 4 
154 2 155 2 32 1 361 2 95 2 205 1 152 2 160 1 
308 1 147 1 
308 1 147 1 
330 1 339 1 
330 1 339 1 
330 1 339 1 
308 1 193 1 147 1 
45 1 308 1 147 1 
308 2 110 1 330 1 339 1 279 1 147 2 
308 1 193 1 147 1 
308 1 193 1 147 1 
308 1 369 1 147 1 
308 1 369 1 147 1 
308 1 369 1 147 1 
110 1 303 1 113 2 256 2 47 2 186 1 187 1 174 1 147 2 1 2 11 2 264 1 24 1 204 2 308 2 348 3 230 2 220 1 90 1 
45 1 209 1 161 1 210 1 113 1 256 1 259 1 47 1 1 1 147 1 240 1 264 1 308 1 361 2 152 2 155 2 154 2 95 2 128 1 11 1 204 1 348 1 352 1 208 1 
320 1 282 1 226 1 
320 1 282 1 202 1 
86 1 282 3 62 1 177 1 226 2 202 1 
282 2 62 1 177 1 218 1 226 1 202 1 
282 2 177 1 62 2 226 1 202 1 
161 1 304 1 113 5 303 2 183 1 213 2 48 1 355 4 240 1 121 1 25 1 266 2 268 1 337 1 292 1 55 3 315 1 316 1 195 1 96 1 323 1 345 2 201 2 11 5 75 1 248 1 12 3 63 1 135 1 104 1 380 1 352 1 
334 1 113 9 303 5 304 2 183 6 213 6 48 3 355 7 25 2 359 5 268 1 337 2 292 3 55 9 315 1 316 3 71 1 195 2 96 3 156 5 323 3 345 6 201 6 11 9 176 1 247 1 248 1 249 1 12 8 63 3 300 1 135 1 352 4 380 2 106 1 
303 3 304 1 113 3 213 2 48 1 355 2 121 1 25 1 266 1 337 1 292 2 55 4 315 1 316 1 195 1 96 1 323 1 345 2 201 2 11 3 176 1 12 3 63 1 104 1 380 1 352 1 
334 1 303 4 304 1 113 4 213 4 48 2 355 3 121 1 25 1 266 2 337 1 292 3 55 7 315 1 316 2 195 1 96 2 323 2 345 4 201 4 11 4 176 1 249 1 12 5 63 2 104 1 380 1 352 2 106 1 
229 1 116 1 222 1 
116 1 346 1 
39 1 
116 1 207 1 
116 3 180 1 207 1 228 1 222 2 80 1 
116 1 207 1 80 1 
116 1 137 1 
342 1 65 1 108 1 56 4 275 1 321 3 225 3 198 1 87 1 19 1 298 2 4 1 63 1 299 2 41 1 272 1 
342 1 65 1 108 1 56 4 275 1 321 3 225 3 198 1 87 1 19 1 298 2 4 1 63 1 299 2 41 1 272 1 
342 1 65 1 108 1 56 4 275 1 321 3 225 3 198 1 87 1 19 1 324 1 298 2 4 1 63 1 299 2 41 1 272 1 
65 1 254 1 108 1 87 2 20 2 19 2 48 3 4 2 151 1 364 1 216 1 272 1 6 4 342 13 242 1 56 28 316 3 96 3 321 15 275 2 368 1 225 10 198 5 199 1 323 3 325 3 157 1 327 1 298 5 299 3 63 4 41 1 350 1 15 1 
65 1 254 1 108 1 20 4 19 1 87 1 305 1 144 1 4 1 151 2 342 2 242 2 56 6 321 4 275 1 225 4 198 1 157 2 298 3 63 1 299 2 41 1 350 2 
333 1 302 1 255 1 84 1 282 2 86 1 117 1 284 2 258 1 120 1 166 1 289 1 150 1 189 1 191 1 70 1 217 1 54 1 221 1 320 1 98 1 226 1 130 1 202 1 99 1 77 1 101 1 178 2 14 1 79 1 
333 1 84 1 86 1 282 2 117 1 284 3 258 1 120 1 166 1 289 1 150 1 189 1 191 1 217 1 54 1 221 1 320 1 98 1 226 1 130 1 202 1 134 1 99 1 77 1 101 1 329 1 178 3 14 1 331 1 79 2 
282 2 86 1 117 1 284 2 258 1 166 1 289 1 150 1 189 1 191 1 217 1 54 1 221 1 320 1 98 1 226 1 202 1 99 1 77 1 101 1 329 1 178 2 14 1 331 1 79 2 
235 1 333 1 237 1 84 1 98 2 18 1 116 1 284 1 166 1 134 1 371 1 99 1 328 1 288 1 289 1 77 2 150 2 191 1 178 1 14 1 54 2 207 1 366 1 
333 1 302 1 255 1 84 1 282 2 86 1 117 1 284 1 258 1 120 1 166 1 289 1 150 1 189 1 191 1 54 1 320 1 98 1 226 1 130 1 202 1 99 1 77 1 329 1 178 1 14 1 
203 1 
141 2 237 1 183 6 283 1 286 2 289 2 337 1 191 1 194 1 292 2 89 1 153 1 55 2 154 1 195 1 95 1 201 2 59 1 11 5 99 2 246 1 248 3 347 1 12 2 13 1 14 2 207 1 160 1 17 2 303 2 113 5 304 1 114 1 18 1 116 1 163 4 118 1 67 1 119 1 261 1 23 1 166 1 358 1 361 1 268 1 68 1 269 1 315 1 314 1 127 2 317 2 131 2 371 2 179 2 380 1 
314 1 154 1 95 1 113 3 114 1 183 2 283 1 163 2 59 1 119 1 131 1 23 1 11 3 248 1 361 1 347 1 68 1 13 1 269 1 194 1 105 1 160 1 
315 1 17 1 314 1 154 1 95 1 303 1 113 3 114 1 183 1 283 1 163 3 59 1 119 1 23 1 11 3 248 1 361 1 347 1 68 1 13 1 269 1 194 1 105 1 160 1 
141 1 17 1 114 1 113 3 303 1 183 2 283 1 163 3 119 1 23 1 361 1 68 1 269 1 194 1 154 1 314 1 315 1 95 1 59 1 131 1 11 3 248 1 347 1 13 1 105 1 160 1 
141 4 183 7 283 1 184 1 286 2 337 1 194 1 292 2 154 1 195 1 95 1 59 1 201 1 245 1 11 5 347 1 248 3 100 1 12 1 13 1 105 1 160 1 17 4 113 5 114 1 303 5 304 1 163 6 118 1 119 1 261 1 23 1 361 1 268 1 68 1 269 1 313 1 314 1 315 5 274 1 317 2 127 2 131 4 179 2 
141 2 183 4 283 1 286 2 337 1 194 1 292 2 153 1 55 2 154 1 195 1 95 1 59 1 201 1 11 4 347 1 248 2 12 1 13 1 160 1 17 2 113 4 304 1 114 1 303 2 163 4 118 1 119 1 261 1 23 1 361 1 268 1 68 1 269 1 314 1 315 1 317 2 127 2 131 2 179 2 
141 2 17 2 303 1 114 1 113 4 304 1 183 4 283 1 163 4 118 1 119 1 261 1 23 1 286 2 361 1 268 1 337 1 68 1 269 1 194 1 292 2 315 1 154 1 314 1 274 1 127 2 317 2 195 1 95 1 201 1 59 1 131 2 245 1 11 4 248 2 347 1 12 1 100 1 13 1 179 2 160 1 
141 2 17 2 303 1 114 1 113 4 304 1 183 4 283 1 163 4 118 1 119 1 261 1 23 1 286 2 361 1 268 1 337 1 68 1 269 1 194 1 292 2 315 1 154 1 314 1 274 1 127 2 317 2 195 1 95 1 201 1 59 1 131 2 245 1 11 4 248 2 347 1 12 1 100 1 13 1 179 2 160 1 
141 2 17 2 303 1 114 1 113 4 304 1 183 4 283 1 163 4 118 1 119 1 23 1 148 2 286 2 361 1 268 1 337 1 68 1 269 1 194 1 219 1 29 2 273 1 55 2 315 1 154 1 314 1 195 1 95 1 201 1 59 1 131 2 245 1 11 4 248 2 347 1 12 1 349 1 13 1 179 2 160 1 
141 3 17 3 303 1 304 1 114 1 113 4 183 5 283 1 163 5 118 1 119 1 184 1 261 1 23 1 286 2 361 1 268 1 337 1 68 1 269 1 194 1 292 2 315 1 274 1 154 1 314 1 127 2 317 2 195 1 95 1 201 1 59 1 131 3 245 1 11 4 248 2 347 1 12 1 100 1 13 1 179 2 160 1 
141 3 17 3 303 1 304 1 114 1 113 4 183 5 283 1 163 5 118 1 119 1 184 1 261 1 23 1 286 2 361 1 268 1 337 1 68 1 269 1 194 1 292 2 315 1 274 1 154 1 314 1 127 2 317 2 195 1 95 1 201 1 59 1 131 3 245 1 11 4 248 2 347 1 12 1 100 1 13 1 179 2 160 1 
141 2 183 4 283 1 148 2 286 2 337 1 194 1 153 1 55 2 154 1 195 1 95 1 59 1 201 1 11 4 347 1 248 2 12 1 13 1 160 1 17 2 113 4 304 1 114 1 303 1 163 4 118 1 119 1 23 1 361 1 268 1 68 1 269 1 219 1 29 2 314 1 315 1 131 2 179 2 
65 1 108 1 87 1 20 2 21 1 259 1 263 1 4 1 151 1 53 1 342 1 242 1 56 3 243 1 321 2 225 2 157 1 229 1 298 2 377 1 63 1 299 1 41 1 350 1 253 1 
111 1 20 4 259 1 48 2 21 4 263 11 49 1 151 2 51 1 53 11 6 3 342 6 242 2 33 1 56 14 316 1 243 2 96 2 58 1 321 8 225 2 198 1 323 1 325 3 157 2 327 1 298 1 78 1 63 2 350 2 253 1 379 1 15 1 
143 1 281 1 162 1 116 1 20 2 259 1 21 1 306 1 166 1 123 1 361 2 289 1 151 1 51 1 5 1 191 1 28 1 152 1 341 1 342 1 7 1 242 1 154 2 155 1 56 2 243 1 95 1 58 1 321 1 157 1 371 1 99 1 14 1 253 1 350 1 379 1 207 1 80 1 
143 2 87 1 48 2 188 2 289 3 4 1 51 1 151 3 191 2 53 7 152 1 342 8 341 2 7 1 155 1 154 3 242 3 56 17 95 1 243 3 96 2 58 1 244 2 294 1 198 4 157 3 99 3 61 1 298 4 299 1 63 3 14 3 350 3 253 3 207 2 65 1 108 1 162 2 20 6 116 2 259 1 21 7 166 2 263 7 267 2 361 3 28 1 316 2 34 2 321 9 225 8 322 2 323 2 371 1 373 1 329 1 41 1 379 1 80 2 
237 1 18 1 116 3 20 4 354 1 166 2 309 1 336 2 361 1 289 8 151 2 191 2 70 1 28 1 152 1 342 1 154 1 155 1 242 2 56 2 95 1 243 2 321 1 58 1 36 1 38 1 295 1 157 2 371 2 99 7 329 1 377 1 251 1 14 8 350 2 253 2 378 1 379 1 207 2 
20 2 21 1 48 1 145 1 263 1 356 1 361 1 151 1 51 1 53 1 152 1 342 2 242 1 155 1 154 1 56 3 316 1 243 1 95 1 96 1 321 1 225 1 323 1 157 1 372 1 298 1 63 1 350 1 253 1 
242 1 56 2 243 1 96 1 321 2 225 1 198 1 20 2 21 1 285 1 157 1 263 1 151 1 377 1 63 1 53 1 253 1 350 1 
342 2 242 1 56 2 316 1 243 1 225 1 20 2 323 1 21 1 157 1 263 1 214 1 298 1 151 1 377 1 53 1 253 1 350 1 
20 2 48 1 21 2 263 2 151 1 53 2 342 2 242 1 56 4 316 1 96 1 243 1 321 2 225 2 198 1 323 1 157 1 298 1 63 1 377 1 350 1 253 1 
242 1 56 2 243 1 96 1 321 2 225 1 198 1 36 1 20 2 21 1 285 1 157 1 263 1 151 1 63 1 53 1 253 1 350 1 
342 2 242 1 56 2 316 1 243 1 225 1 36 1 20 2 323 1 21 1 157 1 263 1 214 1 298 1 151 1 53 1 253 1 350 1 
20 2 48 1 21 2 263 2 151 1 53 2 342 2 242 1 56 4 316 1 96 1 243 1 321 2 225 2 36 1 198 1 323 1 157 1 298 1 63 1 350 1 253 1 
20 2 48 1 21 2 263 2 151 1 53 2 342 2 242 1 56 4 316 1 96 1 243 1 321 2 225 2 198 1 323 1 157 1 298 1 63 1 350 1 253 1 
143 1 162 1 116 1 20 2 259 1 166 1 267 1 361 1 289 1 151 1 191 1 341 1 342 1 154 1 242 1 56 2 243 1 321 1 58 1 157 1 371 1 99 1 14 1 253 1 350 1 379 1 207 1 80 1 
112 1 116 1 20 2 259 1 166 1 361 1 289 1 151 1 191 1 27 1 341 1 342 1 223 1 154 1 242 1 56 2 243 1 321 1 58 1 157 1 371 1 99 1 14 1 253 1 350 1 379 1 207 1 80 1 
20 2 48 1 21 2 263 2 151 1 51 1 53 2 342 2 242 1 56 4 316 1 96 1 243 1 321 2 225 2 198 1 323 1 157 1 298 1 63 1 350 1 253 1 
143 1 162 1 116 1 20 2 21 2 48 1 166 1 263 2 188 1 267 1 361 1 289 1 151 1 191 1 53 2 70 1 342 2 341 1 154 1 242 1 316 1 56 4 96 1 243 1 321 2 225 2 198 1 323 1 157 1 99 1 298 1 63 1 14 1 253 1 350 1 207 1 80 1 
20 2 48 1 21 1 145 1 263 1 356 1 361 1 151 1 51 1 53 1 152 1 342 1 242 1 155 1 154 1 316 1 56 3 243 1 95 1 96 1 276 1 321 2 225 1 198 1 323 1 157 1 63 1 350 1 253 1 
20 4 48 3 144 1 165 1 50 1 151 2 338 2 6 2 342 10 242 2 56 19 316 3 318 2 96 3 224 1 57 1 321 9 225 6 198 3 323 3 325 1 157 2 327 1 158 1 298 3 159 1 63 3 350 2 139 1 15 1 
254 2 83 1 257 1 20 6 48 3 144 1 165 1 50 1 151 3 338 1 6 2 342 12 242 3 56 26 316 2 318 4 96 3 224 2 57 1 321 14 97 1 225 4 198 2 323 2 325 2 40 1 60 1 157 3 298 2 63 3 42 1 350 3 139 2 15 2 
83 1 87 1 48 4 144 1 50 1 4 1 151 3 338 1 6 4 342 19 242 3 56 38 96 4 57 1 97 1 198 4 60 1 157 3 158 1 298 4 63 5 299 1 250 1 350 3 15 3 65 1 254 1 108 1 257 1 20 6 165 1 316 4 318 4 224 2 321 19 225 8 323 4 325 3 40 1 327 1 42 1 41 1 139 1 
65 1 254 2 108 1 83 1 257 1 87 1 20 8 48 4 144 1 165 1 50 1 4 1 151 4 338 1 6 4 342 16 242 4 56 35 316 3 318 4 96 4 224 2 57 1 97 1 321 19 225 7 198 3 323 3 325 3 40 1 60 1 157 4 327 1 158 1 298 4 299 1 63 5 250 1 41 1 42 1 350 4 139 1 15 3 
65 1 254 1 108 1 83 1 257 1 87 1 20 4 48 7 144 1 165 1 50 1 4 1 151 2 338 1 6 4 342 23 242 2 33 2 56 49 316 7 318 4 96 7 224 1 57 1 97 1 321 26 225 14 198 7 323 7 325 4 40 1 60 1 157 2 327 2 298 7 299 1 63 8 41 1 42 1 350 2 139 1 15 2 
24 1 308 1 204 1 110 1 256 1 231 1 47 1 174 1 1 1 147 1 
45 1 209 1 
308 1 204 1 256 1 271 1 277 1 47 1 0 1 1 1 147 1 
110 1 303 1 113 1 256 1 47 1 186 1 174 1 147 1 1 1 11 1 264 1 24 1 204 1 308 1 348 2 230 1 220 1 90 1 
110 1 303 1 113 1 256 1 47 1 186 1 174 1 147 1 1 1 11 1 264 1 24 1 204 1 308 1 348 2 230 1 220 1 90 1 
110 1 303 1 113 1 256 1 47 1 186 1 174 1 147 1 1 1 11 1 264 1 24 1 204 1 308 1 348 2 230 1 220 1 90 1 
193 1 103 1 279 1 
193 1 103 1 279 1 
167 1 369 1 
167 1 369 1 279 1 
210 1 208 1 
45 1 209 1 161 1 210 1 113 1 256 1 259 1 47 1 186 1 355 1 1 1 147 1 240 1 308 1 361 2 152 2 154 2 155 2 95 2 128 1 37 1 11 1 204 1 230 1 348 1 352 1 208 1 
193 1 103 1 
167 1 369 1 279 1 
85 1 116 1 20 2 354 1 166 1 2 1 307 1 3 1 336 2 361 2 289 2 51 1 151 1 191 1 342 1 242 1 154 2 56 2 243 1 95 2 321 1 58 1 157 1 99 2 14 2 253 1 350 1 378 1 379 1 207 1 44 1 
320 1 86 1 282 2 117 1 226 1 130 1 22 1 202 1 166 1 99 2 287 1 289 2 150 1 189 1 191 1 329 1 192 1 70 1 14 2 
320 1 86 1 282 2 117 1 226 1 130 1 202 1 166 1 296 1 99 1 287 1 289 1 150 1 189 1 329 1 191 1 14 1 
237 1 18 1 116 1 166 1 371 1 99 1 288 1 289 1 124 1 150 1 191 1 192 1 14 1 207 1 
320 1 86 1 282 2 117 1 226 1 130 1 22 1 202 1 166 1 99 1 287 1 289 1 150 1 189 1 191 1 329 1 192 1 14 1 
363 1 
229 1 315 1 12 1 303 1 129 1 102 1 201 1 
304 1 303 2 113 1 183 1 261 1 268 1 337 1 292 1 55 1 315 1 317 1 195 1 127 1 201 1 11 1 248 1 12 1 
142 1 181 2 183 5 48 2 289 3 337 4 191 4 290 1 292 6 55 12 93 2 195 4 96 2 244 2 345 6 346 3 201 8 11 5 99 3 248 3 12 9 13 2 63 2 102 1 64 1 14 3 207 3 304 4 113 5 303 8 116 10 213 6 67 1 166 3 268 4 70 1 222 2 315 2 31 2 316 2 319 2 129 1 323 2 173 2 133 1 73 2 132 2 371 1 376 1 137 2 233 2 180 1 380 2 80 3 
113 1 304 2 303 5 183 1 257 1 213 5 67 1 48 2 268 2 337 2 292 3 6 1 340 1 55 6 93 2 315 2 195 2 316 2 96 2 97 1 323 2 345 5 325 1 201 5 173 1 40 1 60 1 11 1 248 1 12 8 63 2 42 1 380 1 332 1 15 1 
65 1 93 1 274 1 195 1 113 1 304 1 87 1 323 1 201 2 11 1 12 2 268 1 4 1 337 1 52 1 63 1 
315 1 195 1 304 1 303 1 129 1 201 1 268 1 12 1 337 1 102 1 
55 10 93 2 316 2 96 2 244 1 303 5 213 5 323 2 345 5 48 2 201 5 173 1 12 5 63 2 292 5 
11 1 315 1 248 1 303 1 113 1 183 1 
237 1 304 2 113 3 183 4 18 1 116 1 67 2 166 1 358 1 268 1 289 4 337 2 191 1 89 1 92 1 195 2 201 2 133 2 371 2 11 3 99 4 176 1 76 1 248 2 12 2 64 1 14 4 207 1 380 2 
66 1 143 1 162 1 20 2 116 1 259 1 145 2 166 1 267 1 361 3 289 1 151 1 191 1 152 2 342 1 341 1 154 3 155 2 242 1 56 1 95 2 243 1 58 1 200 1 157 1 371 1 99 1 350 1 14 1 253 1 207 1 80 1 
55 4 315 2 195 1 304 1 303 4 213 2 345 2 201 2 67 1 268 1 12 1 337 1 299 1 292 2 380 1 
256 1 326 1 1 1 
24 1 9 1 256 1 208 1 1 1 
256 1 326 1 1 1 
256 1 326 1 1 1 
169 1 256 1 1 1 
169 1 256 1 1 1 
169 1 256 1 1 1 
256 1 1 1 
308 1 147 1 
65 1 342 2 254 1 242 2 108 1 56 5 321 3 225 3 198 1 20 4 87 1 157 2 298 2 4 1 151 2 299 1 63 1 41 1 350 2 
342 1 65 1 108 1 56 3 321 2 225 2 87 1 229 1 298 2 4 1 63 1 299 1 41 1 
342 2 242 1 316 1 56 4 96 1 321 2 225 2 20 2 198 1 323 1 10 1 48 1 157 1 298 1 151 1 63 1 350 1 
342 4 316 1 56 7 96 1 321 3 225 2 198 1 323 1 325 1 48 1 327 1 298 1 63 1 6 2 15 1 
65 1 254 2 108 1 87 2 20 4 48 2 260 1 4 2 151 2 6 2 342 10 242 2 56 20 316 2 33 1 96 2 321 10 225 9 198 4 323 2 325 2 157 2 327 1 298 5 299 1 63 3 78 1 41 1 350 2 
342 1 56 1 6 1 
56 1 321 1 325 1 
342 3 242 1 56 6 316 1 96 1 244 1 321 3 225 3 20 2 198 1 323 1 10 1 48 1 157 1 298 2 151 1 63 1 350 1 
257 1 20 2 48 2 144 1 151 1 6 1 342 6 242 1 56 12 316 2 96 2 321 6 97 1 225 2 198 1 323 2 325 1 60 1 40 1 157 1 298 1 63 2 42 1 350 1 15 1 
65 1 56 1 321 1 63 1 
342 2 254 1 108 1 242 1 56 3 321 1 225 2 198 1 87 1 20 2 260 1 157 1 298 1 4 1 151 1 41 1 350 1 
342 3 65 1 242 1 56 7 321 4 225 4 20 2 87 1 198 2 323 1 144 1 157 1 298 2 4 1 151 1 52 1 63 2 350 1 
242 1 56 2 96 1 321 2 225 1 20 2 198 1 144 1 157 1 151 1 63 1 350 1 
342 2 242 1 316 1 56 4 96 1 321 2 225 2 20 2 198 1 323 1 48 1 144 1 157 1 298 1 151 1 63 1 350 1 
342 2 254 1 242 3 56 3 321 1 225 2 20 6 87 1 198 1 260 1 144 1 157 3 158 1 298 1 4 1 151 3 350 3 
65 2 254 2 108 1 87 2 20 10 260 1 48 3 144 1 4 2 151 5 364 1 216 1 6 4 342 14 242 5 56 28 316 3 96 3 321 14 225 11 198 5 199 1 323 3 10 1 325 3 157 5 327 1 158 1 298 6 299 1 63 5 41 1 350 5 15 1 
65 1 108 1 257 1 20 2 87 1 144 1 4 1 151 1 6 1 342 2 242 1 56 5 321 3 225 2 325 1 157 1 298 2 299 1 63 1 41 1 350 1 15 1 
65 1 108 1 257 1 87 1 20 4 48 1 144 1 4 1 151 2 6 2 342 3 242 2 56 8 96 1 321 5 225 3 198 1 10 1 325 1 157 2 327 1 298 2 299 1 63 2 41 1 350 2 15 1 
65 1 254 1 108 1 257 1 87 1 20 6 48 2 144 1 4 1 151 3 6 1 342 8 242 3 56 16 316 2 96 2 321 8 97 1 225 4 198 1 323 2 10 1 325 1 40 1 60 1 157 3 298 3 299 1 63 3 41 1 42 1 350 3 15 1 
65 1 254 1 108 1 257 1 87 1 20 6 48 2 144 1 4 1 151 3 6 1 342 5 242 3 56 14 316 1 96 2 321 9 97 1 225 5 198 2 323 1 10 1 325 1 60 1 40 1 157 3 298 3 299 1 63 3 41 1 42 1 350 3 15 1 
65 1 108 1 257 1 20 2 87 1 144 1 4 1 151 1 6 1 342 2 242 1 56 5 321 3 225 2 325 1 157 1 298 2 299 1 63 1 41 1 350 1 15 1 
257 1 20 2 48 2 144 1 151 1 6 1 342 6 242 1 56 12 316 2 96 2 321 6 97 1 225 2 198 1 323 2 325 1 60 1 40 1 157 1 298 1 63 2 42 1 350 1 15 1 
65 1 254 2 108 1 257 1 87 1 20 8 48 2 144 1 4 1 151 4 6 1 342 6 242 4 56 15 316 1 96 2 321 9 97 1 225 5 198 2 323 1 10 1 325 1 40 1 60 1 157 4 298 3 299 1 63 3 41 1 42 1 350 4 15 1 
254 2 257 1 20 8 48 3 144 1 151 4 6 1 342 7 242 4 56 16 316 2 96 3 321 9 97 1 225 6 198 3 323 2 325 1 40 1 60 1 157 4 158 1 298 3 63 3 42 1 350 4 15 1 
342 2 65 2 108 1 56 7 321 5 225 7 87 2 198 3 323 1 298 4 4 2 52 1 299 1 63 3 41 1 
65 1 254 2 108 1 257 1 87 1 20 8 48 2 144 1 4 1 151 4 6 1 342 6 242 4 56 15 316 1 96 2 321 9 97 1 225 4 198 1 323 1 325 1 40 1 60 1 157 4 158 1 298 3 299 1 63 3 41 1 42 1 350 4 15 1 
154 1 361 1 95 1 283 1 270 1 259 1 353 1 
154 1 95 1 82 1 280 1 283 1 259 1 360 1 361 1 270 1 301 1 351 1 353 1 
229 1 371 1 99 1 237 1 289 1 18 1 191 1 116 1 14 1 207 1 166 1 
341 1 155 1 154 2 95 1 162 1 116 1 259 1 166 1 371 1 99 1 361 2 289 1 191 1 28 1 14 1 152 1 207 1 80 1 
341 1 155 2 154 2 31 1 95 2 162 1 116 3 259 1 23 1 133 1 166 1 99 1 361 2 289 1 269 1 191 1 137 1 28 1 14 1 152 1 207 2 160 1 80 2 
116 3 259 1 23 1 166 1 361 2 289 2 191 1 269 1 28 1 152 1 341 1 223 1 154 2 155 2 31 1 95 2 133 1 99 2 137 1 14 2 207 2 107 1 80 2 160 1 
113 2 303 1 183 1 116 4 166 1 289 3 215 1 191 1 222 1 91 1 315 1 31 1 346 1 133 1 11 2 371 1 99 3 13 1 137 1 14 3 207 1 107 1 80 1 
315 1 31 1 303 1 113 2 181 1 183 1 116 4 346 1 133 1 166 1 371 1 11 2 99 3 289 3 13 1 191 1 137 1 14 3 207 1 107 1 80 1 222 1 
99 1 289 1 191 1 14 1 38 1 166 1 
344 1 116 3 354 1 164 1 38 1 295 1 146 1 166 2 371 2 99 6 336 1 309 1 289 7 329 1 191 3 70 1 251 1 14 7 180 1 207 2 80 1 
65 1 108 1 143 1 162 1 87 1 116 1 20 4 21 1 259 1 166 1 263 1 307 1 188 1 267 1 361 2 289 1 4 1 151 2 51 1 191 1 53 1 70 1 28 1 152 1 342 1 341 1 242 2 154 2 155 1 56 3 243 2 95 1 321 2 225 2 322 1 157 2 99 1 298 2 299 1 63 1 41 1 253 2 350 2 14 1 207 1 80 1 
303 1 304 2 113 3 181 1 183 2 116 2 355 1 268 2 289 1 337 2 222 1 315 1 195 2 319 1 129 1 201 1 346 1 73 1 371 1 11 3 99 1 248 1 12 1 13 1 102 1 14 1 64 1 233 1 
142 1 116 2 38 1 166 1 99 2 289 2 191 2 70 1 14 2 180 1 207 1 222 1 80 1 
94 1 237 1 18 1 116 1 166 1 371 1 99 4 289 4 191 1 70 1 14 4 207 1 107 1 
344 1 294 1 116 1 164 1 133 1 166 1 99 2 289 2 310 1 191 2 365 1 14 2 207 1 80 1 
371 1 99 1 289 1 320 1 282 1 191 1 117 1 14 1 202 1 166 1 
2 1 99 2 289 2 191 1 116 1 329 1 70 1 354 1 14 2 207 1 166 1 
94 1 237 1 18 1 116 3 354 1 133 1 166 2 295 1 371 1 99 4 309 1 289 5 191 2 70 1 14 5 207 2 
94 1 237 1 18 1 116 3 354 1 133 1 166 2 295 1 371 1 99 4 297 1 289 5 191 2 70 1 14 5 207 2 
341 1 155 1 154 2 223 1 95 1 116 1 259 1 166 1 371 1 99 1 361 2 289 1 191 1 28 1 14 1 152 1 207 1 80 1 
344 1 116 1 164 1 133 1 146 1 166 1 99 1 289 1 191 2 14 1 180 1 207 1 80 1 
154 1 95 1 85 1 172 1 3 1 374 1 361 1 381 1 44 1 
8 1 252 1 381 1 
374 1 367 1 172 1 259 1 381 1 
8 1 315 1 367 2 303 1 113 2 238 1 172 2 259 1 23 1 355 1 11 2 374 2 347 1 13 1 269 1 252 1 168 1 160 1 381 1 
229 1 101 1 217 1 221 1 
333 1 84 1 101 1 217 1 284 1 178 1 221 1 
77 1 98 1 284 1 
333 1 46 1 302 1 84 1 197 1 35 2 284 3 74 1 101 1 178 3 217 1 221 1 
30 1 333 1 84 1 101 1 217 1 284 2 178 2 221 1 79 1 
262 1 122 1 333 1 302 1 320 1 84 1 282 1 284 1 178 1 226 1 221 1 
333 1 302 1 84 1 101 1 284 1 178 1 221 1 
333 1 302 1 84 1 101 2 217 1 284 1 178 1 
333 2 302 1 84 2 284 2 185 1 149 1 101 1 178 2 136 1 221 1 
333 1 302 1 293 1 84 1 284 3 122 1 88 1 101 1 217 1 178 3 232 1 79 2 221 2 
333 1 302 1 343 1 84 1 320 1 282 2 86 1 284 2 226 1 202 1 101 1 217 1 178 2 221 1 79 1 
30 1 333 2 302 1 84 2 284 4 122 1 362 1 101 1 217 1 178 4 232 1 79 2 221 2 
333 1 302 1 84 1 101 1 217 1 284 1 178 1 221 1 
333 1 196 1 84 1 197 1 35 1 284 4 122 1 74 1 101 2 217 2 178 4 232 1 79 2 221 3 
333 1 236 1 302 1 212 1 84 1 115 1 284 1 178 2 79 1 
333 1 74 2 302 1 84 1 197 1 101 1 35 2 217 1 291 1 284 3 178 3 221 1 
211 2 171 1 72 1 221 2 
333 1 302 1 170 1 84 1 284 1 178 1 
333 1 302 1 293 1 84 1 101 1 217 1 284 2 178 2 221 1 79 1 
16 1 
333 1 302 1 84 1 101 1 217 1 284 1 178 1 221 1 
333 1 302 1 293 1 84 1 35 1 284 3 101 1 178 3 217 1 79 1 221 1 
122 1 196 1 232 1 221 1 
101 1 221 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 297 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 372 3 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 372 (57,310) 304 299 (213,352) 15 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 372 (274,290) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 372 (57,310) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 372 (57,310) 304 299 (213,352) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 372 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
284 1 174 1 52 2 203 2 264 1 179 2 10 1 269 1 156 1 115 3 343 2 208 6 183 1 93 9 94 2 17 1 271 2 368 1 187 1 119 1 348 1 23 1 42 4 234 9 253 5 169 1 198 1 30 2 
284 1 174 1 52 2 203 2 264 1 179 2 10 1 269 1 156 1 115 3 208 6 183 1 343 2 93 9 94 2 17 1 271 2 368 1 187 1 119 1 348 1 23 1 42 4 234 9 253 5 169 1 198 1 30 2 
284 1 174 1 52 2 203 2 264 1 179 2 10 1 269 1 156 1 115 4 208 7 183 1 343 2 93 10 94 2 17 1 271 2 368 1 187 1 119 1 348 1 23 1 42 5 234 10 253 6 169 1 198 1 30 2 
284 1 52 2 203 2 264 1 179 2 10 1 269 1 156 1 115 2 208 4 183 1 343 1 93 7 94 2 17 1 271 2 368 1 187 1 119 1 348 1 23 1 42 3 234 7 253 4 169 1 198 1 30 2 
17 1 271 1 284 1 174 1 348 1 52 1 42 2 179 1 234 4 253 3 169 1 115 1 343 2 208 3 30 1 198 1 94 1 93 4 
17 1 271 1 284 1 187 1 23 1 52 1 203 1 323 1 234 2 253 1 169 1 11 1 13 1 30 1 94 1 93 2 
17 1 271 2 284 1 203 1 42 1 234 3 253 2 10 1 169 1 115 1 208 1 94 2 93 3 
17 1 271 2 284 1 174 1 308 1 348 1 52 1 222 1 264 1 203 1 179 1 42 4 234 9 253 5 10 1 169 1 115 3 343 2 183 1 208 7 30 1 198 1 94 2 93 9 
17 1 271 2 284 1 174 1 308 1 348 1 52 1 222 1 264 1 203 1 179 1 42 4 234 9 253 5 10 1 169 1 115 3 343 2 183 1 208 7 30 1 198 1 94 2 93 9 
297 1 145 1 21 1 
172 1 289 2 145 1 
265 2 186 2 288 1 201 1 347 2 329 2 120 2 33 2 
150 2 242 1 201 1 262 1 6 1 50 1 33 2 310 1 51 1 129 1 34 1 54 1 265 2 266 1 288 1 207 1 16 1 159 1 186 2 61 2 231 2 62 1 160 1 64 2 347 3 120 3 193 1 68 2 194 1 373 1 325 1 277 1 329 2 278 1 197 1 29 1 103 1 
265 1 186 1 244 1 200 1 201 1 347 1 329 1 49 1 120 1 33 1 
212 1 173 1 200 1 21 1 347 1 120 1 56 1 287 1 145 1 73 1 329 1 279 1 248 1 240 1 
186 1 212 1 173 1 200 1 21 1 347 1 33 1 120 1 265 1 287 2 145 1 73 2 329 1 279 1 240 1 
205 1 287 1 73 1 182 1 270 1 
287 2 145 1 73 2 21 1 114 1 182 1 286 1 270 1 
287 1 73 1 182 1 
186 1 200 1 201 1 347 1 49 1 33 1 120 1 180 1 265 1 287 1 244 1 73 1 329 1 270 1 
145 1 
287 2 145 1 73 2 21 1 114 1 182 1 157 1 270 1 
335 1 232 1 319 2 161 1 21 1 127 2 128 1 358 1 214 1 216 1 165 2 287 5 145 1 73 5 88 1 114 1 116 1 182 2 270 2 
159 1 186 1 150 1 61 1 151 1 242 1 62 1 64 1 162 1 285 1 347 2 6 1 50 1 51 1 310 1 120 2 265 1 329 1 197 1 16 1 
297 1 288 1 
354 1 186 1 347 2 120 2 263 1 33 1 265 1 288 2 329 2 
151 1 32 1 48 1 
159 1 150 1 61 1 242 1 62 1 64 1 347 1 6 1 120 1 310 1 51 1 50 1 288 1 197 1 14 1 16 1 
265 3 186 3 288 1 285 1 347 3 329 3 33 1 120 3 
265 1 186 1 244 1 200 1 347 1 329 1 120 1 
354 1 265 1 186 1 200 1 347 1 329 1 120 1 33 1 263 1 
150 1 242 1 173 1 200 1 285 1 201 1 262 1 6 1 50 1 51 1 310 1 33 2 263 1 129 1 34 1 265 3 266 1 287 1 288 1 16 1 159 1 186 3 61 1 231 1 212 1 62 1 160 1 64 1 162 1 347 4 371 1 120 4 193 1 68 2 194 1 325 1 277 1 351 1 73 1 329 3 197 1 279 1 103 1 240 1 
265 1 56 1 186 1 288 1 285 1 347 2 329 2 309 1 120 2 
186 3 212 1 173 1 200 1 162 1 285 2 347 3 33 1 263 1 120 3 371 1 9 1 265 3 287 1 145 1 73 1 329 3 279 1 240 1 
186 2 151 1 32 1 285 1 347 2 263 1 33 1 120 2 265 2 329 2 
159 1 150 1 61 1 242 1 62 1 64 1 347 1 6 1 120 1 310 1 51 1 50 1 288 1 197 1 16 1 
150 1 61 1 242 1 274 1 62 1 64 1 347 1 5 1 6 1 120 1 51 1 50 1 288 1 197 1 16 1 
151 2 32 2 126 1 262 1 48 2 129 1 34 1 59 1 294 1 231 4 160 2 164 1 193 1 68 2 350 1 373 2 325 1 100 1 301 1 168 1 330 1 122 1 103 1 123 1 
265 1 186 1 181 1 173 1 200 1 347 1 329 1 120 1 
186 4 1 1 285 2 162 1 347 5 309 1 120 5 263 1 33 1 265 4 56 1 288 1 329 5 184 1 
265 2 186 2 181 1 244 1 200 1 347 2 329 2 120 2 
251 1 257 1 
251 1 257 1 
276 1 25 1 
276 1 25 1 
276 1 25 1 
251 1 257 1 110 1 
251 1 257 1 110 1 
220 1 251 1 257 1 
149 1 276 1 25 1 175 1 251 2 257 2 
251 1 257 1 110 1 
133 1 251 1 257 1 
133 1 251 1 257 1 
133 1 251 1 257 1 
149 1 334 1 233 1 249 1 275 1 251 2 360 1 153 2 84 2 287 2 145 1 73 2 228 2 117 1 91 1 257 2 38 2 136 3 221 2 
283 1 260 1 80 1 265 2 84 1 153 1 287 1 288 1 228 1 315 1 342 1 136 1 38 1 186 2 320 1 275 1 347 2 120 2 251 1 296 1 73 1 329 2 220 1 257 1 
52 1 30 1 179 1 
13 1 52 1 30 1 
235 1 199 1 58 1 13 1 179 2 30 3 
235 1 199 1 13 1 179 1 118 1 30 2 
235 1 199 2 13 1 179 1 30 2 
172 1 353 2 335 3 4 1 47 2 126 1 127 1 128 2 178 2 80 1 287 5 289 3 342 1 114 1 182 1 365 1 209 1 270 4 367 1 232 1 319 1 320 1 20 1 21 1 192 1 165 1 301 1 73 5 145 2 302 1 122 1 123 1 
172 3 353 6 355 1 335 8 126 3 127 2 128 6 178 6 223 1 205 5 287 9 289 9 114 1 182 6 365 3 270 7 137 5 367 2 95 1 232 1 320 4 319 2 98 1 21 1 322 1 192 1 216 1 165 2 301 3 73 9 256 1 145 5 302 2 122 3 123 3 
172 2 353 2 335 3 4 1 47 1 126 1 127 1 128 2 178 2 287 3 289 4 209 1 365 1 270 2 367 1 319 1 320 1 21 1 165 1 216 1 301 1 145 3 73 3 302 1 122 1 123 1 
172 3 353 4 335 5 4 1 47 2 126 2 127 1 128 4 178 4 287 4 289 7 209 1 365 2 270 3 367 1 95 1 319 1 320 2 21 1 98 1 322 1 165 1 216 1 301 2 145 4 73 4 302 1 122 2 123 2 
297 1 372 1 
27 1 197 1 
341 1 
197 1 16 1 
259 1 3 1 197 1 50 1 372 1 16 1 
197 1 50 1 16 1 
227 1 197 1 
231 7 160 3 139 1 370 1 204 1 215 1 350 2 43 1 81 1 298 1 70 2 373 4 268 1 330 3 122 1 123 1 258 1 
231 7 160 3 139 1 370 1 204 1 215 1 350 2 43 1 81 1 298 1 70 2 373 4 268 1 330 3 122 1 123 1 258 1 
231 7 160 3 139 1 370 1 204 1 215 1 350 2 81 1 43 1 298 1 130 1 70 2 373 4 268 1 330 3 122 1 123 1 258 1 
357 1 126 3 261 1 306 1 129 1 204 1 34 1 81 1 268 1 113 1 365 3 135 1 18 1 231 31 160 15 139 2 250 3 370 5 193 1 68 2 215 2 43 2 350 5 298 2 373 16 70 3 301 3 327 1 219 4 330 10 122 4 103 1 123 4 258 1 
129 2 34 2 204 1 81 1 314 1 231 9 97 1 139 1 160 4 370 1 193 2 68 4 215 1 43 1 350 3 298 1 373 5 70 2 327 1 330 4 122 1 103 2 123 1 258 1 
150 1 242 1 284 1 52 1 203 1 179 1 226 1 291 1 58 1 13 1 246 1 208 1 93 2 94 1 17 1 271 1 61 1 369 1 19 1 62 1 64 1 295 1 189 1 163 1 234 2 253 1 169 1 75 1 30 2 105 1 
333 1 150 1 242 1 284 1 52 1 203 1 179 1 58 1 155 1 13 1 246 1 208 2 210 1 93 3 94 1 17 1 271 1 61 1 369 1 19 1 62 1 64 1 295 1 189 1 163 1 234 3 253 1 75 1 30 2 105 1 
150 1 242 1 284 1 52 1 203 1 179 1 58 1 155 1 13 1 246 1 208 2 210 1 93 2 17 1 61 1 369 1 62 1 64 1 295 1 189 1 163 1 234 2 253 1 30 2 105 1 
333 1 271 1 150 1 61 1 242 1 62 1 138 1 64 1 6 1 189 2 295 2 163 2 24 1 203 2 340 1 82 1 234 1 131 1 238 1 197 1 16 1 94 1 93 1 
271 1 150 1 61 1 242 1 369 1 62 1 19 1 64 1 189 1 295 1 163 1 52 1 203 1 179 1 226 1 234 1 169 1 58 1 13 1 246 1 75 1 30 2 210 1 105 1 94 1 93 1 
241 1 
150 2 336 1 335 2 242 1 200 1 202 2 6 2 338 2 56 1 287 5 289 2 114 3 248 1 16 1 344 1 61 2 212 1 62 1 64 2 21 1 347 1 120 1 67 2 165 1 73 5 170 1 121 1 31 1 172 2 173 1 127 1 128 2 82 1 132 1 87 1 182 6 366 2 92 2 367 1 232 1 319 1 191 1 99 1 326 1 101 2 145 2 238 1 329 1 146 1 197 1 279 1 332 4 280 2 281 1 240 1 
173 1 200 1 56 1 287 3 132 1 87 1 114 1 182 2 157 1 248 1 92 1 344 1 212 1 347 1 120 1 326 1 73 3 329 1 170 1 279 1 332 2 240 1 
173 1 200 1 338 1 56 1 287 3 132 1 87 1 114 1 182 1 157 1 248 1 344 1 212 1 347 1 21 1 120 1 326 1 73 3 145 1 329 1 170 1 279 1 332 3 240 1 
173 1 200 1 338 1 56 1 287 3 132 1 87 1 114 1 157 1 182 2 366 1 248 1 92 1 344 1 212 1 347 1 21 1 120 1 326 1 73 3 145 1 329 1 170 1 279 1 332 3 240 1 
335 1 336 1 200 1 202 2 338 4 56 1 287 5 114 3 157 1 248 1 344 1 212 1 347 1 21 5 120 1 67 2 165 1 73 5 170 1 172 2 173 1 127 1 128 1 79 1 224 1 132 1 267 1 87 1 182 7 366 4 92 4 232 1 319 1 191 1 324 1 326 1 101 2 145 5 102 1 329 1 279 1 332 6 280 2 240 1 
335 1 336 1 200 1 202 2 338 2 56 1 287 4 289 2 114 2 248 1 344 1 212 1 347 1 21 1 120 1 67 2 165 1 73 4 170 1 121 1 172 2 173 1 127 1 128 1 132 1 87 1 182 4 366 2 92 2 232 1 319 1 191 1 326 1 101 2 145 2 329 1 279 1 332 4 280 2 240 1 
172 2 336 1 335 1 173 1 200 1 202 2 127 1 128 1 79 1 338 2 224 1 56 1 287 4 132 1 87 1 114 2 182 4 366 2 92 2 248 1 344 1 212 1 232 1 319 1 21 1 347 1 191 1 120 1 67 2 165 1 324 1 326 1 101 2 145 1 73 4 329 1 170 1 279 1 332 4 280 2 240 1 
172 2 336 1 335 1 173 1 200 1 202 2 127 1 128 1 79 1 338 2 224 1 56 1 287 4 132 1 87 1 114 2 182 4 366 2 92 2 248 1 344 1 212 1 232 1 319 1 21 1 347 1 191 1 120 1 67 2 165 1 324 1 326 1 101 2 145 1 73 4 329 1 170 1 279 1 332 4 280 2 240 1 
336 1 335 1 173 1 200 1 176 2 202 2 127 1 128 1 338 2 8 1 224 1 56 1 287 4 289 2 132 1 87 1 114 2 182 4 366 2 92 2 248 1 344 1 212 1 232 1 319 1 21 1 347 1 22 1 120 1 252 1 165 1 326 1 218 2 145 1 73 4 329 1 170 1 279 1 332 4 280 2 240 1 
172 2 336 1 335 1 173 1 200 1 202 2 127 1 128 1 79 1 338 3 224 1 56 1 287 4 132 1 267 1 87 1 114 2 182 5 366 3 248 1 92 3 344 1 212 1 232 1 319 1 21 1 347 1 191 1 120 1 67 2 165 1 324 1 326 1 101 2 145 1 73 4 329 1 170 1 279 1 332 5 280 2 240 1 
172 2 336 1 335 1 173 1 200 1 202 2 127 1 128 1 79 1 338 3 224 1 56 1 287 4 132 1 267 1 87 1 114 2 182 5 366 3 248 1 92 3 344 1 212 1 232 1 319 1 21 1 347 1 191 1 120 1 67 2 165 1 324 1 326 1 101 2 145 1 73 4 329 1 170 1 279 1 332 5 280 2 240 1 
335 1 336 1 200 1 202 2 338 2 56 1 287 4 289 2 114 2 248 1 344 1 212 1 347 1 21 1 22 1 120 1 165 1 218 2 73 4 170 1 121 1 173 1 127 1 176 2 128 1 132 1 87 1 182 4 366 2 92 2 232 1 319 1 326 1 145 1 329 1 279 1 332 4 280 2 240 1 
151 1 32 1 262 1 48 1 129 1 34 1 204 1 81 1 288 2 294 1 231 6 160 3 193 1 68 2 215 1 350 2 298 1 297 1 325 1 373 3 70 1 330 2 122 1 103 1 123 1 258 1 
151 11 32 4 126 1 262 2 48 11 129 2 34 2 54 1 206 1 288 1 113 1 365 2 135 1 231 14 160 6 250 3 370 1 193 2 68 4 350 1 325 1 373 8 301 2 277 1 196 1 71 1 219 3 44 1 330 2 171 1 122 1 103 2 123 2 
150 1 242 1 32 1 285 1 262 1 6 1 50 1 51 1 310 1 129 1 34 1 54 1 265 1 83 1 206 1 288 1 89 1 14 1 16 1 159 1 61 1 186 1 231 2 62 1 64 1 160 1 162 1 347 2 120 2 193 1 68 2 325 1 373 1 195 1 277 1 329 1 197 1 103 1 
150 3 242 2 151 7 285 1 6 1 48 7 51 2 50 2 204 1 54 1 206 1 55 2 288 2 210 1 16 2 159 2 61 3 62 2 160 10 64 3 162 1 347 3 213 2 120 3 68 6 215 1 350 4 298 1 70 1 301 2 28 1 122 3 123 3 258 1 32 7 126 2 262 3 310 2 129 3 34 3 81 1 361 1 265 1 364 1 365 2 318 2 186 1 231 20 370 4 193 3 194 2 325 3 373 10 277 1 236 2 329 1 330 8 197 2 103 3 
124 1 150 7 242 2 2 1 77 1 285 1 262 2 6 2 177 1 129 2 34 2 54 1 82 1 265 1 291 1 210 1 16 2 294 1 186 1 61 8 231 2 273 1 62 2 64 8 160 1 347 1 120 1 349 1 193 2 68 4 325 2 373 1 277 1 329 1 238 1 45 1 197 3 29 2 103 2 
151 1 32 1 126 1 262 1 48 1 33 1 263 1 129 1 34 1 265 1 206 1 292 1 365 1 186 1 231 3 160 2 347 1 120 1 193 1 68 2 350 1 325 1 373 1 301 1 329 1 330 1 122 1 103 1 123 1 
294 1 151 1 231 2 32 1 262 1 370 1 48 1 193 1 129 1 68 2 34 1 325 1 373 2 301 1 330 1 59 1 103 1 123 1 
294 1 151 1 231 2 32 1 160 2 126 1 262 1 48 1 193 1 129 1 68 2 34 1 350 1 325 1 168 1 330 1 122 1 103 1 
151 2 32 2 126 1 262 1 48 2 129 1 34 1 365 1 294 1 231 4 160 2 370 1 193 1 68 2 350 1 373 2 325 1 301 1 330 2 122 1 103 1 123 1 
124 1 151 1 231 2 32 1 262 1 370 1 48 1 193 1 129 1 68 2 34 1 325 1 373 2 301 1 330 1 59 1 103 1 123 1 
124 1 151 1 231 2 32 1 160 2 126 1 262 1 48 1 193 1 129 1 68 2 34 1 350 1 325 1 168 1 330 1 122 1 103 1 
124 1 151 2 32 2 126 1 262 1 48 2 129 1 34 1 365 1 231 4 160 2 370 1 193 1 68 2 350 1 373 2 325 1 301 1 330 2 122 1 103 1 123 1 
151 2 32 2 126 1 262 1 48 2 129 1 34 1 365 1 231 4 160 2 370 1 193 1 68 2 350 1 373 2 325 1 301 1 330 2 122 1 103 1 123 1 
150 1 242 1 262 1 6 1 50 1 51 1 310 1 129 1 34 1 54 1 288 1 16 1 159 1 61 1 231 2 62 1 64 1 160 1 347 1 120 1 193 1 68 2 194 1 373 1 325 1 277 1 197 1 103 1 
150 1 242 1 5 1 262 1 6 1 50 1 51 1 129 1 34 1 54 1 288 1 16 1 61 1 231 2 62 1 274 1 64 1 160 1 347 1 120 1 193 1 68 2 373 1 325 1 255 1 277 1 197 1 103 1 
151 2 32 2 126 1 262 1 48 2 129 1 34 1 206 1 365 1 231 4 160 2 370 1 193 1 68 2 350 1 373 2 325 1 301 1 330 2 122 1 103 1 123 1 
150 1 151 2 242 1 32 2 126 1 262 1 48 2 50 1 51 1 310 1 129 1 34 1 291 1 365 1 16 1 318 1 159 1 61 1 231 4 62 1 160 2 64 1 347 1 370 1 120 1 193 1 68 2 350 1 194 1 373 2 325 1 301 1 330 2 197 1 122 1 103 1 123 1 
151 1 32 1 126 1 262 1 48 1 33 1 263 1 129 1 34 1 265 1 206 1 365 1 186 1 231 3 160 1 347 1 370 1 120 1 193 1 68 2 325 1 373 2 301 1 329 1 330 1 303 1 122 1 103 1 123 1 
107 1 108 1 126 4 7 1 311 1 129 3 312 1 204 1 34 3 81 1 225 1 314 1 37 1 113 3 245 2 90 4 365 4 135 1 272 1 231 41 160 21 346 1 250 3 370 4 193 3 68 6 215 1 350 4 298 1 70 1 373 20 327 1 301 4 377 1 376 1 219 4 74 1 237 1 330 8 122 5 103 3 123 5 258 1 
107 1 108 1 126 3 7 1 311 1 129 4 312 1 204 1 34 4 81 1 225 1 314 1 37 1 113 3 245 2 90 4 365 4 135 1 272 1 231 38 160 18 346 1 250 3 370 3 193 4 68 8 215 1 350 4 298 1 70 1 373 20 327 2 301 4 377 1 376 1 219 4 74 1 237 1 330 7 122 4 103 4 123 5 258 1 
107 1 108 1 126 7 7 1 311 1 129 2 312 1 204 1 34 2 81 1 225 1 314 1 37 1 113 2 245 1 90 4 365 7 135 2 231 52 160 25 346 1 250 4 370 7 193 2 68 4 215 1 350 7 298 1 70 1 373 27 327 1 301 7 377 1 376 1 219 4 237 1 44 2 330 14 122 8 103 2 123 8 258 1 
107 1 126 3 7 2 311 1 129 2 312 1 34 2 313 1 314 1 113 1 245 1 90 2 365 3 135 1 231 19 160 10 250 1 370 3 193 2 68 4 350 3 373 9 301 3 219 2 74 1 237 1 330 6 122 3 103 2 123 3 
107 1 108 1 126 2 7 1 311 2 129 3 312 1 34 3 225 1 314 1 37 1 113 2 245 2 90 4 365 3 231 26 160 12 346 1 250 2 370 2 193 3 68 6 350 2 373 14 327 2 301 3 377 1 219 2 376 1 237 1 330 4 122 2 103 3 123 3 
149 1 334 1 35 1 84 1 153 1 249 1 228 1 251 1 38 1 257 1 
260 1 220 1 
84 1 153 1 228 1 142 1 337 1 359 1 251 1 38 1 257 1 
149 1 334 1 233 1 249 1 275 1 251 1 287 1 153 1 84 1 145 1 73 1 228 1 117 1 91 1 257 1 38 1 136 2 221 1 
149 1 334 1 233 1 249 1 275 1 251 1 287 1 153 1 84 1 145 1 73 1 228 1 117 1 91 1 257 1 38 1 136 2 221 1 
149 1 334 1 233 1 249 1 275 1 251 1 287 1 153 1 84 1 145 1 73 1 228 1 117 1 91 1 257 1 38 1 136 2 221 1 
167 1 175 1 110 1 
167 1 175 1 110 1 
133 1 106 1 
175 1 133 1 106 1 
283 1 296 1 
283 1 260 1 80 1 265 2 287 1 84 1 153 1 288 1 228 1 315 1 342 1 270 1 38 1 136 1 186 2 233 1 320 1 347 2 120 2 251 1 296 1 73 1 329 2 220 1 104 1 257 1 221 1 
167 1 110 1 
175 1 133 1 106 1 
150 2 242 1 262 1 177 1 129 1 34 1 54 1 206 1 86 1 16 1 230 1 61 2 231 2 62 1 64 2 160 1 347 2 120 2 349 1 193 1 68 2 69 1 325 1 373 1 277 1 329 2 197 1 29 2 239 1 103 1 76 1 
46 1 150 2 61 2 242 1 369 1 62 1 64 2 163 1 52 1 179 1 166 1 58 1 112 1 291 1 13 1 75 1 30 2 210 1 105 1 
150 1 61 1 369 1 242 1 62 1 64 1 163 1 52 1 179 1 166 1 328 1 58 1 13 1 75 1 30 2 210 1 105 1 
150 1 61 1 242 1 62 1 64 1 6 1 163 1 82 1 131 1 112 1 238 1 197 1 16 1 282 1 
46 1 150 1 61 1 369 1 242 1 62 1 64 1 163 1 52 1 179 1 166 1 58 1 112 1 13 1 75 1 30 2 210 1 105 1 
229 1 
297 1 335 1 145 1 161 1 21 1 128 1 116 1 
172 1 335 1 127 1 128 1 287 1 289 1 114 1 182 1 232 1 319 1 21 1 191 1 67 1 165 1 101 1 145 2 73 1 
259 1 150 1 242 1 335 1 127 1 6 1 50 1 57 1 182 1 15 1 16 1 367 1 61 1 232 1 62 2 64 1 319 1 321 1 372 1 165 1 299 1 27 2 352 1 197 3 304 1 
353 5 172 3 108 1 335 8 126 2 127 2 128 5 178 5 225 1 287 1 85 2 289 6 37 1 113 1 114 1 182 1 365 2 367 1 293 1 232 2 319 2 65 1 250 1 21 2 165 2 301 2 72 1 377 1 73 1 219 1 145 5 376 1 146 1 122 2 123 2 
335 2 200 1 201 1 127 1 128 2 79 1 49 1 33 1 204 1 180 1 265 1 287 1 244 1 85 2 186 1 232 1 319 1 347 1 120 1 215 1 165 1 298 1 72 1 73 1 329 1 122 1 378 1 123 2 
335 1 232 1 319 1 161 1 127 1 21 1 128 1 165 1 145 1 116 1 
353 5 172 5 335 5 126 2 128 5 178 5 85 2 301 2 289 10 236 1 72 1 145 5 122 2 365 2 123 2 
287 1 145 1 73 1 21 1 114 1 182 1 
150 4 242 1 356 1 335 2 127 2 6 2 128 2 82 1 287 3 247 1 114 2 182 4 134 2 16 1 367 2 158 1 61 4 232 1 62 1 319 2 64 4 99 1 216 1 165 2 73 3 238 1 146 2 197 1 281 1 
150 1 242 1 201 1 262 1 6 1 33 2 310 1 51 1 50 1 129 1 34 1 265 2 266 1 288 1 16 1 159 1 61 1 186 2 231 1 62 1 160 1 64 1 347 3 120 3 193 1 68 2 194 1 325 1 277 1 329 2 197 1 103 1 
172 2 353 2 367 1 335 1 232 1 319 1 127 1 21 2 128 2 178 2 165 1 70 1 289 4 145 4 146 1 
211 1 84 1 38 1 
211 1 84 1 38 1 
283 1 334 1 254 1 84 1 38 1 
211 1 84 1 38 1 
84 1 109 1 38 1 
84 1 109 1 38 1 
84 1 109 1 38 1 
84 1 38 1 
251 1 257 1 
129 1 34 1 204 1 81 1 314 1 37 1 113 1 231 8 160 4 250 1 193 1 68 2 215 1 350 2 298 1 70 1 373 4 219 1 330 2 122 1 103 1 123 1 258 1 
129 2 204 1 34 2 81 1 314 1 37 1 113 1 316 1 365 1 135 1 231 11 160 5 250 1 370 1 193 2 68 4 215 1 350 2 298 1 70 1 373 6 301 1 219 2 330 3 122 1 103 2 123 2 258 1 
108 1 126 2 129 3 204 1 34 3 81 1 225 1 314 1 37 1 113 1 316 1 365 2 231 19 160 10 250 1 370 1 193 3 68 6 215 1 350 3 298 1 70 1 373 9 301 2 327 1 377 1 219 1 376 1 330 4 122 3 103 3 123 3 258 1 
108 1 126 1 129 3 204 1 34 3 81 1 225 1 314 1 37 1 113 1 316 1 365 2 231 17 160 7 250 1 370 2 193 3 68 6 215 1 350 3 298 1 70 1 373 10 327 1 301 2 219 1 376 1 377 1 330 5 122 2 103 3 123 3 258 1 
129 1 34 1 204 1 81 1 314 1 37 1 113 1 231 8 160 4 250 1 193 1 68 2 215 1 350 2 298 1 70 1 373 4 219 1 330 2 122 1 103 1 123 1 258 1 
108 1 126 2 129 1 34 1 225 1 314 1 37 1 113 1 365 2 231 12 160 6 250 1 370 1 193 1 68 2 350 1 373 6 301 2 219 1 376 1 377 1 330 2 122 2 103 1 123 2 
108 1 126 1 129 4 204 1 34 4 81 1 225 1 314 1 37 1 113 1 316 1 365 2 231 18 160 8 250 1 370 2 193 4 68 8 215 1 350 3 298 1 70 1 373 10 301 2 327 2 377 1 219 1 376 1 330 5 122 2 103 4 123 3 258 1 
108 1 126 2 129 4 34 4 225 1 314 1 37 1 113 1 365 3 231 16 160 7 250 1 370 3 193 4 68 8 350 3 373 9 301 3 327 2 377 1 219 1 376 1 74 1 330 6 122 2 103 4 123 3 
231 7 160 4 370 3 215 3 204 1 81 2 350 3 298 3 373 3 330 6 122 1 123 1 258 1 
108 1 126 1 129 4 204 1 34 4 81 1 225 1 314 1 37 1 113 1 365 2 231 18 160 8 250 1 370 1 193 4 68 8 215 1 350 3 298 1 70 1 373 10 301 2 327 2 377 1 219 1 376 1 74 1 330 4 122 2 103 4 123 3 258 1 
231 8 160 4 370 1 193 2 129 2 68 4 204 1 34 2 215 1 350 2 81 1 298 1 70 1 373 4 327 1 330 3 122 1 103 2 123 1 258 1 
231 6 160 3 215 1 204 1 81 1 350 2 297 1 298 1 70 1 373 3 330 2 122 1 123 1 258 1 
231 4 160 2 126 1 370 1 193 1 129 1 68 2 34 1 350 1 373 2 301 1 330 2 122 1 316 1 103 1 365 1 123 1 
231 7 160 4 126 1 250 1 370 1 350 1 373 3 301 1 219 2 113 1 330 2 122 1 365 1 135 1 123 1 
125 1 126 2 129 2 204 1 34 2 81 1 365 2 135 1 231 23 160 12 250 2 370 4 193 2 68 4 215 2 350 5 298 2 70 1 373 11 301 2 327 2 219 2 44 1 330 9 171 1 122 3 103 2 123 3 258 1 
231 1 160 1 219 1 
231 1 373 1 250 1 
231 6 160 3 126 1 370 1 193 1 129 1 68 2 34 1 350 2 373 3 301 1 236 1 330 3 316 1 122 1 103 1 365 1 123 1 
108 1 126 2 129 1 34 1 225 1 314 1 37 1 113 1 365 2 231 12 160 6 250 1 370 1 193 1 68 2 350 1 373 6 301 2 219 1 376 1 377 1 330 2 122 2 103 1 123 2 
231 6 160 3 370 1 204 1 215 1 350 1 298 1 373 3 330 2 122 1 123 1 
231 3 125 1 160 2 370 1 193 1 129 1 68 2 215 1 34 1 350 1 81 1 298 1 373 1 327 1 330 2 103 1 258 1 
231 10 160 5 370 2 193 1 129 1 68 2 34 1 215 2 204 1 350 3 298 2 314 1 373 5 330 5 122 2 103 1 378 1 123 2 
231 2 370 1 193 1 129 1 68 2 34 1 314 1 373 2 301 1 330 1 103 1 123 1 
231 4 160 2 126 1 370 1 193 1 129 1 68 2 34 1 350 1 314 1 373 2 301 1 330 2 122 1 103 1 365 1 123 1 
231 3 125 1 160 2 370 1 193 3 129 3 68 6 34 3 215 1 350 1 298 1 314 1 373 1 327 1 74 1 330 2 103 3 
125 1 357 1 261 1 126 3 129 5 204 2 34 5 81 1 314 1 113 1 316 1 365 3 135 1 18 1 231 34 160 18 250 3 370 5 193 5 68 10 215 3 350 7 298 3 70 1 373 16 327 2 301 3 219 4 74 1 330 12 122 5 103 5 123 5 258 1 
56 1 288 1 188 1 347 1 329 1 309 1 120 1 
188 1 141 1 347 1 309 1 120 1 143 1 56 1 288 1 374 1 329 1 60 1 317 1 
82 1 297 1 61 1 150 1 242 1 62 1 64 1 238 1 6 1 197 1 16 1 
186 1 150 1 61 1 242 1 62 1 64 1 285 1 347 2 6 1 50 1 51 1 120 2 310 1 265 1 288 1 329 1 197 1 16 1 
186 1 150 1 61 1 242 1 173 1 200 1 62 1 64 1 285 1 347 2 50 2 51 1 120 2 310 1 217 1 265 2 288 1 227 1 329 2 197 3 240 1 134 1 16 2 
150 2 242 1 173 1 200 1 243 1 285 1 51 1 50 2 265 2 288 1 227 1 134 1 16 2 61 2 186 1 274 1 62 1 64 2 347 2 120 2 217 1 329 2 197 3 240 1 
61 1 150 1 287 1 27 1 290 1 64 1 73 1 197 1 372 1 182 1 134 1 
61 1 150 1 57 1 287 1 27 1 64 1 73 1 197 1 372 1 182 1 134 1 
61 1 150 1 242 1 62 1 64 1 45 1 
259 1 305 1 150 6 61 7 242 2 273 1 62 3 2 1 64 7 77 1 6 2 50 1 349 1 339 1 291 1 45 1 29 1 197 3 363 1 210 1 16 2 
150 1 151 1 242 1 32 1 285 1 262 2 48 1 50 1 51 1 310 1 129 2 204 1 34 2 81 1 265 1 206 1 288 2 291 1 16 1 318 1 159 1 186 1 61 1 231 6 62 1 160 3 64 1 347 2 213 1 120 2 193 2 68 4 215 1 69 1 350 2 194 1 298 1 70 1 373 3 325 2 329 1 330 2 197 1 122 1 103 2 123 1 258 1 
61 1 150 1 356 1 232 1 319 1 64 1 127 1 6 1 372 1 165 1 57 1 299 1 287 1 27 1 73 1 352 1 197 1 182 1 270 1 304 1 
259 1 61 1 150 1 242 1 62 2 64 1 321 1 45 1 197 1 50 1 372 1 16 1 
150 4 61 4 242 1 62 1 64 4 243 1 307 1 6 1 82 1 291 1 238 1 197 1 16 1 
305 1 150 2 61 2 242 1 62 2 64 2 78 1 50 1 28 1 154 1 197 1 363 1 134 1 16 1 
61 1 150 1 242 1 62 1 64 1 13 1 6 1 52 1 30 1 105 1 
61 2 150 2 242 1 62 1 86 1 64 2 291 1 197 1 349 1 210 1 16 1 
150 4 61 5 242 2 273 1 62 2 64 5 77 1 307 1 6 1 349 1 82 1 238 1 291 1 197 3 134 1 16 2 
150 4 61 5 96 1 242 2 62 2 64 5 77 1 307 1 6 1 349 1 82 1 238 1 291 1 197 3 134 1 16 2 
186 1 150 1 61 1 242 1 62 1 274 1 64 1 285 1 347 2 6 1 50 1 51 1 120 2 265 1 288 1 329 1 197 1 16 1 
259 1 305 1 150 1 61 1 242 1 62 2 64 1 50 1 339 1 197 1 363 1 134 1 16 1 
0 1 300 1 36 1 288 1 63 1 
185 1 0 2 212 1 173 1 200 1 63 1 21 1 66 1 371 1 287 2 36 2 300 2 288 1 145 1 73 2 279 1 147 1 240 1 270 1 
0 1 230 1 36 1 63 1 347 1 329 1 120 1 239 1 76 1 
185 1 63 1 66 1 
17 1 297 1 253 1 284 1 
17 1 234 1 271 1 253 1 284 1 93 1 94 1 
295 1 203 1 93 1 
17 1 234 3 271 1 253 1 284 1 375 1 140 1 169 1 190 1 23 2 93 3 94 1 
17 1 234 2 271 1 253 1 284 1 208 1 343 1 93 2 94 1 
234 1 271 1 253 1 169 1 52 1 30 1 179 1 42 1 198 1 93 1 94 1 
234 1 271 1 253 1 284 1 169 1 93 1 94 1 
17 1 234 1 271 1 284 2 169 1 93 1 94 1 
234 2 271 2 253 1 26 1 284 1 169 1 152 1 53 1 93 2 94 2 
17 1 234 3 271 1 253 2 284 1 169 1 115 1 208 2 183 1 264 1 42 1 93 3 94 1 
17 1 271 1 284 1 52 1 41 1 179 1 234 2 253 1 169 1 58 1 13 1 208 1 30 2 94 1 93 2 
17 1 271 2 284 1 174 1 42 1 234 4 253 2 169 1 115 1 343 1 208 2 94 2 93 4 
17 1 234 1 271 1 253 1 284 1 169 1 93 1 94 1 
17 2 271 1 284 2 140 1 23 1 42 1 234 4 253 3 375 1 115 1 208 2 148 1 93 4 94 1 
17 1 234 2 271 1 253 1 284 1 169 1 40 1 331 1 208 1 222 1 93 2 94 1 
17 1 271 1 284 1 140 1 23 2 234 3 253 1 375 2 169 1 12 1 94 1 93 3 
144 1 39 1 253 2 362 2 
234 1 271 1 169 1 111 1 93 1 94 1 
17 1 234 2 271 1 253 1 284 1 169 1 208 1 264 1 93 2 94 1 
345 1 
17 1 234 1 271 1 253 1 284 1 169 1 93 1 94 1 
17 1 271 1 284 1 23 1 264 1 234 3 253 1 169 1 208 1 94 1 93 3 
253 1 115 1 148 1 42 1 
253 1 284 1 

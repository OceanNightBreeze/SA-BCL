#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3767 | 1 -> 0
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification; | RETURN | 587 | return null
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
103 1 333 1 28 2 196 1 85 1 107 1 135 7 298 9 175 2 224 1 364 1 178 3 179 1 92 1 345 2 235 1 282 4 16 9 117 5 188 1 99 1 123 1 313 1 264 1 
103 1 333 1 28 2 196 1 85 1 107 1 135 7 298 9 175 2 224 1 364 1 178 3 179 1 92 1 345 2 235 1 282 4 16 9 117 5 188 1 99 1 123 1 313 1 264 1 
333 1 172 1 28 2 196 1 361 1 85 1 107 2 135 6 298 9 175 2 224 2 178 3 179 2 92 1 345 2 346 1 235 1 282 4 16 9 117 5 188 1 47 1 99 1 352 1 123 1 52 1 313 2 264 1 
333 1 172 1 28 2 196 1 361 1 85 1 107 2 135 6 298 9 175 2 224 2 178 3 179 2 92 1 345 2 346 1 235 1 282 4 16 9 117 5 188 1 47 1 99 1 352 1 123 1 52 1 313 2 264 1 
333 1 172 1 28 2 196 1 361 1 85 1 107 2 135 7 298 10 175 2 224 2 178 4 179 2 92 1 345 2 346 1 235 1 282 5 16 10 117 6 188 1 47 1 99 1 352 1 123 1 52 1 313 2 264 1 
333 1 172 1 28 2 196 1 361 1 85 1 107 2 135 4 298 7 175 2 224 2 178 2 179 2 92 1 345 1 346 1 235 1 282 3 16 7 117 4 47 1 99 1 352 1 123 1 52 1 313 2 264 1 
92 1 345 2 333 1 196 1 28 1 282 2 16 4 117 3 85 1 107 1 188 1 135 3 298 4 175 1 224 1 178 1 179 1 264 1 
333 1 196 1 28 1 172 1 16 2 117 1 85 1 47 1 298 2 175 1 224 1 339 1 179 1 313 1 355 1 278 1 
333 1 196 1 28 2 282 1 16 3 117 2 85 1 135 1 298 3 175 2 99 1 178 1 313 1 
111 1 295 1 75 1 
177 2 162 1 295 1 
137 2 191 2 217 2 1 1 114 1 192 2 86 2 212 2 
83 1 58 1 131 1 217 2 1 1 336 1 33 1 86 3 88 1 137 2 340 2 274 1 10 1 159 1 161 1 40 2 252 1 145 1 94 2 114 1 184 1 95 1 329 1 257 1 349 1 166 1 212 2 98 1 22 1 353 2 191 3 192 2 263 1 194 1 292 1 317 1 170 2 
65 1 137 1 273 1 191 1 217 1 1 1 192 1 365 1 86 1 212 1 
344 1 181 1 143 1 71 1 217 1 295 1 174 1 116 1 222 1 86 1 111 1 273 1 191 1 80 1 
181 2 344 1 143 2 71 1 217 1 295 1 174 1 116 1 212 1 86 1 111 1 137 1 273 1 191 1 192 1 
181 1 143 1 242 1 256 1 186 1 
181 2 143 2 111 1 67 1 242 1 295 1 256 1 296 1 
181 1 143 1 242 1 
181 1 143 1 1 1 217 1 256 1 212 1 86 1 65 1 324 1 137 1 273 1 191 1 192 1 365 1 
295 1 
181 2 143 2 111 1 67 1 242 1 295 1 256 1 152 1 
181 5 249 2 13 1 366 1 143 5 367 1 295 1 348 1 256 2 243 2 220 1 213 1 111 1 67 1 242 2 202 1 112 1 356 1 343 2 
40 1 145 1 217 1 184 1 133 1 95 1 257 1 167 1 166 1 98 1 212 1 86 2 36 1 340 1 191 2 274 1 192 1 194 1 317 1 170 1 
114 1 75 1 
217 2 114 2 3 1 86 2 212 1 137 1 261 1 191 2 192 1 
375 1 133 1 276 1 
102 1 40 1 145 1 114 1 184 1 95 1 257 1 166 1 86 1 98 1 340 1 191 1 274 1 194 1 170 1 317 1 
359 1 217 5 114 1 269 1 167 2 222 1 212 4 86 5 150 1 137 1 261 1 36 1 191 5 192 4 
65 1 273 1 191 2 217 2 15 1 192 2 86 2 212 2 
137 1 191 3 217 3 114 1 192 3 167 1 86 3 212 3 
65 1 273 1 191 1 217 1 192 1 86 1 212 1 
137 1 273 1 261 1 191 1 217 1 192 1 3 1 86 1 212 1 
217 3 1 1 62 1 174 1 336 1 33 1 86 4 88 1 137 2 36 1 273 1 340 1 274 1 10 1 159 1 161 1 204 1 344 1 181 1 40 1 252 1 145 1 143 1 71 1 94 2 114 1 184 1 95 1 116 1 329 1 257 1 166 1 167 1 98 1 212 3 261 1 353 1 191 4 192 3 263 1 194 1 292 1 317 1 170 1 
191 2 217 2 114 1 192 1 269 1 167 1 222 1 86 2 212 1 
181 1 344 1 143 1 71 1 217 3 295 1 174 1 116 1 167 2 212 3 86 3 137 1 261 1 273 1 36 1 191 3 192 3 275 1 204 1 
217 2 133 1 167 1 212 2 86 2 137 1 261 1 191 2 192 2 276 1 
40 1 145 1 114 1 184 1 95 1 257 1 166 1 86 1 98 1 340 1 191 1 274 1 194 1 170 1 317 1 
40 1 145 1 114 1 63 1 184 1 95 1 257 1 86 1 272 1 340 1 191 1 274 1 194 1 170 1 317 1 
83 2 334 1 133 2 297 1 221 1 33 1 88 1 10 1 159 2 276 2 246 1 252 1 94 2 328 1 329 1 149 1 79 1 375 2 310 1 121 1 260 1 353 4 315 1 292 1 
273 1 191 1 217 1 174 1 192 1 15 1 86 1 212 1 
309 1 326 1 
309 1 326 1 
27 1 283 1 
27 1 283 1 
27 1 283 1 
309 1 187 1 326 1 
309 1 187 1 326 1 
309 1 57 1 326 1 
27 1 309 2 254 1 11 1 283 1 326 2 
309 1 187 1 326 1 
309 1 148 1 326 1 
309 1 148 1 326 1 
309 1 148 1 326 1 
217 2 157 1 86 2 176 1 301 1 325 1 90 1 326 1 181 1 41 1 143 1 70 1 114 1 46 1 97 1 212 2 350 1 309 1 189 1 191 2 192 2 125 1 57 1 332 1 
181 2 93 1 143 2 70 1 254 1 218 2 295 1 44 1 157 2 285 1 350 2 309 2 377 1 301 2 69 1 129 1 326 2 332 2 90 3 
224 1 179 1 107 1 
224 1 339 1 179 1 
84 1 66 1 339 1 311 1 179 3 107 2 
208 1 66 1 339 1 311 1 179 2 107 1 
66 2 339 1 311 1 179 2 107 1 
334 1 295 2 243 1 297 1 270 2 176 1 177 3 111 1 67 1 343 1 325 1 12 1 249 1 181 5 13 1 143 5 280 2 162 1 42 1 328 1 164 1 256 4 209 1 46 1 373 1 213 2 49 2 79 1 120 1 242 1 290 1 356 3 
181 1 143 1 256 1 323 1 
334 1 295 3 243 1 297 1 270 2 111 1 177 4 343 1 325 1 12 1 249 1 181 3 143 3 280 1 162 2 348 1 164 1 328 1 256 2 209 1 373 1 213 2 79 1 49 2 120 1 356 3 
358 1 334 2 295 4 243 1 297 2 270 4 111 1 177 7 9 1 343 1 325 2 12 2 248 1 249 1 181 4 143 4 280 2 162 3 348 1 164 1 328 2 256 3 209 1 373 1 213 4 49 4 79 2 120 1 356 5 
274 1 14 1 75 1 
274 1 155 1 
279 1 
274 1 194 1 317 1 
274 1 206 1 
274 1 194 1 
251 1 274 3 14 2 118 1 194 1 317 1 
83 4 334 1 281 1 106 1 149 2 34 2 238 1 300 1 79 1 310 3 226 1 376 1 353 7 168 1 159 3 229 1 316 1 
83 4 334 1 281 1 106 1 149 2 34 2 238 1 300 1 79 1 310 3 226 1 376 1 353 7 168 1 159 3 229 1 316 1 
83 4 334 1 281 1 106 1 149 2 34 2 238 1 300 1 79 1 310 3 259 1 226 1 376 1 353 7 168 1 159 3 229 1 316 1 
83 16 293 1 334 4 197 1 335 1 106 1 297 3 4 1 33 1 34 3 300 1 88 1 158 1 226 1 8 1 159 15 229 2 38 1 12 3 252 1 281 2 94 2 328 3 149 5 238 2 79 4 310 10 353 31 376 5 168 2 291 3 316 1 25 4 292 1 
83 5 252 2 334 1 281 1 197 1 94 4 198 1 106 1 33 2 149 3 34 2 238 1 79 1 310 4 88 2 226 1 376 1 353 9 168 1 312 1 159 4 229 1 316 1 292 2 
171 1 84 1 333 1 28 1 196 1 266 1 85 1 107 1 135 1 298 2 175 1 224 1 340 1 339 1 245 1 179 2 39 1 40 1 233 1 145 1 146 1 95 1 16 2 117 1 286 1 122 1 53 1 313 1 357 1 170 1 
84 1 333 1 28 1 266 1 85 1 107 1 135 2 298 3 175 1 224 1 340 1 339 1 245 1 179 2 39 1 40 1 145 1 146 1 95 1 16 3 117 1 76 1 237 1 214 1 286 1 122 1 53 1 313 1 357 1 170 1 
84 1 333 1 266 1 85 1 107 1 135 2 298 2 224 1 340 1 339 1 245 1 179 2 39 1 40 1 145 1 146 1 95 1 16 2 117 1 76 1 237 1 286 1 313 1 357 1 170 1 
82 1 154 1 28 1 132 1 266 2 32 1 298 1 175 1 340 1 274 1 245 2 40 1 145 1 305 1 95 1 16 1 257 1 50 1 214 1 313 2 357 2 194 1 170 1 
84 1 28 1 196 1 266 1 107 1 298 1 175 1 224 1 340 1 339 1 245 1 179 2 39 1 40 1 233 1 145 1 146 1 95 1 16 1 76 1 286 1 122 1 53 1 313 1 357 1 170 1 
91 1 
60 2 295 1 243 1 110 1 111 1 201 2 67 2 7 1 343 1 303 1 344 1 249 1 13 1 71 1 162 2 116 1 165 1 213 1 308 1 215 2 314 1 80 1 356 1 128 1 319 3 217 1 174 1 267 1 362 1 222 1 86 1 35 3 273 1 231 1 142 2 181 4 143 4 368 5 284 1 242 5 191 1 101 3 
319 3 60 2 217 1 295 1 174 1 243 1 267 1 362 1 86 1 222 1 35 3 110 1 111 1 67 2 201 2 273 1 7 1 231 1 343 1 142 2 303 1 249 1 181 4 344 1 13 1 143 4 71 1 368 5 162 2 116 1 165 1 284 1 213 1 308 1 191 1 242 5 215 2 80 1 314 1 356 1 128 1 101 3 
60 2 295 1 243 1 111 1 67 2 343 1 160 2 303 1 344 1 249 1 13 1 71 1 116 1 165 1 213 1 308 1 314 1 80 1 356 1 128 1 319 2 217 1 174 1 86 1 222 1 35 2 177 2 225 1 273 1 139 1 142 2 181 4 143 4 368 4 185 2 284 1 191 1 242 4 101 2 
154 1 60 2 105 1 295 2 243 1 111 1 201 2 67 3 340 2 343 1 303 1 249 1 344 1 13 1 71 1 162 2 164 1 116 1 257 2 211 1 165 1 213 2 308 1 215 2 314 1 80 1 356 2 128 1 170 2 319 2 217 1 174 1 32 1 362 1 222 1 86 1 35 2 225 1 177 2 273 1 274 1 142 2 232 1 181 5 40 2 143 5 145 1 368 4 95 1 284 1 151 1 242 6 191 1 101 2 194 1 
217 1 174 1 86 1 222 1 35 1 67 1 273 1 303 1 181 3 344 1 143 3 71 1 368 2 116 1 165 1 284 1 308 1 191 1 242 2 80 1 314 1 152 1 
319 1 217 1 174 1 295 1 86 1 222 1 111 1 67 1 273 1 303 1 181 3 344 1 143 3 71 1 368 3 116 1 165 1 284 1 308 1 242 1 191 1 80 1 314 1 152 1 
319 1 217 1 174 1 295 1 86 1 222 1 35 1 111 1 67 1 273 1 303 1 181 3 344 1 143 3 71 1 368 3 116 1 165 1 284 1 308 1 191 1 242 2 80 1 314 1 152 1 101 1 
60 2 295 5 243 1 110 1 111 5 67 3 201 2 7 1 343 1 303 1 344 1 249 1 13 1 71 1 162 2 72 1 116 1 165 1 213 1 308 1 215 2 314 1 80 1 356 1 128 1 319 4 217 1 174 1 267 1 362 1 86 1 222 1 35 4 273 1 231 1 142 2 181 5 143 5 368 6 284 1 191 1 242 7 152 1 101 4 
60 2 295 2 243 1 111 1 201 2 67 2 343 1 303 1 344 1 249 1 13 1 71 1 162 2 116 1 165 1 213 1 308 1 215 2 314 1 80 1 356 1 128 1 319 2 217 1 174 1 362 1 86 1 222 1 35 2 177 2 225 1 273 1 142 2 181 4 143 4 368 4 284 1 191 1 242 4 101 2 
319 2 60 2 217 1 295 1 174 1 243 1 267 1 362 1 86 1 222 1 35 2 111 1 67 2 201 2 273 1 7 1 231 1 343 1 142 2 303 1 181 4 344 1 249 1 13 1 143 4 71 1 368 4 162 2 116 1 165 1 284 1 213 1 308 1 242 4 191 1 215 2 80 1 314 1 356 1 128 1 101 2 
319 2 60 2 217 1 295 1 174 1 243 1 267 1 362 1 86 1 222 1 35 2 111 1 67 2 201 2 273 1 7 1 231 1 343 1 142 2 303 1 181 4 344 1 249 1 13 1 143 4 71 1 368 4 162 2 116 1 165 1 284 1 213 1 308 1 242 4 191 1 215 2 80 1 314 1 356 1 128 1 101 2 
319 2 59 1 60 2 217 1 295 1 174 1 243 1 86 1 222 1 35 2 111 1 177 2 67 2 273 1 139 1 231 1 343 1 160 2 142 2 303 1 181 4 344 1 249 1 13 1 143 4 71 1 368 4 116 1 185 2 165 1 284 1 213 1 308 1 287 1 242 4 191 1 80 1 314 1 356 1 128 1 101 2 
83 3 252 1 334 1 94 2 281 1 114 2 133 1 106 1 329 1 75 1 33 1 149 2 34 1 79 1 375 1 310 2 88 1 121 1 226 1 353 6 10 1 159 3 229 1 316 1 276 1 292 1 
318 1 83 8 131 1 334 1 133 11 297 1 4 1 33 2 338 1 244 1 223 1 88 2 10 2 341 1 159 6 38 1 12 2 276 4 252 2 94 4 114 1 328 2 329 1 149 1 79 2 310 2 375 11 376 1 353 14 263 1 291 3 25 3 292 2 
102 1 83 1 131 1 217 1 33 1 86 2 88 1 340 1 36 1 274 1 10 1 341 1 203 1 159 1 276 1 40 1 145 1 252 1 94 2 114 1 184 1 95 1 257 1 329 1 372 1 166 1 167 1 98 1 212 1 191 2 353 2 192 1 263 1 194 1 317 1 170 1 292 1 378 1 
334 3 106 1 297 2 340 3 341 1 10 3 159 10 161 2 12 2 252 3 114 2 257 1 74 2 167 1 166 2 76 1 212 1 79 3 310 8 351 1 353 20 263 1 316 1 170 3 317 2 26 2 83 10 131 1 217 1 133 7 33 3 86 3 34 1 88 3 138 1 226 1 36 1 274 2 228 2 229 1 230 2 276 7 40 3 145 2 281 1 94 6 184 2 95 2 328 2 236 1 329 3 149 4 98 2 375 7 191 3 376 4 192 1 194 2 292 3 
171 1 83 1 154 1 173 1 131 1 217 1 32 1 33 2 86 1 88 2 340 8 37 1 274 3 10 2 159 1 247 1 40 8 113 1 145 2 252 2 94 4 95 2 257 2 329 2 349 2 167 1 76 1 212 1 78 1 121 1 191 1 353 2 354 1 192 1 126 1 263 1 194 2 170 7 292 2 
83 1 334 1 217 1 133 1 297 1 33 1 86 1 88 1 137 1 10 1 341 1 159 2 12 1 276 1 252 1 94 2 328 1 329 1 149 1 212 1 79 1 310 1 375 1 261 1 191 1 353 3 192 1 127 1 292 1 
83 2 252 1 94 2 133 1 328 1 329 1 33 1 79 1 310 1 375 1 88 1 121 1 260 1 376 1 353 2 10 1 276 1 292 1 
252 1 334 1 94 2 133 1 329 1 297 1 33 1 221 1 149 1 310 1 375 1 88 1 121 1 353 2 10 1 159 2 276 1 292 1 
83 2 334 1 133 2 297 1 33 1 88 1 10 1 159 2 12 1 276 2 252 1 94 2 328 1 329 1 149 1 79 1 375 2 310 2 121 1 353 4 376 1 292 1 
83 2 252 1 173 1 94 2 133 1 328 1 329 1 33 1 79 1 310 1 375 1 88 1 260 1 376 1 353 2 10 1 276 1 292 1 
252 1 173 1 334 1 94 2 133 1 329 1 297 1 33 1 221 1 149 1 310 1 375 1 88 1 353 2 10 1 159 2 276 1 292 1 
83 2 173 1 334 1 133 2 297 1 33 1 88 1 10 1 159 2 12 1 276 2 252 1 94 2 328 1 329 1 149 1 79 1 375 2 310 2 353 4 376 1 292 1 
83 2 334 1 133 2 297 1 33 1 88 1 10 1 159 2 12 1 276 2 252 1 94 2 328 1 329 1 149 1 79 1 375 2 310 2 353 4 376 1 292 1 
83 1 131 1 33 1 86 1 88 1 340 1 274 1 10 1 159 1 161 1 40 1 145 1 252 1 94 2 114 1 184 1 95 1 257 1 329 1 166 1 98 1 353 2 191 1 263 1 194 1 317 1 170 1 292 1 
83 1 131 1 63 1 33 1 86 1 88 1 272 1 340 1 274 1 10 1 159 1 40 1 145 1 252 1 94 2 114 1 184 1 95 1 257 1 329 1 353 2 191 1 54 1 263 1 194 1 317 1 170 1 292 1 
83 2 334 1 133 2 297 1 33 1 88 1 10 1 341 1 159 2 12 1 276 2 252 1 94 2 328 1 329 1 149 1 79 1 375 2 310 2 353 4 376 1 292 1 
83 2 171 1 334 1 133 2 297 1 33 1 86 1 88 1 340 1 274 1 228 1 10 1 159 2 161 1 12 1 276 2 40 1 145 1 252 1 94 2 184 1 328 1 95 1 329 1 166 1 149 1 98 1 79 1 310 2 375 2 376 1 353 4 191 1 194 1 317 1 170 1 292 1 
83 2 334 1 29 1 217 1 133 1 297 1 33 1 86 1 88 1 137 1 10 1 341 1 159 1 12 1 276 1 252 1 94 2 328 1 329 1 212 1 79 1 310 1 375 1 261 1 376 1 191 1 353 3 192 1 292 1 
83 20 334 5 197 1 360 1 198 1 106 1 297 4 4 1 134 1 109 1 33 3 34 1 88 3 226 1 140 2 159 21 229 1 38 3 12 4 205 1 250 1 252 3 304 1 281 1 94 6 328 4 18 1 147 1 119 1 149 4 48 4 79 5 310 8 51 1 241 1 353 41 376 4 23 1 56 1 291 3 316 1 25 4 292 3 
83 20 334 4 197 2 360 1 198 1 106 1 297 3 4 1 134 1 109 1 33 4 34 1 88 4 226 1 140 2 159 18 229 1 38 3 12 4 205 1 250 1 252 4 304 1 281 1 94 8 328 4 18 1 147 1 119 1 149 4 48 4 79 5 310 7 51 1 241 1 353 38 376 3 23 1 56 1 291 3 316 1 25 4 292 4 
83 27 334 8 197 1 360 1 198 1 106 1 297 7 4 2 134 1 109 1 33 2 338 2 34 1 88 2 226 1 140 1 159 25 229 1 38 2 12 7 205 1 252 2 304 1 281 1 94 4 328 7 18 1 147 1 119 1 149 7 48 4 79 8 310 14 241 1 353 52 376 7 23 1 56 1 291 4 316 1 25 4 292 2 
83 9 334 3 198 1 297 3 4 1 33 2 88 2 140 1 159 10 38 1 12 3 250 1 327 1 252 2 94 4 328 3 18 1 147 1 119 2 149 3 48 2 79 3 310 6 353 19 376 3 23 1 56 1 291 1 25 2 292 2 
83 14 334 2 197 2 360 1 198 1 297 2 134 1 33 3 109 1 88 3 159 12 140 2 38 2 12 3 205 1 252 3 304 1 94 6 328 3 18 2 147 1 119 1 149 2 48 4 79 3 310 4 376 2 241 1 353 26 23 1 56 1 291 2 292 3 25 2 
350 1 93 1 130 1 309 1 301 1 254 1 157 1 129 1 332 1 326 1 
41 1 57 1 
265 1 350 1 309 1 369 1 370 1 301 1 157 1 332 1 326 1 
187 1 141 1 
216 1 11 1 148 1 
181 1 93 1 70 1 143 1 254 1 218 1 295 1 157 1 285 1 350 1 309 1 377 1 301 1 69 1 129 1 326 1 332 1 90 2 
181 1 93 1 70 1 143 1 254 1 218 1 295 1 157 1 285 1 350 1 309 1 377 1 301 1 69 1 129 1 326 1 332 1 90 2 
181 1 93 1 70 1 143 1 254 1 218 1 295 1 157 1 285 1 350 1 309 1 377 1 301 1 69 1 129 1 326 1 332 1 90 2 
11 1 187 1 141 1 
11 1 187 1 141 1 
216 1 148 1 
216 1 11 1 148 1 
189 1 125 1 
217 2 218 1 157 1 86 2 176 1 301 1 302 1 69 1 325 1 326 1 90 1 181 1 41 1 143 1 114 1 256 1 46 1 97 1 212 2 350 1 309 1 189 1 191 2 192 2 125 1 57 1 332 1 
83 1 131 1 217 2 268 1 33 1 86 2 299 1 88 1 340 2 274 1 10 1 341 1 159 1 40 2 145 1 113 1 252 1 94 2 347 1 95 1 329 1 258 1 349 2 374 1 191 2 353 2 354 1 263 1 194 1 292 1 170 2 
84 1 40 2 171 1 145 1 144 1 183 1 146 1 95 1 266 1 107 1 76 1 224 1 339 1 340 2 179 2 53 1 39 1 81 1 170 2 
84 1 40 1 144 1 145 1 146 1 266 1 95 1 371 1 107 1 76 1 224 1 339 1 340 1 179 2 53 1 39 1 170 1 
40 1 207 1 145 1 154 1 183 1 132 1 95 1 266 1 257 1 32 1 340 1 274 1 194 1 170 1 
84 1 40 1 145 1 144 1 183 1 146 1 266 1 95 1 107 1 76 1 224 1 339 1 340 1 179 2 53 1 39 1 81 1 170 1 
219 1 
217 2 1 1 336 1 33 1 86 3 88 1 137 2 340 1 274 1 10 1 159 1 161 1 40 1 252 1 145 1 94 2 114 1 184 1 95 1 257 1 329 1 166 1 212 2 98 1 353 1 191 3 192 2 263 1 194 1 170 1 317 1 292 1 
249 1 13 1 162 2 164 1 295 4 243 1 270 2 211 1 34 1 213 2 49 2 177 4 111 2 343 1 356 1 
111 1 367 1 295 1 202 1 75 1 356 1 213 1 
295 2 243 1 362 1 177 1 111 1 201 1 67 1 343 1 249 1 181 1 13 1 143 1 162 1 213 1 242 1 215 1 356 1 
195 2 153 2 334 2 295 8 155 3 243 4 337 2 199 2 297 2 111 2 67 3 340 3 202 1 343 4 12 2 206 2 249 4 344 2 13 4 162 6 164 2 14 2 257 1 210 2 211 1 118 1 213 8 79 2 124 1 262 2 356 9 317 3 170 3 171 1 26 2 30 2 321 1 322 1 270 6 177 12 274 10 180 1 40 3 181 5 145 4 143 5 367 1 95 3 328 2 96 1 49 6 240 2 242 5 194 3 
320 1 334 2 360 1 30 2 295 5 243 2 297 2 270 5 109 1 271 1 177 6 111 2 67 1 38 1 343 2 12 2 205 1 181 1 249 2 13 2 143 1 304 1 162 3 164 1 328 2 210 1 211 1 213 5 49 5 79 2 241 1 242 1 356 8 291 1 25 1 
334 1 30 2 1 1 217 1 243 1 86 1 65 1 324 1 137 1 273 1 7 1 365 1 229 1 343 1 249 1 181 1 13 1 143 1 281 1 210 1 212 1 213 2 79 2 191 1 192 1 55 1 356 2 316 1 
249 1 13 1 367 1 295 1 243 1 213 1 111 1 202 1 343 1 356 1 
26 1 49 5 79 2 334 2 177 10 162 5 30 2 295 5 328 2 210 1 297 2 356 5 270 5 12 2 213 5 
181 1 143 1 111 1 67 1 242 1 295 1 
154 1 105 1 243 2 321 1 32 1 67 2 340 4 274 1 89 1 343 2 249 2 40 4 181 3 13 1 145 1 143 3 348 1 95 1 164 2 73 1 257 2 96 2 211 2 213 2 151 1 242 4 356 2 194 1 170 4 
301 1 43 1 332 1 
301 1 43 1 332 1 
21 1 301 1 125 1 129 1 332 1 
301 1 43 1 332 1 
200 1 301 1 332 1 
200 1 301 1 332 1 
200 1 301 1 332 1 
301 1 332 1 
309 1 326 1 
83 4 334 1 360 1 198 1 106 1 33 1 34 1 88 1 226 1 159 4 38 1 229 1 252 1 94 2 281 1 149 2 79 1 310 2 353 8 291 1 316 1 25 1 292 1 
83 6 334 1 360 1 198 1 106 1 4 1 33 2 34 1 88 2 226 1 159 5 229 1 38 1 12 1 252 2 281 1 94 4 306 1 328 1 149 2 79 2 310 3 353 11 376 1 291 1 316 1 25 2 292 2 
83 9 334 3 360 1 197 1 198 1 106 1 297 2 33 3 109 1 34 1 88 3 226 1 159 10 229 1 38 1 12 2 205 1 252 3 304 1 281 1 94 6 306 1 328 2 149 3 79 3 310 4 376 1 353 19 241 1 291 1 316 1 25 1 292 3 
83 10 334 2 197 1 360 1 198 1 106 1 297 1 33 3 109 1 34 1 88 3 226 1 159 7 229 1 38 1 12 2 205 1 252 3 304 1 281 1 94 6 306 1 328 2 149 3 79 3 310 5 376 2 353 17 241 1 291 1 316 1 25 1 292 3 
83 4 334 1 360 1 198 1 106 1 33 1 34 1 88 1 226 1 159 4 38 1 229 1 252 1 94 2 281 1 149 2 79 1 310 2 353 8 291 1 316 1 25 1 292 1 
83 6 334 2 360 1 198 1 297 2 33 1 109 1 88 1 159 6 38 1 12 2 205 1 252 1 304 1 94 2 328 2 149 1 79 2 310 2 376 1 353 12 241 1 291 1 25 1 292 1 
83 10 334 2 360 1 197 2 198 1 106 1 297 1 33 4 109 1 34 1 88 4 226 1 159 8 229 1 38 1 12 2 205 1 252 4 304 1 281 1 94 8 306 1 328 2 149 3 79 3 310 5 376 2 241 1 353 18 291 1 316 1 25 1 292 4 
83 9 334 2 360 1 197 2 198 1 297 2 33 4 109 1 88 4 159 7 38 1 12 3 205 1 250 1 252 4 304 1 94 8 328 3 149 3 79 3 310 6 376 3 241 1 353 16 291 1 25 1 292 4 
83 3 334 1 281 3 106 2 149 3 79 1 310 6 226 1 353 7 376 3 159 4 229 3 316 1 
83 10 334 2 360 1 197 2 198 1 106 1 297 1 33 4 109 1 34 1 88 4 226 1 159 8 229 1 38 1 12 2 205 1 250 1 252 4 304 1 281 1 94 8 328 2 149 3 79 3 310 4 376 1 241 1 353 18 291 1 316 1 25 1 292 4 
83 4 252 2 334 1 94 4 197 1 281 1 106 1 33 2 149 2 34 1 79 1 310 3 88 2 226 1 353 8 376 1 159 4 229 1 316 1 292 2 
83 3 334 1 281 1 106 1 75 1 149 2 34 1 79 1 310 2 226 1 353 6 159 3 229 1 316 1 
83 2 252 1 334 1 94 2 306 1 328 1 297 1 33 1 149 1 79 1 310 2 88 1 353 4 376 1 159 2 12 1 292 1 
83 3 334 1 328 1 297 1 4 1 149 1 79 1 310 2 353 7 376 1 159 4 38 1 291 1 12 1 25 2 
83 11 334 3 197 2 106 1 297 2 4 1 33 2 338 1 34 1 223 1 88 2 226 1 159 12 229 2 12 2 277 1 252 2 281 2 94 4 328 2 149 5 79 3 310 9 376 4 353 23 291 2 316 1 25 2 292 2 
353 1 159 1 25 1 
83 1 353 1 291 1 
26 1 83 3 252 1 334 1 94 2 306 1 328 1 297 1 33 1 149 2 79 1 88 1 310 3 353 6 376 1 159 3 12 1 292 1 
83 6 334 2 360 1 198 1 297 2 33 1 109 1 88 1 159 6 38 1 12 2 205 1 252 1 304 1 94 2 328 2 149 1 79 2 310 2 376 1 353 12 241 1 291 1 25 1 292 1 
83 3 334 1 281 1 149 1 79 1 310 2 353 6 376 1 159 3 229 1 316 1 
83 1 252 1 281 1 197 1 94 2 106 1 33 1 149 1 310 2 88 1 226 1 376 1 353 3 159 2 229 1 277 1 292 1 
83 5 252 1 334 2 94 2 281 2 198 1 33 1 149 3 79 2 88 1 310 5 376 2 353 10 159 5 229 2 55 1 316 1 292 1 
83 2 252 1 94 2 198 1 328 1 33 1 79 1 88 1 310 1 353 2 376 1 292 1 
83 2 252 1 334 1 94 2 198 1 328 1 297 1 33 1 149 1 79 1 310 2 88 1 353 4 376 1 159 2 12 1 292 1 
83 1 250 1 252 3 197 1 94 6 281 1 198 1 33 3 149 1 88 3 310 2 353 3 376 1 159 2 229 1 277 1 292 3 
293 1 83 16 334 5 197 2 198 1 106 1 297 3 4 1 33 5 34 1 88 5 158 1 226 1 8 1 159 18 229 3 38 1 12 3 277 1 250 1 252 5 281 3 94 10 306 1 328 3 149 7 79 5 310 12 353 34 376 5 291 3 316 2 25 4 292 5 
191 1 217 1 114 1 2 1 269 1 86 1 222 1 
294 1 163 1 217 1 114 1 64 1 2 1 269 1 222 1 86 1 239 1 190 1 191 1 
40 1 145 1 154 1 340 1 274 1 95 1 257 1 32 1 75 1 194 1 170 1 
40 1 145 1 217 1 114 1 184 1 95 1 257 1 167 1 212 1 86 2 98 1 340 1 191 2 274 1 192 1 194 1 317 1 170 1 
217 2 174 1 86 2 340 1 273 1 274 3 206 1 40 1 145 1 114 1 184 1 95 1 116 1 96 1 167 1 98 1 212 1 191 2 192 2 262 1 194 2 170 1 317 2 
217 2 63 1 174 1 86 2 87 1 340 2 273 1 274 3 206 1 40 2 145 1 114 1 184 1 95 1 116 1 96 1 167 1 212 1 191 2 192 2 262 1 194 2 170 2 317 2 
344 1 181 2 40 3 145 1 143 2 253 1 295 1 14 1 95 1 155 1 257 1 96 1 87 1 111 1 100 1 340 3 242 1 274 4 262 1 206 1 194 1 317 1 170 3 
344 1 181 2 40 3 145 1 143 2 295 1 14 1 95 1 155 1 257 1 96 1 199 1 87 1 111 1 340 3 242 1 274 4 262 1 206 1 194 1 317 1 170 3 
40 1 145 1 340 1 95 1 126 1 170 1 
171 1 40 7 113 1 145 3 104 1 255 1 95 2 257 2 349 1 108 1 118 1 76 1 78 1 340 7 37 1 274 3 126 1 247 1 194 2 170 6 317 1 
83 3 171 1 334 1 217 1 133 1 106 1 33 2 86 2 34 1 88 2 226 1 340 1 274 1 10 2 341 1 228 1 159 3 229 1 161 1 276 1 40 1 145 1 252 2 281 1 94 4 114 2 184 1 95 1 329 2 74 1 167 1 166 1 149 2 212 1 98 1 79 1 374 1 375 1 310 2 353 6 191 2 192 1 316 1 194 1 317 1 292 2 170 1 
195 1 295 1 243 2 155 1 321 1 337 1 199 1 111 1 67 1 340 1 274 2 202 1 343 2 40 1 249 2 181 3 344 1 13 2 143 3 367 1 14 1 256 1 257 1 213 1 240 1 242 2 356 1 170 1 
171 1 40 2 145 2 14 1 95 1 322 1 118 1 340 2 274 2 126 1 194 1 170 2 317 1 
40 4 171 1 145 1 154 1 234 1 95 1 257 1 32 1 87 1 340 4 274 1 194 1 170 4 
40 2 145 2 255 1 95 1 236 1 330 1 96 1 108 1 340 2 274 1 193 1 194 1 170 2 317 1 
40 1 224 1 145 1 339 1 340 1 95 1 179 1 257 1 39 1 170 1 
171 1 40 2 113 1 145 1 347 1 95 1 76 1 340 2 274 1 194 1 170 2 
40 5 171 1 154 1 113 1 145 2 234 1 95 2 257 1 96 1 32 1 340 5 274 3 37 1 247 1 194 2 170 4 
40 5 171 1 154 1 113 1 145 2 234 1 95 2 257 1 96 1 32 1 19 1 340 5 274 3 37 1 194 2 170 4 
40 1 145 1 217 1 114 1 184 1 63 1 95 1 257 1 167 1 212 1 86 2 340 1 191 2 274 1 192 1 194 1 317 1 170 1 
40 1 145 2 104 1 255 1 95 1 96 1 108 1 118 1 340 1 274 1 194 1 170 1 317 1 
5 1 20 1 227 1 114 1 115 1 
344 1 181 2 143 2 0 1 71 1 114 1 295 1 174 1 115 2 116 1 256 1 307 1 20 1 5 2 111 1 273 1 227 2 289 1 204 1 
217 1 258 1 268 1 86 1 299 1 5 1 20 1 227 1 191 1 
0 1 20 1 289 1 
196 1 28 1 333 1 16 3 117 1 85 1 135 1 47 1 298 3 175 1 123 1 
282 1 178 1 117 1 77 1 
333 1 117 1 
333 1 117 1 85 1 75 1 
175 1 333 1 28 1 16 1 117 1 85 1 298 1 
245 1 313 1 298 1 
196 1 28 1 333 1 61 1 16 3 117 1 85 1 47 2 298 3 136 1 175 1 24 1 
175 1 345 1 333 1 28 1 16 2 117 1 85 1 135 1 298 2 
92 1 175 1 224 1 28 1 196 1 282 1 16 1 179 1 117 1 107 1 298 1 
175 1 333 1 28 1 196 1 16 1 117 1 298 1 
175 1 333 2 28 1 196 1 16 1 85 1 298 1 
333 1 196 1 28 2 17 1 16 2 117 1 156 1 298 2 175 2 169 1 
333 1 196 1 28 1 235 1 282 1 16 3 117 2 85 1 135 2 298 3 175 1 123 1 178 1 
84 1 333 1 196 1 28 1 16 2 117 1 85 1 45 1 107 1 135 1 298 2 175 1 224 1 339 1 179 2 
345 1 333 1 196 1 28 2 282 1 16 4 117 2 85 1 188 1 135 2 298 4 175 2 178 1 
175 1 333 1 28 1 196 1 16 1 117 1 85 1 298 1 
333 2 28 1 61 1 282 1 16 4 117 3 85 2 47 1 77 1 135 2 298 4 175 1 178 1 24 1 
333 1 196 1 28 1 182 1 16 2 117 1 85 1 135 1 298 2 175 1 288 1 364 1 
196 1 28 1 333 1 61 1 31 1 16 3 117 1 85 1 47 2 298 3 175 1 24 2 
331 1 6 2 117 2 363 1 
175 1 28 1 196 1 68 1 16 1 298 1 
175 1 333 1 28 1 196 1 123 1 16 2 117 1 85 1 135 1 298 2 
342 1 
175 1 333 1 28 1 196 1 16 1 117 1 85 1 298 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 58 90 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.IllegalArgumentException 186 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 58 90 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I | ASSIGN | 4001 | = null
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I | CONDITION | 2497 | if (x) -> if (!x)
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
114 1 158 1 0 9 299 1 141 3 47 1 94 1 4 1 53 1 98 1 215 2 11 6 308 5 197 2 364 2 259 1 200 2 101 1 238 1 237 9 127 1 103 1 263 2 185 1 88 1 294 4 320 2 297 2 
114 1 158 1 0 9 299 1 141 3 47 1 94 1 4 1 53 1 98 1 215 2 11 6 308 5 197 2 364 2 259 1 200 2 101 1 238 1 237 9 127 1 103 1 263 2 185 1 88 1 294 4 320 2 297 2 
114 1 158 1 0 10 299 1 141 4 47 1 94 1 4 1 53 1 98 1 215 2 11 7 308 6 197 2 364 2 259 1 200 2 101 1 238 1 237 10 127 1 103 1 263 2 185 1 88 1 294 5 320 2 297 2 
114 1 158 1 0 7 299 1 141 2 47 1 94 1 4 1 98 1 215 2 11 4 308 4 197 2 364 2 259 1 200 2 101 1 238 1 237 7 127 1 103 1 263 1 185 1 88 1 294 3 320 2 297 2 
114 1 200 1 0 4 238 1 237 4 141 1 94 1 4 1 53 1 263 2 185 1 294 2 320 1 11 3 308 3 297 1 197 1 364 1 
114 1 101 1 200 1 0 2 238 1 237 2 127 1 94 1 183 1 245 1 320 1 215 1 308 1 113 1 297 1 364 1 
114 1 0 3 238 1 237 3 141 1 103 1 94 1 294 1 215 1 11 1 308 2 297 2 364 2 
114 1 0 9 141 3 47 1 94 1 4 1 53 1 215 1 11 7 308 5 197 1 364 2 200 1 238 1 237 9 103 1 104 1 242 1 263 2 185 1 88 1 294 4 320 1 297 2 
114 1 0 9 141 3 47 1 94 1 4 1 53 1 215 1 11 7 308 5 197 1 364 2 200 1 238 1 237 9 103 1 104 1 242 1 263 2 185 1 88 1 294 4 320 1 297 2 
371 1 376 1 235 1 
99 1 360 2 371 1 
218 1 115 2 41 1 317 2 213 2 214 2 163 2 300 2 
91 1 24 2 188 1 115 2 251 1 25 1 189 1 140 1 93 1 230 2 325 1 354 1 163 3 300 2 357 1 30 1 192 1 358 1 72 1 211 1 213 2 214 2 124 1 281 1 336 1 216 1 218 1 283 2 147 1 173 2 221 1 41 1 317 3 110 1 155 2 269 1 298 1 
115 1 41 1 317 1 240 1 266 1 213 1 214 1 163 1 295 1 300 1 
282 1 219 1 26 1 149 1 371 1 163 1 231 1 142 1 135 1 204 1 317 1 213 1 266 1 235 1 
282 2 219 1 115 1 26 1 149 1 371 1 231 2 163 1 300 1 204 1 317 1 214 1 213 1 266 1 235 1 
282 1 318 1 128 1 311 1 231 1 
282 2 22 1 243 1 371 1 318 1 311 1 231 2 235 1 
282 1 318 1 231 1 
282 1 115 1 240 1 311 1 231 1 163 1 300 1 66 1 41 1 317 1 266 1 214 1 213 1 295 1 
371 1 
282 2 22 1 340 1 371 1 318 1 311 1 231 2 235 1 
36 1 282 5 207 1 22 1 14 1 126 1 176 1 371 1 311 2 131 2 150 1 164 1 231 5 38 1 182 2 109 1 318 2 146 2 235 1 
218 1 376 1 
218 2 115 1 163 2 300 1 19 1 317 2 70 1 213 2 214 1 
339 1 223 1 83 1 
91 1 218 1 283 1 173 1 189 1 93 1 230 1 163 1 27 1 357 1 192 1 358 1 317 1 110 1 211 1 298 1 
91 1 283 1 339 1 173 1 189 1 93 1 230 1 163 2 300 1 152 1 357 1 192 1 358 1 68 1 317 2 110 1 211 1 214 1 213 1 298 1 
202 1 218 1 115 1 163 5 300 4 152 1 142 1 361 1 68 2 317 5 70 1 214 4 213 5 168 1 
317 2 266 1 213 2 214 2 163 2 295 1 300 2 372 1 
218 1 115 1 68 1 317 3 213 3 214 3 163 3 300 3 
317 1 266 1 213 1 214 1 163 1 295 1 300 1 
115 1 317 1 70 1 266 1 213 1 214 1 163 1 300 1 19 1 
91 1 24 1 188 1 115 2 251 1 25 1 189 1 93 1 26 1 230 1 325 1 354 1 163 4 231 1 300 3 357 1 30 1 192 1 358 1 68 1 70 1 211 1 213 3 214 3 124 1 281 1 336 1 13 1 282 1 218 1 219 1 283 1 173 1 149 1 152 1 204 1 41 1 110 1 317 4 155 2 266 1 267 1 269 1 298 1 
218 1 361 1 68 1 317 2 213 2 214 1 163 2 300 1 142 1 
282 1 219 1 115 1 26 1 149 1 371 1 231 1 163 3 300 3 152 1 204 1 68 2 70 1 317 3 266 1 214 3 213 3 234 1 13 1 
115 1 339 1 163 2 83 1 300 2 68 1 70 1 317 2 214 2 213 2 
91 1 218 1 283 1 173 1 189 1 93 1 230 1 163 1 357 1 192 1 358 1 317 1 110 1 211 1 298 1 
91 1 62 1 218 1 283 1 173 1 1 1 189 1 93 1 230 1 163 1 357 1 358 1 317 1 211 1 298 1 
188 1 24 4 25 1 325 1 355 1 275 1 30 1 210 1 281 1 124 2 336 1 216 2 171 1 284 1 80 1 339 2 369 1 151 1 83 2 344 1 223 2 155 2 346 1 21 1 
317 1 26 1 266 1 213 1 214 1 163 1 300 1 372 1 
374 1 129 1 
374 1 129 1 
280 1 334 1 
280 1 334 1 
280 1 334 1 
374 1 195 1 129 1 
374 1 195 1 129 1 
79 1 374 1 129 1 
374 2 16 1 280 1 334 1 129 2 32 1 
374 1 195 1 129 1 
374 1 293 1 129 1 
374 1 293 1 129 1 
374 1 293 1 129 1 
35 1 282 1 218 1 79 1 250 1 23 1 262 1 368 1 15 1 37 1 129 1 163 2 231 1 50 1 300 2 28 1 203 1 359 1 108 1 374 1 317 2 265 1 213 2 214 2 
282 2 35 1 250 2 23 3 159 1 323 2 37 2 371 1 129 2 231 2 108 2 184 1 145 1 374 2 316 1 265 2 247 1 32 1 296 1 
200 1 320 1 197 1 
200 1 183 1 320 1 
138 1 183 1 345 1 320 3 33 1 197 2 
138 1 183 1 73 1 320 2 33 1 197 1 
138 1 183 1 320 2 33 2 197 1 
22 1 2 2 162 1 164 1 231 5 208 1 143 1 67 1 359 1 99 1 360 3 8 2 146 1 235 1 36 2 282 5 198 1 261 1 126 3 262 1 220 2 15 1 369 1 311 4 371 2 131 1 342 1 344 1 182 1 346 1 318 1 21 1 
207 1 22 1 162 3 231 9 164 1 208 2 67 2 165 1 359 4 209 1 99 3 360 9 8 6 146 2 169 5 235 1 36 6 282 9 198 1 201 1 126 8 220 6 369 3 128 5 311 7 371 5 131 2 290 1 344 3 182 2 346 3 318 6 205 1 156 1 21 3 
207 1 2 1 162 1 231 3 208 1 67 1 359 1 99 2 360 4 8 2 146 1 235 1 282 3 36 2 261 1 126 3 220 2 369 1 371 3 311 2 131 1 342 1 344 1 182 1 346 1 21 1 
207 1 2 2 162 2 231 4 208 1 67 1 165 1 359 2 209 1 99 3 360 7 8 4 146 1 235 1 282 4 36 4 261 1 126 5 220 4 369 2 371 4 311 3 131 1 342 1 344 2 182 1 346 2 205 1 21 2 
189 1 376 1 132 1 
349 1 189 1 
314 1 
189 1 93 1 357 1 
189 1 271 1 
189 1 93 1 
139 1 189 3 93 1 132 2 356 1 357 1 
284 3 365 1 24 7 116 1 285 2 369 1 160 1 64 1 355 2 344 1 85 1 124 3 60 1 34 1 187 1 75 1 216 4 
284 3 365 1 24 7 116 1 285 2 369 1 160 1 64 1 355 2 344 1 85 1 124 3 60 1 34 1 187 1 75 1 216 4 
284 3 365 1 24 7 116 1 285 2 369 1 160 1 64 1 355 2 344 1 85 1 279 1 124 3 60 1 34 1 187 1 75 1 216 4 
24 31 116 5 25 1 160 2 64 2 162 3 355 5 301 1 30 1 193 1 278 1 69 1 167 1 281 1 124 15 34 1 75 1 336 1 216 16 284 10 365 2 285 3 369 4 291 1 85 1 344 4 312 1 155 2 111 4 346 3 89 3 60 1 187 2 21 3 
24 9 116 1 25 2 160 1 64 1 355 3 30 2 31 1 69 1 281 2 124 4 34 1 336 2 216 5 284 4 365 1 285 2 369 1 344 1 85 1 155 4 60 1 206 1 187 1 
114 1 0 2 230 1 94 1 352 1 161 1 272 1 327 1 358 1 194 1 211 1 212 1 11 1 215 1 308 1 197 1 56 1 364 1 200 1 283 1 238 1 173 1 237 2 180 1 82 1 133 1 183 1 345 1 320 2 297 1 
114 1 0 3 230 1 3 1 352 1 161 1 272 1 327 1 65 1 358 1 194 1 211 1 215 1 11 2 308 1 197 1 56 1 364 1 200 1 283 1 238 1 173 1 237 3 180 1 82 1 183 1 345 1 320 2 347 1 297 1 
114 1 0 2 230 1 3 1 161 1 272 1 327 1 65 1 358 1 194 1 211 1 215 1 11 2 308 1 197 1 283 1 200 1 238 1 173 1 237 2 180 1 82 1 183 1 345 1 320 2 
100 1 91 1 283 1 0 1 237 1 173 1 189 1 93 1 230 1 180 2 326 1 82 2 49 1 190 1 327 2 358 1 373 1 375 1 211 1 215 2 347 1 297 1 364 1 
0 1 230 1 3 1 94 1 352 1 161 1 272 1 327 1 358 1 194 1 211 1 212 1 215 1 197 1 56 1 364 1 200 1 283 1 173 1 237 1 180 1 82 1 183 1 345 1 320 2 297 1 
302 1 
282 1 91 1 283 1 126 1 173 1 58 1 230 1 131 1 231 1 164 1 67 1 182 1 318 1 146 1 90 1 
282 3 219 1 22 1 340 1 26 1 149 1 231 3 163 1 328 1 142 1 29 1 135 1 204 1 317 1 318 2 225 2 9 1 266 1 213 1 362 1 55 1 310 1 
22 1 26 1 163 1 231 3 328 1 142 1 29 1 9 1 333 1 213 1 55 1 310 1 235 1 282 3 219 1 340 1 149 1 371 1 135 1 204 1 317 1 318 1 225 3 266 1 
282 3 219 1 22 1 340 1 26 1 149 1 371 1 231 3 163 1 328 1 142 1 29 1 144 1 135 1 204 1 317 1 333 1 318 2 225 3 9 1 266 1 213 1 362 1 55 1 235 1 310 1 
92 1 231 5 328 1 142 1 329 1 144 4 7 1 99 2 9 1 333 4 146 1 55 1 235 5 282 5 340 1 149 1 241 1 153 1 204 1 61 2 22 3 26 1 255 2 163 1 164 1 29 1 119 2 213 1 362 4 310 1 363 2 36 1 219 1 126 1 371 5 131 1 135 1 182 1 39 1 136 1 317 1 225 6 318 7 266 1 
22 2 26 1 255 2 164 1 231 4 163 1 328 1 142 1 29 1 144 2 119 2 7 1 360 2 99 2 333 2 9 1 146 1 213 1 362 2 55 1 235 1 363 2 310 1 36 1 282 4 219 1 126 1 341 1 149 1 371 2 131 1 135 1 182 1 39 1 204 1 317 1 318 4 225 4 266 1 61 2 
22 2 92 1 26 1 255 2 163 1 231 4 164 1 328 1 142 1 29 1 329 1 144 2 119 2 7 1 99 2 333 2 9 1 213 1 146 1 362 2 55 1 235 1 363 2 310 1 36 1 282 4 219 1 126 1 149 1 371 1 131 1 39 1 135 1 182 1 136 1 204 1 317 1 318 4 225 4 266 1 61 2 
22 2 92 1 26 1 255 2 163 1 231 4 164 1 328 1 142 1 29 1 329 1 144 2 119 2 7 1 99 2 333 2 9 1 213 1 146 1 362 2 55 1 235 1 363 2 310 1 36 1 282 4 219 1 126 1 149 1 371 1 131 1 39 1 135 1 182 1 136 1 204 1 317 1 318 4 225 4 266 1 61 2 
22 2 351 2 26 1 255 2 163 1 231 4 164 1 328 1 142 1 29 1 144 2 119 2 7 1 360 2 333 2 9 1 213 1 146 1 362 2 55 1 235 1 310 1 236 1 36 1 282 4 338 2 219 1 126 1 148 1 149 1 371 1 131 1 135 1 182 1 136 1 315 1 204 1 317 1 318 4 225 4 266 1 
22 2 92 1 26 1 255 2 164 1 163 1 231 4 328 1 142 1 329 1 29 1 144 3 119 2 7 1 99 2 9 1 333 3 146 1 213 1 55 1 362 3 235 1 363 2 310 1 36 1 282 4 219 1 126 1 149 1 371 1 131 1 153 1 39 1 182 1 135 1 136 1 204 1 317 1 225 5 318 5 266 1 61 2 
22 2 92 1 26 1 255 2 164 1 163 1 231 4 328 1 142 1 329 1 29 1 144 3 119 2 7 1 99 2 9 1 333 3 146 1 213 1 55 1 362 3 235 1 363 2 310 1 36 1 282 4 219 1 126 1 149 1 371 1 131 1 153 1 39 1 182 1 135 1 136 1 204 1 317 1 225 5 318 5 266 1 61 2 
22 2 351 2 26 1 255 2 164 1 231 4 163 1 328 1 142 1 29 1 144 2 119 2 7 1 360 2 333 2 9 1 146 1 213 1 362 2 55 1 235 1 310 1 36 1 282 4 338 2 219 1 126 1 341 1 148 1 149 1 371 1 131 1 135 1 182 1 204 1 317 1 318 4 225 4 266 1 
188 1 24 6 25 1 64 1 325 1 355 2 30 1 281 1 124 3 34 1 336 1 216 3 171 1 284 2 218 2 365 1 339 1 285 1 369 1 83 1 85 1 344 1 223 1 155 2 376 1 60 1 
188 1 24 14 116 1 25 2 140 1 325 2 162 2 355 1 30 2 193 1 5 1 122 1 124 6 281 2 336 2 216 8 218 1 284 2 339 11 178 1 239 1 369 2 83 4 344 1 312 1 20 1 223 11 155 4 111 3 346 2 89 3 21 1 269 1 
91 1 188 1 24 2 46 1 189 1 25 1 140 1 93 1 230 1 325 1 163 2 300 1 27 1 357 1 256 1 30 1 192 1 358 1 122 1 68 1 211 1 123 1 213 1 214 1 281 1 124 1 336 1 216 1 218 1 283 1 173 1 83 1 152 1 110 1 317 2 155 2 298 1 269 1 
91 1 188 3 270 2 189 2 140 1 48 1 93 2 3 1 230 3 324 2 325 3 274 1 192 2 281 3 336 3 283 3 284 8 339 7 285 1 286 2 152 1 344 3 110 2 155 6 346 2 60 1 21 2 298 2 24 20 251 2 116 4 25 3 64 1 162 2 163 3 355 4 300 1 357 2 303 1 30 3 358 2 68 1 122 1 211 2 214 1 213 1 124 10 34 1 170 2 216 10 218 2 365 1 173 3 369 3 83 7 85 1 223 7 317 3 269 1 
91 2 188 2 24 2 189 3 25 2 140 1 228 1 93 2 3 1 230 8 325 2 326 1 163 1 300 1 30 2 166 1 358 2 233 1 121 1 68 1 211 2 213 1 214 1 281 2 124 1 336 2 76 1 216 1 171 1 100 1 283 8 173 7 221 2 288 1 133 1 313 1 317 1 155 4 269 1 
188 1 24 3 115 1 25 1 325 1 162 1 163 1 355 1 300 1 30 1 120 1 122 1 70 1 214 1 213 1 281 1 124 2 336 1 216 1 284 1 339 1 369 1 83 1 344 1 223 1 317 1 155 2 346 1 21 1 
171 1 284 1 24 2 188 1 339 1 116 1 25 1 369 1 325 1 83 1 30 1 223 1 210 1 155 2 346 1 281 1 336 1 216 2 
171 1 284 1 24 2 188 1 339 1 80 1 25 1 325 1 355 1 83 1 30 1 344 1 223 1 155 2 281 1 124 2 336 1 21 1 
171 1 284 2 24 4 188 1 339 2 116 1 25 1 369 1 325 1 162 1 355 1 83 2 344 1 30 1 223 2 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
284 1 24 2 188 1 339 1 116 1 25 1 228 1 369 1 325 1 83 1 30 1 223 1 210 1 155 2 346 1 281 1 336 1 216 2 
284 1 24 2 188 1 339 1 80 1 25 1 228 1 325 1 355 1 83 1 30 1 344 1 223 1 155 2 281 1 124 2 336 1 21 1 
284 2 24 4 188 1 339 2 116 1 25 1 228 1 369 1 325 1 162 1 355 1 83 2 344 1 30 1 223 2 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
284 2 188 1 24 4 339 2 116 1 25 1 369 1 325 1 162 1 355 1 83 2 344 1 30 1 223 2 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
91 1 24 2 188 1 251 1 189 1 25 1 140 1 93 1 230 1 325 1 163 1 357 1 30 1 192 1 358 1 211 1 281 1 124 1 336 1 216 1 218 1 283 1 173 1 110 1 317 1 155 2 298 1 269 1 
62 1 91 1 24 2 188 1 1 1 189 1 25 1 140 1 93 1 230 1 325 1 163 1 357 1 30 1 358 1 211 1 306 1 281 1 124 1 336 1 216 1 218 1 283 1 173 1 317 1 155 2 298 1 269 1 
284 2 24 4 188 1 339 2 116 1 25 1 369 1 325 1 162 1 355 1 83 2 344 1 30 1 223 2 122 1 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
24 4 188 1 251 1 116 1 189 1 25 1 93 1 230 1 325 1 162 1 163 1 355 1 357 1 30 1 192 1 358 1 211 1 124 2 281 1 336 1 216 2 170 1 284 2 283 1 339 2 173 1 369 1 83 2 133 1 344 1 223 2 110 1 317 1 155 2 346 1 21 1 298 1 
188 1 24 3 115 1 116 1 25 1 325 1 162 1 163 1 300 1 30 1 122 1 70 1 214 1 213 1 124 1 281 1 336 1 216 2 284 1 339 1 179 1 369 1 83 1 344 1 223 1 317 1 155 2 346 1 21 1 
24 19 322 2 116 3 25 2 95 2 162 3 117 1 355 3 30 2 31 1 193 1 196 1 281 2 124 10 336 2 216 9 284 6 369 3 344 3 312 1 154 1 87 1 224 1 155 4 111 2 319 1 346 3 89 1 321 1 21 3 
24 26 252 1 322 1 116 2 25 3 95 4 162 3 117 2 96 1 355 2 30 3 31 1 118 1 193 2 69 2 74 1 124 12 281 3 12 1 336 3 216 14 284 4 369 3 130 1 344 2 154 1 224 2 155 6 319 1 111 2 346 3 89 2 321 1 21 2 
24 41 252 1 322 1 116 4 25 3 64 1 95 4 162 4 117 1 96 1 355 4 30 3 31 1 118 1 193 3 69 1 196 1 74 1 281 3 124 21 34 1 12 1 336 3 216 20 284 8 365 1 285 1 369 5 130 1 18 1 85 1 344 5 312 1 154 1 224 2 155 6 111 4 319 1 346 4 89 3 60 1 321 1 21 4 
24 38 252 1 322 1 116 3 25 4 64 1 95 4 162 4 117 1 96 1 355 4 30 4 31 1 118 1 193 3 69 2 196 1 74 1 281 4 124 18 34 1 12 1 336 4 216 20 284 7 365 1 285 1 369 5 130 1 18 1 85 1 344 4 312 1 154 1 224 2 155 8 111 4 319 1 346 4 89 3 60 1 321 1 21 3 
24 52 252 1 322 1 116 7 25 2 64 1 95 4 162 7 117 1 96 1 355 7 30 2 31 1 118 1 193 2 69 1 74 1 281 2 124 25 34 1 12 1 336 2 216 27 284 14 365 1 285 1 239 2 369 8 130 1 85 1 344 8 312 2 154 1 224 1 155 4 111 4 319 1 346 7 89 4 60 1 321 1 21 7 
108 1 250 1 159 1 145 1 374 1 265 1 37 1 129 1 32 1 181 1 
79 1 28 1 
108 1 250 1 374 1 366 1 265 1 254 1 37 1 129 1 105 1 
137 1 195 1 
293 1 16 1 229 1 
35 1 282 1 250 1 23 2 159 1 323 1 37 1 371 1 129 1 231 1 108 1 145 1 374 1 316 1 265 1 247 1 32 1 296 1 
35 1 282 1 250 1 23 2 159 1 323 1 37 1 371 1 129 1 231 1 108 1 145 1 374 1 316 1 265 1 247 1 32 1 296 1 
35 1 282 1 250 1 23 2 159 1 323 1 37 1 371 1 129 1 231 1 108 1 145 1 374 1 316 1 265 1 247 1 32 1 296 1 
137 1 195 1 16 1 
137 1 195 1 16 1 
293 1 229 1 
293 1 16 1 229 1 
368 1 50 1 
250 1 23 1 323 1 163 2 231 1 50 1 300 2 28 1 191 1 359 1 214 2 213 2 282 1 218 1 79 1 262 1 368 1 37 1 15 1 311 1 129 1 203 1 108 1 374 1 317 2 265 1 247 1 
248 1 188 1 24 2 189 1 25 1 140 1 93 1 230 2 325 1 163 2 30 1 358 1 122 1 211 1 213 2 335 1 281 1 124 1 336 1 76 1 216 1 283 2 125 1 260 1 173 2 221 2 289 1 313 1 317 2 155 2 269 1 
57 1 200 1 283 2 173 2 172 1 3 1 230 2 352 1 272 1 327 1 133 1 358 1 183 1 244 1 194 1 211 1 345 1 320 2 197 1 
200 1 283 1 173 1 172 1 3 1 230 1 352 1 272 1 327 1 358 1 183 1 331 1 194 1 211 1 345 1 320 2 197 1 
91 1 100 1 283 1 173 1 175 1 189 1 93 1 230 1 326 1 327 1 49 1 358 1 244 1 211 1 
57 1 200 1 283 1 173 1 172 1 3 1 230 1 352 1 272 1 327 1 358 1 183 1 244 1 194 1 211 1 345 1 320 2 197 1 
77 1 
36 1 38 1 126 1 371 1 376 1 150 1 235 1 
282 1 36 1 22 1 126 1 371 2 131 1 231 1 164 1 182 1 39 1 360 1 99 1 318 1 146 1 235 1 61 1 363 1 
91 1 189 6 93 1 230 3 273 1 231 5 332 2 99 6 8 6 54 2 10 1 146 4 235 2 282 5 283 3 286 2 59 2 17 1 150 1 344 2 204 2 246 2 346 2 21 2 157 2 22 3 349 3 63 2 353 1 162 2 164 4 356 1 357 1 67 2 358 1 360 12 211 2 36 8 126 9 173 3 220 6 369 2 371 8 131 4 132 2 133 1 38 1 182 4 222 2 264 1 186 1 318 5 
249 1 22 1 63 1 252 1 162 2 273 1 231 1 96 1 164 2 67 1 118 1 193 1 360 6 99 3 54 2 8 5 146 2 12 1 235 2 282 1 36 5 126 8 220 5 369 2 371 5 131 2 130 1 344 2 182 2 318 1 111 1 346 2 89 1 112 1 21 2 
115 1 63 1 64 1 163 1 164 1 231 1 300 1 329 1 66 1 54 2 146 1 214 1 213 1 282 1 36 2 365 1 126 2 369 2 240 1 131 1 134 1 344 1 182 1 41 1 317 1 266 1 60 1 295 1 
36 1 126 1 371 1 131 1 150 1 164 1 38 1 182 1 146 1 235 1 
36 5 126 5 63 1 286 1 220 5 369 2 162 2 371 5 344 2 360 10 99 5 54 2 8 5 346 2 21 2 
282 1 22 1 371 1 318 1 231 1 235 1 
91 1 283 1 126 1 173 1 58 1 230 1 131 1 17 1 164 1 67 1 182 1 318 1 146 1 90 1 
91 1 24 1 188 1 115 2 251 1 25 1 189 1 93 1 230 1 354 1 325 1 163 3 300 2 357 1 30 1 192 1 358 1 211 1 213 2 214 2 124 1 281 1 336 1 218 1 283 1 173 1 41 1 317 3 110 1 155 2 269 1 298 1 
36 2 126 1 285 1 220 2 371 4 131 1 164 1 273 1 67 1 182 1 99 2 360 4 8 2 146 1 235 2 
108 1 226 1 265 1 
108 1 226 1 265 1 
108 1 159 1 350 1 265 1 50 1 
108 1 226 1 265 1 
217 1 108 1 265 1 
217 1 108 1 265 1 
217 1 108 1 265 1 
108 1 265 1 
374 1 129 1 
284 3 24 8 365 1 285 1 116 1 25 2 369 1 64 1 355 2 344 1 30 2 85 1 69 1 155 4 60 1 124 4 281 2 34 1 336 2 216 4 
284 2 365 1 24 6 285 1 369 1 64 1 355 2 85 1 344 1 376 1 124 3 60 1 34 1 216 3 
284 2 24 4 116 1 25 1 369 1 162 1 355 1 344 1 30 1 42 1 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
284 2 24 7 116 1 369 1 162 1 355 1 344 1 312 1 193 1 111 2 346 1 89 1 124 4 21 1 216 3 
24 23 116 4 25 2 64 2 162 2 355 5 30 2 69 2 124 12 281 2 34 1 336 2 216 11 284 9 365 2 285 1 178 1 369 3 239 1 85 1 344 3 312 1 292 1 155 4 346 2 111 2 89 2 60 1 21 2 
24 1 111 1 124 1 
24 1 89 1 216 1 
284 3 24 6 116 1 25 1 286 1 369 1 162 1 355 2 30 1 344 1 42 1 155 2 346 1 281 1 124 3 336 1 21 1 216 3 
24 12 252 1 116 1 25 1 162 2 96 1 355 1 30 1 31 1 193 1 118 1 124 6 281 1 12 1 336 1 216 6 284 2 369 2 130 1 344 2 155 2 111 1 346 2 89 1 21 2 
284 2 24 6 365 1 116 1 369 1 64 1 355 1 344 1 60 1 124 3 216 3 
284 2 365 1 24 3 116 1 25 1 64 1 355 1 30 1 85 1 292 1 69 1 155 2 124 2 281 1 34 1 336 1 216 1 
284 5 365 2 24 10 116 2 25 1 369 2 64 2 355 3 30 1 134 1 344 2 31 1 155 2 281 1 124 5 60 1 336 1 216 5 
284 1 24 2 116 1 25 1 369 1 30 1 31 1 155 2 346 1 281 1 336 1 216 2 
284 2 24 4 116 1 25 1 369 1 162 1 355 1 344 1 30 1 31 1 155 2 346 1 124 2 281 1 21 1 336 1 216 2 
284 2 24 3 365 1 116 1 25 3 64 1 355 1 30 3 31 1 292 1 69 1 155 6 196 1 124 2 281 3 336 3 216 1 
24 34 116 5 25 5 64 3 162 3 355 7 301 1 30 5 31 1 193 1 69 2 167 1 196 1 124 18 281 5 34 1 336 5 216 16 284 12 365 3 285 1 369 5 291 1 85 1 344 5 312 1 292 1 42 1 155 10 111 4 346 3 89 3 60 2 21 3 
24 8 25 1 64 1 96 1 355 2 30 1 31 1 193 1 124 4 281 1 34 1 336 1 216 4 284 2 365 1 285 1 369 1 344 1 85 1 155 2 111 1 89 1 60 1 
24 11 116 1 25 2 64 1 162 1 96 1 355 2 30 2 31 1 193 1 124 5 281 2 34 1 336 2 216 6 284 3 365 1 285 1 369 2 344 1 85 1 312 1 42 1 155 4 111 2 346 1 89 1 60 1 
24 19 252 1 116 1 25 3 64 1 162 2 96 1 355 3 30 3 31 1 193 1 118 1 69 1 124 10 281 3 34 1 12 1 336 3 216 9 284 4 365 1 285 1 369 3 130 1 85 1 344 3 42 1 155 6 111 1 346 2 89 1 60 1 21 2 
24 17 252 1 116 2 25 3 64 1 162 2 96 1 355 3 30 3 31 1 193 1 118 1 69 1 124 7 281 3 34 1 12 1 336 3 216 10 284 5 365 1 285 1 369 3 130 1 85 1 344 2 42 1 155 6 111 1 346 2 89 1 60 1 21 1 
24 8 25 1 64 1 96 1 355 2 30 1 31 1 193 1 124 4 281 1 34 1 336 1 216 4 284 2 365 1 285 1 369 1 344 1 85 1 155 2 111 1 89 1 60 1 
24 12 252 1 116 1 25 1 162 2 96 1 355 1 30 1 31 1 193 1 118 1 124 6 281 1 12 1 336 1 216 6 284 2 369 2 130 1 344 2 155 2 111 1 346 2 89 1 21 2 
24 18 252 1 116 2 25 4 64 1 162 2 96 1 355 3 30 4 31 1 118 1 193 1 69 2 124 8 281 4 34 1 12 1 336 4 216 10 284 5 365 1 285 1 369 3 130 1 85 1 344 2 42 1 155 8 111 1 346 2 89 1 60 1 21 1 
24 16 252 1 116 3 25 4 162 3 96 1 355 3 30 4 31 1 118 1 193 1 69 2 196 1 124 7 281 4 12 1 336 4 216 9 284 6 369 3 130 1 344 2 155 8 111 1 346 3 89 1 21 2 
284 6 24 7 365 3 116 3 369 1 64 3 355 3 344 1 85 1 124 4 60 1 34 2 216 3 
24 18 252 1 116 1 25 4 64 1 162 2 96 1 355 3 30 4 31 1 118 1 193 1 69 2 196 1 124 8 281 4 34 1 12 1 336 4 216 10 284 4 365 1 285 1 369 3 130 1 85 1 344 2 155 8 111 1 346 2 89 1 60 1 21 1 
52 1 218 1 361 1 317 1 213 1 163 1 142 1 
218 1 163 1 343 1 106 1 107 1 142 1 52 1 361 1 317 1 213 1 309 1 337 1 
100 1 91 1 283 1 358 1 173 1 189 1 211 1 93 1 230 1 326 1 376 1 
91 1 218 1 283 1 173 1 189 1 93 1 230 1 163 2 300 1 357 1 192 1 358 1 68 1 317 2 211 1 214 1 213 1 298 1 
189 3 271 1 93 2 26 1 230 1 353 1 163 2 300 2 357 2 192 1 277 1 358 1 68 1 211 1 213 2 214 1 218 1 283 1 219 1 173 1 317 2 266 1 298 1 
62 1 189 3 271 1 93 2 26 1 230 2 353 1 163 2 300 2 357 2 51 1 277 1 358 1 68 1 211 1 213 2 214 1 218 1 283 2 219 1 173 2 317 2 266 1 298 1 
349 1 115 1 189 1 230 1 353 1 231 1 163 1 300 1 66 1 214 1 213 1 235 1 199 1 282 1 283 1 173 1 240 1 371 1 41 1 317 1 266 1 295 1 
349 1 115 1 189 1 230 1 353 1 231 1 163 1 300 1 66 1 332 1 214 1 213 1 235 1 282 1 283 1 173 1 240 1 371 1 41 1 317 1 266 1 295 1 
283 1 358 1 166 1 173 1 211 1 230 1 
91 2 283 7 173 6 189 3 221 1 93 2 3 1 230 7 288 1 133 1 356 1 357 1 84 1 166 1 358 2 233 1 86 1 121 1 211 3 348 1 76 1 
270 1 188 2 189 1 93 1 230 1 325 2 192 1 281 2 336 2 283 1 284 2 339 1 285 1 344 1 110 1 155 4 60 1 298 1 24 6 251 1 25 2 64 1 163 2 300 1 355 2 357 1 30 2 358 1 68 1 122 1 211 1 214 1 213 1 124 3 34 1 170 1 216 3 125 1 218 2 365 1 173 1 369 1 83 1 133 1 85 1 223 1 317 2 
91 1 22 1 349 1 189 2 230 1 164 2 231 3 332 1 146 2 235 1 36 1 282 3 283 1 126 1 173 1 371 1 311 1 131 2 59 1 150 1 17 1 132 1 38 1 182 2 222 1 204 1 246 1 318 2 
283 2 358 1 166 1 173 2 189 2 211 2 93 1 230 2 10 1 132 1 133 1 356 1 357 1 
91 1 100 1 283 4 173 4 367 1 189 1 93 1 230 4 326 1 133 1 51 1 358 1 211 1 
283 2 173 2 189 1 93 1 353 1 230 2 274 1 357 1 84 1 358 1 86 1 43 1 211 2 258 1 
91 1 200 1 283 1 358 1 183 1 173 1 211 1 230 1 272 1 320 1 
248 1 283 2 358 1 173 2 189 1 211 1 93 1 3 1 230 2 133 1 76 1 
100 1 91 1 283 5 173 4 367 1 189 3 93 2 353 1 230 5 326 1 288 1 133 1 358 2 233 1 211 2 76 1 
100 1 91 1 283 5 173 4 367 1 189 3 93 2 353 1 230 5 326 1 133 1 358 2 233 1 211 2 45 1 76 1 
91 1 62 1 218 1 283 1 173 1 189 1 93 1 230 1 163 2 300 1 357 1 358 1 68 1 317 2 211 1 214 1 213 1 298 1 
283 1 173 1 189 1 93 1 353 1 230 1 356 1 357 1 84 1 358 1 86 1 211 2 348 1 
218 1 330 1 78 1 227 1 276 1 
282 2 218 1 219 1 78 2 174 1 26 1 227 2 149 1 371 1 311 1 231 2 276 1 330 2 204 1 44 1 266 1 268 1 235 1 13 1 
260 1 330 1 317 1 227 1 213 1 163 1 289 1 335 1 276 1 
174 1 268 1 276 1 
114 1 238 1 376 1 308 1 
114 1 0 1 238 1 237 1 308 1 297 1 364 1 
237 1 180 1 215 1 
101 2 114 1 0 3 237 3 238 1 94 1 304 1 232 1 305 1 308 1 297 1 364 1 
114 1 263 1 0 2 238 1 237 2 11 1 308 1 297 1 364 1 
200 1 0 1 237 1 294 1 94 1 320 1 308 1 4 1 197 1 297 1 364 1 
114 1 0 1 237 1 94 1 308 1 297 1 364 1 
114 2 0 1 238 1 237 1 94 1 297 1 364 1 
114 1 0 2 6 1 237 2 253 1 287 1 94 1 308 1 297 2 364 2 
114 1 0 3 238 1 237 3 47 1 141 1 94 1 88 1 294 1 11 2 308 2 297 1 364 1 
114 1 200 1 0 2 238 1 237 2 94 1 257 1 183 1 345 1 320 2 11 1 308 1 297 1 197 1 364 1 
114 1 0 4 238 1 237 4 141 1 94 1 53 1 263 1 294 1 11 2 308 2 297 2 364 2 
114 1 0 1 238 1 237 1 94 1 308 1 297 1 364 1 
101 1 114 2 0 4 238 2 237 4 141 1 304 1 305 1 294 1 307 1 11 2 308 3 297 1 364 1 
114 1 0 2 238 1 237 2 81 1 102 1 94 1 104 1 11 1 308 1 297 1 364 1 
101 2 114 1 0 3 237 3 238 1 94 1 97 1 304 1 305 2 308 1 297 1 364 1 
40 1 370 2 308 2 377 1 
0 1 237 1 177 1 94 1 297 1 364 1 
114 1 0 2 238 1 237 2 47 1 94 1 11 1 308 1 297 1 364 1 
71 1 
114 1 0 1 238 1 237 1 94 1 308 1 297 1 364 1 
114 1 101 1 0 3 238 1 237 3 47 1 94 1 11 1 308 1 297 1 364 1 
141 1 294 1 307 1 308 1 
114 1 308 1 

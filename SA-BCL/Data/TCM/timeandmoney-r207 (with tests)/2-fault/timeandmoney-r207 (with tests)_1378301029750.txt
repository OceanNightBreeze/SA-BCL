#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 271 284 (83,159) (83,159) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 271 284 (83,159) (83,159) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 271 284 201 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 271 284 201 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 1511 | + -> /
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
271 2 325 1 152 3 353 7 4 2 36 4 145 1 222 1 336 7 66 1 148 1 54 3 69 1 284 1 159 1 83 1 323 2 30 2 32 1 289 1 129 2 349 1 231 1 364 2 277 2 
271 2 325 1 152 3 353 7 4 2 36 4 145 1 222 1 336 7 66 1 148 1 54 3 69 1 284 1 159 1 83 1 30 2 323 2 32 1 289 1 129 2 349 1 231 1 364 2 277 2 
271 2 353 9 4 3 145 1 222 1 336 9 51 1 148 1 79 1 54 4 81 1 83 1 323 2 30 2 32 2 129 2 364 2 231 1 277 2 325 1 152 5 36 6 66 1 189 1 69 1 284 1 159 1 289 1 349 1 
271 2 353 7 4 2 145 1 222 1 336 7 148 1 79 1 54 3 81 1 83 1 323 2 30 2 32 1 129 2 364 2 231 1 277 2 325 1 152 4 36 4 66 1 69 1 284 1 159 1 289 1 349 1 
271 1 353 4 152 3 4 1 36 3 336 4 51 1 148 1 79 1 189 1 69 1 54 2 284 1 81 1 30 1 323 1 32 2 364 1 277 1 
271 1 61 1 152 1 353 2 336 2 79 1 69 1 285 1 149 1 81 1 30 1 289 1 129 1 231 1 364 1 277 1 
325 1 353 3 152 2 4 1 36 1 336 3 79 1 69 1 54 1 81 1 30 2 129 1 277 2 
271 1 325 1 152 3 353 7 4 2 36 5 222 1 77 1 336 7 148 1 69 1 54 3 284 1 201 1 323 1 30 2 32 1 129 1 364 1 349 1 277 2 
271 1 325 1 152 3 353 7 4 2 36 5 222 1 77 1 336 7 148 1 69 1 54 3 284 1 201 1 323 1 30 2 32 1 129 1 364 1 349 1 277 2 
12 1 168 1 28 1 
250 1 168 1 146 2 
291 2 126 2 107 2 1 1 90 1 113 2 350 2 8 2 
291 2 1 1 220 1 76 1 253 1 8 2 10 2 126 2 107 3 150 1 200 1 174 1 338 2 205 1 131 2 151 1 59 1 183 1 343 1 211 1 63 1 90 1 65 1 113 2 39 2 20 1 67 1 41 1 138 1 190 2 308 1 192 1 247 1 377 1 313 1 118 1 350 3 
291 1 126 1 107 1 1 1 102 1 113 1 141 1 350 1 8 1 115 1 
291 1 1 1 102 1 168 1 337 1 8 2 126 1 107 2 12 1 31 1 88 1 368 1 235 1 185 1 113 1 68 1 115 1 95 1 140 1 141 2 350 2 
291 2 1 1 368 1 102 1 235 1 168 1 185 2 113 2 8 2 115 1 68 1 126 2 107 2 12 1 95 2 31 1 141 2 350 2 88 1 
242 1 315 1 95 1 185 1 203 1 
242 1 315 1 12 1 127 1 95 2 168 1 311 1 185 2 
242 1 95 1 185 1 
291 1 126 1 107 1 1 1 102 1 315 1 95 1 113 1 185 1 141 1 350 1 8 1 115 1 88 1 
168 1 
242 1 315 1 12 1 303 1 127 1 95 2 168 1 185 2 
352 2 134 1 315 2 354 2 180 1 75 1 168 1 185 5 295 1 52 1 371 1 242 2 12 1 228 1 127 1 95 5 245 1 128 1 97 2 
90 1 28 1 
291 1 35 1 113 1 90 2 8 2 126 1 283 1 107 2 350 2 
198 1 121 1 223 1 
59 1 177 1 183 1 343 1 211 1 90 1 39 1 20 1 41 1 107 1 308 1 338 1 377 1 118 1 350 1 131 1 
291 1 59 1 183 1 343 1 211 1 223 1 20 1 39 1 8 1 41 1 126 1 107 2 308 1 259 1 338 1 377 1 118 1 350 2 351 1 131 1 
291 3 126 3 107 3 113 1 90 1 350 3 8 3 351 1 
291 1 126 1 107 1 102 1 141 1 350 1 8 1 
291 1 126 1 283 1 107 1 35 1 113 1 141 1 350 1 8 1 
291 3 1 1 49 1 253 1 8 3 10 2 107 4 200 1 150 1 259 1 338 1 205 1 59 1 343 1 211 1 113 2 20 1 68 1 67 1 308 1 160 1 118 1 313 1 350 4 351 1 220 1 126 3 174 1 31 1 131 1 368 1 35 1 235 1 183 1 237 1 185 1 90 1 39 1 41 1 190 1 95 1 192 1 377 1 247 1 141 2 
291 1 126 1 107 2 318 1 90 1 337 1 350 2 8 2 351 1 
291 3 368 1 35 1 235 1 237 1 168 1 113 1 185 1 8 3 68 1 126 3 107 3 266 1 95 1 259 1 31 1 141 1 350 3 351 2 
291 2 35 1 223 1 113 1 8 2 198 1 126 2 107 2 350 2 351 1 
59 1 183 1 343 1 211 1 90 1 39 1 20 1 41 1 107 1 308 1 338 1 377 1 118 1 350 1 131 1 
208 1 183 1 343 1 211 1 90 1 39 1 20 1 41 1 107 1 308 1 338 1 377 1 46 1 350 1 131 1 
121 2 76 2 223 2 253 1 294 1 6 1 10 2 124 1 198 2 150 1 174 1 33 1 205 1 153 1 112 1 238 1 67 1 190 4 157 1 192 2 332 1 247 1 348 1 268 1 
291 1 126 1 107 1 31 1 141 1 267 1 350 1 8 1 
291 4 126 4 107 5 35 1 215 1 259 1 318 1 175 1 90 1 113 1 337 1 350 5 8 5 351 2 
291 2 126 2 107 2 102 1 141 1 267 1 350 2 8 2 
255 1 260 1 
255 1 260 1 
359 1 362 1 
359 1 362 1 
359 1 362 1 
255 1 260 1 202 1 
255 1 260 1 202 1 
255 1 167 1 260 1 
359 1 255 2 362 1 260 2 224 1 22 1 
255 1 260 1 202 1 
255 1 243 1 260 1 
255 1 243 1 260 1 
255 1 243 1 260 1 
269 2 166 2 48 1 168 1 185 2 197 1 22 1 255 2 320 1 372 2 191 2 158 2 373 3 95 2 260 2 56 1 96 1 339 1 57 1 
269 1 291 2 47 1 167 1 8 2 126 2 255 1 320 1 107 2 260 1 276 1 366 1 234 1 207 1 90 1 185 1 372 1 191 1 373 1 158 1 95 1 72 1 193 1 350 2 
271 1 323 1 364 1 
271 1 149 1 364 1 
227 1 149 1 323 2 26 1 364 3 9 1 
227 1 71 1 149 1 323 1 364 2 9 1 
227 1 149 1 323 1 364 2 9 2 
250 1 47 1 352 1 354 1 315 4 168 2 146 3 78 2 52 2 169 1 295 3 12 1 127 1 13 1 33 1 365 1 234 1 340 1 153 1 134 1 112 1 185 5 21 1 188 1 139 2 242 1 286 1 307 2 95 5 332 1 97 1 193 1 
250 3 352 2 315 7 354 2 168 5 146 9 52 6 169 2 295 8 171 1 105 1 12 1 127 1 13 2 33 3 203 5 60 1 279 1 153 3 134 1 180 1 135 5 112 3 185 9 370 1 21 3 188 1 139 6 242 6 70 1 307 6 95 9 332 3 97 2 193 4 
250 2 352 1 315 2 354 1 168 3 78 1 146 4 169 1 295 3 52 2 12 1 13 1 33 1 365 1 340 1 153 1 180 1 112 1 185 3 21 1 139 2 95 3 307 2 332 1 97 1 193 1 
250 3 352 1 354 1 315 3 168 4 146 7 78 2 169 1 295 5 52 4 105 1 12 1 13 1 33 2 365 1 340 1 153 2 180 1 112 2 185 4 370 1 21 2 139 4 70 1 307 4 95 4 332 2 97 1 193 2 
343 1 28 1 122 1 
258 1 343 1 
117 1 
343 1 41 1 
322 1 343 3 377 1 122 2 99 1 41 1 
343 1 377 1 41 1 
343 1 53 1 
153 1 181 1 18 1 221 1 76 4 356 1 326 2 6 3 124 2 346 1 190 7 305 1 192 3 33 1 218 1 162 1 381 1 
153 1 181 1 18 1 221 1 76 4 356 1 326 2 6 3 124 2 346 1 190 7 305 1 192 3 33 1 218 1 162 1 381 1 
153 1 181 1 18 1 221 1 76 4 356 1 326 2 6 3 7 1 124 2 346 1 190 7 305 1 192 3 33 1 218 1 162 1 381 1 
76 16 221 2 356 1 253 1 6 10 10 2 124 5 298 3 360 1 361 1 174 1 33 4 110 1 205 1 89 1 153 4 178 1 181 1 18 2 112 3 326 3 21 3 67 1 346 2 305 1 190 31 116 1 192 15 244 1 246 4 332 3 218 5 162 1 381 2 
89 1 367 1 153 1 181 1 18 1 221 1 76 5 356 1 326 2 253 2 6 4 67 2 124 3 10 4 346 1 305 1 190 9 174 2 192 4 33 1 218 1 381 1 314 1 205 2 
271 1 120 1 353 2 336 2 26 1 274 1 79 1 149 1 81 1 82 1 323 1 30 1 338 1 129 1 364 2 277 1 131 1 301 1 152 1 36 1 183 1 263 1 39 1 69 1 42 1 308 1 375 1 44 1 331 1 312 1 
271 1 120 1 353 3 272 1 336 3 26 1 79 1 149 1 81 1 363 1 82 1 323 1 30 1 338 1 129 1 364 2 277 1 131 1 301 1 152 1 36 2 183 1 263 1 39 1 42 1 309 1 308 1 375 1 331 1 312 1 
120 1 271 1 353 2 336 2 26 1 79 1 149 1 81 1 363 1 323 1 338 1 129 1 364 2 131 1 301 1 152 1 36 2 183 1 263 1 39 1 42 1 309 1 308 1 375 1 331 1 
120 2 353 1 272 1 183 1 343 1 263 2 336 1 211 1 147 1 170 1 39 1 41 1 308 1 30 1 338 1 331 2 129 2 34 1 142 1 277 1 100 1 195 1 131 1 
271 1 120 1 353 1 336 1 26 1 149 1 363 1 82 1 323 1 30 1 338 1 129 1 364 2 277 1 131 1 301 1 183 1 263 1 39 1 69 1 42 1 308 1 375 1 44 1 331 1 312 1 
92 1 
250 2 146 2 52 2 295 2 337 1 8 1 11 1 107 1 108 1 12 3 109 2 13 1 338 2 302 1 210 4 343 1 211 2 64 1 345 2 68 1 306 1 308 1 350 1 352 1 354 1 168 4 357 1 80 1 172 2 173 1 127 3 31 1 275 1 34 1 86 1 87 2 131 2 368 1 235 1 134 1 183 1 185 5 38 1 39 2 41 1 241 2 94 1 242 6 95 5 376 2 140 1 97 1 141 1 98 2 100 1 
168 2 357 1 337 1 8 1 107 1 12 2 127 1 31 1 275 1 86 1 368 1 235 1 303 1 210 2 185 3 38 1 345 1 68 1 94 1 242 2 95 3 140 1 141 1 350 1 
368 1 235 1 210 3 168 2 38 1 185 2 357 1 337 1 8 1 68 1 94 1 107 1 12 2 95 2 31 1 275 1 140 1 141 1 98 1 86 1 350 1 
168 3 357 1 337 1 8 1 107 1 12 3 127 1 31 1 275 1 86 1 368 1 235 1 303 1 210 3 185 3 38 1 345 1 68 1 94 1 241 1 242 2 95 3 140 1 141 1 98 1 350 1 
250 2 291 1 1 1 102 1 3 1 295 1 52 1 337 1 8 2 107 2 199 1 12 4 108 1 109 2 302 1 303 1 62 1 210 5 113 1 304 1 345 4 115 1 68 1 217 1 350 2 352 1 354 1 168 4 357 1 126 1 172 2 127 3 31 1 275 1 86 1 87 2 88 1 368 1 235 1 134 1 38 1 185 5 94 1 241 4 242 7 95 5 376 2 140 1 97 1 141 2 98 3 
250 2 146 2 295 1 52 1 337 1 8 1 107 1 12 3 108 1 109 2 302 1 210 4 345 2 68 1 350 1 352 1 354 1 168 4 357 1 80 1 172 2 127 2 31 1 275 1 86 1 87 2 368 1 235 1 134 1 185 4 38 1 94 1 241 2 242 4 95 4 376 2 140 1 97 1 141 1 98 2 
250 2 352 1 354 1 3 1 168 3 52 1 295 1 357 1 337 1 8 1 172 2 107 1 108 1 12 3 127 2 109 2 31 1 275 1 86 1 87 2 302 1 368 1 235 1 134 1 62 1 210 4 185 4 38 1 304 1 345 2 68 1 241 2 94 1 242 4 95 4 376 2 140 1 97 1 141 1 98 2 350 1 
250 2 352 1 354 1 3 1 168 3 52 1 295 1 357 1 337 1 8 1 172 2 107 1 108 1 12 3 127 2 109 2 31 1 275 1 86 1 87 2 302 1 368 1 235 1 134 1 62 1 210 4 185 4 38 1 304 1 345 2 68 1 241 2 94 1 242 4 95 4 376 2 140 1 97 1 141 1 98 2 350 1 
352 1 354 1 168 3 146 2 295 1 52 1 357 1 337 1 8 1 107 1 108 1 12 3 127 2 109 2 31 1 275 1 86 1 87 2 368 1 235 1 133 1 134 1 62 1 210 4 185 4 38 1 345 2 68 1 265 1 241 2 94 1 242 4 95 4 216 2 140 1 97 1 141 1 378 1 98 2 350 1 334 2 
250 2 352 1 354 1 3 1 168 3 52 1 295 1 357 1 337 1 8 1 172 2 107 1 199 1 108 1 12 3 127 2 109 2 31 1 275 1 86 1 87 2 302 1 368 1 235 1 134 1 62 1 210 5 304 1 185 4 38 1 345 3 68 1 94 1 241 3 242 5 95 4 376 2 140 1 97 1 141 1 98 3 350 1 
250 2 352 1 354 1 3 1 168 3 52 1 295 1 357 1 337 1 8 1 172 2 107 1 199 1 108 1 12 3 127 2 109 2 31 1 275 1 86 1 87 2 302 1 368 1 235 1 134 1 62 1 210 5 304 1 185 4 38 1 345 3 68 1 94 1 241 3 242 5 95 4 376 2 140 1 97 1 141 1 98 3 350 1 
146 2 52 1 295 1 337 1 8 1 107 1 12 3 108 1 109 2 210 4 345 2 68 1 216 2 350 1 352 1 354 1 168 3 357 1 80 1 127 2 31 1 275 1 86 1 87 2 368 1 235 1 134 1 133 1 185 4 38 1 94 1 241 2 242 4 95 4 140 1 97 1 141 1 98 2 334 2 
121 1 153 1 181 1 76 3 18 1 356 1 223 1 326 1 90 2 294 1 253 1 6 2 28 1 67 1 124 2 10 2 198 1 190 6 305 1 150 1 174 1 192 3 33 1 247 1 205 1 381 1 
121 11 76 8 223 11 253 2 6 2 124 1 10 4 198 4 298 3 257 1 150 2 174 2 33 1 110 1 204 1 205 2 151 1 153 2 112 2 90 1 212 1 21 2 67 2 155 1 190 14 244 1 192 6 246 3 332 1 218 1 247 1 313 1 143 1 
291 1 76 1 253 1 8 1 10 2 198 1 126 1 107 2 150 1 259 1 174 1 338 1 131 1 205 1 59 1 151 1 177 1 17 1 183 1 343 1 211 1 90 1 213 1 20 1 39 1 41 1 67 1 155 1 347 1 190 2 308 1 192 1 377 1 247 1 118 1 313 1 350 2 351 1 
0 1 291 1 253 3 6 8 8 1 10 6 106 2 198 7 107 3 150 3 200 2 259 1 338 3 205 3 151 1 59 2 153 3 18 1 343 2 112 2 211 1 20 2 21 2 67 3 155 1 305 1 156 2 308 2 310 1 218 4 313 1 118 2 350 3 351 1 219 2 121 7 76 10 356 1 223 7 319 2 124 4 126 1 363 1 174 3 33 3 131 3 181 1 183 2 326 1 90 2 91 1 39 3 41 2 190 20 192 10 332 2 247 3 377 2 381 1 
291 1 76 1 103 1 294 1 253 2 8 1 274 1 10 4 126 1 107 1 150 2 363 1 174 2 14 1 338 8 34 1 232 1 131 7 205 2 151 1 154 1 184 1 183 2 343 3 211 2 65 2 240 1 39 8 67 2 41 2 190 2 308 2 192 1 247 2 73 1 313 1 350 1 351 1 100 1 
291 1 121 1 2 1 76 1 223 1 253 1 6 1 8 1 124 1 10 2 198 1 126 1 107 1 150 1 174 1 33 1 205 1 35 1 153 1 112 1 113 1 21 1 67 1 155 1 190 3 192 2 332 1 247 1 350 1 
121 1 153 1 76 2 112 1 223 1 294 1 253 1 6 1 67 1 10 2 198 1 190 2 150 1 157 1 174 1 218 1 247 1 205 1 
121 1 223 1 294 1 253 1 6 1 67 1 124 1 10 2 198 1 190 2 150 1 174 1 192 2 332 1 33 1 247 1 268 1 205 1 
121 2 76 2 223 2 253 1 294 1 6 2 10 2 124 1 198 2 150 1 174 1 33 1 205 1 153 1 112 1 21 1 67 1 190 4 192 2 332 1 247 1 218 1 
121 1 153 1 76 2 112 1 223 1 253 1 6 1 67 1 10 2 198 1 190 2 150 1 157 1 174 1 218 1 73 1 247 1 205 1 
121 1 223 1 253 1 6 1 67 1 124 1 10 2 198 1 190 2 150 1 174 1 192 2 332 1 33 1 73 1 247 1 268 1 205 1 
121 2 76 2 223 2 253 1 6 2 10 2 124 1 198 2 150 1 174 1 33 1 205 1 153 1 112 1 21 1 67 1 190 4 192 2 332 1 247 1 73 1 218 1 
121 2 76 2 223 2 253 1 6 2 10 2 124 1 198 2 150 1 174 1 33 1 205 1 153 1 112 1 21 1 67 1 190 4 192 2 332 1 247 1 218 1 
76 1 253 1 10 2 107 1 200 1 150 1 174 1 338 1 131 1 205 1 151 1 59 1 183 1 343 1 211 1 90 1 20 1 39 1 41 1 67 1 190 2 308 1 192 1 377 1 247 1 118 1 313 1 350 1 
76 1 253 1 10 2 107 1 150 1 174 1 338 1 131 1 205 1 151 1 208 1 183 1 136 1 343 1 211 1 90 1 20 1 39 1 41 1 67 1 190 2 308 1 192 1 377 1 247 1 46 1 313 1 350 1 
121 2 76 2 223 2 253 1 6 2 10 2 124 1 198 2 150 1 174 1 33 1 205 1 153 1 112 1 21 1 67 1 155 1 190 4 192 2 332 1 247 1 218 1 
121 2 76 2 223 2 253 1 6 2 274 1 124 1 10 2 198 2 107 1 200 1 150 1 174 1 33 1 338 1 131 1 205 1 59 1 153 1 183 1 112 1 343 1 20 1 39 1 21 1 41 1 67 1 190 4 156 1 308 1 192 2 332 1 218 1 377 1 247 1 118 1 350 1 
291 1 121 1 76 2 223 1 253 1 6 1 8 1 10 2 126 1 198 1 107 1 150 1 174 1 33 1 130 1 205 1 35 1 153 1 112 1 113 1 21 1 67 1 155 1 190 3 192 1 332 1 218 1 247 1 350 1 
163 1 252 1 76 9 50 2 253 2 254 2 6 6 124 3 10 4 298 1 229 1 174 2 33 3 110 1 205 2 16 1 262 1 153 3 112 3 21 3 67 2 190 19 244 1 192 10 246 2 332 3 248 1 218 3 379 1 314 1 
163 2 252 1 76 14 50 4 253 3 254 1 27 1 6 4 124 2 10 6 298 2 174 3 33 2 205 3 89 2 16 1 262 1 153 3 369 1 236 1 112 3 327 1 281 1 21 3 67 3 23 1 190 26 192 12 244 2 246 2 332 2 218 2 379 2 314 1 
163 1 252 1 76 20 356 1 50 4 253 3 254 1 27 1 6 8 124 4 10 6 298 3 300 1 174 3 33 5 110 1 205 3 89 1 16 1 262 1 153 5 181 1 18 1 369 1 236 1 112 4 326 1 327 1 281 1 21 4 23 1 67 3 305 1 190 41 244 3 192 21 246 4 332 4 248 1 218 4 379 2 381 1 314 1 
163 1 252 1 76 20 356 1 50 4 253 4 254 1 27 1 6 7 124 4 10 8 298 3 300 1 174 4 33 4 110 1 205 4 89 2 16 1 262 1 153 5 181 1 18 1 369 1 236 1 112 4 326 1 327 1 281 1 21 4 23 1 67 4 305 1 190 38 244 3 192 18 246 4 332 3 248 1 218 3 379 2 381 1 314 1 
163 1 252 1 76 27 356 1 50 4 253 2 254 1 27 1 6 14 124 7 10 4 298 4 257 2 174 2 33 8 110 2 205 2 89 1 16 1 262 1 153 8 181 1 18 1 369 1 236 1 112 7 326 1 327 1 281 1 21 7 23 1 67 2 305 1 190 52 244 2 192 25 246 4 332 7 218 7 379 1 381 1 314 1 
269 1 255 1 372 1 191 1 158 1 260 1 96 1 197 1 333 1 22 1 
167 1 207 1 
269 1 255 1 372 1 191 1 158 1 260 1 104 1 249 1 137 1 
269 1 166 1 48 1 168 1 185 1 197 1 22 1 255 1 320 1 372 1 191 1 158 1 373 2 95 1 260 1 96 1 339 1 57 1 
269 1 166 1 48 1 168 1 185 1 197 1 22 1 255 1 320 1 372 1 191 1 158 1 373 2 95 1 260 1 96 1 339 1 57 1 
269 1 166 1 48 1 168 1 185 1 197 1 22 1 255 1 320 1 372 1 191 1 158 1 373 2 95 1 260 1 96 1 339 1 57 1 
344 1 224 1 202 1 
344 1 224 1 202 1 
243 1 85 1 
243 1 224 1 85 1 
366 1 72 1 
269 1 47 1 291 2 166 1 167 1 315 1 8 2 255 1 126 2 107 2 260 1 276 1 57 1 366 1 234 1 207 1 280 1 90 1 185 1 372 1 191 1 158 1 373 1 95 1 72 1 193 1 350 2 
344 1 202 1 
243 1 224 1 85 1 
76 1 103 1 253 1 273 1 8 2 10 2 107 2 150 1 174 1 338 2 205 1 131 2 151 1 154 1 182 1 183 1 343 1 264 1 65 2 214 1 19 1 39 2 41 1 67 1 155 1 190 2 308 1 192 1 247 1 313 1 350 2 
271 1 278 1 183 1 263 1 26 1 39 2 274 1 149 1 42 1 363 1 308 1 323 1 375 1 338 2 288 1 312 1 364 2 290 1 131 2 
271 1 183 1 263 1 26 1 39 1 149 1 42 1 363 1 308 1 323 1 374 1 375 1 338 1 312 1 364 2 290 1 131 1 
111 1 278 1 183 1 343 1 263 1 211 1 170 1 39 1 41 1 308 1 338 1 34 1 131 1 100 1 
271 1 278 1 183 1 263 1 26 1 39 1 149 1 42 1 363 1 308 1 323 1 375 1 338 1 288 1 312 1 364 2 290 1 131 1 
123 1 
12 1 168 1 128 1 295 1 52 1 28 1 371 1 
250 1 352 1 354 1 168 2 146 1 52 1 295 1 172 1 12 1 127 1 302 1 134 1 185 1 242 1 95 1 376 1 97 1 
250 3 196 1 146 6 295 4 52 3 106 1 258 2 13 1 338 1 15 1 153 1 343 4 112 1 211 1 21 1 308 2 307 3 25 1 352 2 354 2 168 3 122 1 358 1 322 1 127 1 33 1 131 1 368 1 134 2 183 1 185 2 186 1 39 1 93 1 41 1 139 3 242 2 330 1 95 2 332 1 377 1 97 2 194 1 
250 3 164 1 352 2 196 2 354 2 168 5 293 1 146 6 5 1 295 8 52 5 298 1 173 1 12 2 13 1 127 1 33 2 134 2 153 2 369 1 236 1 112 2 185 1 327 1 281 1 21 2 139 5 23 1 242 1 95 1 307 5 244 1 246 1 332 2 97 2 
164 1 352 1 291 1 1 1 102 1 196 2 354 1 52 2 295 2 8 1 126 1 107 1 33 1 132 1 88 1 134 1 153 2 181 1 18 1 304 1 185 1 113 1 115 1 95 1 97 1 141 1 350 1 381 1 
352 1 134 1 354 1 168 1 52 1 295 1 371 1 12 1 128 1 97 1 
250 5 164 1 196 2 153 2 112 2 168 5 146 10 52 5 295 5 21 2 139 5 106 1 307 5 332 2 33 2 
242 1 12 1 95 1 127 1 168 1 185 1 
352 2 354 2 316 1 295 2 52 2 125 1 11 1 173 2 13 2 127 2 338 4 34 1 233 2 131 4 134 1 180 1 37 1 183 1 343 1 211 2 185 3 39 4 41 1 242 4 306 1 308 1 95 3 97 2 100 1 
291 2 1 1 220 1 253 1 8 2 10 2 126 2 107 3 200 1 150 1 174 1 338 1 205 1 131 1 59 1 183 1 343 1 211 1 90 1 113 2 39 1 20 1 67 1 41 1 190 1 308 1 192 1 377 1 247 1 313 1 118 1 350 3 
250 2 352 1 134 1 354 1 168 4 146 4 326 1 52 2 295 1 139 2 12 2 173 1 307 2 13 1 97 1 
191 1 158 1 342 1 
191 1 158 1 342 1 
297 1 191 1 158 1 72 1 197 1 
191 1 158 1 342 1 
191 1 158 1 55 1 
191 1 158 1 55 1 
191 1 158 1 55 1 
191 1 158 1 
255 1 260 1 
89 1 153 1 181 1 76 4 18 1 356 1 326 1 253 2 6 3 67 2 124 2 10 4 190 8 305 1 174 2 192 4 33 1 218 1 205 2 381 1 
153 1 181 1 18 1 76 3 356 1 326 1 28 1 6 2 124 2 305 1 190 6 192 3 33 1 381 1 
153 1 76 2 112 1 253 1 6 2 21 1 67 1 124 1 10 2 190 4 174 1 192 2 33 1 332 1 218 1 324 1 205 1 
153 1 76 3 112 1 6 2 21 1 124 1 190 7 298 1 244 1 192 4 246 2 33 1 332 1 218 1 110 1 
76 11 356 1 253 2 6 9 124 5 10 4 298 2 257 1 174 2 261 1 33 3 110 1 205 2 89 2 153 3 181 1 18 2 112 2 326 1 21 2 67 2 305 1 190 23 192 12 246 2 332 2 218 4 381 2 143 1 
190 1 192 1 246 1 
190 1 298 1 76 1 
153 1 76 3 112 1 253 1 6 3 21 1 67 1 10 2 106 1 124 2 190 6 174 1 192 3 332 1 33 1 218 1 324 1 205 1 
76 6 253 1 6 2 10 2 124 1 298 1 174 1 33 2 205 1 153 2 236 1 112 2 369 1 327 1 281 1 21 2 67 1 23 1 190 12 192 6 244 1 246 1 332 2 218 1 314 1 
153 1 181 1 76 3 18 1 6 2 124 1 190 6 192 3 33 1 218 1 381 1 
89 1 76 1 18 1 356 1 253 1 6 2 67 1 124 1 10 2 190 3 305 1 174 1 261 1 192 2 218 1 381 1 205 1 
153 2 181 1 18 2 76 5 253 1 6 5 67 1 10 2 124 3 190 10 174 1 192 5 33 2 218 2 205 1 314 1 132 1 381 2 
153 1 76 2 112 1 253 1 6 1 67 1 10 2 190 2 174 1 218 1 314 1 205 1 
153 1 76 2 112 1 253 1 6 2 21 1 67 1 124 1 10 2 190 4 174 1 192 2 33 1 332 1 218 1 314 1 205 1 
89 1 18 1 76 1 253 3 6 2 67 3 10 6 124 1 190 3 174 3 261 1 192 2 248 1 218 1 314 1 205 3 381 1 
76 16 356 1 253 5 6 12 10 10 124 7 361 1 298 3 174 5 261 1 33 5 110 1 324 1 205 5 89 2 178 1 153 5 181 2 18 3 112 3 326 1 21 3 67 5 305 1 190 34 116 1 192 18 244 1 246 4 332 3 248 1 218 5 381 3 314 1 
76 4 356 1 253 1 6 2 10 2 124 2 298 1 174 1 33 1 205 1 153 1 181 1 18 1 326 1 327 1 67 1 190 8 305 1 192 4 244 1 246 1 314 1 381 1 
76 6 356 1 253 2 6 3 124 2 10 4 298 1 174 2 33 1 110 1 324 1 205 2 153 2 181 1 18 1 112 1 326 1 327 1 21 1 67 2 305 1 190 11 192 5 244 1 246 2 218 1 381 1 314 1 
76 9 356 1 253 3 6 4 10 6 124 3 298 1 174 3 33 3 324 1 205 3 89 1 153 3 181 1 18 1 369 1 236 1 112 2 326 1 327 1 281 1 21 2 67 3 23 1 305 1 190 19 192 10 244 1 246 1 332 2 218 1 381 1 314 1 
76 10 356 1 253 3 6 5 10 6 124 3 298 1 174 3 33 2 324 1 205 3 89 1 153 3 181 1 18 1 236 1 112 2 369 1 326 1 327 1 281 1 21 2 67 3 23 1 305 1 190 17 192 7 244 1 246 1 332 1 218 2 381 1 314 1 
76 4 356 1 253 1 6 2 10 2 124 2 298 1 174 1 33 1 205 1 153 1 181 1 18 1 326 1 327 1 67 1 190 8 305 1 192 4 244 1 246 1 314 1 381 1 
76 6 253 1 6 2 10 2 124 1 298 1 174 1 33 2 205 1 153 2 236 1 112 2 369 1 327 1 281 1 21 2 67 1 23 1 190 12 192 6 244 1 246 1 332 2 218 1 314 1 
76 10 356 1 253 4 6 5 10 8 124 3 298 1 174 4 33 2 324 1 205 4 89 2 153 3 181 1 18 1 369 1 236 1 112 2 326 1 327 1 281 1 21 2 67 4 23 1 305 1 190 18 192 8 244 1 246 1 332 1 218 2 381 1 314 1 
76 9 253 4 6 6 10 8 124 3 298 1 174 4 33 2 205 4 89 2 153 3 369 1 236 1 112 3 327 1 281 1 21 3 67 4 23 1 190 16 192 7 244 1 246 1 332 2 218 3 248 1 314 1 
153 1 181 1 18 3 76 3 356 2 6 6 124 3 190 7 305 1 192 4 33 1 218 3 381 3 
76 10 356 1 253 4 6 4 10 8 124 3 298 1 174 4 33 2 205 4 89 2 153 3 181 1 18 1 369 1 236 1 112 2 326 1 327 1 281 1 21 2 67 4 23 1 305 1 190 18 192 8 244 1 246 1 332 1 218 1 248 1 381 1 314 1 
107 1 318 1 90 1 225 1 337 1 350 1 8 1 
270 1 209 1 318 1 90 1 225 1 337 1 114 1 8 1 107 1 176 1 380 1 350 1 
308 1 183 1 343 1 211 1 338 1 34 1 28 1 39 1 41 1 100 1 131 1 
291 1 183 1 343 1 211 1 90 1 20 1 39 1 8 1 41 1 126 1 107 2 308 1 338 1 377 1 118 1 350 2 351 1 131 1 
291 2 8 2 53 1 126 1 107 2 31 1 338 1 233 1 131 1 183 1 343 3 90 1 39 1 20 1 41 2 68 1 308 1 377 2 141 1 118 1 350 2 351 1 74 1 
291 2 8 2 53 1 126 1 107 2 31 1 338 2 233 1 131 2 208 1 183 1 343 3 90 1 239 1 39 2 20 1 41 2 68 1 308 1 377 2 141 1 350 2 351 1 74 1 
291 1 1 1 102 1 168 1 122 1 8 1 53 1 126 1 107 1 258 1 12 1 338 1 233 1 88 1 131 1 368 1 179 1 183 1 343 4 113 1 185 2 39 1 40 1 115 1 41 1 242 1 95 2 308 1 377 1 141 1 350 1 74 1 
291 1 1 1 102 1 168 1 122 1 8 1 53 1 126 1 107 1 258 1 12 1 338 1 233 1 88 1 15 1 131 1 368 1 183 1 343 4 113 1 185 2 39 1 115 1 41 1 242 1 95 2 308 1 377 1 141 1 350 1 74 1 
308 1 183 1 184 1 338 1 39 1 131 1 
154 1 184 1 183 2 355 1 343 3 211 2 65 1 240 1 39 7 274 1 41 2 256 1 363 1 322 1 308 3 84 1 14 1 338 7 377 1 232 1 131 6 
291 1 253 2 6 2 8 1 10 4 198 1 107 2 200 1 150 2 338 1 205 2 59 1 153 1 18 1 343 1 20 1 67 2 155 1 156 1 305 1 308 1 118 1 350 2 351 1 121 1 76 3 356 1 223 1 319 1 274 1 124 2 126 1 174 2 33 1 131 1 182 1 181 1 183 1 90 2 326 1 39 1 41 1 190 6 192 3 247 2 377 1 381 1 
291 1 1 1 102 1 196 2 52 5 295 4 8 1 107 1 258 1 12 2 338 1 15 1 153 2 18 1 343 2 211 1 113 1 115 1 350 1 164 1 352 2 315 1 354 2 168 2 122 1 358 1 125 1 126 1 127 1 128 1 33 2 131 1 132 1 88 1 368 1 134 2 181 1 185 3 186 1 39 1 371 1 93 1 242 2 95 3 97 2 141 1 381 1 
184 1 183 1 343 2 122 1 39 2 274 1 41 1 322 1 308 2 338 2 377 1 131 2 194 1 
183 1 343 1 211 1 239 1 39 4 274 1 41 1 308 1 338 4 34 1 101 1 131 4 100 1 
58 1 251 1 183 1 355 1 343 1 91 1 39 2 41 1 308 2 84 1 338 2 377 1 233 1 131 2 
271 1 149 1 42 1 308 1 183 1 211 1 338 1 364 1 39 1 131 1 
154 1 183 1 343 1 214 1 39 2 274 1 41 1 363 1 308 1 338 2 131 2 
154 1 183 2 343 3 211 1 39 5 274 1 41 2 308 2 14 1 338 5 34 1 233 1 232 1 101 1 100 1 131 4 
154 1 183 2 343 3 211 1 39 5 274 1 41 2 328 1 308 2 338 5 34 1 233 1 232 1 101 1 100 1 131 4 
291 1 208 1 183 1 343 1 211 1 90 1 20 1 39 1 8 1 41 1 126 1 107 2 308 1 338 1 377 1 350 2 351 1 131 1 
183 1 355 1 343 1 39 1 41 1 256 1 322 1 308 2 84 1 338 1 377 1 233 1 131 1 
107 1 144 1 341 1 264 1 287 1 273 1 19 1 350 1 8 1 
321 1 341 1 296 1 
144 1 341 1 317 1 287 1 90 1 
291 1 1 1 144 1 102 1 315 1 317 1 168 1 296 1 8 1 126 1 107 1 321 1 12 1 29 1 31 1 88 1 368 1 235 1 341 1 237 1 113 1 185 2 68 1 115 1 95 2 287 1 141 2 350 1 
79 1 152 1 81 1 28 1 
79 1 152 1 353 1 81 1 30 1 336 1 277 1 
120 1 353 1 129 1 
206 1 165 1 152 1 353 3 336 3 69 1 79 1 299 1 81 1 30 1 231 2 277 1 
353 2 152 1 36 1 336 2 51 1 79 1 81 1 30 1 32 1 277 1 
54 1 69 1 271 1 152 1 353 1 323 1 30 1 336 1 364 1 148 1 277 1 
79 1 69 1 152 1 353 1 30 1 336 1 277 1 
79 2 69 1 353 1 81 1 30 1 336 1 277 1 
292 1 152 1 353 2 336 2 79 1 282 1 69 1 30 2 24 1 277 2 
353 3 152 2 4 1 36 2 222 1 336 3 79 1 69 1 54 1 81 1 30 1 349 1 277 1 
271 1 152 1 353 2 36 1 336 2 26 1 79 1 69 1 149 1 81 1 30 1 43 1 323 1 364 2 277 1 
353 3 152 2 4 1 36 2 336 3 51 1 79 1 69 1 189 1 54 1 81 1 30 1 32 1 277 1 
79 1 69 1 152 1 353 1 81 1 30 1 336 1 277 1 
206 1 353 4 152 3 4 1 36 2 336 4 51 1 79 2 54 1 299 1 81 2 30 1 231 1 277 1 
335 1 152 1 353 2 36 1 77 1 336 2 226 1 79 1 69 1 81 1 30 1 277 1 
206 1 152 1 353 3 336 3 69 1 79 1 299 2 81 1 30 1 231 2 277 1 119 1 
329 1 152 2 45 2 230 1 
69 1 353 1 30 1 336 1 161 1 277 1 
79 1 69 1 152 1 353 2 81 1 36 1 222 1 30 1 336 2 277 1 
187 1 
79 1 69 1 152 1 353 1 81 1 30 1 336 1 277 1 
79 1 69 1 152 1 353 3 81 1 36 1 222 1 30 1 336 3 231 1 277 1 
54 1 152 1 4 1 51 1 
79 1 152 1 

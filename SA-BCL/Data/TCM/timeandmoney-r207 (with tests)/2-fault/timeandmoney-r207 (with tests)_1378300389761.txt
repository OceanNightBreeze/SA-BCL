#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONSTANT | 7094 | 0 -> -1
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z | CONDITION | 731 | if (x) -> if (!x)
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
12 3 112 6 13 1 280 1 208 9 41 1 143 2 338 1 237 9 304 1 189 1 147 2 191 1 101 2 314 1 316 1 225 1 250 1 227 1 230 2 162 4 349 1 348 2 103 2 322 1 276 2 352 1 353 5 
12 3 112 6 13 1 280 1 208 9 41 1 143 2 338 1 237 9 304 1 189 1 147 2 191 1 101 2 314 1 316 1 225 1 250 1 227 1 230 2 162 4 349 1 103 2 348 2 322 1 276 2 352 1 353 5 
12 4 112 7 13 1 280 1 208 10 41 1 143 2 338 1 237 10 304 1 189 1 147 2 191 1 101 2 314 1 316 1 225 1 250 1 227 1 230 2 162 5 349 1 103 2 348 2 322 1 276 2 352 1 353 6 
12 2 112 4 13 1 280 1 208 7 41 1 143 1 338 1 237 7 304 1 189 1 147 2 191 1 101 2 314 1 316 1 225 1 250 1 227 1 230 2 162 3 349 1 103 2 348 2 276 2 352 1 353 4 
12 1 101 1 112 3 314 1 208 4 227 1 143 2 338 1 230 1 237 4 304 1 162 2 349 1 103 1 322 1 147 1 276 1 353 3 
328 1 101 1 316 1 208 2 41 1 78 1 227 1 230 1 237 2 304 1 349 1 348 1 147 1 244 1 276 1 353 1 
12 1 112 1 208 3 225 1 227 1 230 2 237 3 304 1 162 1 349 1 348 1 147 2 353 2 
12 3 112 7 13 1 280 1 208 9 143 2 338 1 237 9 214 1 304 1 147 2 56 1 101 1 314 1 225 1 227 1 230 2 162 4 349 1 348 1 103 1 322 1 276 1 353 5 
12 3 112 7 13 1 280 1 208 9 143 2 338 1 237 9 214 1 304 1 147 2 56 1 101 1 314 1 225 1 227 1 230 2 162 4 349 1 348 1 103 1 322 1 276 1 353 5 
43 1 28 1 128 1 
43 1 3 1 64 2 
83 2 74 1 215 2 212 2 211 1 6 2 197 2 277 2 
355 1 332 1 235 1 358 2 15 1 69 1 212 3 211 1 360 1 144 1 173 1 46 2 342 1 74 1 99 1 0 1 25 1 215 3 51 2 120 1 290 1 318 1 4 1 77 1 196 1 6 2 197 2 83 2 61 2 200 1 204 1 90 1 134 1 299 1 277 2 205 1 111 2 
83 1 153 1 246 1 298 1 215 1 212 1 211 1 6 1 197 1 277 1 
368 1 178 1 246 1 184 1 372 1 30 1 31 1 212 1 197 1 43 1 128 1 241 1 215 1 218 1 
178 1 246 1 184 1 372 1 31 2 30 2 212 1 6 1 197 1 43 1 83 1 128 1 241 1 215 1 277 1 
329 1 326 1 31 1 30 1 151 1 
43 1 128 1 357 1 148 1 326 1 31 2 30 2 151 1 
31 1 30 1 151 1 
153 1 246 1 30 1 31 1 211 1 212 1 6 1 197 1 181 1 83 1 298 1 326 1 215 1 277 1 
43 1 
43 1 128 1 357 1 240 1 326 1 31 2 30 2 151 1 
177 1 154 2 315 1 357 1 371 1 281 1 30 5 31 5 345 2 236 1 229 2 43 1 97 1 128 1 105 1 326 2 151 2 253 1 269 1 
28 1 74 1 
179 1 212 2 6 1 197 2 83 1 74 2 215 2 63 1 277 1 
17 1 164 1 190 1 
120 1 290 1 195 1 318 1 4 1 196 1 212 1 360 1 61 1 46 1 74 1 99 1 134 1 25 1 215 1 51 1 
346 1 83 1 74 1 215 3 212 3 6 3 197 3 277 3 
246 1 298 1 215 1 212 1 6 1 197 1 277 1 
83 1 246 1 179 1 215 1 212 1 63 1 6 1 197 1 277 1 
184 1 358 1 15 1 69 1 212 4 211 1 260 1 360 1 144 1 173 1 46 1 241 1 74 1 99 1 0 1 25 1 215 4 51 1 363 1 365 1 178 1 246 1 120 1 290 1 318 1 179 1 4 1 77 1 196 1 372 1 30 1 31 1 6 3 197 3 346 1 83 2 61 1 200 1 204 1 90 1 134 1 299 1 277 3 111 2 
346 1 32 1 74 1 215 2 212 2 218 1 6 1 197 2 277 1 
246 1 178 1 179 1 184 1 372 1 31 1 30 1 212 3 5 1 6 3 197 3 346 2 83 1 43 1 241 1 215 3 363 1 277 3 365 1 
179 1 212 2 6 2 197 2 346 1 83 1 17 1 164 1 215 2 277 2 
120 1 318 1 290 1 4 1 196 1 212 1 360 1 61 1 46 1 74 1 99 1 134 1 25 1 215 1 51 1 
120 1 318 1 290 1 4 1 196 1 212 1 360 1 61 1 375 1 46 1 129 1 74 1 99 1 215 1 51 1 
168 1 15 1 358 4 116 1 144 2 17 2 0 1 190 2 308 1 286 1 219 1 366 1 370 1 247 1 77 1 158 1 204 1 106 1 164 2 90 1 299 1 327 1 205 2 111 2 
246 1 184 1 215 1 212 1 6 1 364 1 197 1 277 1 
120 1 290 1 318 1 4 1 196 1 212 2 6 1 197 1 360 1 346 1 17 1 61 1 46 1 99 1 25 1 134 1 215 2 51 1 277 1 365 1 
179 1 155 1 212 5 6 4 197 5 346 2 83 1 32 1 74 1 215 5 165 1 218 1 277 4 365 1 
246 1 298 1 215 2 212 2 364 1 6 2 197 2 277 2 
39 1 268 1 
39 1 268 1 
118 1 295 1 
118 1 295 1 
118 1 295 1 
96 1 39 1 268 1 
96 1 39 1 268 1 
39 1 72 1 268 1 
39 2 118 1 216 1 381 1 268 2 295 1 
96 1 39 1 268 1 
39 1 268 1 126 1 
39 1 268 1 126 1 
39 1 268 1 126 1 
39 2 193 1 279 3 93 2 333 2 30 2 31 2 171 1 114 1 228 1 95 1 43 1 238 2 378 1 85 2 307 2 381 1 268 2 55 1 
39 1 279 1 333 1 212 2 171 1 262 1 238 1 72 1 22 1 284 1 74 1 307 1 215 2 268 1 26 1 75 1 121 1 31 1 30 1 6 2 197 2 85 1 323 1 277 2 
101 1 103 1 276 1 
101 1 78 1 276 1 
9 1 206 1 103 2 78 1 276 3 359 1 
9 1 103 1 302 1 78 1 276 2 359 1 
9 2 103 1 78 1 276 2 359 1 
300 2 301 1 257 1 357 1 169 1 209 1 43 2 97 3 73 1 22 1 286 1 50 2 310 1 26 1 151 1 366 1 154 1 177 1 370 1 3 1 121 1 345 1 31 5 30 5 82 1 229 1 128 1 33 2 105 2 106 1 326 4 64 3 
255 1 329 5 300 6 257 2 357 1 210 1 281 1 70 1 16 1 43 5 97 8 266 1 73 3 22 4 286 3 310 2 151 6 366 3 177 1 154 2 370 3 3 3 31 9 30 9 345 2 82 1 229 2 198 1 128 1 130 5 33 6 105 6 106 3 326 7 64 9 
300 2 301 1 257 1 209 1 281 1 43 3 97 3 22 1 73 1 310 1 50 1 286 1 366 1 154 1 370 1 3 2 345 1 31 3 30 3 229 1 128 1 105 2 33 2 106 1 326 2 64 4 
255 1 300 4 301 1 257 1 209 1 210 1 281 1 43 4 97 5 22 2 73 2 310 1 50 2 286 2 366 2 154 1 370 2 3 3 345 1 31 4 30 4 229 1 198 1 128 1 33 4 105 4 106 2 326 3 64 7 
28 1 290 1 122 1 
60 1 290 1 
79 1 
290 1 318 1 
290 3 318 1 99 1 122 2 275 1 1 1 
290 1 318 1 99 1 
290 1 125 1 
317 1 168 3 223 1 293 1 358 7 80 1 172 1 116 2 261 2 144 3 161 1 106 1 350 1 325 1 286 1 205 4 354 1 
317 1 168 3 223 1 293 1 358 7 80 1 172 1 116 2 261 2 144 3 161 1 106 1 350 1 325 1 286 1 205 4 354 1 
317 1 168 3 223 1 293 1 358 7 80 1 172 1 116 2 261 2 144 3 161 1 49 1 106 1 350 1 325 1 286 1 354 1 205 4 
168 10 358 31 172 2 339 1 261 3 116 5 144 15 73 3 0 1 286 4 366 3 370 3 317 1 76 1 223 1 77 1 293 5 80 1 159 4 271 3 161 2 84 1 8 1 202 1 10 1 204 1 350 2 325 2 106 4 90 1 65 1 354 1 111 2 205 16 
139 1 168 4 358 9 172 1 339 1 261 2 116 3 144 4 0 2 286 1 220 1 223 1 77 2 293 1 80 1 161 1 204 2 106 1 325 1 350 1 90 2 111 4 205 5 354 1 
183 1 112 1 206 1 208 2 185 1 94 1 187 1 237 2 304 1 46 1 147 1 51 1 27 1 101 1 2 1 120 1 196 1 78 1 156 1 227 1 270 1 230 1 7 1 61 1 199 1 349 1 103 1 348 1 276 2 353 1 
234 1 136 1 183 1 206 1 112 2 208 3 94 1 187 1 237 3 46 1 147 1 51 1 53 1 27 1 101 1 2 1 120 1 196 1 78 1 156 1 227 1 230 1 7 1 61 1 199 1 349 1 103 1 348 1 276 2 353 1 
234 1 112 2 206 1 208 2 94 1 187 1 237 2 46 1 51 1 53 1 27 1 101 1 2 1 120 1 196 1 78 1 156 1 227 1 61 1 199 1 349 1 348 1 103 1 276 2 353 1 
254 1 367 1 27 2 136 1 2 2 194 1 120 1 290 1 318 1 208 1 224 1 4 1 196 1 187 2 230 1 237 1 61 1 46 1 348 2 147 1 362 1 51 1 176 1 
234 1 183 1 206 1 208 1 185 1 94 1 187 1 237 1 304 1 46 1 147 1 51 1 27 1 101 1 2 1 120 1 196 1 78 1 156 1 230 1 7 1 61 1 199 1 103 1 348 1 276 2 
256 1 
38 1 278 1 138 1 184 1 340 1 43 2 97 2 46 2 241 1 149 1 51 2 151 6 57 2 152 1 192 2 154 1 3 2 194 1 246 1 290 1 4 2 196 1 345 1 197 1 61 2 252 2 105 2 64 2 11 1 257 1 357 3 68 1 258 1 14 1 212 1 306 2 24 4 215 1 218 1 367 1 368 1 177 1 221 1 178 1 120 1 318 1 372 1 30 5 31 5 124 1 229 1 231 2 127 2 128 1 321 2 
368 1 278 1 221 1 357 1 246 1 178 1 68 1 138 1 258 1 184 1 372 1 30 3 31 3 212 1 197 1 240 1 241 1 306 1 24 2 215 1 151 2 218 1 
278 1 357 1 138 1 68 1 258 1 184 1 212 1 43 1 241 1 240 1 24 3 215 1 151 1 218 1 57 1 368 1 221 1 178 1 246 1 372 1 31 3 30 3 197 1 128 1 
278 1 357 1 138 1 68 1 258 1 184 1 212 1 43 1 240 1 241 1 306 1 24 3 215 1 218 1 151 2 57 1 368 1 221 1 178 1 246 1 372 1 31 3 30 3 197 1 252 1 128 1 
67 1 278 1 357 3 138 1 68 1 258 1 184 1 212 1 340 1 43 5 97 1 240 1 241 1 306 4 24 6 215 1 218 1 151 7 343 1 57 4 192 2 368 1 154 1 177 1 221 1 3 2 178 1 246 1 372 1 345 1 31 5 30 5 124 1 319 1 229 1 197 1 231 2 127 2 296 1 252 4 321 2 128 5 131 1 105 1 
38 1 278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 2 97 1 241 1 306 2 24 4 215 1 151 4 218 1 57 2 192 2 368 1 221 1 154 1 177 1 3 2 178 1 246 1 372 1 345 1 31 4 30 4 124 1 229 1 197 1 231 2 252 2 127 2 128 1 321 2 105 1 64 2 
278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 1 97 1 241 1 306 2 24 4 215 1 151 4 218 1 343 1 57 2 192 2 368 1 221 1 177 1 154 1 3 2 178 1 246 1 372 1 345 1 31 4 30 4 124 1 197 1 229 1 231 2 252 2 127 2 296 1 128 1 321 2 131 1 105 1 
278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 1 97 1 241 1 306 2 24 4 215 1 151 4 218 1 343 1 57 2 192 2 368 1 221 1 177 1 154 1 3 2 178 1 246 1 372 1 345 1 31 4 30 4 124 1 197 1 229 1 231 2 252 2 127 2 296 1 128 1 321 2 131 1 105 1 
278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 303 1 43 1 19 2 97 1 241 1 306 2 24 4 215 1 151 4 218 1 57 2 192 2 368 1 369 1 221 1 177 1 154 1 178 1 246 1 372 1 345 1 31 4 30 4 197 1 229 1 231 2 252 2 128 1 131 1 105 1 380 2 64 2 167 1 
67 1 278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 1 97 1 241 1 306 3 24 5 215 1 218 1 151 5 343 1 57 3 192 2 368 1 154 1 177 1 221 1 3 2 178 1 246 1 372 1 345 1 31 4 30 4 124 1 229 1 197 1 231 2 127 2 296 1 252 3 128 1 321 2 131 1 105 1 
67 1 278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 1 97 1 241 1 306 3 24 5 215 1 218 1 151 5 343 1 57 3 192 2 368 1 154 1 177 1 221 1 3 2 178 1 246 1 372 1 345 1 31 4 30 4 124 1 229 1 197 1 231 2 127 2 296 1 252 3 128 1 321 2 131 1 105 1 
38 1 278 1 357 2 138 1 68 1 258 1 184 1 212 1 340 1 43 1 19 2 97 1 241 1 306 2 24 4 215 1 151 4 218 1 57 2 192 2 368 1 221 1 154 1 177 1 178 1 246 1 372 1 345 1 31 4 30 4 229 1 197 1 231 2 252 2 128 1 105 1 380 2 64 2 167 1 
168 2 15 1 358 6 116 2 261 1 144 3 17 1 74 2 0 1 190 1 286 1 28 1 247 1 223 1 77 1 80 1 204 1 164 1 325 1 350 1 106 1 90 1 299 1 354 1 111 2 205 3 
355 1 233 1 168 2 15 1 358 14 69 1 116 1 361 1 144 6 17 11 48 1 73 2 74 1 0 2 190 11 286 2 311 1 366 2 370 1 293 1 77 2 159 3 271 3 8 1 203 1 204 2 164 4 106 1 90 2 299 2 65 1 111 4 205 8 
355 1 40 1 15 1 358 2 69 1 212 2 360 1 213 1 144 1 45 1 46 1 74 1 99 1 25 1 0 1 215 2 51 1 311 1 365 1 120 1 290 1 318 1 195 1 4 1 77 1 196 1 6 1 197 1 346 1 61 1 204 1 164 1 134 1 90 1 299 1 277 1 111 2 205 1 
234 1 144 10 46 3 99 2 0 3 190 7 286 3 51 3 288 2 58 2 290 2 4 1 293 4 196 2 6 1 197 1 346 1 61 3 204 3 350 1 106 3 164 7 299 3 354 1 111 6 205 10 355 1 168 8 15 3 358 20 69 1 212 3 115 2 261 1 116 4 360 2 17 7 174 1 117 1 173 2 73 2 74 2 25 2 215 3 365 1 311 1 366 2 370 2 120 2 318 2 223 1 77 3 80 1 272 1 325 1 89 2 90 3 134 2 277 1 
355 1 234 1 137 1 235 2 15 2 358 2 69 1 212 1 144 1 46 8 0 2 215 1 51 7 52 1 119 1 54 1 367 1 194 1 120 2 247 1 290 3 318 2 4 2 77 2 196 2 344 1 6 1 270 1 197 1 346 1 61 8 347 1 204 2 90 2 299 2 135 1 277 1 111 4 205 1 
168 1 15 1 358 3 212 1 116 1 144 2 17 1 264 1 73 1 190 1 0 1 215 1 286 1 311 1 366 1 370 1 179 1 77 1 6 1 197 1 83 1 204 1 164 1 106 1 90 1 299 1 277 1 111 2 205 1 
366 1 168 1 247 1 293 1 358 2 15 1 77 1 17 1 204 1 164 1 190 1 90 1 0 1 308 1 286 1 299 1 111 2 205 2 
370 1 168 1 247 1 358 2 15 1 77 1 158 1 116 1 144 2 17 1 204 1 164 1 106 1 190 1 90 1 0 1 299 1 111 2 
168 2 15 1 358 4 116 1 144 2 17 2 73 1 0 1 190 2 286 1 366 1 370 1 247 1 77 1 293 1 204 1 164 2 106 1 90 1 299 1 205 2 111 2 
366 1 168 1 293 1 358 2 15 1 77 1 17 1 347 1 204 1 164 1 190 1 90 1 0 1 308 1 286 1 299 1 111 2 205 2 
370 1 168 1 358 2 15 1 77 1 158 1 116 1 144 2 17 1 347 1 204 1 164 1 106 1 190 1 90 1 0 1 299 1 111 2 
168 2 15 1 358 4 116 1 144 2 17 2 73 1 0 1 190 2 286 1 366 1 370 1 77 1 293 1 347 1 204 1 164 2 106 1 90 1 299 1 205 2 111 2 
168 2 358 4 15 1 116 1 144 2 17 2 73 1 0 1 190 2 286 1 366 1 370 1 77 1 293 1 204 1 164 2 106 1 90 1 299 1 205 2 111 2 
355 1 358 2 15 1 69 1 212 1 360 1 144 1 173 1 46 1 74 1 99 1 25 1 0 1 215 1 51 1 120 1 318 1 290 1 4 1 77 1 196 1 61 1 204 1 134 1 90 1 299 1 205 1 111 2 
355 1 358 2 15 1 69 1 212 1 360 1 144 1 46 1 74 1 99 1 0 1 215 1 51 1 120 1 318 1 290 1 4 1 77 1 196 1 61 1 375 1 129 1 204 1 90 1 299 1 66 1 205 1 111 2 
168 2 15 1 358 4 116 1 144 2 17 2 73 1 0 1 190 2 286 1 311 1 366 1 370 1 77 1 293 1 204 1 164 2 106 1 90 1 299 1 205 2 111 2 
168 2 358 4 15 1 212 1 116 1 360 1 144 2 17 2 173 1 46 1 73 1 99 1 190 2 25 1 0 1 286 1 215 1 51 1 366 1 370 1 120 1 58 1 318 1 290 1 293 1 77 1 196 1 270 1 61 1 204 1 106 1 164 2 134 1 90 1 299 1 205 2 111 2 
168 1 15 1 358 3 212 1 144 1 17 1 73 1 0 1 190 1 215 1 286 1 311 1 366 1 370 1 179 1 293 1 77 1 6 1 197 1 83 1 204 1 106 1 164 1 90 1 299 1 277 1 166 1 111 2 205 2 
339 1 144 21 44 1 0 3 286 5 243 1 289 1 59 1 293 4 248 1 294 1 159 4 8 3 204 3 106 5 350 1 107 1 65 1 205 20 111 6 354 1 168 8 358 41 170 4 71 1 116 4 261 1 73 4 217 1 220 1 366 4 312 1 370 4 223 1 77 3 80 1 271 3 376 1 133 2 325 1 324 1 90 3 91 1 
168 7 170 4 358 38 71 1 339 2 261 1 116 4 144 18 44 1 73 4 0 4 286 5 243 1 217 1 220 1 366 4 312 1 289 1 370 3 59 1 223 1 248 1 77 4 293 3 80 1 294 1 159 4 271 3 376 1 8 3 133 2 204 4 324 1 350 1 325 1 106 4 90 4 107 1 91 1 65 1 354 1 111 8 205 20 
168 14 170 4 358 52 71 1 339 1 261 1 116 7 144 25 44 1 73 7 0 2 286 8 217 1 220 1 366 7 312 1 289 1 370 7 223 1 248 1 77 2 293 7 80 1 294 1 159 4 271 4 376 1 8 2 203 2 133 1 204 2 324 1 350 1 325 1 106 8 90 2 107 1 91 1 65 2 354 1 111 4 205 27 
168 6 170 2 358 19 116 3 144 10 73 3 0 2 286 3 243 1 217 1 220 1 366 3 370 3 222 1 77 2 293 3 294 1 159 2 271 1 8 1 133 1 204 2 324 2 106 3 90 2 107 1 91 1 65 1 111 4 205 9 
168 4 170 4 358 26 71 1 339 2 116 2 144 12 44 1 73 3 0 3 286 3 217 2 220 1 366 3 312 1 289 1 370 2 293 2 248 1 77 3 294 1 159 2 271 2 376 1 8 2 133 2 204 3 324 1 106 2 90 3 107 1 91 1 111 6 205 14 
95 1 39 1 238 1 378 1 85 1 307 1 333 1 226 1 381 1 268 1 
262 1 72 1 
39 1 238 1 201 1 85 1 307 1 333 1 382 1 268 1 100 1 
39 1 193 1 279 2 93 1 333 1 30 1 31 1 171 1 228 1 95 1 43 1 238 1 378 1 85 1 307 1 381 1 268 1 55 1 
39 1 193 1 279 2 93 1 333 1 30 1 31 1 171 1 228 1 95 1 43 1 238 1 378 1 85 1 307 1 381 1 268 1 55 1 
39 1 193 1 279 2 93 1 333 1 30 1 31 1 171 1 228 1 95 1 43 1 238 1 378 1 85 1 307 1 381 1 268 1 55 1 
96 1 267 1 216 1 
96 1 267 1 216 1 
132 1 126 1 
132 1 216 1 126 1 
284 1 323 1 
92 1 39 1 279 1 93 1 333 1 212 2 262 1 238 1 72 1 22 1 284 1 74 1 307 1 215 2 268 1 26 1 75 1 193 1 121 1 31 1 30 1 6 2 197 2 85 1 323 1 326 1 277 2 
96 1 267 1 
132 1 216 1 126 1 
330 1 355 1 137 1 235 2 15 1 358 2 69 1 212 2 42 1 144 1 46 2 0 1 285 1 215 2 51 2 311 1 120 1 290 1 318 1 77 1 196 1 344 1 197 2 61 2 182 1 204 1 90 1 299 1 351 1 111 2 205 1 
101 1 234 1 183 1 2 1 206 1 120 1 249 1 78 1 196 1 334 1 283 1 156 1 270 1 61 2 199 1 46 2 103 1 51 2 276 2 
101 1 234 1 183 1 2 1 206 1 120 1 249 1 78 1 81 1 196 1 156 1 61 1 199 1 46 1 103 1 51 1 276 2 
367 1 2 1 194 1 120 1 290 1 318 1 4 1 224 1 196 1 283 1 61 1 46 1 379 1 51 1 
101 1 234 1 183 1 2 1 206 1 120 1 249 1 78 1 196 1 334 1 283 1 156 1 61 1 199 1 46 1 103 1 51 1 276 2 
341 1 
43 1 28 1 97 1 128 1 315 1 105 1 236 1 
177 1 154 1 357 1 3 1 31 1 30 1 345 1 124 1 229 1 43 2 127 1 128 1 321 1 97 1 105 1 64 1 151 1 
331 2 140 2 236 1 43 8 145 1 97 9 46 3 242 1 241 2 99 3 286 2 51 3 151 5 288 2 154 4 3 6 290 10 4 1 196 4 345 4 102 2 60 3 61 3 163 2 105 8 106 2 64 12 11 1 109 1 110 1 300 6 257 2 357 3 207 2 263 1 73 2 309 2 366 2 177 4 315 1 370 2 120 3 318 3 30 5 31 5 180 2 122 2 125 2 270 1 229 4 128 2 33 6 273 2 275 1 
300 5 257 1 357 1 71 1 43 5 97 8 73 2 309 2 286 2 151 1 366 2 312 1 289 1 154 2 177 2 3 3 370 2 248 1 31 1 30 1 345 2 159 1 229 2 271 1 376 1 8 1 128 2 163 1 87 1 86 1 33 5 105 5 106 2 64 6 11 1 
212 1 211 1 186 1 97 2 215 1 309 2 286 2 154 1 177 1 153 1 246 1 80 1 345 1 31 1 30 1 6 1 229 1 197 1 181 1 83 1 296 1 163 1 105 2 350 1 325 1 106 1 298 1 277 1 
177 1 154 1 315 1 345 1 236 1 229 1 43 1 128 1 97 1 105 1 
366 2 300 5 3 5 370 2 43 5 97 5 163 1 73 2 105 5 33 5 106 2 309 2 286 2 64 10 288 1 
43 1 128 1 357 1 31 1 30 1 151 1 
257 2 357 2 14 1 281 1 263 2 46 4 97 2 51 4 151 4 245 1 152 1 367 1 154 2 177 1 194 1 120 1 290 1 318 1 4 2 196 1 345 2 30 3 31 3 251 1 229 2 61 4 105 2 11 2 110 1 
358 1 15 1 69 1 212 3 211 1 360 1 144 1 173 1 46 1 74 1 99 1 0 1 25 1 215 3 51 1 120 1 318 1 290 1 4 1 77 1 196 1 6 2 197 2 61 1 83 2 200 1 204 1 134 1 90 1 299 1 277 2 111 2 
300 2 177 1 154 1 257 1 3 2 345 1 229 1 261 1 43 4 97 1 128 2 33 2 105 2 64 4 11 1 
307 1 333 1 287 1 
307 1 333 1 287 1 
313 1 333 1 335 1 284 1 307 1 
307 1 333 1 287 1 
307 1 333 1 274 1 
307 1 333 1 274 1 
307 1 333 1 274 1 
307 1 333 1 
39 1 268 1 
168 2 358 8 261 1 116 2 144 4 0 1 286 1 220 1 289 1 223 1 77 1 80 1 159 1 271 1 8 1 204 1 106 1 325 1 350 1 90 1 111 2 205 4 354 1 
168 3 358 11 261 1 116 2 144 5 73 1 0 2 286 2 150 1 220 1 366 1 289 1 223 1 77 2 293 1 80 1 159 2 271 1 8 1 204 2 106 1 350 1 325 1 90 2 65 1 354 1 111 4 205 6 
168 4 358 19 71 1 339 1 261 1 116 3 144 10 73 2 0 3 286 3 150 1 220 1 366 2 312 1 289 1 370 2 223 1 293 1 77 3 248 1 80 1 159 1 271 1 376 1 8 1 204 3 350 1 325 1 106 3 90 3 354 1 111 6 205 9 
168 5 358 17 71 1 339 1 261 1 116 3 144 7 73 2 0 3 286 3 150 1 220 1 366 2 312 1 289 1 370 1 223 1 293 2 77 3 248 1 80 1 159 1 271 1 8 1 376 1 204 3 350 1 325 1 106 2 90 3 354 1 111 6 205 10 
168 2 358 8 261 1 116 2 144 4 0 1 286 1 220 1 289 1 223 1 77 1 80 1 159 1 271 1 8 1 204 1 106 1 325 1 350 1 90 1 111 2 205 4 354 1 
168 2 358 12 71 1 116 1 144 6 73 2 0 1 286 2 220 1 366 2 312 1 289 1 370 2 293 1 77 1 248 1 159 1 271 1 8 1 376 1 204 1 106 2 90 1 111 2 205 6 
168 5 358 18 71 1 339 2 261 1 116 3 144 8 73 2 0 4 286 3 150 1 220 1 366 2 312 1 289 1 370 1 223 1 293 2 248 1 77 4 80 1 159 1 271 1 376 1 8 1 204 4 350 1 325 1 106 2 90 4 354 1 111 8 205 10 
168 6 358 16 71 1 339 2 116 3 144 7 73 3 0 4 286 3 243 1 220 1 366 3 312 1 289 1 370 2 293 3 248 1 77 4 159 1 271 1 376 1 8 1 204 4 106 2 90 4 111 8 205 9 
168 6 223 1 358 7 293 3 80 1 116 3 144 4 106 1 325 3 350 3 286 1 354 2 205 3 
168 4 358 18 71 1 339 2 261 1 116 3 144 8 73 2 0 4 286 3 243 1 220 1 366 2 312 1 289 1 370 1 223 1 293 1 248 1 77 4 80 1 159 1 271 1 376 1 8 1 204 4 350 1 325 1 106 2 90 4 354 1 111 8 205 10 
168 3 223 1 358 8 293 1 77 2 80 1 339 1 261 1 116 2 144 4 204 2 106 1 325 1 350 1 90 2 0 2 286 1 205 4 111 4 354 1 
28 1 168 2 223 1 358 6 80 1 261 1 116 2 144 3 325 1 350 1 106 1 286 1 354 1 205 3 
366 1 370 1 168 2 77 1 358 4 293 1 116 1 144 2 204 1 73 1 106 1 90 1 0 1 286 1 150 1 111 2 205 2 
366 1 370 1 168 2 358 7 293 1 159 2 116 1 271 1 144 4 8 1 73 1 106 1 286 1 65 1 205 3 
168 9 358 23 339 2 261 1 116 5 144 12 18 1 48 1 73 2 0 2 286 3 366 2 370 2 223 1 293 4 77 2 80 1 159 2 271 2 203 1 204 2 350 2 325 2 106 3 90 2 65 1 354 1 205 11 111 4 
144 1 358 1 159 1 
358 1 205 1 271 1 
366 1 370 1 168 3 77 1 358 6 293 1 116 2 144 3 204 1 73 1 106 1 0 1 90 1 286 1 150 1 111 2 288 1 205 3 
168 2 358 12 71 1 116 1 144 6 73 2 0 1 286 2 220 1 366 2 312 1 289 1 370 2 293 1 77 1 248 1 159 1 271 1 8 1 376 1 204 1 106 2 90 1 111 2 205 6 
168 2 358 6 293 1 80 1 116 1 144 3 106 1 325 1 350 1 286 1 205 3 
168 2 223 1 293 1 358 3 77 1 339 1 116 1 144 2 18 1 204 1 350 1 325 1 90 1 0 1 205 1 354 1 111 2 
168 5 77 1 293 2 358 10 80 1 186 1 116 3 144 5 204 1 325 2 350 2 106 2 0 1 90 1 286 2 111 2 220 1 205 5 
366 1 168 1 77 1 358 2 293 1 204 1 90 1 0 1 286 1 220 1 111 2 205 2 
366 1 370 1 168 2 77 1 358 4 293 1 116 1 144 2 204 1 73 1 106 1 90 1 0 1 286 1 220 1 111 2 205 2 
168 2 358 3 77 3 293 1 339 1 116 1 144 2 18 1 204 3 325 1 350 1 90 3 0 3 243 1 220 1 111 6 205 1 
168 12 358 34 339 2 261 1 116 7 144 18 18 1 73 3 0 5 286 5 243 1 150 1 220 1 366 3 370 3 223 1 77 5 293 5 80 2 159 4 271 3 84 1 8 1 202 1 10 1 204 5 350 3 325 3 106 5 90 5 65 1 354 1 111 10 205 16 
32 1 74 1 215 1 212 1 336 1 218 1 197 1 
282 1 212 1 336 1 160 1 197 1 32 1 297 1 74 1 23 1 215 1 218 1 37 1 
367 1 61 1 28 1 46 1 194 1 120 1 290 1 318 1 4 1 196 1 51 1 
120 1 290 1 318 1 4 1 196 1 212 2 6 1 197 1 360 1 346 1 61 1 46 1 74 1 99 1 25 1 215 2 51 1 277 1 
207 1 184 1 212 2 360 1 263 1 46 1 74 1 99 2 25 1 215 2 51 1 178 1 246 1 120 1 318 2 290 3 196 1 6 2 125 1 197 2 346 1 61 1 277 1 
207 1 184 1 212 2 360 1 263 1 46 2 74 1 99 2 215 2 51 2 178 1 246 1 120 1 318 2 290 3 196 1 6 2 125 1 197 2 346 1 61 2 129 1 104 1 277 1 
207 1 263 1 43 1 46 3 241 1 99 1 51 3 151 1 120 1 290 4 318 1 4 1 196 1 31 2 30 2 122 1 157 1 125 1 374 1 60 1 61 3 128 1 104 1 
331 1 207 1 120 1 318 1 290 4 4 1 196 1 30 2 31 2 122 1 125 1 60 1 43 1 263 1 61 3 128 1 46 3 104 1 241 1 99 1 51 3 151 1 
61 1 46 1 120 1 196 1 51 1 119 1 
234 1 137 1 120 2 235 1 318 2 290 3 4 2 196 3 337 1 270 1 61 7 146 1 46 7 34 1 99 1 51 6 52 1 275 1 119 1 54 1 135 1 
330 1 144 3 46 1 99 1 0 2 190 1 286 1 51 1 58 1 290 1 196 1 6 1 197 1 346 1 61 1 204 2 164 1 350 1 106 1 299 2 111 4 354 1 205 3 168 2 15 2 358 6 212 2 360 1 116 2 261 1 17 1 173 1 74 2 25 1 215 2 311 1 120 1 318 1 223 1 77 2 80 1 270 1 89 1 325 1 134 1 90 2 277 1 
331 1 357 1 140 1 236 1 43 1 97 1 46 1 241 1 51 1 151 2 154 2 177 2 315 1 290 2 4 1 345 2 31 3 30 3 180 1 122 1 102 1 229 2 60 1 61 1 128 1 105 1 326 1 110 1 
120 1 318 1 290 2 196 2 122 1 270 1 61 2 145 1 46 2 99 1 51 2 275 1 119 1 
367 1 194 1 120 1 318 1 290 1 4 1 196 1 259 1 270 1 61 4 46 4 104 1 51 4 
120 1 318 1 290 1 196 2 113 1 337 1 272 1 263 1 61 2 146 1 46 2 188 1 99 1 51 2 
61 1 101 1 46 1 120 1 4 1 78 1 196 1 156 1 51 1 276 1 
234 1 137 1 120 1 318 1 290 1 196 1 270 1 61 2 46 2 285 1 51 2 
367 1 137 1 194 1 120 2 318 2 290 3 4 1 196 2 259 1 270 1 263 1 61 5 46 5 51 4 52 1 54 1 
367 1 137 1 194 1 120 2 318 2 290 3 4 1 196 2 142 1 259 1 270 1 263 1 61 5 46 5 51 4 52 1 
120 1 290 1 318 1 4 1 196 1 212 2 6 1 197 1 360 1 346 1 61 1 46 1 129 1 74 1 99 1 215 2 51 1 277 1 
120 1 318 1 290 1 196 2 337 1 263 1 61 1 146 1 46 1 34 1 99 1 51 1 275 1 
373 1 212 1 42 1 197 1 182 1 47 1 35 1 215 1 351 1 
291 1 373 1 108 1 
47 1 74 1 35 1 373 1 62 1 
246 1 178 1 184 1 291 1 373 1 372 1 30 2 31 2 43 1 128 1 241 1 47 2 74 1 35 2 36 1 326 1 62 2 363 1 108 1 
28 1 349 1 227 1 353 1 
349 1 208 1 147 1 227 1 353 1 237 1 230 1 
348 1 208 1 187 1 
208 3 41 2 141 1 123 1 227 1 230 1 237 3 304 1 21 1 349 1 147 1 353 1 
112 1 349 1 208 2 147 1 227 1 143 1 353 1 237 2 230 1 
101 1 314 1 208 1 230 1 237 1 304 1 162 1 103 1 147 1 276 1 353 1 
304 1 208 1 147 1 227 1 353 1 237 1 230 1 
304 1 349 1 208 1 147 1 227 2 237 1 230 1 
304 1 98 1 29 1 208 2 147 2 88 1 227 1 353 1 237 2 230 2 
12 1 112 2 13 1 280 1 208 3 227 1 230 1 237 3 304 1 162 1 349 1 147 1 353 2 
101 1 206 1 112 1 208 2 78 1 227 1 320 1 230 1 237 2 304 1 349 1 103 1 147 1 276 2 353 1 
12 1 112 2 208 4 227 1 143 1 230 2 237 4 304 1 162 1 349 1 147 2 322 1 353 2 
304 1 349 1 208 1 147 1 227 1 353 1 237 1 230 1 
12 1 112 2 208 4 41 1 292 1 141 1 227 2 237 4 230 1 162 1 21 1 349 2 147 1 353 3 
214 1 304 1 239 1 112 1 175 1 349 1 208 2 147 1 227 1 353 1 237 2 230 1 
356 1 208 3 41 2 141 2 227 1 230 1 237 3 304 1 21 1 349 1 147 1 353 1 
305 1 265 1 20 2 353 2 
304 1 208 1 147 1 232 1 237 1 230 1 
304 1 112 1 349 1 280 1 208 2 147 1 227 1 353 1 237 2 230 1 
377 1 
304 1 349 1 208 1 147 1 227 1 353 1 237 1 230 1 
112 1 280 1 208 3 41 1 227 1 230 1 237 3 304 1 349 1 147 1 353 1 
12 1 162 1 292 1 353 1 
227 1 353 1 

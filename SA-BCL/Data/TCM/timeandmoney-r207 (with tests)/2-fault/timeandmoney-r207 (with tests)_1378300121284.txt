#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 369 108 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 369 3 63 140 356 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 369 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 369 3 63 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 369 3 63 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 369 3 63 140 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 369 3 63 140 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator; | ASSIGN | 5473 | = null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 8735 | || -> &&
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
76 2 266 1 267 1 33 2 185 6 186 9 56 5 289 1 288 2 272 1 318 1 338 1 9 3 10 1 187 2 322 1 138 1 254 4 256 9 117 1 279 1 41 2 373 2 21 1 24 1 234 1 260 1 236 2 
76 2 266 1 267 1 33 2 185 6 186 9 56 5 289 1 288 2 272 1 318 1 338 1 9 3 10 1 187 2 322 1 138 1 254 4 256 9 117 1 279 1 41 2 373 2 21 1 24 1 234 1 260 1 236 2 
76 2 266 1 267 1 33 2 185 7 186 10 56 6 289 1 288 2 272 1 318 1 338 1 9 4 10 1 187 2 322 1 138 1 254 5 256 10 117 1 279 1 41 2 373 2 21 1 24 1 234 1 260 1 236 2 
76 2 266 1 267 1 33 1 185 4 186 7 56 4 289 1 288 2 272 1 318 1 338 1 9 2 10 1 187 2 322 1 138 1 254 3 256 7 117 1 279 1 41 2 373 2 24 1 234 1 260 1 236 2 
76 1 256 4 266 1 267 1 33 2 41 1 185 3 186 4 373 1 21 1 56 3 9 1 10 1 236 1 187 1 322 1 138 1 254 2 
76 1 256 2 267 1 41 1 186 2 373 1 56 1 288 1 272 1 234 1 236 1 253 1 322 1 138 1 14 1 102 1 
76 2 256 3 267 1 185 1 186 3 56 2 288 1 24 1 9 1 236 2 322 1 138 1 254 1 
76 2 266 1 267 1 33 2 185 7 186 9 56 5 288 1 163 1 338 1 9 3 10 1 187 1 322 1 254 4 138 1 256 9 41 1 373 1 21 1 24 1 260 1 236 2 263 1 
76 2 266 1 267 1 33 2 185 7 186 9 56 5 288 1 163 1 338 1 9 3 10 1 187 1 322 1 254 4 138 1 256 9 41 1 373 1 21 1 24 1 260 1 236 2 263 1 
319 1 277 1 190 1 
104 1 358 2 190 1 
316 2 178 2 295 2 83 2 199 1 353 2 202 1 174 2 
50 1 178 2 129 1 199 1 198 1 202 1 286 1 269 1 160 2 316 3 83 2 317 1 290 1 250 2 364 2 11 1 275 1 188 1 228 1 191 2 15 1 366 1 114 1 88 1 295 2 367 1 91 1 141 2 212 1 372 1 174 2 122 1 353 3 148 1 151 1 73 1 238 1 
316 1 178 1 295 1 83 1 23 1 30 1 199 1 353 1 172 1 174 1 
30 1 310 1 31 1 277 1 174 1 36 1 316 1 136 1 353 1 47 1 189 1 74 1 190 1 168 1 
295 1 178 1 30 1 310 1 31 1 277 1 174 1 36 1 316 1 83 1 353 1 47 2 74 2 189 1 190 1 
16 1 47 1 60 1 74 1 79 1 
22 1 335 1 277 1 47 2 60 1 74 2 79 1 190 1 
47 1 60 1 74 1 
295 1 178 1 30 1 199 1 347 1 172 1 79 1 174 1 316 1 83 1 23 1 353 1 47 1 74 1 
190 1 
22 1 277 1 144 1 47 2 60 1 74 2 79 1 190 1 
139 1 344 1 169 2 241 1 277 1 79 2 20 1 246 2 120 1 22 1 351 1 261 1 379 2 47 5 74 5 281 1 60 2 190 1 110 1 
202 1 319 1 
295 1 178 1 202 2 174 2 316 2 83 1 353 2 127 1 111 1 
333 1 159 1 268 1 
88 1 50 1 129 1 141 1 202 1 280 1 160 1 316 1 122 1 353 1 11 1 188 1 228 1 191 1 238 1 114 1 
333 1 88 1 50 1 178 1 129 1 141 1 174 1 160 1 316 2 83 1 122 1 353 2 11 1 209 1 188 1 228 1 229 1 191 1 238 1 114 1 
178 4 295 1 202 1 174 5 42 1 247 1 316 5 83 4 353 5 377 1 209 1 168 1 229 2 111 1 
316 2 178 2 83 2 23 1 30 1 353 2 336 1 174 2 
295 1 316 3 178 3 83 3 353 3 202 1 174 3 229 1 
316 1 178 1 83 1 23 1 30 1 353 1 174 1 
316 1 178 1 295 1 83 1 30 1 353 1 174 1 127 1 111 1 
50 1 178 3 129 1 198 1 30 1 310 1 199 1 31 1 202 1 286 1 269 1 34 1 5 1 36 1 160 1 316 4 83 3 250 2 364 1 11 1 188 1 209 1 189 1 228 1 111 1 229 1 191 1 366 1 114 1 88 1 295 2 367 1 91 1 141 1 212 1 372 1 174 3 122 1 353 4 148 1 151 1 47 1 74 1 238 1 
316 2 178 1 83 1 353 2 202 1 174 2 168 1 229 1 247 1 
295 1 178 3 310 1 30 1 31 1 34 1 174 3 36 1 316 3 83 3 353 3 47 1 74 1 209 1 189 1 190 1 111 1 229 2 112 1 
295 1 178 2 333 1 159 1 174 2 316 2 83 2 353 2 229 1 111 1 
50 1 88 1 129 1 141 1 202 1 160 1 316 1 122 1 353 1 11 1 188 1 228 1 191 1 238 1 114 1 
50 1 88 1 28 1 141 1 202 1 160 1 316 1 122 1 353 1 147 1 11 1 228 1 191 1 238 1 114 1 
333 2 265 1 159 2 286 1 268 2 107 1 134 1 290 2 250 2 364 4 208 1 321 1 343 1 192 1 366 1 367 1 91 1 93 1 18 1 372 2 352 1 303 1 148 1 151 1 
316 1 178 1 83 1 30 1 353 1 336 1 189 1 174 1 
146 1 306 1 
146 1 306 1 
334 1 210 1 
334 1 210 1 
334 1 210 1 
146 1 306 1 270 1 
146 1 306 1 270 1 
146 1 376 1 306 1 
334 1 146 2 304 1 306 2 210 1 294 1 
146 1 306 1 270 1 
146 1 306 1 99 1 
146 1 306 1 99 1 
146 1 306 1 99 1 
178 2 282 1 202 1 219 1 7 1 315 1 316 2 83 2 273 1 362 1 363 1 166 1 371 1 174 2 146 1 329 1 376 1 353 2 306 1 47 1 217 1 332 1 197 1 74 1 
284 1 348 1 204 1 371 2 146 2 273 3 44 2 304 1 306 2 47 2 217 1 197 2 166 2 332 2 74 2 190 1 156 1 101 1 128 1 
187 1 41 1 373 1 
41 1 373 1 14 1 
181 1 130 1 98 1 187 2 373 3 14 1 
130 1 330 1 98 1 187 1 373 2 14 1 
130 2 187 1 98 1 373 2 14 1 
282 1 104 1 265 1 241 1 77 2 311 1 358 3 131 1 79 4 246 1 134 1 362 1 222 2 60 1 190 2 192 1 344 2 169 1 65 1 277 1 325 1 18 1 327 2 22 1 351 3 329 1 72 1 215 1 379 1 47 5 74 5 154 1 
104 3 265 3 241 1 311 2 106 1 358 9 79 7 133 5 246 2 134 3 38 1 362 4 222 6 85 1 60 6 190 5 192 3 16 5 344 6 169 2 142 1 277 1 325 1 18 3 327 6 259 1 22 1 351 8 72 3 261 1 379 2 47 9 74 9 262 1 154 2 
104 2 265 1 311 1 77 1 358 4 79 2 246 1 134 1 362 1 222 2 190 3 192 1 344 2 169 1 65 1 277 1 18 1 327 2 351 3 72 1 215 1 379 1 261 1 47 3 74 3 154 1 
104 3 265 2 311 1 77 2 358 7 79 3 246 1 134 2 38 1 362 2 222 4 190 4 192 2 344 4 169 1 142 1 65 1 277 1 18 2 327 4 259 1 351 5 72 2 215 1 379 1 261 1 47 4 74 4 154 1 
88 1 319 1 13 1 
88 1 354 1 
337 1 
88 1 50 1 114 1 
88 1 12 1 
88 1 114 1 
88 3 50 1 296 1 357 1 13 2 114 1 
265 1 242 1 18 1 372 3 244 1 290 4 223 1 364 7 125 1 331 1 46 1 196 1 208 3 227 1 343 2 49 2 380 1 
265 1 242 1 18 1 372 3 244 1 290 4 223 1 364 7 125 1 331 1 46 1 196 1 208 3 227 1 343 2 49 2 380 1 
265 1 242 1 18 1 372 3 244 1 290 4 223 1 364 7 125 1 331 1 46 1 196 1 208 3 227 1 39 1 343 2 49 2 380 1 
265 6 201 1 182 1 242 2 286 1 244 2 4 1 134 3 250 2 290 19 223 5 364 37 227 5 208 17 343 8 366 1 192 3 193 1 91 1 97 1 17 1 18 6 372 18 233 3 145 1 72 3 148 1 175 1 125 1 331 2 46 9 196 1 380 1 49 2 157 4 
265 1 201 1 91 2 242 1 286 2 205 1 18 1 372 4 244 1 213 1 290 5 250 4 148 2 223 1 364 9 331 1 46 1 196 1 227 1 208 4 343 3 380 1 49 2 366 2 
76 1 181 1 267 1 312 1 78 1 185 1 186 2 245 1 56 1 160 1 288 1 251 1 187 1 228 1 322 1 191 1 138 1 14 1 230 1 255 1 256 2 40 1 141 1 323 1 94 1 41 1 68 1 373 2 236 1 238 1 
76 1 181 1 267 1 312 1 78 1 185 2 186 3 245 1 56 1 160 1 288 1 37 1 251 1 187 1 228 1 322 1 191 1 14 1 230 1 255 1 256 3 141 1 323 1 41 1 68 1 350 1 373 2 236 1 126 1 238 1 
181 1 267 1 78 1 185 2 186 2 245 1 56 1 160 1 288 1 37 1 251 1 187 1 228 1 322 1 191 1 14 1 230 1 255 1 256 2 141 1 68 1 41 1 373 2 126 1 238 1 
88 1 255 2 76 1 256 1 141 1 232 1 95 1 53 1 68 2 350 1 186 1 245 2 160 1 288 2 195 1 11 1 236 1 225 1 228 1 191 1 238 1 114 1 113 1 
76 1 181 1 312 1 78 1 186 1 245 1 160 1 288 1 251 1 187 1 228 1 191 1 138 1 14 1 230 1 255 1 256 1 141 1 323 1 94 1 41 1 68 1 373 2 236 1 126 1 238 1 
137 1 
241 1 105 1 53 1 206 1 246 1 160 2 57 1 108 1 11 2 252 1 60 2 168 1 114 1 344 2 169 1 299 1 174 1 214 2 22 1 70 1 351 2 353 1 74 3 180 1 30 1 310 1 31 1 183 1 311 1 36 1 271 1 316 1 135 1 136 1 189 1 228 1 191 2 88 1 89 1 141 2 92 1 369 1 195 1 379 1 47 3 238 1 
30 1 310 1 31 1 206 1 36 1 271 1 316 1 57 1 135 1 136 1 189 1 60 2 168 1 90 1 92 1 144 1 174 1 214 2 22 1 353 1 47 3 74 3 
30 1 310 1 31 1 206 1 36 1 271 1 316 1 57 1 135 1 136 1 60 1 189 1 190 1 168 1 115 1 92 1 277 1 144 1 174 1 214 3 22 1 353 1 47 3 74 3 
30 1 310 1 31 1 206 1 36 1 271 1 316 1 57 1 135 1 136 1 340 1 189 1 60 2 190 1 168 1 90 1 115 1 92 1 277 1 144 1 174 1 214 3 22 1 353 1 47 3 74 3 
241 1 30 1 310 1 31 1 52 1 105 1 3 1 206 1 246 1 36 1 271 1 316 1 57 1 135 1 136 1 252 1 340 2 60 3 189 1 168 1 63 1 140 1 344 1 169 1 90 2 92 1 369 1 144 1 299 1 174 1 214 2 70 1 22 1 351 1 353 1 356 1 379 1 47 3 74 3 
241 1 30 1 310 1 31 1 105 1 206 1 246 1 36 1 271 1 316 1 57 1 135 1 136 1 252 1 189 1 168 1 344 1 169 1 92 1 369 1 299 1 174 1 214 2 70 1 351 1 353 1 379 1 47 2 74 2 
30 1 310 1 241 1 31 1 52 1 105 1 3 1 206 1 36 1 246 1 271 1 316 1 57 1 135 1 136 1 252 1 189 1 168 1 63 1 344 1 169 1 92 1 369 1 299 1 174 1 214 2 70 1 351 1 353 1 379 1 47 2 74 2 
30 1 310 1 241 1 31 1 52 1 105 1 3 1 206 1 36 1 246 1 271 1 316 1 57 1 135 1 136 1 252 1 189 1 168 1 63 1 344 1 169 1 92 1 369 1 299 1 174 1 214 2 70 1 351 1 353 1 379 1 47 2 74 2 
30 1 310 1 241 1 31 1 358 2 3 1 206 1 36 1 246 1 271 1 316 1 57 1 161 1 135 1 360 2 136 1 252 2 340 2 60 4 189 1 190 1 168 1 344 1 115 2 90 2 169 1 92 1 277 1 369 1 299 2 173 2 174 1 214 4 22 2 351 1 121 1 353 1 379 1 47 4 237 1 74 4 
241 1 30 1 310 1 31 1 52 1 105 1 3 1 206 1 246 1 36 1 271 1 316 1 57 1 135 1 136 1 252 1 340 1 189 1 60 1 168 1 63 1 140 1 344 1 169 1 90 1 115 1 92 1 369 1 299 1 174 1 214 3 70 1 351 1 353 1 379 1 47 2 74 2 
241 1 30 1 310 1 31 1 52 1 105 1 3 1 206 1 246 1 36 1 271 1 316 1 57 1 135 1 136 1 252 1 340 1 189 1 60 1 168 1 63 1 140 1 344 1 169 1 90 1 115 1 92 1 369 1 299 1 174 1 214 3 70 1 351 1 353 1 379 1 47 2 74 2 
241 1 200 1 206 1 246 1 57 1 252 2 340 2 60 4 168 1 344 1 169 1 115 2 299 2 173 2 174 1 214 4 22 2 351 1 121 1 353 1 74 4 310 1 30 1 31 1 358 2 36 1 271 1 316 1 135 1 360 2 136 1 189 1 190 1 90 2 92 1 277 1 369 1 379 1 47 4 
333 1 159 1 265 1 202 2 286 1 268 1 319 1 250 2 290 3 223 1 364 6 227 1 208 2 321 1 343 2 366 1 367 1 91 1 18 1 372 3 148 1 331 1 151 1 196 1 380 1 49 1 
333 11 265 2 159 4 202 1 182 1 286 2 268 11 6 1 134 2 250 4 290 8 364 14 84 1 208 2 343 1 15 1 366 2 192 1 367 2 91 2 194 1 97 1 212 1 18 1 372 6 233 3 72 2 148 2 46 1 305 1 151 1 155 1 157 3 
50 1 178 1 159 1 307 1 129 1 202 1 286 1 80 1 160 1 316 2 83 1 250 2 290 1 364 2 11 1 188 1 209 1 228 1 191 1 229 1 366 1 15 1 114 1 88 1 367 1 141 1 91 1 212 1 372 1 174 1 280 1 122 1 353 2 148 1 151 1 152 1 155 1 238 1 
50 2 333 7 159 7 198 2 202 2 286 3 1 2 160 3 250 6 290 10 11 1 165 1 208 8 343 4 209 1 15 1 114 2 171 2 212 1 18 3 174 1 122 2 72 2 353 3 126 1 178 1 265 3 129 2 268 7 132 2 316 3 134 2 83 1 223 1 364 20 227 1 188 2 228 2 191 3 229 1 366 3 192 2 88 2 367 3 141 3 91 3 372 10 375 2 148 3 45 1 331 1 46 4 151 3 196 1 49 1 380 1 48 1 155 1 238 2 
178 1 158 1 286 2 53 1 160 7 316 1 83 1 250 4 290 1 364 2 11 2 275 2 321 1 228 2 229 1 191 8 366 2 15 1 114 2 87 1 88 3 40 1 367 2 141 8 91 2 143 1 212 1 372 1 174 1 374 1 302 1 195 1 353 1 148 2 151 2 126 1 238 2 103 1 27 1 
333 1 178 1 159 1 265 1 286 1 268 1 316 1 134 1 83 1 250 2 290 1 364 3 208 1 343 1 111 1 366 1 192 1 295 1 367 1 91 1 298 1 18 1 372 2 174 1 72 1 353 1 148 1 151 1 155 1 
333 1 159 1 265 1 367 1 91 1 286 1 268 1 134 1 352 1 250 2 148 1 290 2 364 2 46 1 151 1 208 1 321 1 366 1 
333 1 159 1 367 1 91 1 286 1 268 1 18 1 372 2 107 1 250 2 148 1 364 2 151 1 208 1 343 1 321 1 366 1 192 1 
333 2 265 1 159 2 286 1 268 2 134 1 290 2 250 2 364 4 208 2 321 1 343 1 366 1 192 1 367 1 91 1 18 1 372 2 72 1 148 1 46 1 151 1 
333 1 159 1 265 1 367 1 91 1 143 1 286 1 268 1 134 1 352 1 250 2 148 1 290 2 364 2 46 1 151 1 208 1 366 1 
333 1 159 1 367 1 91 1 143 1 286 1 268 1 18 1 372 2 107 1 250 2 148 1 364 2 151 1 208 1 343 1 366 1 192 1 
333 2 265 1 159 2 286 1 268 2 134 1 290 2 250 2 364 4 208 2 343 1 366 1 192 1 367 1 91 1 143 1 18 1 372 2 72 1 148 1 46 1 151 1 
333 2 265 1 159 2 286 1 268 2 134 1 290 2 250 2 364 4 208 2 343 1 366 1 192 1 367 1 91 1 18 1 372 2 72 1 148 1 46 1 151 1 
50 1 129 1 198 1 202 1 286 1 160 1 316 1 290 1 250 2 364 2 11 1 188 1 228 1 191 1 15 1 366 1 114 1 88 1 367 1 141 1 91 1 212 1 372 1 122 1 353 1 148 1 151 1 238 1 
50 1 28 1 202 1 286 1 160 1 316 1 290 1 250 2 364 2 11 1 228 1 191 1 15 1 366 1 114 1 88 1 367 1 141 1 91 1 212 1 372 1 122 1 147 1 353 1 148 1 177 1 151 1 238 1 
333 2 265 1 159 2 286 1 268 2 134 1 290 2 250 2 364 4 208 2 343 1 366 1 192 1 367 1 91 1 18 1 372 2 72 1 148 1 46 1 151 1 155 1 
333 2 50 1 159 2 265 1 129 1 198 1 286 1 268 2 132 1 160 1 134 1 316 1 290 2 250 2 364 4 208 2 343 1 188 1 228 1 191 1 192 1 366 1 114 1 88 1 40 1 367 1 141 1 91 1 18 1 372 2 122 1 72 1 353 1 148 1 46 1 151 1 238 1 
178 1 333 1 265 1 159 1 286 1 268 1 316 1 134 1 83 1 250 2 290 2 364 3 208 1 111 1 192 1 366 1 295 1 367 1 91 1 18 1 372 1 174 1 72 1 353 1 148 1 46 1 151 1 155 1 264 1 
265 3 182 1 286 2 35 1 8 2 134 3 250 4 290 9 364 19 226 1 86 1 208 6 343 3 366 2 192 3 64 1 346 1 91 2 97 1 18 3 213 1 372 10 233 1 301 2 72 3 148 2 355 1 124 1 46 3 157 2 
265 3 201 2 286 3 243 1 35 1 8 1 134 3 58 1 250 6 290 14 364 26 226 1 341 1 208 4 86 2 343 2 366 3 192 2 64 2 91 3 278 1 97 2 18 2 372 12 213 1 233 2 301 4 72 3 148 3 355 1 46 2 150 1 153 1 157 2 
201 1 286 3 203 1 243 1 8 1 58 1 290 20 250 6 208 8 341 1 343 4 64 2 346 1 18 5 213 1 301 4 72 4 355 1 265 5 182 1 35 1 134 4 364 41 223 1 226 1 86 1 227 1 192 4 366 3 91 3 278 1 97 3 372 21 233 3 148 3 46 4 150 1 331 1 196 1 153 1 380 1 49 1 157 4 
265 5 201 2 182 1 203 1 286 4 243 1 35 1 8 1 134 4 58 1 250 8 290 20 223 1 364 38 226 1 227 1 341 1 86 1 208 7 343 4 366 4 192 3 64 2 346 1 91 4 278 1 97 3 18 4 213 1 372 18 233 3 301 4 72 4 148 4 355 1 331 1 150 1 46 3 196 1 153 1 49 1 380 1 157 4 
265 8 201 1 182 2 286 2 243 1 35 1 8 1 134 7 58 1 250 4 290 27 223 1 364 52 226 1 227 1 341 1 86 1 208 14 343 7 366 2 192 7 64 1 91 2 194 2 278 1 97 2 18 8 213 1 372 25 233 4 301 4 72 7 148 2 355 1 331 1 150 1 46 7 196 1 153 1 49 1 380 1 157 4 
146 1 51 1 348 1 304 1 306 1 371 1 332 1 166 1 197 1 156 1 
376 1 315 1 
146 1 285 1 306 1 371 1 332 1 166 1 197 1 43 1 293 1 
320 1 270 1 
276 1 99 1 294 1 
348 1 204 1 371 1 146 1 273 2 44 1 304 1 306 1 47 1 217 1 74 1 197 1 166 1 332 1 190 1 156 1 101 1 128 1 
348 1 204 1 371 1 146 1 273 2 44 1 304 1 306 1 47 1 217 1 74 1 197 1 166 1 332 1 190 1 156 1 101 1 128 1 
348 1 204 1 371 1 146 1 273 2 44 1 304 1 306 1 47 1 217 1 74 1 197 1 166 1 332 1 190 1 156 1 101 1 128 1 
320 1 270 1 294 1 
320 1 270 1 294 1 
276 1 99 1 
276 1 99 1 294 1 
219 1 363 1 
282 1 178 2 202 1 219 1 79 1 314 1 7 1 315 1 316 2 83 2 273 1 362 1 363 1 166 1 371 1 174 2 146 1 329 1 376 1 353 2 44 1 306 1 47 1 74 1 332 1 197 1 128 1 
240 1 286 1 207 1 160 2 316 2 250 2 290 1 339 1 364 2 275 2 228 1 191 2 366 1 15 1 114 1 88 1 87 1 367 1 116 1 141 2 91 1 212 1 372 1 174 2 374 1 353 2 148 1 149 1 151 1 155 1 238 1 
255 1 40 1 141 2 181 1 323 1 78 1 221 1 41 1 373 2 160 2 123 1 274 1 187 1 228 1 14 1 126 1 191 2 238 1 230 1 
255 1 141 1 181 1 323 1 32 1 78 1 221 1 41 1 373 2 160 1 187 1 228 1 14 1 126 1 191 1 238 1 230 1 
88 1 255 1 179 1 141 1 232 1 53 1 160 1 195 1 123 1 11 1 228 1 191 1 238 1 114 1 
255 1 141 1 181 1 323 1 78 1 221 1 41 1 373 2 160 1 123 1 274 1 187 1 228 1 14 1 126 1 191 1 238 1 230 1 
176 1 
120 1 344 1 351 1 319 1 277 1 190 1 110 1 
70 1 344 1 351 1 169 1 241 1 379 1 105 1 246 1 
50 3 104 6 241 4 2 2 1 2 246 4 160 3 162 1 11 1 12 2 13 2 60 5 110 1 114 3 344 8 345 2 169 4 296 1 297 1 349 2 18 2 119 2 120 1 22 3 71 2 351 9 72 2 354 3 74 5 180 1 265 2 310 2 311 2 358 12 81 1 313 2 359 2 134 2 361 2 222 6 228 3 190 8 191 3 192 2 88 10 40 1 141 3 277 2 96 1 326 1 327 6 379 4 47 5 238 4 
180 1 104 3 265 2 241 2 311 1 358 6 243 1 359 1 246 2 134 2 248 1 222 5 341 1 60 1 190 5 192 2 344 5 345 2 169 2 277 2 278 1 97 1 67 1 18 2 327 5 233 1 22 1 351 8 72 2 150 1 379 2 47 1 153 1 74 1 157 1 
178 1 265 2 30 1 241 1 199 1 52 1 359 1 246 1 316 1 83 1 223 1 227 1 295 1 344 2 345 2 193 1 169 1 347 1 18 1 172 1 174 1 23 1 351 2 353 1 331 1 379 1 47 1 74 1 
344 1 169 1 241 1 277 1 246 1 120 1 351 1 379 1 110 1 190 1 
265 2 344 5 104 5 345 2 1 1 358 10 18 2 327 5 359 1 134 2 351 5 72 2 222 5 190 5 192 2 
22 1 277 1 47 1 74 1 60 1 190 1 
180 2 241 1 183 1 311 2 53 1 246 2 160 4 162 1 11 2 60 4 228 1 191 4 114 1 88 1 344 2 89 1 169 2 141 4 326 2 19 1 22 2 351 2 195 1 235 1 261 1 379 2 47 3 74 3 238 1 
178 2 50 1 129 1 199 1 198 1 202 1 286 1 269 1 160 1 316 3 83 2 250 2 364 1 11 1 188 1 228 1 191 1 366 1 114 1 295 2 88 1 367 1 141 1 91 1 212 1 372 1 174 2 122 1 353 3 148 1 151 1 238 1 
104 2 344 2 180 1 169 1 241 1 277 2 311 1 358 4 327 2 246 1 351 1 222 2 379 1 49 1 190 4 
118 1 332 1 166 1 
118 1 332 1 166 1 
219 1 348 1 258 1 332 1 166 1 
118 1 332 1 166 1 
29 1 332 1 166 1 
29 1 332 1 166 1 
29 1 332 1 166 1 
332 1 166 1 
146 1 306 1 
265 1 91 2 201 1 286 2 18 1 372 4 290 4 250 4 148 2 364 8 223 1 331 1 46 1 196 1 208 3 227 1 343 2 49 1 380 1 366 2 
265 1 18 1 372 3 319 1 290 3 223 1 364 6 331 1 196 1 227 1 208 2 343 2 49 1 380 1 
265 1 91 1 286 1 18 1 372 2 328 1 134 1 72 1 250 2 148 1 290 2 364 4 46 1 208 2 343 1 192 1 366 1 
265 1 182 1 97 1 18 1 372 4 233 1 134 1 72 1 290 3 364 7 46 1 208 2 343 1 192 1 157 2 
265 3 201 2 182 1 286 2 220 1 134 2 290 11 250 4 223 2 364 23 84 1 227 2 208 9 343 5 192 2 366 2 91 2 194 1 18 3 372 12 233 2 72 2 148 2 331 1 46 4 196 1 49 1 380 1 157 2 
364 1 372 1 157 1 
290 1 364 1 233 1 
265 1 91 1 286 1 1 1 18 1 372 3 328 1 134 1 72 1 148 1 250 2 290 3 364 6 46 1 208 3 343 2 366 1 192 1 
265 2 286 1 243 1 134 2 250 2 290 6 364 12 208 2 341 1 343 1 366 1 192 2 91 1 278 1 97 1 18 2 372 6 213 1 233 1 72 2 148 1 46 1 150 1 153 1 157 1 
265 1 18 1 372 3 290 3 364 6 223 1 331 1 46 1 227 1 208 2 343 1 
201 1 91 1 220 1 286 1 372 2 290 1 250 2 148 1 223 1 364 3 46 1 196 1 208 2 227 1 343 1 380 1 366 1 
265 2 193 1 91 1 286 1 18 2 213 1 372 5 148 1 250 2 290 5 223 2 364 10 46 2 331 1 227 2 208 5 343 3 366 1 
265 1 91 1 286 1 213 1 134 1 250 2 148 1 290 2 364 2 46 1 208 1 366 1 
265 1 91 1 286 1 18 1 372 2 213 1 134 1 72 1 250 2 148 1 290 2 364 4 46 1 208 2 343 1 192 1 366 1 
201 1 346 1 91 3 220 1 286 3 372 2 213 1 250 6 148 3 290 1 364 3 223 1 46 1 227 1 208 2 343 1 366 3 
265 4 201 1 182 1 286 4 4 1 134 3 250 8 290 13 223 2 364 27 227 2 208 10 343 5 366 4 192 3 346 1 91 4 97 1 18 4 372 14 213 1 233 3 145 1 328 1 72 3 175 1 148 4 331 1 46 5 196 1 49 1 380 1 157 4 
265 1 286 1 250 2 290 4 364 8 223 1 227 1 208 2 343 2 366 1 91 1 97 1 18 1 372 4 213 1 233 1 148 1 150 1 331 1 196 1 49 1 380 1 157 1 
265 2 182 1 286 2 134 1 250 4 290 6 223 1 364 11 227 1 208 3 343 2 366 2 91 2 97 1 18 1 372 5 213 1 233 1 328 1 72 1 148 2 331 1 150 1 46 1 196 1 49 1 380 1 157 2 
265 3 201 1 286 3 243 1 134 2 250 6 290 9 223 1 364 19 227 1 208 4 341 1 343 3 366 3 192 2 91 3 278 1 97 1 18 3 372 10 213 1 233 1 328 1 72 2 148 3 331 1 46 1 150 1 196 1 153 1 49 1 380 1 157 1 
265 3 201 1 286 3 243 1 134 2 250 6 290 10 223 1 364 17 227 1 208 5 341 1 343 3 366 3 192 1 91 3 278 1 97 1 18 2 372 7 213 1 233 1 328 1 72 2 148 3 331 1 46 2 150 1 196 1 153 1 49 1 380 1 157 1 
265 1 286 1 250 2 290 4 364 8 223 1 227 1 208 2 343 2 366 1 91 1 97 1 18 1 372 4 213 1 233 1 148 1 150 1 331 1 196 1 49 1 380 1 157 1 
265 2 286 1 243 1 134 2 250 2 290 6 364 12 208 2 341 1 343 1 366 1 192 2 91 1 278 1 97 1 18 2 372 6 213 1 233 1 72 2 148 1 46 1 150 1 153 1 157 1 
265 3 201 2 286 4 243 1 134 2 250 8 290 10 223 1 364 18 227 1 341 1 208 5 343 3 366 4 192 1 91 4 278 1 97 1 18 2 372 8 213 1 233 1 328 1 72 2 148 4 331 1 46 2 150 1 196 1 153 1 49 1 380 1 157 1 
265 3 201 2 286 4 243 1 134 3 250 8 290 9 364 16 341 1 208 6 343 3 366 4 192 2 91 4 346 1 278 1 97 1 18 2 372 7 213 1 233 1 72 3 148 4 46 3 150 1 153 1 157 1 
265 1 18 1 372 4 290 3 364 7 223 3 46 3 331 1 196 2 227 3 208 6 343 3 380 1 
265 3 201 2 286 4 243 1 134 2 250 8 290 10 223 1 364 18 227 1 341 1 208 4 343 3 366 4 192 1 91 4 346 1 278 1 97 1 18 2 372 8 213 1 233 1 72 2 148 4 331 1 46 1 150 1 196 1 153 1 49 1 380 1 157 1 
316 1 353 1 202 1 174 1 168 1 75 1 247 1 
202 1 174 1 247 1 300 1 316 1 353 1 164 1 100 1 292 1 168 1 75 1 211 1 
88 1 195 1 141 1 319 1 11 1 53 1 228 1 191 1 238 1 114 1 160 1 
88 1 50 1 178 1 129 1 141 1 202 1 174 1 160 1 316 2 83 1 122 1 353 2 11 1 228 1 229 1 191 1 238 1 114 1 
88 3 50 2 178 2 129 1 30 1 141 1 202 1 2 1 326 1 174 2 36 1 160 1 316 2 83 1 122 1 353 2 12 1 189 1 228 1 229 1 191 1 238 1 114 2 
218 1 178 2 50 2 28 1 30 1 202 1 2 1 36 1 160 2 316 2 83 1 12 1 189 1 228 1 191 2 229 1 114 2 88 3 141 2 326 1 174 2 122 1 353 2 238 1 
218 1 50 1 310 1 0 1 2 1 160 3 11 1 12 1 13 1 60 1 228 1 190 1 191 3 114 1 88 4 141 3 277 1 326 1 370 1 354 1 47 2 74 2 238 1 
218 1 50 1 88 4 310 1 141 3 277 1 2 1 326 1 349 1 160 3 354 1 11 1 12 1 47 2 13 1 74 2 60 1 190 1 228 1 191 3 238 1 114 1 
141 1 228 1 191 1 238 1 160 1 103 1 
87 1 50 1 88 3 158 1 40 1 141 7 296 1 287 1 160 6 302 1 378 1 11 2 109 1 275 1 228 2 126 1 191 7 238 3 103 1 27 1 114 2 
50 1 333 1 159 1 198 1 202 2 286 2 160 1 250 4 290 3 208 2 343 2 114 1 18 1 174 1 122 1 353 2 178 1 265 1 129 1 268 1 132 1 316 2 83 1 223 1 364 6 227 1 188 1 228 1 191 1 229 1 366 2 88 1 40 1 367 2 141 1 91 2 372 3 375 1 148 2 149 1 331 1 151 2 196 1 380 1 49 1 155 1 238 1 
241 2 310 1 79 1 313 1 246 2 160 1 162 1 11 1 13 1 60 2 190 1 110 1 191 1 88 2 344 1 169 2 141 1 277 1 349 1 119 1 120 1 22 1 71 1 351 1 354 1 379 2 47 3 74 3 
88 2 50 1 40 1 296 1 141 2 297 1 13 1 228 1 191 2 238 2 114 1 160 2 103 1 
218 1 88 1 40 1 141 4 53 1 160 4 195 1 11 1 228 1 191 4 238 1 62 1 114 1 
50 1 88 1 141 2 324 1 326 1 160 2 59 1 45 1 378 1 109 1 228 1 191 2 238 2 114 1 
141 1 11 1 78 1 41 1 228 1 373 1 14 1 191 1 238 1 160 1 
87 1 88 1 40 1 141 2 207 1 160 2 228 1 191 2 126 1 238 1 114 1 
87 1 88 3 40 1 141 5 53 1 326 1 160 4 302 1 195 1 11 1 228 2 191 5 238 2 62 1 114 2 27 1 
87 1 88 3 40 1 141 5 257 1 53 1 326 1 160 4 195 1 11 1 228 2 191 5 238 2 62 1 114 2 27 1 
88 1 50 1 178 1 28 1 141 1 202 1 174 1 160 1 316 2 83 1 122 1 353 2 11 1 228 1 229 1 191 1 238 1 114 1 
50 1 88 1 141 1 296 1 326 1 287 1 160 1 378 1 109 1 228 1 191 1 238 2 114 1 
283 1 308 1 309 1 202 1 55 1 
283 2 309 1 308 2 310 1 30 1 31 1 202 1 277 1 79 1 34 1 69 1 55 2 36 1 25 1 224 1 47 2 189 1 74 2 190 1 
283 1 240 1 308 1 309 1 116 1 174 1 316 1 353 1 339 1 
309 1 224 1 69 1 
267 1 319 1 322 1 56 1 
256 1 76 1 267 1 236 1 186 1 322 1 56 1 
288 1 68 1 186 1 
256 3 76 1 272 2 267 1 184 1 236 1 186 3 322 1 167 1 138 1 365 1 56 1 
256 2 76 1 267 1 33 1 236 1 185 1 186 2 322 1 56 1 
256 1 76 1 10 1 236 1 187 1 41 1 186 1 373 1 254 1 138 1 56 1 
256 1 76 1 267 1 236 1 186 1 138 1 56 1 
256 1 76 1 267 2 236 1 186 1 322 1 138 1 
76 2 256 2 267 1 231 1 186 2 56 1 249 1 236 2 138 1 239 1 
76 1 256 3 267 1 185 2 186 3 56 2 338 1 9 1 260 1 236 1 322 1 138 1 254 1 
76 1 256 2 368 1 181 1 267 1 41 1 185 1 186 2 373 2 56 1 236 1 187 1 322 1 14 1 138 1 
76 2 256 4 267 1 33 1 185 2 186 4 21 1 56 2 9 1 236 2 322 1 138 1 254 1 
256 1 76 1 267 1 236 1 186 1 322 1 138 1 56 1 
256 4 76 1 267 2 184 1 54 1 185 2 186 4 56 3 272 1 9 1 236 1 167 1 322 2 254 1 
256 2 76 1 170 1 267 1 236 1 342 1 185 1 186 2 322 1 138 1 263 1 56 1 
76 1 256 3 267 1 184 2 186 3 56 1 272 2 236 1 291 1 167 1 138 1 322 1 
66 2 26 1 82 1 56 2 
256 1 76 1 216 1 236 1 186 1 138 1 
256 2 76 1 267 1 260 1 236 1 185 1 186 2 322 1 138 1 56 1 
61 1 
256 1 76 1 267 1 236 1 186 1 322 1 138 1 56 1 
256 3 76 1 272 1 267 1 260 1 236 1 185 1 186 3 322 1 138 1 56 1 
9 1 54 1 254 1 56 1 
267 1 56 1 

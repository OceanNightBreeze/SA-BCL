#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (251,279) 34 (225,238) (225,238) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (251,279) 34 (225,238) (225,238) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (251,279) 34 (225,238) (225,238) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (251,279) 34 (225,238) (225,238) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar; | CONSTANT | 5361 | 0 -> 1
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money; | CONSTANT | 1656 | 0 -> 1
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
57 1 118 1 225 1 279 1 219 1 112 1 238 1 342 1 34 1 72 1 332 1 
57 1 118 1 225 1 279 1 219 1 112 1 238 1 342 1 34 1 72 1 332 1 
57 1 118 1 225 1 279 1 219 1 112 1 238 1 342 1 34 1 72 1 332 1 
57 1 118 1 225 1 279 1 219 1 112 1 238 1 342 1 34 1 72 1 332 1 
194 2 215 1 62 1 216 1 275 3 321 1 332 1 54 1 57 4 117 1 118 1 229 2 219 4 353 1 58 1 354 1 344 3 72 1 
363 1 2 1 215 1 62 1 112 1 275 1 332 1 57 2 117 1 118 1 219 2 211 1 58 1 342 1 72 1 127 1 
194 1 215 1 251 1 112 1 275 2 332 1 57 3 117 1 118 2 219 3 353 1 344 1 72 2 
62 1 251 1 112 1 332 1 117 1 118 2 229 2 262 1 344 7 51 1 72 2 194 4 215 1 216 1 275 5 321 1 322 1 54 1 57 9 219 9 353 3 84 1 58 1 354 1 
62 1 251 1 112 1 332 1 117 1 118 2 229 2 262 1 344 7 51 1 72 2 194 4 215 1 216 1 275 5 321 1 322 1 54 1 57 9 219 9 353 3 84 1 58 1 354 1 
13 1 325 1 190 1 
325 1 331 2 80 1 
20 2 317 2 37 1 4 2 121 2 330 2 79 1 71 2 
0 2 111 1 4 3 329 1 330 2 45 1 254 1 113 2 358 1 139 2 161 1 208 1 141 1 114 1 47 2 312 1 258 1 337 1 210 1 263 2 121 2 233 1 71 2 169 1 317 2 37 1 274 1 77 1 79 1 172 1 20 3 278 1 134 1 280 1 178 1 43 1 381 1 
20 1 317 1 37 1 367 1 4 1 121 1 330 1 102 1 71 1 288 1 
317 1 87 1 367 1 356 1 4 1 63 1 205 1 20 1 67 1 325 1 352 1 190 1 375 1 223 1 
87 2 317 1 367 1 4 1 330 1 63 1 205 1 20 1 67 1 325 1 190 1 121 1 375 1 223 2 71 1 
87 1 38 1 223 1 18 1 142 1 
87 2 38 1 325 1 76 1 190 1 223 2 151 1 18 1 
87 1 38 1 223 1 
249 1 87 1 317 1 37 1 367 1 4 1 330 1 102 1 18 1 20 1 121 1 223 1 71 1 288 1 
325 1 
87 2 38 1 325 1 190 1 376 1 223 2 151 1 18 1 
87 5 365 2 38 2 355 2 128 1 348 1 255 1 151 1 18 2 218 1 259 1 163 1 96 2 32 1 325 1 190 1 222 1 223 5 70 1 
13 1 79 1 
317 2 4 2 330 1 185 1 79 2 20 2 48 1 121 1 71 1 
61 1 156 1 85 1 
111 1 4 1 45 1 254 1 77 1 79 1 172 1 139 1 312 1 47 1 20 1 278 1 263 1 374 1 233 1 178 1 
61 1 317 1 111 1 4 2 45 1 330 1 254 1 77 1 172 1 139 1 351 1 312 1 47 1 278 1 20 2 334 1 263 1 121 1 233 1 178 1 
20 3 317 3 334 1 4 3 121 3 330 3 79 1 71 1 
20 1 317 1 367 1 4 1 121 1 330 1 288 1 
20 1 317 1 367 1 48 1 4 1 121 1 330 1 185 1 71 1 
106 1 0 2 87 1 111 1 4 4 329 1 45 1 330 3 254 1 185 1 63 1 113 1 205 1 358 1 139 1 161 1 208 1 141 1 114 1 312 1 47 1 334 1 337 1 67 1 210 1 263 1 121 3 233 1 71 2 317 3 37 1 367 1 77 1 320 1 79 1 172 1 351 1 278 1 20 4 375 1 178 1 223 1 43 1 381 1 
20 2 317 2 334 1 203 1 352 1 4 2 121 1 330 1 79 1 
106 1 87 1 317 3 250 1 367 1 4 3 330 3 185 1 63 1 205 1 351 1 20 3 334 2 67 1 325 1 375 1 121 3 223 1 71 1 
61 1 317 2 4 2 330 2 185 1 20 2 334 1 121 2 85 1 71 1 
111 1 4 1 45 1 254 1 77 1 79 1 172 1 139 1 312 1 47 1 20 1 278 1 263 1 178 1 233 1 
364 1 111 1 4 1 45 1 254 1 77 1 79 1 172 1 139 1 312 1 47 1 20 1 82 1 263 1 233 1 
61 2 0 2 329 1 113 4 208 1 141 1 161 2 258 2 337 1 316 1 210 1 343 1 271 1 103 1 371 1 200 1 156 2 136 1 85 2 24 1 283 1 60 1 104 1 381 1 
20 1 317 1 367 1 4 1 121 1 330 1 205 1 26 1 
317 5 203 1 4 5 330 4 185 1 240 1 79 1 351 1 20 5 334 2 352 1 121 4 377 1 71 1 
20 2 317 2 367 1 4 2 121 2 330 2 288 1 26 1 
308 1 92 1 
308 1 92 1 
143 1 289 1 
143 1 289 1 
143 1 289 1 
308 1 235 1 92 1 
308 1 235 1 92 1 
8 1 308 1 92 1 
137 1 143 1 347 1 308 2 289 1 92 2 
308 1 235 1 92 1 
319 1 308 1 92 1 
319 1 308 1 92 1 
319 1 308 1 92 1 
137 1 108 1 87 2 159 2 99 2 184 1 308 2 92 2 55 2 209 3 95 1 164 2 153 2 325 1 242 1 40 1 223 2 247 1 11 1 
87 1 159 1 4 2 330 2 308 1 46 1 309 1 92 1 209 1 8 1 164 1 121 2 168 1 317 2 99 1 273 1 79 1 78 1 55 1 20 2 154 1 221 1 223 1 247 1 
62 1 216 1 58 1 
62 1 58 1 127 1 
231 1 216 2 62 3 305 1 268 1 127 1 
231 1 216 1 62 2 88 1 268 1 127 1 
216 1 231 2 62 2 268 1 127 1 
87 5 355 1 5 1 331 3 292 2 259 2 96 1 163 1 230 1 69 2 190 1 33 1 168 1 345 1 365 1 38 1 198 1 348 3 17 1 80 1 151 1 368 2 18 4 371 1 200 1 325 2 154 1 221 1 223 5 24 1 25 1 283 1 
87 9 355 2 204 1 5 1 331 9 292 6 311 1 142 5 259 6 163 1 96 2 261 1 190 1 168 4 345 2 365 2 38 6 237 1 198 2 348 8 217 1 17 3 80 3 151 1 368 6 18 7 371 3 200 3 325 5 222 1 223 9 282 1 24 3 283 3 285 5 
87 3 355 1 292 2 331 4 230 1 96 1 259 2 69 1 190 1 33 1 168 1 345 1 365 1 198 1 348 3 17 1 80 2 18 2 368 2 371 1 200 1 325 3 222 1 223 3 24 1 283 1 
87 4 355 1 331 7 292 4 96 1 230 1 259 4 261 1 69 2 190 1 33 1 168 2 345 1 365 1 237 1 198 1 348 5 217 1 17 2 80 3 368 4 18 3 371 2 200 2 325 4 222 1 223 4 24 2 283 2 
13 1 166 1 233 1 
233 1 340 1 
241 1 
111 1 233 1 
111 1 171 1 166 2 233 3 172 1 362 1 
111 1 233 1 172 1 
233 1 191 1 
318 1 101 1 113 7 161 3 188 2 258 4 316 3 200 1 133 1 177 1 136 2 212 1 24 1 244 1 299 1 266 1 52 1 
318 1 101 1 113 7 161 3 188 2 258 4 316 3 200 1 133 1 177 1 136 2 212 1 24 1 244 1 299 1 266 1 52 1 
301 1 318 1 101 1 113 7 161 3 188 2 258 4 316 3 200 1 133 1 177 1 136 2 212 1 24 1 244 1 299 1 266 1 52 1 
0 2 329 1 113 31 206 1 29 1 208 1 161 15 258 16 188 3 337 1 316 10 210 1 212 2 122 1 266 1 361 1 299 2 52 1 318 1 272 3 346 4 101 2 17 3 199 1 371 3 324 1 200 4 133 5 177 1 136 5 42 1 244 2 24 4 283 3 
0 4 329 2 113 9 29 1 208 2 161 4 258 5 188 2 189 1 337 2 31 1 316 4 210 2 212 1 299 1 52 1 318 1 101 1 200 1 133 1 177 1 136 3 24 1 244 1 
109 1 62 2 112 1 27 1 45 1 254 1 207 1 139 1 47 1 332 1 30 1 117 1 118 1 120 1 263 1 344 1 267 1 72 1 127 1 73 1 214 1 215 1 216 1 197 1 275 1 305 1 57 2 219 2 58 1 327 1 
109 1 62 2 357 1 112 1 27 1 45 1 254 1 160 1 207 1 139 1 47 1 30 1 117 1 118 1 120 1 263 1 344 2 267 1 72 1 127 1 73 1 214 1 215 1 216 1 366 1 275 1 305 1 57 3 219 3 58 1 
62 2 112 1 357 1 27 1 45 1 254 1 160 1 207 1 139 1 47 1 30 1 117 1 263 1 344 2 267 1 127 1 73 1 214 1 215 1 216 1 275 1 305 1 57 2 219 2 58 1 
182 1 111 1 366 1 112 2 45 1 254 1 150 1 139 1 207 2 7 1 369 1 93 1 312 1 47 1 30 2 57 1 119 1 118 1 219 1 263 1 233 1 267 2 72 1 
109 1 62 2 357 1 112 1 27 1 45 1 254 1 207 1 139 1 47 1 332 1 30 1 118 1 120 1 263 1 267 1 72 1 127 1 73 1 214 1 216 1 305 1 57 1 219 1 58 1 327 1 
123 1 
87 5 4 1 45 1 331 2 139 2 47 2 294 2 333 2 96 1 228 1 190 1 232 2 233 1 148 2 149 1 345 1 348 2 304 4 150 1 151 3 20 1 21 2 352 1 59 2 107 1 111 1 355 1 307 1 356 1 253 1 254 1 63 1 205 1 312 2 115 1 315 1 119 1 259 2 163 1 67 1 263 2 317 1 75 2 36 1 365 1 38 6 367 1 80 2 81 1 174 1 325 2 375 1 223 5 180 1 378 1 
87 3 317 1 75 1 38 2 367 1 307 1 356 1 4 1 304 2 63 1 205 1 151 1 115 1 20 1 228 1 67 1 352 1 376 1 375 1 223 3 378 1 180 1 
87 3 317 1 38 1 367 1 307 1 356 1 4 1 304 3 63 1 205 1 151 1 115 1 20 1 228 1 67 1 21 1 325 1 352 1 376 1 190 1 375 1 223 3 378 1 180 1 
87 3 307 1 4 1 356 1 63 1 205 1 115 1 67 1 228 1 190 1 232 1 317 1 75 1 38 2 367 1 304 3 151 1 20 1 21 1 352 1 325 1 376 1 375 1 223 3 180 1 378 1 
87 5 183 1 4 1 294 2 333 2 228 1 96 1 190 5 232 4 297 1 148 2 149 1 348 1 304 6 151 3 20 1 21 4 352 1 59 2 107 1 307 1 355 1 356 1 63 1 205 1 359 1 115 1 67 1 163 1 259 1 35 1 74 1 317 1 75 4 365 1 38 7 367 1 80 2 325 5 375 1 376 1 223 5 378 1 180 1 
87 4 4 1 331 2 294 2 333 2 96 1 228 1 190 1 232 2 148 2 149 1 348 1 304 4 151 2 20 1 21 2 352 1 59 2 107 1 355 1 307 1 356 1 63 1 205 1 115 1 315 1 67 1 163 1 259 1 317 1 75 2 365 1 38 4 367 1 80 2 325 2 375 1 223 4 378 1 180 1 
107 1 87 4 183 1 355 1 307 1 4 1 356 1 63 1 205 1 294 2 115 1 333 2 259 1 67 1 228 1 163 1 96 1 190 1 232 2 297 1 148 2 149 1 74 1 317 1 75 2 365 1 38 4 367 1 348 1 304 4 80 2 151 2 20 1 21 2 325 1 352 1 375 1 223 4 59 2 180 1 378 1 
107 1 87 4 183 1 355 1 307 1 4 1 356 1 63 1 205 1 294 2 115 1 333 2 259 1 67 1 228 1 163 1 96 1 190 1 232 2 297 1 148 2 149 1 74 1 317 1 75 2 365 1 38 4 367 1 348 1 304 4 80 2 151 2 20 1 21 2 325 1 352 1 375 1 223 4 59 2 180 1 378 1 
291 2 107 1 87 4 355 1 307 1 252 2 4 1 356 1 331 2 63 1 205 1 294 2 115 1 333 2 259 1 67 1 228 1 163 1 96 1 190 1 232 2 10 1 74 1 270 1 317 1 75 2 365 1 38 4 367 1 348 1 15 1 304 4 151 2 20 1 21 2 325 1 352 1 375 1 223 4 180 1 378 1 
107 1 87 4 183 1 355 1 307 1 4 1 356 1 63 1 205 1 294 2 115 1 333 2 259 1 96 1 163 1 67 1 228 1 190 1 232 3 297 1 35 1 148 2 149 1 74 1 317 1 75 3 365 1 38 5 367 1 348 1 304 5 80 2 151 2 20 1 21 3 325 1 352 1 375 1 223 4 59 2 180 1 378 1 
107 1 87 4 183 1 355 1 307 1 4 1 356 1 63 1 205 1 294 2 115 1 333 2 259 1 96 1 163 1 67 1 228 1 190 1 232 3 297 1 35 1 148 2 149 1 74 1 317 1 75 3 365 1 38 5 367 1 348 1 304 5 80 2 151 2 20 1 21 3 325 1 352 1 375 1 223 4 59 2 180 1 378 1 
291 2 87 4 4 1 331 2 294 2 333 2 96 1 228 1 190 1 232 2 10 1 348 1 304 4 151 2 20 1 21 2 352 1 107 1 355 1 307 1 356 1 252 2 63 1 205 1 115 1 315 1 67 1 163 1 259 1 317 1 75 2 365 1 38 4 367 1 325 1 375 1 223 4 378 1 180 1 
61 1 271 1 0 2 318 1 13 1 329 1 79 2 113 6 161 3 141 1 208 1 188 1 258 3 316 2 337 1 200 1 210 1 177 1 156 1 136 2 212 1 85 1 24 1 244 1 381 1 52 1 
61 11 0 4 329 2 113 14 358 1 161 6 208 2 141 1 258 8 316 2 337 2 210 2 165 1 122 1 272 3 346 3 274 1 350 1 17 2 79 1 175 1 371 1 324 1 373 1 133 1 200 2 156 11 136 1 85 4 24 1 379 1 283 2 381 2 
0 2 111 1 4 2 329 1 45 1 330 1 254 1 113 2 358 1 139 1 208 1 141 1 161 1 47 1 312 1 334 1 258 1 337 1 210 1 263 1 121 1 233 1 124 1 317 1 274 1 77 1 350 1 79 1 172 1 351 1 278 1 20 2 374 1 178 1 243 1 85 1 248 1 381 1 
0 6 89 1 4 3 329 3 330 1 45 2 293 1 139 3 141 3 47 3 188 1 334 1 337 3 9 2 233 2 52 1 12 2 349 1 350 1 17 2 351 1 20 3 200 3 156 7 244 1 24 3 245 2 61 7 111 2 357 1 254 2 113 20 358 1 161 10 208 3 114 2 312 1 258 10 316 8 210 3 263 3 121 1 212 1 170 2 317 1 318 1 274 1 77 2 79 2 172 2 278 2 371 2 133 4 177 1 136 4 178 2 85 7 283 2 381 3 
44 1 0 4 111 2 4 1 357 1 329 2 330 1 45 2 254 2 113 2 358 1 139 8 208 2 141 2 161 1 47 8 312 2 162 1 334 1 258 1 337 2 119 1 210 2 263 7 121 1 233 3 169 2 271 1 317 1 302 1 274 1 197 1 129 1 16 1 150 1 20 1 284 1 201 1 381 2 
61 1 0 2 4 1 329 1 330 1 185 1 113 3 208 1 141 1 161 2 258 1 316 1 337 1 210 1 121 1 265 1 71 1 317 1 350 1 17 1 20 1 371 1 200 1 156 1 136 1 85 1 24 1 283 1 381 1 
61 1 271 1 0 2 329 1 113 2 141 1 208 1 258 2 316 1 337 1 133 1 200 1 210 1 156 1 85 1 283 1 60 1 381 1 
61 1 271 1 0 2 329 1 113 2 141 1 208 1 161 2 371 1 316 1 337 1 210 1 156 1 136 1 85 1 24 1 104 1 381 1 
61 2 0 2 329 1 113 4 208 1 141 1 161 2 258 2 337 1 316 2 210 1 271 1 17 1 371 1 200 1 133 1 156 2 136 1 85 2 24 1 283 1 381 1 
61 1 0 2 329 1 16 1 113 2 141 1 208 1 258 2 316 1 337 1 133 1 200 1 210 1 156 1 85 1 283 1 60 1 381 1 
61 1 0 2 329 1 16 1 113 2 141 1 208 1 161 2 371 1 316 1 337 1 210 1 156 1 136 1 85 1 24 1 104 1 381 1 
61 2 0 2 329 1 113 4 208 1 141 1 161 2 258 2 337 1 316 2 210 1 16 1 17 1 371 1 200 1 133 1 156 2 136 1 85 2 24 1 283 1 381 1 
61 2 0 2 329 1 113 4 208 1 141 1 161 2 258 2 337 1 316 2 210 1 17 1 371 1 200 1 133 1 156 2 136 1 85 2 24 1 283 1 381 1 
0 2 111 1 4 1 329 1 45 1 254 1 113 2 358 1 139 1 114 1 141 1 208 1 161 1 47 1 312 1 258 1 337 1 210 1 263 1 233 1 274 1 77 1 79 1 172 1 278 1 20 1 178 1 381 1 
0 2 111 1 4 1 329 1 45 1 254 1 113 2 358 1 139 1 141 1 208 1 161 1 47 1 312 1 258 1 336 1 337 1 210 1 263 1 233 1 364 1 274 1 77 1 79 1 172 1 20 1 82 1 381 1 
61 2 0 2 329 1 113 4 208 1 141 1 161 2 258 2 337 1 316 2 210 1 17 1 350 1 371 1 200 1 133 1 156 2 136 1 85 2 24 1 283 1 381 1 
61 2 0 2 111 1 4 1 329 1 45 1 254 1 113 4 139 1 161 2 114 1 141 1 208 1 47 1 258 2 316 2 337 1 210 1 263 1 233 1 197 1 77 1 17 1 172 1 371 1 278 1 20 1 133 1 200 1 156 2 136 1 178 1 85 2 24 1 283 1 245 1 381 1 
181 1 61 1 0 2 4 1 329 1 330 1 185 1 113 3 161 1 208 1 141 1 258 2 316 1 337 1 210 1 121 1 71 1 317 1 350 1 17 1 371 1 20 1 133 1 200 1 156 1 85 1 24 1 283 1 381 1 
0 4 329 2 90 1 113 19 28 1 310 1 208 2 161 10 314 1 257 1 258 9 337 2 31 1 295 1 316 6 210 2 122 1 125 2 272 1 346 2 130 1 17 3 131 2 371 3 324 1 200 3 133 3 136 3 24 3 283 3 
0 6 329 3 90 2 113 26 29 2 310 2 161 12 208 3 314 1 258 14 316 4 337 3 31 1 295 1 210 3 50 1 125 4 167 1 360 1 272 2 346 2 130 1 17 3 131 1 19 1 371 2 324 2 133 2 200 3 136 2 24 2 283 3 157 1 286 1 
0 6 329 3 90 1 113 41 29 1 310 2 208 3 161 21 227 1 314 1 257 1 188 1 258 20 337 3 31 1 295 1 316 8 210 3 50 1 212 1 122 1 167 1 125 4 360 1 52 1 318 1 272 3 346 4 130 1 17 4 131 1 19 1 371 4 324 3 200 5 133 4 177 1 136 4 244 1 24 5 283 4 157 1 286 1 
0 8 329 4 90 1 113 38 29 2 310 2 208 4 161 18 227 1 314 1 257 1 188 1 258 20 337 4 31 1 295 1 316 7 210 4 50 1 212 1 122 1 167 1 125 4 360 1 52 1 318 1 272 3 346 4 130 1 17 4 131 1 19 1 371 3 324 3 200 5 133 3 177 1 136 4 244 1 24 4 283 4 157 1 286 1 
0 4 329 2 90 1 113 52 29 1 310 1 208 2 161 25 314 1 188 1 258 27 337 2 31 1 295 1 316 14 210 2 165 2 50 1 212 1 122 2 167 1 125 4 360 1 52 1 318 1 272 4 346 4 130 1 17 7 131 1 19 1 371 7 324 2 200 8 133 7 177 1 136 7 244 1 24 8 283 7 157 1 286 1 
137 1 55 1 66 1 99 1 159 1 164 1 242 1 308 1 11 1 92 1 
8 1 309 1 
55 1 328 1 99 1 159 1 164 1 186 1 308 1 147 1 92 1 
137 1 87 1 159 1 99 1 184 1 308 1 92 1 55 1 209 2 95 1 164 1 153 1 325 1 242 1 40 1 223 1 247 1 11 1 
137 1 87 1 159 1 99 1 184 1 308 1 92 1 55 1 209 2 95 1 164 1 153 1 325 1 242 1 40 1 223 1 247 1 11 1 
137 1 87 1 159 1 99 1 184 1 308 1 92 1 55 1 209 2 95 1 164 1 153 1 325 1 242 1 40 1 223 1 247 1 11 1 
347 1 234 1 235 1 
347 1 234 1 235 1 
152 1 319 1 
152 1 319 1 347 1 
46 1 78 1 
87 1 159 1 4 2 330 2 308 1 46 1 309 1 92 1 209 1 95 1 8 1 164 1 121 2 168 1 213 1 317 2 99 1 273 1 79 1 78 1 18 1 55 1 20 2 153 1 154 1 221 1 223 1 
234 1 235 1 
152 1 319 1 347 1 
44 1 0 2 111 1 4 2 329 1 45 1 254 1 113 2 358 1 139 2 141 1 208 1 161 1 47 2 258 1 335 1 337 1 210 1 263 2 233 1 339 1 126 1 300 1 169 2 317 2 302 1 274 1 350 1 20 2 155 1 381 1 
73 1 216 1 62 2 357 1 197 1 45 1 27 1 254 1 305 1 139 2 256 1 47 2 313 1 30 1 120 1 263 2 296 1 58 1 127 1 
73 1 216 1 62 2 357 1 27 1 45 1 254 1 91 1 305 1 139 1 47 1 313 1 30 1 120 1 263 1 58 1 127 1 
1 1 111 1 45 1 254 1 139 1 150 1 312 1 47 1 369 1 30 1 119 1 263 1 233 1 296 1 
73 1 216 1 62 2 357 1 27 1 45 1 254 1 305 1 139 1 256 1 47 1 313 1 30 1 120 1 263 1 296 1 58 1 127 1 
239 1 
218 1 259 1 32 1 13 1 325 1 190 1 348 1 
87 1 355 1 331 1 259 1 96 1 163 1 190 1 148 1 149 1 365 1 38 1 348 1 80 1 151 1 325 2 223 1 59 1 
87 5 45 3 292 6 331 12 139 3 6 2 47 3 96 4 9 2 49 2 190 2 233 10 340 3 191 2 298 2 345 2 236 1 14 1 197 1 348 9 17 2 151 3 200 2 23 2 24 2 246 2 110 2 111 3 355 4 253 1 254 4 312 1 65 2 163 4 260 2 259 8 32 1 263 3 166 2 362 1 365 4 38 5 80 6 172 3 368 6 218 1 371 2 325 8 83 1 375 2 41 1 281 1 223 5 283 2 
87 1 355 2 253 1 331 6 292 5 96 2 163 2 259 5 190 2 145 1 298 1 167 1 360 1 345 1 365 2 272 1 38 1 346 1 348 8 17 2 80 3 151 1 368 5 19 1 371 2 324 1 200 2 325 5 223 1 24 2 283 2 157 1 286 1 246 2 380 1 
249 1 87 1 183 1 355 1 4 1 138 1 330 1 96 1 163 1 259 2 121 1 212 1 298 1 71 1 317 1 365 1 37 1 367 1 348 2 102 1 20 1 200 2 177 1 223 1 244 1 24 1 288 1 246 2 
365 1 355 1 348 1 218 1 163 1 96 1 259 1 32 1 325 1 190 1 
348 5 292 5 331 10 17 2 80 5 368 5 371 2 259 5 9 1 200 2 325 5 24 2 298 1 283 2 246 2 
87 1 38 1 325 1 190 1 223 1 151 1 
87 3 111 1 355 2 45 1 253 2 254 1 139 4 47 4 312 2 187 1 96 2 163 1 259 2 119 1 263 4 233 1 345 2 365 2 236 2 38 4 348 2 81 1 151 2 150 1 174 1 222 1 41 1 223 3 290 1 
0 2 111 1 4 3 329 1 330 2 45 1 254 1 113 1 358 1 139 1 161 1 208 1 114 1 141 1 47 1 312 1 337 1 210 1 263 1 121 2 233 1 71 2 317 2 37 1 77 1 79 1 172 1 20 3 278 1 178 1 43 1 381 1 
345 1 365 1 355 1 348 1 253 1 292 2 331 4 80 2 368 2 188 1 259 2 163 1 96 1 325 4 190 2 
55 1 99 1 179 1 
55 1 99 1 179 1 
55 1 99 1 196 1 46 1 11 1 
55 1 99 1 179 1 
55 1 99 1 100 1 
55 1 99 1 100 1 
55 1 99 1 100 1 
55 1 99 1 
308 1 92 1 
0 4 318 1 329 2 113 8 29 1 161 4 208 2 188 1 258 4 316 3 337 2 200 1 133 1 210 2 177 1 136 2 212 1 24 1 244 1 52 1 
318 1 13 1 113 6 161 3 188 1 258 3 316 2 200 1 177 1 212 1 136 2 244 1 24 1 52 1 
202 1 0 2 329 1 17 1 113 4 161 2 208 1 371 1 258 2 316 2 337 1 200 1 133 1 210 1 136 1 24 1 283 1 
272 1 346 2 17 1 113 7 161 4 371 1 324 1 258 3 316 2 200 1 133 1 136 1 122 1 24 1 283 1 
0 4 329 2 113 23 64 1 29 2 161 12 208 2 188 1 258 11 316 9 337 2 210 2 165 1 212 2 122 1 52 1 318 1 272 2 346 2 17 2 371 2 133 4 200 3 177 1 136 5 244 2 24 3 283 2 379 1 
346 1 113 1 161 1 
258 1 272 1 113 1 
0 2 202 1 329 1 17 1 113 6 208 1 161 3 371 1 258 3 337 1 316 3 9 1 200 1 133 1 210 1 136 2 24 1 283 1 
0 2 329 1 113 12 161 6 208 1 258 6 337 1 31 1 316 2 210 1 167 1 360 1 272 1 346 1 17 2 19 1 371 2 324 1 133 1 200 2 136 1 24 2 283 2 157 1 286 1 
113 6 161 3 258 3 316 2 200 1 133 1 177 1 212 1 136 1 24 1 244 1 
0 2 318 1 329 1 64 1 113 3 29 1 161 2 208 1 258 1 316 2 337 1 133 1 210 1 136 1 212 1 244 1 52 1 
0 2 138 1 329 1 113 10 208 1 161 5 258 5 337 1 31 1 316 5 133 2 200 2 210 1 177 1 212 2 136 3 244 2 24 2 
0 2 329 1 113 2 208 1 258 2 31 1 337 1 316 1 200 1 133 1 210 1 283 1 
0 2 329 1 17 1 113 4 161 2 208 1 371 1 258 2 316 2 31 1 337 1 200 1 133 1 210 1 136 1 24 1 283 1 
0 6 329 3 64 1 113 3 29 1 161 2 208 3 257 1 258 1 31 1 337 3 316 2 133 1 210 3 212 1 136 1 244 1 
202 1 0 10 329 5 64 1 113 34 29 2 206 1 161 18 208 5 188 1 257 1 258 16 337 5 31 1 316 12 210 5 212 3 122 1 52 1 318 1 272 3 346 4 17 3 199 1 371 3 324 1 200 5 133 5 177 2 136 7 42 1 244 3 24 5 283 3 
0 2 329 1 113 8 161 4 208 1 188 1 258 4 337 1 31 1 316 2 210 1 212 1 167 1 52 1 272 1 318 1 346 1 324 1 200 1 177 1 136 2 24 1 244 1 
0 4 202 1 329 2 113 11 161 5 208 2 188 1 258 6 31 1 337 2 316 3 210 2 212 1 122 1 167 1 52 1 318 1 272 1 346 2 17 1 324 1 200 2 133 1 177 1 136 2 24 1 244 1 283 1 
202 1 0 6 329 3 113 19 29 1 161 10 208 3 188 1 258 9 337 3 31 1 316 4 210 3 212 1 167 1 360 1 52 1 318 1 272 1 346 1 17 2 19 1 371 2 324 1 133 1 200 3 177 1 136 3 244 1 24 3 283 2 157 1 286 1 
202 1 0 6 329 3 113 17 29 1 161 7 208 3 188 1 258 10 337 3 31 1 316 5 210 3 212 1 167 1 360 1 52 1 318 1 272 1 346 1 17 2 19 1 371 1 324 1 133 2 200 3 177 1 136 3 244 1 24 2 283 2 157 1 286 1 
0 2 329 1 113 8 161 4 208 1 188 1 258 4 337 1 31 1 316 2 210 1 212 1 167 1 52 1 272 1 318 1 346 1 324 1 200 1 177 1 136 2 24 1 244 1 
0 2 329 1 113 12 161 6 208 1 258 6 337 1 31 1 316 2 210 1 167 1 360 1 272 1 346 1 17 2 19 1 371 2 324 1 133 1 200 2 136 1 24 2 283 2 157 1 286 1 
202 1 0 8 329 4 113 18 29 2 161 8 208 4 188 1 258 10 337 4 31 1 316 5 210 4 212 1 167 1 360 1 52 1 318 1 272 1 346 1 17 2 19 1 371 1 324 1 133 2 200 3 177 1 136 3 244 1 24 2 283 2 157 1 286 1 
0 8 329 4 113 16 29 2 161 7 208 4 257 1 258 9 31 1 337 4 316 6 210 4 167 1 360 1 272 1 346 1 17 3 19 1 371 2 324 1 133 3 200 3 136 3 24 2 283 3 157 1 286 1 
318 1 113 7 161 4 258 3 316 6 133 3 200 1 177 1 212 3 136 3 24 1 244 3 52 2 
0 8 329 4 113 18 29 2 161 8 208 4 188 1 257 1 258 10 31 1 337 4 316 4 210 4 212 1 167 1 360 1 52 1 318 1 272 1 346 1 17 2 19 1 371 1 324 1 133 1 200 3 177 1 136 3 244 1 24 2 283 2 157 1 286 1 
20 1 317 1 203 1 352 1 4 1 264 1 79 1 
317 1 203 1 4 1 79 1 276 1 20 1 144 1 352 1 135 1 86 1 264 1 287 1 
111 1 119 1 13 1 263 1 45 1 233 1 254 1 150 1 139 1 47 1 312 1 
317 1 111 1 4 2 330 1 45 1 254 1 77 1 79 1 172 1 139 1 312 1 47 1 20 2 278 1 334 1 263 1 121 1 233 1 
111 2 4 2 45 1 330 1 254 1 63 1 205 1 139 1 6 1 47 1 334 1 263 1 121 2 233 3 191 1 317 2 236 1 367 1 77 1 79 1 172 2 278 1 20 2 
111 2 4 2 45 1 330 1 254 1 63 1 205 1 139 2 6 1 47 2 334 1 263 2 121 2 233 3 191 1 317 2 364 1 236 1 367 1 77 1 79 1 172 2 323 1 20 2 
87 2 111 1 236 1 38 1 45 1 254 1 172 1 6 1 139 3 312 1 47 3 56 1 323 1 338 1 325 1 263 3 190 1 375 1 166 1 223 2 233 4 191 1 340 1 
87 2 111 1 236 1 38 1 45 1 254 1 172 1 6 1 139 3 312 1 47 3 323 1 260 1 325 1 263 3 190 1 375 1 166 1 223 2 233 4 191 1 340 1 
263 1 45 1 254 1 139 1 47 1 201 1 
44 1 111 2 357 1 197 1 129 1 45 2 254 3 172 1 139 7 173 1 312 2 47 7 162 1 176 1 263 6 233 3 284 1 97 1 362 1 169 1 201 1 
61 1 0 4 111 1 4 2 329 2 45 1 330 1 254 1 113 6 139 1 161 3 208 2 141 2 114 1 47 1 188 1 258 3 334 1 316 2 337 2 210 2 263 1 121 1 212 1 233 1 52 1 12 1 317 1 318 1 197 1 77 1 350 1 79 2 172 1 20 2 278 1 200 1 177 1 156 1 155 1 136 2 178 1 85 1 24 1 244 1 245 1 381 2 
87 3 110 1 355 2 139 1 47 1 312 1 259 1 96 2 163 2 260 1 32 1 263 1 49 1 190 1 166 1 233 2 340 1 365 2 38 2 348 1 151 1 18 1 218 1 325 1 375 1 41 1 223 3 23 1 
111 1 197 1 45 1 254 2 172 1 139 2 47 2 263 2 83 1 166 1 233 2 362 1 201 1 
94 1 323 1 111 1 119 1 263 4 197 1 45 1 233 1 254 1 150 1 139 4 47 4 312 1 
111 1 236 1 45 1 226 1 254 2 293 1 172 1 139 2 173 1 47 2 176 1 263 2 233 1 224 1 
62 1 263 1 45 1 27 1 58 1 254 1 139 1 127 1 47 1 312 1 
44 1 111 1 197 1 357 1 45 1 254 1 139 2 47 2 263 2 233 1 126 1 
44 1 111 2 236 1 197 1 45 2 254 2 150 1 139 5 312 1 47 5 94 1 162 1 119 1 263 4 233 3 284 1 
44 1 111 2 236 1 197 1 45 2 254 2 150 1 139 5 312 1 47 5 94 1 162 1 119 1 68 1 263 4 233 3 
317 1 111 1 364 1 4 2 330 1 45 1 254 1 77 1 79 1 172 1 139 1 312 1 47 1 20 2 334 1 263 1 121 1 233 1 
111 1 236 1 45 1 254 2 172 1 139 1 173 1 47 1 176 1 263 1 233 1 97 1 362 1 
195 1 79 1 277 1 370 1 326 1 
106 1 87 2 367 1 195 2 63 1 79 1 205 1 18 1 277 2 370 2 67 1 325 1 220 1 190 1 375 1 223 2 22 1 306 1 326 1 
317 1 195 1 4 1 370 1 20 1 335 1 339 1 300 1 326 1 
22 1 306 1 326 1 
117 1 215 1 13 1 275 1 
57 1 117 1 118 1 215 1 219 1 275 1 72 1 
219 1 112 1 207 1 
2 2 215 1 303 1 3 1 275 1 332 1 57 3 117 1 118 1 219 3 193 1 72 1 
57 2 117 1 229 1 118 1 215 1 219 2 275 1 344 1 72 1 
194 1 57 1 118 1 62 1 216 1 219 1 275 1 58 1 54 1 72 1 332 1 
57 1 117 1 118 1 219 1 275 1 72 1 332 1 
57 1 117 2 118 1 215 1 219 1 72 1 332 1 
57 2 117 1 118 2 219 2 275 1 192 1 140 1 269 1 72 2 332 1 
194 1 215 1 275 2 332 1 57 3 117 1 118 1 219 3 262 1 353 1 344 2 51 1 72 1 
215 1 62 2 216 1 275 1 305 1 332 1 57 2 117 1 118 1 219 2 58 1 146 1 344 1 127 1 72 1 
194 1 215 1 275 2 332 1 57 4 117 1 118 2 229 1 219 4 353 1 354 1 344 2 72 2 
57 1 117 1 118 1 215 1 219 1 275 1 72 1 332 1 
194 1 2 1 215 2 3 1 275 3 57 4 117 2 118 1 219 4 353 1 193 1 344 2 105 1 72 1 
57 2 117 1 118 1 215 1 219 2 39 1 275 1 341 1 344 1 322 1 72 1 332 1 
57 3 117 1 2 2 118 1 215 1 219 3 3 2 275 1 193 1 98 1 72 1 332 1 
158 1 372 2 275 2 53 1 
116 1 57 1 118 1 219 1 72 1 332 1 
57 2 117 1 118 1 215 1 219 2 275 1 344 1 51 1 72 1 332 1 
132 1 
57 1 117 1 118 1 215 1 219 1 275 1 72 1 332 1 
57 3 117 1 2 1 118 1 215 1 219 3 275 1 344 1 51 1 72 1 332 1 
194 1 353 1 275 1 105 1 
117 1 275 1 

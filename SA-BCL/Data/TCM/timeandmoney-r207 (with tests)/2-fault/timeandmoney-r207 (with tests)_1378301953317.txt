#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z | STATEMENT | 1132 | stmt -> ;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONDITION | 5405 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 173 1 272 1 336 1 364 9 177 1 176 3 88 1 367 1 130 1 13 1 297 2 185 1 69 2 18 1 232 5 187 1 279 2 141 1 346 2 235 4 95 1 284 1 27 2 121 6 312 9 222 2 169 1 
0 2 173 1 272 1 336 1 364 9 177 1 176 3 88 1 367 1 130 1 13 1 297 2 185 1 69 2 18 1 232 5 187 1 279 2 141 1 346 2 235 4 95 1 284 1 27 2 121 6 312 9 222 2 169 1 
0 2 173 1 272 1 336 1 364 10 177 1 176 4 88 1 367 1 130 1 13 1 297 2 185 1 69 2 18 1 232 6 187 1 279 2 141 1 346 2 235 5 95 1 284 1 27 2 121 7 312 10 222 2 169 1 
0 2 173 1 272 1 336 1 364 7 177 1 176 2 88 1 367 1 130 1 13 1 297 2 69 1 18 1 232 4 187 1 279 2 141 1 346 2 235 3 95 1 284 1 27 2 121 4 312 7 222 2 169 1 
0 1 69 2 232 3 279 1 187 1 141 1 346 1 235 2 364 4 95 1 176 1 121 3 367 1 312 4 13 1 222 1 297 1 185 1 
232 1 18 1 279 1 346 1 364 2 95 1 284 1 27 1 367 1 341 1 312 2 113 1 13 1 42 1 222 1 297 1 
232 2 279 2 346 2 336 1 235 1 364 3 95 1 176 1 27 1 121 1 367 1 312 3 13 1 
0 1 69 2 173 1 232 5 187 1 279 2 141 1 346 2 336 1 235 4 364 9 95 1 273 1 176 3 121 7 27 1 367 1 312 9 13 1 222 1 169 1 297 1 151 1 185 1 
0 1 69 2 173 1 232 5 187 1 279 2 141 1 346 2 336 1 235 4 364 9 95 1 273 1 176 3 121 7 27 1 367 1 312 9 13 1 222 1 169 1 297 1 151 1 185 1 
65 1 319 1 44 1 
268 2 358 1 65 1 
64 2 251 2 329 1 349 2 166 2 179 2 221 2 5 1 
356 1 172 1 360 1 3 1 153 2 4 2 106 1 5 1 338 2 294 1 64 3 9 1 111 1 245 1 179 3 371 1 137 2 342 1 138 2 92 1 251 2 345 2 234 1 20 1 47 1 23 1 325 1 146 1 148 1 329 1 349 2 166 3 193 1 216 1 221 3 352 1 168 1 351 2 123 1 55 2 239 1 
64 1 251 1 349 1 159 1 166 1 179 1 221 1 342 1 330 1 5 1 
321 1 104 1 199 1 146 1 25 1 64 1 65 1 166 1 193 1 181 1 221 1 342 1 44 1 33 1 
251 1 199 1 146 1 25 2 64 1 349 1 65 1 166 1 193 1 179 1 181 1 221 1 342 1 44 1 33 2 
25 1 382 1 175 1 33 1 98 1 
25 2 65 1 210 1 36 1 382 1 44 1 175 1 33 2 
25 1 175 1 33 1 
251 1 5 1 25 1 64 1 349 1 159 1 166 1 263 1 179 1 221 1 342 1 382 1 330 1 33 1 
65 1 
25 2 65 1 36 1 49 1 382 1 44 1 175 1 33 2 
271 1 22 1 282 1 36 1 175 2 377 2 25 5 150 1 149 1 286 1 65 1 353 2 246 1 382 2 266 2 44 1 194 1 33 5 355 1 
329 1 319 1 
251 1 101 1 46 1 64 2 349 1 329 2 166 2 179 1 221 2 
361 1 274 1 11 1 
345 2 3 1 4 1 20 1 153 2 106 1 146 1 348 1 338 2 148 1 64 1 329 1 9 1 166 1 193 1 245 1 179 1 221 1 342 1 351 1 123 1 138 1 
361 1 3 1 4 1 153 2 106 1 202 1 338 2 64 2 9 1 245 1 179 2 342 1 138 1 345 2 20 1 146 1 148 1 349 1 308 1 166 2 193 1 221 2 351 1 123 1 
251 1 64 3 329 1 308 1 349 3 166 3 179 3 221 3 
64 1 349 1 166 1 179 1 221 1 342 1 330 1 
64 1 251 1 349 1 101 1 166 1 179 1 46 1 221 1 342 1 
172 1 101 1 360 1 3 1 153 2 61 1 4 1 199 1 106 1 202 1 5 1 338 2 294 1 64 4 9 1 245 1 179 4 181 1 371 1 137 1 342 2 138 1 251 2 345 2 278 1 234 1 20 1 47 1 23 1 325 1 146 2 25 1 148 1 329 1 349 3 308 1 166 4 193 2 216 1 221 4 351 1 123 1 33 1 55 2 239 1 
64 2 329 1 349 1 308 1 104 1 166 2 179 1 221 2 243 1 
251 1 101 1 61 1 199 1 202 1 378 1 146 1 25 1 64 3 308 2 349 3 65 1 166 3 193 1 179 3 181 1 221 3 342 1 33 1 
251 1 101 1 361 1 64 2 308 1 349 2 166 2 11 1 179 2 221 2 
345 2 3 1 4 1 20 1 153 2 106 1 146 1 338 2 148 1 64 1 329 1 9 1 166 1 193 1 245 1 179 1 221 1 342 1 351 1 123 1 138 1 
345 2 3 1 4 1 20 1 153 2 224 1 106 1 316 1 146 1 338 2 64 1 329 1 166 1 193 1 245 1 179 1 221 1 342 1 351 1 123 1 138 1 
360 1 361 2 315 1 292 1 203 1 7 1 294 1 8 1 274 2 11 2 132 1 371 1 137 4 68 1 208 1 234 2 47 1 325 1 74 1 192 1 216 1 352 2 195 1 55 2 
64 1 349 1 166 1 193 1 179 1 221 1 231 1 342 1 
251 1 101 1 104 1 304 1 243 1 202 1 64 5 308 2 349 4 329 1 166 5 179 4 221 5 43 1 
64 2 349 2 166 2 179 2 231 1 221 2 342 1 330 1 
52 1 97 1 
52 1 97 1 
260 1 83 1 
260 1 83 1 
260 1 83 1 
52 1 97 1 14 1 
227 1 52 1 97 1 
108 1 260 1 252 1 52 2 97 2 83 1 
52 1 97 1 14 1 
52 1 97 1 14 1 
52 1 97 1 370 1 
52 1 97 1 370 1 
52 1 97 1 370 1 
322 3 362 2 70 1 198 2 236 1 290 1 128 1 50 1 108 1 25 2 52 2 76 2 163 2 65 1 97 2 41 1 182 1 33 2 160 2 
362 1 198 1 227 1 64 2 179 2 41 1 275 1 114 1 160 1 322 1 118 1 117 1 190 1 25 1 26 1 52 1 329 1 349 2 163 1 309 1 97 1 166 2 221 2 33 1 
0 1 222 1 297 1 
113 1 222 1 297 1 
0 2 78 1 215 1 79 1 113 1 297 3 
0 1 78 1 215 1 113 1 230 1 297 2 
0 1 215 1 78 2 113 1 297 2 
268 3 34 1 358 1 315 1 36 1 175 1 292 1 85 1 368 2 65 2 369 1 132 1 90 1 275 1 114 1 343 2 44 1 276 1 19 2 22 2 282 3 191 1 377 1 74 1 26 1 25 5 286 1 167 1 353 1 266 1 382 4 33 5 
268 9 34 1 58 1 358 3 271 1 315 3 36 1 84 1 175 6 292 3 368 6 65 5 369 2 132 3 90 2 275 4 44 1 207 1 277 1 19 6 22 6 143 1 282 8 191 3 377 2 74 3 25 9 311 5 286 1 379 1 353 2 382 7 266 2 33 9 98 5 
268 4 358 2 271 1 315 1 292 1 85 1 368 2 65 3 369 1 90 1 132 1 275 1 44 1 343 1 19 2 22 2 282 3 377 1 191 1 74 1 25 3 167 1 353 1 382 2 266 1 33 3 
268 7 358 3 271 1 315 2 84 1 292 2 85 1 368 4 65 4 369 1 90 1 132 2 275 2 44 1 343 2 277 1 19 4 22 4 282 5 377 1 191 2 74 2 25 4 379 1 167 1 353 1 266 1 382 3 33 4 
250 1 345 1 319 1 
147 1 345 1 
212 1 
345 1 338 1 
250 2 270 1 345 3 153 1 296 1 338 1 
345 1 153 1 338 1 
345 1 112 1 
56 1 81 1 234 3 223 1 315 1 155 1 71 2 6 1 292 1 203 3 192 2 261 1 372 1 352 4 137 7 238 1 331 1 
56 1 81 1 234 3 223 1 315 1 155 1 71 2 6 1 292 1 203 3 192 2 261 1 372 1 352 4 137 7 238 1 331 1 
56 1 81 1 234 3 223 1 315 1 155 1 71 2 6 1 292 1 203 3 192 2 261 1 91 1 372 1 352 4 137 7 238 1 331 1 
56 1 125 1 81 1 57 1 360 1 103 1 102 1 223 2 315 4 155 1 37 4 6 2 203 10 292 4 365 1 294 1 132 3 372 1 371 1 137 31 188 3 234 15 347 1 71 3 325 1 191 3 283 1 74 3 192 5 261 2 352 16 55 2 238 5 331 2 
56 1 360 2 102 1 223 1 315 1 155 1 6 1 292 1 203 4 294 2 371 2 372 1 137 9 234 4 71 2 325 2 214 1 192 3 28 1 261 1 352 5 55 4 238 1 331 1 
0 1 59 1 359 1 82 1 105 1 4 1 364 2 337 1 106 1 178 1 367 1 113 1 13 1 138 1 297 2 232 1 279 1 119 1 20 1 346 1 95 1 328 1 51 1 121 1 27 1 312 2 79 1 351 1 222 1 313 1 
0 1 314 1 359 1 82 1 4 1 364 3 337 1 106 1 178 1 367 1 113 1 13 1 295 1 138 1 297 2 232 1 279 1 211 1 119 1 20 1 346 1 328 1 51 1 27 1 121 2 79 1 312 3 351 1 222 1 313 1 
0 1 359 1 82 1 4 1 364 2 106 1 178 1 367 1 113 1 13 1 295 1 138 1 297 2 232 1 211 1 20 1 328 1 51 1 27 1 121 2 312 2 79 1 351 1 222 1 313 1 
314 1 82 2 3 1 4 1 364 1 106 1 338 1 340 1 205 1 138 1 248 1 298 1 345 1 279 1 20 1 346 1 303 1 307 1 51 2 27 2 312 1 351 1 313 2 
0 1 59 1 359 1 82 1 4 1 364 1 337 1 106 1 178 1 113 1 295 1 138 1 297 2 279 1 119 1 20 1 346 1 95 1 328 1 51 1 27 1 312 1 79 1 351 1 222 1 313 1 
189 1 
104 1 3 2 4 2 62 1 199 1 106 1 338 1 109 1 340 1 64 1 158 1 65 2 342 1 206 4 299 2 344 1 16 1 345 1 161 1 20 1 22 2 303 1 24 2 306 1 25 5 166 1 221 1 31 1 353 1 351 2 266 1 354 2 33 5 268 2 267 1 358 2 174 2 36 3 175 6 87 2 90 1 131 1 181 1 136 2 138 2 44 1 183 2 321 1 282 2 96 1 377 1 146 1 286 1 193 1 381 1 
267 1 104 1 199 1 36 1 175 2 64 1 181 1 342 1 206 2 344 1 321 1 16 1 161 1 49 1 96 1 146 1 25 3 166 1 193 1 221 1 33 3 354 1 
267 1 104 1 199 1 174 1 36 1 175 1 64 1 65 1 181 1 342 1 206 3 44 1 344 1 321 1 16 1 161 1 49 1 96 1 146 1 25 3 166 1 193 1 221 1 33 3 
267 1 104 1 36 1 199 1 174 1 175 2 87 1 64 1 65 1 181 1 342 1 206 3 44 1 344 1 321 1 16 1 161 1 49 1 96 1 146 1 25 3 166 1 193 1 221 1 33 3 354 1 
100 1 104 1 240 1 199 1 109 1 64 1 158 1 65 5 206 6 342 1 299 2 344 1 16 1 161 1 22 1 24 2 25 5 166 1 221 1 353 1 266 1 354 4 33 5 267 1 358 2 36 3 174 4 175 7 87 4 181 1 134 1 136 2 44 5 184 1 183 2 321 1 282 1 49 1 326 1 96 1 146 1 377 1 286 1 193 1 
104 1 199 1 62 1 109 1 64 1 158 1 65 2 206 4 342 1 299 2 344 1 16 1 161 1 22 1 24 2 25 4 166 1 221 1 353 1 266 1 33 4 354 2 267 1 268 2 358 2 36 2 174 2 175 4 87 2 181 1 136 2 44 1 183 2 321 1 282 1 96 1 146 1 377 1 286 1 193 1 
267 1 358 2 104 1 240 1 174 2 36 2 199 1 175 4 109 1 87 2 64 1 158 1 65 1 181 1 136 2 342 1 206 4 44 1 299 2 183 2 344 1 184 1 321 1 16 1 161 1 22 1 282 1 326 1 96 1 24 2 146 1 377 1 25 4 286 1 166 1 193 1 221 1 353 1 266 1 354 2 33 4 
267 1 358 2 104 1 240 1 174 2 36 2 199 1 175 4 109 1 87 2 64 1 158 1 65 1 181 1 136 2 342 1 206 4 44 1 299 2 183 2 344 1 184 1 321 1 16 1 161 1 22 1 282 1 326 1 96 1 24 2 146 1 377 1 25 4 286 1 166 1 193 1 221 1 353 1 266 1 354 2 33 4 
268 2 267 1 104 1 363 2 289 1 174 2 36 2 199 1 63 1 175 4 87 2 64 1 158 1 65 1 181 1 342 1 206 4 44 1 299 2 183 2 344 1 321 1 16 1 161 1 22 1 282 1 326 1 96 1 146 1 377 1 25 4 77 2 286 1 166 1 193 1 221 1 353 1 380 1 266 1 354 2 33 4 
267 1 358 2 104 1 240 1 36 2 199 1 174 3 175 5 109 1 87 3 64 1 158 1 65 1 181 1 134 1 136 2 342 1 206 5 44 1 299 2 183 2 184 1 344 1 321 1 16 1 161 1 22 1 282 1 326 1 96 1 24 2 377 1 146 1 25 4 286 1 166 1 193 1 221 1 353 1 266 1 33 4 354 3 
267 1 358 2 104 1 240 1 36 2 199 1 174 3 175 5 109 1 87 3 64 1 158 1 65 1 181 1 134 1 136 2 342 1 206 5 44 1 299 2 183 2 184 1 344 1 321 1 16 1 161 1 22 1 282 1 326 1 96 1 24 2 377 1 146 1 25 4 286 1 166 1 193 1 221 1 353 1 266 1 33 4 354 3 
104 1 199 1 62 1 64 1 158 1 65 1 206 4 342 1 299 2 344 1 16 1 161 1 22 1 25 4 77 2 166 1 221 1 353 1 266 1 33 4 354 2 267 1 268 2 363 2 36 2 174 2 175 4 87 2 181 1 44 1 183 2 321 1 282 1 96 1 146 1 377 1 286 1 193 1 380 1 
56 1 360 1 361 1 234 3 315 1 71 1 155 1 47 1 325 1 6 1 292 1 203 2 8 1 294 1 329 2 192 2 274 1 261 1 11 1 216 1 371 1 372 1 137 6 352 3 319 1 55 2 
356 1 360 2 334 1 361 11 315 2 37 3 226 1 203 2 292 1 365 1 294 2 274 11 132 2 11 4 371 2 137 14 249 1 188 3 234 6 120 1 347 1 47 1 23 1 325 2 191 2 74 1 329 1 192 1 216 2 265 1 352 8 238 1 55 4 
3 1 4 1 153 2 106 1 202 1 338 2 110 1 294 1 64 2 9 1 11 1 245 1 342 1 345 2 20 1 23 1 348 1 308 1 349 1 166 2 216 1 221 2 352 1 351 1 123 1 356 1 360 1 226 1 366 1 179 2 371 1 137 2 138 1 323 1 234 1 47 1 325 1 146 1 148 1 329 1 193 1 55 2 
56 1 3 1 4 3 153 4 155 1 106 2 202 1 201 2 6 1 338 4 339 2 292 3 203 8 294 3 64 3 9 2 245 2 11 7 295 1 342 2 255 1 345 4 20 2 162 2 71 1 23 1 74 2 308 1 349 1 261 1 166 3 216 3 221 3 352 10 351 3 123 2 356 1 172 2 360 3 361 7 315 3 226 1 274 7 132 2 179 3 372 1 371 3 137 20 138 3 93 1 234 10 142 2 47 3 325 3 146 2 191 2 148 2 329 2 192 4 193 2 237 1 238 4 55 6 
99 1 356 1 360 2 105 1 3 2 4 8 242 1 106 2 225 1 338 2 156 1 38 1 340 1 8 1 64 1 294 2 129 1 179 1 371 2 295 1 137 2 138 8 92 2 345 3 234 1 20 2 47 2 303 1 23 1 72 1 325 2 349 1 308 1 166 1 216 2 221 1 351 7 352 1 55 4 
101 1 360 1 361 1 315 1 226 1 203 1 292 1 294 1 64 1 274 1 11 1 132 1 179 1 371 1 137 3 251 1 234 2 47 1 325 1 191 1 74 1 192 1 349 1 166 1 216 1 219 1 221 1 352 1 55 2 
208 1 360 1 361 1 315 1 47 1 325 1 203 1 8 1 294 1 274 1 11 1 132 1 216 1 371 1 137 2 352 2 238 1 55 2 
360 1 361 1 234 2 47 1 325 1 203 1 74 1 292 1 8 1 294 1 192 1 274 1 11 1 216 1 371 1 137 2 195 1 55 2 
360 1 361 2 315 1 203 2 292 1 294 1 8 1 274 2 132 1 11 2 371 1 137 4 234 2 47 1 325 1 191 1 74 1 192 1 216 1 352 2 55 2 238 1 
208 1 360 1 361 1 315 1 47 1 325 1 203 1 156 1 294 1 274 1 11 1 132 1 216 1 371 1 137 2 352 2 238 1 55 2 
360 1 361 1 234 2 47 1 325 1 203 1 156 1 74 1 292 1 294 1 192 1 274 1 11 1 216 1 371 1 137 2 195 1 55 2 
360 1 361 2 315 1 156 1 203 2 292 1 294 1 274 2 132 1 11 2 371 1 137 4 234 2 47 1 325 1 191 1 74 1 192 1 216 1 352 2 55 2 238 1 
360 1 361 2 315 1 203 2 292 1 294 1 274 2 132 1 11 2 371 1 137 4 234 2 47 1 325 1 191 1 74 1 192 1 216 1 352 2 55 2 238 1 
356 1 172 1 360 1 3 1 153 2 4 1 106 1 338 2 294 1 64 1 9 1 245 1 179 1 371 1 137 2 342 1 138 1 345 2 234 1 20 1 47 1 23 1 325 1 146 1 148 1 329 1 166 1 193 1 216 1 221 1 352 1 351 1 123 1 55 2 
356 1 360 1 3 1 153 2 4 1 224 1 106 1 316 1 338 2 293 1 294 1 64 1 245 1 179 1 371 1 137 2 342 1 138 1 345 2 234 1 20 1 47 1 23 1 325 1 146 1 329 1 166 1 193 1 216 1 221 1 352 1 351 1 123 1 55 2 
360 1 361 2 315 1 226 1 203 2 292 1 294 1 274 2 132 1 11 2 371 1 137 4 234 2 47 1 325 1 191 1 74 1 192 1 216 1 352 2 55 2 238 1 
172 1 360 1 361 2 105 1 153 2 4 1 315 1 106 1 338 2 292 1 203 2 294 1 64 1 9 1 274 2 11 2 132 1 245 1 179 1 371 1 137 4 342 1 138 1 345 2 234 2 20 1 142 1 47 1 325 1 191 1 146 1 74 1 148 1 192 1 166 1 193 1 216 1 221 1 352 2 351 1 123 1 238 1 55 2 
101 1 360 1 361 1 315 1 226 1 292 1 203 1 294 1 64 1 274 1 132 1 11 1 179 1 371 1 137 3 251 1 234 1 376 1 47 1 325 1 191 1 74 1 349 1 166 1 216 1 221 1 352 2 238 1 55 2 
360 2 315 3 37 2 203 6 292 3 365 1 294 2 132 3 371 2 137 19 15 1 186 2 280 1 188 1 234 10 347 1 73 1 325 2 191 3 74 3 192 3 165 1 53 1 28 1 287 1 352 9 55 4 238 3 124 2 171 1 
1 1 102 2 360 3 315 3 37 2 203 4 292 2 365 2 228 1 157 1 294 3 66 1 132 3 371 3 137 26 247 1 186 4 280 1 188 2 234 12 73 2 325 3 191 3 74 2 192 2 165 1 53 2 28 1 30 1 352 14 238 2 55 6 124 1 171 1 
56 1 1 1 102 1 360 3 315 5 155 1 37 4 6 1 203 8 292 5 228 1 365 3 157 1 294 3 66 1 132 4 372 1 371 3 67 1 247 1 137 41 186 4 280 1 188 3 234 21 347 1 71 1 73 2 325 3 191 4 74 4 192 4 165 1 53 1 28 1 261 1 30 1 287 1 352 20 55 6 238 4 124 1 171 1 
56 1 1 1 102 2 360 4 315 5 155 1 37 4 6 1 203 7 292 4 228 1 365 3 157 1 294 4 66 1 132 4 372 1 371 4 67 1 247 1 137 38 186 4 280 1 188 3 234 18 347 1 71 1 73 2 325 4 191 4 74 3 192 4 165 1 53 1 28 1 261 1 30 1 287 1 352 20 55 8 238 3 124 1 171 1 
56 1 1 1 102 1 360 2 334 2 315 8 155 1 37 4 6 1 203 14 292 8 228 1 365 2 157 1 294 2 66 1 132 7 372 1 371 2 247 1 137 52 186 4 280 1 188 4 234 25 347 2 71 1 73 1 325 2 191 7 74 7 192 7 165 1 53 1 28 1 261 1 30 1 352 27 55 4 238 7 124 1 171 1 
108 1 300 1 52 1 163 1 97 1 362 1 70 1 198 1 290 1 160 1 
227 1 309 1 
52 1 254 1 163 1 140 1 97 1 362 1 288 1 198 1 160 1 
322 2 362 1 70 1 198 1 236 1 290 1 50 1 108 1 25 1 52 1 76 1 163 1 65 1 97 1 41 1 182 1 33 1 160 1 
322 2 362 1 70 1 198 1 236 1 290 1 50 1 108 1 25 1 52 1 76 1 163 1 65 1 97 1 41 1 182 1 33 1 160 1 
322 2 362 1 70 1 198 1 236 1 290 1 50 1 108 1 25 1 52 1 76 1 163 1 65 1 97 1 41 1 182 1 33 1 160 1 
252 1 60 1 14 1 
252 1 60 1 14 1 
370 1 318 1 
252 1 370 1 318 1 
117 1 190 1 
362 1 198 1 227 1 64 2 10 1 179 2 275 1 114 1 160 1 322 1 118 1 117 1 190 1 236 1 25 1 26 1 76 1 52 1 329 1 163 1 309 1 349 2 166 2 97 1 221 2 382 1 33 1 
60 1 14 1 
252 1 370 1 318 1 
99 1 80 1 356 1 360 1 35 1 4 2 154 1 106 1 226 1 338 1 64 2 294 1 129 1 371 1 137 2 138 2 92 2 345 1 234 1 20 1 47 1 23 1 325 1 164 1 166 2 216 1 218 1 221 2 352 1 351 2 55 2 
0 1 332 1 359 1 105 1 20 1 4 2 106 1 337 1 328 1 79 1 113 1 295 1 351 2 135 1 222 1 138 2 297 2 115 1 313 1 
0 1 359 1 4 1 20 1 337 1 106 1 328 1 350 1 79 1 113 1 295 1 351 1 135 1 222 1 138 1 297 2 313 1 
332 1 209 1 345 1 3 1 20 1 4 1 303 1 106 1 338 1 340 1 351 1 138 1 248 1 313 1 
0 1 332 1 359 1 20 1 4 1 337 1 106 1 328 1 79 1 113 1 295 1 351 1 135 1 222 1 138 1 297 2 115 1 313 1 
21 1 
65 1 22 1 282 1 319 1 44 1 194 1 355 1 
268 1 358 1 36 1 175 1 109 1 65 2 136 1 44 1 22 1 282 1 377 1 24 1 25 1 286 1 353 1 266 1 33 1 
196 1 105 1 3 1 153 3 4 3 199 2 106 3 338 3 339 2 292 2 65 8 112 2 250 2 116 2 345 10 20 4 19 6 22 8 74 2 75 1 213 1 25 5 353 4 351 3 32 2 266 4 123 2 33 5 355 1 268 12 270 1 358 6 126 2 315 2 36 3 175 5 368 6 90 2 132 2 133 2 317 2 373 2 138 3 44 2 320 2 45 1 233 1 282 9 377 4 191 2 147 3 286 4 381 1 194 1 
268 6 358 3 1 1 315 2 36 1 200 1 37 1 175 1 107 1 292 2 365 1 228 1 368 5 65 5 90 1 66 1 132 2 317 2 247 1 320 1 44 2 188 1 19 5 22 5 282 8 377 2 191 2 74 2 25 1 286 2 30 1 353 2 381 1 266 2 33 1 
333 1 315 2 155 1 5 1 6 1 292 1 64 1 159 1 179 1 317 2 342 1 320 1 184 1 251 1 22 2 282 2 377 1 25 1 349 1 286 1 166 1 261 1 263 1 221 1 353 1 266 1 330 1 33 1 
22 1 282 1 377 1 286 1 65 1 353 1 266 1 194 1 44 1 355 1 
268 10 358 5 19 5 315 2 22 5 282 5 339 1 191 2 74 2 292 2 368 5 65 5 132 2 317 2 320 1 
25 1 65 1 36 1 44 1 33 1 175 1 
271 1 2 1 3 2 4 4 36 2 106 1 175 4 338 1 340 1 90 2 12 1 138 4 45 2 345 1 233 1 20 1 22 2 282 2 303 1 306 1 377 2 25 3 286 1 31 1 353 2 351 4 266 2 381 2 33 3 
172 1 360 1 3 1 4 1 153 2 106 1 5 1 338 2 294 1 64 3 9 1 245 1 179 3 371 1 137 1 342 1 138 1 251 2 345 2 234 1 20 1 47 1 23 1 325 1 146 1 148 1 329 1 349 2 166 3 193 1 216 1 221 3 351 1 123 1 55 2 239 1 
268 4 358 2 19 2 22 2 71 1 282 1 377 1 368 2 286 1 65 4 90 1 353 1 266 1 381 1 44 2 
163 1 144 1 160 1 
163 1 190 1 70 1 302 1 160 1 
163 1 144 1 160 1 
163 1 144 1 160 1 
163 1 145 1 160 1 
163 1 145 1 160 1 
163 1 145 1 160 1 
163 1 160 1 
52 1 97 1 
56 1 360 2 102 1 234 4 315 1 71 1 155 1 325 2 6 1 292 1 203 3 294 2 192 2 261 1 371 2 372 1 137 8 352 4 238 1 55 4 
56 1 234 3 315 1 71 1 155 1 6 1 203 2 292 1 192 2 261 1 372 1 319 1 352 3 137 6 
360 1 234 2 315 1 325 1 191 1 292 1 74 1 203 2 294 1 192 1 132 1 217 1 371 1 352 2 137 4 55 2 238 1 
188 1 234 4 315 1 347 1 37 2 191 1 292 1 74 1 203 2 365 1 192 1 132 1 137 7 352 3 238 1 
56 1 102 2 360 2 334 1 315 3 155 1 37 2 6 2 203 9 292 3 294 2 132 2 372 1 371 2 137 23 188 2 234 12 120 1 347 1 71 1 325 2 191 2 74 2 192 5 261 2 29 1 352 11 238 4 55 4 
234 1 137 1 37 1 
188 1 137 1 352 1 
360 1 234 3 315 1 325 1 339 1 191 1 203 3 74 1 292 1 294 1 192 2 132 1 217 1 371 1 137 6 352 3 55 2 238 1 
1 1 360 1 315 2 37 1 292 2 203 2 365 1 228 1 294 1 132 2 66 1 371 1 137 12 247 1 188 1 234 6 325 1 191 2 74 2 192 1 28 1 30 1 352 6 238 1 55 2 
234 3 315 1 155 1 6 1 292 1 203 2 192 1 261 1 352 3 137 6 238 1 
56 1 102 1 360 1 234 2 325 1 6 1 203 2 294 1 192 1 261 1 29 1 372 1 371 1 352 1 137 3 238 1 55 2 
333 1 360 1 234 5 315 2 155 1 325 1 6 2 203 5 292 2 294 1 192 3 28 1 261 2 371 1 352 5 137 10 55 2 238 2 
360 1 315 1 325 1 203 1 294 1 28 1 132 1 371 1 352 2 137 2 55 2 238 1 
360 1 234 2 315 1 325 1 191 1 292 1 74 1 203 2 294 1 192 1 28 1 132 1 371 1 352 2 137 4 55 2 238 1 
102 1 360 3 234 2 325 3 6 1 203 2 294 3 192 1 28 1 29 1 261 1 287 1 371 3 137 3 352 1 55 6 238 1 
56 1 125 1 102 2 103 1 360 5 315 5 155 2 37 4 6 3 203 12 292 5 365 1 294 5 132 3 372 1 371 5 137 34 188 3 234 18 347 1 71 1 325 5 283 1 191 3 74 3 192 7 28 1 261 3 29 1 217 1 287 1 352 16 55 10 238 5 
56 1 1 1 360 1 315 1 155 1 37 1 6 1 292 1 203 2 365 1 294 1 371 1 372 1 137 8 188 1 234 4 71 1 325 1 192 2 28 1 261 1 352 4 55 2 
56 1 1 1 360 2 315 2 155 1 37 2 6 1 292 1 203 3 365 1 294 2 132 1 372 1 371 2 137 11 188 1 234 5 347 1 71 1 325 2 191 1 192 2 28 1 261 1 217 1 352 6 55 4 238 1 
56 1 1 1 360 3 102 1 315 3 155 1 37 1 6 1 292 3 203 4 365 1 228 1 294 3 132 2 66 1 372 1 371 3 137 19 247 1 188 1 234 10 71 1 325 3 191 2 74 2 192 3 28 1 261 1 30 1 217 1 352 9 238 1 55 6 
56 1 1 1 102 1 360 3 315 3 155 1 37 1 6 1 292 2 203 5 365 1 228 1 294 3 132 2 66 1 372 1 371 3 137 17 247 1 188 1 234 7 71 1 325 3 191 2 74 1 192 3 28 1 261 1 30 1 217 1 352 10 238 2 55 6 
56 1 1 1 360 1 315 1 155 1 37 1 6 1 292 1 203 2 365 1 294 1 371 1 372 1 137 8 188 1 234 4 71 1 325 1 192 2 28 1 261 1 352 4 55 2 
1 1 360 1 315 2 37 1 292 2 203 2 365 1 228 1 294 1 132 2 66 1 371 1 137 12 247 1 188 1 234 6 325 1 191 2 74 2 192 1 28 1 30 1 352 6 238 1 55 2 
56 1 1 1 360 4 102 2 315 3 155 1 37 1 6 1 292 2 203 5 365 1 228 1 294 4 66 1 132 2 372 1 371 4 137 18 247 1 188 1 234 8 71 1 325 4 191 2 74 1 192 3 28 1 261 1 30 1 217 1 352 10 238 2 55 8 
1 1 360 4 102 2 315 3 37 1 292 2 203 6 365 1 228 1 294 4 66 1 132 3 371 4 137 16 247 1 188 1 234 7 325 4 191 3 74 2 192 3 28 1 30 1 287 1 352 9 238 3 55 8 
56 1 234 4 315 1 155 1 6 3 292 1 203 6 192 3 261 3 372 2 137 7 352 3 238 3 
56 1 1 1 360 4 102 2 315 3 155 1 37 1 6 1 292 2 203 4 365 1 228 1 294 4 66 1 132 2 372 1 371 4 137 18 247 1 188 1 234 8 71 1 325 4 191 2 74 1 192 3 28 1 261 1 30 1 287 1 352 10 238 1 55 8 
64 1 329 1 166 1 104 1 221 1 243 1 259 1 
269 1 104 1 48 1 243 1 259 1 291 1 64 1 329 1 89 1 166 1 221 1 122 1 
340 1 345 1 3 1 20 1 4 1 303 1 319 1 351 1 106 1 138 1 338 1 
345 2 3 1 153 2 20 1 4 1 106 1 146 1 338 2 148 1 64 2 329 1 308 1 349 1 166 2 193 1 245 1 179 2 221 2 342 1 351 1 123 1 138 1 
4 1 153 1 106 1 338 1 244 1 64 2 245 1 179 1 342 1 138 1 45 1 345 1 20 1 148 1 349 1 308 1 329 1 166 2 221 1 351 1 
4 1 153 1 106 1 316 1 338 1 244 1 64 2 245 1 179 1 342 1 138 1 45 1 345 1 20 1 349 1 308 1 329 1 166 2 221 1 351 1 
3 1 241 1 4 3 153 1 199 1 106 1 175 1 338 1 65 1 112 1 138 3 44 1 45 1 250 1 345 4 374 1 20 1 147 1 25 2 351 3 123 1 33 2 170 1 
250 1 345 4 3 1 241 1 153 1 20 1 4 3 199 1 106 1 175 1 338 1 147 1 25 2 65 1 112 1 133 1 351 3 123 1 138 3 44 1 33 2 45 1 
38 1 20 1 4 1 351 1 106 1 138 1 
92 1 139 1 270 1 94 1 345 3 105 1 3 2 197 1 4 7 153 1 20 3 242 1 106 2 72 1 225 1 338 2 38 1 129 1 295 1 351 6 138 7 
56 1 105 1 4 1 153 2 155 1 106 1 338 2 6 1 203 2 292 1 294 2 64 2 9 1 11 1 245 1 342 1 345 2 20 1 162 1 71 1 308 1 349 1 166 2 261 1 216 2 221 2 351 1 352 3 123 1 80 1 172 1 360 2 361 1 315 1 226 1 274 1 179 2 371 2 372 1 137 6 138 1 234 3 142 1 47 2 325 2 146 1 148 1 329 2 192 2 193 1 55 4 
126 1 3 1 4 1 199 1 36 1 175 2 65 1 133 1 138 1 44 1 250 1 116 1 345 2 233 1 22 1 282 1 377 2 147 1 25 3 286 2 351 1 353 2 32 1 266 2 382 1 194 1 33 3 355 1 
250 1 270 1 345 2 196 1 105 1 4 2 153 1 20 2 106 1 338 1 38 1 351 2 138 2 
345 1 3 1 105 1 241 1 20 1 4 4 303 1 305 1 106 1 338 1 340 1 351 4 138 4 
139 1 94 1 255 1 345 1 4 2 153 1 20 2 301 1 106 1 338 1 204 1 351 2 138 2 45 1 
328 1 3 1 20 1 4 1 113 1 351 1 222 1 106 1 138 1 297 1 
345 1 105 1 4 2 20 1 106 1 338 1 164 1 129 1 351 2 295 1 138 2 
345 3 3 1 105 1 4 5 20 2 303 1 305 1 106 2 225 1 72 1 338 2 340 1 129 1 351 4 138 5 45 1 
345 3 3 1 105 1 4 5 20 2 303 1 258 1 305 1 106 2 72 1 338 2 340 1 129 1 351 4 138 5 45 1 
345 2 3 1 153 2 20 1 4 1 106 1 316 1 146 1 338 2 64 2 329 1 308 1 349 1 166 2 193 1 245 1 179 2 221 2 342 1 351 1 123 1 138 1 
139 1 270 1 94 1 345 1 197 1 4 1 153 1 20 2 106 1 338 1 351 1 138 1 45 1 
357 1 39 1 329 1 375 1 152 1 
357 2 17 1 256 1 375 2 61 1 199 1 146 1 25 2 39 1 329 1 65 1 193 1 220 1 181 1 342 1 382 1 44 1 33 2 152 2 
357 1 64 1 39 1 166 1 35 1 375 1 218 1 154 1 221 1 
39 1 256 1 220 1 
232 1 367 1 13 1 319 1 
232 1 367 1 279 1 312 1 346 1 13 1 364 1 
27 1 82 1 364 1 
232 1 279 1 257 1 324 1 346 1 281 1 364 3 95 1 284 2 367 1 312 3 13 1 
69 1 121 1 232 1 367 1 279 1 312 2 346 1 13 1 364 2 
0 1 232 1 187 1 279 1 235 1 312 1 346 1 364 1 222 1 95 1 297 1 
232 1 279 1 312 1 346 1 13 1 364 1 95 1 
367 1 279 1 312 1 346 1 13 2 364 1 95 1 
253 1 127 1 232 1 279 2 346 2 364 2 95 1 229 1 312 2 13 1 
173 1 232 2 279 1 346 1 235 1 364 3 95 1 176 1 121 2 367 1 312 3 13 1 169 1 
0 1 232 1 279 1 346 1 364 2 95 1 121 1 367 1 113 1 312 2 180 1 79 1 13 1 222 1 297 2 
69 1 232 2 279 2 346 2 235 1 364 4 95 1 176 1 121 2 367 1 312 4 13 1 185 1 
232 1 367 1 279 1 312 1 346 1 13 1 364 1 95 1 
232 3 257 1 279 1 281 1 346 1 235 1 364 4 176 1 284 1 121 2 367 2 54 1 312 4 13 2 
232 1 279 1 346 1 364 2 95 1 273 1 86 1 40 1 121 1 367 1 312 2 13 1 
232 1 279 1 257 2 281 1 346 1 364 3 95 1 284 2 367 1 312 3 264 1 13 1 
327 1 232 2 262 1 335 2 
310 1 279 1 312 1 346 1 364 1 95 1 
121 1 232 1 367 1 279 1 312 2 346 1 13 1 364 2 169 1 95 1 
285 1 
232 1 367 1 279 1 312 1 346 1 13 1 364 1 95 1 
284 1 121 1 232 1 367 1 279 1 312 3 346 1 13 1 364 3 169 1 95 1 
176 1 232 1 54 1 235 1 
232 1 13 1 

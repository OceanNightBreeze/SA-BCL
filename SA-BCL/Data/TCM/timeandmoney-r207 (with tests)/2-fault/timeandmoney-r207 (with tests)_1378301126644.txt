#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 119 117 135 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7581 | if (x) -> if (!x)
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 2 307 2 82 1 308 5 310 1 183 1 286 1 213 1 133 7 134 1 9 1 138 4 37 9 140 1 198 1 168 1 319 3 373 1 339 2 340 1 346 9 300 1 123 1 17 1 
352 2 307 2 82 1 308 5 310 1 183 1 286 1 213 1 133 7 134 1 9 1 138 4 37 9 140 1 198 1 168 1 319 3 373 1 339 2 340 1 346 9 300 1 123 1 17 1 
352 2 2 1 307 2 82 1 308 5 310 1 183 1 357 1 263 1 286 2 213 1 133 6 215 1 87 1 134 1 9 1 138 4 37 9 140 2 198 2 168 2 319 3 339 2 340 1 299 1 346 9 300 1 17 1 
352 2 2 1 307 2 82 1 308 5 310 1 183 1 357 1 263 1 286 2 213 1 133 6 215 1 87 1 134 1 9 1 138 4 37 9 140 2 198 2 168 2 319 3 339 2 340 1 299 1 346 9 300 1 17 1 
352 2 2 1 307 2 82 1 308 6 310 1 183 1 357 1 263 1 286 2 213 1 133 7 215 1 87 1 134 1 9 1 138 5 37 10 140 2 198 2 168 2 319 4 339 2 340 1 299 1 346 10 300 1 17 1 
352 1 2 1 307 2 82 1 308 4 310 1 183 1 357 1 263 1 286 2 213 1 133 4 215 1 87 1 134 1 9 1 138 3 37 7 140 2 198 2 168 2 319 2 339 2 299 1 346 7 300 1 17 1 
352 2 307 1 82 1 138 2 37 4 308 3 310 1 140 1 198 1 168 1 319 1 339 1 340 1 213 1 346 4 300 1 133 3 17 1 
351 1 193 1 307 1 2 1 308 1 37 2 125 1 198 1 168 1 263 1 339 1 213 1 286 1 346 2 300 1 17 1 
339 2 138 1 286 1 307 2 213 1 308 2 37 3 346 3 300 1 133 1 319 1 17 1 134 1 
297 1 153 1 170 1 
60 1 220 2 153 1 
359 1 194 1 152 2 112 2 77 2 102 2 89 2 249 2 
47 1 46 1 152 3 97 1 281 1 34 1 100 1 356 1 155 1 102 2 84 2 130 2 359 1 59 1 107 1 190 1 329 1 36 1 194 1 136 2 292 1 110 1 112 2 317 1 71 1 273 1 89 2 201 2 249 3 15 1 341 1 376 1 75 1 77 2 255 1 204 1 207 2 
359 1 152 1 30 1 112 1 245 1 246 1 77 1 102 1 89 1 249 1 
178 1 260 1 271 1 152 1 153 1 19 1 113 1 245 1 170 1 102 1 336 1 335 1 249 1 149 1 
178 1 271 2 152 1 153 1 112 1 19 1 113 1 245 1 170 1 102 1 335 2 89 1 249 1 77 1 149 1 
208 1 271 1 70 1 335 1 350 1 
208 1 179 1 271 2 153 1 70 1 277 1 170 1 335 2 
271 1 70 1 335 1 
208 1 271 1 152 1 112 1 245 1 246 1 229 1 102 1 335 1 89 1 249 1 359 1 30 1 77 1 
153 1 
208 1 271 2 153 1 70 1 277 1 199 1 170 1 335 2 
208 2 151 1 209 1 271 5 1 1 153 1 70 2 181 1 228 1 20 1 326 1 170 1 335 5 173 1 264 2 254 2 277 1 86 2 217 1 
297 1 194 1 
152 2 194 2 112 1 102 2 89 1 249 2 94 1 188 1 77 1 
31 1 175 1 121 1 
36 1 46 1 194 1 152 1 292 1 97 1 293 1 201 1 249 1 130 1 59 1 255 1 190 1 204 1 207 1 329 1 
270 2 152 5 194 1 112 4 126 1 274 1 102 5 336 1 89 1 249 5 188 1 77 4 347 1 16 1 
152 2 28 1 112 2 245 1 246 1 77 2 102 2 249 2 
36 1 46 1 270 1 292 1 97 1 152 2 112 1 102 1 201 1 249 2 130 1 59 1 31 1 77 1 255 1 347 1 190 1 204 1 329 1 207 1 
270 1 194 1 152 3 112 3 77 3 102 3 89 1 249 3 
152 1 112 1 245 1 246 1 77 1 102 1 249 1 
152 1 94 1 112 1 188 1 245 1 77 1 102 1 89 1 249 1 
178 1 46 1 48 1 47 1 97 1 152 4 19 1 100 1 356 1 155 1 102 3 5 1 84 1 130 1 359 1 59 1 188 1 190 1 329 1 36 1 270 1 271 1 194 1 136 2 292 1 110 1 112 3 71 1 113 1 245 1 273 1 89 2 335 1 201 1 249 4 15 1 341 1 376 1 77 3 255 1 347 1 149 1 204 1 207 1 
270 1 194 1 152 2 112 1 126 1 77 1 102 2 336 1 249 2 
178 1 48 1 271 1 270 2 152 3 153 1 19 1 112 3 245 1 113 1 102 3 89 1 335 1 249 3 188 1 77 3 347 1 149 1 349 1 
270 1 152 2 31 1 112 2 188 1 77 2 175 1 102 2 89 1 249 2 
36 1 46 1 194 1 152 1 97 1 292 1 201 1 249 1 130 1 59 1 255 1 190 1 204 1 207 1 329 1 
36 1 194 1 152 1 292 1 4 1 201 1 249 1 130 1 185 1 59 1 255 1 190 1 204 1 207 1 329 1 
49 1 100 1 128 1 356 1 157 1 84 4 62 1 314 1 165 1 241 1 136 2 368 1 110 1 71 1 318 1 115 1 200 1 273 1 15 1 31 2 376 2 75 2 175 2 121 2 
178 1 152 1 28 1 112 1 245 1 77 1 102 1 249 1 
187 1 98 1 
187 1 98 1 
137 1 377 1 
137 1 377 1 
137 1 377 1 
243 1 187 1 98 1 
278 1 187 1 98 1 
21 1 137 1 377 1 187 2 98 2 216 1 
243 1 187 1 98 1 
243 1 187 1 98 1 
187 1 98 1 191 1 
187 1 98 1 191 1 
187 1 98 1 191 1 
80 1 152 2 98 1 102 2 312 1 187 1 26 1 8 1 67 1 330 1 271 1 194 1 111 1 112 2 272 1 334 1 335 1 249 2 91 1 32 1 375 1 344 1 278 1 77 2 
330 2 331 1 271 2 153 1 242 1 111 3 272 2 98 2 41 1 335 2 21 1 42 1 344 2 187 2 26 1 43 1 8 2 303 1 267 2 
140 1 198 1 168 1 
351 1 198 1 168 1 
351 1 144 1 154 1 140 2 198 3 176 1 
351 1 144 1 154 1 140 1 198 2 367 1 
351 1 144 2 140 1 154 1 198 2 
80 1 208 4 18 1 151 1 1 2 261 1 153 2 353 2 181 3 128 1 232 1 157 1 58 2 60 1 264 1 22 1 86 1 365 1 67 1 332 1 271 5 220 3 241 1 70 1 318 1 334 1 170 1 335 5 143 1 254 1 277 1 259 2 
208 7 18 3 151 1 1 6 261 1 153 5 181 8 128 3 157 3 58 6 60 3 264 2 22 2 86 2 365 2 68 1 67 4 288 1 271 9 220 9 241 3 70 6 318 3 170 1 335 9 173 1 73 5 13 1 374 1 254 2 277 1 348 1 205 1 259 6 350 5 
208 2 18 1 1 2 153 3 353 1 181 3 128 1 232 1 157 1 58 2 60 2 264 1 22 1 86 1 365 1 67 1 271 3 241 1 220 4 318 1 170 1 335 3 143 1 173 1 254 1 259 2 
208 3 18 2 1 4 153 4 353 2 181 5 128 2 232 1 157 2 58 4 60 3 264 1 22 1 86 1 365 1 68 1 67 2 288 1 271 4 220 7 241 2 318 2 170 1 335 4 173 1 143 1 13 1 254 1 259 4 
297 1 292 1 172 1 
292 1 252 1 
156 1 
36 1 292 1 59 1 
292 1 366 1 
292 1 59 1 
36 1 177 1 292 3 59 1 371 1 172 2 
324 1 227 1 49 3 241 1 127 1 200 2 116 1 157 1 84 7 6 1 253 1 343 1 376 3 75 4 237 1 163 2 258 1 
324 1 227 1 49 3 241 1 127 1 200 2 116 1 157 1 84 7 6 1 253 1 343 1 376 3 75 4 237 1 163 2 258 1 
324 1 227 1 49 3 241 1 127 1 200 2 116 1 157 1 84 7 6 1 184 1 253 1 343 1 376 3 75 4 237 1 163 2 258 1 
49 2 51 1 127 1 129 1 356 1 54 1 84 6 237 1 163 1 136 2 110 1 38 1 116 2 200 1 273 1 117 1 343 1 15 1 253 1 119 1 376 3 75 3 122 1 258 1 
227 1 324 1 49 4 127 1 51 1 182 1 356 2 157 1 84 9 6 1 237 1 163 2 241 1 136 4 110 2 139 1 116 1 200 3 273 2 15 2 343 1 253 1 376 4 75 5 
351 1 307 1 308 1 284 1 210 1 56 1 130 1 360 1 213 1 286 1 362 1 133 1 66 1 287 1 88 1 37 2 140 1 198 2 168 1 11 1 201 1 339 1 346 2 300 1 255 1 323 1 204 1 17 1 207 1 176 1 
351 1 307 1 308 1 284 1 3 1 56 1 130 1 360 1 286 1 362 1 133 2 66 1 287 1 88 1 37 3 140 1 198 2 168 1 201 1 339 1 276 1 346 3 300 1 255 1 323 1 204 1 17 1 176 1 207 1 150 1 
351 1 308 1 3 1 56 1 130 1 360 1 286 1 362 1 133 2 287 1 88 1 37 2 140 1 198 2 168 1 201 1 346 2 300 1 255 1 323 1 204 1 17 1 207 1 150 1 176 1 
81 1 292 1 307 1 37 1 52 1 231 1 201 1 90 1 130 1 339 1 224 1 276 1 59 1 360 2 23 1 286 2 346 1 255 1 190 1 323 2 204 1 207 1 287 2 
351 1 307 1 284 1 3 1 210 1 56 1 130 1 360 1 213 1 286 1 362 1 66 1 287 1 88 1 37 1 140 1 198 2 168 1 201 1 339 1 346 1 255 1 323 1 204 1 207 1 176 1 
120 1 
178 1 33 1 1 1 180 3 181 1 235 3 85 1 86 1 196 3 245 1 335 4 336 1 247 2 249 1 342 5 254 1 149 1 260 1 151 1 152 1 153 1 306 1 19 1 102 1 57 1 159 1 60 2 264 1 266 1 363 1 164 2 271 4 167 1 109 2 70 5 113 1 170 1 171 1 320 1 222 2 29 1 277 2 
178 1 151 1 260 1 33 1 1 1 152 1 153 1 306 1 19 1 180 3 181 1 102 1 159 1 57 1 235 3 60 2 264 1 266 1 85 1 164 2 363 1 86 1 271 4 109 2 167 1 196 3 70 5 113 1 245 1 170 1 222 2 247 2 320 1 336 1 171 1 335 4 249 1 29 1 342 5 254 1 277 2 149 1 
178 1 1 1 180 2 181 1 235 2 86 1 196 2 245 1 336 1 335 4 247 2 249 1 250 1 342 4 254 1 149 1 151 1 260 1 152 1 306 1 153 1 19 1 99 2 102 1 57 1 264 1 265 1 162 2 266 1 363 1 164 2 271 4 220 2 70 4 113 1 170 1 171 1 29 1 277 2 
178 1 1 2 180 2 181 2 130 2 235 2 35 1 190 2 86 1 196 2 292 1 245 1 247 2 335 5 336 1 201 2 337 1 249 1 90 1 342 4 254 1 255 1 302 1 149 1 204 1 207 2 151 1 260 1 152 1 153 2 306 1 19 1 53 1 102 1 57 1 60 2 59 1 265 1 23 1 22 1 264 1 266 1 164 2 363 1 271 5 109 2 220 2 70 6 113 1 170 1 222 2 171 1 320 1 29 1 277 3 
178 1 260 1 152 1 306 1 19 1 180 1 102 1 57 1 266 1 363 1 271 3 70 2 113 1 245 1 199 1 336 1 171 1 335 3 249 1 342 2 277 1 149 1 
178 1 260 1 152 1 306 1 153 1 19 1 102 1 57 1 266 1 363 1 271 3 196 1 70 1 113 1 245 1 199 1 170 1 336 1 171 1 335 3 249 1 342 3 277 1 149 1 
178 1 260 1 152 1 306 1 153 1 19 1 180 1 102 1 57 1 235 1 266 1 363 1 271 3 196 1 70 2 113 1 245 1 199 1 170 1 336 1 171 1 335 3 249 1 342 3 277 1 149 1 
178 1 33 1 1 1 180 4 181 1 235 4 85 1 86 1 196 4 245 1 199 1 335 5 336 1 247 2 249 1 342 6 254 1 149 1 257 1 260 1 151 1 152 1 306 1 153 5 19 1 102 1 57 1 159 1 60 2 264 1 266 1 363 1 164 2 271 5 167 1 109 2 70 7 113 1 170 5 171 1 320 1 222 2 29 1 277 3 
178 1 1 1 180 2 181 1 235 2 86 1 196 2 245 1 336 1 335 4 247 2 249 1 342 4 254 1 149 1 151 1 260 1 152 1 306 1 153 2 19 1 102 1 57 1 60 2 264 1 265 1 266 1 363 1 164 2 271 4 220 2 109 2 70 4 113 1 170 1 320 1 171 1 222 2 29 1 277 2 
178 1 260 1 151 1 33 1 1 1 152 1 153 1 306 1 19 1 180 2 181 1 102 1 57 1 159 1 235 2 60 2 264 1 266 1 85 1 164 2 363 1 86 1 271 4 196 2 109 2 70 4 113 1 245 1 170 1 222 2 247 2 320 1 336 1 171 1 335 4 249 1 29 1 342 4 254 1 277 2 149 1 
178 1 260 1 151 1 33 1 1 1 152 1 153 1 306 1 19 1 180 2 181 1 102 1 57 1 159 1 235 2 60 2 264 1 266 1 85 1 164 2 363 1 86 1 271 4 196 2 109 2 70 4 113 1 245 1 170 1 222 2 247 2 320 1 336 1 171 1 335 4 249 1 29 1 342 4 254 1 277 2 149 1 
178 1 260 1 151 1 33 1 1 1 152 1 153 1 306 1 19 1 180 2 181 1 99 2 102 1 57 1 235 2 313 1 264 1 162 2 266 1 164 2 363 1 86 1 271 4 196 2 220 2 70 4 244 1 113 1 245 1 170 1 247 2 336 1 171 1 335 4 249 1 250 1 29 1 342 4 254 1 277 2 149 1 
227 1 324 1 49 2 100 1 356 1 157 1 6 1 84 6 62 1 237 1 163 1 136 2 241 1 194 2 110 1 71 1 200 2 273 1 297 1 31 1 15 1 253 1 376 3 75 3 175 1 121 1 
18 2 49 1 50 1 309 1 34 1 100 2 128 2 129 2 356 2 155 1 157 1 84 12 194 1 136 4 241 2 110 2 245 1 71 1 318 1 200 1 273 2 12 1 142 1 296 1 15 2 31 6 376 5 74 1 119 2 145 1 75 7 175 2 121 6 
46 1 97 1 152 2 34 1 100 1 356 1 102 1 155 1 233 1 84 2 130 1 358 1 59 1 190 1 329 1 36 1 270 1 194 1 292 1 136 2 110 1 112 1 293 1 71 1 273 1 201 1 249 2 92 1 15 1 376 1 145 1 75 1 77 1 175 1 255 1 347 1 204 1 207 1 
324 1 227 1 34 1 127 4 128 2 3 1 6 1 84 20 234 2 130 3 7 2 237 1 190 1 329 2 36 2 194 2 136 6 292 2 241 3 200 4 201 3 249 3 14 2 253 1 15 3 341 2 145 1 347 1 255 2 204 2 207 3 46 2 18 2 49 8 152 3 97 2 100 3 355 1 356 3 155 1 102 1 157 3 158 1 105 1 59 2 163 1 269 2 270 1 110 3 112 1 71 3 318 2 273 3 31 7 376 10 75 10 77 1 175 7 121 7 
280 1 152 1 281 2 34 1 283 1 100 2 3 1 356 2 102 1 155 1 84 2 130 7 59 2 23 1 62 1 190 2 239 1 270 1 292 3 136 4 110 2 112 1 71 2 11 1 273 2 295 1 248 1 201 8 249 1 90 1 118 1 15 2 376 1 75 1 77 1 255 2 148 1 204 2 207 8 
18 1 49 1 152 1 100 1 128 1 356 1 102 1 157 1 84 3 160 1 188 1 136 2 241 1 110 1 112 1 71 1 318 1 200 1 273 1 89 1 249 1 31 1 15 1 376 2 145 1 75 1 77 1 175 1 121 1 
49 1 136 2 241 1 110 1 127 1 71 1 100 1 128 1 356 1 273 1 84 2 31 1 15 1 62 1 75 2 314 1 175 1 121 1 
49 1 136 2 110 1 368 1 71 1 100 1 318 1 200 1 356 1 273 1 157 1 84 2 31 1 15 1 62 1 376 2 175 1 121 1 
18 1 49 2 127 1 100 1 128 1 356 1 157 1 84 4 62 1 241 1 136 2 110 1 71 1 318 1 200 1 273 1 15 1 31 2 376 2 75 2 175 2 121 2 
49 1 136 2 241 1 110 1 127 1 71 1 100 1 128 1 356 1 273 1 248 1 84 2 31 1 15 1 75 2 314 1 175 1 121 1 
49 1 136 2 110 1 368 1 71 1 100 1 318 1 200 1 356 1 273 1 248 1 157 1 84 2 31 1 15 1 376 2 175 1 121 1 
18 1 49 2 127 1 100 1 128 1 356 1 157 1 84 4 241 1 136 2 110 1 71 1 318 1 200 1 273 1 248 1 15 1 31 2 376 2 75 2 175 2 121 2 
18 1 49 2 136 2 241 1 110 1 127 1 71 1 318 1 100 1 200 1 128 1 356 1 273 1 157 1 84 4 31 2 15 1 376 2 75 2 175 2 121 2 
46 1 97 1 152 1 34 1 100 1 356 1 155 1 84 2 130 1 59 1 190 1 329 1 36 1 194 1 292 1 136 2 110 1 71 1 273 1 201 1 249 1 341 1 15 1 376 1 75 1 255 1 204 1 207 1 
152 1 34 1 100 1 356 1 155 1 4 1 84 2 185 1 130 1 59 1 161 1 190 1 329 1 36 1 194 1 292 1 136 2 110 1 71 1 273 1 201 1 249 1 15 1 376 1 75 1 255 1 204 1 207 1 
18 1 49 2 127 1 100 1 128 1 356 1 157 1 84 4 241 1 136 2 110 1 71 1 318 1 200 1 273 1 15 1 31 2 376 2 75 2 145 1 175 2 121 2 
46 1 18 1 49 2 97 1 152 1 127 1 100 1 128 1 356 1 157 1 84 4 130 1 59 1 329 1 36 1 241 1 292 1 136 2 110 1 71 1 318 1 200 1 11 1 273 1 201 1 249 1 14 1 31 2 341 1 15 1 376 2 75 2 175 2 121 2 255 1 204 1 207 1 
18 1 49 1 152 1 127 1 100 1 128 1 356 1 102 1 55 1 157 1 84 3 188 1 136 2 241 1 110 1 112 1 71 1 318 1 273 1 89 1 249 1 15 1 31 1 376 1 145 1 75 2 77 1 175 1 121 1 
18 3 49 5 309 1 127 2 354 1 182 1 128 3 129 3 356 2 157 3 84 25 328 4 291 1 136 4 135 1 241 3 110 2 114 1 221 1 318 3 200 3 273 2 202 1 298 1 117 2 15 2 376 13 119 2 75 12 78 1 301 2 226 1 
18 3 49 4 127 2 51 2 182 1 128 3 356 3 129 2 83 1 157 2 84 26 328 4 291 1 136 6 135 1 241 3 110 3 114 1 221 2 318 2 200 2 273 3 202 1 117 2 174 1 15 3 376 12 119 2 75 14 146 1 78 1 301 1 226 2 44 1 
324 1 227 1 18 4 49 7 325 1 309 1 354 1 127 3 51 1 182 1 128 4 129 4 356 3 83 1 157 5 6 1 84 41 328 4 237 1 163 1 291 1 136 6 135 1 241 5 110 3 114 1 221 1 318 4 200 4 273 3 202 1 174 1 117 3 253 1 15 3 376 21 119 3 75 20 146 1 78 1 301 1 226 2 44 1 
324 1 227 1 18 4 49 6 325 1 309 1 354 1 127 2 51 2 182 1 128 4 129 4 356 4 83 1 157 4 6 1 84 38 328 4 237 1 163 1 291 1 136 8 135 1 241 5 110 4 114 1 221 1 318 3 200 4 273 4 202 1 174 1 117 3 253 1 15 4 376 18 119 3 75 20 146 1 78 1 301 1 226 2 44 1 
324 3 227 3 18 5 49 12 309 1 51 1 127 5 182 1 128 5 129 3 356 2 83 1 157 8 6 3 84 52 328 4 237 3 163 3 291 1 135 1 136 4 241 8 110 2 114 1 221 1 318 5 200 7 273 2 12 1 202 1 174 1 117 2 253 3 15 2 376 24 119 3 75 28 146 1 78 1 301 1 226 1 44 1 
330 1 21 1 42 1 344 1 187 1 98 1 272 1 8 1 41 1 45 1 
91 1 278 1 
330 1 333 1 345 1 344 1 187 1 98 1 272 1 8 1 304 1 
243 1 65 1 
216 1 211 1 191 1 
330 1 331 1 271 1 153 1 242 1 111 2 272 1 98 1 41 1 335 1 21 1 42 1 344 1 187 1 26 1 43 1 8 1 267 1 
330 1 331 1 271 1 153 1 242 1 111 2 272 1 98 1 41 1 335 1 21 1 42 1 344 1 187 1 26 1 43 1 8 1 267 1 
330 1 331 1 271 1 153 1 242 1 111 2 272 1 98 1 41 1 335 1 21 1 42 1 344 1 187 1 26 1 43 1 8 1 267 1 
243 1 65 1 216 1 
243 1 65 1 216 1 
211 1 191 1 
216 1 211 1 191 1 
375 1 312 1 
208 1 80 1 152 2 98 1 102 2 312 1 187 1 315 1 8 1 267 1 67 1 331 1 330 1 271 1 194 1 111 1 112 2 272 1 334 1 335 1 249 2 91 1 32 1 375 1 344 1 278 1 77 2 
152 1 203 1 102 1 79 1 249 1 289 1 
351 1 88 1 140 1 198 2 168 1 285 1 3 1 11 1 201 2 141 1 130 2 362 1 255 1 108 1 323 1 66 1 204 1 176 1 207 2 
351 1 88 1 140 1 198 2 168 1 285 1 3 1 201 1 130 1 238 1 362 1 255 1 323 1 66 1 204 1 176 1 207 1 
81 1 292 1 40 1 201 1 130 1 90 1 59 1 23 1 255 1 190 1 108 1 323 1 204 1 207 1 
351 1 88 1 140 1 198 2 168 1 285 1 3 1 201 1 141 1 130 1 362 1 255 1 108 1 323 1 66 1 204 1 176 1 207 1 
61 1 
47 1 46 1 152 3 97 1 100 1 356 1 155 1 102 2 84 1 130 1 359 1 59 1 190 1 329 1 36 1 194 1 136 2 292 1 110 1 112 2 71 1 273 1 89 2 201 1 249 3 15 1 341 1 376 1 77 2 255 1 204 1 207 1 
151 1 220 4 1 2 153 4 181 1 170 2 337 1 58 2 60 2 264 1 22 1 254 1 163 1 86 1 259 2 
297 1 209 1 1 1 153 1 181 1 228 1 170 1 
151 1 1 1 153 2 181 1 60 1 264 1 86 1 271 1 220 1 109 1 70 1 170 1 222 1 320 1 335 1 254 1 277 1 
177 1 1 8 228 1 181 9 128 2 327 2 130 3 131 2 189 1 190 1 86 4 36 3 292 10 241 2 10 1 294 2 11 1 335 5 201 3 337 1 252 3 254 4 255 4 204 3 259 6 207 3 151 4 18 2 209 1 153 8 19 2 311 2 157 2 58 6 59 3 60 6 22 2 264 4 364 2 27 2 366 2 269 2 271 5 220 12 70 5 318 2 170 2 372 1 321 2 172 2 275 1 225 1 277 3 76 2 
151 1 1 1 135 1 220 2 153 1 181 1 129 1 58 1 117 1 60 1 264 1 119 1 254 1 86 1 259 1 
324 1 151 1 152 1 1 2 181 2 229 1 102 1 157 1 159 1 359 1 264 1 237 1 236 1 86 1 27 2 271 1 241 2 112 1 245 1 246 1 335 1 89 1 249 1 253 1 30 1 254 1 76 1 77 1 
151 1 209 1 1 1 153 1 228 1 181 1 170 1 264 1 254 1 86 1 
269 1 18 2 241 2 1 5 220 10 153 5 181 5 318 2 128 2 157 2 58 5 60 5 76 1 27 2 259 5 
271 1 153 1 70 1 277 1 170 1 335 1 
151 1 0 1 1 2 181 2 53 1 130 4 59 1 264 2 22 2 23 1 189 2 25 1 190 2 86 2 271 3 292 1 70 4 335 3 201 4 337 2 173 1 90 1 254 2 225 1 277 2 255 1 302 1 204 1 207 4 
344 1 361 1 8 1 
344 1 8 1 41 1 312 1 322 1 
344 1 361 1 8 1 
344 1 361 1 8 1 
344 1 169 1 8 1 
344 1 169 1 8 1 
344 1 169 1 8 1 
344 1 8 1 
187 1 98 1 
324 1 227 1 49 3 241 1 136 4 110 2 127 1 51 1 200 2 356 2 273 2 157 1 84 8 6 1 15 2 253 1 376 4 75 4 237 1 163 1 
227 1 324 1 49 2 241 1 200 2 157 1 6 1 84 6 297 1 253 1 376 3 75 3 237 1 163 1 
18 1 49 2 136 2 241 1 110 1 127 1 318 1 200 1 128 1 356 1 273 1 157 1 84 4 15 1 376 2 75 2 268 1 
117 1 119 1 376 1 75 1 129 1 84 2 
324 2 227 1 18 2 49 7 309 1 127 2 51 1 128 2 129 2 356 1 157 5 6 1 84 26 236 1 237 2 163 1 241 5 136 2 110 1 318 2 200 5 273 1 12 1 296 1 253 2 15 1 119 2 376 13 75 13 
376 1 129 1 84 1 
119 1 75 1 84 1 
269 1 18 1 49 3 136 2 241 1 110 1 127 1 318 1 128 1 200 2 356 1 273 1 157 1 84 6 15 1 376 3 75 3 268 1 
18 2 49 2 127 1 182 1 128 2 129 1 356 1 83 1 157 2 84 12 135 1 136 2 241 2 110 1 318 2 200 1 273 1 117 1 174 1 15 1 119 1 376 6 75 6 146 1 44 1 
324 1 49 2 241 1 127 1 200 1 157 1 84 6 253 1 376 3 75 3 237 1 
227 1 49 2 136 2 110 1 127 1 51 1 200 1 356 1 273 1 54 1 84 3 6 1 253 1 15 1 376 2 75 1 237 1 
324 1 49 5 136 2 241 2 110 1 127 2 182 1 200 3 356 1 273 1 157 2 84 10 15 1 253 2 376 5 75 5 236 1 237 2 
49 1 136 2 241 1 110 1 127 1 182 1 128 1 356 1 273 1 84 2 15 1 75 2 
18 1 49 2 136 2 241 1 110 1 127 1 318 1 182 1 200 1 128 1 356 1 273 1 157 1 84 4 15 1 376 2 75 2 
49 2 136 6 110 3 51 1 354 1 127 1 182 1 200 1 356 3 273 3 54 1 84 3 15 3 253 1 376 2 75 1 237 1 
324 1 227 1 49 6 127 3 354 1 51 1 182 1 129 1 356 4 54 1 157 2 84 15 6 1 236 1 237 2 268 1 241 2 136 8 110 4 38 1 200 3 273 4 117 1 15 4 253 2 376 8 119 1 75 7 
324 2 227 1 18 2 49 9 51 1 127 4 182 1 128 2 129 1 356 2 83 1 157 4 6 1 84 24 236 1 237 2 163 1 135 1 136 4 241 5 110 2 318 1 200 5 273 2 117 1 174 1 253 2 15 2 119 1 376 10 75 14 146 1 44 1 
324 1 227 1 18 2 49 4 51 1 127 1 182 1 128 2 129 1 356 3 83 1 157 2 6 1 84 17 237 1 163 1 268 1 135 1 136 6 241 3 110 3 318 1 200 3 273 3 117 1 174 1 253 1 15 3 376 7 119 1 75 10 146 1 44 1 
324 1 227 1 18 2 49 4 127 1 51 1 182 1 128 2 129 1 356 3 83 1 157 3 6 1 84 19 237 1 163 1 268 1 135 1 136 6 241 3 110 3 318 2 200 3 273 3 117 1 174 1 253 1 15 3 119 1 376 10 75 9 146 1 44 1 
324 1 227 1 18 2 49 5 51 1 127 2 182 1 128 2 129 1 356 3 83 1 157 2 6 1 84 17 237 1 163 1 268 1 135 1 136 6 241 3 110 3 318 1 200 3 273 3 117 1 174 1 253 1 15 3 119 1 376 7 75 10 146 1 44 1 
324 2 227 1 18 2 49 9 51 1 127 4 182 1 128 2 129 1 356 2 83 1 157 4 6 1 84 24 236 1 237 2 163 1 135 1 136 4 241 5 110 2 318 1 200 5 273 2 117 1 174 1 253 2 15 2 119 1 376 10 75 14 146 1 44 1 
18 2 49 2 127 1 182 1 128 2 129 1 356 1 83 1 157 2 84 12 135 1 136 2 241 2 110 1 318 2 200 1 273 1 117 1 174 1 15 1 119 1 376 6 75 6 146 1 44 1 
324 1 227 1 18 2 49 5 127 2 51 2 182 1 128 2 129 1 356 4 83 1 157 2 6 1 84 18 237 1 163 1 268 1 135 1 136 8 241 3 110 4 318 1 200 3 273 4 117 1 174 1 253 1 15 4 376 8 119 1 75 10 146 1 44 1 
18 3 49 6 127 3 354 1 51 2 182 1 128 3 129 1 356 4 83 1 157 2 84 16 135 1 136 8 241 3 110 4 318 2 200 3 273 4 117 1 174 1 15 4 376 7 119 1 75 9 146 1 44 1 
227 2 324 1 49 6 241 1 127 3 200 3 157 1 84 7 6 1 253 3 376 4 75 3 237 3 
324 1 227 1 18 2 49 4 127 1 354 1 51 2 182 1 128 2 129 1 356 4 83 1 157 2 6 1 84 18 237 1 163 1 135 1 136 8 241 3 110 4 318 1 200 3 273 4 117 1 174 1 253 1 15 4 376 8 119 1 75 10 146 1 44 1 
194 1 152 1 126 1 378 1 102 1 336 1 249 1 
69 1 194 1 152 1 126 1 72 1 102 1 336 1 249 1 103 1 378 1 279 1 124 1 
90 1 297 1 130 1 292 1 59 1 23 1 255 1 190 1 204 1 201 1 207 1 
36 1 270 1 194 1 292 1 152 2 97 1 112 1 102 1 201 1 249 2 130 1 59 1 77 1 255 1 190 1 204 1 329 1 207 1 
178 1 97 1 152 2 102 2 130 1 131 1 59 2 189 1 366 1 329 1 36 2 270 1 194 1 292 3 112 2 245 1 201 1 249 2 77 1 255 1 149 1 204 1 207 1 
178 1 152 2 102 2 4 1 130 2 131 1 59 2 189 1 366 1 329 1 36 2 270 1 194 1 292 3 112 2 370 1 245 1 201 2 249 2 77 1 255 1 149 1 204 1 207 2 
153 1 19 1 130 3 131 1 59 1 189 1 24 1 190 1 366 1 36 1 271 2 292 4 70 1 370 1 170 1 335 2 201 3 172 1 223 1 252 1 255 1 204 1 207 3 
36 1 271 2 292 4 153 1 70 1 19 1 370 1 170 1 335 2 201 3 172 1 130 3 131 1 59 1 252 1 189 1 255 1 190 1 364 1 204 1 366 1 207 3 
130 1 283 1 255 1 204 1 201 1 207 1 
177 1 36 1 292 3 281 1 283 1 3 1 230 1 11 1 295 1 201 7 338 1 130 6 118 1 59 2 255 3 190 2 256 1 148 1 204 2 239 1 207 7 
324 1 227 1 46 1 49 2 152 2 97 1 100 2 356 2 102 1 157 1 84 6 6 1 234 1 130 1 59 1 64 1 237 1 163 1 329 1 36 1 270 1 194 2 241 1 292 1 136 4 110 2 112 1 71 2 200 2 273 2 11 1 201 1 249 2 14 1 31 1 253 1 15 2 341 1 376 3 75 3 145 1 77 1 175 1 121 1 255 1 204 1 207 1 
208 1 151 2 209 1 1 1 153 1 19 1 181 1 228 1 311 1 327 1 130 1 264 2 190 1 86 2 364 1 271 3 292 2 70 2 170 1 335 3 321 1 201 1 172 1 252 1 254 2 225 1 277 1 207 1 
177 1 36 1 292 2 10 1 283 1 11 1 201 2 172 1 130 2 59 1 255 2 204 1 207 2 
292 1 197 1 370 1 11 1 201 4 130 4 90 1 59 1 23 1 255 1 190 1 204 1 207 4 
290 1 36 1 292 1 282 1 230 1 201 2 338 1 105 1 130 2 59 1 189 1 255 2 204 1 207 2 
130 1 351 1 88 1 198 1 168 1 255 1 190 1 204 1 201 1 207 1 
292 1 39 1 3 1 11 1 201 2 130 2 59 1 255 1 204 1 239 1 207 2 
292 3 197 1 11 1 295 1 201 5 90 1 130 4 59 2 23 1 189 1 255 2 190 1 148 1 204 2 239 1 207 5 
292 3 197 1 11 1 201 5 90 1 130 4 59 2 23 1 93 1 189 1 255 2 190 1 148 1 204 2 239 1 207 5 
36 1 270 1 194 1 292 1 152 2 112 1 102 1 4 1 201 1 249 2 130 1 59 1 77 1 255 1 190 1 204 1 329 1 207 1 
177 1 36 1 292 1 230 1 201 1 338 1 130 1 59 1 189 1 255 2 256 1 204 1 207 1 
194 1 316 1 63 1 147 1 96 1 
178 1 208 1 48 1 271 2 194 1 316 1 166 1 153 1 19 1 245 1 113 1 101 1 170 1 335 2 251 1 63 2 147 2 149 1 96 2 
316 1 147 1 203 1 96 1 79 1 289 1 
251 1 166 1 316 1 
263 1 339 1 307 1 213 1 308 1 37 3 346 3 300 1 133 1 183 1 17 1 
138 1 308 1 319 1 206 1 
308 1 300 1 
297 1 308 1 300 1 17 1 
339 1 307 1 308 1 37 1 346 1 300 1 17 1 
360 1 286 1 37 1 
218 1 307 1 308 1 37 3 263 2 339 1 106 1 213 1 186 1 346 3 300 1 17 1 
339 1 352 1 307 1 308 1 37 2 346 2 300 1 133 1 17 1 
307 1 138 1 37 1 308 1 310 1 140 1 198 1 168 1 339 1 213 1 346 1 
339 1 307 1 213 1 308 1 37 1 346 1 300 1 
339 1 307 1 213 1 37 1 346 1 300 2 17 1 
307 2 308 1 37 2 262 1 212 1 339 2 213 1 214 1 346 2 300 1 
339 1 9 1 138 1 307 1 213 1 308 2 37 3 346 3 300 1 133 2 319 1 183 1 17 1 
351 1 195 1 307 1 308 1 37 2 140 1 198 2 168 1 339 1 213 1 346 2 300 1 133 1 17 1 176 1 
339 2 352 1 340 1 138 1 307 2 213 1 308 2 37 4 346 4 300 1 133 2 319 1 17 1 
339 1 307 1 213 1 308 1 37 1 346 1 300 1 17 1 
218 1 307 1 138 1 37 4 308 3 319 1 263 1 339 1 186 1 346 4 300 2 133 2 17 2 206 1 
305 1 307 1 308 1 37 2 373 1 339 1 213 1 346 2 300 1 133 1 17 1 192 1 
218 1 307 1 308 1 37 3 369 1 263 2 339 1 213 1 186 2 346 3 300 1 17 1 
219 2 308 2 132 1 95 1 
240 1 339 1 307 1 213 1 37 1 346 1 
339 1 307 1 213 1 308 1 37 2 346 2 300 1 133 1 183 1 17 1 
104 1 
339 1 307 1 213 1 308 1 37 1 346 1 300 1 17 1 

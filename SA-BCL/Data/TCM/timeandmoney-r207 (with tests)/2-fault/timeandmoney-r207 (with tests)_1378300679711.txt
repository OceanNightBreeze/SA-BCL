#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 151 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 151 169 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V ERROR java.lang.NullPointerException 163 222 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 163 222 32 195 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 33 47 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z | OPERATOR | 2861 | != -> ==
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
115 1 149 2 242 1 75 1 310 1 245 2 221 1 220 1 100 3 80 9 291 6 225 1 127 1 252 2 133 9 104 2 295 1 153 2 107 2 321 1 38 5 18 1 108 1 350 2 372 1 207 4 353 1 157 1 
115 1 149 2 242 1 75 1 310 1 245 2 221 1 220 1 100 3 80 9 291 6 225 1 127 1 252 2 133 9 104 2 295 1 153 2 107 2 321 1 38 5 18 1 108 1 350 2 372 1 207 4 353 1 157 1 
115 1 149 2 242 1 75 1 310 1 245 2 221 1 220 1 100 4 80 10 291 7 225 1 127 1 252 2 133 10 104 2 295 1 153 2 107 2 321 1 38 6 18 1 108 1 350 2 372 1 207 5 353 1 157 1 
149 2 242 1 75 1 310 1 245 2 221 1 220 1 100 2 80 7 291 4 225 1 127 1 252 2 133 7 104 2 295 1 153 2 107 2 321 1 38 4 18 1 108 1 350 1 372 1 207 3 353 1 157 1 
252 1 133 4 115 1 104 1 295 1 149 1 153 1 38 3 75 1 18 1 245 1 350 2 207 2 221 1 220 1 100 1 80 4 291 3 
252 1 133 2 213 1 295 1 149 1 153 1 189 1 321 1 107 1 38 1 75 1 245 1 168 1 221 1 80 2 157 1 
133 3 295 1 153 2 107 1 38 2 242 1 75 1 245 2 207 1 221 1 100 1 80 3 291 1 
115 1 149 1 242 1 75 1 310 1 245 2 221 1 220 1 100 3 291 7 80 9 225 1 252 1 133 9 104 1 295 1 153 2 107 1 38 5 60 1 18 1 350 2 207 4 63 1 
115 1 149 1 242 1 75 1 310 1 245 2 221 1 220 1 100 3 291 7 80 9 225 1 252 1 133 9 104 1 295 1 153 2 107 1 38 5 60 1 18 1 350 2 207 4 63 1 
261 1 284 1 135 1 
211 2 284 1 311 1 
215 2 282 2 40 2 285 1 326 1 85 2 203 2 226 2 
209 1 92 1 329 2 184 1 304 1 281 1 282 3 94 1 5 2 6 1 359 1 243 1 215 2 193 2 285 1 78 1 31 1 247 1 124 1 249 1 226 2 229 2 365 1 294 1 139 1 176 1 85 2 203 2 231 1 204 2 346 1 347 1 179 1 40 3 144 1 326 1 266 1 
309 1 215 1 185 1 282 1 40 1 285 1 269 1 85 1 203 1 226 1 
135 1 282 1 103 1 318 1 188 1 73 1 309 1 284 1 215 1 361 1 8 1 40 1 312 1 288 1 
135 1 282 1 103 2 318 1 188 1 85 1 203 1 309 1 284 1 215 1 8 2 40 1 312 1 288 1 226 1 
8 1 103 1 151 1 305 1 
284 1 135 1 8 2 24 1 103 2 305 1 214 1 101 1 
8 1 103 1 214 1 
293 1 185 1 103 1 282 1 305 1 269 1 85 1 203 1 309 1 215 1 8 1 40 1 285 1 226 1 
284 1 
284 1 135 1 8 2 24 1 212 1 103 2 305 1 214 1 
146 2 135 1 116 1 24 1 103 5 317 1 305 2 95 1 152 1 214 2 192 2 371 1 284 1 8 5 244 2 41 1 246 1 235 1 375 1 
261 1 326 1 
282 2 85 1 203 1 215 2 40 2 234 1 112 1 326 2 226 1 
72 1 111 1 125 1 
92 1 229 1 329 1 365 1 282 1 94 1 294 1 67 1 204 1 179 1 243 1 40 1 78 1 247 1 326 1 249 1 
92 1 229 1 365 1 329 1 44 1 94 1 282 2 294 1 203 1 204 1 179 1 243 1 215 1 40 2 78 1 247 1 301 1 125 1 249 1 226 1 
215 3 282 3 40 3 301 1 326 1 85 1 203 3 226 3 
309 1 215 1 185 1 282 1 40 1 203 1 226 1 
309 1 215 1 282 1 40 1 234 1 112 1 85 1 203 1 226 1 
209 1 182 1 92 1 329 1 44 1 304 1 281 1 94 1 282 4 188 1 5 2 6 1 359 1 243 1 309 1 215 3 8 1 193 1 312 1 285 1 78 1 31 1 247 1 288 1 249 1 292 1 226 3 229 1 365 1 103 1 294 1 318 1 139 1 85 2 203 3 204 1 347 1 179 1 40 4 144 1 112 1 301 1 326 1 266 1 
73 1 215 2 282 2 40 2 301 1 326 1 15 1 203 1 226 1 
172 1 44 1 103 1 282 3 318 1 188 1 85 1 203 3 309 1 284 1 215 3 8 1 40 3 312 1 112 1 301 2 288 1 226 3 292 1 
282 2 85 1 203 2 72 1 215 2 40 2 112 1 301 1 125 1 226 2 
92 1 229 1 329 1 365 1 282 1 94 1 294 1 204 1 179 1 243 1 40 1 78 1 247 1 326 1 249 1 
92 1 229 1 329 1 93 1 365 1 282 1 174 1 94 1 204 1 179 1 243 1 40 1 78 1 247 1 326 1 
209 1 267 1 304 2 281 1 50 1 5 2 271 1 163 1 72 1 99 1 193 3 337 1 31 1 125 1 224 1 130 1 83 1 14 1 139 1 176 1 144 1 111 1 266 1 376 1 
309 1 215 1 282 1 40 1 288 1 201 1 203 1 226 1 
227 1 44 1 282 5 15 1 85 1 203 4 73 1 215 5 40 5 181 1 112 1 301 2 326 1 226 4 
309 1 215 2 185 1 282 2 40 2 201 1 203 2 226 2 
98 1 178 1 
98 1 178 1 
138 1 297 1 
138 1 297 1 
138 1 297 1 
98 1 178 1 29 1 
98 1 178 1 29 1 
98 1 178 1 122 1 
316 1 98 2 178 2 84 1 138 1 297 1 
98 1 178 1 29 1 
98 1 178 1 102 1 
98 1 178 1 102 1 
98 1 178 1 102 1 
316 1 23 2 239 2 103 2 199 1 254 2 70 1 307 1 202 2 190 1 98 2 16 2 178 2 86 1 284 1 8 2 42 3 289 1 339 1 
237 1 238 1 239 1 23 1 282 2 307 1 98 1 215 2 8 1 360 1 122 1 315 1 226 2 366 1 134 1 103 1 254 1 203 2 178 1 16 1 40 2 351 1 42 1 326 1 
252 1 104 1 149 1 
252 1 213 1 149 1 
278 1 165 1 104 2 213 1 149 3 96 1 
17 1 278 1 104 1 213 1 149 2 96 1 
278 2 104 1 213 1 149 2 96 1 
211 1 267 1 238 1 146 1 24 1 305 4 270 1 95 1 214 1 50 1 163 1 52 1 192 1 284 1 244 1 8 5 335 1 167 1 246 1 287 1 222 1 315 1 273 2 366 1 135 1 103 5 141 1 205 1 348 1 235 3 376 1 
8 2 103 2 151 1 313 1 305 2 169 1 250 1 
211 2 267 1 146 1 116 1 305 2 270 1 95 1 50 1 163 1 52 1 192 1 284 2 244 1 8 3 311 1 287 1 222 1 315 1 273 1 135 1 103 3 205 1 141 1 348 1 235 3 376 1 
210 1 211 3 267 2 146 1 116 1 270 1 305 3 95 2 50 2 163 2 52 2 192 1 284 2 244 1 8 4 311 1 9 1 287 1 222 2 315 2 132 1 273 2 135 1 103 4 205 1 141 1 348 2 235 5 376 2 
179 1 261 1 56 1 
179 1 170 1 
171 1 
179 1 78 1 
179 3 243 1 56 2 78 1 69 1 89 1 
179 1 243 1 78 1 
179 1 324 1 
33 1 303 1 267 1 253 1 83 2 304 1 161 1 176 3 177 1 370 1 142 2 333 1 109 1 193 4 337 3 113 1 
33 1 303 1 267 1 253 1 83 2 304 1 161 1 176 3 177 1 370 1 142 2 333 1 109 1 193 4 337 3 113 1 
33 1 303 1 267 1 253 1 83 2 304 1 161 1 176 3 177 1 370 1 142 2 333 1 109 1 193 4 337 3 113 1 197 1 
303 1 209 1 267 4 304 13 161 2 48 1 358 1 5 2 50 3 163 3 333 2 193 25 337 6 31 1 222 3 196 1 363 1 33 1 253 2 83 4 139 1 176 12 177 1 370 1 298 1 142 3 109 2 279 3 156 1 300 4 266 1 374 1 113 2 376 3 
33 1 209 2 267 1 253 1 83 3 304 2 161 1 25 1 48 1 139 2 176 4 177 1 5 4 370 1 142 2 7 1 333 1 109 1 193 6 337 4 31 2 266 2 113 1 
329 1 213 1 149 2 75 1 165 1 194 1 245 1 247 1 79 1 221 1 291 1 80 2 229 1 252 1 365 1 133 2 104 1 295 1 57 1 153 1 256 1 204 1 232 1 107 1 296 1 38 1 260 1 352 1 263 1 327 1 
0 1 329 1 213 1 149 2 75 1 165 1 121 1 194 1 245 1 247 1 79 1 221 1 80 3 291 2 36 1 229 1 252 1 365 1 133 3 104 1 57 1 153 1 256 1 204 1 107 1 296 1 38 1 352 1 263 1 327 1 
0 1 229 1 252 1 365 1 329 1 133 2 104 1 213 1 149 2 57 1 296 1 204 1 107 1 38 1 75 1 165 1 121 1 194 1 247 1 79 1 263 1 221 1 327 1 291 2 80 2 
92 1 183 1 160 1 329 1 150 1 194 2 245 1 78 1 247 1 338 1 80 1 36 1 229 1 365 1 133 1 57 2 153 1 204 1 107 2 179 1 88 1 61 1 263 2 
329 1 213 1 149 2 121 1 165 1 194 1 245 1 247 1 79 1 80 1 229 1 252 1 365 1 133 1 104 1 295 1 57 1 153 1 256 1 204 1 107 1 296 1 260 1 352 1 263 1 327 1 
198 1 
92 2 329 2 146 1 3 2 282 1 187 1 332 1 95 2 49 2 188 1 192 1 284 2 8 5 244 1 246 1 247 1 288 1 338 1 103 5 204 2 61 1 19 2 262 1 208 2 211 2 22 1 24 3 357 4 270 1 214 6 73 1 309 1 215 1 361 1 311 2 312 1 314 2 78 1 218 1 173 1 229 2 365 1 135 1 136 2 367 1 175 1 318 1 369 2 179 1 143 1 323 1 40 1 235 2 373 1 236 1 
3 1 24 1 212 1 357 2 103 3 367 1 282 1 175 1 318 1 214 2 188 1 143 1 73 1 309 1 215 1 8 3 361 1 312 1 40 1 218 1 288 1 236 1 
135 1 24 1 212 1 357 3 103 3 367 1 282 1 175 1 318 1 214 1 188 1 143 1 73 1 309 1 284 1 215 1 8 3 361 1 312 1 40 1 314 1 218 1 288 1 236 1 
3 1 24 1 212 1 282 1 357 3 214 2 188 1 73 1 309 1 215 1 284 1 361 1 8 3 312 1 218 1 314 1 288 1 135 1 367 1 103 3 175 1 318 1 143 1 40 1 19 1 236 1 
91 1 146 1 3 4 186 1 282 1 187 1 95 1 188 1 49 2 192 1 284 5 8 5 244 1 246 1 288 1 103 5 257 1 299 1 19 4 208 2 357 6 212 1 24 3 214 7 117 1 73 1 309 1 215 1 361 1 312 1 311 2 218 1 314 4 135 5 367 1 136 2 175 1 318 1 369 2 143 1 323 1 40 1 235 1 236 1 
211 2 22 1 146 1 3 2 24 2 282 1 357 4 187 1 214 4 95 1 49 2 188 1 73 1 192 1 309 1 284 2 215 1 361 1 244 1 8 4 311 2 312 1 314 2 246 1 218 1 288 1 135 1 136 2 367 1 103 4 175 1 318 1 369 2 143 1 323 1 40 1 19 2 235 1 208 2 236 1 
91 1 146 1 3 2 186 1 24 2 187 1 282 1 357 4 214 4 95 1 117 1 49 2 188 1 73 1 192 1 309 1 284 1 215 1 361 1 8 4 244 1 311 2 312 1 314 2 218 1 246 1 288 1 135 1 136 2 367 1 103 4 175 1 318 1 369 2 143 1 323 1 40 1 19 2 235 1 208 2 236 1 
91 1 146 1 3 2 186 1 24 2 187 1 282 1 357 4 214 4 95 1 117 1 49 2 188 1 73 1 192 1 309 1 284 1 215 1 361 1 8 4 244 1 311 2 312 1 314 2 218 1 246 1 288 1 135 1 136 2 367 1 103 4 175 1 318 1 369 2 143 1 323 1 40 1 19 2 235 1 208 2 236 1 
211 2 146 1 3 2 24 2 282 1 357 4 214 4 95 1 148 1 117 1 188 1 73 1 192 1 309 1 284 1 215 1 361 1 8 4 244 1 312 1 314 2 218 1 246 1 288 1 135 1 136 2 367 1 103 4 175 1 318 1 345 1 143 1 323 1 349 2 40 1 325 1 19 2 235 1 265 2 208 2 236 1 
91 1 146 1 186 1 3 3 24 2 187 1 282 1 357 5 95 1 214 5 117 1 49 2 188 1 73 1 192 1 309 1 284 1 215 1 244 1 361 1 8 4 311 2 312 1 246 1 218 1 314 3 288 1 135 1 136 2 367 1 103 4 175 1 318 1 369 2 257 1 143 1 323 1 40 1 19 3 235 1 208 2 236 1 
91 1 146 1 186 1 3 3 24 2 187 1 282 1 357 5 95 1 214 5 117 1 49 2 188 1 73 1 192 1 309 1 284 1 215 1 244 1 361 1 8 4 311 2 312 1 246 1 218 1 314 3 288 1 135 1 136 2 367 1 103 4 175 1 318 1 369 2 257 1 143 1 323 1 40 1 19 3 235 1 208 2 236 1 
211 2 22 1 146 1 3 2 24 2 282 1 357 4 214 4 95 1 188 1 73 1 192 1 309 1 284 1 215 1 361 1 244 1 8 4 312 1 314 2 246 1 218 1 288 1 135 1 136 2 367 1 103 4 175 1 318 1 143 1 323 1 349 2 40 1 325 1 19 2 235 1 265 2 208 2 236 1 
33 1 209 1 267 1 130 1 253 1 83 2 304 1 281 1 161 1 139 1 176 2 5 2 177 1 370 1 72 1 142 1 261 1 193 3 144 1 111 1 337 2 31 1 326 1 266 1 125 1 
209 2 64 1 267 2 184 1 304 8 281 1 5 4 50 2 163 2 72 2 359 1 76 1 193 14 337 1 31 2 248 1 222 2 125 10 363 1 35 1 83 1 139 2 176 6 298 1 276 1 279 3 144 2 111 10 300 3 326 1 266 2 376 2 
209 1 64 1 92 1 329 1 159 1 44 1 304 1 184 1 94 1 281 1 282 2 67 1 5 2 72 1 243 1 359 1 215 1 193 2 78 1 247 1 31 1 249 1 226 1 13 1 229 1 365 1 294 1 139 1 176 1 204 1 203 1 179 1 40 2 144 1 301 1 326 1 266 1 355 1 
92 1 329 1 44 1 184 1 282 3 281 3 94 2 5 6 50 2 243 2 193 15 336 1 337 4 247 2 249 2 253 1 294 2 154 2 204 1 203 1 347 2 110 1 111 5 301 1 266 3 64 1 209 3 267 3 304 8 161 1 118 2 163 2 72 5 359 1 215 1 78 2 31 3 222 2 223 2 125 5 226 1 33 1 128 2 229 1 365 2 83 4 139 3 176 7 177 1 370 1 142 1 179 2 40 3 144 3 326 1 376 2 
209 2 92 2 329 8 184 1 304 1 282 1 281 2 306 1 5 4 241 1 359 1 215 1 121 1 193 2 78 2 247 2 31 2 55 1 290 1 362 1 338 1 124 2 226 1 229 8 130 1 365 2 341 1 139 2 258 1 176 1 232 1 203 1 204 7 179 3 40 1 144 2 61 1 301 1 266 2 
64 1 209 1 267 1 282 1 281 1 139 1 176 2 5 2 85 1 163 1 203 1 322 1 215 1 193 2 40 1 144 1 112 1 31 1 222 1 266 1 226 1 
209 1 267 1 130 1 281 1 139 1 176 1 5 2 271 1 163 1 193 1 144 1 31 1 266 1 
209 1 130 1 83 1 304 2 281 1 139 1 5 2 50 1 72 1 99 1 193 2 144 1 337 1 111 1 31 1 266 1 125 1 376 1 
209 1 267 1 304 2 281 1 5 2 50 1 163 1 72 1 193 3 337 1 31 1 222 1 125 1 130 1 83 1 139 1 176 1 144 1 111 1 266 1 376 1 
209 1 267 1 281 1 139 1 306 1 176 1 5 2 271 1 163 1 193 1 144 1 31 1 266 1 
209 1 83 1 304 2 281 1 139 1 306 1 5 2 50 1 72 1 99 1 193 2 144 1 337 1 111 1 31 1 266 1 125 1 376 1 
209 1 267 1 304 2 281 1 306 1 5 2 50 1 163 1 72 1 193 3 337 1 31 1 222 1 125 1 83 1 139 1 176 1 144 1 111 1 266 1 376 1 
209 1 267 1 304 2 281 1 5 2 50 1 163 1 72 1 193 3 337 1 31 1 222 1 125 1 83 1 139 1 176 1 144 1 111 1 266 1 376 1 
209 1 92 1 329 1 184 1 304 1 94 1 282 1 281 1 5 2 243 1 359 1 193 2 78 1 247 1 31 1 249 1 229 1 365 1 294 1 139 1 176 1 204 1 347 1 179 1 40 1 144 1 326 1 266 1 
209 1 92 1 93 1 329 1 184 1 304 1 94 1 282 1 281 1 5 2 74 1 243 1 359 1 193 2 78 1 247 1 31 1 229 1 365 1 174 1 139 1 176 1 204 1 179 1 40 1 144 1 326 1 266 1 
209 1 64 1 267 1 304 2 281 1 5 2 50 1 163 1 72 1 193 3 337 1 31 1 222 1 125 1 83 1 139 1 176 1 144 1 111 1 266 1 376 1 
209 1 267 1 329 1 304 2 94 1 282 1 281 1 50 1 5 2 163 1 72 1 243 1 193 3 337 1 78 1 247 1 31 1 222 1 125 1 249 1 223 1 229 1 365 1 83 1 294 1 139 1 176 1 204 1 232 1 347 1 179 1 40 1 144 1 111 1 266 1 376 1 
209 1 64 1 267 1 304 1 281 1 282 1 5 2 50 1 163 1 215 1 193 2 31 1 222 1 226 1 255 1 139 1 176 1 85 1 203 1 40 1 144 1 112 1 266 1 376 1 
209 2 21 1 267 2 1 1 304 7 26 1 5 4 50 2 163 2 119 1 7 1 120 1 193 11 53 1 54 1 337 2 31 2 222 2 363 1 83 2 139 2 176 4 298 1 59 1 279 1 300 2 266 2 376 2 
209 2 21 2 267 3 304 14 48 1 26 1 50 3 5 4 308 1 163 3 7 1 120 2 193 24 337 1 53 4 54 1 31 2 32 1 222 3 195 1 363 2 37 1 83 1 139 2 176 10 343 1 275 1 259 1 59 1 279 2 300 2 266 2 376 3 
209 2 21 1 267 2 1 1 304 8 26 1 5 4 50 2 163 2 7 1 120 1 193 13 53 2 54 1 337 1 31 2 222 2 363 1 37 1 83 1 139 2 176 5 298 1 59 1 279 1 300 2 266 2 376 2 
209 2 21 1 267 2 1 1 304 8 26 1 5 4 50 2 163 2 7 1 120 1 193 13 53 2 54 1 337 1 31 2 222 2 363 1 37 1 83 1 139 2 176 5 298 1 59 1 279 1 300 2 266 2 376 2 
209 1 21 1 267 8 304 22 161 1 26 1 5 2 50 7 308 1 163 7 7 1 120 1 193 39 53 3 54 1 337 6 31 1 32 1 222 7 195 1 363 2 33 1 37 1 253 1 83 6 139 1 176 17 177 1 343 1 370 1 275 1 259 1 298 2 142 1 59 1 276 2 279 4 300 4 266 1 376 7 
316 1 98 1 178 1 16 1 239 1 23 1 254 1 70 1 339 1 105 1 
360 1 122 1 
98 1 178 1 16 1 180 1 45 1 239 1 23 1 254 1 90 1 
316 1 103 1 23 1 239 1 199 1 254 1 70 1 307 1 202 1 98 1 16 1 178 1 86 1 284 1 8 1 42 2 289 1 339 1 
316 1 103 1 23 1 239 1 199 1 254 1 70 1 307 1 202 1 98 1 16 1 178 1 86 1 284 1 8 1 42 2 289 1 339 1 
316 1 103 1 23 1 239 1 199 1 254 1 70 1 307 1 202 1 98 1 16 1 178 1 86 1 284 1 8 1 42 2 289 1 339 1 
84 1 29 1 30 1 
84 1 29 1 30 1 
102 1 274 1 
102 1 84 1 274 1 
134 1 351 1 
237 1 238 1 282 2 239 1 23 1 4 1 305 1 98 1 215 2 8 1 360 1 122 1 289 1 315 1 226 2 366 1 134 1 103 1 254 1 202 1 203 2 178 1 16 1 40 2 351 1 42 1 326 1 
29 1 30 1 
102 1 84 1 274 1 
64 1 356 1 209 1 329 2 2 1 184 1 304 1 281 1 282 2 5 2 359 1 215 2 216 1 193 2 78 1 247 1 31 1 290 1 124 2 129 1 229 2 365 1 341 1 139 1 176 1 204 2 179 1 40 2 144 1 266 1 43 1 
229 2 252 1 365 1 329 2 104 1 213 1 149 2 200 1 204 2 232 1 296 1 165 1 121 1 77 1 62 1 352 1 247 1 263 1 79 1 
229 1 252 1 329 1 365 1 104 1 213 1 149 2 200 1 204 1 296 1 165 1 121 1 28 1 352 1 247 1 263 1 79 1 
92 1 229 1 365 1 329 1 280 1 204 1 179 1 150 1 61 1 78 1 62 1 247 1 263 1 338 1 
229 1 252 1 365 1 329 1 104 1 213 1 149 2 200 1 204 1 296 1 165 1 121 1 77 1 62 1 352 1 247 1 263 1 79 1 
344 1 
261 1 371 1 284 1 135 1 41 1 235 1 95 1 
211 1 146 1 187 1 24 1 95 1 214 1 49 1 192 1 284 2 244 1 8 1 311 1 246 1 135 1 103 1 369 1 235 1 
92 1 329 1 330 1 146 3 95 5 188 2 50 2 52 4 243 1 192 3 284 5 244 3 8 5 246 3 247 1 11 1 251 2 56 2 103 5 154 2 204 1 348 4 66 1 65 2 211 8 267 2 268 2 24 3 270 2 214 5 163 2 311 4 78 1 123 2 170 3 222 2 82 2 229 1 365 2 135 1 179 6 277 2 235 8 373 1 89 1 376 2 
267 1 211 4 146 1 95 3 163 1 275 1 52 3 192 1 348 3 284 2 244 1 279 1 311 2 246 1 300 1 235 2 222 1 32 1 195 1 363 1 
33 1 267 1 251 1 253 1 146 1 186 1 103 1 161 1 47 1 95 2 50 1 192 1 8 1 244 1 246 1 235 2 
192 1 371 1 284 1 146 1 135 1 244 1 41 1 246 1 235 1 95 1 
251 1 267 1 211 2 95 1 50 1 163 1 52 1 348 1 284 1 311 1 235 2 222 1 376 1 
284 1 135 1 8 1 103 1 24 1 214 1 
92 2 329 4 146 2 116 1 24 2 270 2 214 4 95 2 192 2 244 2 8 3 78 1 246 1 247 1 12 2 338 1 173 1 229 4 365 1 103 3 368 1 137 1 204 4 140 1 179 1 61 1 262 1 235 2 373 2 
209 1 92 1 329 1 304 1 282 3 94 1 281 1 5 2 6 1 359 1 243 1 215 2 193 1 285 1 78 1 247 1 31 1 249 1 226 2 229 1 365 1 294 1 139 1 85 2 204 1 203 2 347 1 179 1 40 3 144 1 326 1 266 1 
211 4 146 1 135 2 270 1 95 2 142 1 52 2 348 2 192 1 284 4 244 1 311 2 246 1 235 1 373 1 
239 1 254 1 126 1 
239 1 254 1 126 1 
134 1 239 1 342 1 254 1 339 1 
239 1 254 1 126 1 
239 1 254 1 230 1 
239 1 254 1 230 1 
239 1 254 1 230 1 
239 1 254 1 
98 1 178 1 
33 1 209 2 267 1 253 1 83 2 304 2 161 1 48 1 139 2 176 3 5 4 177 1 370 1 142 1 193 5 337 3 31 2 266 2 113 1 
33 1 142 1 267 1 261 1 253 1 83 2 304 1 193 3 337 2 161 1 176 2 177 1 370 1 
209 1 267 1 83 1 304 2 139 1 176 1 50 1 5 2 163 1 193 3 337 1 10 1 31 1 266 1 222 1 376 1 
267 1 83 1 304 4 176 2 50 1 163 1 298 1 193 6 279 1 337 1 300 2 222 1 363 1 376 1 
209 2 267 3 304 10 161 2 48 2 50 2 5 4 163 2 76 1 164 1 193 18 337 7 31 2 222 2 33 1 253 2 83 5 139 2 176 8 177 1 370 1 298 1 142 1 276 1 279 2 300 2 266 2 113 2 376 2 
304 1 193 1 300 1 
193 1 279 1 176 1 
209 1 267 1 83 2 304 3 139 1 154 1 176 2 5 2 50 1 163 1 193 5 10 1 337 2 31 1 266 1 222 1 376 1 
209 1 267 2 83 1 304 6 139 1 176 4 343 1 50 2 5 2 163 2 275 1 259 1 7 1 193 10 279 1 337 1 31 1 300 1 222 2 32 1 266 1 195 1 376 2 363 1 
33 1 267 1 193 1 176 1 
209 1 253 1 83 1 304 2 161 1 48 1 139 1 176 1 177 1 5 2 370 1 164 1 193 3 337 2 31 1 266 1 113 1 
33 1 267 2 253 1 83 2 304 2 161 1 47 1 176 2 50 1 193 4 337 3 113 1 
209 1 267 1 139 1 176 1 5 2 163 1 7 1 193 1 31 1 266 1 
209 1 267 1 83 1 304 2 139 1 176 1 50 1 5 2 163 1 7 1 193 3 337 1 31 1 266 1 222 1 376 1 
209 3 253 1 1 1 83 1 304 2 161 1 48 1 139 3 176 1 5 6 164 1 7 1 193 3 337 2 31 3 266 3 113 1 
209 5 267 5 1 1 304 14 161 2 48 2 5 10 50 3 163 3 164 1 7 1 193 25 10 1 337 6 31 5 222 3 196 1 363 1 33 2 253 2 83 4 139 5 176 11 177 1 370 1 298 1 142 1 279 3 156 1 300 4 266 5 374 1 113 2 376 3 
33 1 209 1 267 1 253 1 83 2 304 2 161 1 139 1 176 3 177 1 5 2 370 1 142 1 7 1 193 5 279 1 337 2 31 1 300 1 266 1 195 1 363 1 
209 2 267 4 304 11 5 4 50 4 163 4 7 1 193 18 10 1 337 3 31 2 222 4 32 1 195 1 363 1 83 3 139 2 176 7 343 1 275 1 259 1 298 1 276 1 279 2 300 2 266 2 376 4 
209 3 267 3 304 8 161 1 48 1 5 6 50 2 163 2 7 1 193 14 10 1 337 3 31 3 32 1 222 2 195 1 363 1 33 1 253 1 83 3 139 3 176 6 177 1 343 1 370 1 275 1 259 1 142 1 279 1 300 1 266 3 376 2 
209 2 267 2 304 6 5 4 50 2 163 2 7 1 193 10 10 1 337 1 31 2 32 1 222 2 195 1 363 1 83 1 139 2 176 4 343 1 275 1 259 1 279 1 300 1 266 2 376 2 
33 1 209 1 267 1 253 1 83 2 304 2 161 1 139 1 176 3 177 1 5 2 370 1 142 1 7 1 193 5 279 1 337 2 31 1 300 1 266 1 195 1 363 1 
209 1 267 2 83 1 304 6 139 1 176 4 343 1 50 2 5 2 163 2 275 1 259 1 7 1 193 10 279 1 337 1 31 1 300 1 222 2 32 1 266 1 195 1 376 2 363 1 
209 3 267 2 304 7 48 1 5 6 50 2 163 2 7 1 193 11 10 1 337 1 31 3 32 1 222 2 195 1 363 1 83 1 139 3 176 4 343 1 275 1 259 1 279 1 300 1 266 3 376 2 
209 3 267 2 1 1 304 7 48 1 5 6 50 2 163 2 7 1 193 11 337 2 31 3 32 1 222 2 195 1 363 1 83 2 139 3 176 4 343 1 275 1 259 1 279 1 300 1 266 3 376 2 
33 2 267 3 253 2 83 4 304 2 161 2 47 1 176 4 50 1 177 1 370 1 142 1 193 6 337 7 113 3 
209 3 267 2 1 1 304 7 48 1 5 6 50 2 163 2 7 1 193 11 337 1 31 3 32 1 222 2 195 1 363 1 83 1 139 3 176 4 343 1 275 1 259 1 279 1 300 1 266 3 376 2 
73 1 215 1 282 1 40 1 331 1 326 1 15 1 
364 1 282 1 331 1 68 1 15 1 191 1 73 1 215 1 233 1 40 1 217 1 326 1 
179 1 261 1 229 1 92 1 365 1 329 1 61 1 78 1 247 1 338 1 204 1 
92 1 229 1 365 1 329 1 94 1 282 2 203 1 204 1 179 1 243 1 215 1 40 2 78 1 247 1 301 1 326 1 249 1 226 1 
229 1 365 1 329 1 94 1 282 2 203 2 204 1 179 3 243 2 309 1 215 2 324 1 87 1 312 1 40 2 78 2 247 1 288 1 301 1 12 1 326 1 249 1 226 1 
229 2 365 1 329 2 94 1 282 2 174 1 147 1 203 2 204 2 179 3 243 2 309 1 215 2 324 1 87 1 312 1 40 2 78 2 247 1 288 1 301 1 12 1 326 1 226 1 
92 1 229 3 365 1 329 3 135 1 103 2 56 1 147 1 214 1 188 1 71 1 204 3 179 4 243 1 284 1 324 1 8 2 87 1 39 1 78 1 247 1 12 1 170 1 
92 1 229 3 365 1 329 3 135 1 103 2 56 1 147 1 214 1 188 1 204 3 179 4 243 1 284 1 324 1 8 2 87 1 78 1 247 1 12 1 170 1 82 1 
229 1 365 1 329 1 247 1 55 1 204 1 
92 2 229 7 329 7 131 1 365 3 319 1 258 1 232 1 204 6 241 1 179 3 243 1 121 1 78 2 247 2 55 1 290 1 362 1 124 1 81 1 89 1 
209 2 64 1 267 1 329 1 304 1 94 1 281 2 282 2 161 1 5 4 72 1 243 1 215 1 193 3 337 2 78 1 247 1 31 2 125 1 223 1 249 1 226 1 33 1 128 1 229 1 253 1 365 1 83 2 294 1 139 2 176 2 177 1 370 1 203 1 232 1 204 1 347 1 142 1 179 1 40 2 144 2 111 1 301 1 326 1 266 2 43 1 
92 1 329 1 268 1 146 2 24 1 305 1 95 1 214 2 188 1 192 2 284 1 244 2 8 3 246 2 123 1 170 1 82 1 229 1 135 1 103 3 56 1 137 1 204 1 179 2 371 1 277 1 41 1 235 1 
229 2 329 2 365 2 56 1 232 1 204 2 179 2 243 1 78 1 11 1 247 1 55 1 89 1 
20 1 92 1 229 4 365 1 329 4 147 1 204 4 232 1 179 1 61 1 78 1 247 1 338 1 
229 2 329 2 131 1 365 2 319 1 46 1 240 1 204 2 179 1 243 1 166 1 78 1 247 1 12 1 
229 1 92 1 252 1 365 1 329 1 213 1 247 1 149 1 79 1 204 1 
129 1 229 2 329 2 365 1 232 1 204 2 179 1 121 1 78 1 247 1 290 1 
20 1 92 1 229 5 329 5 365 2 258 1 204 4 232 1 241 1 179 3 61 1 78 2 247 2 12 1 290 1 338 1 
20 1 158 1 92 1 229 5 329 5 365 2 204 4 232 1 241 1 179 3 61 1 78 2 247 2 12 1 290 1 338 1 
92 1 229 1 365 1 329 1 94 1 282 2 174 1 203 1 204 1 179 1 243 1 215 1 40 2 78 1 247 1 301 1 326 1 226 1 
229 1 329 1 131 1 365 2 319 1 204 1 179 1 243 1 78 1 247 1 12 1 81 1 89 1 
114 1 340 1 145 1 328 1 326 1 
340 1 114 2 228 1 328 2 145 2 135 1 103 2 305 1 283 1 318 1 188 1 320 1 309 1 284 1 8 2 312 1 288 1 326 1 292 1 
340 1 356 1 145 1 328 1 215 1 2 1 216 1 282 1 40 1 
340 1 228 1 283 1 
261 1 75 1 221 1 38 1 
75 1 133 1 245 1 221 1 153 1 80 1 38 1 
57 1 80 1 107 1 
133 3 295 1 153 1 321 2 38 1 51 1 155 1 75 1 272 1 245 1 221 1 80 3 
75 1 133 2 350 1 245 1 221 1 153 1 291 1 80 2 38 1 
252 1 133 1 104 1 295 1 149 1 153 1 38 1 245 1 207 1 220 1 80 1 
133 1 245 1 295 1 221 1 153 1 80 1 38 1 
75 1 133 1 245 1 295 1 221 2 153 1 80 1 
133 2 295 1 153 2 38 1 334 1 245 2 286 1 221 1 302 1 80 2 
133 3 295 1 153 1 38 2 75 1 310 1 245 1 207 1 221 1 100 1 80 3 225 1 291 2 
252 1 133 2 104 1 213 1 295 1 149 2 153 1 38 1 75 1 165 1 245 1 221 1 354 1 80 2 291 1 
133 4 115 1 295 1 153 2 38 2 75 1 245 2 350 1 207 1 221 1 100 1 80 4 291 2 
75 1 133 1 245 1 295 1 221 1 153 1 80 1 38 1 
133 4 153 1 321 1 106 1 38 3 155 1 75 2 272 1 245 1 207 1 221 2 100 1 291 2 80 4 
34 1 133 2 295 1 153 1 162 1 38 1 75 1 60 1 245 1 221 1 80 2 291 1 
155 2 75 1 133 3 272 1 245 1 295 1 221 1 153 1 97 1 80 3 321 2 38 1 
58 2 219 1 27 1 38 2 
133 1 245 1 295 1 264 1 153 1 80 1 
75 1 133 2 245 1 295 1 221 1 153 1 291 1 225 1 80 2 38 1 
206 1 
75 1 133 1 245 1 295 1 221 1 153 1 80 1 38 1 
133 3 295 1 153 1 321 1 38 1 75 1 245 1 221 1 291 1 80 3 225 1 
207 1 100 1 106 1 38 1 
221 1 38 1 

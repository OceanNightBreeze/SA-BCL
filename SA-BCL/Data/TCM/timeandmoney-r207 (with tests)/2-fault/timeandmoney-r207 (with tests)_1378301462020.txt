#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 44 (105,334,357) 
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 839 | 12 -> 0
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONDITION | 632 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
176 1 276 4 51 1 231 3 100 1 128 1 281 1 102 1 300 1 205 1 132 2 331 1 161 1 160 2 236 2 6 1 183 2 112 9 211 2 165 9 137 1 341 2 67 1 265 1 195 1 14 5 175 6 123 2 
176 1 276 4 51 1 231 3 100 1 128 1 281 1 102 1 300 1 205 1 132 2 331 1 161 1 160 2 6 1 183 2 236 2 112 9 211 2 165 9 137 1 341 2 67 1 265 1 195 1 14 5 175 6 123 2 
176 1 276 5 51 1 231 4 100 1 128 1 281 1 102 1 300 1 205 1 132 2 331 1 161 1 160 2 6 1 183 2 236 2 112 10 211 2 165 10 137 1 341 2 67 1 265 1 195 1 14 6 175 7 123 2 
176 1 276 3 51 1 231 2 100 1 128 1 281 1 102 1 300 1 205 1 132 2 331 1 160 2 6 1 183 2 236 1 112 7 211 2 165 7 137 1 341 2 67 1 265 1 195 1 14 4 175 4 123 2 
165 4 276 2 51 1 341 1 231 1 281 1 102 1 265 1 132 1 331 1 14 3 161 1 160 1 183 1 236 2 175 3 211 1 112 4 
165 2 51 1 214 1 137 1 341 1 281 1 102 1 132 1 14 1 195 1 183 1 108 1 196 1 112 2 211 1 123 1 
165 3 276 1 51 1 231 1 128 1 281 1 102 1 132 2 14 2 183 2 175 1 112 3 123 1 
276 4 51 1 231 3 128 1 281 1 102 1 300 1 132 2 331 1 234 1 160 1 161 1 183 2 236 2 112 9 211 1 165 9 216 1 341 1 67 1 265 1 14 5 175 7 123 1 
276 4 51 1 231 3 128 1 281 1 102 1 300 1 132 2 331 1 234 1 160 1 161 1 183 2 236 2 112 9 211 1 165 9 216 1 341 1 67 1 265 1 14 5 175 7 123 1 
23 1 172 1 77 1 
77 1 347 2 249 1 
277 2 171 2 13 2 72 2 315 2 351 2 139 1 244 1 
277 3 32 1 229 2 201 1 351 2 232 1 333 1 286 2 287 2 184 1 212 1 337 1 289 1 136 1 63 1 237 1 314 1 84 1 168 1 315 2 121 2 66 1 169 2 240 1 190 1 139 1 88 1 264 1 266 1 140 1 371 1 171 2 13 2 72 3 293 1 15 1 244 1 
277 1 171 1 13 1 72 1 315 1 351 1 21 1 342 1 336 1 244 1 
277 1 311 1 351 1 77 1 219 1 342 1 31 1 285 1 19 1 172 1 72 1 307 1 213 1 124 1 
277 1 315 1 351 1 77 1 219 1 342 1 171 1 31 1 13 1 19 1 172 1 72 1 307 1 213 2 124 2 
12 1 145 1 210 1 213 1 124 1 
12 1 172 1 375 1 77 1 318 1 210 1 213 2 124 2 
210 1 213 1 124 1 
277 1 315 1 351 1 342 1 171 1 18 1 12 1 13 1 72 1 21 1 213 1 336 1 124 1 244 1 
77 1 
12 1 172 1 77 1 318 1 96 1 210 1 213 2 124 2 
185 1 339 1 125 2 119 1 203 1 77 1 318 1 343 1 156 2 374 2 12 2 254 1 172 1 268 1 41 1 323 1 213 5 210 2 124 5 
32 1 277 2 315 1 351 1 169 1 232 1 190 1 88 1 69 1 266 1 140 1 345 1 13 1 72 2 293 1 15 1 20 1 286 1 287 1 212 1 
23 1 139 1 
277 2 49 1 315 1 351 2 1 1 139 2 171 1 13 1 72 2 
345 1 43 1 61 1 
277 1 32 1 169 1 261 1 232 1 190 1 139 1 88 1 140 1 266 1 72 1 293 1 286 1 15 1 287 1 212 1 
277 5 49 1 97 1 315 4 351 5 139 1 69 1 171 1 251 1 143 1 285 1 13 4 72 5 20 2 
277 2 303 1 13 2 72 2 315 2 351 2 342 1 336 1 
277 3 171 1 13 3 72 3 315 3 351 3 20 1 139 1 
277 1 13 1 72 1 315 1 351 1 342 1 336 1 
277 1 49 1 171 1 13 1 72 1 315 1 351 1 1 1 342 1 
32 1 49 1 277 4 229 2 201 1 351 3 232 1 333 1 19 1 20 1 286 1 307 1 287 1 213 1 184 1 212 1 289 1 136 1 63 1 314 1 84 1 168 1 315 3 121 1 66 1 169 1 190 1 139 1 88 1 219 1 342 1 69 1 266 1 140 1 222 1 171 2 31 1 13 3 72 4 293 1 15 1 144 1 124 1 244 1 
277 2 143 1 285 1 13 1 72 2 315 1 351 2 20 1 139 1 
49 1 277 3 315 3 179 1 351 3 77 1 342 1 219 1 69 1 222 1 171 1 31 1 19 1 13 3 72 3 20 2 307 1 213 1 124 1 
49 1 277 2 315 2 351 2 43 1 171 1 13 2 345 1 72 2 20 1 
277 1 32 1 169 1 232 1 190 1 139 1 88 1 140 1 266 1 72 1 293 1 286 1 15 1 287 1 212 1 
277 1 32 1 169 1 127 1 139 1 88 1 370 1 140 1 266 1 72 1 293 1 286 1 15 1 287 1 212 1 
229 2 201 1 55 1 333 1 359 1 113 1 61 2 136 1 63 1 312 1 314 2 168 1 187 1 121 4 66 1 369 1 43 2 292 1 371 2 321 1 345 2 275 1 146 1 197 1 
277 1 303 1 13 1 72 1 315 1 351 1 342 1 219 1 
242 1 357 1 
242 1 357 1 
334 1 44 1 
334 1 44 1 
334 1 44 1 
242 1 357 1 153 1 
242 1 105 1 357 1 
242 1 334 1 357 1 44 1 
242 1 357 1 153 1 
242 1 357 1 153 1 
242 1 357 1 271 1 
242 1 357 1 271 1 
242 1 357 1 271 1 
277 2 297 1 351 2 299 1 204 1 280 1 283 1 131 1 105 1 78 1 305 1 255 1 357 1 213 1 288 1 315 2 138 1 139 1 68 1 242 1 13 2 72 2 227 1 124 1 
310 1 361 1 297 2 313 1 230 1 189 1 138 3 77 1 204 2 242 2 104 2 131 2 133 1 357 2 255 2 227 1 159 1 213 2 124 2 
341 1 160 1 211 1 
341 1 108 1 211 1 
199 1 79 1 341 3 160 2 108 1 248 1 
164 1 79 1 341 2 160 1 108 1 248 1 
79 2 341 2 160 1 108 1 248 1 
277 1 278 1 125 1 77 2 5 1 336 1 288 1 339 3 342 1 12 4 13 1 347 3 146 1 244 1 348 2 349 1 351 1 156 1 249 1 356 1 55 1 18 1 21 1 213 5 210 1 312 1 119 1 315 1 260 2 369 1 318 1 319 1 372 1 374 1 171 1 172 1 72 1 268 2 272 2 124 5 
277 1 278 1 125 1 77 2 336 1 288 1 339 3 10 2 342 1 13 1 12 4 347 3 145 2 146 1 244 1 348 2 349 1 351 1 202 1 156 1 249 1 55 1 18 1 21 1 213 5 210 3 312 1 115 1 315 1 119 1 369 1 318 1 319 1 372 1 171 1 374 1 172 1 72 1 268 2 272 2 124 5 
348 2 277 1 349 1 278 1 125 1 351 1 203 1 77 2 249 1 156 1 356 1 18 1 55 1 21 1 5 1 213 3 336 1 288 1 312 1 339 3 315 1 260 1 369 1 342 1 319 1 171 1 374 1 13 1 12 2 72 1 172 1 268 2 272 2 347 3 146 1 244 1 124 3 
277 1 278 2 125 1 77 4 327 1 5 1 336 1 288 2 339 5 342 1 12 3 13 1 347 7 16 1 146 2 198 1 244 1 348 4 349 1 203 1 351 1 156 1 249 3 356 1 55 2 18 1 21 1 213 4 312 2 315 1 260 2 369 2 319 1 374 1 171 1 72 1 268 4 172 1 272 4 124 4 
23 1 293 1 295 1 
166 1 293 1 
367 1 
266 1 293 1 15 1 
293 1 120 1 
293 1 15 1 
266 1 52 1 293 3 306 1 15 1 295 2 
314 3 363 1 75 1 121 7 250 2 292 2 371 4 55 1 80 1 56 1 58 1 207 1 294 1 208 1 146 1 197 3 245 1 
314 3 363 1 75 1 121 7 250 2 292 2 371 4 55 1 80 1 56 1 58 1 207 1 294 1 208 1 146 1 197 3 245 1 
314 3 363 1 75 1 121 7 262 1 250 2 292 2 371 4 55 1 80 1 56 1 58 1 207 1 294 1 208 1 146 1 197 3 245 1 
278 3 279 4 75 2 229 2 201 1 99 1 250 3 55 4 80 1 333 1 207 1 58 2 56 2 208 1 360 1 256 1 136 1 167 1 312 3 363 1 314 15 168 1 26 1 121 31 368 1 369 3 170 3 292 5 371 16 11 1 294 5 146 4 197 10 245 2 
229 4 75 1 201 2 2 1 250 2 55 1 333 2 80 1 58 1 56 1 208 1 360 1 136 2 314 4 363 1 168 2 121 9 292 3 371 5 193 1 294 1 146 1 197 4 245 1 
32 1 199 1 51 1 149 1 151 1 76 1 325 1 281 1 102 1 132 1 332 1 358 1 286 1 160 1 287 1 183 1 108 1 211 1 112 2 165 2 257 1 114 1 169 1 341 2 88 1 14 1 322 1 47 1 175 1 123 1 
199 1 32 1 50 1 149 1 151 1 247 1 325 1 281 1 102 1 132 1 332 1 358 1 286 1 160 1 287 1 183 1 108 1 211 1 112 3 110 1 165 3 257 1 169 1 341 2 88 1 14 1 322 1 47 1 175 2 123 1 
32 1 199 1 50 1 151 1 247 1 325 1 281 1 102 1 332 1 358 1 286 1 287 1 160 1 108 1 112 2 211 1 165 2 257 1 169 1 341 2 88 1 14 1 322 1 175 2 123 1 
32 1 200 1 151 2 301 1 132 1 81 1 286 1 287 1 183 1 212 1 112 1 110 1 165 1 163 1 257 2 169 1 88 1 194 1 322 2 293 1 15 1 95 1 123 2 
32 1 199 1 50 1 51 1 149 1 151 1 76 1 325 1 132 1 332 1 358 1 286 1 160 1 287 1 183 1 108 1 211 1 112 1 165 1 257 1 169 1 341 2 88 1 322 1 47 1 123 1 
111 1 
32 1 277 1 33 2 125 1 36 1 77 2 328 4 284 2 285 1 81 1 335 2 286 2 287 2 339 2 340 1 88 1 342 1 92 1 293 1 94 1 15 1 347 2 148 2 351 1 249 2 156 1 301 1 54 1 302 2 19 1 307 1 210 6 213 5 212 2 162 1 311 1 119 1 217 1 169 2 318 3 263 1 317 1 319 1 219 1 30 2 374 1 31 1 172 1 268 2 72 1 122 1 224 1 174 2 379 1 124 5 
277 1 311 1 340 1 217 1 351 1 318 1 317 1 328 2 342 1 219 1 284 1 31 1 19 1 285 1 72 1 224 1 307 1 96 1 210 2 213 3 162 1 124 3 
277 1 148 1 351 1 77 1 328 3 285 1 19 1 307 1 210 1 162 1 213 3 311 1 340 1 217 1 317 1 318 1 219 1 342 1 31 1 72 1 172 1 224 1 96 1 124 3 
277 1 148 1 351 1 77 1 328 3 284 1 285 1 19 1 307 1 162 1 213 3 210 2 311 1 340 1 217 1 318 1 317 1 219 1 342 1 30 1 31 1 72 1 172 1 224 1 96 1 124 3 
277 1 33 2 125 1 77 5 328 6 37 1 284 4 285 1 335 2 339 1 340 1 9 1 342 1 92 1 94 1 96 1 48 1 148 4 351 1 352 1 156 1 249 2 304 1 302 2 19 1 307 1 213 5 210 7 162 1 311 1 119 1 217 1 317 1 318 3 219 1 30 4 31 1 374 1 72 1 172 5 268 1 224 1 174 2 124 5 
277 1 33 2 125 1 77 2 328 4 284 2 285 1 335 2 339 1 340 1 342 1 92 1 94 1 347 2 148 2 351 1 156 1 249 2 302 2 19 1 307 1 213 4 162 1 210 4 311 1 119 1 217 1 317 1 318 2 219 1 30 2 31 1 374 1 72 1 268 1 172 1 224 1 122 1 174 2 124 4 
148 2 277 1 33 2 125 1 351 1 352 1 77 1 328 4 37 1 249 2 156 1 284 2 302 2 304 1 285 1 19 1 335 2 307 1 210 4 162 1 213 4 311 1 339 1 340 1 119 1 217 1 318 2 317 1 219 1 342 1 30 2 92 1 374 1 31 1 172 1 268 1 72 1 224 1 174 2 94 1 124 4 
148 2 277 1 33 2 125 1 351 1 352 1 77 1 328 4 37 1 249 2 156 1 284 2 302 2 304 1 285 1 19 1 335 2 307 1 210 4 162 1 213 4 311 1 339 1 340 1 119 1 217 1 318 2 317 1 219 1 342 1 30 2 92 1 374 1 31 1 172 1 268 1 72 1 224 1 174 2 94 1 124 4 
148 2 277 1 125 1 351 1 352 1 77 1 328 4 156 1 284 2 285 1 19 1 106 1 335 2 4 1 307 1 210 4 162 1 213 4 311 1 118 2 339 1 364 1 340 1 119 1 217 1 318 2 317 1 219 1 342 1 70 2 30 2 92 1 374 1 31 1 172 1 268 1 72 1 224 1 174 2 347 2 124 4 
277 1 148 3 33 2 125 1 351 1 352 1 77 1 37 1 328 5 249 2 156 1 284 3 302 2 304 1 285 1 19 1 335 2 307 1 162 1 213 4 210 5 311 1 339 1 119 1 340 1 217 1 318 2 317 1 219 1 342 1 30 3 92 1 374 1 31 1 172 1 268 1 72 1 224 1 174 2 94 1 48 1 124 4 
277 1 148 3 33 2 125 1 351 1 352 1 77 1 37 1 328 5 249 2 156 1 284 3 302 2 304 1 285 1 19 1 335 2 307 1 162 1 213 4 210 5 311 1 339 1 119 1 340 1 217 1 318 2 317 1 219 1 342 1 30 3 92 1 374 1 31 1 172 1 268 1 72 1 224 1 174 2 94 1 48 1 124 4 
148 2 277 1 125 1 351 1 77 1 328 4 156 1 284 2 285 1 19 1 335 2 307 1 210 4 162 1 213 4 311 1 118 2 339 1 364 1 340 1 119 1 217 1 318 2 317 1 219 1 342 1 70 2 30 2 92 1 374 1 31 1 172 1 268 1 72 1 122 1 224 1 174 2 347 2 124 4 
229 2 75 1 201 1 250 1 55 1 80 1 333 1 208 1 113 1 61 1 136 1 63 1 363 1 314 3 23 1 168 1 121 6 66 1 139 2 43 1 292 2 371 3 345 1 197 2 146 1 245 1 
278 2 17 1 279 3 229 4 201 2 181 1 55 1 333 2 61 11 289 1 136 2 167 1 63 2 237 1 312 1 314 6 168 2 26 1 290 1 121 14 66 1 369 2 139 1 170 3 43 4 292 1 371 8 345 11 93 1 74 1 294 1 197 2 146 2 
32 1 277 2 229 2 201 1 351 1 232 1 333 1 286 1 20 1 287 1 212 1 308 1 289 1 136 1 63 1 237 1 314 1 168 1 315 1 188 1 121 2 169 1 66 1 261 1 190 1 139 1 88 1 43 1 89 1 69 1 266 1 140 1 371 1 13 1 72 2 293 1 93 1 15 1 
277 3 32 2 278 2 75 1 229 6 232 2 80 1 333 3 134 1 286 3 287 3 289 1 136 3 237 1 8 2 186 1 84 2 85 1 190 2 139 2 88 2 43 7 292 4 140 2 13 1 345 7 93 1 293 2 46 2 15 2 294 4 146 3 197 8 245 1 50 1 351 1 201 3 250 1 55 3 20 1 208 1 212 1 61 7 63 3 312 2 363 1 314 10 24 2 168 3 315 1 121 20 169 3 66 3 369 2 69 1 266 2 371 10 223 2 72 3 
277 1 32 2 50 1 229 4 98 1 351 1 201 2 154 1 301 1 333 2 81 1 20 1 286 8 287 8 109 1 212 2 113 1 337 2 289 1 136 2 63 2 114 1 237 1 314 1 168 2 315 1 121 2 169 7 66 2 218 1 88 2 221 1 241 1 371 1 13 1 72 1 293 3 15 2 324 1 
49 1 277 1 278 1 229 2 201 1 351 1 55 1 333 1 61 1 136 1 63 1 312 1 314 2 168 1 315 1 121 3 66 1 369 1 43 1 292 1 371 1 171 1 91 1 345 1 13 1 72 1 93 1 197 1 146 1 
136 1 63 1 229 2 168 1 187 1 121 2 201 1 66 1 369 1 43 1 371 2 345 1 333 1 294 1 197 1 146 1 61 1 113 1 
136 1 63 1 312 1 314 2 229 2 168 1 121 2 201 1 66 1 43 1 292 1 55 1 345 1 333 1 321 1 197 1 61 1 113 1 
136 1 63 1 312 1 278 1 314 2 229 2 168 1 121 4 201 1 66 1 369 1 43 2 292 1 371 2 55 1 345 2 333 1 294 1 197 2 146 1 61 2 113 1 
136 1 63 1 229 2 168 1 187 1 121 2 201 1 66 1 369 1 43 1 371 2 345 1 333 1 294 1 197 1 146 1 61 1 324 1 
136 1 63 1 312 1 314 2 229 2 168 1 121 2 201 1 66 1 43 1 292 1 55 1 345 1 333 1 321 1 197 1 61 1 324 1 
136 1 63 1 312 1 278 1 314 2 229 2 168 1 121 4 201 1 66 1 369 1 43 2 292 1 371 2 55 1 345 2 333 1 294 1 197 2 146 1 61 2 324 1 
136 1 63 1 312 1 278 1 314 2 229 2 168 1 201 1 121 4 66 1 369 1 43 2 292 1 371 2 55 1 345 2 333 1 294 1 197 2 146 1 61 2 
32 1 277 1 229 2 201 1 232 1 333 1 286 1 287 1 212 1 289 1 136 1 63 1 237 1 84 1 314 1 168 1 121 2 169 1 66 1 190 1 139 1 88 1 266 1 140 1 371 1 72 1 293 1 15 1 
32 1 277 1 229 2 201 1 127 1 253 1 333 1 286 1 287 1 212 1 289 1 136 1 63 1 237 1 314 1 168 1 121 2 169 1 66 1 139 1 88 1 370 1 266 1 140 1 371 1 72 1 293 1 15 1 
136 1 63 1 312 1 278 1 314 2 229 2 168 1 121 4 201 1 66 1 369 1 43 2 292 1 371 2 55 1 345 2 333 1 93 1 294 1 197 2 146 1 61 2 
32 1 277 1 278 1 229 2 201 1 232 1 55 1 333 1 286 1 287 1 61 2 136 1 63 1 312 1 8 1 114 1 314 2 84 1 168 1 121 4 169 1 66 1 369 1 190 1 43 2 88 1 292 1 266 1 140 1 371 2 345 2 72 1 293 1 15 1 294 1 197 2 146 1 
49 1 277 1 278 1 350 1 229 2 201 1 351 1 55 1 333 1 61 1 136 1 63 1 312 1 314 1 168 1 315 1 121 3 66 1 369 1 43 1 371 2 171 1 13 1 345 1 72 1 93 1 294 1 197 1 146 1 
278 4 279 4 75 1 229 6 298 1 201 3 354 1 2 1 250 1 55 5 80 1 333 3 208 1 360 1 7 1 136 3 42 1 167 3 312 4 363 1 314 21 168 3 25 1 26 1 121 41 366 1 369 4 27 1 87 1 170 3 292 4 320 1 90 1 71 4 371 20 373 1 45 2 225 1 377 1 294 4 146 5 197 8 245 1 
278 4 279 4 75 1 229 8 298 1 201 4 354 1 2 1 250 1 55 4 80 1 333 4 208 1 360 2 7 1 136 4 42 1 167 3 312 3 363 1 314 18 168 4 25 1 26 1 121 38 366 1 369 4 27 1 87 1 170 3 292 4 320 1 90 1 71 4 371 20 373 1 45 2 225 1 377 1 294 3 146 5 197 7 245 1 
278 7 17 2 279 4 75 1 229 4 298 1 201 2 354 1 2 1 250 1 55 8 80 1 333 2 208 1 360 1 7 1 136 2 167 2 312 7 363 1 314 25 168 2 26 2 121 52 366 1 369 7 27 1 87 1 170 4 292 7 320 1 90 1 71 4 371 27 373 1 45 1 225 1 377 1 294 7 146 8 197 14 245 1 
278 3 279 2 229 4 298 1 201 2 2 1 55 3 333 2 136 2 42 1 167 1 312 3 314 10 168 2 26 1 121 19 369 3 170 1 292 3 320 1 90 2 71 2 371 9 373 1 346 1 45 1 377 1 294 3 146 3 197 6 
278 3 279 2 229 6 298 1 201 3 354 1 2 1 55 2 333 3 360 2 7 1 136 3 167 2 312 2 314 12 168 3 121 26 366 1 369 3 170 2 87 1 27 1 292 2 320 2 90 1 71 4 371 14 373 1 45 2 225 1 377 1 294 2 197 4 146 3 
242 1 267 1 131 1 297 1 133 1 255 1 357 1 189 1 204 1 159 1 
105 1 299 1 
242 1 131 1 297 1 150 1 238 1 173 1 255 1 357 1 204 1 
206 1 153 1 
142 1 182 1 271 1 
361 1 297 1 313 1 230 1 189 1 138 2 77 1 204 1 242 1 104 1 131 1 133 1 357 1 255 1 227 1 159 1 213 1 124 1 
361 1 297 1 313 1 230 1 189 1 138 2 77 1 204 1 242 1 104 1 131 1 133 1 357 1 255 1 227 1 159 1 213 1 124 1 
361 1 297 1 313 1 230 1 189 1 138 2 77 1 204 1 242 1 104 1 131 1 133 1 357 1 255 1 227 1 159 1 213 1 124 1 
142 1 206 1 153 1 
142 1 206 1 153 1 
182 1 271 1 
142 1 182 1 271 1 
305 1 280 1 
277 2 297 1 299 1 351 2 204 1 280 1 104 1 283 1 131 1 105 1 78 1 305 1 255 1 357 1 235 1 213 1 288 1 313 1 315 2 138 1 139 1 68 1 242 1 12 1 13 2 72 2 124 1 
32 1 277 2 229 2 201 1 351 2 333 1 286 2 287 2 209 1 82 1 59 1 337 2 289 1 136 1 63 1 237 1 314 1 338 1 168 1 64 1 121 2 66 1 169 2 88 1 221 1 241 1 371 1 72 2 293 1 93 1 15 1 
199 1 32 1 50 1 114 1 151 1 341 2 169 2 239 1 325 1 88 1 332 1 47 1 286 2 274 1 160 1 287 2 108 1 211 1 83 1 
199 1 32 1 50 1 151 1 341 2 169 1 239 1 325 1 28 1 88 1 332 1 47 1 286 1 160 1 287 1 108 1 211 1 
163 1 147 1 32 1 151 1 169 1 88 1 301 1 81 1 293 1 15 1 286 1 274 1 287 1 212 1 
199 1 32 1 50 1 151 1 341 2 169 1 239 1 325 1 88 1 332 1 47 1 286 1 274 1 160 1 287 1 108 1 211 1 83 1 
282 1 
185 1 23 1 339 1 172 1 268 1 77 1 343 1 
33 1 125 1 77 2 249 1 156 1 302 1 210 1 213 1 339 1 119 1 318 1 374 1 268 1 172 1 94 1 347 1 124 1 
32 4 278 2 34 2 125 4 35 1 0 2 36 1 77 8 233 1 40 2 286 3 287 3 185 1 339 9 86 2 88 3 343 1 291 1 293 10 46 2 15 3 347 12 146 2 295 2 348 6 52 1 355 2 156 4 249 6 55 2 19 2 158 1 212 1 60 2 210 5 213 5 62 2 166 3 114 1 362 1 312 2 119 4 120 2 169 3 369 2 318 3 319 2 266 3 374 4 172 2 268 8 272 6 73 2 124 5 
348 5 278 2 279 1 34 2 125 2 36 1 77 5 180 1 156 2 249 3 55 2 213 1 210 1 7 1 167 1 312 2 339 8 119 2 366 1 316 1 369 2 318 1 87 1 170 1 27 1 319 1 374 2 268 5 172 2 225 1 73 1 272 5 347 6 146 2 124 1 
277 1 34 2 75 1 125 1 351 1 37 1 156 1 55 1 18 1 21 1 213 1 336 1 363 1 339 2 119 1 315 1 342 1 191 1 374 1 171 1 13 1 72 1 268 2 73 1 146 2 245 1 124 1 244 1 
185 1 125 1 339 1 119 1 77 1 156 1 343 1 374 1 268 1 172 1 
348 5 278 2 312 2 34 2 339 5 77 5 369 2 249 5 55 2 268 5 46 1 73 1 272 5 347 10 146 2 
172 1 77 1 318 1 213 1 210 1 124 1 
32 1 125 2 35 2 203 1 36 2 156 2 301 1 81 1 107 1 286 4 287 4 212 2 210 4 213 3 362 1 339 2 119 1 169 4 263 1 318 2 88 1 319 2 374 2 268 2 293 1 270 1 15 1 379 1 124 3 
277 3 32 1 229 2 351 2 201 1 232 1 333 1 286 1 287 1 212 1 184 1 289 1 136 1 63 1 314 1 84 1 168 1 315 2 121 1 169 1 66 1 190 1 139 1 88 1 140 1 266 1 171 2 13 2 72 3 293 1 15 1 244 1 
348 2 125 1 339 1 119 1 36 1 77 4 319 1 249 2 156 1 250 1 374 1 268 2 172 2 272 2 347 4 
131 1 117 1 255 1 
131 1 305 1 259 1 255 1 159 1 
131 1 117 1 255 1 
131 1 117 1 255 1 
131 1 255 1 365 1 
131 1 255 1 365 1 
131 1 255 1 365 1 
131 1 255 1 
242 1 357 1 
279 1 229 2 75 1 201 1 2 1 250 1 55 1 333 1 80 1 208 1 136 1 167 1 314 4 363 1 168 1 121 8 170 1 87 1 292 2 371 4 146 1 197 2 245 1 
178 1 278 1 279 2 75 1 229 4 201 2 2 1 250 1 55 1 80 1 333 2 208 1 136 2 167 1 363 1 314 5 168 2 26 1 121 11 369 1 87 1 170 1 292 2 371 6 294 1 146 2 197 3 245 1 
178 1 278 2 279 1 75 1 229 6 201 3 2 1 250 1 55 3 80 1 333 3 208 1 360 1 7 1 136 3 167 1 312 2 363 1 314 10 168 3 121 19 366 1 369 2 170 1 87 1 27 1 292 3 371 9 225 1 294 1 146 3 197 4 245 1 
178 1 278 2 279 1 75 1 229 6 201 3 2 1 250 1 55 2 80 1 333 3 208 1 360 1 7 1 136 3 167 1 312 1 363 1 314 7 168 3 121 17 366 1 369 2 170 1 87 1 27 1 292 3 371 10 225 1 294 2 146 3 197 5 245 1 
279 1 229 2 75 1 201 1 2 1 250 1 55 1 333 1 80 1 208 1 136 1 167 1 314 4 363 1 168 1 121 8 170 1 87 1 292 2 371 4 146 1 197 2 245 1 
278 2 279 1 229 2 201 1 2 1 55 2 333 1 7 1 136 1 167 1 312 2 314 6 168 1 121 12 366 1 369 2 170 1 87 1 27 1 292 1 371 6 225 1 294 1 146 2 197 2 
178 1 278 2 279 1 75 1 229 8 201 4 2 1 250 1 55 2 80 1 333 4 208 1 360 2 7 1 136 4 167 1 312 1 363 1 314 8 168 4 121 18 366 1 369 2 87 1 170 1 27 1 292 3 371 10 225 1 294 2 146 3 197 5 245 1 
278 3 279 1 229 8 201 4 2 1 55 2 333 4 360 2 7 1 136 4 167 1 42 1 312 2 314 7 168 4 121 16 366 1 369 3 87 1 170 1 27 1 292 3 371 9 225 1 294 3 146 3 197 6 
314 4 363 1 75 3 121 7 292 3 371 3 55 1 80 1 208 2 294 3 197 6 146 1 245 3 
278 2 279 1 75 1 229 8 201 4 2 1 250 1 55 2 80 1 333 4 208 1 360 2 7 1 136 4 167 1 42 1 312 1 363 1 314 8 168 4 121 18 366 1 369 2 87 1 170 1 27 1 292 3 371 10 225 1 294 1 146 3 197 4 245 1 
136 2 363 1 314 4 229 4 168 2 75 1 121 8 201 2 250 1 292 2 371 4 55 1 333 2 80 1 294 1 208 1 360 1 146 1 197 3 245 1 
314 3 363 1 23 1 75 1 121 6 250 1 292 2 371 3 55 1 80 1 208 1 197 2 146 1 245 1 
136 1 178 1 312 1 278 1 314 2 229 2 168 1 201 1 121 4 369 1 292 1 371 2 55 1 333 1 294 1 197 2 146 1 
167 1 312 1 278 1 314 4 279 2 26 1 121 7 369 1 170 1 292 1 371 3 55 1 294 1 146 1 197 2 
278 2 279 2 17 1 75 2 229 4 201 2 250 1 181 1 55 3 80 1 333 2 208 1 360 2 136 2 309 1 312 2 363 1 314 12 168 2 26 1 121 23 369 2 170 2 292 5 371 11 294 4 197 9 146 3 245 2 
314 1 279 1 121 1 
371 1 121 1 170 1 
136 1 178 1 278 1 312 1 314 3 168 1 229 2 201 1 121 6 369 1 292 2 371 3 55 1 333 1 46 1 294 1 146 1 197 3 
278 2 279 1 229 2 201 1 2 1 55 2 333 1 7 1 136 1 167 1 312 2 314 6 168 1 121 12 366 1 369 2 170 1 87 1 27 1 292 1 371 6 225 1 294 1 146 2 197 2 
363 1 314 3 75 1 121 6 292 1 371 3 55 1 294 1 146 1 197 2 245 1 
309 1 136 1 314 2 75 1 229 2 168 1 121 3 201 1 292 1 371 1 333 1 80 1 294 1 208 1 360 1 197 2 245 1 
136 1 314 5 363 1 168 1 229 2 75 2 201 1 121 10 2 1 191 1 292 3 371 5 55 2 333 1 294 2 197 5 146 2 245 2 
136 1 229 2 168 1 201 1 121 2 369 1 2 1 371 2 333 1 294 1 146 1 197 1 
136 1 312 1 278 1 314 2 229 2 168 1 201 1 121 4 369 1 2 1 292 1 371 2 55 1 333 1 294 1 197 2 146 1 
309 1 136 3 42 1 314 2 229 6 168 3 75 1 121 3 201 3 2 1 292 1 371 1 333 3 294 1 360 1 197 2 245 1 
178 1 278 3 279 4 75 3 229 10 201 5 99 1 2 1 250 1 55 5 80 1 333 5 208 1 360 2 256 1 309 1 136 5 167 1 42 1 312 3 363 2 314 18 168 5 26 1 121 34 368 1 369 3 170 3 292 7 371 16 294 5 146 5 197 12 245 3 
277 1 143 1 116 1 285 1 72 1 351 1 139 1 
277 1 116 1 351 1 326 1 139 1 129 1 220 1 3 1 243 1 143 1 285 1 72 1 
32 1 301 1 23 1 81 1 293 1 169 1 15 1 286 1 287 1 88 1 212 1 
32 1 277 2 315 1 351 1 169 1 190 1 139 1 88 1 266 1 140 1 13 1 72 2 293 1 15 1 20 1 286 1 287 1 212 1 
32 1 277 2 315 2 35 1 120 1 351 2 86 1 169 1 190 1 139 1 342 1 219 1 88 1 266 2 140 1 31 1 13 1 72 2 293 3 15 2 20 1 286 1 287 1 
277 2 32 1 35 1 351 2 101 1 286 2 20 1 287 2 315 2 120 1 169 2 86 1 139 1 88 1 219 1 342 1 370 1 140 1 266 2 31 1 13 1 72 2 293 3 15 2 
166 1 32 1 35 1 120 1 126 1 86 1 169 3 77 1 101 1 88 1 266 1 19 1 172 1 293 4 376 1 15 1 286 3 287 3 212 1 213 2 210 1 124 2 295 1 
166 1 32 1 35 1 120 1 86 1 169 3 77 1 355 1 101 1 88 1 266 1 19 1 172 1 293 4 15 1 286 3 287 3 212 1 213 2 210 1 124 2 295 1 
32 1 98 1 169 1 286 1 287 1 88 1 
258 1 32 3 50 1 114 1 52 1 228 1 98 1 65 1 169 6 154 1 218 1 88 2 241 1 266 1 293 3 286 7 15 2 287 7 109 1 212 2 337 1 
277 2 32 1 229 4 75 1 232 1 333 2 80 1 286 1 287 1 136 2 8 1 84 1 338 1 190 1 139 2 43 1 88 1 140 1 292 2 13 1 345 1 93 1 293 1 15 1 197 2 146 1 245 1 351 1 201 2 250 1 55 1 20 1 208 1 61 1 63 2 114 1 363 1 314 3 24 1 168 2 315 1 121 6 169 1 66 2 266 1 371 3 72 2 
125 2 0 1 77 1 355 1 156 2 19 1 286 1 287 1 212 1 213 3 60 1 210 2 62 1 185 1 166 1 362 1 339 1 119 2 169 1 318 1 343 1 374 2 12 1 172 1 268 1 293 2 124 3 295 1 
32 2 114 1 52 1 98 1 169 2 88 1 291 1 266 1 293 2 286 2 15 1 287 2 295 1 
32 1 114 1 353 1 169 4 101 1 88 1 301 1 81 1 293 1 286 4 15 1 287 4 212 1 
32 2 228 1 35 1 65 1 169 2 88 1 266 1 39 1 134 1 293 1 286 2 273 1 15 1 287 2 
32 1 332 1 341 1 169 1 286 1 287 1 108 1 211 1 88 1 212 1 
32 1 114 1 50 1 169 2 88 1 241 1 293 1 286 2 15 1 287 2 59 1 
32 2 114 1 35 1 353 1 169 4 154 1 88 2 218 1 241 1 301 1 81 1 293 3 286 5 15 2 287 5 212 1 
32 2 114 1 35 1 353 1 169 4 88 2 218 1 241 1 301 1 330 1 81 1 293 3 286 5 15 2 287 5 212 1 
32 1 277 2 315 1 351 1 169 1 139 1 88 1 370 1 266 1 140 1 13 1 72 2 293 1 15 1 20 1 286 1 287 1 212 1 
258 1 32 2 52 1 228 1 35 1 65 1 169 1 88 1 266 1 293 1 286 1 15 1 287 1 
296 1 269 1 57 1 139 1 38 1 
296 1 215 1 77 1 139 1 38 2 342 1 219 1 130 1 222 1 31 1 141 1 19 1 12 1 172 1 269 2 57 2 307 1 213 2 124 2 
296 1 277 1 64 1 351 1 72 1 269 1 57 1 82 1 209 1 
296 1 215 1 130 1 
23 1 14 1 281 1 102 1 
165 1 132 1 14 1 281 1 102 1 183 1 112 1 
257 1 112 1 123 1 
165 3 51 1 53 1 102 1 281 1 157 1 29 1 132 1 14 1 195 2 183 1 112 3 
165 2 132 1 14 1 281 1 102 1 175 1 236 1 183 1 112 2 
165 1 276 1 51 1 341 1 132 1 331 1 14 1 160 1 183 1 112 1 211 1 
165 1 132 1 51 1 14 1 281 1 183 1 112 1 
165 1 132 1 51 1 281 2 102 1 183 1 112 1 
165 2 22 1 51 1 281 1 132 2 14 1 226 1 183 2 135 1 112 2 
165 3 276 1 51 1 67 1 231 1 281 1 102 1 300 1 132 1 14 2 183 1 175 2 112 3 
165 2 177 1 199 1 51 1 341 2 281 1 102 1 132 1 14 1 160 1 108 1 183 1 175 1 112 2 211 1 
165 4 276 1 51 1 231 1 281 1 102 1 132 2 14 2 161 1 183 2 236 1 175 2 112 4 
165 1 132 1 51 1 14 1 281 1 102 1 183 1 112 1 
165 4 276 1 53 1 231 1 281 2 102 2 157 1 132 1 195 1 14 3 378 1 175 2 183 1 112 4 
165 2 51 1 281 1 102 1 192 1 132 1 252 1 14 1 234 1 183 1 175 1 112 2 
165 3 51 1 246 1 53 2 102 1 281 1 157 1 132 1 14 1 195 2 183 1 112 3 
344 2 14 2 152 1 103 1 
165 1 132 1 51 1 183 1 155 1 112 1 
165 2 132 1 51 1 14 1 281 1 102 1 175 1 183 1 300 1 112 2 
329 1 
165 1 132 1 51 1 14 1 281 1 102 1 183 1 112 1 
165 3 51 1 102 1 281 1 300 1 132 1 195 1 14 1 175 1 183 1 112 3 
276 1 14 1 231 1 378 1 
14 1 281 1 

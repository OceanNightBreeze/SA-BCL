#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1788 | return null
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I | OPERATOR | 1921 | + -> *
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
98 3 101 1 151 1 61 2 251 1 293 1 7 1 340 1 253 1 175 1 64 1 200 1 277 2 45 2 71 2 208 1 89 2 15 6 325 1 114 4 284 9 235 2 329 1 81 9 217 1 30 2 245 1 147 5 
98 3 101 1 151 1 61 2 251 1 293 1 7 1 340 1 253 1 175 1 64 1 200 1 277 2 45 2 71 2 208 1 89 2 15 6 325 1 114 4 284 9 235 2 329 1 81 9 217 1 30 2 245 1 147 5 
98 4 101 1 151 1 61 2 251 1 293 1 7 1 340 1 253 1 175 1 64 1 200 1 277 2 45 2 71 2 208 1 89 2 15 7 325 1 114 5 284 10 235 2 329 1 81 10 217 1 30 2 245 1 147 6 
98 2 101 1 151 1 61 2 251 1 293 1 7 1 340 1 253 1 175 1 64 1 200 1 277 2 45 1 71 2 208 1 89 2 15 4 325 1 114 3 284 7 235 2 329 1 81 7 30 2 245 1 147 4 
98 1 15 3 325 1 151 1 114 2 61 1 284 4 175 1 64 1 235 1 329 1 81 4 217 1 277 1 45 2 71 1 89 1 147 3 
325 1 151 1 61 1 293 1 232 1 284 2 103 1 235 1 329 1 81 2 277 1 193 1 30 1 147 1 208 1 89 1 
98 3 15 7 325 1 151 1 114 4 251 1 61 2 340 1 253 1 175 1 284 9 64 1 235 1 329 1 81 9 217 1 277 2 205 1 45 2 332 1 71 1 30 1 89 1 147 5 
98 3 15 7 325 1 151 1 114 4 251 1 61 2 340 1 253 1 175 1 284 9 64 1 235 1 329 1 81 9 217 1 277 2 205 1 45 2 332 1 71 1 30 1 89 1 147 5 
98 1 15 1 325 1 151 1 114 1 61 2 340 1 284 3 329 1 81 3 277 2 30 1 147 2 
201 1 304 1 327 1 
201 1 58 2 124 1 
119 2 274 2 131 2 355 2 225 1 140 2 173 2 271 1 
56 1 248 1 166 1 249 1 292 1 170 1 63 1 173 2 271 1 363 1 316 2 66 1 274 2 131 2 203 1 133 1 132 2 225 1 298 1 297 1 72 1 184 2 209 1 299 1 370 1 231 1 93 2 140 3 161 2 119 3 187 1 52 1 142 1 355 2 82 1 190 1 335 1 
119 1 348 1 279 1 274 1 131 1 355 1 140 1 219 1 173 1 271 1 
0 1 279 1 307 1 76 1 339 1 140 1 94 1 261 1 119 1 79 1 343 1 201 1 355 1 304 1 
279 1 307 2 76 1 339 1 140 1 173 1 261 1 119 1 79 1 343 2 131 1 274 1 201 1 355 1 304 1 
307 1 343 1 344 1 267 1 233 1 
136 1 307 2 343 2 344 1 201 1 47 1 304 1 233 1 
307 1 343 1 233 1 
348 1 279 1 307 1 140 1 271 1 173 1 254 1 119 1 344 1 343 1 131 1 274 1 355 1 219 1 
201 1 
136 1 307 2 16 1 343 2 344 1 201 1 304 1 233 1 
136 1 165 1 336 1 307 5 4 2 138 1 168 1 186 1 353 1 6 1 233 2 314 1 344 2 343 5 201 1 264 1 42 2 304 1 46 2 
225 1 327 1 
90 1 331 1 104 1 
184 1 166 1 248 1 231 1 170 1 140 2 252 1 363 1 161 1 119 2 187 1 66 1 331 1 131 1 274 1 355 1 190 1 189 1 132 1 297 1 
119 3 274 3 131 3 355 3 189 1 225 1 140 3 173 1 
119 1 279 1 274 1 131 1 355 1 140 1 219 1 
119 1 279 1 53 1 274 1 131 1 33 1 355 1 140 1 173 1 
56 1 166 1 248 1 307 1 292 1 269 1 170 1 339 1 221 1 63 1 252 1 363 1 173 2 271 1 316 1 66 1 274 3 131 3 343 1 203 1 133 1 132 1 225 1 297 1 72 1 184 1 279 1 299 1 370 1 231 1 76 1 93 2 140 4 261 1 161 1 79 1 119 4 187 1 52 1 53 1 82 1 355 3 190 1 189 1 
347 1 119 2 274 1 131 1 355 2 189 1 225 1 140 2 94 1 
279 1 307 1 269 1 76 1 339 1 140 3 252 1 173 1 261 1 119 3 79 1 53 1 343 1 131 3 274 3 201 1 355 3 121 1 189 2 
140 2 173 1 104 1 119 2 53 1 131 2 274 2 331 1 355 2 189 1 
184 1 248 1 166 1 231 1 170 1 140 1 161 1 363 1 119 1 187 1 66 1 190 1 132 1 225 1 297 1 
184 1 248 1 166 1 231 1 170 1 140 1 161 1 119 1 187 1 54 1 365 1 190 1 132 1 225 1 297 1 
56 1 292 1 59 1 174 1 104 2 222 1 316 4 153 1 203 2 204 1 44 1 321 1 298 2 72 1 90 2 299 1 370 1 373 1 93 2 160 1 52 1 377 1 331 2 288 1 
119 1 279 1 274 1 131 1 76 1 355 1 140 1 97 1 
33 1 140 2 173 1 119 2 53 1 131 1 274 1 355 2 225 2 
126 1 279 1 140 4 252 1 173 1 119 4 53 1 131 4 274 4 318 1 355 4 189 2 29 1 225 1 
119 2 279 1 274 2 131 2 355 2 140 2 97 1 219 1 
184 1 248 1 166 1 231 1 170 1 140 1 161 1 363 1 119 1 187 1 66 1 8 1 190 1 132 1 225 1 297 1 
247 1 74 1 
247 1 74 1 
17 1 301 1 
17 1 301 1 
17 1 301 1 
247 1 328 1 74 1 
247 1 328 1 74 1 
247 1 328 1 74 1 
247 1 74 1 10 1 
247 1 74 1 10 1 
247 1 74 1 10 1 
247 1 74 1 309 1 
247 2 74 2 17 1 172 1 301 1 145 1 
247 2 74 2 154 2 280 1 307 2 185 1 230 1 220 1 49 2 92 2 172 1 36 1 312 2 24 1 273 1 343 2 201 1 240 2 244 3 
247 1 74 1 154 1 3 1 307 1 220 1 49 1 92 1 309 1 140 2 312 1 119 2 262 1 343 1 131 2 274 2 107 1 295 1 108 1 355 2 224 1 225 1 382 1 244 1 
235 1 71 1 89 1 
235 1 89 1 103 1 
235 3 139 1 127 1 366 1 71 2 103 1 
235 2 139 1 366 1 71 1 13 1 103 1 
235 2 139 1 366 2 71 1 103 1 
3 1 4 1 307 5 168 1 58 3 362 2 59 1 65 1 343 5 344 4 40 2 201 2 223 1 108 1 42 1 46 1 136 1 138 3 156 2 158 1 260 1 373 1 353 2 160 1 233 1 262 1 288 1 304 1 192 1 218 1 380 1 124 1 
307 9 4 2 168 1 58 9 59 3 60 1 62 1 102 1 129 1 315 5 343 9 344 7 40 6 201 5 223 1 42 2 46 2 136 1 138 8 156 6 186 1 158 2 260 3 373 3 353 6 160 3 233 6 20 1 262 4 288 3 304 1 218 2 291 1 267 5 124 3 
4 1 307 3 58 4 362 1 59 1 65 1 344 2 343 3 201 3 40 2 42 1 46 1 138 3 156 2 186 1 158 1 260 1 373 1 353 2 160 1 262 1 288 1 304 1 192 1 218 1 124 2 
4 1 307 4 58 7 362 2 59 2 62 1 129 1 65 1 343 4 344 3 201 4 40 4 42 1 46 1 138 5 156 4 186 1 158 1 260 2 373 2 353 4 160 2 262 2 288 2 304 1 192 1 218 1 291 1 124 3 
368 1 170 1 327 1 
178 1 170 1 
106 1 
170 1 297 1 
187 1 368 2 170 3 282 1 297 1 256 1 
187 1 170 1 297 1 
150 1 170 1 
300 1 160 1 270 1 316 7 345 2 203 3 188 1 288 1 289 1 181 1 11 1 321 3 44 2 164 1 298 4 358 1 359 1 
300 1 160 1 270 1 316 7 345 2 203 3 188 1 288 1 289 1 181 1 11 1 321 3 44 2 164 1 298 4 358 1 359 1 
300 1 160 1 270 1 316 7 345 2 203 3 188 1 288 1 289 1 181 1 191 1 11 1 321 3 44 2 164 1 359 1 298 4 358 1 
292 1 59 3 311 1 270 5 316 31 345 3 203 15 11 2 181 2 321 10 44 5 298 16 207 1 14 3 110 1 72 1 137 1 324 1 299 1 370 1 260 3 373 3 300 1 93 2 19 4 160 4 286 1 188 2 288 4 289 1 359 1 358 1 164 2 123 1 
72 2 324 1 149 1 292 2 299 2 370 2 300 1 93 4 160 1 270 1 316 9 319 1 345 2 188 1 203 4 288 1 181 1 11 1 321 4 44 3 164 1 359 1 358 1 298 5 
166 1 151 1 61 1 127 1 103 1 109 1 132 1 277 1 70 1 71 1 88 1 89 1 183 1 184 1 228 1 15 1 325 1 231 1 161 1 284 2 376 1 235 2 329 1 23 1 81 2 26 1 379 1 305 1 30 1 147 1 
166 1 61 1 127 1 103 1 109 1 132 1 277 1 70 1 71 1 88 1 89 1 183 1 184 1 228 1 15 2 325 1 231 1 161 1 284 3 376 1 235 2 329 1 23 1 81 3 215 1 26 1 28 1 30 1 147 1 85 1 
166 1 127 1 103 1 109 1 132 1 70 1 71 1 88 1 89 1 183 1 184 1 15 2 325 1 231 1 161 1 284 2 376 1 235 2 329 1 23 1 81 2 215 1 28 1 30 1 147 1 
184 1 183 2 166 1 248 1 231 1 170 1 61 1 283 1 161 1 284 1 376 2 176 1 37 1 162 1 303 1 81 1 27 1 109 2 277 1 132 1 297 1 30 2 85 1 
166 1 151 1 61 1 127 1 103 1 109 1 132 1 277 1 70 1 71 1 88 1 89 1 183 1 184 1 228 1 231 1 161 1 284 1 376 1 235 2 23 1 81 1 215 1 26 1 305 1 30 1 
229 1 
0 1 1 1 2 1 57 2 248 2 4 1 58 2 339 1 255 1 343 5 201 2 202 1 346 2 12 2 297 1 111 1 350 1 158 1 76 1 353 2 115 4 161 2 261 1 119 1 79 1 162 1 303 1 355 1 304 1 122 2 124 2 166 1 307 5 168 1 361 1 170 1 35 2 313 1 42 1 132 2 87 2 46 1 226 1 136 3 184 2 279 1 138 2 231 1 140 1 94 1 95 2 233 6 287 1 96 1 333 1 
0 1 1 1 307 3 361 1 339 1 343 3 202 1 226 1 136 1 279 1 16 1 76 1 140 1 115 2 94 1 261 1 233 2 79 1 119 1 355 1 122 1 333 1 
0 1 1 1 307 3 361 1 339 1 343 3 201 1 202 1 226 1 136 1 279 1 16 1 76 1 140 1 115 3 94 1 95 1 233 1 261 1 79 1 119 1 355 1 304 1 333 1 
0 1 1 1 307 3 361 1 339 1 343 3 201 1 202 1 346 1 226 1 136 1 279 1 16 1 76 1 140 1 115 3 94 1 95 1 261 1 233 2 79 1 119 1 355 1 304 1 122 1 333 1 
1 1 0 1 2 1 57 2 4 1 339 1 255 1 343 5 201 5 202 1 346 4 67 1 12 2 16 1 76 1 353 1 115 6 261 1 79 1 119 1 355 1 304 5 122 4 124 2 125 1 307 5 168 1 361 1 35 2 42 1 87 2 226 1 46 1 322 1 227 1 136 3 279 1 138 1 140 1 94 1 95 4 233 7 143 1 333 1 
1 1 0 1 2 1 57 2 4 1 58 2 339 1 255 1 343 4 201 2 202 1 346 2 12 2 111 1 76 1 353 1 115 4 261 1 79 1 119 1 355 1 304 1 122 2 124 2 307 4 168 1 361 1 35 2 42 1 87 2 46 1 226 1 136 2 279 1 138 1 140 1 94 1 95 2 233 4 333 1 
0 1 1 1 125 1 2 1 57 2 4 1 307 4 168 1 361 1 339 1 35 2 255 1 343 4 201 1 202 1 42 1 346 2 12 2 87 2 322 1 226 1 46 1 227 1 136 2 279 1 138 1 76 1 353 1 140 1 115 4 94 1 95 2 233 4 261 1 79 1 119 1 355 1 304 1 122 2 333 1 124 2 
0 1 1 1 125 1 2 1 57 2 4 1 307 4 168 1 361 1 339 1 35 2 255 1 343 4 201 1 202 1 42 1 346 2 12 2 87 2 322 1 226 1 46 1 227 1 136 2 279 1 138 1 76 1 353 1 140 1 115 4 94 1 95 2 233 4 261 1 79 1 119 1 355 1 304 1 122 2 333 1 124 2 
0 1 1 1 2 1 57 2 4 1 307 4 168 1 361 1 58 2 339 1 199 1 343 4 201 1 202 1 42 1 346 2 87 2 322 1 226 1 46 1 136 2 279 1 138 1 76 1 353 1 374 2 212 2 140 1 115 4 94 1 95 2 233 4 261 1 79 1 119 1 355 1 304 1 122 2 333 1 243 1 84 1 
125 1 0 1 1 1 2 1 57 2 4 1 307 4 168 1 361 1 339 1 35 2 255 1 343 4 201 1 42 1 202 1 67 1 346 3 12 2 87 2 322 1 46 1 226 1 227 1 136 2 279 1 138 1 76 1 353 1 140 1 115 5 94 1 95 3 261 1 233 5 79 1 119 1 355 1 304 1 122 3 333 1 124 2 
125 1 0 1 1 1 2 1 57 2 4 1 307 4 168 1 361 1 339 1 35 2 255 1 343 4 201 1 42 1 202 1 67 1 346 3 12 2 87 2 322 1 46 1 226 1 227 1 136 2 279 1 138 1 76 1 353 1 140 1 115 5 94 1 95 3 261 1 233 5 79 1 119 1 355 1 304 1 122 3 333 1 124 2 
1 1 0 1 2 1 57 2 4 1 58 2 339 1 199 1 343 4 201 1 202 1 346 2 111 1 76 1 353 1 115 4 212 2 261 1 79 1 119 1 355 1 304 1 122 2 307 4 168 1 361 1 42 1 87 2 46 1 226 1 136 2 279 1 138 1 374 2 140 1 94 1 95 2 233 4 333 1 
72 1 56 1 90 1 292 1 299 1 370 1 300 1 93 2 327 1 160 1 104 1 316 6 52 1 331 1 345 1 203 3 188 1 288 1 204 1 225 2 321 2 44 2 298 3 358 1 359 1 164 1 
56 2 167 1 292 2 59 2 311 1 270 1 104 4 316 14 177 1 203 6 133 1 225 1 321 2 44 1 298 8 14 3 72 2 90 11 209 1 299 2 370 2 260 2 373 1 93 4 19 3 160 2 116 1 118 1 52 1 286 1 331 11 288 1 381 1 
56 1 166 1 248 1 337 1 292 1 170 1 252 1 363 1 104 1 316 2 130 1 66 1 274 1 131 1 8 1 203 1 132 1 133 1 225 1 297 1 298 1 184 1 72 1 299 1 209 1 231 1 370 1 140 2 93 2 161 1 118 1 119 2 187 1 52 1 355 1 190 1 189 1 146 1 
56 3 248 1 100 1 292 3 59 2 252 1 104 7 105 2 66 2 345 1 203 10 297 2 298 10 72 3 209 1 299 3 260 2 300 1 160 3 161 3 119 3 118 1 25 1 215 1 355 1 216 2 82 2 306 1 164 1 359 1 358 1 83 2 166 2 170 2 270 4 363 2 316 20 131 1 274 1 133 1 132 3 225 2 44 4 321 8 184 3 90 7 370 3 231 2 371 2 373 2 93 6 140 3 187 2 52 3 331 7 188 1 288 3 189 1 190 2 
72 1 56 1 90 1 292 1 299 1 370 1 59 1 93 2 160 1 270 1 174 1 104 1 316 2 52 1 331 1 204 1 321 1 298 2 
72 1 56 1 90 1 292 1 299 1 370 1 373 1 93 2 104 1 316 2 52 1 377 1 331 1 203 2 204 1 288 1 321 1 44 1 
56 1 292 1 59 1 270 1 104 2 316 4 203 2 204 1 321 2 44 1 298 2 72 1 90 2 299 1 370 1 260 1 373 1 93 2 160 1 52 1 331 2 288 1 
86 1 
86 1 
86 1 
72 1 56 1 90 2 292 1 299 1 370 1 260 1 373 1 59 1 93 2 160 1 270 1 104 2 52 1 316 4 331 2 203 2 288 1 44 1 321 2 298 2 
56 1 166 1 248 1 292 1 170 1 363 1 316 2 66 1 203 1 132 1 133 1 225 1 298 1 297 1 184 1 72 1 209 1 299 1 231 1 370 1 140 1 93 2 161 1 119 1 187 1 52 1 82 1 190 1 
56 1 166 1 248 1 292 1 170 1 316 2 203 1 365 1 132 1 133 1 225 1 298 1 297 1 184 1 72 1 209 1 299 1 231 1 370 1 140 1 93 2 161 1 119 1 187 1 285 1 52 1 54 1 190 1 
56 1 292 1 59 1 270 1 104 2 316 4 203 2 321 2 44 1 298 2 72 1 90 2 299 1 370 1 260 1 373 1 93 2 160 1 118 1 52 1 331 2 288 1 
56 1 166 1 292 1 170 1 59 1 270 1 363 1 104 2 316 4 66 1 203 2 132 1 44 1 321 2 298 2 297 1 184 1 72 1 90 2 299 1 231 1 370 1 260 1 373 1 140 1 93 2 160 1 161 1 119 1 187 1 52 1 331 2 82 1 216 1 288 1 190 1 379 1 
56 1 292 1 59 1 270 1 173 1 104 1 316 3 131 1 274 1 203 1 321 1 298 2 367 1 72 1 90 1 299 1 370 1 260 1 373 1 93 2 140 1 160 1 118 1 119 1 52 1 53 1 331 1 355 1 288 1 
184 1 248 1 86 1 132 1 161 1 
56 1 32 1 292 1 59 1 173 1 104 1 316 3 131 1 274 1 203 2 321 1 44 1 298 1 72 1 90 1 299 1 370 1 260 1 373 1 93 2 140 1 160 1 118 1 119 1 52 1 53 1 331 1 355 1 288 1 
246 1 195 1 292 3 169 1 59 4 311 3 270 4 316 41 342 1 319 1 345 1 320 1 203 21 68 1 44 4 321 8 298 20 14 3 323 1 72 3 324 1 73 1 259 4 299 3 211 1 370 3 260 4 373 4 300 1 78 1 93 6 19 4 160 5 80 1 286 1 163 1 188 1 288 5 357 1 266 2 164 1 359 1 358 1 
246 1 195 1 292 4 169 1 59 4 311 3 270 3 316 38 342 1 319 1 345 1 320 1 203 18 68 1 44 4 321 7 298 20 14 3 323 1 72 4 324 2 73 1 259 4 299 4 211 1 370 4 260 4 373 3 300 1 78 1 93 8 19 4 160 5 80 1 286 1 163 1 188 1 288 4 357 1 266 2 164 1 359 1 358 1 
246 1 195 1 292 2 59 7 311 2 270 7 316 52 342 1 319 1 345 1 320 1 203 25 68 1 44 7 321 14 298 27 14 4 323 1 72 2 324 1 73 1 259 4 299 2 211 1 370 2 260 7 373 7 300 1 93 4 19 4 160 8 80 1 286 2 163 1 188 1 288 8 357 1 266 1 164 1 359 1 358 1 381 2 
246 1 292 2 59 3 311 1 270 3 316 19 319 1 203 10 68 2 44 3 321 6 298 9 14 1 72 2 259 2 299 2 211 1 370 2 260 3 373 3 78 1 93 4 19 2 160 3 234 1 80 1 286 1 288 3 357 1 266 1 
246 2 195 1 292 3 59 3 311 2 270 2 316 26 342 1 319 1 320 1 203 12 68 1 321 4 44 2 298 14 14 2 72 3 323 1 324 2 73 1 259 4 299 3 211 1 370 3 260 3 373 2 93 6 19 2 160 3 80 1 163 1 288 2 357 1 266 2 
247 1 74 1 154 1 280 1 307 1 230 1 220 1 49 1 92 1 172 1 36 1 312 1 24 1 273 1 343 1 201 1 240 1 244 2 
247 1 74 1 154 1 280 1 307 1 230 1 220 1 49 1 92 1 172 1 36 1 312 1 24 1 273 1 343 1 201 1 240 1 244 2 
247 1 74 1 154 1 280 1 307 1 230 1 220 1 49 1 92 1 172 1 36 1 312 1 24 1 273 1 343 1 201 1 240 1 244 2 
328 1 372 1 145 1 
328 1 372 1 145 1 
10 1 55 1 
10 1 55 1 145 1 
107 1 224 1 
247 1 307 1 3 1 309 1 312 1 343 1 344 1 131 2 274 2 295 1 107 1 108 1 224 1 225 1 280 1 154 1 74 1 92 1 49 1 140 2 119 2 302 1 262 1 355 2 240 1 244 1 382 1 
247 1 154 1 74 1 24 1 230 1 92 1 49 1 172 1 312 1 360 1 
328 1 372 1 
10 1 55 1 145 1 
309 1 382 1 
247 1 154 1 74 1 92 1 49 1 290 1 213 1 294 1 312 1 
148 1 56 1 166 1 249 2 292 1 170 1 316 2 203 1 132 2 134 1 133 1 297 1 298 1 72 1 184 2 299 1 209 1 231 1 75 1 370 1 375 1 18 1 140 2 93 2 161 2 118 1 119 2 52 1 355 2 265 1 268 1 
184 2 166 1 228 1 231 1 127 1 161 2 103 1 21 1 235 2 23 1 215 1 296 1 379 1 180 1 132 2 109 1 71 1 88 1 89 1 
184 1 228 1 166 1 231 1 127 1 161 1 103 1 152 1 235 2 23 1 215 1 296 1 132 1 109 1 71 1 88 1 89 1 
184 1 166 1 248 1 231 1 170 1 171 1 161 1 21 1 176 1 162 1 303 1 132 1 109 1 297 1 
184 1 228 1 166 1 231 1 127 1 161 1 103 1 21 1 235 2 23 1 215 1 296 1 180 1 132 1 109 1 71 1 88 1 89 1 
128 1 
336 1 138 1 201 1 304 1 353 1 6 1 327 1 
4 1 307 1 168 1 58 1 35 1 255 1 343 1 201 2 42 1 12 1 46 1 136 1 138 1 353 1 233 1 304 1 124 1 
336 1 99 2 248 1 4 4 150 2 58 12 196 2 59 2 6 1 197 1 105 2 343 5 201 8 297 3 257 1 156 6 157 2 158 2 260 2 353 8 160 2 161 3 261 2 304 2 124 6 166 3 307 5 168 4 170 10 272 2 178 3 40 6 41 1 276 2 42 4 132 3 46 4 184 3 136 3 138 9 368 2 231 4 48 2 373 2 282 1 233 5 141 2 187 3 236 1 287 1 288 2 379 1 242 2 334 1 
307 1 4 2 168 2 58 6 59 2 311 1 342 1 343 1 40 5 201 5 320 1 276 2 42 2 43 1 46 2 14 1 136 1 323 1 73 1 138 8 156 5 158 1 369 1 260 2 353 5 373 2 19 1 160 2 233 1 163 1 287 1 288 2 304 2 242 1 124 3 
125 1 4 1 307 1 168 1 271 1 173 1 254 1 343 1 131 1 274 1 276 2 42 1 46 1 348 1 279 1 138 2 210 1 353 2 300 1 140 1 160 2 119 1 188 1 355 1 288 1 242 1 219 1 164 1 
138 5 156 5 58 10 260 2 59 2 353 5 373 2 160 2 105 1 40 5 201 5 276 2 288 2 242 1 124 5 
56 1 248 1 166 1 292 1 170 1 63 1 173 2 271 1 363 1 316 1 66 1 274 2 131 2 203 1 133 1 132 1 225 1 297 1 72 1 184 1 299 1 370 1 231 1 93 2 140 3 161 1 119 3 187 1 52 1 355 2 82 1 190 1 
4 1 138 1 156 2 168 1 58 4 158 1 353 2 40 2 201 4 345 1 42 1 287 1 304 2 46 1 124 2 
336 1 4 1 138 1 168 1 353 1 6 1 201 1 42 1 304 1 46 1 
136 1 307 1 343 1 201 1 304 1 233 1 
166 1 248 2 4 2 307 3 168 1 170 1 343 3 41 1 42 2 132 4 297 1 46 2 184 4 136 2 257 2 258 1 138 2 350 1 352 1 186 1 231 1 158 2 353 2 161 4 233 4 162 1 303 1 96 1 287 2 
154 1 92 1 51 1 
154 1 92 1 51 1 
154 1 92 1 51 1 
349 1 154 1 92 1 
349 1 154 1 92 1 
349 1 154 1 92 1 
154 1 92 1 
247 1 74 1 
154 1 24 1 5 1 224 1 92 1 
72 2 324 1 292 2 299 2 370 2 300 1 93 4 160 1 270 1 316 8 345 1 203 4 188 1 288 1 321 3 44 2 298 4 358 1 359 1 164 1 
300 1 327 1 160 1 316 6 345 1 203 3 188 1 288 1 44 2 321 2 358 1 359 1 164 1 298 3 
72 1 292 1 299 1 370 1 260 1 373 1 59 1 93 2 160 1 270 1 316 4 263 1 203 2 288 1 44 1 321 2 298 2 
260 1 373 1 59 1 311 1 19 2 160 1 270 1 316 7 286 1 203 4 288 1 44 1 321 2 298 3 14 1 
292 2 34 1 59 2 270 4 316 23 177 1 345 1 203 12 321 9 44 5 298 11 14 2 72 2 324 2 299 2 370 2 260 2 373 2 300 1 93 4 160 3 19 2 286 1 188 2 288 3 164 2 359 1 358 1 381 1 
316 1 203 1 19 1 
316 1 298 1 14 1 
72 1 299 1 292 1 370 1 260 1 59 1 373 1 93 2 160 1 270 1 105 1 316 6 263 1 203 3 288 1 321 3 44 2 298 3 
292 1 59 2 311 1 270 1 316 12 342 1 319 1 320 1 203 6 44 1 321 2 298 6 14 1 323 1 72 1 73 1 299 1 370 1 260 2 373 2 93 2 19 1 160 2 163 1 288 2 
300 1 160 1 270 1 316 6 203 3 188 1 288 1 44 1 321 2 298 3 164 1 
72 1 324 1 292 1 299 1 370 1 34 1 93 2 270 1 316 3 188 1 203 2 321 2 44 1 298 1 164 1 359 1 358 1 
292 1 311 1 316 8 319 1 345 1 203 4 44 2 321 2 298 4 14 1 323 1 72 1 299 1 370 1 300 1 93 2 160 1 19 1 188 1 288 1 358 1 359 1 164 1 
292 2 59 1 311 1 270 1 316 11 319 1 345 1 203 5 44 2 321 3 298 6 14 1 323 1 72 2 299 2 370 2 260 1 300 1 93 4 19 2 160 2 286 1 263 1 188 1 288 1 164 1 359 1 358 1 
292 3 59 2 311 1 270 1 316 19 342 1 319 1 345 1 320 1 203 10 44 3 321 4 298 9 14 1 323 1 72 3 73 1 324 1 299 3 370 3 260 2 373 2 300 1 93 6 19 1 160 3 263 1 163 1 188 1 288 3 164 1 359 1 358 1 
292 3 59 2 311 1 270 2 316 17 342 1 319 1 345 1 320 1 203 7 44 3 321 5 298 10 14 1 323 1 72 3 324 1 73 1 299 3 370 3 260 2 373 1 300 1 93 6 19 1 160 3 263 1 163 1 188 1 288 2 164 1 359 1 358 1 
292 1 311 1 316 8 319 1 345 1 203 4 44 2 321 2 298 4 14 1 323 1 72 1 299 1 370 1 300 1 93 2 160 1 19 1 188 1 288 1 358 1 359 1 164 1 
292 1 59 2 311 1 270 1 316 12 342 1 319 1 320 1 203 6 44 1 321 2 298 6 14 1 323 1 72 1 73 1 299 1 370 1 260 2 373 2 93 2 19 1 160 2 163 1 288 2 
292 4 59 2 311 1 270 2 316 18 342 1 319 1 345 1 320 1 203 8 44 3 321 5 298 10 14 1 323 1 72 4 73 1 324 2 299 4 370 4 260 2 373 1 300 1 93 8 19 1 160 3 163 1 263 1 188 1 288 2 164 1 359 1 358 1 
292 4 59 3 311 1 270 3 316 16 342 1 319 1 320 1 203 7 44 3 321 6 298 9 14 1 323 1 72 4 73 1 324 2 299 4 370 4 260 3 373 2 93 8 78 1 19 1 160 3 163 1 288 2 
300 1 160 1 270 3 316 7 203 4 188 3 288 1 44 3 321 6 358 1 359 2 164 3 298 3 
292 4 59 2 311 1 270 1 316 18 342 1 319 1 345 1 320 1 203 8 44 3 321 4 298 10 14 1 323 1 72 4 73 1 324 2 299 4 370 4 260 2 373 1 300 1 93 8 78 1 19 1 160 3 163 1 188 1 288 2 164 1 359 1 358 1 
72 1 299 1 292 1 210 1 370 1 300 1 93 2 160 2 270 2 316 10 319 1 188 2 203 5 288 2 44 3 321 5 164 2 298 5 
72 1 292 1 299 1 370 1 59 1 93 2 160 1 270 1 316 2 319 1 321 1 298 2 
72 1 292 1 299 1 370 1 260 1 373 1 59 1 93 2 160 1 270 1 316 4 319 1 203 2 288 1 44 1 321 2 298 2 
72 3 324 1 292 3 299 3 370 3 34 1 78 1 93 6 270 1 316 3 319 1 203 2 188 1 44 1 321 2 164 1 298 1 
292 5 34 1 59 3 311 1 270 5 316 34 319 1 345 1 203 18 321 12 44 7 207 1 298 16 14 3 72 5 324 2 137 1 299 5 370 5 260 3 373 3 300 2 78 1 93 10 19 4 160 5 286 1 263 1 188 3 288 5 164 3 359 1 358 1 123 1 
119 1 347 1 355 1 356 1 225 1 140 1 94 1 
347 1 140 1 159 1 94 1 119 1 22 1 179 1 356 1 355 1 239 1 144 1 225 1 
184 1 166 1 162 1 248 1 303 1 231 1 170 1 132 1 327 1 297 1 161 1 
184 1 248 1 166 1 231 1 170 1 140 2 161 1 363 1 119 2 187 1 131 1 274 1 355 1 190 1 189 1 132 1 225 1 297 1 
184 1 279 1 166 1 257 1 150 1 76 1 231 1 170 3 339 1 140 2 161 1 363 1 119 2 187 2 272 1 131 1 274 2 355 2 190 1 189 1 132 1 225 1 297 2 
166 1 150 1 170 3 339 1 272 1 274 2 131 1 365 1 132 2 225 1 297 2 184 2 279 1 91 1 257 1 231 1 76 1 140 2 161 2 119 2 187 2 355 2 189 1 190 1 
166 1 248 1 307 2 150 1 250 1 170 4 272 1 343 2 178 1 201 1 206 1 132 3 297 1 184 3 91 1 257 1 368 1 231 1 233 1 161 3 261 1 187 1 304 1 
184 3 248 1 166 1 91 1 307 2 257 1 150 1 368 1 231 1 48 1 170 4 261 1 161 3 233 1 187 1 272 1 343 2 201 1 178 1 304 1 132 3 297 1 
184 1 166 1 231 1 132 1 161 1 194 1 
184 6 148 1 248 2 166 2 249 1 281 1 231 3 308 1 170 3 282 1 198 1 161 7 187 1 341 1 378 1 215 1 379 1 132 7 182 1 297 2 194 1 
56 2 166 1 292 2 170 1 363 1 104 1 316 6 66 1 274 1 131 1 345 1 203 3 132 1 225 2 321 2 44 2 298 3 297 1 72 2 184 1 90 1 299 2 231 1 370 2 371 1 300 1 375 1 140 2 93 4 160 1 161 1 118 1 119 2 187 1 52 2 331 1 188 1 355 1 216 1 82 1 288 1 190 1 189 1 379 1 164 1 359 1 358 1 
336 1 248 1 99 1 4 2 307 3 168 2 170 2 196 1 6 1 343 3 344 1 201 1 178 1 41 1 42 2 132 1 46 2 184 1 136 1 138 1 368 1 157 1 48 1 353 1 161 1 233 2 261 1 304 1 
184 2 166 1 368 1 231 2 170 2 282 1 161 2 187 1 236 1 379 1 132 2 297 1 194 1 
184 1 235 1 166 1 248 1 23 1 231 1 132 1 161 1 89 1 103 1 
184 2 148 1 166 1 75 1 231 1 170 1 161 2 215 1 379 1 132 2 297 1 
184 2 166 1 257 1 231 2 170 1 77 1 198 1 161 2 187 1 132 2 69 1 182 1 306 1 297 1 
278 1 184 4 248 1 166 1 91 1 231 1 170 1 161 4 162 1 303 1 379 1 132 4 297 1 
184 1 248 1 166 1 231 1 170 1 140 2 161 1 119 2 187 1 131 1 274 1 355 1 365 1 190 1 189 1 132 1 225 1 297 1 
184 1 166 1 257 1 281 1 231 2 170 1 282 1 198 1 161 1 187 1 132 1 182 1 297 1 
278 1 184 4 148 1 248 1 166 2 257 1 231 2 170 3 161 5 162 1 303 1 341 1 378 1 379 1 132 5 297 2 
278 1 184 4 148 1 248 1 166 2 257 1 231 2 170 3 161 5 162 1 354 1 303 1 341 1 379 1 132 5 297 2 
50 1 18 1 140 1 119 1 38 1 237 1 355 1 134 1 268 1 
112 1 50 1 135 1 
38 1 237 1 338 1 50 1 225 1 
279 1 307 2 112 1 269 1 76 1 339 1 50 1 338 2 261 1 79 1 38 2 120 1 344 1 343 2 201 1 237 2 304 1 225 1 135 1 
329 1 325 1 327 1 147 1 
329 1 81 1 325 1 61 1 277 1 147 1 284 1 
183 1 30 1 284 1 
326 1 325 1 151 1 61 1 293 2 284 3 330 1 329 1 81 3 9 1 277 1 147 1 
329 1 15 1 81 2 325 1 61 1 277 1 45 1 147 1 284 2 
151 1 114 1 61 1 284 1 175 1 235 1 81 1 277 1 71 1 147 1 89 1 
329 1 81 1 151 1 61 1 277 1 147 1 284 1 
329 2 81 1 325 1 151 1 61 1 277 1 284 1 
151 1 61 2 284 2 364 1 329 1 317 1 39 1 81 2 277 2 147 1 
98 1 15 2 325 1 151 1 114 1 61 1 251 1 253 1 284 3 329 1 81 3 277 1 147 2 
15 1 325 1 151 1 61 1 127 1 103 1 284 2 235 2 329 1 81 2 238 1 277 1 71 1 147 1 89 1 
98 1 15 2 325 1 151 1 114 1 61 2 284 4 329 1 81 4 217 1 277 2 45 1 147 2 
98 1 15 2 325 2 113 1 114 1 61 1 293 1 284 4 330 1 329 2 81 4 9 1 277 1 147 3 
15 1 351 1 325 1 151 1 61 1 284 2 329 1 81 2 277 1 205 1 31 1 147 1 
325 1 151 1 61 1 293 2 284 3 330 1 329 1 81 3 9 2 241 1 277 1 147 1 
275 1 310 1 147 2 117 2 
214 1 81 1 151 1 61 1 277 1 284 1 
329 1 15 1 81 2 325 1 151 1 251 1 61 1 277 1 147 1 284 2 
155 1 
329 1 81 1 325 1 151 1 61 1 277 1 147 1 284 1 
329 1 15 1 81 3 325 1 151 1 251 1 61 1 277 1 293 1 147 1 284 3 
98 1 113 1 114 1 147 1 
329 1 147 1 
329 1 81 1 325 1 151 1 61 1 277 1 147 1 284 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 182 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 182 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | RETURN | 6823 | return null
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 9438 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 1 178 2 74 1 4 9 7 2 164 4 11 2 283 1 296 9 136 1 16 1 38 2 166 2 17 1 370 1 108 1 39 1 40 3 19 2 18 6 23 5 352 1 270 1 174 2 357 1 48 1 328 1 49 1 
0 1 178 2 74 1 4 9 7 2 164 4 11 2 283 1 296 9 136 1 16 1 38 2 166 2 17 1 370 1 108 1 39 1 40 3 19 2 18 6 23 5 352 1 270 1 174 2 357 1 48 1 328 1 49 1 
0 1 178 2 74 1 4 10 7 2 164 5 11 2 283 1 296 10 136 1 16 1 38 2 166 2 17 1 370 1 108 1 39 1 40 4 19 2 18 7 23 6 352 1 270 1 174 2 357 1 48 1 328 1 49 1 
0 1 178 2 74 1 4 7 7 2 164 3 11 2 283 1 296 7 136 1 16 1 38 2 166 2 17 1 370 1 39 1 40 2 19 2 18 4 23 4 352 1 270 1 174 1 357 1 48 1 328 1 49 1 
0 1 178 1 38 1 166 1 108 1 39 1 40 1 4 4 18 3 23 3 7 1 164 2 11 1 174 2 357 1 48 1 49 1 296 4 
0 1 136 1 178 1 38 1 166 1 4 2 19 1 23 1 7 1 41 1 93 1 357 1 48 1 283 1 296 2 332 1 
0 1 74 1 166 2 4 3 40 1 19 1 18 1 23 2 7 2 164 1 357 1 48 1 296 3 
0 1 178 1 74 1 38 1 166 2 108 1 39 1 4 9 40 3 18 7 19 1 23 5 7 2 164 4 11 1 312 1 10 1 352 1 174 2 357 1 48 1 328 1 49 1 296 9 
0 1 178 1 74 1 38 1 166 2 108 1 39 1 4 9 40 3 18 7 19 1 23 5 7 2 164 4 11 1 312 1 10 1 352 1 174 2 357 1 48 1 328 1 49 1 296 9 
28 1 182 1 158 1 
66 2 158 1 185 1 
135 2 237 2 271 2 362 2 55 2 319 1 102 1 61 2 
288 1 289 1 334 2 276 1 54 2 157 1 251 1 156 1 362 3 55 2 78 1 291 1 256 1 102 1 61 2 208 1 62 1 135 2 209 1 237 2 138 1 212 1 319 1 22 1 192 2 266 1 351 2 27 2 373 1 142 1 301 1 194 1 271 3 272 1 147 1 305 1 382 1 
135 1 237 1 271 1 282 1 362 1 55 1 111 1 102 1 133 1 61 1 
135 1 369 1 64 1 106 1 158 1 362 1 267 1 171 1 28 1 115 1 271 1 218 1 282 1 86 1 
135 1 369 1 64 2 106 2 237 1 158 1 55 1 362 1 28 1 115 1 271 1 218 1 282 1 61 1 86 1 
64 1 106 1 5 1 213 1 345 1 
68 1 28 1 64 2 106 2 5 1 158 1 252 1 213 1 
64 1 106 1 5 1 
135 1 64 1 106 1 237 1 298 1 55 1 362 1 111 1 213 1 271 1 282 1 102 1 133 1 61 1 
158 1 
28 1 64 2 106 2 5 1 188 1 158 1 252 1 213 1 
196 1 64 5 106 5 250 1 5 2 158 1 252 1 253 1 225 2 213 2 90 1 240 2 28 1 339 1 353 1 378 1 293 1 304 1 368 2 
182 1 319 1 
135 2 237 1 362 2 55 1 319 2 325 1 271 2 344 1 61 1 
137 1 1 1 127 1 
222 1 334 1 251 1 362 1 319 1 192 1 78 1 351 1 256 1 301 1 142 1 271 1 147 1 305 1 382 1 208 1 
135 1 1 1 248 1 334 1 251 1 55 1 362 2 78 1 192 1 351 1 256 1 142 1 301 1 92 1 271 2 147 1 305 1 61 1 382 1 208 1 
135 3 92 1 237 1 271 3 362 3 55 3 319 1 61 3 
135 1 271 1 282 1 362 1 55 1 111 1 61 1 
135 1 237 1 325 1 271 1 282 1 344 1 362 1 55 1 61 1 
248 1 289 1 334 1 276 1 54 1 157 1 251 1 156 1 362 4 55 3 78 1 291 1 256 1 294 1 282 1 344 1 102 1 208 1 86 1 61 3 135 3 369 1 64 1 209 1 106 1 237 2 138 1 212 1 319 1 192 1 351 1 27 2 268 1 142 1 301 1 92 1 115 1 194 1 271 4 272 1 147 1 218 1 305 1 382 1 
135 2 58 1 92 1 271 2 362 2 55 1 319 1 267 1 61 1 
135 3 369 1 64 1 248 1 106 1 237 1 158 1 55 3 362 3 67 1 268 1 115 1 92 2 271 3 282 1 218 1 344 1 61 3 86 1 
135 2 137 1 1 1 237 1 55 2 362 2 92 1 271 2 344 1 61 2 
334 1 251 1 362 1 319 1 192 1 78 1 351 1 256 1 301 1 142 1 271 1 147 1 305 1 382 1 208 1 
334 1 210 1 251 1 362 1 239 1 319 1 192 1 78 1 351 1 256 1 142 1 271 1 147 1 305 1 382 1 
1 2 288 2 289 1 126 1 127 2 157 1 54 4 198 1 226 1 79 1 129 1 291 1 346 1 137 2 167 1 138 1 212 2 27 2 244 1 194 1 70 1 272 1 118 1 330 1 
135 1 125 1 271 1 282 1 218 1 362 1 55 1 61 1 
135 5 248 1 237 1 55 4 362 5 319 1 267 1 58 1 92 2 271 5 366 1 356 1 344 1 61 4 
135 2 125 1 271 2 282 1 362 2 55 2 111 1 61 2 
286 1 195 1 
286 1 195 1 
87 1 326 1 
87 1 326 1 
87 1 326 1 
36 1 286 1 195 1 
286 1 195 1 169 1 
87 1 317 1 286 2 195 2 234 1 326 1 
36 1 286 1 195 1 
36 1 286 1 195 1 
297 1 286 1 195 1 
297 1 286 1 195 1 
297 1 286 1 195 1 
274 1 124 1 64 2 106 2 336 1 290 1 158 1 241 1 322 2 161 2 43 2 286 2 195 2 233 3 260 1 234 1 119 2 94 2 219 1 
290 1 55 2 362 2 201 1 161 1 203 1 364 1 259 1 233 1 61 2 135 2 64 1 106 1 190 1 319 1 169 1 374 1 43 1 286 1 195 1 246 1 271 2 119 1 94 1 
11 1 178 1 38 1 
178 1 38 1 93 1 
314 1 11 2 215 1 38 3 93 1 220 1 
314 1 11 1 228 1 38 2 93 1 220 1 
314 1 11 1 38 2 93 1 220 2 
196 2 308 1 5 1 252 1 158 2 225 1 79 1 201 1 162 2 227 1 163 1 35 1 364 1 101 1 293 1 132 1 368 1 185 1 346 1 64 5 106 5 66 3 167 1 299 2 213 4 372 2 240 1 374 1 28 1 193 1 378 3 330 1 
196 6 5 6 158 5 252 1 225 2 254 1 79 3 162 6 227 1 163 2 35 3 364 4 12 1 101 2 293 1 368 2 185 3 345 5 346 3 284 1 64 9 106 9 66 9 349 1 189 1 167 3 168 1 21 5 213 7 372 6 240 2 28 1 378 8 304 1 330 3 
196 2 158 3 225 1 79 1 162 2 163 1 35 1 364 1 101 1 132 1 368 1 185 2 346 1 64 3 106 3 66 4 167 1 299 1 213 2 240 1 372 2 28 1 193 1 378 3 304 1 330 1 
196 4 158 4 225 1 79 2 162 4 163 1 35 2 364 2 101 1 132 1 368 1 185 3 346 2 284 1 64 4 106 4 66 7 349 1 189 1 167 2 299 2 213 3 372 4 240 1 28 1 193 1 378 5 304 1 330 2 
165 1 182 1 251 1 
204 1 251 1 
235 1 
142 1 251 1 
165 2 142 1 251 3 14 1 78 1 24 1 
142 1 251 1 78 1 
251 1 303 1 
152 1 288 5 97 1 53 1 54 9 198 3 180 1 226 4 79 2 8 1 181 2 81 1 60 1 318 1 186 2 167 2 212 4 69 1 
152 1 288 5 97 1 53 1 54 9 198 3 180 1 226 6 79 2 8 1 181 2 81 1 60 1 318 3 186 2 167 2 212 4 69 1 
152 1 288 5 97 1 53 1 54 9 198 3 180 1 226 4 160 1 79 2 8 1 181 2 81 1 60 1 318 1 186 2 167 2 212 4 69 1 
152 1 289 1 288 18 77 1 53 1 97 2 54 35 157 1 198 6 180 1 226 13 291 1 79 5 8 1 181 3 35 3 81 1 343 3 60 2 207 1 346 3 285 1 262 1 318 7 186 3 167 5 212 17 112 1 27 2 69 2 194 1 145 1 217 4 247 1 330 3 
152 1 289 2 288 6 53 1 97 1 157 2 54 11 198 4 226 6 180 1 79 2 291 2 181 2 81 1 60 1 207 1 318 2 186 2 167 2 212 5 27 4 69 1 194 2 31 1 221 1 
0 1 361 1 178 1 334 1 155 1 307 1 4 2 128 1 7 1 256 1 11 1 130 1 261 1 296 2 103 1 88 1 38 2 166 1 18 1 265 1 19 1 23 1 192 1 351 1 215 1 116 1 93 1 147 1 357 1 48 1 
0 1 306 1 361 1 178 1 334 1 307 1 4 3 128 1 7 1 256 1 11 1 130 1 367 1 261 1 296 3 103 1 88 1 263 1 38 2 166 1 19 1 18 2 23 1 192 1 351 1 215 1 116 1 93 1 147 1 357 1 
0 1 178 1 334 1 307 1 4 2 128 1 256 1 130 1 11 1 367 1 296 2 103 1 88 1 263 1 38 2 19 1 18 2 23 1 192 1 351 1 215 1 116 1 93 1 147 1 357 1 
360 1 306 1 334 1 166 1 307 2 251 1 4 1 98 1 19 2 56 1 255 1 192 1 128 2 7 1 351 1 256 1 130 2 142 1 144 1 147 1 296 1 134 1 382 1 
361 1 178 1 334 1 155 1 307 1 4 1 128 1 7 1 256 1 11 1 130 1 367 1 261 1 296 1 103 1 88 1 38 2 166 1 19 1 192 1 351 1 215 1 116 1 93 1 147 1 48 1 
177 1 
196 2 249 2 334 2 335 1 251 1 5 6 158 2 252 3 337 1 256 1 101 1 342 2 293 1 64 5 63 1 106 5 110 1 66 2 264 2 214 1 351 2 267 1 171 1 28 1 269 1 115 1 271 1 218 1 32 1 360 1 224 4 225 1 362 1 80 2 82 2 282 1 368 1 185 2 134 1 86 1 135 1 369 1 139 1 140 1 192 2 240 1 242 1 375 1 142 1 146 2 378 2 147 1 331 1 52 2 382 2 
249 1 335 1 5 2 224 2 252 1 362 1 282 1 86 1 135 1 369 1 64 3 106 3 188 1 214 1 267 1 171 1 269 1 115 1 271 1 218 1 331 1 32 1 
335 1 5 1 224 3 158 1 252 1 362 1 82 1 282 1 86 1 135 1 369 1 64 3 106 3 188 1 214 1 267 1 171 1 28 1 269 1 115 1 271 1 218 1 331 1 32 1 
249 1 335 1 5 2 252 1 224 3 158 1 362 1 342 1 82 1 282 1 86 1 135 1 369 1 64 3 106 3 188 1 214 1 267 1 171 1 28 1 269 1 115 1 271 1 218 1 331 1 32 1 
196 1 249 4 335 1 5 7 252 3 158 5 337 1 159 1 202 1 342 4 293 1 64 5 106 5 264 2 214 1 267 1 171 1 28 5 269 1 115 1 271 1 218 1 32 1 34 1 224 6 362 1 225 1 80 2 131 1 82 4 282 1 368 1 86 1 185 2 369 1 135 1 188 1 140 1 240 1 378 1 146 2 331 1 96 1 52 2 
196 1 249 2 335 1 5 4 337 1 252 2 158 2 342 2 293 1 64 4 106 4 264 2 66 2 110 1 214 1 267 1 171 1 28 1 269 1 115 1 271 1 218 1 32 1 224 4 362 1 225 1 80 2 82 2 282 1 368 1 86 1 185 2 369 1 135 1 140 1 240 1 378 1 146 2 331 1 52 2 
196 1 249 2 335 1 5 4 34 1 158 1 252 2 337 1 224 4 225 1 362 1 80 2 202 1 131 1 82 2 342 2 282 1 293 1 368 1 185 2 86 1 135 1 369 1 64 4 106 4 264 2 140 1 214 1 240 1 267 1 171 1 28 1 269 1 115 1 146 2 378 1 271 1 218 1 331 1 52 2 32 1 
196 1 249 2 335 1 5 4 34 1 158 1 252 2 337 1 224 4 225 1 362 1 80 2 202 1 131 1 82 2 342 2 282 1 293 1 368 1 185 2 86 1 135 1 369 1 64 4 106 4 264 2 140 1 214 1 240 1 267 1 171 1 28 1 269 1 115 1 146 2 378 1 271 1 218 1 331 1 52 2 32 1 
196 1 249 2 335 1 5 4 158 1 252 2 224 4 225 1 362 1 280 1 131 1 230 2 82 2 342 2 282 1 293 1 295 1 368 1 86 1 135 1 369 1 64 4 106 4 66 2 140 1 214 1 240 1 267 1 172 2 171 1 28 1 269 1 115 1 146 2 378 1 271 1 218 1 331 1 50 1 52 2 32 1 
196 1 249 3 335 1 34 1 5 5 158 1 252 2 337 1 224 5 225 1 362 1 80 2 202 1 131 1 342 3 82 3 293 1 282 1 368 1 185 2 86 1 135 1 369 1 64 4 106 4 264 2 140 1 240 1 214 1 267 1 171 1 28 1 269 1 115 1 146 2 378 1 271 1 218 1 331 1 96 1 52 2 32 1 
196 1 249 3 335 1 34 1 5 5 158 1 252 2 337 1 224 5 225 1 362 1 80 2 202 1 131 1 342 3 82 3 293 1 282 1 368 1 185 2 86 1 135 1 369 1 64 4 106 4 264 2 140 1 240 1 214 1 267 1 171 1 28 1 269 1 115 1 146 2 378 1 271 1 218 1 331 1 96 1 52 2 32 1 
196 1 249 2 335 1 5 4 252 2 158 1 342 2 293 1 64 4 106 4 66 2 110 1 214 1 267 1 171 1 172 2 28 1 269 1 115 1 271 1 218 1 32 1 224 4 362 1 225 1 280 1 230 2 82 2 282 1 368 1 86 1 369 1 135 1 140 1 240 1 378 1 146 2 331 1 52 2 
152 1 289 1 126 1 157 1 186 1 138 1 198 1 226 1 180 1 291 1 27 2 181 1 182 1 194 1 272 1 
1 11 289 2 288 8 154 1 276 1 127 11 157 2 54 14 198 1 226 2 291 2 79 1 35 2 343 3 85 1 346 2 137 4 318 1 138 2 167 2 212 6 112 1 319 1 266 1 27 4 243 1 194 2 272 1 217 3 247 1 273 1 51 1 330 1 
222 1 248 1 289 1 288 1 334 1 276 1 251 1 157 1 54 2 362 2 55 1 78 1 291 1 256 1 208 1 61 1 135 1 137 1 109 1 138 1 212 1 319 1 192 1 351 1 266 1 27 2 142 1 301 1 92 1 44 1 194 1 271 2 379 1 272 1 147 1 305 1 51 1 382 1 
152 1 248 1 1 6 289 3 288 11 334 1 2 2 53 1 157 3 54 22 156 2 251 2 55 1 198 5 291 3 100 1 256 2 9 2 61 1 208 2 346 2 167 4 212 11 266 1 351 1 27 6 26 2 301 2 271 3 272 3 305 2 76 1 75 2 276 1 127 6 362 3 180 1 226 6 78 2 79 4 181 2 35 2 81 1 282 1 83 1 135 1 137 6 318 1 186 2 138 3 319 1 192 1 92 1 142 2 194 3 147 2 51 1 330 2 382 1 
360 1 289 2 288 1 126 1 334 8 276 1 251 3 157 2 54 2 362 1 55 1 291 2 311 1 256 2 340 1 292 1 367 1 61 1 134 1 236 1 135 1 138 2 265 1 212 1 192 8 22 2 351 7 266 1 27 4 92 1 142 2 194 2 271 1 272 2 147 2 120 1 121 1 381 1 382 2 
1 1 289 1 288 1 127 1 157 1 54 3 198 1 55 1 362 1 226 1 291 1 79 1 35 1 232 1 344 1 61 1 346 1 135 1 137 1 237 1 138 1 167 1 212 2 27 2 194 1 271 1 272 1 51 1 330 1 
346 1 137 1 1 1 289 1 288 2 126 1 318 1 127 1 54 2 157 1 138 1 167 1 226 1 291 1 27 2 194 1 70 1 272 1 
137 1 1 1 289 1 126 1 127 1 54 2 157 1 138 1 212 2 198 1 226 1 291 1 129 1 79 1 27 2 194 1 272 1 330 1 
346 1 137 2 1 2 289 1 288 2 126 1 318 1 127 2 54 4 157 1 138 1 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 272 1 330 1 
346 1 137 1 1 1 289 1 288 2 318 1 127 1 54 2 157 1 138 1 167 1 226 1 291 1 27 2 194 1 70 1 272 1 121 1 
137 1 1 1 289 1 127 1 54 2 157 1 138 1 212 2 198 1 226 1 291 1 129 1 79 1 27 2 194 1 272 1 121 1 330 1 
346 1 137 2 1 2 289 1 288 2 318 1 127 2 54 4 157 1 138 1 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 272 1 121 1 330 1 
346 1 137 2 1 2 289 1 288 2 318 1 127 2 157 1 54 4 138 1 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 272 1 330 1 
288 1 289 1 334 1 276 1 54 2 156 1 251 1 157 1 362 1 78 1 291 1 256 1 208 1 138 1 212 1 319 1 192 1 266 1 351 1 27 2 142 1 301 1 194 1 271 1 272 1 147 1 305 1 382 1 
288 1 289 1 334 1 276 1 54 2 251 1 157 1 362 1 78 1 291 1 256 1 210 1 211 1 138 1 212 1 239 1 319 1 192 1 266 1 351 1 27 2 142 1 194 1 271 1 272 1 147 1 305 1 382 1 
346 1 137 2 1 2 289 1 288 2 318 1 127 2 54 4 157 1 138 1 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 272 1 330 1 51 1 
1 2 288 2 289 1 334 1 127 2 54 4 156 1 251 1 157 1 198 1 362 1 226 2 78 1 79 1 291 1 256 1 9 1 35 1 208 1 346 1 137 2 318 1 167 1 138 1 212 2 265 1 192 1 351 1 27 2 301 1 142 1 194 1 271 1 272 1 147 1 330 1 305 1 
1 1 289 1 288 2 127 1 157 1 54 3 55 1 362 1 226 1 79 1 291 1 35 1 344 1 61 1 346 1 135 1 137 1 237 1 318 1 138 1 167 1 212 1 27 2 194 1 271 1 272 1 95 1 330 1 51 1 
289 2 288 9 157 2 54 19 338 1 198 3 226 6 199 1 291 2 79 3 35 3 281 1 343 1 346 3 348 1 318 3 167 3 371 1 212 10 112 1 170 1 27 4 376 2 194 2 71 1 30 2 217 2 31 1 247 1 330 3 
289 3 288 14 275 1 157 3 54 26 198 2 226 4 6 1 79 2 199 2 291 3 35 3 281 2 343 2 207 2 104 1 346 3 348 1 318 2 167 3 212 12 371 1 112 2 27 6 376 4 194 3 71 1 30 1 31 1 217 2 175 1 72 1 73 1 330 2 
152 1 289 3 288 17 275 1 157 3 54 36 338 1 198 4 180 1 6 1 226 8 199 2 291 3 79 4 181 1 35 4 281 1 343 3 207 1 104 1 346 4 348 1 318 4 186 1 167 4 371 1 212 19 112 3 27 6 376 4 194 3 71 1 30 1 217 4 31 1 327 1 175 1 247 1 72 1 73 1 330 4 
152 1 289 4 288 17 275 1 157 4 54 33 338 1 198 4 180 1 6 1 226 7 199 2 291 4 79 3 181 1 35 4 281 1 343 3 207 2 104 1 346 4 348 1 318 3 186 1 167 4 371 1 212 16 112 3 27 8 376 4 194 4 71 1 30 1 217 4 31 1 327 1 175 1 247 1 72 1 73 1 330 3 
152 1 289 2 288 24 275 1 157 2 54 47 198 7 180 1 6 1 226 14 199 1 291 2 79 7 181 1 35 7 281 1 343 4 207 1 104 1 346 7 348 1 318 7 186 1 167 7 371 1 212 23 112 2 27 4 376 4 194 2 71 1 30 1 217 4 31 1 175 1 247 2 72 1 273 2 73 1 330 7 
43 1 286 1 195 1 260 1 234 1 119 1 94 1 148 1 219 1 161 1 
190 1 169 1 
43 1 143 1 286 1 195 1 3 1 119 1 15 1 94 1 161 1 
124 1 64 1 106 1 336 1 290 1 158 1 241 1 322 1 161 1 43 1 286 1 195 1 233 2 260 1 234 1 119 1 94 1 219 1 
124 1 64 1 106 1 336 1 290 1 158 1 241 1 322 1 161 1 43 1 286 1 195 1 233 2 260 1 234 1 119 1 94 1 219 1 
124 1 64 1 106 1 336 1 290 1 158 1 241 1 322 1 161 1 43 1 286 1 195 1 233 2 260 1 234 1 119 1 94 1 219 1 
317 1 36 1 113 1 
317 1 36 1 113 1 
297 1 206 1 
297 1 317 1 206 1 
259 1 246 1 
336 1 362 2 55 2 201 1 161 1 203 1 364 1 259 1 233 1 61 2 316 1 135 2 64 1 106 1 190 1 319 1 213 1 169 1 322 1 374 1 43 1 286 1 195 1 246 1 271 2 119 1 94 1 
36 1 113 1 
297 1 317 1 206 1 
179 1 289 1 288 1 334 2 276 1 251 1 157 1 54 2 278 1 362 2 291 1 256 1 340 1 236 1 135 2 238 1 187 1 138 1 212 1 192 2 22 2 266 1 351 2 27 2 142 1 194 1 271 2 272 1 147 1 51 1 176 1 
88 1 361 1 178 1 38 2 334 2 307 1 265 1 192 2 351 2 256 1 257 1 11 1 215 1 205 1 93 1 59 1 147 1 367 1 103 1 
88 1 361 1 178 1 38 2 334 1 307 1 192 1 351 1 91 1 257 1 256 1 11 1 215 1 93 1 367 1 147 1 103 1 
360 1 334 1 307 1 251 1 56 1 192 1 351 1 256 1 142 1 205 1 313 1 147 1 382 1 134 1 
88 1 361 1 178 1 38 2 334 1 307 1 192 1 351 1 256 1 257 1 11 1 215 1 205 1 93 1 59 1 367 1 147 1 103 1 
309 1 
196 1 28 1 182 1 353 1 378 1 158 1 253 1 
196 1 5 1 337 1 158 2 252 1 225 1 80 1 293 1 368 1 185 1 64 1 106 1 264 1 66 1 240 1 28 1 378 1 
196 8 334 3 2 2 251 10 5 5 252 3 158 8 253 1 162 6 258 1 256 4 101 2 204 3 293 4 346 2 165 2 64 5 347 1 106 5 66 12 167 2 265 1 24 1 351 3 300 2 28 2 115 2 353 1 216 2 303 2 122 2 123 2 225 4 78 3 79 2 35 2 368 4 183 1 184 1 185 6 315 2 192 3 240 4 372 6 323 1 42 2 375 1 142 3 378 9 46 2 147 3 330 2 382 1 151 2 
196 5 275 1 5 1 252 1 158 5 225 2 279 1 6 1 79 2 162 5 35 2 101 1 343 1 293 2 368 2 185 3 315 1 104 1 346 2 64 1 106 1 66 6 167 2 112 1 114 1 372 5 240 2 42 2 28 2 375 1 378 8 217 1 175 1 72 1 330 2 
196 2 53 1 34 1 362 1 225 1 55 1 79 1 181 1 81 1 282 1 293 1 368 1 102 1 133 1 61 1 315 1 135 1 64 1 106 1 237 1 298 1 186 1 167 2 111 1 240 1 42 2 378 2 271 1 
196 1 158 1 253 1 225 1 240 1 28 1 353 1 378 1 293 1 368 1 
315 1 346 2 196 5 2 1 66 10 167 2 158 5 372 5 79 2 42 2 162 5 35 2 378 5 330 2 185 5 
28 1 64 1 106 1 5 1 158 1 252 1 
196 2 360 1 334 4 251 1 5 4 252 2 225 2 256 1 101 2 293 1 368 2 183 2 134 1 64 3 106 3 139 1 192 4 240 2 242 1 351 4 323 1 375 2 377 1 142 1 29 1 378 2 147 1 304 1 382 2 
289 1 334 1 276 1 54 1 156 1 251 1 157 1 362 3 55 2 78 1 291 1 256 1 102 1 61 2 208 1 135 2 209 1 237 2 138 1 212 1 319 1 192 1 351 1 27 2 301 1 142 1 194 1 271 3 272 1 147 1 305 1 382 1 
196 2 66 4 158 4 225 1 372 2 240 1 162 2 28 2 375 1 101 1 378 1 293 1 60 1 368 1 185 2 
43 1 380 1 161 1 
43 1 246 1 260 1 310 1 161 1 
43 1 380 1 161 1 
43 1 380 1 161 1 
43 1 150 1 161 1 
43 1 150 1 161 1 
43 1 150 1 161 1 
43 1 161 1 
286 1 195 1 
152 1 289 2 288 6 53 1 157 2 54 12 198 3 180 1 226 6 291 2 79 2 181 2 81 1 207 1 318 3 186 2 167 2 212 6 27 4 194 2 
181 1 152 1 182 1 186 1 198 1 226 1 180 1 
346 1 289 1 288 2 318 1 157 1 54 4 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 330 1 359 1 
346 1 288 3 318 1 54 7 167 1 212 4 198 1 112 1 226 2 79 1 35 1 343 1 217 2 247 1 330 1 
152 1 288 10 289 1 53 1 54 20 157 1 198 4 180 1 226 6 79 4 291 1 181 2 35 2 81 1 343 2 207 1 85 1 346 2 318 2 186 2 167 4 212 10 27 2 194 1 217 2 247 1 273 1 330 2 
54 1 217 1 212 1 
288 1 54 1 343 1 
346 1 289 1 288 3 2 1 318 1 157 1 54 6 167 1 212 3 198 2 226 3 291 1 79 1 27 2 35 1 194 1 359 1 330 1 
289 1 288 6 275 1 54 12 157 1 198 1 6 1 226 2 291 1 79 2 35 2 343 1 346 2 104 1 318 1 167 2 212 6 112 1 27 2 194 1 217 1 31 1 175 1 72 1 330 2 
288 3 53 1 318 1 54 6 186 1 167 1 212 3 198 1 226 2 79 1 181 1 
152 1 288 1 289 1 318 1 186 1 54 3 157 1 212 2 198 1 226 2 180 1 291 1 27 2 181 1 324 1 194 1 207 1 
288 4 53 1 318 1 186 1 54 8 167 2 212 4 198 2 226 3 79 2 181 1 81 1 
346 1 289 1 288 2 318 1 157 1 54 2 167 1 226 1 291 1 27 2 194 1 31 1 
346 1 289 1 288 2 318 1 157 1 54 4 167 1 212 2 198 1 226 2 79 1 291 1 27 2 35 1 194 1 31 1 330 1 
289 3 288 1 318 1 54 3 157 3 186 1 212 2 338 1 198 1 226 2 291 3 27 6 181 1 324 1 194 3 31 1 207 1 
152 1 289 4 288 13 77 1 53 1 157 4 54 26 198 4 338 1 180 1 226 8 291 4 79 4 181 2 35 2 81 1 343 3 207 1 346 2 262 1 318 4 186 2 167 4 212 13 112 1 27 8 194 4 145 1 217 3 31 1 359 1 330 2 
152 1 289 1 288 5 53 1 54 10 157 1 198 3 180 1 226 4 79 2 291 1 181 2 81 1 343 1 318 1 186 2 167 2 212 5 112 1 27 2 194 1 217 1 31 1 175 1 
152 1 289 2 288 7 53 1 54 13 157 2 198 3 180 1 226 5 79 2 291 2 181 2 35 1 81 1 343 1 346 1 318 2 186 2 167 3 212 6 112 1 27 4 194 2 217 2 31 1 175 1 247 1 359 1 
152 1 289 3 288 10 275 1 53 1 54 21 157 3 198 4 180 1 6 1 226 6 291 3 79 4 181 2 35 2 81 1 343 1 207 1 104 1 346 2 318 2 186 2 167 4 212 11 112 1 27 6 194 3 217 1 31 1 175 1 72 1 359 1 330 2 
152 1 289 3 288 11 275 1 53 1 54 19 157 3 198 4 180 1 6 1 226 8 291 3 79 3 181 2 35 2 81 1 343 1 207 1 346 2 104 1 318 4 186 2 167 4 212 8 112 1 27 6 194 3 217 1 31 1 175 1 72 1 359 1 330 1 
152 1 289 1 288 5 53 1 54 10 157 1 198 3 180 1 226 4 79 2 291 1 181 2 81 1 343 1 318 1 186 2 167 2 212 5 112 1 27 2 194 1 217 1 31 1 175 1 
289 1 288 6 275 1 54 12 157 1 198 1 6 1 226 2 291 1 79 2 35 2 343 1 346 2 104 1 318 1 167 2 212 6 112 1 27 2 194 1 217 1 31 1 175 1 72 1 330 2 
152 1 289 4 288 11 275 1 53 1 54 20 157 4 198 4 180 1 6 1 226 6 291 4 79 3 181 2 35 2 81 1 343 1 207 2 104 1 346 2 318 2 186 2 167 4 212 9 112 1 27 8 194 4 217 1 31 1 175 1 72 1 359 1 330 1 
289 4 288 9 275 1 54 16 157 4 338 1 198 3 6 1 226 6 291 4 79 2 35 3 343 1 207 2 104 1 346 3 318 3 167 3 212 7 112 1 27 8 194 4 217 1 31 1 175 1 72 1 330 2 
152 1 288 2 53 1 318 3 54 5 186 3 167 1 212 3 198 3 180 1 226 6 79 1 181 3 81 1 
152 1 289 4 288 11 275 1 53 1 54 20 157 4 338 1 198 4 180 1 6 1 226 6 291 4 79 3 181 2 35 2 81 1 343 1 207 2 104 1 346 2 318 2 186 2 167 4 212 9 112 1 27 8 194 4 217 1 31 1 175 1 72 1 330 1 
135 1 58 1 271 1 99 1 362 1 319 1 267 1 
135 1 105 1 99 1 362 1 319 1 267 1 141 1 58 1 365 1 229 1 271 1 287 1 
256 1 360 1 182 1 142 1 334 1 251 1 147 1 192 1 351 1 134 1 382 1 
135 1 334 1 251 1 55 1 362 2 319 1 78 1 192 1 351 1 256 1 142 1 92 1 301 1 271 2 147 1 305 1 61 1 382 1 
334 1 251 3 362 2 55 2 78 2 256 1 282 1 183 1 61 1 135 2 369 1 319 1 192 1 351 1 301 1 92 1 142 2 271 2 147 1 218 1 303 1 123 1 305 1 
334 2 251 3 362 2 55 2 78 2 256 1 282 1 183 1 61 1 135 2 369 1 239 1 319 1 192 2 351 2 92 1 142 2 271 2 117 1 147 1 218 1 303 1 123 1 305 1 
165 1 64 2 106 2 334 3 65 1 251 4 5 1 158 1 78 1 192 3 351 3 256 1 28 1 115 1 142 1 204 1 117 1 147 1 303 1 37 1 123 1 382 1 183 1 
165 1 64 2 106 2 334 3 251 4 5 1 158 1 78 1 192 3 351 3 256 1 28 1 115 1 142 1 204 1 46 1 117 1 147 1 303 1 123 1 382 1 183 1 
256 1 334 1 147 1 192 1 351 1 381 1 
223 1 334 7 251 3 265 1 22 1 192 7 78 1 24 1 351 6 311 1 256 3 340 1 142 2 292 1 45 1 367 1 84 1 147 2 120 1 381 1 382 2 
152 1 289 2 288 4 334 1 53 1 156 1 157 2 251 1 54 8 55 1 198 3 291 2 256 1 9 1 208 1 61 1 167 2 265 1 212 4 351 1 26 1 27 4 301 1 271 2 272 2 305 1 362 2 78 1 180 1 226 4 79 2 181 2 81 1 282 1 83 1 135 1 318 1 187 1 186 2 138 2 192 1 319 1 92 1 142 1 194 2 147 1 51 1 
196 1 334 1 251 2 5 2 158 1 252 1 253 1 225 2 204 1 293 2 368 2 165 1 64 3 106 3 213 1 192 1 240 2 351 1 323 1 300 1 28 1 115 1 353 1 378 1 46 1 122 1 382 1 151 1 
165 1 334 2 347 1 251 2 265 1 192 2 78 1 24 1 351 2 256 2 142 1 147 1 381 1 
360 1 334 4 251 1 265 1 350 1 192 4 351 4 256 1 142 1 117 1 147 1 382 1 134 1 
333 1 223 1 334 2 251 1 192 2 78 1 351 2 256 2 142 1 302 1 45 1 355 1 147 1 183 1 
256 1 178 1 38 1 334 1 93 1 147 1 192 1 103 1 351 1 382 1 
256 1 340 1 142 1 334 2 251 1 238 1 147 1 367 1 265 1 192 2 351 2 
360 1 334 5 251 3 265 1 350 1 192 5 351 4 256 2 311 1 340 1 142 2 292 1 147 2 183 1 134 1 382 1 
360 1 334 5 251 3 265 1 350 1 192 5 351 4 200 1 256 2 311 1 340 1 142 2 147 2 183 1 134 1 382 1 
135 1 334 1 251 1 55 1 362 2 239 1 319 1 78 1 192 1 351 1 256 1 142 1 92 1 271 2 147 1 305 1 61 1 382 1 
223 1 334 1 251 1 192 1 78 1 24 1 351 1 256 2 142 1 45 1 84 1 147 1 183 1 
89 1 33 1 191 1 149 1 319 1 
369 1 64 2 153 1 106 2 33 2 89 2 158 1 191 2 319 1 320 1 213 1 28 1 268 1 115 1 354 1 282 1 218 1 149 1 86 1 
135 1 179 1 271 1 89 1 33 1 278 1 362 1 149 1 176 1 
153 1 354 1 149 1 
0 1 182 1 357 1 23 1 
0 1 166 1 4 1 357 1 23 1 7 1 296 1 
19 1 128 1 296 1 
0 1 136 2 166 1 4 3 23 1 7 1 25 1 363 1 357 1 48 1 329 1 296 3 
0 1 166 1 174 1 4 2 357 1 18 1 23 1 7 1 296 2 
164 1 11 1 178 1 38 1 166 1 39 1 4 1 48 1 23 1 7 1 296 1 
166 1 4 1 357 1 48 1 23 1 7 1 296 1 
0 1 166 1 4 1 357 2 48 1 7 1 296 1 
341 1 173 1 166 2 277 1 4 2 357 1 48 1 23 1 7 2 296 2 
0 1 166 1 4 3 40 1 18 2 23 2 7 1 164 1 352 1 357 1 48 1 328 1 296 3 
0 1 178 1 38 2 166 1 107 1 4 2 18 1 23 1 7 1 11 1 215 1 93 1 357 1 48 1 296 2 
0 1 166 2 108 1 4 4 40 1 18 2 23 2 7 2 164 1 174 1 357 1 48 1 296 4 
0 1 166 1 4 1 357 1 48 1 23 1 7 1 296 1 
0 2 136 1 166 1 4 4 40 1 18 2 23 3 7 1 164 1 363 1 245 1 357 2 329 1 296 4 
0 1 166 1 4 2 20 1 18 1 23 1 7 1 10 1 13 1 357 1 48 1 296 2 
0 1 136 2 166 1 4 3 23 1 7 1 363 2 357 1 48 1 47 1 329 1 296 3 
57 2 197 1 23 2 321 1 
166 1 231 1 4 1 48 1 7 1 296 1 
0 1 352 1 166 1 4 2 357 1 18 1 48 1 23 1 7 1 296 2 
358 1 
0 1 166 1 4 1 357 1 48 1 23 1 7 1 296 1 
0 1 136 1 166 1 4 3 18 1 23 1 7 1 352 1 357 1 48 1 296 3 
164 1 245 1 40 1 23 1 
357 1 23 1 

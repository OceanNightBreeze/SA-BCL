#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONDITION | 3665 | if (x) -> if (!x)
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2199 | - -> %
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
165 1 359 1 90 9 94 1 341 5 71 1 75 1 226 1 206 2 34 1 9 1 189 1 78 9 57 1 273 2 274 1 59 1 110 4 212 1 62 7 24 3 297 1 217 1 382 2 
165 1 359 1 90 9 94 1 341 5 71 1 75 1 226 1 206 2 34 1 9 1 189 1 78 9 57 1 273 2 274 1 59 1 110 4 212 1 62 7 24 3 297 1 217 1 382 2 
165 1 299 1 359 1 90 9 94 2 71 2 341 5 123 1 287 1 226 1 206 2 187 1 34 1 9 1 189 2 78 9 273 2 274 1 59 1 212 2 110 4 278 1 62 6 24 3 297 1 41 1 217 1 382 2 
165 1 299 1 359 1 90 9 94 2 71 2 341 5 123 1 287 1 226 1 206 2 187 1 34 1 9 1 189 2 78 9 273 2 274 1 59 1 212 2 110 4 278 1 62 6 24 3 297 1 41 1 217 1 382 2 
165 1 299 1 359 1 90 10 94 2 71 2 341 6 123 1 287 1 226 1 206 2 187 1 34 1 9 1 189 2 78 10 273 2 274 1 59 1 212 2 110 5 278 1 62 7 24 4 297 1 41 1 217 1 382 2 
165 1 299 1 90 7 94 2 71 2 341 4 123 1 287 1 226 1 206 2 187 1 34 1 9 1 189 2 78 7 273 2 274 1 59 1 212 2 110 3 278 1 62 4 24 2 297 1 41 1 217 1 382 1 
165 1 359 1 189 1 78 4 273 1 274 1 90 4 59 1 341 3 71 1 212 1 110 2 62 3 24 1 297 1 206 1 34 1 382 2 
43 1 189 1 78 2 273 1 274 1 90 2 47 1 94 1 341 1 317 1 212 1 278 1 287 1 297 1 206 1 34 1 
78 3 273 2 274 1 90 3 94 1 341 2 110 1 62 1 226 1 24 1 297 1 206 2 34 1 
203 1 25 1 104 1 
247 1 16 2 25 1 
133 1 197 2 161 2 368 2 181 1 234 2 29 2 352 2 
195 2 197 3 170 2 119 1 361 1 259 1 261 2 263 1 284 1 69 1 147 1 72 1 368 2 181 1 289 1 344 2 29 2 30 1 103 1 129 1 52 1 271 1 207 1 130 1 311 1 133 1 231 1 191 1 352 2 109 1 248 2 161 2 277 1 82 1 81 1 234 3 86 1 
197 1 198 1 352 1 161 1 181 1 368 1 29 1 234 1 32 1 53 1 
55 1 197 1 301 1 44 1 218 1 203 1 268 1 366 1 375 1 73 1 29 1 234 1 25 1 53 1 
197 2 301 1 44 2 198 1 203 1 268 2 5 1 366 1 73 1 368 2 181 1 29 2 32 1 53 2 55 1 352 2 161 2 234 2 25 1 
268 1 44 1 151 1 262 1 339 1 
203 1 268 2 44 2 204 1 151 1 19 1 25 1 262 1 
268 1 44 1 151 1 
197 1 44 1 262 1 198 1 352 1 268 1 5 1 161 1 181 1 368 1 29 1 234 1 32 1 53 1 
25 1 
203 1 209 1 268 2 44 2 151 1 19 1 25 1 262 1 
369 1 169 1 44 5 241 1 262 2 173 1 121 1 266 1 203 1 268 5 364 2 267 1 19 1 151 2 25 1 236 1 115 2 253 2 331 1 
133 1 197 3 161 3 368 3 234 3 29 3 186 1 352 1 
197 1 161 1 368 1 234 1 29 1 198 1 53 1 
197 1 352 1 161 1 149 1 368 1 29 1 234 1 162 1 53 1 
195 2 197 4 170 1 301 1 44 1 361 1 261 1 263 1 284 1 69 1 268 1 147 1 72 1 366 1 73 1 368 3 181 1 289 1 344 1 29 3 103 1 30 1 129 1 52 1 186 1 207 1 53 1 130 1 55 1 311 1 133 1 348 1 191 1 352 2 109 1 248 1 160 1 161 3 277 1 81 1 234 4 162 1 85 1 86 1 
345 1 197 2 133 1 218 1 161 1 368 1 29 2 234 2 357 1 186 1 53 1 
332 1 55 1 197 3 44 1 301 1 348 1 352 1 268 1 160 1 366 1 161 3 73 1 368 3 29 3 234 3 25 1 162 1 186 2 53 1 
197 2 2 1 352 1 161 2 321 1 368 2 29 2 234 2 162 1 186 1 
130 1 311 1 133 1 197 1 361 1 261 1 284 1 248 1 72 1 344 1 234 1 30 1 103 1 52 1 129 1 
130 1 311 1 133 1 197 1 361 1 261 1 248 1 100 1 72 1 344 1 234 1 103 1 52 1 129 1 356 1 
195 2 170 4 2 2 89 1 263 1 243 1 175 1 147 1 177 1 289 1 101 1 228 2 158 1 315 1 351 1 191 1 109 2 60 1 321 2 277 1 82 2 81 1 379 1 21 1 
55 1 197 1 161 1 368 1 29 1 234 1 205 1 53 1 
133 1 104 1 
197 2 133 1 352 1 149 1 161 1 368 1 29 2 234 2 162 1 357 1 53 1 
321 1 2 1 228 1 
130 1 311 1 133 1 197 1 219 1 361 1 261 1 284 1 248 1 72 1 344 1 234 1 30 1 103 1 129 1 52 1 
130 1 311 1 197 2 2 1 361 1 348 1 261 1 284 1 248 1 72 1 161 1 368 1 344 1 29 1 234 2 103 1 30 1 129 1 52 1 186 1 
345 1 197 5 133 1 218 1 348 1 352 1 98 1 161 4 368 4 324 1 29 5 234 5 162 1 186 2 
197 1 161 1 368 1 234 1 29 1 198 1 53 1 
154 1 346 1 327 1 
346 1 327 1 192 1 
346 1 327 1 192 1 
346 1 327 1 192 1 
346 1 327 1 
346 1 327 1 
372 1 64 1 
372 1 64 1 
372 1 64 1 
154 1 346 1 327 1 
154 1 346 1 327 1 
346 1 327 1 106 1 
208 1 346 2 370 1 372 1 64 1 327 2 
208 1 298 1 210 1 346 2 118 2 44 2 135 2 230 1 374 1 303 1 36 2 336 2 211 3 268 2 353 2 279 1 327 2 25 1 330 1 
197 2 87 1 118 1 44 1 256 1 336 1 260 1 268 1 368 2 29 2 227 1 346 1 347 1 133 1 374 1 36 1 106 1 13 1 211 1 353 1 161 2 376 1 234 2 327 1 
71 1 212 1 189 1 
317 1 212 1 189 1 
71 2 317 1 212 3 172 1 164 1 153 1 
71 1 317 1 212 2 102 1 172 1 164 1 
71 1 317 1 212 2 172 1 164 2 
239 2 87 1 68 1 44 5 3 2 93 1 262 4 120 1 173 2 121 3 175 1 203 1 364 1 268 5 176 1 74 1 151 1 77 1 227 1 247 1 347 1 369 1 371 2 158 1 351 1 16 3 19 1 21 1 25 2 115 1 281 1 253 1 
239 6 300 1 68 3 44 9 262 7 120 1 173 6 339 5 121 8 266 1 175 3 203 1 268 9 364 2 74 2 151 6 227 4 188 1 247 3 369 1 134 5 371 6 158 3 351 3 16 9 295 1 19 1 193 1 21 3 215 1 25 5 115 2 281 2 380 1 253 2 
239 2 44 3 68 1 3 1 262 2 173 2 121 3 175 1 266 1 203 1 176 1 364 1 268 3 74 1 77 1 227 1 247 2 371 2 158 1 351 1 16 4 21 1 25 3 115 1 281 1 253 1 
239 4 44 4 68 2 3 2 262 3 173 4 121 5 175 2 266 1 203 1 364 1 268 4 176 1 74 1 77 1 227 2 188 1 247 3 371 4 158 2 351 2 16 7 295 1 193 1 21 2 25 4 115 1 281 1 253 1 
129 1 52 1 
237 1 257 1 361 1 355 1 225 2 52 1 129 2 
225 1 129 1 104 1 
184 1 129 1 
355 1 
361 1 129 1 52 1 
6 1 129 1 
291 1 170 7 45 1 11 1 158 1 12 1 362 1 340 1 109 3 175 1 177 2 124 1 61 1 20 2 101 3 82 4 280 1 
291 1 170 7 45 1 11 1 158 1 12 1 362 1 340 1 109 3 175 1 177 2 124 1 61 1 20 2 101 3 82 4 280 1 
291 1 170 7 45 1 11 1 158 1 12 1 362 1 340 1 109 3 175 1 177 2 124 1 61 1 20 2 101 3 82 4 65 1 280 1 
195 2 238 1 170 31 68 3 45 2 302 1 263 1 221 1 362 1 340 2 175 4 99 1 147 1 177 5 124 2 289 1 101 10 291 2 132 1 11 5 12 1 158 4 351 3 191 1 109 15 276 1 61 1 40 4 377 1 20 3 82 16 21 3 280 1 216 3 
195 4 170 9 45 1 263 2 340 1 362 1 175 1 147 2 177 3 124 1 289 2 101 4 185 1 291 1 132 1 11 1 158 1 12 1 191 2 109 4 61 1 20 2 82 5 235 1 
90 2 258 1 261 1 94 1 95 1 341 1 71 1 344 1 7 1 103 1 206 1 309 1 34 1 153 1 311 1 189 1 78 2 273 1 274 1 232 1 138 1 316 1 248 1 317 1 318 1 212 2 139 1 17 1 62 1 297 1 
90 3 258 1 46 1 261 1 94 1 95 1 341 1 71 1 125 1 344 1 7 1 103 1 206 1 309 1 153 1 131 1 311 1 189 1 78 3 273 1 274 1 232 1 138 1 248 1 317 1 318 1 212 2 17 1 62 2 297 1 
90 2 258 1 261 1 94 1 341 1 71 1 125 1 344 1 7 1 103 1 309 1 153 1 131 1 311 1 189 1 78 2 274 1 138 1 248 1 317 1 318 1 212 2 17 1 62 2 297 1 
130 1 144 1 311 1 78 1 273 1 90 1 46 1 261 1 94 2 244 1 138 2 39 1 248 1 286 1 318 2 17 2 326 1 344 1 308 1 103 1 129 1 52 1 206 1 
90 1 258 1 261 1 94 1 95 1 71 1 125 1 344 1 7 1 103 1 206 1 309 1 34 1 153 1 311 1 189 1 78 1 273 1 232 1 138 1 316 1 248 1 317 1 318 1 212 2 17 1 
290 1 
196 1 145 5 197 1 44 4 334 2 4 1 96 1 203 1 151 5 53 1 247 2 54 2 55 1 10 1 108 1 19 2 214 1 25 1 113 2 163 3 115 1 253 1 117 1 255 3 301 1 218 1 220 1 173 1 121 1 268 4 364 1 366 1 179 1 73 1 29 1 128 1 369 1 314 1 323 3 375 1 234 1 140 2 
196 1 145 5 117 1 197 1 255 3 44 4 301 1 334 2 218 1 4 1 220 1 173 1 96 1 121 1 203 1 364 1 268 4 366 1 73 1 179 1 151 5 29 1 128 1 53 1 247 2 54 2 55 1 369 1 10 1 314 1 108 1 375 1 323 3 19 2 234 1 140 2 214 1 25 1 113 2 163 3 115 1 253 1 
145 4 255 2 197 1 44 4 301 1 218 1 4 1 173 1 96 1 121 1 203 1 364 1 268 4 222 1 366 1 367 2 73 1 179 1 151 4 29 1 128 1 53 1 54 2 156 2 55 1 369 1 10 1 108 1 16 2 323 2 375 1 19 2 234 1 25 1 113 2 163 2 115 1 253 1 358 1 
144 1 145 4 197 1 44 5 334 2 282 1 4 1 96 1 203 1 151 6 344 2 103 1 52 1 53 1 247 2 54 2 55 1 10 1 349 1 108 1 16 2 248 2 19 3 25 2 113 2 163 2 115 1 253 1 255 2 301 1 218 1 261 2 220 1 173 2 121 2 268 5 364 1 222 1 223 1 366 1 73 1 179 1 74 1 29 1 129 1 128 1 130 2 272 1 311 1 369 1 323 2 375 1 326 1 234 1 140 2 
209 1 55 1 145 2 197 1 301 1 44 3 10 1 218 1 4 1 108 1 268 3 366 1 179 1 375 1 73 1 19 1 151 2 29 1 234 1 163 1 128 1 53 1 
145 3 197 1 44 3 301 1 218 1 4 1 203 1 268 3 366 1 73 1 179 1 151 1 29 1 128 1 53 1 209 1 55 1 10 1 108 1 375 1 323 1 19 1 234 1 25 1 
145 3 197 1 255 1 44 3 301 1 218 1 4 1 203 1 268 3 366 1 73 1 179 1 151 2 29 1 128 1 53 1 209 1 55 1 10 1 108 1 375 1 323 1 19 1 234 1 25 1 163 1 
196 1 145 6 197 1 44 5 334 2 4 1 96 1 203 5 151 7 53 1 247 2 209 1 54 2 55 1 10 1 108 1 19 3 214 1 25 5 113 2 163 4 115 1 253 1 117 1 255 4 301 1 218 1 28 1 220 1 173 1 121 1 268 5 364 1 366 1 179 1 73 1 29 1 128 1 369 1 314 1 375 1 323 4 234 1 140 2 
145 4 197 1 44 4 334 2 4 1 96 1 203 1 151 4 53 1 247 2 54 2 55 1 10 1 108 1 16 2 19 2 113 2 25 2 163 2 115 1 253 1 255 2 301 1 218 1 220 1 173 1 121 1 268 4 364 1 366 1 222 1 179 1 73 1 29 1 128 1 369 1 375 1 323 2 234 1 140 2 
196 1 145 4 255 2 197 1 44 4 301 1 334 2 218 1 4 1 220 1 173 1 96 1 121 1 203 1 364 1 268 4 366 1 73 1 179 1 151 4 29 1 128 1 53 1 247 2 54 2 55 1 369 1 10 1 314 1 108 1 323 2 375 1 19 2 234 1 140 2 214 1 25 1 113 2 163 2 115 1 253 1 
196 1 145 4 255 2 197 1 44 4 301 1 334 2 218 1 4 1 220 1 173 1 96 1 121 1 203 1 364 1 268 4 366 1 73 1 179 1 151 4 29 1 128 1 53 1 247 2 54 2 55 1 369 1 10 1 314 1 108 1 323 2 375 1 19 2 234 1 140 2 214 1 25 1 113 2 163 2 115 1 253 1 
196 1 145 4 255 2 197 1 44 4 301 1 218 1 4 1 173 1 96 1 121 1 203 1 364 1 268 4 366 1 367 2 73 1 179 1 151 4 29 1 128 1 53 1 54 2 156 2 55 1 369 1 10 1 108 1 16 2 323 2 375 1 19 2 234 1 25 1 113 2 163 2 114 1 84 1 115 1 253 1 358 1 
195 2 170 2 11 1 2 1 158 1 263 1 191 1 243 1 60 1 147 1 321 1 277 1 289 1 101 1 81 1 82 2 21 1 228 1 
195 2 170 2 2 1 263 1 191 1 351 1 175 1 109 2 60 1 147 1 177 1 321 1 277 1 289 1 101 1 81 1 379 1 228 1 
195 2 68 1 170 4 2 2 263 1 175 1 147 1 177 1 289 1 101 2 228 2 11 1 158 1 191 1 351 1 109 2 60 1 321 2 277 1 82 2 81 1 21 1 
195 2 170 2 11 1 2 1 158 1 263 1 191 1 243 1 147 1 321 1 277 1 289 1 101 1 81 1 82 2 21 1 83 1 228 1 
195 2 170 2 2 1 263 1 191 1 351 1 175 1 109 2 147 1 177 1 321 1 277 1 289 1 101 1 81 1 379 1 83 1 228 1 
195 2 68 1 170 4 2 2 263 1 175 1 147 1 177 1 289 1 101 2 228 2 11 1 158 1 191 1 351 1 109 2 321 2 277 1 82 2 81 1 21 1 83 1 
195 2 170 4 68 1 2 2 263 1 175 1 147 1 177 1 289 1 101 2 228 2 11 1 158 1 191 1 351 1 109 2 321 2 277 1 82 2 81 1 21 1 
195 2 197 1 170 2 361 1 261 1 263 1 284 1 69 1 72 1 147 1 344 1 289 1 103 1 30 1 52 1 129 1 207 1 130 1 311 1 133 1 231 1 191 1 109 1 248 1 277 1 82 1 234 1 81 1 
195 2 197 1 170 2 361 1 261 1 263 1 199 1 69 1 100 1 72 1 147 1 344 1 289 1 103 1 52 1 129 1 130 1 311 1 133 1 231 1 191 1 109 1 248 1 277 1 82 1 234 1 81 1 356 1 
195 2 68 1 170 4 2 2 263 1 175 1 147 1 177 1 289 1 101 2 228 2 79 1 11 1 158 1 191 1 351 1 109 2 321 2 277 1 82 2 81 1 21 1 
195 2 197 1 170 4 68 1 2 2 361 1 261 1 263 1 284 1 175 1 72 1 147 1 177 1 344 1 289 1 101 2 103 1 30 1 52 1 129 1 207 1 228 2 311 1 11 1 158 1 351 1 191 1 109 2 248 1 139 1 321 2 112 1 277 1 82 2 234 1 81 1 21 1 
195 2 197 1 68 1 170 3 2 1 263 1 175 1 147 1 368 1 289 1 101 1 29 1 310 1 228 1 11 1 79 1 158 1 351 1 191 1 352 1 109 1 161 1 321 1 277 1 81 1 234 1 82 2 21 1 162 1 
195 2 170 6 2 1 263 1 340 1 362 1 175 1 147 1 177 2 124 1 289 1 101 2 104 1 228 1 133 2 12 1 158 1 191 1 109 3 60 1 321 1 61 1 277 1 20 1 81 1 82 3 
195 4 170 14 68 2 2 11 302 1 263 2 49 1 69 1 175 1 365 1 147 2 177 1 289 2 101 2 228 11 133 1 11 1 79 1 231 1 292 1 158 2 80 1 191 2 351 1 109 6 321 4 277 1 377 1 40 3 81 2 82 8 21 2 216 3 
195 2 166 1 197 2 170 2 219 1 361 1 261 1 263 1 284 1 202 1 69 1 72 1 147 1 368 1 344 1 289 1 29 1 103 1 30 1 129 1 52 1 186 1 130 1 311 1 133 1 79 1 348 1 231 1 191 1 109 1 248 1 161 1 321 1 277 1 251 1 81 1 234 2 82 1 
195 6 197 3 2 7 284 2 340 1 147 3 344 3 289 3 288 2 101 8 103 2 52 2 207 2 11 4 348 1 12 1 158 3 107 2 351 2 109 10 248 3 161 1 61 1 112 2 354 2 18 1 20 1 21 2 170 20 68 2 361 2 261 3 263 3 362 1 69 1 175 3 72 2 177 4 125 1 124 1 368 1 29 1 30 2 129 2 186 1 228 7 130 1 311 2 133 2 79 1 231 1 191 3 322 1 321 7 277 3 234 3 81 3 82 10 141 1 
195 4 142 1 144 1 240 1 197 1 170 2 261 8 263 2 69 1 147 2 305 1 269 1 125 1 368 1 344 8 289 2 29 1 31 1 103 2 129 3 52 2 186 1 271 2 130 2 35 1 311 2 231 1 191 2 109 1 248 7 60 1 139 1 161 1 277 2 326 1 234 1 81 2 82 1 83 1 
195 2 197 1 68 1 170 3 2 1 263 1 175 1 147 1 177 1 368 1 150 1 289 1 101 1 29 1 228 1 79 1 158 1 191 1 351 1 352 1 109 2 161 1 321 1 277 1 81 1 234 1 82 1 21 1 162 1 
195 4 170 19 68 3 283 1 302 1 263 2 174 1 175 3 342 2 147 2 177 3 289 2 101 6 185 1 33 1 11 3 58 1 158 3 191 2 351 3 37 1 109 10 325 2 40 2 377 1 82 9 194 1 21 3 296 1 216 1 
195 6 1 1 170 26 68 3 283 1 263 3 97 1 174 1 175 2 342 4 147 3 177 2 289 3 101 4 185 1 312 1 132 2 11 2 373 1 275 1 58 2 158 3 191 3 351 2 37 2 109 12 325 1 377 2 40 2 82 14 21 3 296 1 216 2 66 1 
195 6 1 1 283 1 97 1 340 1 342 4 147 3 289 3 101 8 11 4 58 2 158 5 12 1 351 4 109 21 61 1 20 1 21 4 296 1 216 3 66 1 68 4 170 41 302 1 263 3 174 1 362 1 175 5 265 1 177 4 124 1 185 1 312 1 132 1 275 1 373 1 191 3 37 1 377 3 40 4 325 1 82 20 194 1 
195 8 1 1 170 38 68 4 283 1 302 1 263 4 97 1 174 1 362 1 340 1 265 1 175 4 342 4 147 4 177 4 124 1 289 4 101 7 185 1 312 1 132 2 11 3 373 1 275 1 58 2 12 1 158 5 191 4 351 3 37 1 109 18 61 1 325 1 40 4 377 3 20 1 82 20 194 1 21 4 296 1 216 3 66 1 
195 4 1 1 170 52 68 7 283 1 302 2 263 2 97 1 174 1 362 1 340 1 175 8 342 4 147 2 177 7 124 1 289 2 101 14 185 1 312 1 132 1 11 7 373 1 275 1 58 1 12 1 158 8 80 2 191 2 351 7 37 1 109 25 61 1 325 1 40 4 377 2 20 1 82 27 21 7 296 1 216 4 66 1 
208 1 298 1 210 1 346 1 44 1 118 1 135 1 230 1 374 1 36 1 336 1 211 2 268 1 353 1 279 1 327 1 25 1 330 1 
208 1 298 1 210 1 346 1 44 1 118 1 135 1 230 1 374 1 36 1 336 1 211 2 268 1 353 1 279 1 327 1 25 1 330 1 
208 1 298 1 210 1 346 1 44 1 118 1 135 1 230 1 374 1 36 1 336 1 211 2 268 1 353 1 279 1 327 1 25 1 330 1 
154 1 313 1 370 1 
154 1 313 1 370 1 
159 1 192 1 
159 1 370 1 192 1 
376 1 13 1 
197 2 87 1 44 1 118 1 256 1 336 1 260 1 262 1 268 1 368 2 29 2 227 1 210 1 346 1 347 1 133 1 135 1 36 1 106 1 13 1 211 1 353 1 319 1 161 2 376 1 234 2 327 1 
208 1 353 1 346 1 118 1 279 1 327 1 336 1 36 1 330 1 14 1 
106 1 260 1 
353 1 346 1 118 1 126 1 327 1 51 1 336 1 36 1 329 1 
154 1 313 1 
159 1 370 1 192 1 
195 2 142 1 168 1 197 2 170 2 261 2 263 1 69 1 147 1 305 1 182 1 344 2 289 1 127 1 29 2 103 1 129 1 52 1 271 2 311 1 79 1 231 1 191 1 109 1 248 2 249 1 250 1 277 1 81 1 234 2 82 1 
143 1 311 1 67 1 189 1 261 2 146 1 232 1 138 1 71 1 317 1 248 2 212 2 139 1 125 1 344 2 7 1 103 1 309 1 153 1 
67 1 311 1 189 1 261 1 232 1 138 1 71 1 317 1 248 1 212 2 125 1 344 1 7 1 103 1 309 1 153 1 381 1 
130 1 144 1 311 1 261 1 146 1 138 1 248 1 344 1 378 1 326 1 308 1 103 1 129 1 52 1 
143 1 311 1 67 1 189 1 261 1 146 1 232 1 138 1 71 1 317 1 248 1 212 2 125 1 344 1 7 1 103 1 309 1 153 1 
178 1 
195 2 197 3 170 1 361 1 261 1 263 1 284 1 69 1 147 1 72 1 368 2 181 1 289 1 344 1 29 2 30 1 103 1 52 1 129 1 207 1 130 1 311 1 133 1 191 1 352 2 109 1 248 1 161 2 277 1 234 3 81 1 86 1 
247 2 239 2 369 1 371 2 282 1 173 2 121 1 16 4 203 2 364 1 74 1 20 1 25 4 115 1 253 1 
203 1 25 1 104 1 173 1 236 1 121 1 331 1 
44 1 334 1 220 1 173 1 121 1 203 1 364 1 268 1 151 1 247 1 369 1 16 1 19 1 140 1 25 2 115 1 253 1 
42 2 237 1 239 6 44 5 282 1 92 2 338 2 203 2 245 2 6 2 344 3 151 5 103 3 52 3 152 2 8 2 247 6 105 1 158 2 351 2 15 1 248 3 16 12 111 1 354 2 19 3 21 2 25 8 115 4 253 4 167 2 301 2 68 2 361 3 261 3 173 8 121 9 175 2 364 4 268 5 74 2 76 1 225 2 184 3 129 10 270 2 130 1 311 4 369 4 371 6 38 1 139 1 236 1 331 1 
239 5 0 1 44 1 68 2 282 1 173 5 97 1 338 2 121 8 175 2 203 2 268 1 364 2 148 1 74 1 151 1 270 1 247 3 312 1 369 2 371 5 373 1 275 1 158 2 351 2 16 6 40 1 377 1 19 1 21 2 25 5 216 1 115 2 66 1 253 2 
197 1 44 1 198 1 173 2 338 2 340 1 362 1 121 2 175 1 364 1 268 1 5 1 124 1 181 1 368 1 29 1 32 1 270 1 53 1 369 1 158 2 352 1 161 1 213 1 234 1 214 1 115 1 253 1 
369 1 173 1 121 1 203 1 364 1 25 1 236 1 115 1 253 1 331 1 
247 5 239 5 68 2 371 5 158 2 173 5 338 2 351 2 121 5 175 2 16 10 354 1 21 2 25 5 270 1 
203 1 268 1 44 1 151 1 19 1 25 1 
144 1 44 3 282 2 261 4 173 2 201 1 121 2 266 1 364 2 268 3 223 1 74 2 344 4 151 4 103 1 129 1 52 1 130 2 311 1 272 1 369 1 137 1 38 2 15 1 248 4 19 2 326 1 115 2 253 2 
122 1 353 1 336 1 
363 1 353 1 336 1 
363 1 353 1 336 1 
363 1 353 1 336 1 
353 1 336 1 
346 1 327 1 
122 1 353 1 336 1 
122 1 353 1 336 1 
353 1 376 1 48 1 336 1 330 1 
195 4 132 1 170 8 11 1 158 1 12 1 263 2 191 2 362 1 340 1 175 1 109 4 147 2 177 2 61 1 124 1 20 1 289 2 82 4 101 3 
170 6 12 1 158 1 340 1 362 1 109 3 175 1 177 2 61 1 124 1 20 1 101 2 82 3 104 1 
195 2 68 1 170 4 11 1 335 1 158 1 263 1 351 1 191 1 109 2 175 1 147 1 177 1 289 1 101 2 82 2 21 1 
170 7 68 1 11 1 302 1 158 1 351 1 175 1 109 4 177 1 377 1 40 2 82 3 101 2 21 1 216 1 
195 4 68 2 170 23 302 1 263 2 49 1 362 1 340 2 175 3 70 1 147 2 177 5 124 2 289 2 101 9 132 2 11 4 12 1 158 3 80 1 351 2 191 2 109 12 61 1 40 2 20 1 82 11 21 2 216 2 
109 1 170 1 40 1 
170 1 82 1 216 1 
195 2 170 6 68 1 11 1 335 1 158 1 263 1 191 1 351 1 109 3 175 1 147 1 177 2 354 1 289 1 82 3 101 3 21 1 
195 2 312 1 68 2 170 12 11 1 373 1 275 1 158 2 263 1 97 1 351 2 191 1 175 2 109 6 147 1 177 1 377 1 40 1 289 1 101 2 82 6 21 2 185 1 216 1 66 1 
170 6 11 1 158 1 362 1 340 1 175 1 109 3 177 1 124 1 82 3 101 2 
195 2 132 1 170 3 11 1 12 1 263 1 191 1 340 1 70 1 109 2 147 1 177 1 124 1 61 1 289 1 82 1 101 2 
195 2 170 10 11 2 158 2 263 1 191 1 340 2 362 1 109 5 175 2 147 1 177 3 213 1 124 2 289 1 101 5 82 5 185 1 
195 2 170 2 11 1 158 1 263 1 191 1 147 1 289 1 82 2 101 1 21 1 185 1 
195 2 68 1 170 4 11 1 158 1 263 1 351 1 191 1 109 2 175 1 147 1 177 1 289 1 101 2 82 2 21 1 185 1 
195 6 132 1 170 3 11 1 263 3 191 3 340 1 70 1 109 2 147 3 177 1 124 1 289 3 101 2 82 1 194 1 185 1 
195 10 238 1 170 34 68 3 335 1 302 1 263 5 221 1 362 2 340 3 70 1 99 1 175 5 147 5 177 7 124 3 289 5 101 12 185 1 132 2 11 5 12 1 158 5 191 5 351 3 109 18 61 1 40 4 377 1 20 1 82 16 194 1 21 3 216 3 
195 2 170 8 263 1 340 1 362 1 175 1 147 1 177 2 124 1 289 1 101 2 185 1 275 1 158 1 12 1 191 1 109 4 61 1 40 1 377 1 20 1 82 4 216 1 
195 4 170 11 68 1 335 1 302 1 263 2 362 1 340 1 175 1 147 2 177 2 124 1 289 2 101 3 185 1 11 1 275 1 12 1 158 2 191 2 109 5 61 1 40 2 377 1 20 1 82 6 21 1 216 1 
195 6 170 19 68 2 335 1 263 3 97 1 362 1 340 1 175 3 147 3 177 3 124 1 289 3 101 4 185 1 312 1 132 1 11 1 275 1 373 1 12 1 158 3 191 3 351 2 109 10 61 1 40 1 377 1 20 1 82 9 21 2 216 1 66 1 
195 6 170 17 68 2 335 1 263 3 97 1 362 1 340 1 175 2 147 3 177 3 124 1 289 3 101 5 185 1 312 1 132 1 11 2 275 1 373 1 12 1 158 3 191 3 351 1 109 7 61 1 40 1 377 1 20 1 82 10 21 2 216 1 66 1 
195 2 170 8 263 1 340 1 362 1 175 1 147 1 177 2 124 1 289 1 101 2 185 1 275 1 158 1 12 1 191 1 109 4 61 1 40 1 377 1 20 1 82 4 216 1 
195 2 312 1 68 2 170 12 11 1 373 1 275 1 158 2 263 1 97 1 351 2 191 1 175 2 109 6 147 1 177 1 377 1 40 1 289 1 101 2 82 6 21 2 185 1 216 1 66 1 
195 8 170 18 68 2 335 1 263 4 97 1 362 1 340 1 175 2 147 4 177 3 124 1 289 4 101 5 185 1 312 1 132 2 11 2 373 1 275 1 12 1 158 3 191 4 351 1 109 8 61 1 40 1 377 1 20 1 82 10 21 2 216 1 66 1 
195 8 170 16 68 3 263 4 97 1 175 2 147 4 177 3 289 4 101 6 185 1 312 1 132 2 11 3 373 1 275 1 158 3 191 4 351 2 109 7 40 1 377 1 82 9 194 1 21 3 216 1 66 1 
170 7 11 3 12 1 158 1 340 3 362 1 109 4 175 1 177 3 61 2 124 3 101 6 82 3 
195 8 170 18 68 2 263 4 97 1 362 1 340 1 175 2 147 4 177 3 124 1 289 4 101 4 185 1 312 1 132 2 11 1 373 1 275 1 12 1 158 3 191 4 351 1 109 8 61 1 40 1 377 1 20 1 82 10 194 1 21 2 216 1 66 1 
345 1 133 1 197 1 218 1 234 1 29 1 23 1 
345 1 56 1 133 1 197 1 360 1 218 1 91 1 350 1 294 1 29 1 234 1 23 1 
130 1 248 1 144 1 311 1 326 1 344 1 103 1 261 1 129 1 52 1 104 1 
130 1 311 1 133 1 197 2 361 1 261 1 248 1 72 1 161 1 368 1 344 1 29 1 234 2 30 1 103 1 129 1 52 1 186 1 
197 2 361 2 261 1 245 1 72 1 366 1 6 1 368 1 344 1 29 2 103 1 30 1 52 2 129 3 186 1 53 2 55 1 311 1 133 1 38 1 248 1 161 2 234 2 357 1 
197 2 361 2 261 1 245 1 72 1 366 1 6 1 368 1 344 1 29 2 103 1 52 2 129 3 186 1 53 2 55 1 311 1 133 1 38 1 248 1 161 2 234 2 357 1 356 1 
130 1 311 1 301 1 44 2 361 1 261 3 38 1 203 1 245 1 248 3 268 2 6 1 344 3 151 1 307 1 225 1 25 1 22 1 184 1 103 1 52 1 129 4 252 1 
130 1 42 1 311 1 301 1 44 2 361 1 261 3 38 1 203 1 245 1 248 3 268 2 6 1 344 3 151 1 225 1 25 1 184 1 103 1 52 1 129 4 252 1 
248 1 35 1 311 1 344 1 103 1 261 1 
130 2 237 1 35 1 311 3 240 1 361 1 261 7 293 1 264 1 248 6 305 1 269 1 139 1 320 1 125 1 344 7 31 1 103 2 52 2 129 3 271 1 
195 4 197 2 2 1 284 1 340 1 147 2 288 1 344 1 289 2 101 2 103 1 52 1 207 1 12 1 158 1 109 3 248 1 161 1 112 1 250 1 61 1 20 1 170 6 361 1 261 1 263 2 362 1 175 1 72 1 177 2 124 1 368 1 29 1 30 1 129 1 186 1 228 1 311 1 133 2 79 1 191 2 139 1 321 1 277 2 234 2 81 2 82 3 
42 1 167 1 44 3 301 1 92 1 261 1 262 1 173 1 121 1 203 1 364 2 268 3 344 1 151 2 225 1 184 1 129 2 152 1 130 1 369 2 15 1 248 1 19 1 25 1 236 1 115 2 253 2 331 1 
237 1 35 1 311 2 105 1 361 1 261 2 248 2 139 1 344 2 225 1 103 1 52 1 129 2 
130 1 144 1 311 1 229 1 261 4 248 4 139 1 344 4 326 1 103 1 52 1 129 1 252 1 
311 2 361 1 242 1 261 2 264 1 38 1 248 2 320 1 322 1 180 1 344 2 103 1 52 1 129 1 
130 1 317 1 248 1 212 1 311 1 189 1 344 1 103 1 261 1 309 1 
248 2 311 1 305 1 168 1 139 1 125 1 344 2 103 1 261 2 129 1 52 1 
130 1 144 1 311 2 229 1 261 5 38 1 248 4 139 1 269 1 305 1 326 1 344 5 103 2 31 1 52 2 129 3 
130 1 144 1 311 2 229 1 261 5 38 1 248 4 139 1 305 1 326 1 344 5 343 1 103 2 31 1 52 2 129 3 
130 1 311 1 133 1 197 2 361 1 261 1 248 1 72 1 161 1 368 1 344 1 29 1 234 2 103 1 129 1 52 1 186 1 356 1 
237 1 311 2 361 1 261 1 293 1 264 1 38 1 248 1 320 1 344 1 103 1 52 1 129 1 
27 1 157 1 249 1 197 1 171 1 182 1 234 1 29 1 127 1 
155 1 27 1 183 1 
27 1 157 1 133 1 171 1 200 1 
27 1 197 1 44 2 301 1 171 1 262 1 198 1 200 1 203 1 268 2 5 1 366 1 73 1 368 1 181 1 183 1 29 1 306 1 32 1 53 2 155 1 157 1 55 1 352 1 160 1 161 1 234 1 25 1 
9 1 78 3 273 1 90 3 274 1 341 1 62 1 278 1 206 1 297 1 34 1 
341 1 110 1 337 1 24 1 
341 1 274 1 
341 1 274 1 297 1 104 1 
341 1 78 1 273 1 274 1 90 1 297 1 206 1 
318 1 78 1 94 1 
78 3 88 1 273 1 90 3 274 1 304 1 341 1 224 1 278 2 206 1 297 1 34 1 
341 1 78 2 62 1 273 1 274 1 90 2 297 1 206 1 382 1 
165 1 189 1 78 1 273 1 90 1 341 1 71 1 110 1 212 1 206 1 34 1 
341 1 78 1 273 1 274 1 90 1 206 1 34 1 
78 1 273 1 274 2 90 1 297 1 206 1 34 1 
78 2 273 2 274 1 90 2 341 1 50 1 63 1 206 2 246 1 34 1 
9 1 78 3 273 1 274 1 90 3 341 2 110 1 62 2 24 1 297 1 206 1 34 1 217 1 
189 1 78 2 273 1 274 1 90 2 341 1 317 1 71 1 212 2 62 1 297 1 206 1 34 1 26 1 153 1 
359 1 78 4 273 2 274 1 90 4 341 2 110 1 62 2 24 1 297 1 206 2 34 1 382 1 
341 1 78 1 273 1 274 1 90 1 297 1 206 1 34 1 
78 4 273 1 274 2 90 4 337 1 304 1 341 3 110 1 224 1 278 1 62 2 24 1 297 2 206 1 
333 1 78 2 273 1 190 1 274 1 90 2 341 1 62 1 75 1 206 1 297 1 34 1 
78 3 273 1 90 3 274 1 304 1 285 1 341 1 224 2 278 2 206 1 297 1 34 1 
116 1 254 1 341 2 136 2 
78 1 273 1 90 1 328 1 206 1 34 1 
341 1 9 1 78 2 62 1 273 1 274 1 90 2 297 1 206 1 34 1 
233 1 
341 1 78 1 273 1 274 1 90 1 297 1 206 1 34 1 

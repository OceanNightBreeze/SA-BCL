#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | RETURN | 3743 | return null
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval; | RETURN | 10869 | return null
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isOpen()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
141 2 317 2 366 3 300 1 201 1 321 1 57 6 253 1 303 2 327 1 64 1 209 1 282 1 36 1 332 1 38 1 375 9 12 1 310 2 354 1 161 2 376 9 13 2 377 2 291 5 92 1 220 4 17 1 
141 2 317 2 366 3 300 1 201 1 321 1 57 6 253 1 303 2 327 1 64 1 209 1 282 1 36 1 332 1 38 1 375 9 12 1 310 2 354 1 161 2 376 9 377 2 13 2 291 5 92 1 220 4 17 1 
141 2 317 2 366 4 300 1 201 1 321 1 57 7 253 1 303 2 327 1 64 1 209 1 282 1 36 1 332 1 38 1 375 10 12 1 310 2 354 1 161 2 376 10 377 2 13 2 291 6 92 1 220 5 17 1 
141 2 317 2 366 2 300 1 201 1 321 1 57 4 253 1 303 2 327 1 64 1 209 1 282 1 36 1 38 1 375 7 12 1 310 2 354 1 161 2 376 7 377 2 13 1 291 4 92 1 220 3 17 1 
141 1 317 1 366 1 332 1 375 4 310 1 300 1 376 4 377 1 13 2 321 1 57 3 291 3 92 1 220 2 303 1 17 1 327 1 
141 1 173 1 307 1 375 2 247 1 310 1 300 1 354 1 376 2 161 1 377 1 291 1 253 1 303 1 17 1 327 1 
141 2 366 1 375 3 12 1 310 2 300 1 376 3 161 1 57 1 291 2 220 1 17 1 327 1 
141 2 317 1 119 1 366 3 300 1 321 1 57 7 303 1 327 1 209 1 36 1 332 1 12 1 375 9 310 2 161 1 376 9 13 2 377 1 189 1 291 5 92 1 220 4 17 1 
141 2 317 1 119 1 366 3 300 1 321 1 57 7 303 1 327 1 209 1 36 1 332 1 12 1 375 9 310 2 161 1 376 9 13 2 377 1 189 1 291 5 92 1 220 4 17 1 
15 1 309 1 337 1 
66 1 347 2 337 1 
244 1 215 2 235 2 109 2 28 2 214 2 243 2 48 1 
244 1 142 1 23 1 94 2 115 1 172 2 223 1 51 1 28 2 52 1 80 1 149 1 6 1 151 1 31 1 154 1 350 1 131 1 100 1 9 2 232 1 214 2 188 1 44 1 215 2 217 1 235 3 237 1 109 2 238 1 293 2 344 1 75 2 313 1 93 1 243 3 48 1 
34 1 16 1 215 1 235 1 109 1 28 1 214 1 40 1 243 1 48 1 
263 1 316 1 117 1 28 1 40 1 337 1 233 1 14 1 15 1 138 1 235 1 241 1 194 1 243 1 
263 2 316 1 28 1 214 1 40 1 337 1 14 1 15 1 138 1 215 1 235 1 109 1 241 2 194 1 243 1 
263 1 27 1 198 1 241 1 153 1 
263 2 15 1 292 1 27 1 139 1 241 2 153 1 337 1 
263 1 27 1 241 1 
263 1 34 1 28 1 214 1 40 1 54 1 16 1 215 1 235 1 109 1 241 1 153 1 48 1 243 1 
337 1 
263 2 15 1 150 1 292 1 27 1 241 2 153 1 337 1 
263 5 171 1 95 2 27 2 122 1 185 2 137 2 337 1 15 1 227 1 127 1 292 1 99 1 241 5 8 1 153 2 254 1 114 1 22 1 
244 1 309 1 
244 2 83 1 28 2 135 1 214 1 215 1 235 2 109 1 243 2 
326 1 129 1 367 1 
244 1 94 1 172 1 285 1 52 1 80 1 188 1 149 1 235 1 6 1 151 1 238 1 293 1 154 1 350 1 243 1 
244 1 215 3 235 3 109 1 167 1 28 3 214 3 243 3 
34 1 215 1 235 1 28 1 214 1 40 1 243 1 
83 1 215 1 235 1 109 1 28 1 135 1 214 1 40 1 243 1 
244 1 263 1 94 1 316 1 115 1 172 1 223 1 51 1 28 3 52 1 53 1 80 1 149 1 6 1 151 1 31 1 154 1 304 1 350 1 131 1 9 1 232 1 135 1 214 3 40 1 188 1 14 1 138 1 215 3 357 1 235 4 237 1 109 2 238 1 167 1 293 1 344 1 241 1 75 2 313 1 194 1 93 1 243 4 48 1 
244 1 117 1 108 1 215 1 235 2 167 1 28 2 214 1 243 2 
263 1 316 1 50 1 28 3 135 1 53 1 214 3 40 1 337 1 14 1 138 1 215 3 235 3 109 1 167 2 241 1 304 1 194 1 243 3 
28 2 135 1 214 2 215 2 235 2 109 1 167 1 326 1 129 1 243 2 
244 1 94 1 172 1 52 1 80 1 188 1 149 1 235 1 6 1 151 1 238 1 293 1 154 1 350 1 243 1 
244 1 94 1 172 1 52 1 80 1 188 1 379 1 235 1 6 1 151 1 238 1 293 1 350 1 65 1 243 1 
223 1 363 1 346 1 51 1 367 2 129 2 326 2 131 1 33 1 9 4 232 1 333 1 334 1 107 1 217 2 311 1 90 1 164 1 237 1 74 1 344 2 18 1 75 2 313 1 
138 1 215 1 235 1 175 1 28 1 214 1 40 1 243 1 
94 1 172 1 28 1 52 1 214 1 80 1 188 1 149 1 215 1 6 1 235 2 151 1 238 1 167 1 293 1 129 1 154 1 304 1 350 1 243 2 
244 1 298 1 117 1 11 1 28 5 135 1 214 4 108 1 215 4 235 5 109 1 167 2 304 1 243 5 
34 1 215 2 175 1 235 2 28 2 214 2 40 1 243 2 
267 1 195 1 
267 1 195 1 
46 1 123 1 
46 1 123 1 
46 1 123 1 
267 1 294 1 195 1 
267 1 294 1 195 1 
267 1 195 1 132 1 
330 1 46 1 267 2 123 1 195 2 101 1 
267 1 294 1 195 1 
267 1 68 1 195 1 
267 1 68 1 195 1 
267 1 68 1 195 1 
263 2 328 2 79 1 157 2 266 1 267 2 105 2 136 3 337 1 4 1 89 1 98 1 348 1 241 2 296 2 47 2 195 2 101 1 361 1 
244 1 263 1 197 1 345 1 267 1 28 2 3 1 148 1 348 1 132 1 328 1 157 1 230 1 105 1 136 1 214 2 88 1 215 2 235 2 241 1 295 1 47 1 195 1 243 2 
317 1 303 1 377 1 
307 1 303 1 377 1 
317 2 191 1 307 1 358 1 262 1 377 3 
317 1 329 1 307 1 358 1 262 1 377 2 
317 1 307 1 358 2 262 1 377 2 
263 5 49 1 95 1 27 1 122 3 146 1 275 2 227 2 97 1 347 3 325 1 153 4 33 1 66 1 10 1 230 1 212 1 333 1 185 1 162 2 88 1 137 1 337 2 15 1 107 1 311 1 292 1 241 5 295 1 112 2 359 1 22 1 
263 9 27 6 198 5 95 2 122 8 146 1 275 6 227 6 97 3 347 9 8 1 153 7 130 1 33 3 66 3 67 1 212 2 353 1 333 3 185 2 137 2 337 5 288 5 15 1 234 1 107 3 311 3 292 1 241 9 110 1 295 4 19 1 112 6 359 2 22 1 
263 3 49 1 95 1 122 3 275 2 97 1 227 2 347 4 8 1 153 2 33 1 66 2 10 1 212 1 333 1 185 1 162 1 137 1 337 3 15 1 107 1 311 1 241 3 295 1 359 1 112 2 
263 4 49 1 95 1 122 5 275 4 97 2 227 4 347 7 8 1 153 3 130 1 33 2 66 3 10 1 67 1 212 1 333 2 185 1 162 2 137 1 337 4 15 1 234 1 107 2 311 2 241 4 295 2 112 4 359 1 
309 1 52 1 180 1 
219 1 52 1 
256 1 
6 1 52 1 
103 1 6 1 151 1 180 2 52 3 322 1 
6 1 151 1 52 1 
45 1 52 1 
9 7 299 1 372 1 37 1 200 2 107 1 72 1 311 1 164 3 90 2 217 4 82 1 166 1 344 3 228 1 169 1 381 1 
9 7 299 1 372 1 37 1 200 2 107 1 72 1 311 1 164 3 90 2 217 4 82 1 166 1 344 3 228 1 169 1 381 1 
9 7 299 1 372 1 37 1 200 2 378 1 107 1 72 1 311 1 164 3 90 2 217 4 82 1 166 1 344 3 228 1 169 1 381 1 
299 1 223 1 51 1 200 3 272 1 97 3 82 1 324 1 252 1 131 1 228 2 33 3 280 1 9 31 372 2 232 1 37 1 331 4 333 3 213 1 286 1 72 1 107 4 217 16 311 4 164 10 90 5 340 1 166 2 344 15 75 2 381 2 222 3 169 5 
299 1 223 2 51 2 200 2 274 1 82 1 131 2 228 1 9 9 232 2 372 1 286 1 107 1 72 1 311 1 289 1 217 5 90 3 164 4 166 1 344 4 75 4 169 1 381 1 
94 1 141 1 317 1 172 1 174 1 319 1 300 1 80 1 57 1 303 1 327 1 350 1 351 1 307 1 134 1 375 2 255 1 310 1 376 2 161 1 377 2 43 1 42 1 291 1 191 1 260 1 192 1 293 1 17 1 111 1 
94 1 141 1 317 1 172 1 174 1 319 1 300 1 80 1 225 1 57 2 303 1 350 1 307 1 134 1 375 3 255 1 310 1 376 3 161 1 377 2 42 1 218 1 291 1 191 1 260 1 192 1 293 1 17 1 111 1 168 1 
94 1 172 1 317 1 174 1 319 1 300 1 80 1 225 1 57 2 303 1 350 1 307 1 375 2 255 1 161 1 376 2 377 2 42 1 291 1 191 1 260 1 192 1 293 1 17 1 168 1 
141 1 94 1 265 1 144 1 172 1 174 2 318 1 319 2 375 1 52 1 310 1 320 1 70 1 161 2 376 1 80 1 188 1 218 1 6 1 260 2 152 1 293 1 350 1 
94 1 141 1 317 1 172 1 174 1 319 1 80 1 303 1 327 1 350 1 351 1 307 1 134 1 375 1 255 1 310 1 376 1 161 1 377 2 42 1 191 1 260 1 192 1 293 1 111 1 168 1 
96 1 
94 2 0 1 144 1 95 1 52 1 199 1 347 2 6 1 60 2 251 1 305 1 350 1 66 2 212 1 14 1 15 1 73 2 113 1 22 1 263 5 316 1 265 1 172 2 116 1 117 1 27 6 28 1 269 1 122 2 80 1 226 4 177 2 227 2 128 1 182 2 278 1 279 2 229 2 373 1 335 1 185 1 39 2 137 1 40 1 337 2 188 2 233 1 138 1 235 1 292 3 293 2 241 5 140 1 194 1 243 1 
263 3 0 1 316 1 117 1 27 2 28 1 199 1 226 2 150 1 305 1 182 1 40 1 233 1 14 1 138 1 235 1 292 1 241 3 194 1 113 1 140 1 243 1 
263 3 0 1 316 1 117 1 27 1 28 1 199 1 226 3 150 1 305 1 279 1 40 1 337 1 233 1 14 1 138 1 15 1 235 1 292 1 241 3 194 1 113 1 140 1 243 1 
263 3 0 1 316 1 117 1 27 2 28 1 199 1 226 3 150 1 177 1 305 1 182 1 279 1 40 1 337 1 233 1 14 1 138 1 15 1 235 1 292 1 241 3 194 1 113 1 140 1 243 1 
0 1 95 1 199 1 249 1 250 1 150 1 59 1 60 2 305 1 66 2 14 1 15 5 73 2 113 1 22 1 263 5 316 1 117 1 27 7 28 1 269 1 122 1 176 1 226 6 177 4 227 1 128 1 182 4 279 4 229 2 183 1 185 1 39 2 40 1 137 1 337 5 233 1 138 1 235 1 292 3 241 5 194 1 140 1 243 1 
0 1 95 1 199 1 347 2 60 2 305 1 66 2 14 1 15 1 73 2 113 1 22 1 263 4 316 1 117 1 27 4 269 1 28 1 122 1 226 4 177 2 227 1 128 1 182 2 279 2 229 2 185 1 335 1 39 2 40 1 137 1 337 2 233 1 138 1 235 1 292 2 241 4 194 1 140 1 243 1 
263 4 0 1 316 1 117 1 27 4 95 1 269 1 28 1 122 1 199 1 176 1 250 1 226 4 177 2 227 1 60 2 128 1 305 1 182 2 279 2 229 2 66 2 183 1 185 1 39 2 40 1 137 1 337 1 233 1 14 1 15 1 138 1 235 1 292 2 73 2 241 4 194 1 113 1 140 1 243 1 22 1 
263 4 0 1 316 1 117 1 27 4 95 1 269 1 28 1 122 1 199 1 176 1 250 1 226 4 177 2 227 1 60 2 128 1 305 1 182 2 279 2 229 2 66 2 183 1 185 1 39 2 40 1 137 1 337 1 233 1 14 1 15 1 138 1 235 1 292 2 73 2 241 4 194 1 113 1 140 1 243 1 22 1 
263 4 0 1 316 1 117 1 27 4 95 1 28 1 122 1 199 1 176 1 56 2 30 1 226 4 177 2 227 1 347 2 128 1 305 1 63 2 182 2 279 2 229 2 284 1 185 1 39 2 40 1 137 1 337 1 233 1 14 1 15 1 138 1 235 1 292 2 241 4 194 1 113 1 140 1 77 1 243 1 22 1 
263 2 0 1 316 1 117 1 27 1 28 2 199 1 54 1 226 3 177 1 59 1 305 1 182 1 279 1 34 1 214 1 40 2 337 1 233 1 14 1 16 1 15 1 138 1 215 1 235 2 109 1 241 2 194 1 113 1 140 1 48 1 243 2 
263 2 0 1 316 1 117 1 27 1 28 2 199 1 54 1 226 3 177 1 59 1 305 1 182 1 279 1 34 1 214 1 40 2 337 1 233 1 14 1 16 1 15 1 138 1 215 1 235 2 109 1 241 2 194 1 113 1 140 1 48 1 243 2 
0 1 95 1 199 1 56 2 347 2 305 1 63 2 14 1 15 1 113 1 77 1 22 1 263 4 316 1 117 1 27 4 28 1 122 1 226 4 177 2 227 1 128 1 182 2 279 2 229 2 185 1 335 1 39 2 40 1 137 1 337 1 233 1 138 1 235 1 292 2 241 4 194 1 140 1 243 1 
244 2 299 1 223 1 346 1 51 1 200 1 367 1 82 1 326 1 129 1 131 1 9 6 372 1 232 1 309 1 72 1 107 1 90 2 164 2 311 1 217 3 237 1 344 3 75 2 313 1 381 1 
244 1 142 1 223 2 51 2 271 1 367 11 97 2 324 1 31 1 129 11 326 4 131 2 33 2 280 1 281 1 9 14 283 1 232 2 331 3 333 1 104 1 338 1 107 1 164 2 90 1 217 8 311 2 237 1 344 6 75 4 313 2 169 1 222 3 
244 1 94 1 142 1 172 1 223 1 51 1 28 1 52 1 271 1 80 1 55 1 149 1 6 1 151 1 31 1 326 1 154 1 304 1 350 1 131 1 368 1 9 2 232 1 285 1 214 1 188 1 215 1 217 1 235 2 237 1 238 1 167 1 293 1 240 1 344 1 313 1 75 2 243 2 
244 2 142 1 245 1 94 3 299 1 51 3 200 1 52 2 149 2 97 2 6 2 151 2 304 1 154 2 62 2 350 2 9 20 158 1 214 1 72 1 107 3 215 1 311 3 217 10 164 8 167 1 168 1 75 6 313 3 314 2 169 4 172 3 223 3 118 1 28 1 271 1 29 2 367 7 80 2 81 2 82 1 31 1 129 7 326 7 131 3 33 2 372 1 232 3 333 2 188 1 90 4 235 3 237 3 238 2 293 3 344 10 93 2 243 3 381 1 
94 7 142 1 264 1 172 8 144 1 265 1 223 2 346 1 28 1 51 2 52 3 80 2 323 1 6 2 31 1 350 2 131 2 9 2 211 1 232 2 214 1 188 2 43 1 44 2 215 1 290 1 217 1 235 1 237 2 342 1 167 1 261 1 293 8 344 1 193 1 168 1 75 4 313 2 243 1 
223 1 51 1 28 1 271 1 367 1 97 1 349 1 326 1 129 1 131 1 33 1 9 3 232 1 333 1 135 1 214 1 215 1 107 1 164 1 90 1 311 1 217 1 235 1 237 1 109 1 344 2 75 2 313 1 243 1 
33 1 9 2 232 1 223 1 363 1 346 1 51 1 367 1 164 1 311 1 217 2 237 1 326 1 129 1 313 1 75 2 131 1 169 1 
9 2 232 1 223 1 346 1 333 1 51 1 334 1 367 1 107 1 164 1 90 1 237 1 326 1 129 1 344 2 313 1 75 2 131 1 
223 1 346 1 51 1 367 2 97 1 129 2 326 2 131 1 33 1 9 4 232 1 333 1 107 1 217 2 311 1 164 2 90 1 237 1 344 2 75 2 313 1 169 1 
33 1 9 2 232 1 223 1 363 1 51 1 367 1 323 1 164 1 311 1 217 2 237 1 326 1 129 1 313 1 75 2 131 1 169 1 
9 2 232 1 223 1 333 1 51 1 334 1 367 1 323 1 107 1 164 1 90 1 237 1 326 1 129 1 344 2 313 1 75 2 131 1 
223 1 51 1 367 2 97 1 323 1 129 2 326 2 131 1 33 1 9 4 232 1 333 1 107 1 217 2 311 1 164 2 90 1 237 1 344 2 75 2 313 1 169 1 
33 1 9 4 232 1 223 1 333 1 51 1 367 2 107 1 97 1 90 1 164 2 311 1 217 2 237 1 344 2 326 2 129 2 313 1 75 2 131 1 169 1 
244 1 142 1 94 1 172 1 223 1 51 1 52 1 80 1 149 1 6 1 151 1 31 1 154 1 350 1 131 1 9 2 232 1 188 1 217 1 235 1 237 1 238 1 293 1 344 1 313 1 75 2 93 1 243 1 
244 1 142 1 94 1 172 1 223 1 51 1 52 1 80 1 6 1 151 1 31 1 350 1 65 1 131 1 9 2 232 1 86 1 188 1 379 1 217 1 235 1 237 1 238 1 293 1 344 1 313 1 75 2 243 1 
223 1 51 1 271 1 367 2 97 1 129 2 326 2 131 1 33 1 9 4 232 1 333 1 107 1 217 2 311 1 164 2 90 1 237 1 344 2 75 2 313 1 169 1 
94 1 172 1 223 1 51 1 52 1 367 2 80 1 81 1 149 1 97 1 6 1 151 1 326 2 129 2 154 1 350 1 131 1 33 1 9 4 232 1 333 1 43 1 107 1 90 1 164 2 217 2 311 1 235 1 237 1 238 1 293 1 344 2 313 1 75 2 93 1 243 1 169 1 
223 1 51 1 28 1 271 1 367 1 97 1 129 1 326 1 131 1 33 1 9 3 232 1 333 1 135 1 214 1 107 1 215 1 164 1 311 1 217 2 235 1 237 1 109 1 344 1 221 1 75 2 313 1 243 1 169 1 
362 1 78 1 223 2 1 2 365 1 51 2 274 1 203 2 97 3 324 1 131 2 33 3 280 1 352 1 9 19 232 2 331 2 333 3 163 1 107 3 356 1 90 3 217 9 311 3 164 6 344 10 242 1 75 4 222 1 169 3 
78 1 297 1 223 3 1 4 365 1 51 3 274 1 203 1 97 3 324 2 277 1 179 1 156 1 131 3 33 3 352 1 9 26 232 3 331 2 333 2 286 2 163 2 107 2 164 4 90 2 217 14 311 3 236 1 380 1 344 12 242 2 75 6 169 2 222 2 
362 1 297 1 78 1 299 1 223 3 1 4 365 1 51 3 200 1 274 1 203 1 97 4 82 1 324 3 179 1 277 1 156 1 131 3 102 1 33 4 280 1 352 1 9 41 372 1 232 3 331 4 333 4 286 1 163 1 72 1 107 5 90 4 217 20 311 5 164 8 236 1 380 1 344 21 242 2 75 6 381 1 222 3 169 4 
362 1 297 1 78 1 299 1 223 4 1 4 365 1 51 4 200 1 274 1 203 1 97 4 82 1 324 3 179 1 277 1 156 1 131 4 102 1 33 4 280 1 352 1 9 38 372 1 232 4 331 4 333 3 286 2 163 1 72 1 107 4 90 4 217 20 311 5 164 7 236 1 380 1 344 18 242 2 75 8 381 1 222 3 169 3 
297 1 78 1 299 1 223 2 1 4 365 1 51 2 200 1 274 1 203 1 97 7 82 1 324 2 179 1 277 1 156 1 131 2 33 7 280 2 281 2 352 1 9 52 372 1 232 2 331 4 333 7 286 1 163 1 72 1 107 8 90 7 217 27 311 8 164 14 236 1 380 1 344 25 242 1 75 4 381 1 222 4 169 7 
4 1 125 1 328 1 157 1 266 1 267 1 105 1 47 1 195 1 101 1 
132 1 148 1 
71 1 328 1 157 1 267 1 276 1 343 1 105 1 47 1 195 1 
263 1 328 1 79 1 157 1 266 1 267 1 105 1 136 2 337 1 4 1 89 1 348 1 241 1 296 1 47 1 195 1 101 1 361 1 
263 1 328 1 79 1 157 1 266 1 267 1 105 1 136 2 337 1 4 1 89 1 348 1 241 1 296 1 47 1 195 1 101 1 361 1 
263 1 328 1 79 1 157 1 266 1 267 1 105 1 136 2 337 1 4 1 89 1 348 1 241 1 296 1 47 1 195 1 101 1 361 1 
330 1 294 1 187 1 
330 1 294 1 187 1 
87 1 68 1 
330 1 87 1 68 1 
197 1 345 1 
244 1 263 1 197 1 345 1 267 1 28 2 3 1 148 1 181 1 153 1 132 1 328 1 157 1 230 1 105 1 136 1 88 1 214 2 215 2 235 2 241 1 296 1 295 1 47 1 243 2 195 1 361 1 
294 1 187 1 
330 1 87 1 68 1 
142 1 94 2 172 2 223 1 51 1 121 1 28 2 52 1 271 1 273 1 80 1 6 1 206 1 31 1 350 1 131 1 9 2 211 1 232 1 184 1 44 2 217 1 235 2 91 1 237 1 261 1 293 2 344 1 313 1 75 2 243 2 
94 2 317 1 172 2 174 1 26 1 307 1 134 1 255 1 377 2 80 1 301 1 43 1 42 1 204 1 191 1 293 2 303 1 350 1 168 1 
94 1 170 1 317 1 172 1 174 1 307 1 134 1 255 1 377 2 80 1 301 1 42 1 191 1 293 1 303 1 168 1 350 1 
94 1 172 1 210 1 144 1 265 1 174 1 26 1 52 1 80 1 188 1 6 1 293 1 152 1 350 1 
94 1 317 1 172 1 174 1 26 1 307 1 134 1 255 1 377 2 80 1 301 1 42 1 204 1 191 1 293 1 303 1 168 1 350 1 
312 1 
15 1 227 1 127 1 309 1 122 1 337 1 114 1 
263 1 95 1 27 1 269 1 122 1 227 1 347 1 60 1 66 1 185 1 137 1 337 2 15 1 292 1 73 1 241 1 22 1 
94 3 2 2 95 4 52 10 97 2 6 3 347 12 151 3 302 1 62 2 350 3 306 2 66 6 212 2 103 1 308 2 159 2 69 1 355 1 257 2 15 2 107 2 311 2 219 3 112 6 114 1 22 4 263 5 316 2 172 3 27 5 122 9 270 2 80 4 275 6 227 8 127 1 180 2 369 2 33 2 371 2 373 1 333 2 185 4 137 4 188 1 337 8 43 1 45 2 341 1 292 3 239 1 293 3 241 5 
263 1 297 1 364 1 27 1 95 2 122 8 124 1 275 5 227 5 97 2 347 6 324 1 277 1 179 1 156 1 33 2 371 2 66 3 212 1 373 1 331 1 333 2 185 2 137 2 337 5 257 1 15 2 107 2 311 2 236 1 292 1 241 1 112 5 22 2 222 1 
263 1 299 1 95 1 28 1 122 2 54 1 227 2 32 1 371 2 34 1 372 1 183 1 185 1 214 1 40 1 137 1 257 1 16 1 107 1 215 1 311 2 235 1 109 1 241 1 243 1 48 1 381 1 22 1 
95 1 122 1 185 1 137 1 337 1 15 1 227 1 127 1 114 1 22 1 
33 2 371 2 66 5 333 2 122 5 337 5 257 1 275 5 97 2 227 5 107 2 311 2 347 10 62 1 112 5 
263 1 15 1 292 1 27 1 241 1 337 1 
263 3 94 4 116 1 172 4 144 1 265 1 95 2 27 4 52 1 122 2 80 1 227 2 6 1 251 1 7 1 8 1 302 1 350 1 231 1 212 2 373 2 185 2 137 2 188 2 292 2 239 2 293 4 241 3 22 1 
244 1 94 1 115 1 172 1 223 1 28 2 51 1 52 1 80 1 149 1 6 1 151 1 31 1 154 1 350 1 131 1 9 1 232 1 214 2 188 1 215 2 235 3 237 1 109 2 238 1 293 1 344 1 75 2 313 1 93 1 243 3 48 1 
66 2 212 1 373 1 95 1 200 1 122 1 185 1 137 1 337 4 275 2 15 2 227 2 347 4 112 2 22 1 
25 1 157 1 47 1 
25 1 157 1 47 1 
197 1 157 1 266 1 165 1 47 1 
25 1 157 1 47 1 
157 1 268 1 47 1 
157 1 268 1 47 1 
157 1 268 1 47 1 
157 1 47 1 
267 1 195 1 
9 8 299 1 232 2 223 2 372 1 51 2 200 1 286 1 107 1 72 1 311 1 217 4 164 3 90 2 82 1 344 4 75 4 131 2 169 1 381 1 
9 6 299 1 372 1 309 1 200 1 72 1 107 1 90 2 164 2 311 1 217 3 82 1 344 3 381 1 
33 1 9 4 232 1 223 1 333 1 51 1 107 1 97 1 90 1 164 2 311 1 217 2 344 2 155 1 75 2 131 1 169 1 
33 1 280 1 9 7 331 2 333 1 107 1 97 1 90 1 217 3 311 1 164 2 324 1 344 4 222 1 169 1 
299 1 223 2 51 2 200 1 97 2 82 1 131 2 33 2 280 1 9 23 281 1 372 2 232 2 35 1 331 2 333 2 104 1 286 2 72 1 107 3 164 9 311 3 217 11 90 5 344 12 75 4 381 2 169 4 222 2 
9 1 331 1 344 1 
9 1 217 1 222 1 
33 1 9 6 223 1 232 1 333 1 51 1 97 1 107 1 311 1 217 3 164 3 90 2 344 3 62 1 75 2 155 1 131 1 169 1 
297 1 223 1 51 1 274 1 97 2 324 1 277 1 179 1 131 1 156 1 33 2 9 12 232 1 331 1 333 2 107 2 217 6 311 2 90 1 164 2 236 1 344 6 75 2 169 1 222 1 
9 6 299 1 372 1 107 1 311 1 217 3 90 1 164 2 344 3 381 1 169 1 
9 3 372 1 35 1 232 1 223 1 51 1 286 1 72 1 217 1 164 2 90 1 82 1 344 2 75 2 131 1 169 1 381 1 
9 10 299 1 223 1 232 1 372 2 51 1 274 1 107 2 90 3 164 5 217 5 311 2 32 1 344 5 75 2 131 1 381 2 169 2 
33 1 9 2 232 1 223 1 51 1 274 1 311 1 217 2 164 1 75 2 131 1 169 1 
33 1 9 4 232 1 223 1 333 1 51 1 274 1 107 1 97 1 90 1 164 2 311 1 217 2 344 2 75 2 131 1 169 1 
362 1 9 3 35 1 232 3 223 3 372 1 51 3 286 1 274 1 90 1 164 2 217 1 344 2 75 6 131 3 381 1 169 1 
362 1 299 1 223 4 51 4 200 1 272 1 274 1 97 3 82 1 324 1 155 1 131 4 33 3 280 1 9 29 372 2 232 4 331 4 333 3 213 1 286 1 72 1 107 4 340 1 217 14 311 4 164 10 90 5 344 15 75 8 381 2 222 3 169 5 
299 1 223 1 51 1 200 1 274 1 324 1 82 1 277 1 131 1 9 8 232 1 372 1 331 1 107 1 72 1 311 1 217 4 90 2 164 2 344 4 75 2 222 1 381 1 
299 1 223 2 51 2 200 1 274 1 97 1 82 1 324 1 277 1 155 1 131 2 33 1 280 1 9 11 372 1 232 2 331 2 107 1 72 1 90 2 217 6 311 2 164 3 344 5 75 4 381 1 222 1 169 1 
297 1 299 1 223 3 51 3 200 1 274 1 97 2 82 1 324 1 277 1 179 1 155 1 156 1 131 3 33 2 9 19 372 1 232 3 331 1 333 2 286 1 72 1 107 3 217 9 311 3 90 3 164 4 236 1 344 10 75 6 381 1 169 1 222 1 
297 1 299 1 223 3 51 3 200 1 274 1 97 2 82 1 324 1 277 1 179 1 155 1 131 3 156 1 33 2 9 17 372 1 232 3 331 1 333 1 286 1 72 1 107 2 217 10 311 3 90 3 164 5 236 1 344 7 75 6 381 1 169 2 222 1 
299 1 223 1 51 1 200 1 274 1 324 1 82 1 277 1 131 1 9 8 232 1 372 1 331 1 107 1 72 1 311 1 217 4 90 2 164 2 344 4 75 2 222 1 381 1 
297 1 223 1 51 1 274 1 97 2 324 1 277 1 179 1 131 1 156 1 33 2 9 12 232 1 331 1 333 2 107 2 217 6 311 2 90 1 164 2 236 1 344 6 75 2 169 1 222 1 
297 1 299 1 223 4 51 4 200 1 274 1 97 2 82 1 324 1 277 1 179 1 155 1 156 1 131 4 33 2 9 18 372 1 232 4 331 1 333 1 286 2 72 1 107 2 217 10 311 3 90 3 164 5 236 1 344 8 75 8 381 1 169 2 222 1 
362 1 297 1 223 4 51 4 274 1 97 3 324 1 277 1 179 1 156 1 131 4 33 3 9 16 232 4 331 1 333 2 286 2 107 2 217 9 311 3 90 3 164 6 236 1 344 7 75 8 169 3 222 1 
9 7 299 1 372 3 107 1 72 2 90 3 164 6 311 1 217 3 82 1 344 4 381 3 169 3 
362 1 297 1 299 1 223 4 51 4 200 1 274 1 97 2 82 1 324 1 277 1 179 1 156 1 131 4 33 2 9 18 372 1 232 4 331 1 333 1 286 2 72 1 107 2 217 10 311 3 90 3 164 4 236 1 344 8 75 8 381 1 169 1 222 1 
244 1 117 1 108 1 235 1 28 1 76 1 243 1 
244 1 208 1 143 1 117 1 28 1 147 1 186 1 108 1 235 1 258 1 76 1 243 1 
94 1 265 1 144 1 172 1 6 1 309 1 293 1 52 1 350 1 80 1 188 1 
244 1 94 1 172 1 28 1 52 1 214 1 80 1 188 1 215 1 6 1 235 2 151 1 238 1 167 1 293 1 154 1 350 1 243 2 
244 1 94 1 172 1 2 1 28 2 52 3 214 1 40 1 80 1 14 1 45 1 138 1 215 2 6 2 235 2 151 2 238 1 167 1 239 1 293 1 154 1 350 1 243 2 
244 1 94 2 172 2 2 1 28 2 52 3 80 1 6 2 151 2 61 1 350 1 65 1 214 1 40 1 14 1 138 1 45 1 215 2 235 2 167 1 238 1 293 2 239 1 243 2 
263 2 196 1 94 3 316 1 24 1 172 3 2 1 27 1 52 4 80 1 6 1 151 1 61 1 180 1 350 1 337 1 188 1 45 1 15 1 219 1 293 3 239 1 241 2 
263 2 94 3 316 1 172 3 2 1 27 1 52 4 80 1 188 1 337 1 15 1 45 1 6 1 219 1 151 1 61 1 239 1 293 3 241 2 180 1 350 1 369 1 
94 1 172 1 293 1 193 1 350 1 80 1 
94 6 264 1 172 7 103 1 224 1 52 3 80 3 188 2 44 1 43 1 290 1 6 2 259 1 342 1 151 1 207 1 261 1 293 7 193 1 168 1 350 2 
244 2 94 1 299 1 51 2 52 1 200 1 149 1 6 1 151 1 154 1 350 1 9 6 214 1 215 1 72 1 107 1 164 2 311 1 217 3 167 1 75 4 313 2 314 1 172 1 223 2 28 1 121 1 271 1 367 1 80 1 81 1 82 1 326 1 129 1 131 2 232 2 372 1 43 1 90 2 235 2 237 2 238 1 293 1 344 3 93 1 243 2 381 1 
263 3 94 1 316 1 172 1 95 2 27 2 122 1 52 2 270 1 227 1 127 1 302 1 180 1 153 1 369 1 308 1 159 1 185 2 137 2 337 1 188 1 15 1 219 1 292 1 293 1 241 3 114 1 22 2 
94 2 172 2 103 1 52 2 80 2 43 1 6 1 341 1 151 1 293 2 180 1 193 1 350 1 
94 4 172 4 144 1 265 1 52 1 202 1 80 1 188 1 43 1 6 1 61 1 293 4 350 1 
94 2 84 1 158 1 172 2 52 1 80 2 190 1 6 1 259 1 151 1 207 1 239 1 293 2 350 1 
42 1 94 1 172 1 307 1 293 1 303 1 350 1 377 1 80 1 188 1 
94 2 172 2 52 1 80 1 43 1 6 1 91 1 293 2 261 1 168 1 350 1 
94 4 264 1 265 1 144 1 172 5 52 3 202 1 80 2 188 1 43 1 6 2 342 1 239 1 293 5 261 1 350 2 
94 4 265 1 144 1 172 5 52 3 202 1 80 2 188 1 43 1 178 1 6 2 342 1 239 1 293 5 261 1 350 2 
244 1 94 1 172 1 28 1 52 1 214 1 80 1 188 1 215 1 6 1 235 2 151 1 238 1 167 1 293 1 350 1 65 1 243 2 
94 1 172 1 103 1 224 1 52 1 80 2 6 1 259 1 151 1 207 1 239 1 293 1 350 1 
374 1 28 1 184 1 273 1 5 1 287 1 235 1 206 1 243 1 
287 1 120 1 41 1 
244 1 5 1 287 1 374 1 21 1 
244 1 263 2 316 1 120 1 374 2 53 1 40 1 41 1 337 1 126 1 14 1 5 2 15 1 138 1 287 1 241 2 153 1 194 1 21 2 
291 1 309 1 17 1 300 1 
141 1 291 1 375 1 310 1 17 1 300 1 376 1 
319 1 375 1 161 1 
141 1 375 3 310 1 106 1 300 1 336 1 376 3 291 1 253 2 327 1 17 1 360 1 
141 1 57 1 291 1 375 2 310 1 17 1 300 1 376 2 13 1 
141 1 317 1 291 1 220 1 375 1 303 1 310 1 327 1 376 1 377 1 321 1 
141 1 291 1 375 1 310 1 17 1 327 1 376 1 
141 1 375 1 310 1 17 2 300 1 327 1 376 1 
141 2 375 2 310 2 160 1 376 2 339 1 205 1 291 1 17 1 327 1 
141 1 209 1 36 1 366 1 375 3 310 1 300 1 376 3 57 2 291 2 220 1 17 1 327 1 
141 1 317 1 307 1 375 2 310 1 300 1 376 2 377 2 57 1 291 1 191 1 303 1 17 1 327 1 20 1 
141 2 366 1 332 1 375 4 310 2 300 1 376 4 13 1 57 2 291 2 220 1 17 1 327 1 
141 1 291 1 375 1 310 1 17 1 300 1 327 1 376 1 
141 1 366 1 145 1 375 4 310 1 106 1 300 2 376 4 57 2 291 3 253 1 220 1 17 2 360 1 
370 1 141 1 375 2 310 1 300 1 376 2 189 1 57 1 216 1 291 1 17 1 327 1 
141 1 133 1 375 3 310 1 106 1 300 1 376 3 291 1 253 2 327 1 17 1 360 2 
315 1 246 2 291 2 248 1 
141 1 85 1 375 1 310 1 327 1 376 1 
141 1 57 1 36 1 291 1 375 2 310 1 17 1 300 1 327 1 376 2 
58 1 
141 1 291 1 375 1 310 1 17 1 300 1 327 1 376 1 
141 1 57 1 36 1 291 1 253 1 375 3 310 1 17 1 300 1 327 1 376 3 
291 1 366 1 145 1 220 1 
291 1 17 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z | OPERATOR | 2147 | && -> ||
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | STATEMENT | 1463 | stmt -> ;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
252 9 326 5 51 1 142 2 210 3 57 1 283 2 335 2 336 1 65 1 340 2 9 2 147 1 366 1 219 1 172 1 265 2 19 9 150 2 151 1 135 1 112 4 174 1 250 6 273 1 297 1 275 1 179 1 
252 9 326 5 51 1 142 2 210 3 57 1 283 2 335 2 336 1 65 1 340 2 9 2 147 1 366 1 219 1 172 1 265 2 19 9 150 2 151 1 135 1 112 4 174 1 250 6 273 1 297 1 275 1 179 1 
252 10 326 6 51 1 142 2 210 4 57 1 283 2 335 2 336 1 65 1 340 2 9 2 147 1 366 1 219 1 172 1 265 2 19 10 150 2 151 1 135 1 112 5 174 1 250 7 273 1 297 1 275 1 179 1 
252 7 326 4 51 1 142 2 210 2 57 1 283 2 335 2 336 1 65 1 340 2 9 2 147 1 366 1 172 1 265 1 19 7 150 2 151 1 135 1 112 3 174 1 250 4 273 1 297 1 275 1 179 1 
252 4 219 1 172 1 265 2 326 3 19 4 150 1 51 1 142 1 210 1 283 1 112 2 174 1 250 3 273 1 340 1 9 1 179 1 
252 2 326 1 19 2 244 1 150 1 51 1 375 1 283 1 308 1 335 1 273 1 65 1 340 1 275 1 9 1 179 1 
252 3 283 2 112 1 335 1 326 2 19 3 250 1 273 1 51 1 210 1 9 2 147 1 179 1 
252 9 326 5 51 1 142 1 210 3 283 2 335 1 336 1 340 1 9 2 147 1 366 1 219 1 172 1 265 2 19 9 150 1 87 1 112 4 174 1 250 7 273 1 274 1 179 1 
252 9 326 5 51 1 142 1 210 3 283 2 335 1 336 1 340 1 9 2 147 1 366 1 219 1 172 1 265 2 19 9 150 1 87 1 112 4 174 1 250 7 273 1 274 1 179 1 
140 1 209 1 22 1 
192 1 380 2 209 1 
307 2 345 2 311 2 213 2 165 1 201 2 138 2 123 1 
298 1 185 2 282 1 186 1 330 1 54 1 359 2 235 2 307 2 337 1 311 3 213 2 34 2 165 1 285 1 123 1 362 1 263 1 345 2 127 1 36 2 349 1 223 1 23 1 374 1 247 1 319 1 111 1 71 1 137 1 229 1 379 1 77 1 201 2 324 1 138 3 90 1 
365 1 307 1 345 1 195 1 72 1 311 1 213 1 201 1 138 1 123 1 
161 1 209 1 22 1 332 1 144 1 307 1 258 1 270 1 72 1 310 1 45 1 311 1 155 1 138 1 
345 1 209 1 22 1 332 2 307 1 258 1 270 1 45 2 72 1 310 1 311 1 155 1 213 1 201 1 138 1 
288 1 332 1 45 1 302 1 168 1 
288 1 332 2 45 2 168 1 52 1 209 1 187 1 22 1 
288 1 332 1 45 1 
365 1 345 1 195 1 291 1 332 1 307 1 72 1 45 1 311 1 213 1 168 1 201 1 138 1 123 1 
209 1 
288 1 332 2 33 1 45 2 168 1 209 1 187 1 22 1 
342 1 251 2 288 2 91 1 92 1 48 1 348 1 209 1 187 1 97 2 22 1 332 5 110 2 88 1 45 5 175 1 191 1 168 2 202 1 
298 1 36 1 28 1 349 1 186 1 223 1 208 1 330 1 23 1 359 1 247 1 307 1 71 1 311 2 229 1 213 1 34 1 201 1 138 2 240 1 
140 1 165 1 
345 1 254 1 5 1 307 2 311 2 213 1 165 2 201 1 138 2 
126 1 28 1 360 1 
298 1 36 1 39 1 349 1 186 1 223 1 330 1 359 1 23 1 247 1 71 1 311 1 229 1 34 1 165 1 138 1 
345 1 307 3 311 3 213 3 165 1 201 3 138 3 240 1 
365 1 307 1 72 1 311 1 213 1 201 1 138 1 
307 1 345 1 254 1 72 1 311 1 213 1 201 1 5 1 138 1 
298 1 254 1 185 2 282 1 186 1 208 1 330 1 54 1 359 1 235 1 332 1 307 3 258 1 310 1 337 1 311 4 213 3 34 1 165 1 285 1 123 1 240 1 367 1 345 2 127 1 36 1 349 1 223 1 23 1 247 1 319 1 71 1 270 1 199 1 72 1 45 1 155 1 137 1 229 1 379 1 77 1 201 3 138 4 90 1 
277 1 307 2 311 2 213 1 165 1 161 1 201 1 138 2 240 1 
345 1 254 1 208 1 209 1 332 1 307 3 258 1 270 1 45 1 310 1 72 1 199 1 311 3 155 1 213 3 354 1 201 3 138 3 240 2 
126 1 307 2 345 1 254 1 28 1 311 2 213 2 201 2 138 2 240 1 
298 1 36 1 349 1 186 1 223 1 330 1 359 1 23 1 247 1 71 1 311 1 229 1 34 1 165 1 138 1 
298 1 264 1 36 1 349 1 223 1 330 1 359 1 23 1 247 1 43 1 311 1 229 1 34 1 165 1 138 1 
28 2 185 2 328 1 54 1 234 1 235 4 59 1 360 2 263 2 126 2 127 2 17 1 103 1 316 1 128 1 318 1 105 1 319 1 137 1 379 1 24 1 381 1 77 1 90 1 
307 1 300 1 270 1 72 1 311 1 213 1 201 1 138 1 
0 1 277 1 345 1 254 1 161 1 208 1 21 1 307 5 311 5 213 4 165 1 201 4 138 5 240 2 
365 1 307 2 300 1 72 1 311 2 213 2 201 2 138 2 
217 1 8 1 
217 1 8 1 
280 1 204 1 
280 1 204 1 
280 1 204 1 
217 1 290 1 8 1 
217 1 290 1 8 1 
217 1 8 1 304 1 
217 2 280 1 8 2 163 1 94 1 204 1 
217 1 290 1 8 1 
217 1 271 1 8 1 
217 1 271 1 8 1 
217 1 271 1 8 1 
217 2 1 1 12 2 301 3 303 2 115 2 94 1 209 1 153 1 376 1 332 2 198 2 321 2 8 2 45 2 272 1 322 1 338 1 74 1 
287 1 217 1 242 1 344 1 12 1 301 1 303 1 267 1 129 1 42 1 304 1 332 1 307 2 198 1 45 1 321 1 8 1 311 2 74 1 213 2 165 1 89 1 201 2 138 2 
150 1 340 1 142 1 
150 1 244 1 340 1 
37 1 150 3 244 1 142 2 106 1 162 1 
37 1 150 2 244 1 142 1 162 1 53 1 
37 1 150 2 244 1 142 1 162 2 
251 1 182 1 95 1 187 1 209 2 97 1 234 1 306 1 332 5 61 2 192 1 191 2 168 4 66 2 287 1 288 1 344 1 289 2 16 1 17 1 220 1 129 1 128 1 371 1 22 1 110 1 88 3 45 5 323 1 175 1 24 1 380 3 
139 1 92 1 278 1 95 3 187 1 97 2 98 4 234 3 332 8 145 1 191 6 192 3 66 6 288 5 344 4 345 1 346 1 16 1 289 6 195 1 17 3 350 1 291 1 22 1 110 2 72 1 24 3 201 1 251 2 302 4 209 5 307 1 311 1 84 1 213 1 168 6 123 1 365 1 220 2 128 3 371 2 88 8 45 8 175 1 380 9 138 1 
251 1 92 1 182 1 95 1 209 3 97 1 234 1 332 3 61 1 192 2 191 2 168 2 66 2 344 1 289 2 220 1 17 1 128 1 371 1 22 1 110 1 88 3 45 3 323 1 24 1 380 4 
139 1 92 1 278 1 182 1 95 2 97 1 234 2 332 3 145 1 61 1 191 4 192 3 66 4 344 2 345 1 289 4 17 2 195 1 291 1 22 1 110 1 72 1 24 2 201 1 251 1 209 4 307 1 311 1 213 1 168 2 123 1 365 1 220 1 371 1 128 2 88 5 45 3 323 1 380 7 138 1 
247 1 218 1 140 1 
247 1 130 1 
356 1 
247 1 349 1 
218 2 247 3 231 1 93 1 349 1 330 1 
247 1 349 1 330 1 
247 1 206 1 
263 4 127 3 3 2 316 2 281 1 128 1 318 3 329 1 256 1 234 1 235 7 7 1 377 1 212 1 296 1 64 1 86 1 
263 4 127 3 3 2 316 2 281 1 128 1 318 3 329 1 256 1 234 1 235 7 7 1 377 1 212 1 296 1 64 1 86 1 
263 4 127 3 3 2 316 2 281 1 128 1 318 3 81 1 329 1 256 1 234 1 235 7 7 1 377 1 212 1 296 1 64 1 86 1 
3 3 185 2 281 1 95 3 329 2 256 1 54 1 234 4 32 1 235 31 236 1 7 2 212 2 64 1 86 1 169 3 216 1 263 16 127 15 17 3 370 1 316 5 318 10 128 4 222 1 319 1 269 1 293 4 377 2 156 1 137 1 296 5 24 3 90 1 
3 2 185 4 281 1 329 1 54 2 234 1 235 9 236 1 7 1 212 1 64 1 261 1 86 1 263 5 127 4 316 3 128 1 318 4 44 1 319 2 377 1 137 2 296 1 90 2 
252 2 326 1 141 1 51 1 142 1 4 1 359 1 331 1 116 1 283 1 31 1 335 1 260 1 34 1 340 1 35 1 9 1 36 1 19 2 244 1 150 2 223 1 106 1 226 1 248 1 109 1 229 1 250 1 273 1 179 1 
252 3 326 1 141 1 51 1 142 1 4 1 359 1 116 1 58 1 283 1 335 1 260 1 34 1 340 1 215 1 35 1 9 1 36 1 19 3 244 1 150 2 20 1 106 1 223 1 226 1 248 1 109 1 229 1 250 2 273 1 
252 2 326 1 141 1 51 1 142 1 359 1 116 1 58 1 335 1 260 1 34 1 340 1 35 1 36 1 19 2 244 1 150 2 20 1 223 1 106 1 248 1 109 1 229 1 250 2 273 1 
298 1 243 1 252 1 36 1 173 1 19 1 349 1 141 2 223 1 70 1 152 1 6 1 359 1 246 1 247 1 283 1 248 2 335 2 229 1 34 1 215 1 9 1 35 2 
252 1 141 1 142 1 4 1 359 1 116 1 58 1 283 1 31 1 335 1 260 1 34 1 340 1 35 1 9 1 36 1 19 1 244 1 150 2 223 1 106 1 226 1 248 1 109 1 229 1 179 1 
230 1 
2 2 181 1 184 2 187 3 6 1 97 1 96 1 332 5 144 1 333 1 192 2 191 2 99 1 10 2 288 6 243 1 14 2 349 1 245 1 197 2 22 1 247 1 110 1 72 1 73 2 353 1 155 1 157 1 78 1 251 1 298 2 358 1 255 4 161 1 209 2 359 2 307 1 258 1 310 1 311 1 34 2 171 2 368 1 220 1 36 2 369 1 223 1 373 1 88 2 270 1 45 5 229 1 175 1 380 2 138 1 
358 1 255 2 161 1 187 1 96 1 332 3 307 1 144 1 33 1 258 1 310 1 311 1 10 1 288 2 369 1 245 1 270 1 45 3 72 1 155 1 138 1 78 1 
358 1 255 3 161 1 209 1 187 1 96 1 332 3 307 1 144 1 33 1 258 1 310 1 311 1 288 1 369 1 245 1 197 1 22 1 270 1 45 3 72 1 155 1 138 1 78 1 
358 1 255 3 161 1 187 1 209 1 96 1 332 3 33 1 307 1 144 1 258 1 310 1 311 1 10 1 288 2 171 1 369 1 245 1 197 1 22 1 270 1 45 3 72 1 155 1 138 1 78 1 
2 2 184 2 187 3 96 1 97 1 55 1 332 5 144 1 191 1 192 2 10 4 288 7 14 2 245 1 197 4 351 1 22 5 110 1 72 1 155 1 73 2 78 1 27 1 251 1 358 1 255 6 161 1 209 5 33 1 307 1 258 1 310 1 311 1 167 1 171 4 368 1 369 1 373 1 270 1 88 1 45 5 228 1 175 1 138 1 
251 1 2 2 358 1 184 2 255 4 161 1 209 2 187 2 97 1 96 1 332 4 144 1 307 1 258 1 310 1 311 1 192 2 191 1 10 2 288 4 14 2 171 2 368 1 369 1 245 1 197 2 22 1 373 1 110 1 88 1 270 1 45 4 72 1 73 2 155 1 157 1 175 1 380 2 138 1 78 1 
251 1 2 2 358 1 184 2 255 4 161 1 209 1 187 2 96 1 97 1 55 1 332 4 307 1 144 1 258 1 310 1 311 1 192 2 191 1 167 1 10 2 288 4 14 2 171 2 368 1 369 1 245 1 197 2 22 1 373 1 110 1 88 1 270 1 228 1 45 4 72 1 73 2 155 1 175 1 138 1 78 1 
251 1 2 2 358 1 184 2 255 4 161 1 209 1 187 2 96 1 97 1 55 1 332 4 307 1 144 1 258 1 310 1 311 1 192 2 191 1 167 1 10 2 288 4 14 2 171 2 368 1 369 1 245 1 197 2 22 1 373 1 110 1 88 1 270 1 228 1 45 4 72 1 73 2 155 1 175 1 138 1 78 1 
251 1 183 2 358 1 184 2 255 4 50 2 161 1 209 1 187 2 96 1 97 1 332 4 307 1 144 1 258 1 189 1 310 1 311 1 191 1 10 2 288 4 171 2 368 1 369 1 245 1 197 2 268 1 22 1 110 1 88 1 270 1 228 1 45 4 72 1 136 1 73 2 155 1 175 1 380 2 138 1 78 1 
251 1 2 2 358 1 184 2 255 5 161 1 209 1 187 2 97 1 96 1 55 1 332 4 307 1 144 1 258 1 310 1 311 1 192 2 191 1 167 1 10 3 288 5 14 2 171 3 368 1 369 1 245 1 197 3 22 1 373 1 110 1 88 1 270 1 228 1 45 4 72 1 73 2 155 1 175 1 138 1 78 1 27 1 
251 1 2 2 358 1 184 2 255 5 161 1 209 1 187 2 97 1 96 1 55 1 332 4 307 1 144 1 258 1 310 1 311 1 192 2 191 1 167 1 10 3 288 5 14 2 171 3 368 1 369 1 245 1 197 3 22 1 373 1 110 1 88 1 270 1 228 1 45 4 72 1 73 2 155 1 175 1 138 1 78 1 27 1 
251 1 183 2 358 1 184 2 255 4 50 2 161 1 209 1 187 2 97 1 96 1 332 4 144 1 307 1 258 1 310 1 311 1 191 1 10 2 288 4 171 2 368 1 369 1 245 1 197 2 268 1 22 1 110 1 88 1 270 1 45 4 72 1 73 2 155 1 157 1 175 1 380 2 138 1 78 1 
3 1 28 1 140 1 185 2 281 1 329 1 54 1 234 1 235 6 7 1 360 1 64 1 165 2 86 1 263 3 126 1 127 3 103 1 316 2 318 2 128 1 319 1 137 1 379 1 77 1 90 1 
180 1 28 11 185 4 95 2 54 2 234 2 235 14 337 1 360 11 119 1 165 1 169 3 263 8 126 4 127 6 17 2 370 1 316 1 318 2 128 1 292 1 319 2 293 3 378 1 156 1 137 2 296 1 379 1 176 1 24 1 77 2 324 1 90 2 
298 1 180 1 357 1 185 2 186 1 208 1 330 1 359 1 54 1 235 2 307 1 311 2 337 1 146 1 34 1 213 1 165 1 286 1 240 1 263 1 126 1 36 1 127 1 349 1 39 1 223 1 23 1 247 1 319 1 71 1 229 1 137 1 379 1 77 1 201 1 138 2 324 1 90 1 
180 1 3 1 185 6 281 1 186 2 95 2 329 1 330 2 54 3 234 3 143 2 58 1 235 20 7 1 238 1 337 1 64 1 285 2 240 1 17 2 349 2 23 2 247 2 71 2 200 2 296 4 24 2 201 1 77 3 79 2 298 1 28 7 208 1 359 3 307 1 311 3 360 7 34 3 213 1 165 2 86 1 124 1 263 10 126 7 127 10 36 3 316 4 128 3 318 8 223 2 227 1 319 3 137 3 229 2 379 3 324 1 138 3 90 3 325 2 
298 2 185 4 6 1 331 1 359 7 54 2 58 1 235 2 307 1 311 1 337 1 213 1 34 8 240 1 262 1 263 1 243 1 36 8 127 1 103 1 69 1 38 1 104 1 349 2 224 1 223 2 374 2 247 3 319 2 320 1 46 1 229 2 137 2 379 2 201 1 77 2 138 1 324 1 90 2 
180 1 254 1 28 1 185 2 95 1 54 1 234 1 235 3 307 1 118 1 360 1 311 1 213 1 263 1 126 1 345 1 17 1 127 2 316 1 318 1 128 1 319 1 137 1 379 1 24 1 201 1 77 1 138 1 90 1 
263 2 126 1 17 1 103 1 28 1 185 2 318 1 54 1 234 1 235 2 319 1 59 1 360 1 137 1 296 1 379 1 77 1 90 1 
126 1 127 2 103 1 28 1 185 2 316 1 318 1 128 1 54 1 235 2 319 1 360 1 137 1 379 1 24 1 77 1 381 1 90 1 
28 2 185 2 95 1 54 1 234 1 235 4 360 2 263 2 126 2 17 1 127 2 103 1 316 1 318 2 128 1 319 1 137 1 379 1 296 1 24 1 77 1 90 1 
263 2 126 1 17 1 28 1 185 2 318 1 104 1 54 1 234 1 235 2 319 1 59 1 360 1 137 1 296 1 379 1 77 1 90 1 
126 1 127 2 28 1 185 2 316 1 318 1 104 1 128 1 54 1 235 2 319 1 360 1 137 1 379 1 24 1 77 1 381 1 90 1 
28 2 185 2 95 1 54 1 234 1 235 4 360 2 263 2 126 2 17 1 127 2 316 1 104 1 318 2 128 1 319 1 137 1 379 1 296 1 24 1 77 1 90 1 
263 2 126 2 127 2 17 1 28 2 185 2 316 1 128 1 318 2 95 1 54 1 234 1 235 4 319 1 360 2 137 1 296 1 379 1 24 1 77 1 90 1 
298 1 185 2 186 1 330 1 359 1 54 1 235 2 311 1 337 1 34 1 165 1 285 1 263 1 36 1 127 1 349 1 223 1 23 1 247 1 319 1 71 1 229 1 137 1 379 1 77 1 324 1 138 1 90 1 
298 1 185 2 330 1 359 1 54 1 235 2 311 1 337 1 34 1 165 1 214 1 263 1 264 1 36 1 127 1 349 1 223 1 23 1 247 1 43 1 319 1 229 1 137 1 379 1 77 1 324 1 138 1 90 1 
180 1 28 2 185 2 95 1 54 1 234 1 235 4 360 2 263 2 126 2 17 1 127 2 316 1 318 2 128 1 319 1 137 1 379 1 296 1 24 1 77 1 90 1 
28 2 185 2 186 1 95 1 330 1 359 1 331 1 54 1 234 1 235 4 360 2 311 1 34 1 285 1 263 2 126 2 127 2 17 1 36 1 316 1 128 1 318 2 349 1 223 1 23 1 247 1 319 1 71 1 229 1 137 1 296 1 379 1 24 1 77 1 138 1 325 1 90 1 
180 1 254 1 28 1 185 2 95 1 54 1 234 1 235 3 307 1 211 1 311 1 360 1 213 1 263 2 126 1 345 1 127 1 17 1 128 1 318 1 319 1 137 1 296 1 379 1 24 1 201 1 77 1 138 1 90 1 
3 1 185 6 281 1 95 4 329 1 54 3 234 5 235 41 236 1 334 4 7 1 63 2 64 1 193 1 67 1 100 1 102 1 17 4 293 4 156 1 296 4 24 4 253 1 29 1 30 1 309 1 169 3 261 1 86 1 263 20 125 1 127 21 315 1 370 3 316 4 128 5 318 8 41 1 132 1 319 3 137 3 276 1 90 3 
253 1 3 1 185 8 281 1 29 1 95 4 329 1 30 1 54 4 234 5 235 38 236 2 334 4 7 1 309 1 63 2 64 1 193 1 86 1 261 1 169 3 100 1 67 1 263 20 125 1 102 1 127 18 17 4 315 1 316 4 370 3 318 7 128 4 41 1 132 1 319 4 293 4 156 1 137 4 296 3 24 3 276 1 90 4 
253 1 3 1 185 4 281 1 29 1 95 7 329 1 30 1 54 2 234 8 235 52 236 1 334 4 7 1 309 1 63 1 64 1 193 1 86 1 261 1 169 4 67 1 263 27 125 1 102 1 127 25 17 7 315 1 316 7 370 2 318 14 128 8 132 1 319 2 293 4 378 2 156 2 137 2 296 7 24 7 276 1 90 2 
185 4 95 3 30 1 54 2 234 3 235 19 334 2 63 1 193 2 261 1 169 1 100 1 263 9 125 1 102 1 127 10 17 3 148 1 316 3 370 1 318 6 128 3 319 2 293 2 156 1 137 2 296 3 24 3 276 1 90 2 
253 1 185 6 29 1 95 3 30 2 54 3 234 3 235 26 236 2 334 4 309 1 63 2 193 1 261 1 169 2 263 14 67 1 125 1 102 1 127 12 17 3 315 1 316 2 370 2 318 4 128 2 132 1 319 3 293 2 137 3 296 2 24 2 276 1 90 3 
217 1 376 1 12 1 198 1 237 1 8 1 321 1 338 1 303 1 94 1 
267 1 304 1 
217 1 12 1 198 1 83 1 8 1 321 1 303 1 47 1 203 1 
217 1 1 1 12 1 301 2 303 1 115 1 94 1 209 1 153 1 376 1 332 1 198 1 45 1 321 1 8 1 322 1 338 1 74 1 
217 1 1 1 12 1 301 2 303 1 115 1 94 1 209 1 153 1 376 1 332 1 198 1 45 1 321 1 8 1 322 1 338 1 74 1 
217 1 1 1 12 1 301 2 303 1 115 1 94 1 209 1 153 1 376 1 332 1 198 1 45 1 321 1 8 1 322 1 338 1 74 1 
154 1 290 1 163 1 
154 1 290 1 163 1 
271 1 241 1 
271 1 163 1 241 1 
242 1 42 1 
301 1 115 1 303 1 304 1 332 1 307 2 8 1 311 2 213 2 165 1 168 1 217 1 287 1 12 1 344 1 242 1 129 1 267 1 42 1 153 1 198 1 45 1 321 1 295 1 89 1 201 2 138 2 
154 1 290 1 
271 1 163 1 241 1 
180 1 185 2 54 1 359 2 235 2 307 2 60 1 62 1 311 2 337 1 34 2 121 1 262 1 263 1 347 1 36 2 127 1 349 1 223 1 374 2 247 1 319 1 320 1 229 1 137 1 379 1 76 1 77 1 138 2 324 1 90 1 
36 2 327 1 150 2 244 1 141 1 142 1 106 1 223 1 4 1 359 2 331 1 116 1 58 1 133 1 109 1 352 1 229 1 34 2 340 1 
36 1 327 1 150 2 244 1 141 1 142 1 106 1 223 1 4 1 359 1 116 1 58 1 109 1 229 1 34 1 120 1 340 1 
298 1 243 1 36 1 349 1 141 1 223 1 70 1 6 1 359 1 247 1 133 1 229 1 34 1 177 1 
36 1 327 1 150 2 244 1 141 1 142 1 106 1 223 1 4 1 359 1 116 1 58 1 133 1 109 1 352 1 229 1 34 1 340 1 
294 1 
342 1 91 1 88 1 140 1 191 1 209 1 22 1 
288 1 251 1 2 1 14 1 187 1 209 2 97 1 22 1 373 1 332 1 110 1 88 1 45 1 175 1 191 1 192 1 380 1 
91 1 279 2 49 2 93 1 95 2 187 3 330 3 97 4 331 1 234 2 332 5 333 1 190 2 192 6 191 8 66 6 342 1 288 5 13 2 68 2 289 6 17 2 349 3 22 2 247 10 110 4 200 2 24 2 26 2 251 4 298 1 299 2 113 1 80 1 205 1 206 2 209 8 359 3 310 2 34 3 164 1 363 1 218 2 220 2 36 3 130 3 128 2 223 3 225 2 88 9 45 5 229 4 175 4 380 12 
251 2 253 1 29 1 82 1 95 2 187 1 209 5 97 2 234 2 332 1 333 1 192 3 191 5 169 1 66 5 343 1 288 1 67 1 13 1 68 2 289 5 220 1 17 2 315 1 370 1 128 2 132 1 22 2 110 2 88 8 45 1 293 1 175 2 380 6 24 2 
251 1 329 1 97 1 234 2 332 1 307 1 7 1 311 1 213 1 64 1 191 2 166 1 167 1 123 1 365 1 13 1 345 1 68 2 195 1 128 1 291 1 110 1 88 2 72 1 45 1 175 1 201 1 138 1 
342 1 251 1 91 1 209 1 97 1 22 1 110 1 88 1 175 1 191 1 
13 1 68 2 289 5 17 2 128 2 95 2 209 5 234 2 88 5 200 1 191 5 192 5 380 10 24 2 66 5 
288 1 332 1 45 1 209 1 187 1 22 1 
251 2 298 2 92 1 181 1 113 1 205 2 187 2 97 2 6 1 359 4 188 1 332 3 333 2 312 1 34 4 191 2 288 4 243 1 36 4 220 2 349 1 223 1 247 1 110 2 88 2 45 3 353 1 229 1 175 1 
298 1 185 2 282 1 186 1 330 1 54 1 359 1 235 1 307 2 337 1 311 3 34 1 213 2 165 1 285 1 123 1 345 2 127 1 36 1 349 1 223 1 23 1 247 1 319 1 71 1 229 1 137 1 379 1 201 2 77 1 138 3 90 1 
251 1 289 2 220 1 3 1 209 4 97 1 22 2 110 1 333 1 88 1 175 1 192 2 191 2 380 4 66 2 
12 1 170 1 198 1 
12 1 170 1 198 1 
12 1 198 1 338 1 361 1 42 1 
12 1 170 1 198 1 
12 1 198 1 25 1 
12 1 198 1 25 1 
12 1 198 1 25 1 
12 1 198 1 
217 1 8 1 
3 1 185 2 29 1 281 1 329 1 54 1 234 1 235 8 7 1 64 1 169 1 261 1 86 1 263 4 127 4 370 1 316 2 128 1 318 2 319 1 293 1 137 1 90 1 
3 1 185 4 281 1 29 1 95 1 329 1 54 2 234 2 235 11 7 1 64 1 339 1 86 1 261 1 169 1 263 6 127 5 17 1 316 2 370 1 128 1 318 3 319 2 293 2 156 1 137 2 296 1 90 2 
253 1 3 1 185 6 281 1 29 1 95 2 329 1 54 3 234 3 235 19 236 1 7 1 64 1 339 1 86 1 169 1 261 1 263 9 67 1 127 10 17 2 315 1 370 1 316 3 128 3 318 4 132 1 319 3 293 1 137 3 296 1 24 2 90 3 
253 1 3 1 185 6 281 1 29 1 95 2 329 1 54 3 234 3 235 17 236 1 7 1 64 1 339 1 86 1 169 1 261 1 263 10 67 1 127 7 17 2 315 1 370 1 316 3 128 2 318 5 132 1 319 3 293 1 137 3 296 2 24 1 90 3 
3 1 185 2 29 1 281 1 329 1 54 1 234 1 235 8 7 1 64 1 169 1 261 1 86 1 263 4 127 4 370 1 316 2 128 1 318 2 319 1 293 1 137 1 90 1 
253 1 185 2 29 1 95 2 54 1 234 2 235 12 169 1 261 1 263 6 67 1 127 6 17 2 315 1 370 1 316 1 128 2 318 2 132 1 319 1 293 1 137 1 296 1 24 2 90 1 
253 1 3 1 185 8 281 1 29 1 95 2 329 1 54 4 234 3 235 18 236 2 7 1 64 1 339 1 86 1 261 1 169 1 263 10 67 1 127 8 17 2 315 1 370 1 316 3 128 2 318 5 132 1 319 4 293 1 137 4 296 2 24 1 90 4 
253 1 185 8 29 1 95 3 54 4 234 3 235 16 236 2 261 1 169 1 100 1 263 9 67 1 127 7 17 3 315 1 370 1 316 3 128 2 318 6 132 1 319 4 293 1 137 4 296 3 24 2 90 4 
263 3 127 4 281 2 316 3 128 1 318 6 329 3 234 1 235 7 7 3 296 3 64 1 86 1 
253 1 3 1 185 8 281 1 29 1 95 2 329 1 54 4 234 3 235 18 236 2 7 1 64 1 86 1 261 1 169 1 100 1 263 10 67 1 127 8 17 2 315 1 370 1 316 3 128 2 318 4 132 1 319 4 293 1 137 4 296 1 24 1 90 4 
263 4 127 4 3 1 185 4 316 2 281 1 128 1 318 3 329 1 54 2 234 1 235 8 236 1 319 2 7 1 137 2 296 1 64 1 86 1 90 2 
263 3 127 3 3 1 140 1 281 1 316 2 318 2 128 1 329 1 234 1 235 6 7 1 64 1 86 1 
263 2 127 2 17 1 185 2 316 1 128 1 318 2 95 1 54 1 234 1 235 4 319 1 137 1 296 1 339 1 24 1 90 1 
263 3 127 4 17 1 316 1 370 1 128 1 318 2 95 1 234 1 235 7 293 2 156 1 296 1 24 1 169 1 
3 1 185 4 281 1 95 2 329 2 54 2 234 3 235 23 236 2 7 2 64 1 86 1 169 2 364 1 263 11 17 2 127 12 316 5 318 9 128 3 319 2 293 2 156 1 378 1 137 2 296 4 176 1 24 2 90 2 
235 1 127 1 293 1 
263 1 235 1 169 1 
263 3 127 3 17 1 185 2 316 2 318 3 128 1 95 1 54 1 234 1 235 6 319 1 200 1 137 1 296 1 339 1 24 1 90 1 
253 1 185 2 29 1 95 2 54 1 234 2 235 12 169 1 261 1 263 6 67 1 127 6 17 2 315 1 370 1 316 1 128 2 318 2 132 1 319 1 293 1 137 1 296 1 24 2 90 1 
263 3 127 3 316 1 128 1 318 2 329 1 234 1 235 6 7 1 296 1 64 1 
263 1 127 2 185 2 316 1 281 1 318 2 329 1 54 1 235 3 236 1 319 1 7 1 137 1 296 1 86 1 364 1 90 1 
263 5 127 5 185 2 316 3 318 5 128 2 329 2 54 1 234 2 235 10 319 1 7 2 137 1 296 2 64 1 166 1 261 1 90 1 
263 2 17 1 185 2 318 1 54 1 234 1 235 2 319 1 137 1 296 1 261 1 90 1 
263 2 127 2 17 1 185 2 316 1 128 1 318 2 95 1 54 1 234 1 235 4 319 1 137 1 296 1 24 1 261 1 90 1 
100 1 263 1 127 2 185 6 316 1 318 2 329 1 54 3 235 3 236 1 319 3 7 1 137 3 296 1 261 1 364 1 90 3 
3 1 185 10 281 1 95 3 329 3 54 5 234 5 32 1 235 34 236 2 7 3 64 2 339 1 86 1 261 1 169 3 364 1 100 1 263 16 127 18 17 3 370 1 316 7 222 1 318 12 128 5 269 1 319 5 293 4 156 1 137 5 296 5 24 3 90 5 
277 1 307 1 311 1 165 1 131 1 161 1 138 1 
158 1 277 1 159 1 40 1 131 1 161 1 107 1 307 1 259 1 311 1 165 1 138 1 
298 1 247 1 243 1 36 1 140 1 229 1 34 1 349 1 223 1 6 1 359 1 
298 1 36 1 349 1 186 1 223 1 330 1 23 1 359 1 247 1 307 1 311 2 229 1 213 1 34 1 165 1 201 1 138 2 240 1 
299 1 36 1 205 1 206 1 349 2 186 1 223 1 330 2 23 1 359 1 247 3 307 2 270 1 72 1 155 1 311 2 229 1 213 2 34 1 165 1 201 1 138 2 240 1 
314 1 299 1 36 2 205 1 206 1 349 2 223 1 330 2 23 1 359 2 247 3 307 2 43 1 270 1 72 1 155 1 311 2 229 1 213 2 34 2 165 1 201 1 138 2 240 1 
314 1 298 1 299 1 288 1 218 1 36 3 205 1 206 1 232 1 349 1 130 1 223 1 209 1 330 1 22 1 359 3 332 2 247 4 310 1 45 2 229 1 34 3 284 1 
314 1 298 1 299 1 288 1 218 1 36 3 205 1 206 1 49 1 349 1 130 1 223 1 209 1 330 1 22 1 359 3 332 2 247 4 310 1 45 2 229 1 34 3 
36 1 229 1 34 1 38 1 223 1 359 1 
298 2 36 7 114 1 69 1 93 1 38 1 349 2 224 1 223 2 330 1 331 1 359 6 374 1 58 1 247 3 134 1 320 1 46 1 229 3 34 7 11 1 
180 1 3 1 28 1 185 4 281 1 186 1 329 1 330 1 54 2 331 1 359 1 234 1 143 1 235 6 307 1 7 1 360 1 62 1 311 2 213 1 34 1 165 2 64 1 285 1 86 1 240 1 263 3 126 1 127 3 36 1 316 2 128 1 318 2 349 1 223 1 23 1 247 1 319 2 71 1 229 1 137 2 379 2 77 2 201 1 138 2 90 2 325 1 
298 1 251 2 91 1 113 1 279 1 49 1 209 1 187 1 97 2 359 1 332 3 310 1 190 1 34 1 191 1 168 1 342 1 288 2 218 1 36 1 130 1 22 1 247 2 110 2 88 1 45 3 175 2 26 1 
218 1 80 1 36 2 93 1 38 1 349 1 223 1 330 1 331 1 359 2 247 2 229 2 34 2 
314 1 298 1 243 1 36 4 349 1 223 1 6 1 359 4 331 1 247 1 229 1 34 4 313 1 
36 2 205 1 349 1 223 1 330 1 359 2 247 1 249 1 134 1 229 2 34 2 11 1 355 1 124 1 
298 1 109 1 36 1 229 1 34 1 150 1 244 1 340 1 223 1 359 1 
247 1 58 1 320 1 347 1 36 2 229 1 34 2 349 1 223 1 359 2 331 1 
298 1 243 1 36 5 205 1 69 1 349 2 223 2 6 1 359 4 331 1 247 3 320 1 229 2 46 1 34 5 313 1 
298 1 243 1 15 1 36 5 205 1 349 2 223 2 6 1 359 4 331 1 247 3 320 1 229 2 46 1 34 5 313 1 
298 1 36 1 349 1 223 1 330 1 23 1 359 1 247 1 307 1 43 1 311 2 229 1 213 1 34 1 165 1 201 1 138 2 240 1 
36 1 114 1 205 1 93 1 349 1 223 1 330 1 359 1 247 1 134 1 229 2 34 1 11 1 
307 1 60 1 311 1 149 1 76 1 121 1 138 1 341 1 178 1 
56 1 149 1 194 1 
165 1 149 1 239 1 341 1 178 1 
149 1 160 1 209 1 22 1 56 1 332 2 270 1 258 1 310 1 72 1 45 2 199 1 155 1 165 1 168 1 239 2 194 1 341 2 178 2 
326 1 140 1 273 1 51 1 
252 1 283 1 326 1 19 1 273 1 51 1 9 1 
248 1 252 1 335 1 
252 3 326 1 196 1 19 3 207 1 51 1 305 1 283 1 273 1 9 1 275 2 179 1 
252 2 283 1 326 1 265 1 19 2 250 1 273 1 51 1 9 1 
252 1 283 1 112 1 172 1 326 1 19 1 150 1 340 1 142 1 9 1 179 1 
252 1 283 1 326 1 19 1 51 1 9 1 179 1 
252 1 283 1 19 1 273 1 51 2 9 1 179 1 
257 1 252 2 283 2 326 1 19 2 75 1 51 1 122 1 9 2 179 1 
366 1 252 3 283 1 112 1 336 1 326 2 19 3 250 2 273 1 51 1 210 1 9 1 179 1 
252 2 326 1 19 2 244 1 150 2 51 1 106 1 142 1 372 1 283 1 250 1 273 1 340 1 9 1 179 1 
252 4 283 2 219 1 112 1 326 2 265 1 19 4 250 2 273 1 51 1 210 1 9 2 179 1 
252 1 283 1 326 1 19 1 273 1 51 1 9 1 179 1 
101 1 252 4 196 1 326 3 19 4 207 1 51 2 210 1 283 1 112 1 250 2 273 2 275 1 9 1 
87 1 117 1 252 2 283 1 326 1 19 2 250 1 273 1 51 1 108 1 9 1 179 1 
252 3 326 1 18 1 196 2 19 3 207 1 51 1 283 1 273 1 9 1 275 2 179 1 
326 2 221 1 317 1 85 2 
252 1 283 1 266 1 19 1 9 1 179 1 
252 2 283 1 336 1 326 1 19 2 250 1 273 1 51 1 9 1 179 1 
233 1 
252 1 283 1 326 1 19 1 273 1 51 1 9 1 179 1 
252 3 283 1 336 1 326 1 19 3 250 1 273 1 51 1 275 1 9 1 179 1 
101 1 112 1 326 1 210 1 
326 1 51 1 

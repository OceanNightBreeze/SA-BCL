#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 319 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException 241 280 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 535 | return null
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | ASSIGN | 2396 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 1 136 3 82 1 48 2 225 5 189 1 192 1 89 1 229 1 314 1 13 1 100 1 321 2 151 9 152 6 154 1 62 2 30 1 63 1 112 1 205 1 117 1 65 4 211 2 294 2 298 9 301 2 302 2 
43 1 136 3 82 1 48 2 225 5 189 1 192 1 89 1 229 1 314 1 13 1 100 1 151 9 321 2 152 6 154 1 62 2 30 1 63 1 112 1 205 1 117 1 65 4 211 2 294 2 298 9 301 2 302 2 
43 1 136 4 82 1 48 2 225 6 189 1 192 1 89 1 229 1 314 1 13 1 100 1 151 10 321 2 152 7 154 1 62 2 30 1 63 1 112 1 205 1 117 1 65 5 211 2 294 2 298 10 301 2 302 2 
43 1 136 2 82 1 48 2 225 4 189 1 192 1 89 1 229 1 314 1 13 1 100 1 151 7 321 1 152 4 154 1 62 2 30 1 63 1 112 1 205 1 65 3 211 2 294 2 298 7 301 2 302 2 
152 3 136 1 62 1 63 1 82 1 117 1 65 2 225 3 89 1 211 1 314 1 13 1 294 1 298 4 301 1 302 1 151 4 321 2 
62 1 154 1 63 1 48 1 324 1 225 1 229 1 314 1 13 1 54 1 294 1 298 2 301 1 302 1 303 1 151 2 
152 1 136 1 62 2 30 1 63 1 48 1 65 1 225 2 314 1 13 1 294 2 298 3 151 3 
136 3 82 1 48 1 310 1 225 5 189 1 89 1 314 1 13 1 151 9 321 2 152 7 30 1 62 2 63 1 112 1 117 1 65 4 32 1 211 1 294 2 298 9 301 1 302 1 
136 3 82 1 48 1 310 1 225 5 189 1 89 1 314 1 13 1 151 9 321 2 152 7 30 1 62 2 63 1 112 1 117 1 65 4 32 1 211 1 294 2 298 9 301 1 302 1 
70 1 93 1 35 1 
182 2 42 1 35 1 
313 2 79 1 37 2 130 2 143 2 217 2 227 2 228 1 
263 1 79 1 140 2 267 1 143 2 191 2 227 3 226 1 51 1 228 1 313 2 147 1 197 1 275 1 276 1 59 1 106 1 29 1 242 1 282 1 325 1 244 1 161 1 286 1 68 2 331 1 291 1 122 2 37 2 253 2 213 1 130 2 340 1 341 1 217 3 40 1 259 1 
313 1 38 1 37 1 130 1 143 1 217 1 87 1 227 1 133 1 228 1 
109 1 2 1 247 1 87 1 33 1 227 1 35 1 70 1 130 1 256 1 217 1 149 1 102 1 202 1 
109 1 2 2 143 1 87 1 33 2 227 1 35 1 313 1 70 1 37 1 130 1 256 1 217 1 149 1 202 1 
336 1 2 1 141 1 33 1 104 1 
70 1 336 1 2 2 141 1 219 1 33 2 305 1 35 1 
2 1 141 1 33 1 
2 1 143 1 87 1 33 1 227 1 228 1 313 1 38 1 336 1 37 1 39 1 130 1 217 1 133 1 
35 1 
212 1 70 1 336 1 2 2 141 1 33 2 305 1 35 1 
78 1 46 1 2 5 141 2 185 1 143 1 188 4 87 1 50 1 227 1 228 1 313 1 91 1 148 1 18 2 233 1 20 2 25 1 153 1 116 1 119 4 120 2 33 5 287 1 35 1 210 1 70 1 38 1 37 1 336 2 39 1 130 1 258 1 217 1 344 1 173 1 305 1 133 1 
79 1 93 1 
79 2 281 1 143 1 227 2 313 1 195 1 37 1 130 2 217 2 
198 1 284 1 342 1 
79 1 29 1 282 1 244 1 191 1 227 1 226 1 286 1 51 1 122 1 69 1 253 1 197 1 217 1 59 1 106 1 
29 1 157 1 282 1 244 1 143 1 191 1 286 1 226 1 227 2 51 1 122 1 37 1 253 1 197 1 130 1 198 1 217 2 59 1 26 1 106 1 
313 1 79 1 37 3 130 3 143 3 217 3 227 3 26 1 
38 1 37 1 130 1 143 1 217 1 87 1 227 1 
313 1 195 1 37 1 281 1 130 1 143 1 217 1 87 1 227 1 
263 1 79 1 140 2 2 1 267 1 143 3 87 1 191 1 226 1 227 4 51 1 228 1 313 2 195 1 316 1 14 1 197 1 275 1 149 1 276 1 59 1 202 1 26 1 106 1 109 1 29 1 157 1 282 1 325 1 244 1 161 1 33 1 286 1 68 1 291 1 122 1 37 3 253 1 213 1 130 3 340 1 256 1 217 4 259 1 
79 1 37 1 130 2 143 1 217 2 102 1 227 2 26 1 250 1 
109 1 157 1 2 1 268 1 143 3 87 1 33 1 227 3 35 1 313 1 195 1 37 3 14 1 130 3 256 1 149 1 217 3 202 1 26 2 
143 2 227 2 313 1 195 1 37 2 130 2 198 1 342 1 217 2 26 1 
79 1 29 1 282 1 244 1 191 1 227 1 226 1 286 1 51 1 122 1 253 1 197 1 217 1 59 1 106 1 
79 1 110 1 29 1 282 1 191 1 227 1 226 1 286 1 51 1 122 1 253 1 57 1 217 1 59 1 106 1 
263 1 139 1 140 2 267 1 86 1 88 1 194 1 147 2 18 1 95 1 198 2 20 1 275 1 277 1 325 2 118 1 284 2 161 1 68 4 291 1 167 1 340 1 342 2 262 1 
37 1 297 1 130 1 143 1 217 1 87 1 202 1 227 1 
79 1 157 1 143 4 227 5 250 1 313 1 195 1 37 4 130 5 217 5 102 1 260 1 26 2 177 1 
38 1 37 2 297 1 130 2 143 2 217 2 87 1 227 2 
127 1 94 1 
127 1 94 1 
138 1 67 1 
138 1 67 1 
138 1 67 1 
127 1 94 1 101 1 
127 1 94 1 101 1 
293 1 127 1 94 1 
45 1 138 1 127 2 94 2 261 1 67 1 
127 1 94 1 101 1 
127 1 94 1 216 1 
127 1 94 1 216 1 
127 1 94 1 216 1 
45 1 2 2 160 2 33 2 11 1 34 2 162 1 35 1 168 1 55 1 295 2 127 2 19 1 215 1 94 2 345 3 76 1 132 2 61 2 
79 1 137 1 2 1 85 1 143 2 160 1 271 1 33 1 227 2 10 1 162 1 34 1 293 1 37 2 295 1 127 1 130 2 94 1 58 1 217 2 21 1 345 1 306 1 61 1 
211 1 301 1 302 1 
301 1 324 1 302 1 
333 1 211 2 324 1 98 1 302 3 52 1 
333 1 211 1 274 1 324 1 302 2 52 1 
211 1 333 1 324 1 302 2 52 2 
78 1 221 1 2 4 141 1 33 4 35 1 70 1 336 3 232 1 319 1 305 1 235 1 103 1 
78 1 2 4 141 2 33 4 35 1 70 1 36 1 252 1 336 3 337 1 232 1 319 1 305 1 104 1 
221 1 182 4 2 3 185 1 85 1 188 3 88 1 194 1 91 1 273 1 148 1 17 2 18 1 319 1 20 1 235 1 103 1 283 1 116 1 119 2 33 3 35 3 70 1 336 2 42 2 41 2 
182 7 309 1 221 1 3 1 2 4 185 1 85 2 188 5 88 2 194 2 91 1 145 1 273 1 148 1 17 4 18 2 319 1 20 2 235 1 103 2 283 2 116 1 119 4 33 4 35 4 70 1 336 3 42 3 41 4 
93 1 59 1 236 1 
169 1 59 1 
338 1 
59 1 51 1 
29 1 174 1 59 3 51 1 312 1 236 2 
29 1 59 1 51 1 
201 1 59 1 
153 1 108 1 278 1 0 1 325 3 118 2 86 3 6 1 208 2 68 7 12 1 290 1 147 4 18 1 20 1 173 1 344 1 
153 1 108 1 278 1 0 1 325 3 118 2 86 3 6 1 208 2 68 7 12 1 290 1 147 4 18 1 20 1 173 1 344 1 
153 1 108 1 278 1 0 1 325 3 118 2 86 3 6 1 208 2 290 1 68 7 12 1 147 4 18 1 20 1 173 1 344 1 346 1 
44 1 263 1 0 1 183 4 140 2 267 1 86 10 6 5 9 3 88 3 194 3 12 1 147 16 18 4 20 4 105 1 107 1 153 1 278 2 108 2 156 1 283 3 325 15 118 5 161 1 208 3 290 1 68 31 164 1 289 1 291 1 131 1 173 2 344 2 
153 1 263 2 108 1 278 1 0 1 140 4 267 2 118 3 325 4 86 4 6 1 161 2 208 2 121 1 290 1 289 1 68 9 291 2 147 5 18 1 214 1 20 1 173 1 344 1 
48 1 180 1 49 1 187 1 225 1 191 1 226 1 314 1 315 1 13 1 98 1 151 2 152 1 322 1 62 1 63 1 240 1 282 1 31 1 324 1 66 1 211 1 122 1 253 1 294 1 298 2 301 1 73 1 302 2 304 1 
48 1 180 1 49 1 187 1 225 1 191 1 226 1 272 1 13 1 98 1 99 1 151 3 152 2 322 1 62 1 63 1 282 1 31 1 324 1 66 1 329 1 211 1 122 1 253 1 294 1 298 3 301 1 73 1 302 2 304 1 
152 2 322 1 63 1 180 1 48 1 282 1 31 1 324 1 187 1 225 1 191 1 226 1 329 1 211 1 272 1 122 1 253 1 13 1 298 2 301 1 73 1 98 1 302 2 304 1 151 2 
62 1 322 2 48 2 184 1 282 1 323 1 31 2 191 1 226 1 51 1 122 1 253 1 294 1 298 1 96 1 73 2 99 1 22 1 59 1 151 1 203 1 106 1 134 1 
48 1 180 1 49 1 187 1 191 1 226 1 314 1 98 1 151 1 322 1 62 1 240 1 282 1 31 1 324 1 66 1 329 1 211 1 122 1 253 1 294 1 298 1 301 1 73 1 302 2 304 1 
166 1 
122 1 78 1 253 1 2 1 191 1 33 1 106 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 3 241 1 141 1 222 1 247 1 87 1 33 3 8 1 227 1 212 1 130 1 256 1 149 1 217 1 202 1 305 1 102 1 
78 1 109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
78 1 109 1 280 1 2 2 241 1 222 1 247 1 87 1 33 2 8 1 227 1 130 1 256 1 149 1 217 1 202 1 102 1 
263 1 79 2 0 1 140 2 267 1 86 2 147 3 93 1 18 1 198 1 275 1 20 1 277 1 153 1 118 2 325 3 284 1 161 1 208 1 290 1 68 6 291 1 340 1 342 1 344 1 173 1 
263 2 79 1 183 3 140 4 267 2 86 2 6 1 9 3 88 2 194 1 144 1 147 8 230 1 18 1 198 11 275 1 20 2 276 1 105 1 107 1 242 1 283 2 118 1 325 6 284 11 161 2 288 1 68 14 291 2 125 1 296 1 340 2 342 4 
263 1 79 1 140 2 267 1 186 1 143 1 191 1 226 1 227 2 51 1 90 1 147 1 197 1 275 1 59 1 276 1 26 1 106 1 29 1 157 1 114 1 282 1 242 1 244 1 325 1 161 1 286 1 68 2 122 1 291 1 69 1 253 1 125 1 37 1 130 1 340 1 342 1 217 2 
263 3 79 2 0 1 267 3 86 8 6 4 270 1 191 3 88 2 194 2 197 2 18 3 198 7 275 3 20 3 276 1 26 1 106 1 29 2 282 2 283 2 118 4 284 7 208 1 286 2 290 1 122 3 291 3 292 2 37 1 125 1 213 2 130 1 217 3 140 6 143 1 227 3 226 2 51 2 147 10 318 1 59 2 153 1 237 2 157 1 239 2 242 1 245 1 325 10 244 2 161 3 329 1 68 20 253 3 340 3 74 2 342 7 173 1 344 1 
263 2 140 4 267 2 143 1 191 8 227 1 226 2 53 1 51 2 315 1 147 1 231 1 15 1 275 2 22 1 59 3 276 1 26 1 106 2 27 1 277 1 243 1 282 2 242 1 323 1 325 1 161 2 329 1 68 2 122 7 291 2 37 1 253 8 72 1 130 1 171 1 340 2 341 2 217 1 
263 1 140 2 267 1 143 1 86 1 227 1 88 1 194 1 313 1 195 1 147 1 18 1 198 1 275 1 20 1 283 1 118 1 325 2 284 1 161 1 68 3 291 1 125 1 37 1 130 1 340 1 342 1 217 1 218 1 
277 1 263 1 140 2 267 1 86 1 284 1 6 1 161 1 88 1 68 2 291 1 147 2 340 1 198 1 342 1 275 1 20 1 262 1 
277 1 263 1 140 2 267 1 118 1 325 2 86 1 284 1 161 1 194 1 68 2 291 1 18 1 340 1 198 1 95 1 342 1 275 1 
263 1 140 2 267 1 86 2 6 1 88 1 194 1 147 2 18 1 198 2 20 1 275 1 277 1 283 1 325 2 118 1 284 2 161 1 68 4 291 1 340 1 342 2 
263 1 140 2 267 1 86 1 284 1 6 1 161 1 88 1 68 2 291 1 147 2 171 1 340 1 198 1 342 1 275 1 20 1 262 1 
263 1 140 2 267 1 118 1 325 2 86 1 284 1 161 1 194 1 68 2 291 1 171 1 18 1 340 1 198 1 95 1 342 1 275 1 
263 1 140 2 267 1 86 2 6 1 88 1 194 1 147 2 18 1 198 2 20 1 275 1 283 1 325 2 118 1 284 2 161 1 68 4 291 1 171 1 340 1 342 2 
263 1 140 2 283 1 267 1 118 1 325 2 86 2 284 2 6 1 161 1 88 1 194 1 68 4 291 1 147 2 18 1 340 1 198 2 342 2 275 1 20 1 
263 1 79 1 140 2 267 1 191 1 226 1 227 1 51 1 147 1 197 1 275 1 59 1 276 1 106 1 29 1 242 1 282 1 244 1 325 1 161 1 286 1 68 2 122 1 291 1 253 1 213 1 340 1 217 1 
263 1 79 1 140 2 267 1 190 1 191 1 226 1 227 1 51 1 147 1 57 1 275 1 59 1 276 1 106 1 110 1 29 1 242 1 282 1 325 1 161 1 286 1 68 2 122 1 291 1 253 1 340 1 217 1 
263 1 140 2 267 1 86 2 6 1 88 1 194 1 147 2 18 1 198 2 20 1 275 1 283 1 325 2 118 1 284 2 161 1 68 4 291 1 125 1 340 1 342 2 
263 1 140 2 267 1 86 2 6 1 191 1 88 1 226 1 227 1 194 1 51 1 147 2 315 1 197 1 18 1 198 2 20 1 275 1 59 1 29 1 282 1 283 1 118 1 325 2 244 1 284 2 161 1 286 1 68 4 122 1 291 1 253 1 213 1 340 1 74 1 342 2 217 1 
263 1 140 2 267 1 143 1 86 1 6 1 227 1 88 1 194 1 313 1 195 1 147 2 18 1 198 1 275 1 20 1 283 1 325 1 284 1 161 1 68 3 291 1 125 1 123 1 37 1 130 1 340 1 217 1 342 1 
263 3 220 1 308 1 0 1 183 4 266 1 140 6 267 3 223 1 86 8 6 4 9 3 88 4 194 4 147 20 18 5 20 5 23 1 200 1 24 1 105 1 107 3 153 1 238 1 113 1 283 4 118 4 325 21 159 4 161 3 208 1 290 1 289 1 249 2 330 1 68 41 291 3 126 1 214 1 173 1 344 1 175 1 135 1 
263 4 220 1 308 1 0 1 183 4 266 1 140 8 267 4 223 1 86 7 6 3 9 3 88 4 194 3 147 20 18 4 20 5 23 1 200 1 24 1 105 1 107 3 153 1 238 1 113 1 283 4 118 4 325 18 159 4 161 4 208 1 290 1 289 2 249 2 330 1 68 38 291 4 126 1 214 1 173 1 344 1 175 1 135 1 
263 2 308 1 0 1 183 4 266 1 140 4 267 2 223 1 86 14 6 7 9 4 88 7 194 7 147 27 18 8 20 8 23 1 200 1 24 1 105 2 107 2 153 1 238 1 113 1 283 7 118 7 325 25 159 4 161 2 208 1 288 2 290 1 289 1 249 1 330 1 68 52 291 2 126 1 214 1 173 1 344 1 175 1 
263 2 220 1 183 2 266 1 140 4 267 2 86 6 6 3 9 1 88 3 194 3 147 9 18 3 20 3 23 1 105 1 107 1 283 3 118 3 325 10 159 2 161 2 163 1 249 1 330 1 68 19 291 2 126 2 214 1 175 1 
263 3 308 1 183 2 266 2 140 6 267 3 86 4 223 1 6 2 9 2 88 3 194 2 147 14 18 2 20 3 23 1 200 1 24 1 107 2 238 1 113 1 283 3 118 2 325 12 159 4 161 3 289 2 249 2 330 1 68 26 291 3 126 1 214 1 175 1 
45 1 71 1 295 1 127 1 19 1 215 1 94 1 160 1 34 1 61 1 
293 1 21 1 
295 1 1 1 206 1 127 1 94 1 160 1 347 1 34 1 61 1 
45 1 2 1 160 1 33 1 11 1 162 1 34 1 35 1 55 1 295 1 127 1 19 1 215 1 94 1 345 2 76 1 132 1 61 1 
45 1 2 1 160 1 33 1 11 1 162 1 34 1 35 1 55 1 295 1 127 1 19 1 215 1 94 1 345 2 76 1 132 1 61 1 
45 1 2 1 160 1 33 1 11 1 162 1 34 1 35 1 55 1 295 1 127 1 19 1 215 1 94 1 345 2 76 1 132 1 61 1 
343 1 101 1 261 1 
343 1 101 1 261 1 
158 1 216 1 
158 1 216 1 261 1 
271 1 10 1 
79 1 137 1 2 1 85 1 143 2 160 1 271 1 33 1 227 2 10 1 34 1 37 2 293 1 336 1 295 1 127 1 130 2 299 1 94 1 58 1 217 2 21 1 345 1 76 1 132 1 306 1 61 1 
343 1 101 1 
158 1 216 1 261 1 
263 1 140 2 267 1 191 2 226 1 227 2 51 1 146 1 147 1 15 1 275 1 59 1 276 1 60 1 115 1 282 1 242 1 325 1 161 1 68 2 291 1 122 2 124 1 253 2 125 1 72 1 130 2 340 1 75 1 341 2 217 2 
28 1 282 1 324 1 187 1 66 1 191 2 226 1 248 1 329 1 211 1 122 2 253 2 315 1 335 1 301 1 73 1 98 1 302 2 304 1 
282 1 324 1 326 1 187 1 66 1 191 1 248 1 226 1 329 1 211 1 122 1 253 1 301 1 73 1 98 1 302 2 304 1 
28 1 282 1 323 1 191 1 7 1 226 1 51 1 122 1 253 1 73 1 22 1 59 1 106 1 203 1 
28 1 282 1 324 1 187 1 66 1 191 1 226 1 248 1 329 1 211 1 122 1 253 1 335 1 301 1 73 1 98 1 302 2 304 1 
320 1 
70 1 93 1 233 1 188 1 119 1 287 1 35 1 
78 1 
122 1 78 1 253 1 191 1 106 1 
78 1 
78 1 2 1 339 1 33 1 
78 1 233 1 
292 1 182 10 17 5 18 2 283 2 188 5 119 5 20 2 120 2 25 1 88 2 194 2 42 5 41 5 35 5 
70 1 2 1 141 1 33 1 305 1 35 1 
78 1 122 1 253 1 4 1 191 1 106 1 
263 1 79 1 140 2 267 1 143 2 191 1 227 3 226 1 51 1 228 1 313 2 197 1 275 1 276 1 59 1 106 1 29 1 282 1 325 1 244 1 161 1 286 1 68 1 291 1 122 1 253 1 37 2 213 1 130 2 340 1 217 3 259 1 
78 1 
295 1 265 1 34 1 
295 1 265 1 34 1 
295 1 19 1 97 1 10 1 34 1 
295 1 265 1 34 1 
295 1 56 1 34 1 
295 1 56 1 34 1 
295 1 56 1 34 1 
295 1 34 1 
127 1 94 1 
263 1 0 1 183 1 140 2 267 1 223 1 86 2 9 1 147 4 18 1 20 1 107 1 153 1 325 4 118 2 161 1 208 1 68 8 290 1 291 1 214 1 344 1 173 1 
263 2 0 1 183 2 140 4 84 1 267 2 223 1 86 3 6 1 9 1 88 1 147 6 18 1 20 2 105 1 107 1 153 1 283 1 118 2 325 5 161 2 208 1 290 1 68 11 291 2 214 1 173 1 344 1 
263 3 308 1 0 1 183 1 84 1 140 6 267 3 223 1 86 4 6 1 9 1 88 2 194 2 147 9 18 3 20 3 24 1 107 1 153 1 238 1 113 1 283 2 325 10 118 3 161 3 208 1 290 1 68 19 289 1 291 3 214 1 173 1 344 1 
263 3 308 1 0 1 183 1 84 1 140 6 267 3 223 1 86 5 6 2 9 1 88 2 194 1 147 10 18 2 20 3 24 1 107 1 153 1 238 1 113 1 283 2 325 7 118 3 161 3 208 1 290 1 289 1 68 17 291 3 214 1 173 1 344 1 
263 1 0 1 183 1 140 2 267 1 223 1 86 2 9 1 147 4 18 1 20 1 107 1 153 1 325 4 118 2 161 1 208 1 68 8 290 1 291 1 214 1 344 1 173 1 
263 1 308 1 183 1 140 2 267 1 223 1 86 2 6 1 9 1 88 2 194 2 147 6 18 2 20 2 24 1 107 1 238 1 113 1 283 2 325 6 118 1 161 1 68 12 291 1 214 1 
263 4 308 1 0 1 183 1 84 1 140 8 267 4 223 1 86 5 6 2 9 1 88 2 194 1 147 10 18 2 20 3 24 1 107 1 153 1 238 1 113 1 283 2 325 8 118 3 161 4 208 1 290 1 68 18 289 2 291 4 214 1 173 1 344 1 
263 4 308 1 220 1 183 1 140 8 267 4 223 1 86 6 6 3 9 1 88 3 194 2 147 9 18 2 20 3 24 1 107 1 238 1 113 1 283 3 325 7 118 3 161 4 68 16 289 2 291 4 214 1 
153 1 0 1 325 4 118 3 86 6 6 3 68 7 290 2 147 3 18 1 20 1 344 3 173 3 
263 4 308 1 220 1 0 1 183 1 140 8 267 4 223 1 86 4 6 1 9 1 88 2 194 1 147 10 18 2 20 3 24 1 107 1 153 1 238 1 113 1 283 2 325 8 118 3 161 4 208 1 290 1 68 18 289 2 291 4 214 1 173 1 344 1 
153 1 263 2 0 1 140 4 267 2 325 4 118 2 86 3 6 1 161 2 208 1 68 8 289 1 290 1 291 2 147 4 18 1 20 1 344 1 173 1 
153 1 0 1 325 3 118 2 86 2 208 1 290 1 68 6 147 3 93 1 18 1 20 1 344 1 173 1 
263 1 84 1 140 2 283 1 267 1 118 1 325 2 86 2 6 1 161 1 88 1 194 1 68 4 291 1 147 2 18 1 20 1 
183 2 283 1 118 1 325 4 86 2 6 1 9 1 88 1 194 1 68 7 147 3 18 1 20 1 105 1 107 1 
263 2 80 1 0 1 183 2 140 4 267 2 86 9 6 4 88 2 9 2 194 2 147 11 18 3 20 3 105 1 153 1 283 2 325 12 118 5 161 2 208 1 288 1 290 1 68 23 289 2 291 2 296 1 173 2 344 2 
183 1 325 1 68 1 
147 1 9 1 68 1 
263 1 140 2 84 1 283 1 267 1 325 3 118 2 86 3 6 1 161 1 88 1 194 1 68 6 291 1 292 1 147 3 18 1 20 1 
263 1 308 1 183 1 140 2 267 1 223 1 86 2 6 1 9 1 88 2 194 2 147 6 18 2 20 2 24 1 107 1 238 1 113 1 283 2 325 6 118 1 161 1 68 12 291 1 214 1 
153 1 325 3 118 1 86 2 6 1 68 6 147 3 18 1 20 1 344 1 173 1 
263 1 80 1 0 1 140 2 267 1 118 1 325 2 86 2 6 1 161 1 290 1 68 3 289 1 291 1 147 1 173 1 344 1 
263 1 153 1 46 1 140 2 267 1 118 3 325 5 86 5 6 2 161 1 68 10 291 1 147 5 18 2 214 1 20 2 344 2 173 2 
263 1 140 2 267 1 86 1 6 1 161 1 88 1 68 2 291 1 147 2 214 1 20 1 
263 1 140 2 283 1 267 1 118 1 325 2 86 2 6 1 161 1 88 1 194 1 68 4 291 1 147 2 18 1 214 1 20 1 
263 3 80 1 220 1 140 6 267 3 325 2 118 1 86 2 6 1 161 3 289 1 68 3 291 3 147 1 214 1 344 1 173 1 
44 1 263 5 80 1 220 1 0 1 183 4 84 1 140 10 267 5 86 12 6 5 9 3 88 3 194 3 147 16 18 5 20 5 105 1 107 1 153 2 283 3 325 18 118 7 161 5 208 1 290 1 289 2 164 1 68 34 291 5 214 1 131 1 173 3 344 3 
79 1 130 1 217 1 227 1 102 1 176 1 250 1 
79 1 81 1 130 1 254 1 172 1 327 1 217 1 150 1 227 1 102 1 176 1 250 1 
122 1 253 1 93 1 282 1 323 1 22 1 191 1 226 1 59 1 51 1 106 1 
79 1 29 1 282 1 143 1 244 1 191 1 286 1 226 1 227 2 51 1 122 1 37 1 253 1 130 1 217 2 59 1 26 1 106 1 
79 1 29 2 264 1 282 1 143 1 244 1 87 1 191 1 286 1 226 1 227 2 51 2 122 1 37 2 253 1 196 1 130 2 256 1 217 2 201 1 202 1 59 3 26 1 
79 1 29 2 264 1 282 1 143 1 87 1 191 2 286 1 226 1 227 2 51 2 122 2 165 1 37 2 253 2 196 1 130 2 256 1 57 1 217 2 201 1 202 1 59 3 26 1 
178 1 264 1 181 1 2 2 141 1 191 3 226 1 51 1 196 1 149 1 201 1 59 4 236 1 106 1 29 1 282 1 33 2 35 1 122 3 165 1 70 1 253 3 169 1 
29 1 279 1 264 1 2 2 282 1 141 1 33 2 191 3 226 1 51 1 35 1 122 3 165 1 70 1 253 3 196 1 169 1 149 1 201 1 59 4 106 1 236 1 
122 1 253 1 282 1 243 1 191 1 226 1 
27 1 29 1 243 1 282 2 142 1 191 7 226 3 329 1 53 1 312 1 51 2 122 6 315 1 253 7 231 1 72 1 341 1 77 1 234 1 59 3 106 2 
263 2 79 2 0 1 267 2 86 2 191 1 197 1 18 1 198 1 275 2 20 1 26 1 29 1 282 1 118 2 284 1 286 1 208 1 290 1 122 1 291 2 37 1 125 1 213 1 130 1 217 2 140 4 143 1 227 2 226 1 51 1 315 1 147 3 59 1 60 1 153 1 239 1 244 1 325 3 161 2 68 6 253 1 340 2 74 1 342 1 344 1 173 1 
78 2 279 1 47 1 2 3 141 2 4 1 33 3 191 1 209 1 332 1 122 1 336 1 253 1 169 1 149 1 305 1 59 2 236 1 106 1 
29 1 179 1 243 1 282 1 191 2 226 2 312 1 51 1 122 2 315 1 253 2 59 2 236 1 
204 1 282 1 323 1 191 4 226 1 51 1 122 4 165 1 253 4 315 1 22 1 59 1 106 1 
29 1 264 1 307 1 282 1 142 1 191 2 226 2 51 1 122 2 253 2 318 1 257 1 77 1 59 1 
122 1 253 1 282 1 301 1 324 1 302 1 304 1 191 1 226 1 106 1 
282 1 191 2 226 1 329 1 51 1 122 2 315 1 253 2 124 1 72 1 59 1 
27 1 122 4 204 1 315 1 253 5 264 1 282 2 72 1 323 1 22 1 191 5 226 2 59 3 51 2 53 1 106 1 
27 1 334 1 122 4 204 1 315 1 253 5 264 1 282 2 72 1 323 1 22 1 191 5 226 2 59 3 51 2 106 1 
79 1 29 1 282 1 143 1 191 1 286 1 226 1 227 2 51 1 122 1 37 1 253 1 130 1 57 1 217 2 59 1 26 1 106 1 
122 1 29 1 253 1 264 1 282 1 142 1 77 1 191 1 226 2 59 1 234 1 51 1 312 1 
251 1 79 1 170 1 16 1 199 1 
79 1 109 1 155 1 111 1 2 2 87 1 33 2 35 1 251 1 70 1 336 1 92 1 170 2 14 1 16 2 256 1 199 2 149 1 202 1 
115 1 227 1 251 1 146 1 170 1 16 1 130 1 75 1 217 1 
251 1 92 1 111 1 
63 1 13 1 93 1 225 1 
62 1 63 1 13 1 294 1 298 1 225 1 151 1 
322 1 48 1 151 1 
229 2 314 1 62 1 63 1 13 1 294 1 298 3 317 1 5 1 225 1 193 1 151 3 
152 1 62 1 63 1 13 1 294 1 298 2 225 1 321 1 151 2 
62 1 82 1 65 1 225 1 211 1 314 1 294 1 298 1 301 1 302 1 151 1 
314 1 62 1 63 1 294 1 298 1 225 1 151 1 
314 1 62 1 63 2 13 1 294 1 298 1 151 1 
314 1 62 2 63 1 294 2 83 1 298 2 64 1 311 1 225 1 151 2 
152 2 136 1 62 1 63 1 112 1 65 1 189 1 225 2 314 1 13 1 294 1 298 3 151 3 
152 1 62 1 63 1 324 1 246 1 225 1 211 1 314 1 13 1 294 1 298 2 301 1 302 2 98 1 151 2 
152 2 136 1 62 2 63 1 117 1 65 1 225 2 314 1 13 1 294 2 298 4 151 4 321 1 
314 1 62 1 63 1 13 1 294 1 298 1 225 1 151 1 
152 2 136 1 62 1 63 2 65 1 225 3 193 1 229 1 13 2 294 1 129 1 298 4 317 1 151 4 
152 1 62 1 63 1 269 1 310 1 225 1 207 1 314 1 13 1 294 1 298 2 151 2 
62 1 63 1 225 1 328 1 193 1 229 2 314 1 13 1 294 1 298 3 317 2 151 3 
128 1 300 1 225 2 285 2 
314 1 62 1 294 1 298 1 255 1 151 1 
152 1 314 1 62 1 63 1 13 1 112 1 294 1 298 2 225 1 151 2 
224 1 
314 1 62 1 63 1 13 1 294 1 298 1 225 1 151 1 
152 1 62 1 63 1 112 1 225 1 229 1 314 1 13 1 294 1 298 3 151 3 
136 1 129 1 65 1 225 1 
63 1 225 1 

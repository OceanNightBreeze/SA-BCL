#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3738 | == -> >
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
237 2 17 1 39 1 216 2 329 3 259 1 258 1 45 1 309 5 283 1 262 1 241 9 73 1 286 2 313 1 50 1 225 1 75 1 345 9 169 1 372 1 112 4 10 2 58 2 320 2 13 2 149 1 122 6 
237 2 17 1 39 1 216 2 329 3 259 1 258 1 45 1 309 5 283 1 262 1 241 9 73 1 286 2 313 1 50 1 225 1 75 1 345 9 169 1 372 1 112 4 10 2 58 2 320 2 13 2 149 1 122 6 
237 2 17 1 39 1 216 2 329 4 259 1 258 1 45 1 309 6 283 1 262 1 241 10 73 1 286 2 313 1 50 1 225 1 75 1 345 10 169 1 372 1 112 5 10 2 58 2 320 2 13 2 149 1 122 7 
237 2 17 1 39 1 216 2 329 2 259 1 258 1 45 1 309 4 283 1 262 1 241 7 73 1 286 2 50 1 225 1 75 1 345 7 169 1 372 1 112 3 10 1 58 2 320 2 13 2 149 1 122 4 
169 1 237 1 17 1 112 2 329 1 216 1 10 2 45 1 309 3 320 1 58 1 241 4 73 1 286 1 122 3 313 1 50 1 345 4 
169 1 370 1 216 1 258 1 309 1 45 1 58 1 320 1 104 1 13 1 262 1 241 2 286 1 356 1 50 1 345 2 
169 1 112 1 329 1 45 1 309 2 58 2 149 1 13 1 241 3 286 2 122 1 50 1 345 3 
237 1 17 1 39 1 329 3 216 1 45 1 309 5 241 9 73 1 286 2 313 1 50 1 204 1 345 9 169 1 372 1 112 4 10 2 12 1 58 2 320 1 13 1 149 1 122 7 
237 1 17 1 39 1 329 3 216 1 45 1 309 5 241 9 73 1 286 2 313 1 50 1 204 1 345 9 169 1 372 1 112 4 10 2 12 1 58 2 320 1 13 1 149 1 122 7 
371 1 4 1 333 1 
371 1 27 2 94 1 
272 2 284 2 35 1 37 2 154 2 264 2 167 2 311 1 
361 1 86 1 0 1 362 2 300 1 87 1 279 1 160 2 43 1 44 1 334 1 219 1 311 1 221 1 284 2 29 1 264 2 289 1 167 2 344 1 137 2 140 2 175 1 375 1 81 1 57 1 231 1 95 1 351 1 272 3 379 2 183 1 35 1 380 1 37 3 38 1 154 2 
125 1 272 1 348 1 284 1 368 1 37 1 154 1 264 1 167 1 311 1 
371 1 125 1 226 1 127 1 333 1 93 1 72 1 272 1 107 1 37 1 133 1 212 1 264 1 359 1 
371 1 125 1 226 1 127 2 333 1 93 2 72 1 272 1 284 1 37 1 133 1 154 1 264 1 167 1 359 1 
352 1 113 1 127 1 295 1 93 1 
371 1 352 1 315 1 165 1 113 1 127 2 333 1 93 2 
352 1 127 1 93 1 
125 1 301 1 348 1 113 1 127 1 93 1 311 1 272 1 284 1 368 1 37 1 154 1 264 1 167 1 
371 1 
371 1 352 1 315 1 113 1 194 1 127 2 333 1 93 2 
371 1 245 1 315 1 113 2 277 2 42 1 126 1 293 1 127 5 280 2 333 1 93 5 130 1 118 1 164 1 352 2 353 1 8 2 321 1 
4 1 35 1 
272 2 59 1 284 1 201 1 35 2 37 2 154 1 264 2 167 1 
357 1 166 1 85 1 
137 1 0 1 362 1 300 1 140 1 43 1 57 1 219 1 231 1 95 1 351 1 272 1 35 1 342 1 37 1 38 1 
0 1 137 1 300 1 362 1 157 1 140 1 11 1 43 1 57 1 219 1 231 1 95 1 351 1 272 2 284 1 357 1 37 2 38 1 154 1 264 1 
272 3 284 3 35 1 11 1 37 3 154 3 264 3 167 1 
125 1 272 1 284 1 368 1 37 1 154 1 264 1 
125 1 272 1 59 1 284 1 201 1 37 1 154 1 264 1 167 1 
0 1 125 1 300 1 362 1 157 1 87 1 279 1 160 1 127 1 43 1 44 1 334 1 219 1 311 1 72 1 221 1 284 3 201 1 133 1 29 1 264 3 289 1 344 1 167 2 137 1 226 1 140 1 11 1 143 1 81 1 57 1 93 1 231 1 95 1 351 1 272 4 379 2 35 1 380 1 37 4 38 1 154 3 98 1 359 1 
272 2 284 1 35 1 11 1 107 1 37 2 154 1 264 2 377 1 
371 1 125 1 226 1 157 1 11 2 127 1 55 1 93 1 72 1 272 3 284 3 201 1 133 1 37 3 154 3 264 3 98 1 167 1 359 1 
11 1 272 2 284 2 201 1 357 1 37 2 154 2 264 2 85 1 167 1 
137 1 0 1 362 1 300 1 140 1 43 1 57 1 219 1 231 1 351 1 95 1 272 1 35 1 37 1 38 1 
137 1 0 1 362 1 300 1 205 1 140 1 43 1 57 1 219 1 95 1 272 1 33 1 35 1 37 1 38 1 
361 2 111 1 325 1 139 1 193 1 87 1 41 1 279 1 144 1 160 4 81 1 44 1 334 2 148 1 117 1 221 1 379 2 60 1 357 2 166 2 29 1 288 1 85 2 256 1 
125 1 99 1 272 1 284 1 37 1 154 1 264 1 359 1 
157 1 11 2 308 1 377 1 272 5 284 4 201 1 35 1 107 1 37 5 154 4 264 5 224 1 167 1 
99 1 125 1 272 2 284 2 368 1 37 2 154 2 264 2 
52 1 63 1 
52 1 63 1 
19 1 121 1 
19 1 121 1 
19 1 121 1 
52 1 63 1 306 1 
52 1 63 1 306 1 
52 1 228 1 63 1 
52 2 6 1 19 1 63 2 317 1 121 1 
52 1 63 1 306 1 
282 1 52 1 63 1 
282 1 52 1 63 1 
282 1 52 1 63 1 
371 1 52 2 227 2 303 1 54 2 331 1 127 2 366 2 22 1 93 2 335 1 261 2 6 1 25 1 131 1 185 1 63 2 203 2 91 3 
363 1 192 1 330 1 331 1 127 1 366 1 261 1 284 2 91 1 264 2 52 1 227 1 228 1 54 1 114 1 93 1 272 2 248 1 35 1 63 1 322 1 37 2 154 2 215 1 
320 1 237 1 216 1 
320 1 370 1 216 1 
237 2 265 1 320 3 370 1 61 1 197 1 
237 1 320 2 370 1 302 1 61 1 197 1 
237 1 320 2 370 1 61 2 197 1 
257 1 325 1 363 1 193 1 277 1 330 1 127 5 280 1 333 1 102 2 220 1 164 3 8 1 27 3 263 1 371 2 245 1 206 2 92 1 315 1 113 4 316 1 292 1 114 1 293 2 146 1 93 5 94 1 117 1 352 1 62 2 256 1 
156 1 325 3 363 4 40 1 193 3 277 2 42 1 127 9 1 1 332 1 280 2 333 1 220 1 164 8 199 5 8 2 27 9 263 3 371 5 245 1 206 6 113 7 315 1 292 2 293 6 146 2 295 5 93 9 94 3 117 3 352 6 150 1 62 6 236 1 256 3 
325 1 363 1 193 1 277 1 42 1 127 3 280 1 333 1 102 1 164 3 8 1 27 4 263 1 371 3 206 2 113 2 316 1 92 1 292 1 293 2 146 1 93 3 94 2 117 1 62 2 256 1 
156 1 325 2 363 2 193 2 277 1 42 1 127 4 332 1 280 1 333 1 102 2 164 5 8 1 27 7 263 2 371 4 206 4 316 1 92 1 113 3 292 1 293 4 146 1 93 4 94 3 117 2 62 4 236 1 256 2 
95 1 4 1 326 1 
95 1 171 1 
355 1 
95 1 38 1 
95 3 326 2 209 1 115 1 38 1 219 1 
95 1 38 1 219 1 
95 1 184 1 
361 4 139 2 32 1 67 1 144 3 160 7 196 1 307 1 334 3 318 1 117 1 273 1 338 1 96 2 255 1 256 1 124 1 
361 4 139 2 32 1 67 1 144 3 160 7 196 1 307 1 334 3 318 1 117 1 273 1 338 1 96 2 255 1 256 1 124 1 
243 1 361 4 139 2 32 1 67 1 144 3 196 1 160 7 307 1 334 3 318 1 117 1 273 1 338 1 96 2 255 1 256 1 124 1 
361 16 325 3 193 3 67 2 279 1 20 1 364 1 196 1 160 31 307 1 88 1 44 1 334 15 23 1 221 1 338 5 29 1 263 3 110 1 138 1 139 5 32 2 144 10 318 1 117 4 378 3 273 1 379 2 253 1 96 3 255 2 124 2 65 4 256 4 
361 5 67 1 279 2 160 9 196 1 307 1 44 2 334 4 221 2 338 1 29 2 138 1 139 3 173 1 32 1 144 4 117 1 273 1 379 4 235 1 96 2 255 1 256 1 124 1 
237 1 0 1 362 1 276 1 300 1 216 1 309 1 45 1 101 1 241 2 200 1 286 1 312 1 242 1 9 1 50 1 345 2 137 1 169 1 370 1 265 1 172 1 140 1 179 1 58 1 320 2 13 1 210 1 298 1 122 1 
237 1 0 1 362 1 276 1 300 1 216 1 309 1 45 1 2 1 101 1 241 3 200 1 286 1 47 1 312 1 9 1 50 1 345 3 265 1 137 1 370 1 172 1 140 1 179 1 58 1 320 2 13 1 210 1 64 1 122 2 
0 1 237 1 362 1 276 1 300 1 216 1 309 1 45 1 2 1 241 2 200 1 47 1 312 1 9 1 50 1 345 2 137 1 370 1 265 1 172 1 140 1 320 2 13 1 210 1 122 2 
0 1 300 1 362 1 238 1 43 1 241 1 286 1 200 2 26 1 312 2 30 1 345 1 137 1 76 1 172 2 140 1 58 1 95 1 13 2 119 1 64 1 38 1 214 1 
237 1 0 1 362 1 276 1 300 1 216 1 101 1 241 1 200 1 286 1 47 1 312 1 242 1 9 1 345 1 137 1 169 1 370 1 265 1 172 1 140 1 179 1 58 1 320 2 13 1 210 1 
254 1 
0 1 125 1 277 1 127 5 128 4 43 2 280 1 333 1 198 1 8 1 340 2 132 1 133 1 135 1 137 2 245 1 140 2 53 1 292 1 293 2 247 1 294 2 93 5 94 2 95 1 352 6 212 1 360 2 359 1 362 2 300 1 365 2 72 1 164 2 24 1 27 2 26 1 223 2 107 1 264 1 30 1 371 2 168 1 226 1 315 3 373 1 82 2 232 1 376 1 83 1 272 1 274 1 187 2 37 1 38 1 
125 1 194 1 127 3 128 2 72 1 223 1 107 1 133 1 264 1 168 1 226 1 53 1 315 1 247 1 93 3 376 1 83 1 272 1 352 2 37 1 212 1 359 1 
125 1 194 1 127 3 128 3 333 1 72 1 107 1 133 1 264 1 168 1 371 1 226 1 53 1 315 1 247 1 294 1 93 3 376 1 83 1 272 1 352 1 37 1 212 1 359 1 
125 1 194 1 127 3 128 3 333 1 72 1 223 1 107 1 133 1 264 1 168 1 371 1 226 1 53 1 315 1 247 1 294 1 93 3 376 1 83 1 272 1 352 2 187 1 37 1 212 1 359 1 
125 1 328 1 277 1 194 1 128 6 127 5 280 1 333 5 8 1 340 2 133 1 245 1 53 1 293 1 247 1 294 4 93 5 350 1 94 2 352 7 14 1 212 1 359 1 360 2 365 2 305 1 72 1 103 1 24 1 164 1 223 4 107 1 264 1 168 1 371 5 226 1 315 3 82 2 232 1 376 1 83 1 272 1 187 4 37 1 
125 1 277 1 128 4 127 4 280 1 333 1 8 1 340 2 133 1 135 1 245 1 53 1 293 1 247 1 294 2 93 4 94 2 352 4 212 1 359 1 360 2 365 2 72 1 24 1 164 1 27 2 223 2 107 1 264 1 168 1 371 2 226 1 315 2 82 2 232 1 376 1 83 1 272 1 187 2 37 1 
125 1 277 1 365 2 127 4 128 4 305 1 280 1 333 1 72 1 103 1 164 1 24 1 8 1 223 2 340 2 107 1 133 1 264 1 371 1 168 1 226 1 245 1 53 1 315 2 293 1 247 1 82 2 294 2 93 4 232 1 94 2 376 1 83 1 272 1 352 4 14 1 187 2 37 1 212 1 360 2 359 1 
125 1 277 1 365 2 127 4 128 4 305 1 280 1 333 1 72 1 103 1 164 1 24 1 8 1 223 2 340 2 107 1 133 1 264 1 371 1 168 1 226 1 245 1 53 1 315 2 293 1 247 1 82 2 294 2 93 4 232 1 94 2 376 1 83 1 272 1 352 4 14 1 187 2 37 1 212 1 360 2 359 1 
125 1 277 1 365 2 127 4 128 4 21 1 280 1 333 1 72 1 103 1 337 2 164 1 8 1 27 2 223 2 107 1 133 1 264 1 371 1 168 1 346 1 226 1 245 1 53 1 315 2 229 2 246 1 293 1 247 1 294 2 93 4 232 1 376 1 83 1 272 1 352 4 187 2 37 1 212 1 360 2 359 1 
125 1 277 1 365 2 127 4 128 5 305 1 280 1 333 1 72 1 103 1 164 1 24 1 8 1 340 2 223 3 107 1 133 1 264 1 371 1 168 1 226 1 245 1 53 1 315 2 293 1 247 1 82 2 294 3 93 4 350 1 232 1 94 2 376 1 83 1 272 1 352 5 14 1 187 3 37 1 212 1 360 2 359 1 
125 1 277 1 365 2 127 4 128 5 305 1 280 1 333 1 72 1 103 1 164 1 24 1 8 1 340 2 223 3 107 1 133 1 264 1 371 1 168 1 226 1 245 1 53 1 315 2 293 1 247 1 82 2 294 3 93 4 350 1 232 1 94 2 376 1 83 1 272 1 352 5 14 1 187 3 37 1 212 1 360 2 359 1 
125 1 277 1 365 2 127 4 128 4 21 1 280 1 333 1 72 1 337 2 164 1 8 1 27 2 223 2 107 1 133 1 135 1 264 1 371 1 168 1 226 1 245 1 53 1 315 2 229 2 293 1 247 1 294 2 93 4 232 1 376 1 83 1 272 1 352 4 187 2 37 1 212 1 360 2 359 1 
361 3 87 1 279 1 196 1 160 6 307 1 44 1 334 3 4 1 221 1 166 1 29 1 139 2 32 1 144 2 81 1 148 1 117 1 273 1 379 2 357 1 35 2 96 1 85 1 124 1 256 1 
361 8 325 1 87 2 193 2 68 1 279 2 20 1 160 14 44 2 334 6 23 1 163 1 221 2 338 1 48 1 166 11 29 2 263 2 289 1 139 1 144 2 230 1 81 1 117 1 378 3 379 4 183 1 35 1 34 1 357 11 85 4 65 3 256 2 
0 1 361 1 300 1 362 1 157 1 87 1 279 1 160 2 43 1 44 1 219 1 334 1 69 1 221 1 284 1 342 1 29 1 264 1 289 1 137 1 347 1 140 1 11 1 57 1 81 1 231 1 95 1 351 1 272 2 379 2 211 1 183 1 35 1 34 1 37 2 38 1 154 1 85 1 
0 2 325 2 87 3 193 2 279 3 196 1 43 1 44 3 334 10 89 2 284 1 338 4 90 1 47 1 202 1 289 1 344 2 137 3 139 4 140 3 11 1 144 8 57 2 351 2 95 2 357 7 96 1 97 2 154 1 256 3 361 10 362 3 300 2 157 1 160 20 307 1 219 2 221 3 106 2 166 7 29 3 263 2 264 1 32 1 374 2 81 3 231 2 117 3 273 1 272 3 379 6 183 1 35 2 34 1 36 1 37 3 38 2 85 7 124 1 
0 2 361 1 86 2 300 2 362 7 327 1 18 1 87 2 278 1 279 2 160 2 43 2 239 1 44 2 334 1 221 2 284 1 26 1 47 1 369 1 29 2 264 1 30 1 289 1 137 8 78 1 140 8 11 1 81 2 148 1 95 3 272 1 379 4 183 1 15 1 298 1 37 1 154 1 38 2 
361 1 325 1 87 1 193 1 279 1 160 3 44 1 46 1 334 2 221 1 284 1 201 1 166 1 29 1 263 1 264 1 167 1 139 1 144 1 81 1 117 1 272 1 379 2 357 1 34 1 37 1 154 1 85 1 256 1 
361 2 111 1 87 1 193 1 279 1 144 1 160 2 81 1 44 1 148 1 221 1 379 2 338 1 357 1 166 1 29 1 85 1 256 1 
325 1 139 1 87 1 279 1 144 1 160 2 81 1 44 1 334 2 148 1 117 1 221 1 379 2 357 1 166 1 29 1 288 1 85 1 
361 2 325 1 193 1 87 1 279 1 160 4 44 1 334 2 221 1 338 1 166 2 263 1 29 1 139 1 144 2 81 1 148 1 117 1 379 2 357 2 85 2 256 1 
361 2 111 1 87 1 193 1 279 1 144 1 160 2 81 1 44 1 221 1 379 2 338 1 357 1 166 1 369 1 29 1 85 1 256 1 
325 1 139 1 87 1 279 1 144 1 160 2 81 1 44 1 334 2 117 1 221 1 379 2 357 1 166 1 369 1 29 1 288 1 85 1 
361 2 325 1 193 1 87 1 279 1 160 4 44 1 334 2 221 1 338 1 166 2 369 1 263 1 29 1 139 1 144 2 81 1 117 1 379 2 357 2 85 2 256 1 
361 2 325 1 193 1 87 1 279 1 160 4 44 1 334 2 221 1 338 1 166 2 263 1 29 1 139 1 144 2 81 1 117 1 379 2 357 2 85 2 256 1 
361 1 0 1 300 1 362 1 87 1 279 1 160 2 43 1 44 1 219 1 334 1 221 1 29 1 344 1 289 1 137 1 140 1 57 1 81 1 231 1 351 1 95 1 272 1 379 2 183 1 35 1 37 1 38 1 
361 1 0 1 300 1 362 1 87 1 279 1 160 2 43 1 44 1 219 1 334 1 221 1 29 1 289 1 137 1 205 1 140 1 267 1 57 1 81 1 95 1 272 1 33 1 379 2 183 1 35 1 37 1 38 1 
361 2 325 1 193 1 87 1 279 1 160 4 44 1 334 2 221 1 338 1 166 2 263 1 29 1 139 1 144 2 81 1 117 1 379 2 34 1 357 2 85 2 256 1 
361 2 0 1 300 1 362 1 325 1 193 1 87 1 279 1 160 4 44 1 334 2 219 1 221 1 338 1 166 2 29 1 263 1 344 1 137 1 139 1 140 1 144 2 57 1 81 1 231 1 117 1 351 1 95 1 272 1 379 2 357 2 97 1 298 1 37 1 38 1 85 2 256 1 
361 2 325 1 87 1 193 1 279 1 160 3 44 1 334 1 221 1 284 1 338 1 201 1 166 1 29 1 263 1 264 1 167 1 144 1 81 1 147 1 117 1 272 1 379 2 34 1 357 1 37 1 154 1 85 1 256 1 
361 6 325 2 193 2 195 1 279 2 20 1 160 13 218 1 44 2 334 7 23 1 221 2 338 2 49 1 287 1 29 2 263 2 31 1 139 2 290 1 144 4 269 1 117 2 378 1 379 4 234 1 235 1 189 1 65 2 256 2 
361 11 66 1 325 1 193 2 195 2 279 3 160 20 44 3 334 9 23 2 221 3 7 1 285 1 338 1 49 1 341 1 29 3 263 2 343 1 138 2 314 1 139 1 290 1 144 2 269 1 117 1 378 2 379 6 234 2 235 1 189 3 65 2 256 2 
361 4 325 1 193 1 195 1 279 2 20 1 160 9 44 2 334 5 23 1 221 2 338 1 49 1 287 1 29 2 263 1 139 1 290 1 144 2 269 1 117 1 378 1 379 4 234 1 235 1 189 1 65 2 256 1 
361 4 325 1 193 1 195 1 279 2 20 1 160 9 44 2 334 5 23 1 221 2 338 1 49 1 287 1 29 2 263 1 139 1 290 1 144 2 269 1 117 1 378 1 379 4 234 1 235 1 189 1 65 2 256 1 
361 24 66 1 325 6 193 6 68 2 195 1 279 2 20 2 196 1 160 46 307 1 44 2 334 22 23 2 221 2 7 1 285 1 338 6 49 1 341 1 29 2 263 6 343 1 138 1 314 1 139 6 32 1 290 1 144 12 269 1 117 7 378 4 273 1 379 4 234 1 235 1 96 1 189 3 124 1 65 4 256 7 
261 1 52 1 227 1 6 1 303 1 54 1 63 1 366 1 335 1 323 1 
228 1 322 1 
261 1 52 1 227 1 54 1 63 1 366 1 275 1 3 1 191 1 
371 1 52 1 227 1 303 1 54 1 331 1 127 1 366 1 93 1 335 1 261 1 6 1 25 1 131 1 185 1 63 1 203 1 91 2 
371 1 52 1 227 1 303 1 54 1 331 1 127 1 366 1 93 1 335 1 261 1 6 1 25 1 131 1 185 1 63 1 203 1 91 2 
371 1 52 1 227 1 303 1 54 1 331 1 127 1 366 1 93 1 335 1 261 1 6 1 25 1 131 1 185 1 63 1 203 1 91 2 
317 1 306 1 70 1 
317 1 306 1 70 1 
282 1 174 1 
282 1 174 1 317 1 
248 1 215 1 
363 1 192 1 330 1 127 1 366 1 261 1 25 1 284 2 203 1 91 1 264 2 52 1 227 1 228 1 113 1 54 1 114 1 93 1 272 2 248 1 35 1 63 1 322 1 37 2 154 2 213 1 215 1 
306 1 70 1 
282 1 174 1 317 1 
0 1 361 1 86 2 300 1 362 2 87 1 279 1 160 2 239 1 44 1 334 1 240 1 221 1 29 1 264 2 289 1 137 2 78 1 140 2 141 1 81 1 271 1 95 1 249 1 272 2 379 2 297 1 183 1 34 1 37 2 38 1 
237 1 265 1 370 1 0 1 137 2 300 1 362 2 140 2 158 1 216 1 101 1 320 2 210 1 200 1 84 1 47 1 298 1 358 1 9 1 
237 1 265 1 370 1 137 1 0 1 362 1 300 1 140 1 216 1 101 1 320 2 208 1 210 1 200 1 84 1 47 1 9 1 
0 1 137 1 300 1 362 1 140 1 304 1 43 1 95 1 200 1 26 1 119 1 358 1 38 1 30 1 
237 1 265 1 370 1 137 1 0 1 300 1 362 1 140 1 158 1 216 1 101 1 320 2 210 1 200 1 84 1 47 1 358 1 9 1 
162 1 
371 1 4 1 130 1 164 1 353 1 293 1 333 1 
371 2 245 1 315 1 277 1 127 1 293 1 82 1 280 1 333 1 93 1 94 1 352 1 24 1 164 1 8 1 27 1 340 1 
0 3 326 2 325 2 193 2 277 4 127 5 43 1 280 4 333 2 129 1 130 1 89 2 8 4 133 2 137 3 51 2 245 4 140 3 206 6 292 2 293 8 93 5 94 6 95 10 251 2 352 5 209 1 353 1 151 2 62 6 298 1 152 2 256 2 155 2 300 4 362 3 219 3 161 1 367 2 164 9 27 12 263 2 371 8 171 3 80 1 315 3 373 1 177 1 270 2 117 2 233 1 184 2 186 2 38 3 
66 1 325 2 193 2 277 2 127 1 280 2 333 2 71 1 23 1 367 2 164 8 7 1 8 2 27 6 341 1 263 2 343 1 371 5 314 1 77 1 245 2 206 5 315 1 373 1 292 1 293 5 93 1 94 3 117 2 378 1 352 1 62 5 186 1 65 1 256 2 
125 1 301 1 277 1 127 1 280 1 311 1 5 1 367 2 164 2 284 1 8 1 368 1 264 1 167 1 245 1 348 1 32 1 293 2 93 1 117 1 272 1 273 1 14 1 186 1 37 1 154 1 124 1 256 2 
371 1 245 1 277 1 293 1 280 1 333 1 130 1 164 1 353 1 8 1 
371 5 325 2 193 2 206 5 293 5 94 5 117 2 89 1 367 2 164 5 62 5 27 10 186 1 263 2 256 2 
371 1 352 1 315 1 127 1 333 1 93 1 
0 1 300 1 362 4 277 2 42 1 127 3 43 2 280 2 260 1 198 1 161 1 164 2 8 2 26 1 74 1 30 1 137 4 245 1 80 2 140 4 315 2 292 2 373 2 293 2 93 3 95 1 352 4 274 1 38 1 
0 1 362 1 300 1 87 1 279 1 160 1 43 1 44 1 334 1 219 1 311 1 221 1 284 2 29 1 264 2 289 1 167 2 344 1 137 1 140 1 57 1 81 1 231 1 351 1 95 1 272 3 379 2 35 1 380 1 37 3 154 2 38 1 
371 4 245 1 206 2 277 1 292 1 373 1 293 2 280 1 333 2 94 2 164 1 8 1 27 4 62 2 96 1 
54 1 153 1 366 1 
54 1 153 1 366 1 
303 1 54 1 366 1 123 1 215 1 
54 1 153 1 366 1 
181 1 54 1 366 1 
181 1 54 1 366 1 
181 1 54 1 366 1 
54 1 366 1 
52 1 63 1 
361 4 138 1 139 2 32 1 279 2 160 8 144 3 196 1 307 1 44 2 334 4 117 1 273 1 221 2 379 4 338 1 96 1 29 2 256 1 124 1 
117 1 361 3 4 1 273 1 139 2 32 1 96 1 160 6 144 2 196 1 307 1 334 3 256 1 124 1 
361 2 325 1 139 1 193 1 279 1 144 2 160 4 44 1 334 2 117 1 221 1 379 2 338 1 29 1 263 1 299 1 256 1 
361 3 325 1 139 1 193 1 20 1 160 7 144 2 334 4 117 1 23 1 378 1 338 1 263 1 65 2 256 1 
361 11 325 2 193 2 20 1 68 1 279 2 196 1 160 23 307 1 44 2 334 12 310 1 163 1 221 2 338 4 263 2 29 2 138 2 139 5 32 2 144 9 117 3 378 2 273 1 379 4 96 1 124 2 256 3 65 2 
160 1 334 1 65 1 
361 1 378 1 160 1 
361 3 325 1 139 2 193 1 279 1 160 6 144 3 44 1 334 3 117 1 89 1 379 2 221 1 338 1 29 1 263 1 299 1 256 1 
361 6 325 2 66 1 193 2 279 1 160 12 44 1 334 6 23 1 221 1 7 1 338 1 341 1 29 1 263 2 343 1 314 1 139 1 144 2 117 2 378 1 379 2 235 1 65 1 256 2 
361 3 139 1 32 1 160 6 144 2 334 3 117 1 273 1 338 1 256 1 124 1 
361 1 138 1 139 1 32 1 279 1 144 2 196 1 160 3 307 1 44 1 334 2 310 1 221 1 379 2 338 1 29 1 124 1 
361 5 139 3 32 2 279 1 144 5 160 10 44 1 334 5 117 2 5 1 273 1 379 2 221 1 235 1 338 2 29 1 124 2 256 2 
361 2 193 1 279 1 160 2 144 1 44 1 221 1 379 2 235 1 338 1 29 1 256 1 
361 2 325 1 139 1 193 1 279 1 144 2 160 4 44 1 334 2 117 1 221 1 379 2 235 1 338 1 29 1 263 1 256 1 
138 1 361 1 139 1 32 1 279 3 160 3 144 2 44 3 334 2 310 1 221 3 379 6 235 1 338 1 287 1 29 3 124 1 
361 16 325 3 193 3 279 5 20 1 196 1 160 34 307 1 88 1 44 5 334 18 310 1 23 1 221 5 338 5 287 1 29 5 263 3 138 2 110 1 139 7 32 3 144 12 117 5 378 3 273 2 379 10 235 1 253 1 96 1 124 3 65 4 299 1 256 5 
361 4 279 1 160 8 196 1 307 1 44 1 334 4 23 1 221 1 29 1 314 1 139 2 32 1 144 2 117 1 378 1 273 1 379 2 235 1 96 1 256 1 65 1 124 1 
361 6 193 1 279 2 20 1 196 1 160 11 307 1 44 2 334 5 23 1 221 2 338 1 29 2 263 1 314 1 139 2 32 1 144 3 117 1 378 1 273 1 379 4 235 1 96 1 124 1 65 2 299 1 256 2 
361 9 66 1 325 2 193 2 279 3 196 1 160 19 307 1 44 3 334 10 23 1 221 3 7 1 338 1 341 1 29 3 263 2 343 1 138 1 314 1 139 3 32 1 144 4 117 3 378 1 273 1 379 6 235 1 96 1 124 1 299 1 65 1 256 3 
361 10 325 1 66 1 193 2 279 3 196 1 160 17 307 1 44 3 334 7 23 1 221 3 7 1 338 2 341 1 29 3 263 2 343 1 138 1 314 1 139 3 32 1 144 5 117 2 378 1 273 1 379 6 235 1 96 1 124 1 299 1 65 1 256 3 
361 4 279 1 160 8 196 1 307 1 44 1 334 4 23 1 221 1 29 1 314 1 139 2 32 1 144 2 117 1 378 1 273 1 379 2 235 1 96 1 256 1 65 1 124 1 
361 6 325 2 66 1 193 2 279 1 160 12 44 1 334 6 23 1 221 1 7 1 338 1 341 1 29 1 263 2 343 1 314 1 139 1 144 2 117 2 378 1 379 2 235 1 65 1 256 2 
361 10 66 1 325 1 193 2 279 4 196 1 160 18 307 1 44 4 334 8 23 1 221 4 7 1 338 2 341 1 29 4 263 2 343 1 138 2 314 1 139 3 32 1 144 5 117 2 378 1 273 1 379 8 235 1 96 1 124 1 65 1 299 1 256 3 
361 9 66 1 325 2 193 3 279 4 160 16 44 4 334 7 23 1 221 4 7 1 338 3 341 1 287 1 29 4 263 3 343 1 138 2 314 1 139 3 144 6 117 2 378 1 379 8 235 1 65 1 256 3 
361 3 139 3 32 3 160 7 196 2 144 6 307 1 334 4 117 1 273 1 338 3 124 3 256 1 
361 10 66 1 325 1 193 2 279 4 196 1 160 18 307 1 44 4 334 8 23 1 221 4 7 1 338 1 341 1 287 1 29 4 263 2 343 1 138 2 314 1 139 3 32 1 144 4 117 2 378 1 273 1 379 8 235 1 96 1 124 1 65 1 256 3 
272 1 35 1 107 1 37 1 264 1 377 1 319 1 
79 1 176 1 268 1 145 1 319 1 377 1 272 1 354 1 35 1 107 1 37 1 264 1 
0 1 95 1 4 1 137 1 300 1 362 1 140 1 26 1 43 1 38 1 30 1 
137 1 0 1 300 1 362 1 140 1 11 1 43 1 57 1 219 1 95 1 351 1 272 2 284 1 35 1 37 2 38 1 154 1 264 1 
0 1 125 1 362 1 300 1 219 2 284 1 264 2 137 1 226 1 140 1 80 1 11 1 57 1 270 1 351 1 95 3 272 2 35 1 184 1 37 2 154 2 38 2 359 1 
0 1 125 1 362 2 300 1 219 2 284 1 264 2 137 2 226 1 205 1 140 2 80 1 11 1 57 1 270 1 95 3 272 2 182 1 35 1 184 1 37 2 154 2 38 2 359 1 
371 1 137 3 0 1 300 1 362 3 171 1 326 1 80 1 140 3 142 1 127 2 43 1 270 1 333 1 219 1 93 2 95 4 352 1 182 1 184 1 16 1 133 1 38 1 
371 1 137 3 0 1 300 1 362 3 171 1 326 1 80 1 140 3 127 2 43 1 270 1 333 1 219 1 93 2 95 4 251 1 352 1 182 1 184 1 133 1 38 1 
0 1 137 1 300 1 362 1 327 1 140 1 
86 1 137 7 0 2 362 6 300 3 78 1 327 1 18 1 140 7 278 1 217 1 43 2 219 1 95 3 180 1 252 1 209 1 47 1 15 1 298 1 38 2 
361 3 0 1 300 1 362 1 87 2 279 2 160 6 196 1 307 1 44 2 334 3 219 1 221 2 284 1 166 1 29 2 264 1 344 1 137 1 139 2 140 1 32 1 11 1 374 1 144 2 57 1 81 2 231 1 117 1 95 1 351 1 273 1 249 1 272 2 379 4 357 1 35 2 34 1 96 1 298 1 97 1 37 2 38 1 154 1 85 1 256 1 124 1 
362 1 155 1 326 1 277 2 127 3 43 1 280 2 333 1 130 1 161 1 164 1 8 2 133 1 371 1 137 1 51 1 171 1 245 2 140 1 113 1 315 1 293 1 93 3 95 2 251 1 352 2 353 1 152 1 
137 2 0 1 362 2 300 2 326 1 327 1 140 2 219 1 95 2 233 1 209 1 298 1 38 1 
137 4 0 1 300 1 362 4 140 4 43 1 95 1 222 1 182 1 26 1 298 1 38 1 30 1 
137 2 0 1 362 2 300 2 80 1 140 2 217 1 219 1 296 1 95 1 252 1 90 1 38 1 190 1 
320 1 370 1 0 1 137 1 300 1 362 1 140 1 216 1 210 1 43 1 
0 1 95 1 137 2 300 1 362 2 78 1 140 2 141 1 47 1 298 1 38 1 
137 5 0 2 362 4 300 2 78 1 80 1 140 5 278 1 43 1 95 3 222 1 26 1 15 1 298 1 38 2 30 1 
137 5 0 2 362 4 300 2 78 1 80 1 140 5 43 1 95 3 222 1 26 1 339 1 15 1 298 1 38 2 30 1 
137 1 0 1 300 1 362 1 205 1 140 1 11 1 43 1 57 1 219 1 95 1 272 2 284 1 35 1 37 2 38 1 154 1 264 1 
137 1 0 1 362 1 300 2 80 1 140 1 217 1 219 1 95 1 180 1 252 1 209 1 38 1 
349 1 271 1 240 1 207 1 272 1 297 1 37 1 108 1 264 1 
105 1 244 1 349 1 
207 1 349 1 35 1 100 1 108 1 
371 1 125 1 226 1 244 1 349 1 113 1 127 2 100 2 333 1 93 2 336 1 72 1 207 2 105 1 35 1 133 1 108 2 98 1 359 1 
4 1 309 1 45 1 50 1 
58 1 241 1 286 1 309 1 45 1 50 1 345 1 
13 1 172 1 345 1 
169 1 109 1 258 2 309 1 45 1 58 1 281 1 241 3 286 1 28 1 50 1 345 3 
58 1 241 2 10 1 286 1 122 1 309 1 45 1 50 1 345 2 
169 1 237 1 17 1 112 1 216 1 309 1 58 1 320 1 241 1 286 1 345 1 
58 1 169 1 241 1 286 1 309 1 45 1 345 1 
58 1 169 1 241 1 286 1 45 2 50 1 345 1 
169 1 159 1 309 1 45 1 116 1 58 2 241 2 286 2 136 1 345 2 
169 1 372 1 39 1 112 1 329 1 45 1 309 2 58 1 241 3 286 1 122 2 50 1 345 3 
370 1 169 1 265 1 237 1 170 1 216 1 309 1 45 1 320 2 58 1 241 2 286 1 122 1 50 1 345 2 
169 1 112 1 329 1 10 1 45 1 309 2 58 2 241 4 286 2 122 2 313 1 50 1 345 4 
58 1 169 1 241 1 286 1 309 1 45 1 50 1 345 1 
109 1 112 1 329 1 258 1 45 2 309 3 178 1 58 1 281 1 241 4 286 1 122 2 50 2 345 4 
169 1 56 1 12 1 309 1 45 1 58 1 250 1 241 2 286 1 122 1 50 1 345 2 
169 1 109 2 258 2 309 1 45 1 58 1 281 1 241 3 286 1 134 1 50 1 345 3 
291 2 120 1 188 1 309 2 
58 1 169 1 324 1 241 1 286 1 345 1 
58 1 169 1 39 1 241 2 286 1 122 1 309 1 45 1 50 1 345 2 
266 1 
58 1 169 1 241 1 286 1 309 1 45 1 50 1 345 1 
58 1 169 1 39 1 241 3 286 1 258 1 122 1 309 1 45 1 50 1 345 3 
112 1 329 1 309 1 178 1 
309 1 45 1 

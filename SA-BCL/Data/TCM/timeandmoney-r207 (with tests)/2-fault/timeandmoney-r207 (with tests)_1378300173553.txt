#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | ASSIGN | 1327 | = null
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
132 1 222 2 147 3 212 1 213 3 377 1 290 2 242 1 46 1 130 1 110 2 116 1 219 1 
112 1 61 1 222 5 147 9 303 1 306 1 26 2 203 1 46 1 130 3 180 1 116 6 132 2 312 1 133 2 102 1 53 2 212 4 261 1 213 9 377 1 290 2 242 1 350 2 244 1 110 2 320 1 219 1 
112 1 61 1 222 5 147 9 303 1 306 1 26 2 203 1 46 1 130 3 180 1 116 6 132 2 312 1 133 2 102 1 53 2 212 4 261 1 213 9 377 1 290 2 242 1 350 2 244 1 110 2 320 1 219 1 
112 1 61 1 222 6 147 10 303 1 306 1 26 2 203 1 46 1 130 4 180 1 116 7 132 2 312 1 133 2 102 1 53 2 212 5 261 1 213 10 377 1 290 2 242 1 350 2 244 1 110 2 320 1 219 1 
112 1 61 1 222 4 147 7 303 1 306 1 26 2 203 1 46 1 130 2 180 1 116 4 132 2 312 1 133 2 102 1 53 2 212 3 261 1 213 7 377 1 290 2 242 1 350 1 110 2 320 1 219 1 
112 1 222 3 133 1 102 1 53 1 147 4 212 2 213 4 377 1 26 1 290 1 242 1 350 2 244 1 46 1 130 1 110 1 116 3 
132 1 222 1 235 1 373 1 53 1 147 2 213 2 377 1 306 1 26 1 290 1 242 1 153 1 46 1 110 1 320 1 
112 1 222 5 147 9 26 1 203 1 46 1 130 3 180 1 116 7 132 1 133 1 102 1 53 1 239 1 212 4 213 9 377 1 290 2 242 1 350 2 244 1 110 2 82 1 219 1 
112 1 222 5 147 9 26 1 203 1 46 1 130 3 180 1 116 7 132 1 133 1 102 1 53 1 239 1 212 4 213 9 377 1 290 2 242 1 350 2 244 1 110 2 82 1 219 1 
285 1 286 1 127 1 90 1 347 1 14 1 121 1 68 1 28 1 40 1 294 1 271 1 191 1 209 1 
58 1 
286 2 340 1 58 1 276 1 69 1 294 1 191 2 228 1 
372 2 337 1 286 5 339 1 340 1 276 2 264 2 331 1 308 1 266 1 141 1 58 1 333 1 69 1 294 2 205 2 111 1 191 5 220 1 
216 1 58 1 69 1 
211 1 58 1 35 2 
285 2 62 1 121 1 28 2 127 2 271 2 14 2 209 2 
170 1 298 2 62 1 173 1 127 2 197 1 226 1 128 1 114 2 25 2 27 1 4 1 229 2 28 3 8 1 367 1 335 1 117 1 208 1 184 1 209 2 285 2 233 1 234 1 135 1 186 1 137 1 73 1 375 1 376 2 14 2 121 1 36 1 245 1 271 3 86 1 272 1 
285 1 121 1 68 1 28 1 127 1 90 1 40 1 271 1 14 1 209 1 
285 1 286 1 313 1 90 1 58 1 28 1 309 1 69 1 47 1 206 1 271 1 191 1 246 1 11 1 
285 1 286 2 127 1 90 1 14 1 58 1 28 1 309 1 69 1 47 1 271 1 191 2 246 1 209 1 11 1 
286 1 276 1 294 1 199 1 191 1 
286 2 340 1 58 1 276 1 69 1 9 1 294 1 191 2 
286 1 276 1 191 1 
285 1 173 1 186 1 135 1 73 1 128 1 114 1 25 1 14 1 229 1 352 1 28 2 293 1 335 1 271 2 117 1 208 1 357 1 184 1 209 1 
258 1 285 2 62 2 127 1 362 1 14 1 28 2 271 2 209 1 
185 1 352 1 326 1 
62 1 173 1 135 1 186 1 73 1 128 1 114 1 25 1 119 1 229 1 28 1 271 1 335 1 117 1 208 1 184 1 
62 1 216 1 
285 3 62 1 127 1 28 3 293 1 271 3 14 3 209 3 
285 1 28 1 90 1 40 1 271 1 14 1 209 1 
258 1 285 1 28 1 127 1 90 1 362 1 271 1 14 1 209 1 
170 1 298 2 62 1 173 1 127 2 197 1 128 1 90 1 114 1 362 1 25 1 27 1 4 1 229 1 28 4 309 1 47 1 335 1 117 1 208 1 184 1 209 3 11 1 285 3 286 1 186 1 135 1 137 1 73 1 375 1 376 1 15 1 14 3 121 1 36 1 39 1 293 1 245 1 271 4 86 1 272 1 357 1 191 1 246 1 
285 2 62 1 28 2 313 1 293 1 271 2 295 1 14 1 209 1 
285 3 286 1 127 1 90 1 362 1 14 3 243 1 58 1 28 3 309 1 47 1 293 2 39 1 271 3 191 1 357 1 246 1 209 3 11 1 
285 2 127 1 326 1 362 1 14 2 352 1 28 2 293 1 271 2 209 2 
62 1 135 1 186 1 173 1 73 1 128 1 114 1 25 1 229 1 28 1 271 1 335 1 117 1 208 1 184 1 
62 1 275 1 186 1 173 1 128 1 114 1 25 1 66 1 229 1 28 1 271 1 335 1 117 1 208 1 184 1 
298 2 197 1 226 2 326 2 91 1 150 1 4 1 156 1 369 1 185 2 338 1 236 1 137 1 376 4 346 1 317 1 36 2 352 2 189 1 245 1 321 1 86 1 272 1 297 1 
285 1 28 1 309 1 225 1 90 1 271 1 14 1 209 1 
285 5 161 1 62 1 127 1 313 1 362 1 14 4 28 5 123 1 293 2 271 5 295 1 357 1 209 4 
285 2 28 2 225 1 90 1 40 1 271 2 14 2 209 2 
260 1 252 1 257 1 
260 2 252 2 368 1 256 1 328 1 215 1 
260 1 252 1 
260 1 252 1 
256 1 215 1 
256 1 215 1 
256 1 215 1 
113 1 260 1 252 1 
113 1 260 1 252 1 
113 1 260 1 252 1 
260 1 252 1 284 1 
260 1 252 1 284 1 
260 1 252 1 284 1 
311 1 286 2 145 1 249 2 260 2 251 2 252 2 63 2 44 2 188 1 316 2 378 1 202 1 58 1 29 3 368 1 282 1 191 2 336 1 
62 1 196 1 249 1 251 1 44 1 63 1 252 1 254 1 154 1 29 1 28 2 257 1 209 2 336 1 285 2 286 1 260 1 314 1 14 2 78 1 80 1 271 2 191 1 192 1 
323 2 133 1 280 1 235 1 53 2 
133 1 53 1 26 1 
235 1 53 1 26 1 
318 1 323 1 133 2 280 1 235 1 53 3 
323 1 133 1 280 1 235 1 238 1 53 2 
247 1 126 1 276 1 254 1 69 1 205 1 181 1 371 1 372 1 51 1 338 1 286 5 339 3 211 1 340 1 103 1 138 2 314 1 348 1 35 3 317 1 264 1 80 1 353 2 141 1 58 2 294 4 124 2 321 1 111 2 191 5 297 1 
126 3 276 6 361 5 199 5 307 1 254 4 204 1 69 1 205 2 181 2 182 1 51 1 372 2 337 1 338 3 286 9 339 8 211 3 340 1 103 2 138 6 35 9 317 3 264 2 107 1 18 1 353 6 141 1 291 1 58 5 294 7 321 3 111 6 191 9 297 3 
247 1 126 1 254 1 69 1 205 1 181 1 372 1 337 1 338 1 286 3 339 3 211 2 103 1 138 2 348 1 35 4 317 1 264 1 353 2 58 3 294 2 124 1 321 1 191 3 111 2 297 1 
247 1 126 2 254 2 204 1 69 1 205 1 181 1 372 1 337 1 338 2 286 4 339 5 211 3 103 1 138 4 348 1 35 7 317 2 264 1 18 1 353 4 58 4 291 1 124 2 294 3 321 2 191 4 111 4 297 2 
7 1 
223 1 216 1 173 1 
173 1 115 1 
173 1 184 1 
223 2 173 3 2 1 55 1 335 1 184 1 
173 1 335 1 184 1 
173 1 240 1 
338 1 224 1 64 1 226 4 277 1 129 1 278 2 376 7 162 1 150 3 91 2 36 3 67 1 17 1 96 1 381 1 125 1 321 1 
171 4 298 2 224 2 126 3 226 16 64 5 129 1 277 2 278 3 150 10 91 5 4 1 67 1 96 2 48 1 310 1 259 1 338 4 137 1 74 1 13 3 376 31 162 1 349 1 317 3 36 15 379 1 380 1 17 2 381 1 245 1 321 4 86 1 297 3 
298 4 338 1 224 1 32 1 137 2 64 1 226 5 277 1 129 1 278 2 376 9 150 4 91 3 4 2 67 1 36 4 380 1 366 1 17 1 381 1 96 1 245 2 321 1 86 2 
338 1 224 1 64 1 226 4 277 1 278 2 376 7 129 1 162 1 150 3 91 2 36 3 67 1 17 1 96 1 381 1 321 1 
338 1 224 1 64 1 226 4 277 1 278 2 376 7 129 1 162 1 150 3 91 2 36 3 67 1 17 1 96 1 381 1 321 1 
22 1 132 2 186 1 173 1 12 1 147 1 114 1 54 1 25 1 213 1 3 2 290 1 108 1 229 1 179 1 110 1 190 2 20 1 117 1 208 1 184 1 142 1 72 2 
132 1 133 1 235 1 0 1 186 1 53 2 147 1 114 1 25 1 213 1 3 1 26 1 290 1 318 1 94 1 242 1 152 1 229 1 165 1 166 1 110 1 190 1 10 1 355 1 208 1 72 1 
222 1 0 1 147 2 114 1 25 1 3 1 26 1 94 1 229 1 152 1 46 1 10 1 116 1 208 1 72 1 132 1 133 1 235 1 186 1 53 2 213 2 377 1 290 1 242 1 318 1 122 1 165 1 110 1 166 1 190 1 
222 1 0 1 360 1 147 3 114 1 25 1 3 1 26 1 229 1 152 1 46 1 10 1 116 2 208 1 72 1 132 1 133 1 235 1 12 1 186 1 53 2 213 3 377 1 290 1 318 1 165 1 110 1 166 1 190 1 355 1 
222 1 0 1 360 1 147 2 114 1 25 1 3 1 26 1 229 1 46 1 116 2 208 1 72 1 132 1 133 1 235 1 186 1 53 2 213 2 377 1 318 1 165 1 166 1 190 1 355 1 
183 1 
324 1 173 1 276 6 90 1 229 2 179 1 47 1 181 1 100 1 184 1 11 1 285 1 286 5 339 2 340 3 186 1 136 1 139 1 57 4 106 1 141 1 58 2 356 1 111 2 191 5 246 1 142 1 23 1 358 1 114 2 25 2 253 2 30 2 28 1 309 1 69 1 155 1 205 1 206 1 117 2 208 1 372 1 210 1 211 2 33 1 118 2 313 1 315 2 35 2 264 1 120 2 319 2 41 2 271 1 221 1 
23 1 276 2 90 1 228 1 28 1 30 1 309 1 47 1 206 1 11 1 285 1 210 1 286 3 340 1 33 1 313 1 139 1 57 2 271 1 191 3 221 1 246 1 
23 1 276 1 90 1 228 1 28 1 309 1 47 1 69 1 206 1 11 1 285 1 210 1 286 3 340 1 33 1 313 1 139 1 57 3 58 1 319 1 271 1 191 3 221 1 246 1 
23 1 276 2 90 1 228 1 28 1 30 1 309 1 47 1 69 1 206 1 11 1 285 1 210 1 286 3 340 1 33 1 313 1 139 1 57 3 120 1 58 1 319 1 271 1 191 3 221 1 246 1 
325 1 276 7 90 1 228 1 47 1 11 1 285 1 286 5 339 1 340 3 139 1 57 6 241 1 141 1 58 5 191 5 111 1 356 1 246 1 23 1 248 1 358 1 253 2 30 4 28 1 309 1 69 5 205 1 206 1 372 1 210 1 211 2 33 1 374 1 118 2 313 1 315 2 264 1 120 4 319 4 83 1 41 2 271 1 221 1 
23 1 358 1 276 4 90 1 253 2 30 2 28 1 309 1 69 1 47 1 205 1 206 1 100 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 211 2 33 1 118 2 313 1 315 2 139 1 57 4 35 2 264 1 120 2 141 1 58 2 319 2 41 2 271 1 356 1 111 1 191 4 221 1 246 1 
248 1 23 1 325 1 358 1 276 4 90 1 253 2 30 2 28 1 309 1 69 1 47 1 205 1 206 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 211 2 33 1 118 2 313 1 315 2 139 1 57 4 264 1 120 2 141 1 58 1 319 2 41 2 83 1 271 1 356 1 111 1 191 4 221 1 246 1 
248 1 23 1 325 1 358 1 276 4 90 1 253 2 30 2 28 1 309 1 69 1 47 1 205 1 206 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 211 2 33 1 118 2 313 1 315 2 139 1 57 4 264 1 120 2 141 1 58 1 319 2 41 2 83 1 271 1 356 1 111 1 191 4 221 1 246 1 
87 1 248 1 23 1 359 2 276 4 90 1 253 2 30 2 28 1 309 1 69 1 47 1 205 1 206 1 11 1 50 1 372 1 285 1 210 1 286 4 339 1 340 2 33 1 237 1 118 2 313 1 139 1 57 4 35 2 264 1 120 2 351 2 141 1 58 1 319 2 271 1 356 1 111 1 191 4 221 1 246 1 
248 1 23 1 325 1 358 1 276 5 90 1 253 2 28 1 30 3 309 1 69 1 47 1 205 1 206 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 211 2 33 1 374 1 118 2 313 1 315 2 139 1 57 5 264 1 120 3 141 1 58 1 319 3 41 2 83 1 271 1 356 1 111 1 191 4 221 1 246 1 
248 1 23 1 325 1 358 1 276 5 90 1 253 2 28 1 30 3 309 1 69 1 47 1 205 1 206 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 211 2 33 1 374 1 118 2 313 1 315 2 139 1 57 5 264 1 120 3 141 1 58 1 319 3 41 2 83 1 271 1 356 1 111 1 191 4 221 1 246 1 
87 1 23 1 359 2 276 4 90 1 253 2 30 2 28 1 309 1 69 1 47 1 205 1 206 1 100 1 11 1 372 1 285 1 210 1 286 4 339 1 340 2 33 1 118 2 313 1 139 1 57 4 35 2 264 1 120 2 351 2 141 1 58 1 319 2 271 1 356 1 111 1 191 4 221 1 246 1 
170 1 298 4 173 3 24 1 197 2 226 1 114 7 25 8 279 1 148 1 149 1 229 8 4 2 28 1 179 1 8 1 367 2 369 1 117 2 283 1 208 2 209 1 184 2 101 1 285 1 186 2 137 2 376 2 288 1 14 1 122 1 36 1 293 1 355 1 245 2 271 1 86 2 272 2 142 1 
298 2 126 1 127 1 197 1 226 1 326 1 362 1 175 1 150 1 91 1 177 1 4 1 28 1 209 1 185 1 285 1 338 1 137 1 376 3 14 1 317 1 352 1 36 2 245 1 271 1 321 1 86 1 272 1 297 1 
298 2 62 2 224 1 197 1 226 3 129 1 277 1 278 1 326 1 91 2 150 2 4 1 67 1 369 1 185 1 338 1 137 1 376 6 352 1 36 3 216 1 381 1 245 1 321 1 86 1 272 1 
170 1 171 3 298 4 62 1 88 1 126 2 197 2 64 1 226 8 326 4 363 1 305 1 150 2 91 1 177 1 4 2 8 1 310 1 185 11 338 1 137 2 74 1 376 14 13 3 317 1 36 6 352 11 245 2 321 2 86 2 272 1 297 2 194 1 
170 1 298 2 62 1 173 1 89 1 197 1 128 1 198 1 226 1 114 1 326 1 25 1 177 1 229 1 4 1 28 2 8 1 335 1 117 1 208 1 184 1 209 1 285 1 186 1 135 1 73 1 137 1 376 2 119 1 14 1 36 1 218 1 293 1 245 1 271 2 272 1 357 1 86 1 
170 1 224 1 126 2 173 2 128 2 226 10 278 1 277 1 129 1 326 7 91 4 177 1 229 3 4 3 8 1 335 2 184 2 285 1 185 7 338 3 52 1 135 2 186 2 137 3 56 2 14 1 109 2 352 7 293 1 355 1 245 3 357 1 21 2 297 2 298 6 62 2 197 3 64 4 114 3 25 3 200 1 150 8 27 2 67 1 28 3 117 1 208 2 209 1 73 2 376 20 317 2 214 1 36 10 381 1 271 3 321 3 86 3 272 3 169 2 
185 1 298 2 236 1 197 1 137 1 64 1 226 2 376 2 326 1 150 1 4 1 352 1 369 1 245 1 321 1 272 1 86 1 297 1 
185 1 298 2 338 1 197 1 137 1 376 2 326 1 150 1 91 1 317 1 4 1 352 1 36 2 189 1 369 1 245 1 272 1 86 1 
298 2 126 1 197 1 226 2 64 1 326 2 150 2 91 1 4 1 369 1 185 2 338 1 137 1 376 4 317 1 352 2 36 2 245 1 321 1 86 1 272 1 297 1 
185 1 298 2 236 1 197 1 137 1 64 1 226 2 376 2 326 1 288 1 150 1 4 1 352 1 245 1 321 1 272 1 86 1 297 1 
185 1 298 2 338 1 197 1 137 1 376 2 326 1 288 1 150 1 91 1 317 1 4 1 352 1 36 2 189 1 245 1 272 1 86 1 
298 2 126 1 197 1 226 2 64 1 326 2 150 2 91 1 4 1 185 2 338 1 137 1 376 4 288 1 317 1 352 2 36 2 245 1 321 1 86 1 272 1 297 1 
298 2 126 1 197 1 226 2 64 1 326 2 150 2 91 1 4 1 185 2 338 1 137 1 376 4 317 1 352 2 36 2 245 1 321 1 86 1 272 1 297 1 
170 1 298 2 62 1 173 1 197 1 226 1 128 1 114 1 25 1 27 1 229 1 4 1 28 1 8 1 335 1 117 1 208 1 184 1 186 1 135 1 73 1 137 1 376 2 36 1 245 1 271 1 272 1 86 1 
170 1 298 2 62 1 300 1 197 1 137 1 90 1 376 1 114 1 25 1 229 1 4 1 36 1 245 1 117 1 230 1 272 1 86 1 
298 2 126 1 197 1 226 2 64 1 326 2 150 2 91 1 177 1 4 1 185 2 338 1 137 1 376 4 317 1 352 2 36 2 245 1 321 1 86 1 272 1 297 1 
298 2 126 1 173 1 197 1 64 1 226 2 128 1 114 1 326 2 25 1 91 1 150 2 27 1 229 1 4 1 28 1 335 1 208 1 184 1 185 2 338 1 186 1 135 1 73 1 137 1 376 4 317 1 36 2 352 2 122 1 245 1 271 1 321 1 272 1 86 1 297 1 169 1 
298 2 144 1 126 1 127 1 197 1 64 1 226 2 362 1 326 1 150 1 177 1 4 1 28 1 209 1 285 1 185 1 338 1 137 1 376 3 14 1 317 1 36 1 352 1 245 1 271 1 321 1 86 1 272 1 297 1 
143 1 171 2 298 4 195 1 126 3 226 9 64 3 364 2 91 3 150 6 93 2 4 2 366 1 310 1 338 3 137 2 74 1 376 19 13 1 317 3 267 1 36 10 38 1 292 1 245 2 321 3 322 1 86 2 42 1 297 3 
171 2 298 6 195 1 126 3 64 2 226 14 150 4 91 2 364 4 330 1 93 1 4 3 178 1 366 1 281 1 370 1 310 2 71 1 338 2 137 3 376 26 13 2 317 2 36 12 267 1 380 2 38 2 245 3 84 1 321 3 322 2 86 3 42 1 297 3 
143 1 171 4 298 6 195 1 224 1 126 4 226 20 64 4 278 1 277 1 129 1 65 1 364 4 91 4 150 8 330 1 93 1 4 3 67 1 178 1 366 1 281 1 370 1 310 3 71 1 338 5 137 3 74 1 376 41 13 3 317 4 267 1 36 21 380 1 38 2 381 1 245 3 84 1 321 5 322 1 86 3 42 1 297 4 
143 1 171 4 298 8 195 1 224 1 126 4 226 20 64 3 278 1 277 1 129 1 65 1 364 4 91 4 150 7 330 1 93 1 4 4 67 1 178 1 366 1 281 1 370 1 310 3 71 1 338 4 137 4 74 1 376 38 13 3 317 3 267 1 36 18 380 2 38 2 381 1 245 4 84 1 321 5 322 1 86 4 42 1 297 4 
171 4 298 4 195 1 224 1 126 7 226 27 64 7 278 1 277 1 129 1 364 4 91 7 150 14 330 1 93 1 4 2 67 1 178 1 366 1 281 1 370 1 310 2 71 1 338 8 137 2 74 2 376 52 13 4 317 7 267 1 36 25 380 1 38 1 381 1 245 2 84 1 321 8 322 1 86 2 42 1 297 7 194 2 
311 1 249 1 260 1 251 1 44 1 63 1 252 1 368 1 158 1 188 1 
78 1 257 1 
299 1 172 1 249 1 260 1 251 1 44 1 63 1 252 1 59 1 
311 1 286 1 145 1 249 1 260 1 251 1 252 1 63 1 44 1 188 1 316 1 202 1 58 1 29 2 368 1 282 1 191 1 336 1 
311 1 286 1 145 1 249 1 260 1 251 1 252 1 63 1 44 1 188 1 316 1 202 1 58 1 29 2 368 1 282 1 191 1 336 1 
311 1 286 1 145 1 249 1 260 1 251 1 252 1 63 1 44 1 188 1 316 1 202 1 58 1 29 2 368 1 282 1 191 1 336 1 
113 1 270 1 328 1 
113 1 270 1 328 1 
273 1 284 1 
273 1 328 1 284 1 
196 1 154 1 
62 1 196 1 249 1 251 1 44 1 63 1 252 1 254 1 202 1 154 1 28 2 29 1 257 1 209 2 285 2 232 1 286 1 260 1 314 1 316 1 14 2 78 1 80 1 294 1 271 2 191 1 192 1 
113 1 270 1 
273 1 328 1 284 1 
274 1 170 1 298 2 173 1 24 1 197 1 226 1 114 2 25 2 329 1 149 1 177 1 229 2 4 1 332 1 28 2 8 1 367 2 208 1 184 1 285 2 186 1 137 1 376 2 289 1 36 1 268 1 245 1 271 2 272 1 86 1 
186 1 173 1 114 1 25 1 262 1 263 1 108 1 229 1 179 1 190 1 117 1 208 1 184 1 142 1 
133 1 235 1 186 1 53 2 114 1 25 1 263 1 26 1 318 1 229 1 152 1 165 1 217 1 166 1 190 1 355 1 208 1 60 1 
133 1 235 1 186 1 53 2 114 2 25 2 263 1 26 1 318 1 229 2 152 1 122 1 165 1 217 1 166 1 190 1 355 1 208 1 60 1 
133 1 235 1 186 1 53 2 114 1 25 1 26 1 318 1 229 1 152 1 165 1 6 1 166 1 190 1 355 1 208 1 60 1 
95 1 
372 1 339 1 264 1 331 1 141 1 333 1 58 1 69 1 205 1 111 1 
338 2 339 5 211 5 126 2 56 1 138 5 304 2 35 10 317 2 353 5 58 5 19 1 321 2 111 5 297 2 
286 1 340 1 58 1 276 1 69 1 191 1 
173 1 276 4 146 2 114 4 25 4 174 1 151 1 229 4 179 1 155 2 255 1 205 2 181 2 117 2 208 1 184 1 372 2 337 1 286 3 339 2 340 2 186 1 136 1 106 1 264 2 141 1 111 2 191 3 142 1 
331 1 339 1 216 1 58 1 333 1 69 1 111 1 
358 1 276 1 69 1 205 1 372 1 286 1 339 1 211 1 340 1 315 1 35 1 264 1 141 1 58 2 41 1 111 1 191 1 
223 2 126 2 173 6 276 5 1 2 2 1 229 1 334 2 49 2 181 1 335 1 184 1 286 5 338 2 339 7 340 3 186 1 56 2 138 6 141 3 353 6 58 6 191 5 111 7 193 1 246 2 297 2 114 1 25 1 304 2 201 1 155 1 115 3 205 3 157 1 117 1 208 2 372 3 211 6 35 12 317 2 264 3 265 2 37 2 321 2 
171 1 126 2 276 1 302 1 304 2 330 1 281 1 155 1 69 2 205 2 181 1 370 1 310 1 71 1 372 2 160 1 286 1 338 2 339 8 340 1 211 3 13 1 138 5 35 6 317 2 264 2 353 5 141 2 58 5 19 1 84 1 321 2 191 1 111 5 297 2 
224 1 127 1 90 1 277 1 304 2 67 1 68 1 28 1 205 1 209 1 372 1 285 1 286 1 338 1 339 2 187 1 347 1 14 1 264 1 121 1 141 1 40 1 19 1 83 1 271 1 321 2 191 1 111 2 
170 1 298 2 62 1 127 2 173 1 197 1 128 1 114 1 25 1 27 1 4 1 229 1 28 3 335 1 117 1 208 1 209 2 184 1 285 2 135 1 186 1 137 1 73 1 375 1 376 1 14 2 121 1 36 1 245 1 271 3 86 1 272 1 
372 1 339 1 211 2 278 1 138 2 35 4 264 1 353 2 141 1 58 4 69 2 155 1 205 1 181 1 111 2 
196 1 341 1 44 1 63 1 188 1 
44 1 63 1 207 1 
44 1 63 1 207 1 
44 1 63 1 207 1 
345 1 44 1 63 1 
345 1 44 1 63 1 
345 1 44 1 63 1 
44 1 63 1 
260 1 252 1 
298 2 338 2 224 2 187 1 137 1 64 2 226 5 277 2 376 10 91 3 150 5 4 1 36 5 67 1 366 1 245 1 321 2 86 1 
298 2 137 1 226 2 64 1 376 2 150 1 4 1 366 1 245 1 321 1 86 1 297 1 
298 2 338 1 126 1 137 1 226 2 64 1 376 4 91 1 317 1 150 2 4 1 36 2 366 1 245 1 321 1 86 1 297 1 
143 1 298 6 224 1 137 3 64 1 226 1 376 3 277 1 91 1 150 2 45 1 4 3 36 2 380 1 366 1 245 3 86 3 
171 4 143 1 298 10 224 3 126 3 226 16 64 5 278 1 277 3 129 1 150 12 91 7 45 1 4 5 67 2 366 1 48 1 310 1 338 5 137 5 74 1 376 34 13 3 349 1 317 3 36 18 379 1 380 2 381 1 354 1 245 5 321 5 86 5 297 3 
171 1 298 2 224 1 226 4 278 1 129 1 277 1 91 2 150 2 4 1 67 1 366 1 370 1 310 1 338 1 137 1 13 1 376 8 36 4 381 1 245 1 321 1 86 1 
171 2 298 4 224 1 126 1 226 6 64 1 278 1 277 1 129 1 91 2 150 3 4 2 67 1 366 1 370 1 310 1 338 1 137 2 74 1 376 11 13 1 36 5 381 1 354 1 245 2 321 2 86 2 297 1 
171 1 298 6 224 1 126 2 64 1 226 9 278 1 277 1 129 1 91 3 150 4 330 1 4 3 67 1 366 1 281 1 370 1 310 1 71 1 338 3 137 3 13 1 376 19 317 2 36 10 380 1 381 1 354 1 245 3 84 1 321 3 86 3 297 2 
171 1 298 6 224 1 126 2 64 2 226 10 278 1 277 1 129 1 91 3 150 5 330 1 4 3 67 1 366 1 281 1 370 1 310 1 71 1 338 2 137 3 13 1 376 17 317 1 36 7 380 1 381 1 354 1 245 3 84 1 321 3 86 3 297 2 
171 1 298 2 224 1 226 4 278 1 129 1 277 1 91 2 150 2 4 1 67 1 366 1 370 1 310 1 338 1 137 1 13 1 376 8 36 4 381 1 245 1 321 1 86 1 
171 1 298 2 126 2 64 1 226 6 91 1 150 2 330 1 4 1 366 1 281 1 370 1 310 1 71 1 338 2 137 1 13 1 376 12 317 2 36 6 245 1 84 1 321 2 86 1 297 2 
171 1 298 8 224 1 126 2 64 2 226 10 278 1 277 1 129 1 91 3 150 5 330 1 4 4 67 1 366 1 281 1 370 1 310 1 71 1 338 2 137 4 376 18 13 1 317 1 36 8 380 2 381 1 354 1 245 4 84 1 321 3 86 4 297 2 
171 1 143 1 298 8 126 3 64 3 226 9 91 3 150 6 330 1 4 4 366 1 281 1 370 1 310 1 71 1 338 2 137 4 376 16 13 1 317 2 36 7 380 2 245 4 84 1 321 3 86 4 297 3 
338 1 224 3 64 3 226 3 376 7 129 2 277 3 91 3 150 6 36 4 67 1 381 1 321 1 
171 1 143 1 298 8 224 1 126 2 64 1 226 10 278 1 277 1 129 1 91 3 150 4 330 1 4 4 67 1 366 1 281 1 370 1 310 1 71 1 338 2 137 4 376 18 13 1 317 1 36 8 380 2 381 1 245 4 84 1 321 3 86 4 297 2 
298 4 338 1 224 1 137 2 226 4 64 1 278 1 376 8 129 1 277 1 150 3 91 2 4 2 67 1 36 4 380 1 381 1 245 2 321 1 86 2 
338 1 224 1 226 3 278 1 129 1 277 1 376 6 91 2 150 2 36 3 67 1 216 1 381 1 321 1 
298 2 338 1 126 1 137 1 226 2 64 1 376 4 91 1 317 1 150 2 4 1 36 2 354 1 245 1 321 1 86 1 297 1 
171 2 338 1 126 1 74 1 226 3 64 1 376 7 13 1 91 1 317 1 150 2 36 4 321 1 310 1 297 1 
171 2 298 4 224 2 126 2 64 4 226 11 278 1 277 2 129 1 305 1 150 9 91 5 4 2 45 1 67 1 338 3 74 1 137 2 13 2 376 23 317 2 36 12 380 2 381 1 245 2 321 3 86 2 297 2 194 1 
171 1 36 1 376 1 
226 1 376 1 13 1 
298 2 338 1 126 1 137 1 226 3 64 1 376 6 56 1 150 3 317 1 91 2 4 1 36 3 354 1 245 1 321 1 86 1 297 1 
171 1 298 2 126 2 64 1 226 6 91 1 150 2 330 1 4 1 366 1 281 1 370 1 310 1 71 1 338 2 137 1 13 1 376 12 317 2 36 6 245 1 84 1 321 2 86 1 297 2 
338 1 224 1 226 3 64 1 376 6 277 1 91 1 150 2 67 1 36 3 321 1 
298 2 224 1 137 1 226 1 64 1 277 1 129 1 376 3 150 2 91 1 45 1 4 1 36 2 380 1 381 1 245 1 86 1 
285 1 62 1 28 1 313 1 269 1 271 1 295 1 
92 1 285 1 62 1 79 1 28 1 313 1 269 1 97 1 75 1 271 1 295 1 16 1 
173 1 186 1 250 1 114 4 25 4 229 4 122 1 179 1 81 1 117 1 208 1 142 1 184 1 
159 1 301 1 287 1 173 1 186 1 146 1 114 2 25 2 214 1 229 2 335 1 208 2 31 1 184 1 
229 1 235 1 186 1 53 1 166 1 114 1 25 1 117 1 208 1 26 1 
173 1 186 1 24 1 114 2 25 2 329 1 229 2 122 1 355 1 208 1 184 1 
173 3 186 2 250 1 24 1 146 1 114 4 25 5 148 1 229 5 122 1 179 1 117 1 208 2 283 1 142 1 184 2 
173 3 186 2 250 1 24 1 146 1 114 4 25 5 229 5 164 1 122 1 179 1 117 1 208 2 283 1 142 1 184 2 
229 1 216 1 186 1 173 1 179 1 114 1 25 1 117 1 208 1 184 1 142 1 
285 1 62 1 173 1 186 1 73 1 128 1 114 1 25 1 14 1 229 1 28 2 293 1 335 1 271 2 117 1 208 1 184 1 209 1 
285 2 62 1 173 3 186 1 73 1 90 1 128 1 146 1 114 1 240 1 25 1 14 2 229 1 140 1 28 2 309 1 293 1 335 2 271 2 208 1 11 1 184 2 209 1 
62 1 275 1 173 3 146 1 128 1 90 1 114 2 25 2 229 2 28 2 309 1 335 2 208 1 209 1 184 2 11 1 285 2 186 1 240 1 14 2 140 1 81 1 293 1 271 2 
223 1 173 4 276 1 146 1 114 3 25 3 327 1 229 3 69 1 115 1 335 1 117 1 208 1 184 1 286 2 186 1 240 1 163 1 140 1 58 1 81 1 191 2 246 1 
286 2 223 1 173 4 186 1 276 1 146 1 114 3 240 1 25 3 265 1 229 3 140 1 58 1 81 1 69 1 115 1 335 1 117 1 208 1 191 2 246 1 184 1 
229 1 186 1 114 1 25 1 208 1 279 1 
159 1 101 1 301 1 342 1 173 3 186 2 24 1 114 6 2 1 25 7 279 1 148 1 229 7 122 1 367 1 355 1 335 1 117 2 283 1 208 3 184 2 
298 4 62 2 224 1 173 1 197 2 226 3 128 1 278 1 277 1 129 1 114 1 326 1 25 1 150 2 91 2 177 1 27 1 4 2 229 1 67 1 28 2 335 1 208 1 184 1 209 1 185 1 285 1 338 1 186 1 135 1 137 2 73 1 376 6 14 1 109 1 352 1 36 3 122 1 268 1 381 1 293 1 245 2 271 2 321 1 272 2 86 2 169 1 
223 1 173 2 276 2 114 1 25 1 331 1 151 1 229 1 333 1 334 1 69 1 205 2 115 1 49 1 117 1 372 2 286 3 339 1 340 1 264 2 265 1 37 1 141 2 58 1 294 1 111 1 191 3 246 1 
223 1 173 2 186 1 114 2 2 1 25 2 279 1 229 2 122 1 335 1 208 2 193 1 184 1 
285 1 62 1 275 1 173 1 186 1 128 1 114 1 25 1 14 1 229 1 28 2 293 1 335 1 271 2 117 1 208 1 184 1 209 1 
159 1 301 1 342 1 173 1 186 1 146 1 114 1 2 1 25 1 229 1 335 1 208 2 184 1 
62 1 167 1 76 1 296 1 227 1 
62 1 286 2 90 1 344 1 76 2 227 1 104 1 176 1 58 1 309 1 69 1 167 2 47 1 294 1 39 1 296 2 191 2 246 1 11 1 
274 1 285 1 227 1 289 1 332 1 28 1 167 1 271 1 296 1 
344 1 227 1 104 1 
290 1 242 1 222 1 46 1 147 1 110 1 213 1 377 1 
222 3 134 1 147 4 212 1 34 1 213 4 377 2 290 1 5 1 46 2 130 1 110 1 320 1 116 2 
290 1 242 1 222 1 46 1 239 1 147 2 110 1 131 1 116 1 382 1 213 2 377 1 
222 1 134 2 43 1 147 3 213 3 377 1 290 1 242 1 5 1 46 1 110 1 320 2 
77 1 222 2 343 2 105 1 
290 1 242 1 147 1 110 1 213 1 231 1 
290 1 242 1 222 1 203 1 46 1 147 2 110 1 116 1 213 2 377 1 
99 1 
290 1 242 1 222 1 46 1 147 1 110 1 213 1 377 1 
222 1 216 1 46 1 377 1 
290 1 222 1 46 1 147 1 110 1 213 1 377 1 
132 1 213 1 72 1 
222 1 134 1 147 3 213 3 377 1 290 1 242 1 5 1 46 1 110 1 320 2 168 1 
290 1 222 1 350 1 46 1 147 2 110 1 116 1 213 2 377 1 
222 1 133 1 102 1 53 1 147 1 212 1 213 1 26 1 290 1 242 1 110 1 
290 1 242 1 222 1 46 1 147 1 110 1 213 1 
290 1 242 1 46 2 147 1 110 1 213 1 377 1 
290 2 242 1 222 1 46 1 147 2 110 2 98 1 85 1 213 2 70 1 
222 2 147 3 212 1 213 3 377 1 290 1 242 1 203 1 46 1 130 1 110 1 180 1 116 2 
222 1 133 1 235 1 53 2 147 2 213 2 377 1 365 1 26 1 290 1 242 1 318 1 46 1 110 1 116 1 
222 2 147 4 212 1 213 4 377 1 290 2 242 1 350 1 244 1 46 1 130 1 110 2 116 2 
290 1 242 1 222 1 203 1 46 1 147 3 110 1 320 1 116 1 213 3 377 1 
222 1 130 1 212 1 34 1 
222 1 46 1 

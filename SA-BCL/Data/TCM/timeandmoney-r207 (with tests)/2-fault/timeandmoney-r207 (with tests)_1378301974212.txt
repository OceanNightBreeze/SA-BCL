#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) 335 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) 335 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) (61,75) (61,75) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) (61,75) (61,75) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) (61,75) (61,75) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException 270 110 (256,260) (61,75) (61,75) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException 270 (6,119,329,365) 127 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V ERROR java.lang.IllegalArgumentException 270 110 
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V ERROR java.lang.IllegalArgumentException 270 (6,119,329,365) 
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V ERROR java.lang.IllegalArgumentException 270 110 359 
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V ERROR java.lang.IllegalArgumentException 270 110 280 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | CONDITION | 9328 | if (x) -> if (!x)
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
87 1 171 2 24 1 245 1 270 1 110 1 203 1 236 2 256 1 148 2 215 2 
245 1 110 1 203 1 236 3 335 1 2 1 215 2 87 1 24 1 171 2 270 1 329 1 148 3 256 1 
245 1 110 1 203 1 236 3 335 1 2 1 215 2 87 1 24 1 171 2 270 1 329 1 148 3 256 1 
245 1 32 1 260 1 149 1 110 1 203 2 236 3 111 1 215 2 75 1 87 1 24 1 171 2 61 1 216 1 270 1 115 1 9 1 256 1 148 3 
245 1 32 1 260 1 149 1 110 1 203 2 236 3 111 1 215 2 75 1 87 1 24 1 171 2 61 1 216 1 270 1 115 1 9 1 256 1 148 3 
245 1 32 1 260 1 149 1 110 1 203 2 236 3 111 1 215 2 75 1 87 1 24 1 171 2 61 1 216 1 270 1 115 1 9 1 256 1 148 3 
245 1 32 1 260 1 149 1 110 1 203 2 236 3 111 1 215 2 75 1 87 1 24 1 171 2 61 1 216 1 270 1 115 1 9 1 256 1 148 3 
87 1 171 1 24 1 245 1 6 1 270 1 236 2 180 1 2 1 148 2 215 1 127 1 
245 1 149 1 203 1 236 2 215 1 24 1 171 1 371 1 302 1 228 1 216 1 38 1 115 1 9 1 148 2 104 1 
200 1 105 1 95 1 71 1 166 1 167 1 129 1 100 1 154 1 181 1 372 1 328 1 91 1 242 1 
89 1 
212 1 89 1 241 1 
176 1 89 1 22 2 
200 2 154 1 372 2 181 2 95 2 328 2 128 1 100 2 
139 2 95 2 189 1 235 1 98 1 100 3 76 1 4 2 348 2 370 1 347 2 77 1 101 1 372 2 217 1 28 1 377 1 328 2 79 1 173 1 330 1 200 3 243 1 332 1 222 1 247 1 223 1 357 1 128 1 285 2 314 1 360 1 154 1 181 2 229 1 90 1 290 1 
200 1 154 1 372 1 181 1 95 1 71 1 166 1 328 1 91 1 100 1 
200 1 105 1 356 1 71 1 23 1 100 1 266 1 252 1 372 1 89 1 272 1 241 1 211 1 242 1 
200 1 105 2 95 1 71 1 23 1 100 1 252 1 181 1 372 1 89 1 328 1 272 1 241 1 211 1 242 2 
105 1 345 1 341 1 167 1 242 1 
105 2 89 1 341 1 167 1 39 1 241 1 53 1 242 2 
105 1 341 1 242 1 
0 1 105 2 89 1 341 1 167 1 39 1 241 1 242 2 
274 1 105 5 246 1 308 1 167 2 298 1 224 1 59 2 193 1 226 2 145 2 172 1 89 1 341 2 39 1 241 1 126 1 242 5 232 1 
200 2 33 1 95 1 128 2 100 2 268 1 372 2 181 1 328 1 
239 1 277 1 249 1 
212 1 128 1 
243 1 200 2 95 1 189 1 118 1 235 1 285 1 100 2 4 1 370 1 360 1 347 1 239 1 372 1 79 1 197 1 328 1 290 1 173 1 330 1 
200 5 33 1 95 4 118 2 128 1 3 1 100 5 266 1 251 1 372 5 181 1 64 1 328 4 197 1 
200 2 372 2 95 2 71 1 166 1 328 2 334 1 100 2 
200 1 243 1 189 1 128 1 235 1 285 1 100 1 4 1 347 1 360 1 370 1 79 1 290 1 173 1 10 1 330 1 
200 3 181 1 372 3 95 3 118 1 328 3 128 1 100 3 
200 1 372 1 95 1 71 1 166 1 328 1 100 1 
200 1 33 1 268 1 372 1 181 1 95 1 71 1 328 1 100 1 
139 1 95 3 71 1 189 1 118 1 235 1 23 1 100 4 76 1 4 1 348 2 370 1 347 1 77 1 101 1 372 3 28 1 377 1 79 1 328 3 197 1 272 1 173 1 330 1 242 1 243 1 244 1 200 4 33 1 105 1 222 1 247 1 357 1 128 1 285 1 314 1 360 1 225 1 154 1 252 1 181 2 90 1 290 1 211 1 
266 1 200 2 372 2 95 1 64 1 328 1 118 1 128 1 100 2 
200 3 244 1 33 1 105 1 95 3 71 1 118 2 113 1 23 1 100 3 252 1 181 1 372 3 89 1 197 1 328 3 272 1 211 1 242 1 
200 2 33 1 95 2 118 1 249 1 100 2 181 1 372 2 239 1 328 2 
200 1 243 1 189 1 128 1 235 1 285 1 100 1 4 1 347 1 360 1 370 1 79 1 290 1 330 1 173 1 
200 1 68 1 189 1 128 1 235 1 285 1 99 1 100 1 4 1 347 1 360 1 370 1 79 1 290 1 173 1 
162 1 138 1 139 4 213 1 261 1 321 1 323 1 76 1 348 2 77 1 101 1 239 2 102 1 28 1 377 1 80 1 277 2 309 1 249 2 314 2 317 1 183 1 229 2 90 1 
200 1 372 1 95 1 71 1 328 1 334 1 23 1 100 1 
283 1 147 1 324 1 
292 1 342 1 283 2 46 1 147 2 368 1 
283 1 147 1 
283 1 147 1 
342 1 46 1 
342 1 46 1 
342 1 46 1 
283 1 147 1 60 1 
283 1 147 1 60 1 
283 1 147 1 60 1 
283 1 147 1 186 1 
283 1 147 1 186 1 
283 1 147 1 186 1 
234 1 164 1 165 1 95 2 74 1 324 1 100 2 372 2 269 1 328 2 147 1 242 1 200 2 105 1 82 1 283 1 178 1 128 1 250 1 338 1 208 1 155 1 161 1 134 1 
105 2 234 2 164 3 283 2 178 1 322 1 250 2 227 2 26 1 49 1 89 1 366 1 147 2 66 1 368 1 134 2 161 2 135 1 242 2 
32 1 307 1 219 2 228 1 216 2 
32 1 216 1 9 1 
228 1 216 1 9 1 
307 1 32 2 219 1 220 1 228 1 216 3 
307 1 32 1 219 1 228 1 216 2 45 1 
43 2 213 1 165 1 69 2 295 1 346 1 344 2 167 4 323 1 74 1 22 3 145 1 193 1 122 1 80 1 241 1 242 5 105 5 81 1 246 3 82 1 176 1 358 1 224 2 59 1 226 1 317 1 114 1 89 2 341 1 39 1 67 1 
233 1 43 6 213 3 140 1 69 6 295 3 345 5 167 7 168 1 323 3 22 9 193 1 145 2 373 1 50 1 122 2 80 3 241 1 218 5 242 9 105 9 81 2 82 4 246 8 176 3 224 6 59 2 226 2 317 3 114 1 89 5 341 6 39 1 231 1 232 1 
43 2 213 1 295 1 69 2 346 1 344 1 167 2 323 1 22 4 145 1 122 1 80 1 241 1 242 3 105 3 81 1 246 3 82 1 176 2 358 1 224 2 59 1 226 1 317 1 89 3 232 1 
233 1 43 4 213 2 69 4 295 2 346 1 344 2 167 3 168 1 323 2 22 7 145 1 50 1 122 1 80 2 241 1 242 4 105 4 81 1 246 5 82 2 176 3 358 1 224 4 59 1 226 1 317 2 89 4 232 1 
257 1 
212 1 27 1 173 1 
19 1 173 1 
370 1 235 1 173 1 
42 1 173 1 
370 1 173 1 
370 1 374 1 27 2 235 1 173 3 124 1 
162 2 54 1 275 1 174 2 11 1 139 7 213 1 321 3 57 1 177 1 380 1 143 1 299 1 314 3 156 1 80 1 52 1 229 4 
162 5 139 31 213 4 321 10 295 3 323 3 143 2 299 1 76 1 348 2 77 1 121 1 8 1 28 1 80 4 52 1 273 1 54 2 106 3 174 3 275 5 276 1 202 1 11 1 279 1 56 1 57 2 205 4 380 1 314 15 156 2 317 3 229 16 90 1 
162 3 139 9 213 1 321 4 143 1 47 1 299 1 76 2 348 4 77 2 28 2 80 1 52 1 54 1 174 2 275 1 11 1 279 1 57 1 315 1 314 4 156 1 229 5 90 2 
162 2 54 1 275 1 174 2 11 1 139 7 213 1 321 3 57 1 380 1 143 1 299 1 314 3 156 1 80 1 229 4 52 1 
162 2 54 1 275 1 174 2 11 1 139 7 213 1 321 3 57 1 380 1 143 1 299 1 314 3 156 1 80 1 229 4 52 1 
83 1 36 2 369 1 203 2 152 2 236 1 285 1 215 1 171 1 4 1 360 1 370 1 347 1 153 1 25 2 209 1 375 1 254 1 79 1 148 1 290 1 173 1 136 1 
32 1 220 1 36 1 203 1 152 1 236 1 285 1 263 1 215 1 206 1 288 1 24 1 171 1 4 1 360 1 347 1 25 1 228 1 216 2 364 1 352 1 79 1 9 1 160 1 148 1 30 1 
236 2 2 1 215 1 263 1 4 1 171 1 24 1 347 1 25 1 371 1 216 2 79 1 9 1 148 2 30 1 245 1 32 1 220 1 36 1 152 1 203 1 285 1 312 1 206 1 288 1 360 1 228 1 364 1 38 1 160 1 
236 3 2 2 215 1 263 1 4 1 171 1 347 1 25 1 371 1 216 2 352 1 79 1 9 1 148 3 30 1 245 1 32 1 220 1 36 1 152 1 203 1 285 1 206 1 288 1 360 1 153 1 228 1 364 1 158 1 38 1 
236 2 2 2 263 1 4 1 347 1 25 1 371 1 216 2 352 1 79 1 9 1 148 2 30 1 245 1 32 1 220 1 36 1 203 1 152 1 285 1 360 1 228 1 364 1 158 1 38 1 
20 1 
294 3 71 1 73 2 191 1 23 1 264 5 100 1 266 1 145 1 193 1 372 1 196 1 7 3 78 3 272 1 241 1 242 4 31 2 200 1 105 4 333 2 246 1 34 1 176 2 278 2 108 1 109 1 356 1 310 1 224 1 59 1 226 1 252 1 339 1 14 1 89 1 341 5 39 2 132 1 40 1 211 1 291 1 
294 3 71 1 73 2 191 1 23 1 264 5 100 1 266 1 145 1 193 1 372 1 196 1 7 3 78 3 272 1 241 1 242 4 31 2 200 1 105 4 333 2 246 1 34 1 176 2 278 2 108 1 109 1 356 1 310 1 224 1 59 1 226 1 252 1 339 1 14 1 89 1 341 5 39 2 132 1 40 1 211 1 291 1 
294 2 71 1 22 2 23 1 264 4 100 1 266 1 145 1 193 1 372 1 78 2 7 2 196 1 272 1 241 1 378 1 242 4 200 1 105 4 333 2 246 1 34 1 278 2 108 1 356 1 84 2 310 1 224 1 59 1 226 1 252 1 339 1 14 1 210 1 89 1 341 4 39 2 211 1 187 2 
294 2 100 1 4 2 347 2 193 1 145 1 7 2 196 1 305 1 241 1 242 5 200 1 105 5 201 1 246 2 108 1 356 1 310 1 59 1 360 1 316 1 252 1 209 1 62 1 14 1 210 1 211 1 71 1 369 1 73 2 22 2 23 1 264 4 266 1 370 1 372 1 78 2 122 1 79 1 272 1 173 1 31 2 333 2 34 1 176 2 278 2 285 2 224 2 226 1 339 1 89 2 341 6 39 3 132 1 290 2 
200 1 0 1 105 3 34 1 71 1 356 1 310 1 264 2 23 1 100 1 266 1 252 1 339 1 372 1 14 1 7 1 196 1 341 2 272 1 39 1 211 1 242 3 
0 1 71 1 23 1 264 3 100 1 266 1 372 1 196 1 78 1 272 1 241 1 242 3 200 1 105 3 34 1 356 1 310 1 252 1 339 1 14 1 89 1 341 1 39 1 211 1 
0 1 294 1 71 1 23 1 264 3 100 1 266 1 372 1 196 1 7 1 78 1 272 1 241 1 242 3 200 1 105 3 34 1 356 1 310 1 252 1 339 1 14 1 89 1 341 2 39 1 211 1 
0 1 294 4 191 1 100 1 193 1 145 1 7 4 196 1 241 5 242 5 200 1 105 5 246 1 109 1 108 1 356 1 310 1 59 1 252 1 14 1 15 1 211 1 71 1 73 2 264 6 23 1 266 1 372 1 78 4 272 1 31 2 34 1 333 2 278 2 176 2 224 1 226 1 339 1 89 5 341 7 39 3 132 1 40 1 291 1 
294 2 100 1 193 1 145 1 196 1 7 2 241 1 242 4 200 1 105 4 246 1 108 1 356 1 310 1 59 1 252 1 14 1 210 1 211 1 71 1 73 2 264 4 23 1 22 2 266 1 372 1 78 2 272 1 31 2 34 1 333 2 278 2 176 2 224 1 226 1 339 1 89 2 341 4 132 1 39 2 
294 2 71 1 73 2 191 1 23 1 264 4 100 1 266 1 193 1 145 1 372 1 78 2 7 2 196 1 272 1 241 1 242 4 31 2 200 1 105 4 333 2 246 1 34 1 176 2 278 2 108 1 109 1 356 1 310 1 224 1 59 1 226 1 252 1 339 1 14 1 89 1 341 4 39 2 132 1 40 1 211 1 
294 2 71 1 73 2 191 1 23 1 264 4 100 1 266 1 193 1 145 1 372 1 78 2 7 2 196 1 272 1 241 1 242 4 31 2 200 1 105 4 333 2 246 1 34 1 176 2 278 2 108 1 109 1 356 1 310 1 224 1 59 1 226 1 252 1 339 1 14 1 89 1 341 4 39 2 132 1 40 1 211 1 
343 1 294 2 71 1 22 2 23 1 264 4 100 1 266 1 193 1 145 1 372 1 78 2 7 2 196 1 272 1 241 1 378 1 242 4 200 1 105 4 333 2 246 1 34 1 278 2 108 1 356 1 84 2 310 1 224 1 311 1 59 1 226 1 252 1 339 1 14 1 89 1 341 4 39 2 40 1 211 1 187 2 
162 1 139 3 321 1 213 1 214 1 95 1 295 1 323 1 100 1 76 1 348 2 77 1 101 1 239 1 372 1 28 1 377 1 328 1 80 1 200 1 33 1 277 1 249 1 314 2 181 1 317 1 229 1 90 1 116 1 
139 2 94 1 95 1 118 1 369 1 297 1 98 2 265 1 100 1 4 8 76 2 347 8 348 4 370 2 77 2 101 2 372 1 102 1 352 1 28 2 377 2 328 1 79 2 173 3 200 1 12 1 248 1 223 1 357 1 284 1 285 7 312 1 360 2 314 1 207 1 209 1 229 1 290 2 90 2 
212 1 162 2 54 1 174 1 277 1 139 6 11 1 213 1 321 2 249 1 128 2 143 1 299 1 76 1 314 3 348 2 101 1 77 1 239 1 102 1 377 1 28 1 80 1 229 3 52 1 90 1 
162 1 139 14 321 2 213 2 214 1 295 2 96 1 323 2 76 2 348 4 77 2 101 2 239 11 121 1 28 2 377 1 80 1 106 3 275 1 276 1 277 11 221 1 223 1 357 1 249 4 128 1 205 3 286 1 86 1 314 6 317 1 229 8 90 2 
139 2 214 1 95 1 189 1 118 1 235 1 100 2 4 1 76 1 370 1 347 1 348 2 77 1 101 1 372 1 5 1 28 1 377 1 79 1 328 1 197 1 173 1 330 1 10 1 243 1 200 2 249 1 357 1 223 1 128 1 285 1 360 1 314 1 65 1 229 1 290 1 90 1 41 1 
188 1 139 20 44 1 95 1 295 2 189 2 190 2 235 2 143 1 299 1 100 3 4 3 347 3 348 6 194 1 101 3 239 7 352 1 197 1 52 1 200 3 243 2 54 1 11 1 247 2 357 1 249 7 314 10 360 2 317 2 319 2 162 4 213 3 321 8 214 1 118 1 72 2 323 2 76 3 370 2 77 3 372 1 377 3 28 3 80 3 328 1 79 2 330 2 173 2 174 1 275 4 277 7 223 1 128 2 285 3 287 2 229 10 290 1 90 3 
275 1 138 1 277 1 139 2 321 1 213 1 249 1 323 1 76 1 348 2 101 1 77 1 239 1 102 1 377 1 28 1 229 2 90 1 
162 1 277 1 139 2 321 1 261 1 249 1 76 1 348 2 314 2 101 1 77 1 239 1 102 1 317 1 377 1 28 1 80 1 90 1 
162 1 139 4 213 1 321 2 295 1 323 1 76 1 348 2 77 1 101 1 239 2 102 1 28 1 377 1 80 1 275 1 277 2 249 2 314 2 317 1 229 2 90 1 
275 1 138 1 277 1 139 2 321 1 213 1 249 1 323 1 76 1 348 2 207 1 101 1 77 1 239 1 377 1 28 1 229 2 90 1 
162 1 277 1 139 2 321 1 261 1 249 1 76 1 348 2 314 2 207 1 101 1 77 1 239 1 317 1 377 1 28 1 80 1 90 1 
162 1 275 1 277 2 139 4 321 2 213 1 295 1 249 2 323 1 76 1 314 2 348 2 207 1 101 1 77 1 239 2 317 1 377 1 28 1 80 1 229 2 90 1 
162 1 275 1 277 2 139 4 321 2 213 1 295 1 249 2 323 1 76 1 314 2 348 2 101 1 77 1 239 2 317 1 377 1 28 1 80 1 229 2 90 1 
139 2 189 1 235 1 100 1 4 1 76 1 370 1 347 1 348 2 101 1 77 1 377 1 28 1 79 1 330 1 173 1 243 1 200 1 247 1 223 1 357 1 128 1 285 1 360 1 314 1 229 1 290 1 90 1 
139 2 68 1 189 1 235 1 99 1 100 1 4 1 76 1 370 1 347 1 348 2 101 1 77 1 376 1 377 1 28 1 79 1 173 1 200 1 223 1 357 1 128 1 285 1 360 1 314 1 229 1 290 1 90 1 
162 1 275 1 277 2 139 4 321 2 213 1 214 1 295 1 249 2 323 1 76 1 314 2 348 2 101 1 77 1 239 2 317 1 377 1 28 1 80 1 229 2 90 1 
162 1 139 4 321 2 213 1 295 1 189 1 235 1 323 1 100 1 4 1 76 1 347 1 370 1 348 2 101 1 77 1 239 2 377 1 28 1 80 1 79 1 330 1 173 1 243 1 200 1 275 1 277 2 247 1 249 2 285 1 287 1 312 1 314 2 360 1 317 1 229 2 90 1 
18 1 139 3 321 1 213 1 214 1 95 1 295 1 323 1 100 1 76 1 348 2 77 1 101 1 372 1 239 1 28 1 377 1 80 1 328 1 200 1 33 1 275 1 277 1 249 1 314 1 181 1 317 1 229 2 90 1 
162 3 139 19 213 3 321 6 70 1 295 3 238 1 323 3 76 2 350 1 349 1 348 4 77 2 121 1 103 2 28 2 80 3 199 1 106 1 275 3 276 1 205 2 313 1 315 1 314 10 88 2 317 3 229 9 185 1 90 2 
162 2 17 1 139 26 321 4 213 3 70 1 295 3 238 1 323 3 300 1 76 3 349 2 348 6 267 1 77 3 103 4 240 1 28 3 80 2 199 1 106 2 275 2 276 2 279 2 205 2 314 12 315 1 88 1 317 2 229 14 185 2 367 1 16 1 90 3 
162 4 17 1 139 41 213 5 321 8 70 1 295 4 237 1 238 1 323 4 143 1 299 1 300 1 76 3 350 1 267 1 349 2 348 6 77 3 121 1 103 4 240 1 28 3 80 5 52 1 199 1 54 1 106 3 174 1 275 4 276 3 11 1 279 1 205 4 315 1 314 21 88 1 317 4 229 20 185 1 367 1 16 1 90 3 
162 4 17 1 139 38 213 5 321 7 70 1 295 4 237 1 238 1 323 4 143 1 299 1 300 1 76 4 350 1 267 1 349 2 348 8 77 4 121 1 103 4 240 1 28 4 80 4 52 1 199 1 54 1 106 3 174 1 275 3 276 3 11 1 279 2 205 4 315 1 314 18 88 1 317 3 229 20 185 1 367 1 16 1 90 4 
162 7 17 1 139 52 213 8 321 14 70 1 295 7 238 1 323 7 143 1 299 1 300 1 76 2 267 1 349 1 348 4 77 2 121 2 103 4 240 1 28 2 80 8 52 1 199 1 54 1 106 4 174 1 275 7 276 2 11 1 279 1 221 2 205 4 315 1 314 25 88 1 317 7 229 27 185 1 367 1 16 1 90 2 
250 1 48 1 26 1 234 1 283 1 366 1 147 1 368 1 161 1 134 1 
301 1 60 1 
292 1 186 1 120 1 
155 1 324 1 
250 1 234 1 363 1 282 1 283 1 296 1 147 1 161 1 134 1 
105 1 234 1 164 2 283 1 178 1 322 1 250 1 227 1 26 1 49 1 89 1 366 1 147 1 66 1 368 1 134 1 161 1 242 1 
105 1 234 1 164 2 283 1 178 1 322 1 250 1 227 1 26 1 49 1 89 1 366 1 147 1 66 1 368 1 134 1 161 1 242 1 
105 1 234 1 164 2 283 1 178 1 322 1 250 1 227 1 26 1 49 1 89 1 366 1 147 1 66 1 368 1 134 1 161 1 242 1 
292 1 301 1 60 1 
292 1 301 1 60 1 
186 1 120 1 
292 1 186 1 120 1 
338 1 269 1 
234 1 164 1 165 1 95 2 167 1 74 1 324 1 100 2 372 2 195 1 269 1 328 2 147 1 242 1 200 2 105 1 82 1 283 1 128 1 250 1 338 1 227 1 208 1 155 1 66 1 161 1 134 1 
258 1 92 1 259 1 139 2 214 1 98 2 100 2 4 2 76 1 370 1 347 2 348 2 101 1 77 1 372 2 28 1 377 1 79 1 173 1 200 2 12 1 223 1 357 1 204 1 284 1 285 2 360 1 314 1 340 1 229 1 90 1 
262 1 152 1 369 1 285 1 4 1 360 1 370 1 347 1 209 1 375 1 271 1 79 1 290 1 173 1 
32 1 220 1 152 1 285 1 206 1 4 1 347 1 360 1 228 1 216 2 253 1 364 1 352 1 271 1 79 1 353 1 9 1 30 1 
32 1 220 1 152 1 285 2 312 1 206 1 4 2 360 1 347 2 228 1 216 2 253 1 364 1 352 1 271 1 79 1 353 1 9 1 30 1 
32 1 220 1 152 1 285 1 142 1 206 1 4 1 347 1 360 1 228 1 216 2 253 1 364 1 352 1 79 1 9 1 30 1 
163 1 
274 1 246 1 224 1 59 1 193 1 226 1 145 1 89 1 241 1 126 1 
105 1 89 1 341 1 39 1 241 1 242 1 
369 1 170 1 4 4 370 1 347 4 145 2 193 1 122 2 79 1 304 1 305 2 173 1 242 3 105 3 201 1 246 2 285 4 224 2 59 2 85 1 360 1 226 2 209 1 62 1 184 2 341 4 39 2 290 2 232 1 
139 1 95 2 189 1 235 1 100 3 76 1 4 1 348 2 347 1 370 1 77 1 101 1 372 2 377 1 28 1 328 2 79 1 330 1 173 1 200 3 243 1 222 1 247 1 357 1 128 1 285 1 314 1 360 1 154 1 181 2 90 1 290 1 
174 1 43 2 246 1 176 2 69 2 224 2 22 4 59 1 193 1 226 1 145 1 122 1 89 4 305 1 241 2 
43 5 246 5 213 2 176 5 295 2 69 5 190 1 323 2 224 5 22 10 182 1 317 2 89 5 80 2 289 2 
212 1 274 1 246 1 89 1 241 1 224 1 126 1 
73 1 22 1 145 1 193 1 241 1 242 1 31 1 105 1 246 1 176 1 224 1 59 1 226 1 89 2 341 1 132 1 39 1 
42 2 43 6 295 2 190 2 235 3 4 3 347 3 193 4 145 4 305 1 241 2 242 5 105 5 246 9 112 2 312 1 59 4 360 3 157 2 317 2 320 1 211 2 213 2 19 3 117 1 69 6 169 2 323 2 22 12 370 3 27 2 122 2 123 2 327 2 79 4 80 2 173 10 124 1 126 1 274 1 176 6 35 1 285 3 224 8 85 1 226 4 182 2 184 1 89 8 289 2 341 5 39 3 290 1 381 2 
17 1 43 5 213 2 69 5 295 2 323 2 22 6 300 1 267 1 145 2 193 2 122 1 240 1 326 1 80 2 305 1 241 2 242 1 105 1 106 1 175 1 276 1 246 8 176 3 205 1 224 5 59 2 226 2 182 1 317 2 89 5 341 1 289 2 39 1 16 1 
213 2 95 1 71 1 166 1 143 1 191 1 100 1 145 1 193 1 372 1 351 1 80 1 328 1 242 1 200 1 54 1 105 1 11 1 246 2 129 1 224 2 59 1 226 1 154 1 181 1 182 1 289 2 91 1 
250 1 337 1 338 1 26 1 161 1 
250 1 1 1 161 1 
250 1 1 1 161 1 
250 1 1 1 161 1 
250 1 141 1 161 1 
250 1 141 1 161 1 
250 1 141 1 161 1 
250 1 161 1 
283 1 147 1 
54 2 162 3 275 2 139 10 11 1 321 5 213 2 143 2 76 1 348 2 315 1 314 5 77 1 351 1 28 1 80 2 229 5 90 1 
162 2 139 8 213 1 321 2 143 1 299 1 76 1 267 1 348 2 77 1 28 1 80 1 52 1 106 1 54 1 174 1 276 1 11 1 205 1 314 4 315 1 229 4 90 1 
162 2 139 11 213 2 321 3 295 1 323 1 143 1 299 1 76 2 267 1 348 4 77 2 121 1 28 2 80 1 52 1 54 1 106 1 174 1 275 1 276 1 11 1 205 2 314 5 315 1 159 1 229 6 90 2 
162 3 17 1 139 19 213 3 321 4 295 2 323 2 143 1 299 1 300 1 76 3 267 1 348 6 77 3 28 3 240 1 80 3 52 1 54 1 106 1 174 1 275 1 276 1 11 1 279 1 205 1 314 10 315 1 317 2 159 1 229 9 16 1 90 3 
162 3 17 1 139 17 213 3 321 5 295 2 323 2 143 1 299 1 300 1 76 3 267 1 348 6 77 3 28 3 240 1 80 2 52 1 54 1 106 1 174 1 275 2 276 1 11 1 279 1 205 1 314 7 315 1 317 1 159 1 229 10 90 3 16 1 
162 2 139 8 213 1 321 2 143 1 299 1 76 1 267 1 348 2 77 1 28 1 80 1 52 1 106 1 54 1 174 1 276 1 11 1 205 1 314 4 315 1 229 4 90 1 
162 1 17 1 139 12 213 2 321 2 295 2 323 2 300 1 76 1 267 1 348 2 77 1 28 1 240 1 80 2 106 1 275 1 276 1 205 1 314 6 315 1 317 2 229 6 90 1 16 1 
162 3 17 1 139 18 213 3 321 5 295 2 323 2 143 1 299 1 300 1 76 4 267 1 348 8 77 4 240 1 28 4 80 2 52 1 54 1 106 1 174 1 275 2 276 1 11 1 279 2 205 1 314 8 315 1 317 1 159 1 229 10 16 1 90 4 
162 3 17 1 139 16 213 3 321 6 295 3 323 3 300 1 76 4 267 1 348 8 350 1 77 4 240 1 28 4 80 2 106 1 275 3 276 1 279 2 205 1 314 7 315 1 317 2 229 9 16 1 90 4 
54 3 162 3 275 3 139 7 11 1 321 6 213 1 143 3 299 1 314 4 80 1 52 2 229 3 
162 3 17 1 139 18 213 3 321 4 295 2 323 2 143 1 299 1 300 1 76 4 267 1 348 8 350 1 77 4 240 1 28 4 80 2 52 1 54 1 106 1 174 1 275 1 276 1 11 1 279 2 205 1 314 8 315 1 317 1 229 10 16 1 90 4 
275 1 139 2 213 1 321 1 323 1 76 1 315 1 348 2 77 1 28 1 229 2 90 1 
162 1 275 1 139 4 321 2 213 1 295 1 323 1 76 1 314 2 315 1 348 2 77 1 317 1 28 1 80 1 229 2 90 1 
54 1 162 1 275 1 139 3 279 1 321 2 143 1 76 3 350 1 314 2 315 1 348 6 77 3 28 3 230 1 229 1 90 3 
162 7 139 34 213 5 321 12 295 3 323 3 143 3 299 1 76 5 350 1 348 10 77 5 121 1 8 1 28 5 80 5 52 1 273 1 54 3 106 3 174 1 275 5 276 1 202 1 11 2 279 2 205 4 314 18 315 1 317 3 159 1 230 1 229 16 90 5 
162 2 54 1 174 1 275 1 11 1 139 8 213 1 321 3 279 1 143 1 299 1 76 2 314 4 348 4 77 2 28 2 80 1 229 4 52 1 90 2 
212 1 54 1 162 2 174 1 11 1 139 6 321 2 213 1 143 1 299 1 314 3 80 1 52 1 229 3 
162 1 275 1 139 4 321 2 213 1 295 1 323 1 76 1 314 2 348 2 77 1 317 1 28 1 80 1 159 1 229 2 90 1 
162 1 106 1 275 1 276 1 139 7 213 1 321 2 295 1 205 2 323 1 314 4 121 1 317 1 80 1 229 3 
162 5 139 23 321 9 213 3 295 2 323 2 143 2 299 1 76 2 348 4 77 2 121 1 28 2 80 3 52 1 54 2 106 2 174 1 275 4 11 1 279 2 221 1 205 2 86 1 314 12 317 2 229 11 230 1 90 2 
314 1 139 1 205 1 
106 1 139 1 229 1 
162 2 275 1 139 6 213 1 321 3 295 1 190 1 323 1 76 1 348 2 314 3 77 1 317 1 28 1 159 1 80 1 229 3 90 1 
162 1 17 1 139 12 213 2 321 2 295 2 323 2 300 1 76 1 267 1 348 2 77 1 28 1 240 1 80 2 106 1 275 1 276 1 205 1 314 6 315 1 317 2 229 6 90 1 16 1 
54 1 162 1 275 1 11 1 139 6 213 1 321 2 143 1 314 3 80 1 229 3 
162 1 54 1 275 1 139 3 321 2 279 1 143 1 299 1 76 1 314 2 348 2 77 1 28 1 229 1 52 1 230 1 90 1 
200 1 266 1 137 1 372 1 64 1 128 1 100 1 
137 1 200 1 93 1 379 1 128 1 100 1 266 1 372 1 51 1 64 1 255 1 29 1 
369 1 13 1 285 4 312 1 4 4 347 4 370 1 360 1 209 1 79 1 290 1 173 1 125 1 
107 1 235 1 285 2 4 2 347 2 370 1 360 1 194 1 63 1 184 1 79 2 146 1 306 1 173 1 
12 1 248 1 369 1 13 1 297 1 285 4 312 1 4 5 347 5 370 2 360 2 209 1 184 1 79 2 290 1 173 3 
354 1 12 1 369 1 13 1 297 1 285 4 312 1 4 5 347 5 370 2 360 2 209 1 184 1 79 2 290 1 173 3 
4 1 360 1 347 1 228 1 216 1 364 1 79 1 9 1 285 1 290 1 
4 2 360 1 370 1 347 2 12 1 352 1 79 1 204 1 285 2 173 1 312 1 
212 1 4 1 360 1 370 1 347 1 209 1 79 1 369 1 285 1 290 1 173 1 
200 2 243 1 95 1 189 1 118 1 128 1 235 1 285 1 100 2 4 1 370 1 347 1 360 1 372 1 79 1 328 1 290 1 173 1 
42 1 95 2 71 1 118 1 189 1 235 2 169 1 23 1 100 2 4 1 347 1 370 2 372 2 328 1 79 1 173 3 243 1 200 2 128 1 285 1 360 1 252 1 184 1 
42 1 68 1 95 2 71 1 118 1 189 1 235 2 169 1 23 1 100 2 4 2 347 2 370 2 372 2 328 1 79 1 173 3 125 1 200 2 128 1 285 2 360 1 252 1 184 1 
42 1 19 1 235 1 169 1 4 3 347 3 370 1 27 1 79 1 198 1 173 4 241 1 125 1 242 2 105 2 285 3 360 1 37 1 184 1 89 1 341 1 290 1 211 1 
42 1 105 2 19 1 235 1 169 1 285 3 4 3 370 1 347 3 360 1 27 1 327 1 89 1 79 1 184 1 341 1 290 1 241 1 211 1 173 4 125 1 242 2 
4 1 360 1 347 1 94 1 79 1 285 1 
107 1 94 1 12 1 248 1 355 1 235 1 297 1 285 6 98 1 265 1 312 1 4 7 347 7 370 2 360 2 63 1 352 1 79 3 290 2 173 3 124 1 
162 2 139 6 213 1 321 2 214 1 95 1 189 1 118 1 235 1 143 1 299 1 100 2 76 2 4 1 370 1 348 4 347 1 77 2 101 2 239 1 372 1 28 2 377 2 80 1 79 1 328 1 52 1 173 1 330 1 200 2 243 1 54 1 174 1 277 1 11 1 247 1 249 1 128 2 285 1 312 1 287 1 314 3 360 1 340 1 229 3 90 2 319 1 
19 1 167 1 4 1 347 1 145 2 193 2 27 1 123 1 327 1 241 1 173 2 126 1 242 3 274 1 105 3 246 1 285 1 224 1 112 1 59 2 85 1 226 2 89 1 341 2 39 1 290 1 381 1 211 1 
94 1 117 1 235 1 285 2 312 1 4 2 347 2 370 1 360 1 27 1 79 2 173 2 124 1 
200 2 68 1 95 1 189 1 118 1 128 1 235 1 285 1 100 2 4 1 370 1 347 1 360 1 372 1 79 1 328 1 290 1 173 1 
4 1 360 1 370 1 347 1 107 1 63 1 355 1 79 2 184 1 235 1 285 1 173 1 124 1 
361 1 151 1 179 1 128 1 336 1 
244 1 105 2 150 1 71 1 151 1 21 1 179 2 128 1 167 1 23 1 336 2 361 2 252 1 89 1 318 1 272 1 241 1 211 1 242 2 
200 1 258 1 92 1 259 1 361 1 372 1 151 1 179 1 100 1 
151 1 21 1 318 1 
171 1 24 1 245 1 371 1 38 1 236 1 148 1 215 1 
171 1 87 2 245 1 270 1 110 1 236 2 148 2 2 1 215 1 
245 1 236 2 119 1 2 1 215 1 24 1 171 1 371 1 38 1 365 1 329 1 148 2 
171 1 24 1 245 1 325 1 371 1 281 2 38 1 115 2 236 3 148 3 192 1 215 1 
245 2 55 1 131 2 144 1 
171 1 24 1 293 1 236 1 148 1 215 1 
171 1 24 1 245 1 371 1 362 1 38 1 236 2 2 1 148 2 215 1 
97 1 
171 1 24 1 245 1 371 1 38 1 236 1 148 1 215 1 
245 1 236 3 2 1 215 1 24 1 171 1 371 1 362 1 115 1 38 1 148 3 
245 1 270 1 110 1 236 1 148 1 2 1 
245 1 38 1 
212 1 245 1 371 1 38 1 
171 1 245 1 371 1 38 1 236 1 148 1 215 1 
36 1 203 1 236 1 
171 1 24 1 245 1 325 1 371 1 281 1 303 1 38 1 115 2 236 3 148 3 215 1 
171 1 245 1 371 1 38 1 236 2 180 1 2 1 148 2 215 1 
87 1 171 1 24 1 245 1 6 1 270 1 236 1 148 1 215 1 
171 1 24 1 245 1 38 1 236 1 148 1 215 1 
171 1 24 1 371 1 38 2 236 1 148 1 215 1 
245 1 236 2 58 1 215 2 24 1 171 2 130 1 38 1 148 2 133 1 
87 1 171 1 24 1 245 1 359 1 362 1 270 1 110 1 236 2 2 1 148 2 215 1 
245 1 32 1 220 1 236 2 2 1 215 1 24 1 171 1 371 1 228 1 216 2 38 1 9 1 148 2 331 1 
87 1 171 1 24 1 245 1 280 1 270 1 110 1 236 2 180 1 2 1 148 2 215 1 

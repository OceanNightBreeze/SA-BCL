#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 169 
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 255 233 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 255 (92,265) 40 271 (29,154) 166 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 255 (17,239) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 255 (92,265) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 255 (92,265) 40 271 (29,154) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval; | RETURN | 1989 | return null
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z | ASSIGN | 4081 | = null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
289 1 172 1 318 2 274 1 99 1 321 6 323 5 352 1 100 1 355 2 258 1 36 1 302 9 240 3 211 2 192 4 130 1 335 1 132 1 336 1 260 9 374 1 25 2 268 1 246 2 343 2 137 2 168 1 
289 1 172 1 318 2 274 1 99 1 321 6 323 5 352 1 100 1 355 2 258 1 36 1 302 9 240 3 211 2 192 4 130 1 335 1 132 1 336 1 260 9 374 1 246 2 25 2 268 1 137 2 168 1 343 2 
289 1 172 1 318 2 274 1 99 1 321 7 323 6 352 1 100 1 355 2 258 1 36 1 302 10 240 4 211 2 192 5 130 1 335 1 132 1 336 1 260 10 374 1 246 2 25 2 268 1 137 2 168 1 343 2 
289 1 172 1 318 2 274 1 321 4 323 4 352 1 100 1 355 2 258 1 36 1 302 7 240 2 211 2 192 3 130 1 335 1 132 1 336 1 260 7 374 1 246 2 25 2 268 1 137 2 168 1 343 1 
240 1 302 4 318 1 211 1 130 1 192 2 335 1 132 1 99 1 260 4 321 3 323 3 100 1 355 1 246 1 137 1 343 2 258 1 
172 1 302 2 318 1 211 1 319 1 335 1 132 1 260 2 323 1 100 1 355 1 93 1 268 1 25 1 137 1 279 1 
302 3 240 1 318 2 192 1 335 1 132 1 260 3 321 1 323 2 374 1 100 1 25 1 137 2 
289 1 37 1 302 9 240 3 318 2 211 1 164 1 130 1 192 4 335 1 132 1 99 1 260 9 321 7 323 5 374 1 100 1 355 1 246 1 25 1 258 1 343 2 168 1 137 2 
289 1 37 1 302 9 240 3 318 2 211 1 164 1 130 1 192 4 335 1 132 1 99 1 260 9 321 7 323 5 374 1 100 1 355 1 246 1 25 1 258 1 343 2 168 1 137 2 
273 1 156 1 169 1 
273 1 91 1 193 2 
35 2 96 2 158 2 146 1 177 2 147 2 375 2 75 1 
96 2 177 2 56 1 75 1 275 1 276 1 143 1 158 3 350 2 181 1 353 1 234 1 10 1 208 1 35 2 12 1 105 2 146 1 126 1 190 1 189 1 301 2 163 2 127 1 147 2 14 1 16 1 87 1 371 1 18 1 308 1 310 1 20 2 375 3 92 1 314 1 94 1 
35 1 96 1 158 1 146 1 177 1 147 1 375 1 148 1 88 1 293 1 
35 1 251 1 273 1 156 1 178 1 368 1 293 1 33 1 158 1 232 1 375 1 376 1 23 1 116 1 
96 1 35 1 251 2 273 1 147 1 177 1 156 1 293 1 33 1 158 1 232 1 375 1 376 1 23 2 116 1 
247 1 251 1 79 1 3 1 23 1 
247 1 251 2 79 1 273 1 115 1 291 1 156 1 23 2 
251 1 79 1 23 1 
247 1 96 1 35 1 146 1 251 1 282 1 147 1 177 1 148 1 88 1 293 1 158 1 375 1 23 1 
273 1 
247 1 251 2 79 1 273 1 115 1 156 1 140 1 23 2 
170 1 247 2 300 1 251 5 273 1 176 1 156 1 28 1 157 1 106 1 141 2 68 2 242 1 47 1 79 2 115 1 23 5 102 2 63 1 
75 1 169 1 
35 2 96 1 303 1 147 1 177 1 75 2 158 2 375 2 51 1 
252 1 69 1 71 1 
83 1 105 1 126 1 301 1 75 1 276 1 371 1 143 1 308 1 158 1 353 1 20 1 234 1 375 1 92 1 314 1 
96 1 35 1 105 1 126 1 301 1 177 1 276 1 143 1 371 1 308 1 158 2 263 1 353 1 234 1 20 1 375 2 152 1 71 1 92 1 314 1 
35 3 96 3 158 3 147 1 177 3 375 3 152 1 75 1 
35 1 96 1 158 1 177 1 375 1 148 1 293 1 
35 1 96 1 158 1 303 1 177 1 147 1 375 1 51 1 293 1 
96 3 251 1 177 3 56 1 75 1 276 1 143 1 293 1 33 1 158 4 232 1 350 1 181 1 353 1 234 1 8 1 10 1 35 3 105 1 146 1 126 1 190 1 189 1 301 1 163 2 127 1 147 2 14 1 86 1 87 1 371 1 308 1 310 1 263 1 20 1 375 4 152 1 376 1 92 1 51 1 23 1 314 1 94 1 116 1 
35 2 96 1 158 2 136 1 177 1 178 1 375 2 152 1 75 1 
96 3 35 3 251 1 147 1 273 1 177 3 293 1 33 1 158 3 232 1 263 1 375 3 152 2 340 1 8 1 376 1 51 1 23 1 116 1 
96 2 35 2 147 1 177 2 158 2 69 1 375 2 152 1 51 1 71 1 
105 1 126 1 301 1 75 1 276 1 371 1 143 1 308 1 158 1 353 1 20 1 234 1 375 1 92 1 314 1 
105 1 239 1 126 1 301 1 174 1 75 1 276 1 371 1 143 1 308 1 158 1 20 1 234 1 375 1 314 1 
26 1 53 1 173 1 252 2 275 2 349 1 350 4 181 1 124 1 190 1 189 1 64 1 163 2 127 1 14 1 87 2 369 1 310 1 372 1 69 2 264 1 71 2 341 1 218 1 
35 1 96 1 232 1 158 1 177 1 375 1 7 1 293 1 
96 4 35 5 345 1 177 4 147 1 178 1 75 1 158 5 263 1 136 1 375 5 152 2 51 1 187 1 
35 2 96 2 158 2 177 2 375 2 7 1 148 1 293 1 
150 1 160 1 
150 1 160 1 
104 1 70 1 
104 1 70 1 
104 1 70 1 
150 1 283 1 160 1 
150 1 283 1 160 1 
150 1 167 1 160 1 
104 1 150 2 351 1 70 1 131 1 160 2 
150 1 283 1 160 1 
150 1 238 1 160 1 
150 1 238 1 160 1 
150 1 238 1 160 1 
1 1 315 1 249 1 222 1 251 2 363 2 273 1 365 3 334 1 306 2 89 2 120 2 150 2 322 1 214 2 351 1 21 1 23 2 160 2 
96 2 221 1 222 1 316 1 251 1 177 2 55 1 75 1 120 1 158 2 58 1 160 1 35 2 363 1 365 1 306 1 89 1 67 1 150 1 243 1 375 2 217 1 23 1 167 1 
211 1 355 1 246 1 
211 1 355 1 93 1 
312 1 211 3 93 1 246 2 269 1 297 1 
312 1 211 2 356 1 93 1 246 1 269 1 
312 2 211 2 93 1 246 1 269 1 
247 4 170 3 72 2 316 1 53 1 251 5 346 1 176 1 273 2 156 1 141 1 203 1 4 2 79 1 102 1 64 1 193 3 67 1 337 1 46 1 68 1 109 2 372 1 19 1 242 2 286 1 243 1 115 1 91 1 23 5 218 1 288 1 
247 7 170 8 72 6 53 3 250 1 97 1 251 9 346 2 273 5 176 1 28 1 3 5 156 1 141 2 202 1 4 6 79 6 102 2 236 1 123 5 328 1 64 3 193 9 43 1 67 4 68 2 372 3 19 3 242 6 286 2 115 1 91 3 23 9 218 3 288 1 
247 2 170 3 72 2 53 1 251 3 346 1 273 3 156 1 28 1 141 1 203 1 4 2 102 1 64 1 193 4 67 1 46 1 68 1 109 1 19 1 372 1 242 2 286 1 91 2 23 3 218 1 
170 5 247 3 72 4 53 2 97 1 251 4 346 1 273 4 156 1 28 1 141 1 203 1 4 4 102 1 236 1 328 1 64 2 193 7 67 2 46 1 68 1 109 2 19 2 372 2 242 4 286 1 91 3 23 4 218 2 
255 1 169 1 
185 1 276 1 
259 1 
234 1 276 1 
361 1 233 1 255 1 234 1 314 1 276 1 
234 1 314 1 276 1 
360 1 276 1 
53 1 27 1 304 1 87 3 349 3 275 4 142 1 119 1 112 1 350 7 341 2 218 1 209 1 62 1 198 1 138 2 139 1 
53 1 27 1 304 1 87 3 349 3 275 4 142 1 119 1 112 1 350 7 341 2 218 1 209 1 62 1 198 1 138 2 139 1 
299 1 53 1 27 1 304 1 87 3 349 3 275 4 142 1 119 1 112 1 350 7 341 2 218 1 209 1 62 1 198 1 138 2 139 1 
223 1 53 4 27 1 76 4 275 16 349 10 142 2 119 2 295 1 159 1 350 31 181 1 324 1 209 5 62 1 298 1 190 1 189 1 163 2 64 3 364 1 304 1 14 1 87 15 19 3 372 3 112 2 215 1 341 5 287 3 218 4 198 2 139 1 138 3 
53 1 27 1 275 5 349 4 119 1 142 1 350 9 181 2 209 1 62 1 190 2 189 2 163 4 333 1 364 1 304 1 14 2 87 4 112 1 113 1 341 3 218 1 198 1 138 2 
0 1 2 1 318 1 348 1 179 1 143 1 321 1 323 1 204 1 6 1 100 1 355 1 297 1 105 1 330 1 331 1 126 1 301 1 302 2 211 2 335 1 132 1 260 2 20 1 22 1 377 1 93 1 246 1 25 1 137 1 
0 1 2 1 318 1 98 1 348 1 143 1 254 1 321 2 323 1 204 1 6 1 100 1 355 1 297 1 327 1 105 1 330 1 331 1 126 1 301 1 302 3 211 2 132 1 260 3 20 1 22 1 93 1 246 1 25 1 137 1 
0 1 348 1 143 1 254 1 321 2 323 1 204 1 6 1 100 1 355 1 297 1 327 1 105 1 330 1 331 1 126 1 301 1 302 2 211 2 132 1 260 2 20 1 93 1 25 1 246 1 
0 2 318 1 98 1 30 1 180 1 276 1 143 1 204 2 206 1 234 1 358 1 105 1 330 2 126 1 332 1 301 1 302 1 371 1 260 1 20 1 197 1 25 2 137 1 
0 1 2 1 318 1 348 1 143 1 204 1 6 1 355 1 297 1 327 1 105 1 330 1 331 1 126 1 301 1 302 1 211 2 335 1 260 1 20 1 22 1 377 1 93 1 246 1 25 1 137 1 
82 1 
170 2 273 2 176 1 178 1 141 1 57 2 276 1 143 1 232 1 234 1 59 1 102 1 188 2 105 2 149 2 191 1 193 2 194 1 195 1 285 1 68 1 242 2 111 1 115 3 20 2 23 5 342 2 116 1 251 5 346 1 156 1 73 2 30 1 293 1 33 1 158 1 80 2 206 1 79 6 296 2 354 4 357 1 34 1 35 1 210 1 126 1 301 2 368 1 371 2 48 1 375 1 91 2 376 1 266 1 52 1 
251 3 178 1 140 1 293 1 33 1 158 1 232 1 79 2 59 1 296 1 354 2 34 1 35 1 191 1 368 1 48 1 115 1 375 1 376 1 23 3 266 1 116 1 
251 3 273 1 178 1 73 1 156 1 140 1 293 1 33 1 158 1 232 1 79 1 59 1 354 3 34 1 35 1 191 1 368 1 48 1 115 1 375 1 376 1 23 3 266 1 116 1 
251 3 273 1 140 1 178 1 73 1 156 1 293 1 33 1 158 1 232 1 79 2 59 1 296 1 354 3 34 1 35 1 191 1 149 1 368 1 48 1 115 1 375 1 376 1 23 3 266 1 116 1 
170 1 273 5 176 1 140 1 178 1 226 1 141 1 57 2 232 1 182 1 59 1 102 1 188 2 149 4 191 1 68 1 242 1 115 3 23 5 342 2 116 1 251 5 73 4 156 5 293 1 33 1 158 1 79 7 80 2 296 4 354 6 357 1 34 1 35 1 210 1 368 1 307 1 134 1 48 1 375 1 91 2 376 1 266 1 267 1 
170 1 176 1 273 2 178 1 141 1 57 2 232 1 59 1 102 1 188 2 191 1 149 2 193 2 68 1 242 1 115 2 23 4 342 2 116 1 251 4 73 2 156 1 293 1 33 1 158 1 80 2 79 4 296 2 354 4 357 1 34 1 35 1 210 1 368 1 48 1 375 1 91 2 376 1 266 1 52 1 
170 1 251 4 273 1 176 1 156 1 73 2 178 1 226 1 141 1 57 2 293 1 33 1 158 1 232 1 79 4 80 2 296 2 59 1 354 4 357 1 102 1 34 1 188 2 35 1 210 1 149 2 191 1 368 1 134 1 68 1 242 1 48 1 115 2 375 1 91 2 376 1 23 4 266 1 342 2 267 1 116 1 
170 1 251 4 273 1 176 1 156 1 73 2 178 1 226 1 141 1 57 2 293 1 33 1 158 1 232 1 79 4 80 2 296 2 59 1 354 4 357 1 102 1 34 1 188 2 35 1 210 1 149 2 191 1 368 1 134 1 68 1 242 1 48 1 115 2 375 1 91 2 376 1 23 4 266 1 342 2 267 1 116 1 
170 1 251 4 273 1 317 2 176 1 156 1 73 2 178 1 320 1 141 1 293 1 33 1 158 1 232 1 79 4 122 1 296 2 59 1 354 4 257 2 102 1 34 1 188 2 35 1 210 1 149 2 191 1 193 2 368 1 68 1 242 1 48 1 115 2 375 1 376 1 23 4 266 1 342 2 267 1 116 1 95 1 
170 1 251 4 273 1 176 1 156 1 178 1 73 3 226 1 141 1 57 2 293 1 33 1 158 1 232 1 80 2 182 1 79 5 59 1 296 3 354 5 357 1 102 1 34 1 188 2 35 1 210 1 191 1 149 3 368 1 134 1 68 1 242 1 48 1 115 2 375 1 91 2 376 1 23 4 266 1 342 2 267 1 116 1 
170 1 251 4 273 1 176 1 156 1 178 1 73 3 226 1 141 1 57 2 293 1 33 1 158 1 232 1 80 2 182 1 79 5 59 1 296 3 354 5 357 1 102 1 34 1 188 2 35 1 210 1 191 1 149 3 368 1 134 1 68 1 242 1 48 1 115 2 375 1 91 2 376 1 23 4 266 1 342 2 267 1 116 1 
170 1 176 1 317 2 273 1 178 1 141 1 232 1 59 1 102 1 188 2 191 1 149 2 193 2 68 1 242 1 115 2 23 4 342 2 116 1 251 4 73 2 156 1 293 1 33 1 158 1 79 4 122 1 296 2 354 4 257 2 34 1 35 1 210 1 368 1 48 1 375 1 376 1 266 1 52 1 
53 1 27 1 173 1 252 1 75 2 349 2 275 3 142 1 350 6 181 1 62 1 190 1 189 1 163 2 127 1 304 1 14 1 87 3 310 1 112 1 69 1 71 1 341 2 218 1 169 1 138 1 
53 2 272 1 54 1 252 11 75 1 349 2 76 3 275 8 350 14 181 2 324 1 61 1 10 1 209 1 186 1 190 2 189 2 163 4 127 2 64 1 14 2 87 6 18 1 241 1 310 1 19 2 372 2 215 1 69 4 341 1 71 11 287 3 218 1 
96 1 177 1 75 1 275 1 276 1 143 1 158 2 78 1 350 2 181 1 353 1 234 1 10 1 359 1 35 1 83 1 105 1 126 1 301 1 189 1 190 1 127 1 163 2 14 1 87 1 371 1 308 1 241 1 309 1 18 1 310 1 263 1 20 1 69 1 375 2 152 1 92 1 314 1 
220 1 96 1 270 2 53 3 177 1 56 2 275 10 276 2 142 1 143 2 181 3 234 2 10 1 62 1 327 1 105 3 190 3 189 3 64 2 14 3 18 1 241 1 19 2 112 1 20 3 69 7 152 1 341 4 71 7 199 2 27 1 154 2 252 7 75 2 349 8 158 3 350 20 205 2 353 2 209 4 35 1 126 2 301 3 163 6 127 3 304 1 87 10 371 1 308 2 310 3 372 2 263 1 375 3 50 1 92 2 218 3 314 2 219 1 138 1 
96 1 173 1 155 1 177 1 179 1 275 1 30 1 276 3 143 2 158 1 350 2 181 2 5 1 206 1 234 2 10 1 208 2 35 1 327 1 105 7 126 2 84 1 301 8 190 2 189 2 162 1 163 4 127 2 14 2 65 1 87 1 371 2 18 1 310 2 311 1 20 8 375 1 313 1 152 1 
96 1 53 1 252 1 177 1 349 1 275 1 158 1 350 3 181 1 207 1 35 1 190 1 189 1 147 1 163 2 127 1 64 1 14 1 87 2 241 1 310 1 19 1 372 1 69 1 375 1 341 1 71 1 51 1 218 1 
53 1 252 1 173 1 189 1 190 1 127 1 163 2 14 1 349 1 369 1 275 2 310 1 372 1 350 2 181 1 69 1 71 1 209 1 
26 1 252 1 173 1 189 1 190 1 127 1 163 2 64 1 14 1 349 1 87 2 310 1 350 2 181 1 69 1 341 1 71 1 218 1 
53 1 173 1 252 2 275 2 349 2 350 4 181 1 209 1 190 1 189 1 163 2 127 1 64 1 14 1 87 2 310 1 372 1 19 1 69 2 71 2 341 1 218 1 
53 1 84 1 252 1 189 1 190 1 127 1 163 2 14 1 349 1 369 1 275 2 310 1 372 1 350 2 181 1 69 1 71 1 209 1 
26 1 84 1 252 1 189 1 190 1 127 1 163 2 64 1 14 1 349 1 87 2 310 1 350 2 181 1 69 1 341 1 71 1 218 1 
53 1 252 2 275 2 349 2 350 4 181 1 209 1 84 1 190 1 189 1 163 2 127 1 64 1 14 1 87 2 310 1 372 1 19 1 69 2 71 2 341 1 218 1 
53 1 252 2 275 2 349 2 350 4 181 1 209 1 190 1 189 1 163 2 127 1 64 1 14 1 87 2 310 1 372 1 19 1 69 2 71 2 341 1 218 1 
56 1 75 1 275 1 276 1 143 1 158 1 350 2 181 1 353 1 234 1 10 1 105 1 126 1 301 1 189 1 190 1 127 1 163 2 14 1 87 1 371 1 18 1 308 1 310 1 20 1 375 1 92 1 314 1 
174 1 75 1 275 1 276 1 143 1 158 1 350 2 181 1 234 1 10 1 105 1 126 1 239 1 301 1 189 1 190 1 127 1 163 2 14 1 87 1 371 1 18 1 308 1 310 1 110 1 20 1 375 1 314 1 
53 1 252 2 275 2 349 2 350 4 181 1 209 1 190 1 189 1 163 2 127 1 64 1 14 1 87 2 241 1 310 1 372 1 19 1 69 2 71 2 341 1 218 1 
53 1 252 2 56 1 349 2 275 2 179 1 276 1 143 1 158 1 350 4 181 1 353 1 205 1 234 1 209 1 105 1 126 1 301 1 189 1 190 1 64 1 127 1 163 2 14 1 87 2 308 1 310 1 372 1 19 1 20 1 69 2 375 1 341 1 71 2 92 1 218 1 314 1 
96 1 53 1 252 1 177 1 349 1 275 2 158 1 350 3 181 1 209 1 35 1 190 1 189 1 362 1 64 1 147 1 163 2 127 1 14 1 87 1 241 1 310 1 19 1 372 1 375 1 69 1 51 1 71 1 218 1 
248 1 53 2 76 2 275 6 349 3 350 13 181 2 324 1 101 1 209 1 280 1 190 2 189 2 163 4 333 1 64 2 128 1 212 1 14 2 87 7 284 1 19 2 372 2 373 1 215 1 49 1 341 2 287 1 218 2 
53 3 32 1 349 2 275 13 76 2 77 1 350 24 181 3 101 1 209 1 280 2 281 1 190 3 189 3 364 2 163 6 333 1 64 2 128 3 212 1 14 3 87 11 44 1 45 1 284 2 261 1 19 3 372 3 215 2 135 1 49 1 341 1 218 2 287 2 
248 1 53 2 76 2 275 6 349 2 350 13 181 2 324 1 101 1 209 1 280 1 281 1 190 2 189 2 163 4 333 1 64 2 128 1 212 1 14 2 87 7 284 1 19 2 372 2 215 1 49 1 341 1 287 1 218 2 
248 1 53 2 76 2 275 6 349 2 350 13 181 2 324 1 101 1 209 1 280 1 281 1 190 2 189 2 163 4 333 1 64 2 128 1 212 1 14 2 87 7 284 1 19 2 372 2 215 1 49 1 341 1 287 1 218 2 
53 8 27 1 32 1 76 4 275 26 349 13 142 1 77 1 350 50 181 2 324 2 101 1 209 7 62 1 186 2 280 1 281 1 190 2 189 2 364 1 163 4 333 1 64 7 304 1 128 3 212 1 14 2 87 24 44 1 45 1 284 1 261 1 19 7 372 7 112 1 135 1 215 2 49 1 341 6 287 4 218 8 138 1 
1 1 150 1 120 1 351 1 363 1 201 1 334 1 306 1 160 1 89 1 
221 1 167 1 
150 1 120 1 363 1 339 1 292 1 306 1 107 1 160 1 89 1 
1 1 315 1 249 1 222 1 251 1 363 1 273 1 365 2 334 1 306 1 89 1 120 1 150 1 214 1 351 1 21 1 23 1 160 1 
1 1 315 1 249 1 222 1 251 1 363 1 273 1 365 2 334 1 306 1 89 1 120 1 150 1 214 1 351 1 21 1 23 1 160 1 
1 1 315 1 249 1 222 1 251 1 363 1 273 1 365 2 334 1 306 1 89 1 120 1 150 1 214 1 351 1 21 1 23 1 160 1 
294 1 283 1 131 1 
294 1 283 1 131 1 
238 1 228 1 
238 1 131 1 228 1 
55 1 217 1 
247 1 96 2 315 1 221 1 316 1 251 1 177 2 55 1 75 1 120 1 158 2 58 1 160 1 35 2 363 1 365 1 129 1 306 1 89 1 67 1 150 1 214 1 243 1 375 2 217 1 23 1 167 1 
294 1 283 1 
238 1 131 1 228 1 
275 1 276 1 143 1 158 2 350 2 181 1 5 1 234 1 277 1 326 1 10 1 208 2 35 2 105 2 126 1 301 2 189 1 190 1 127 1 41 1 163 2 14 1 66 1 87 1 241 1 18 1 310 1 311 1 20 2 375 2 24 1 
327 1 105 2 330 1 126 1 301 2 211 2 348 1 179 1 143 1 338 1 20 2 244 1 6 1 22 1 355 1 93 1 145 1 246 1 297 1 
327 1 105 1 330 1 126 1 301 1 211 2 348 1 143 1 121 1 20 1 6 1 22 1 355 1 93 1 145 1 246 1 297 1 
105 1 330 1 126 1 13 1 332 1 301 1 30 1 276 1 143 1 371 1 206 1 234 1 20 1 244 1 
327 1 105 1 330 1 126 1 301 1 211 2 348 1 143 1 338 1 20 1 244 1 6 1 22 1 355 1 93 1 145 1 246 1 297 1 
125 1 
170 1 242 1 273 1 156 1 106 1 63 1 169 1 
170 1 251 1 176 1 273 2 156 1 141 1 57 1 80 1 79 1 357 1 102 1 193 1 68 1 242 1 115 1 91 1 23 1 
170 1 271 1 346 1 176 1 225 1 141 1 29 1 276 3 143 1 255 1 79 1 234 1 185 2 102 1 105 1 361 1 126 2 40 1 301 1 371 1 68 1 166 1 20 1 265 1 314 1 
170 8 72 5 53 2 251 1 346 1 200 1 176 2 273 5 156 2 141 2 32 1 76 1 231 1 230 2 4 5 79 1 183 1 102 2 64 2 193 6 44 1 45 1 68 2 261 1 19 2 372 2 111 1 215 1 242 5 135 1 115 1 91 3 23 1 287 1 218 2 
170 2 96 1 53 2 251 1 27 1 200 1 176 1 177 1 226 1 141 1 293 1 142 1 230 2 158 1 102 1 35 1 146 1 282 1 147 1 148 1 88 1 213 1 68 1 112 1 242 2 375 1 23 1 218 1 
170 1 176 1 273 1 156 1 106 1 141 1 68 1 242 1 102 1 63 1 
170 5 72 5 199 1 53 2 200 1 273 5 64 2 193 10 230 2 4 5 19 2 372 2 242 5 91 5 218 2 
251 1 79 1 273 1 115 1 156 1 23 1 
170 2 117 1 251 3 175 1 346 2 176 1 28 1 141 2 30 1 276 1 143 1 79 4 206 1 234 1 102 2 103 1 235 2 105 4 126 1 301 4 194 1 371 2 195 1 68 2 111 2 242 2 20 4 115 2 23 3 
96 2 177 2 56 1 75 1 276 1 143 1 158 3 350 1 181 1 353 1 234 1 10 1 35 2 105 1 146 1 126 1 190 1 301 1 189 1 163 2 147 2 127 1 14 1 87 1 371 1 308 1 310 1 20 1 375 3 92 1 94 1 314 1 
170 1 72 2 346 1 176 1 273 4 156 2 193 4 141 1 4 2 68 1 242 2 111 1 91 2 102 1 138 1 
363 1 306 1 9 1 
363 1 306 1 9 1 
363 1 74 1 55 1 334 1 306 1 
363 1 306 1 9 1 
363 1 306 1 60 1 
363 1 306 1 60 1 
363 1 306 1 60 1 
363 1 306 1 
150 1 160 1 
53 1 27 1 189 2 190 2 163 4 364 1 304 1 14 2 87 4 275 4 349 3 142 1 350 8 112 1 181 2 341 2 218 1 209 1 62 1 138 1 
53 1 27 1 304 1 87 3 349 2 275 3 142 1 112 1 350 6 341 2 218 1 62 1 169 1 138 1 
53 1 189 1 190 1 64 1 163 2 14 1 87 2 349 2 275 2 19 1 372 1 350 4 325 1 181 1 341 1 218 1 209 1 
53 1 64 1 76 2 87 4 275 3 349 2 19 1 372 1 215 1 350 7 324 1 341 1 218 1 287 1 209 1 
53 3 27 1 347 1 349 9 275 11 76 2 142 2 350 23 324 1 181 2 61 1 209 4 62 1 186 1 189 2 190 2 64 2 364 2 163 4 304 1 14 2 87 12 372 2 19 2 112 2 341 5 287 2 218 3 138 1 
350 1 87 1 76 1 
350 1 275 1 287 1 
199 1 53 1 190 1 189 1 163 2 64 1 14 1 87 3 275 3 349 3 19 1 372 1 350 6 181 1 325 1 341 2 209 1 218 1 
53 2 76 1 275 6 349 2 32 1 350 12 181 1 209 1 190 1 189 1 163 2 333 1 64 2 14 1 87 6 44 1 45 1 261 1 19 2 372 2 215 1 135 1 341 1 287 1 218 2 
53 1 27 1 275 3 87 3 349 2 142 1 350 6 112 1 341 1 218 1 209 1 
347 1 189 1 190 1 364 1 163 2 304 1 14 1 275 1 349 2 87 2 142 1 112 1 350 3 181 1 341 1 209 1 62 1 
53 2 27 1 190 1 189 1 163 2 333 1 14 1 349 5 275 5 87 5 213 1 142 2 112 2 350 10 181 1 341 3 209 2 218 2 
53 1 189 1 190 1 333 1 163 2 14 1 275 2 349 1 372 1 350 2 181 1 209 1 
53 1 189 1 190 1 64 1 333 1 163 2 14 1 87 2 349 2 275 2 19 1 372 1 350 4 181 1 341 1 218 1 209 1 
248 1 347 1 189 3 190 3 364 1 333 1 163 6 14 3 87 2 349 2 275 1 142 1 350 3 112 1 181 3 341 1 209 1 
248 1 53 5 27 2 347 1 76 4 275 16 349 12 142 3 159 1 295 1 350 34 325 1 181 5 324 1 209 5 62 1 298 1 190 5 189 5 364 2 163 10 333 1 64 3 304 1 14 5 87 18 19 3 372 3 112 3 215 1 341 7 287 3 218 5 138 1 
53 1 27 1 76 1 275 4 349 2 142 1 350 8 181 1 62 1 190 1 189 1 163 2 333 1 304 1 14 1 87 4 261 1 215 1 112 1 341 2 218 1 287 1 138 1 
53 2 27 1 76 2 275 6 349 3 142 1 350 11 181 2 325 1 324 1 209 1 62 1 190 2 189 2 333 1 163 4 304 1 14 2 87 5 261 1 19 1 372 1 112 1 215 1 341 2 218 1 287 1 138 1 
53 3 27 1 32 1 76 1 275 9 349 4 142 1 350 19 325 1 181 3 209 1 62 1 190 3 189 3 163 6 333 1 64 2 364 1 304 1 14 3 87 10 44 1 45 1 261 1 19 2 372 2 112 1 215 1 135 1 341 3 287 1 218 3 138 1 
53 3 27 1 76 1 275 10 349 5 32 1 142 1 350 17 325 1 181 3 209 2 62 1 190 3 189 3 364 1 163 6 333 1 64 1 304 1 14 3 87 7 44 1 45 1 261 1 19 2 372 2 112 1 215 1 135 1 341 3 287 1 218 2 138 1 
53 1 27 1 76 1 275 4 349 2 142 1 350 8 181 1 62 1 190 1 189 1 163 2 333 1 304 1 14 1 87 4 261 1 215 1 112 1 341 2 218 1 287 1 138 1 
53 2 76 1 275 6 349 2 32 1 350 12 181 1 209 1 190 1 189 1 163 2 333 1 64 2 14 1 87 6 44 1 45 1 261 1 19 2 372 2 215 1 135 1 341 1 287 1 218 2 
53 3 27 1 32 1 76 1 275 10 349 5 142 1 350 18 325 1 181 4 209 2 62 1 190 4 189 4 163 8 333 1 64 1 364 2 304 1 14 4 87 8 44 1 45 1 261 1 19 2 372 2 112 1 215 1 135 1 341 3 287 1 218 2 138 1 
248 1 53 3 32 1 76 1 275 9 349 6 350 16 181 4 209 3 190 4 189 4 333 1 163 8 64 2 364 2 14 4 87 7 44 1 45 1 261 1 19 3 372 3 215 1 135 1 341 3 287 1 218 2 
53 1 27 1 304 2 87 4 349 6 275 3 142 3 350 7 112 3 341 3 218 1 209 3 62 1 
248 1 53 3 27 1 32 1 76 1 275 10 349 4 142 1 350 18 181 4 209 1 62 1 190 4 189 4 333 1 163 8 64 1 364 2 304 1 14 4 87 8 44 1 45 1 261 1 19 2 372 2 112 1 215 1 135 1 341 3 287 1 218 2 138 1 
35 1 158 1 136 1 375 1 178 1 75 1 11 1 
35 1 224 1 329 1 178 1 75 1 118 1 42 1 158 1 114 1 136 1 375 1 11 1 
105 1 126 1 206 1 301 1 234 1 20 1 30 1 276 1 143 1 169 1 371 1 
96 1 35 1 105 1 126 1 301 1 177 1 75 1 276 1 371 1 143 1 308 1 158 2 234 1 20 1 375 2 152 1 92 1 314 1 
96 2 35 2 360 1 105 1 126 1 301 1 177 1 75 1 276 3 293 1 143 1 308 1 196 1 232 1 158 2 234 2 20 1 375 2 152 1 376 1 92 1 314 2 235 1 
96 2 177 1 75 1 276 3 143 1 293 1 158 2 232 1 234 2 235 1 35 2 360 1 105 2 239 1 126 1 301 2 165 1 308 1 196 1 20 2 375 2 152 1 376 1 314 2 
105 1 251 1 255 1 79 1 301 1 20 1 185 1 23 1 276 1 17 1 235 1 
105 1 251 1 255 1 79 1 301 1 20 1 265 1 185 1 23 1 276 1 235 1 
105 1 126 1 301 1 20 1 313 1 143 1 
327 1 105 6 38 1 361 1 126 3 301 7 162 1 155 1 253 1 65 1 227 1 179 1 276 3 371 2 143 2 311 1 20 7 234 2 313 1 208 1 314 1 
96 1 53 1 177 1 56 1 179 1 275 3 276 1 143 1 142 1 181 2 234 1 62 1 105 1 190 2 189 2 14 2 241 1 112 1 20 1 69 1 152 1 341 2 71 1 154 1 27 1 252 1 75 2 349 2 158 2 350 6 353 1 205 1 35 1 126 1 301 1 163 4 41 1 127 2 304 1 87 3 308 1 310 2 375 2 92 1 314 1 218 1 138 1 
247 1 105 1 117 1 271 1 251 1 40 1 301 1 176 1 29 1 141 1 276 1 371 1 68 1 255 1 79 1 20 1 265 1 185 1 23 1 102 1 
105 1 361 1 126 2 301 1 225 1 276 1 143 1 255 1 20 1 234 1 313 1 314 1 
105 4 39 1 126 1 301 4 179 1 30 1 276 1 371 1 143 1 165 1 206 1 20 4 234 1 
220 1 105 2 38 1 161 1 126 2 301 2 253 1 366 1 276 1 143 1 20 2 234 1 314 1 235 1 
105 1 126 1 301 1 20 1 6 1 211 1 355 1 93 1 143 1 371 1 
327 1 105 2 126 1 301 2 179 1 276 1 143 1 311 1 20 2 234 1 277 1 
105 4 39 1 126 2 301 5 162 1 65 1 30 1 179 1 276 3 371 1 143 2 311 1 206 1 20 5 234 2 235 1 
105 4 237 1 39 1 126 2 301 5 65 1 30 1 179 1 276 3 371 1 143 2 311 1 206 1 20 5 234 2 235 1 
96 1 35 1 105 1 126 1 239 1 301 1 177 1 75 1 276 1 371 1 143 1 308 1 158 2 234 1 20 1 375 2 152 1 314 1 
105 1 38 1 361 1 126 2 301 1 253 1 227 1 276 1 143 1 20 1 234 1 314 1 235 1 
35 1 158 1 90 1 375 1 184 1 326 1 66 1 31 1 24 1 
31 1 370 1 229 1 
171 1 90 1 184 1 75 1 31 1 
247 1 171 2 251 2 273 1 156 1 75 1 31 1 370 1 293 1 229 1 33 1 232 1 90 2 184 2 376 1 8 1 23 2 278 1 116 1 
323 1 100 1 132 1 169 1 
260 1 323 1 302 1 318 1 100 1 132 1 137 1 
0 1 260 1 25 1 
344 1 172 2 302 3 318 1 335 1 132 1 260 3 323 1 256 1 144 1 100 1 137 1 
260 2 321 1 323 1 302 2 318 1 100 1 132 1 343 1 137 1 
302 1 318 1 211 1 192 1 335 1 260 1 323 1 355 1 246 1 137 1 258 1 
260 1 323 1 302 1 318 1 335 1 132 1 137 1 
260 1 302 1 318 1 100 1 335 1 132 2 137 1 
302 2 305 1 318 2 15 1 367 1 335 1 132 1 260 2 323 1 137 2 
289 1 302 3 240 1 318 1 192 1 335 1 132 1 260 3 321 2 323 2 100 1 137 1 168 1 
302 2 318 1 211 2 335 1 132 1 260 2 321 1 323 1 100 1 355 1 93 1 245 1 246 1 137 1 297 1 
302 4 240 1 318 2 192 1 335 1 132 1 99 1 260 4 321 2 323 2 100 1 137 2 343 1 
260 1 323 1 302 1 318 1 100 1 335 1 132 1 137 1 
344 1 172 1 302 4 240 1 85 1 318 1 192 1 132 2 260 4 321 2 323 3 256 1 100 2 137 1 
302 2 318 1 164 1 335 1 132 1 260 2 321 1 323 1 151 1 216 1 100 1 137 1 
344 1 172 2 302 3 318 1 335 1 132 1 260 3 323 1 262 1 256 2 100 1 137 1 
108 1 323 2 81 2 133 1 
260 1 290 1 302 1 318 1 335 1 137 1 
260 2 321 1 289 1 323 1 302 2 318 1 100 1 335 1 132 1 137 1 
153 1 
260 1 323 1 302 1 318 1 100 1 335 1 132 1 137 1 
289 1 172 1 302 3 318 1 335 1 132 1 260 3 321 1 323 1 100 1 137 1 
323 1 240 1 85 1 192 1 
323 1 132 1 

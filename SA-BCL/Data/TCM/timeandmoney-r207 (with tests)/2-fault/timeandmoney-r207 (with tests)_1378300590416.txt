#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V ERROR java.lang.IllegalArgumentException 194 (76,82,268) 
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5941 | >= -> ==
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | OPERATOR | 821 | < -> !=
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
302 2 223 1 75 9 118 2 22 1 23 1 278 2 340 1 339 5 199 4 279 1 230 1 204 1 307 1 264 1 13 9 161 1 286 1 312 1 163 6 288 2 316 2 375 1 66 1 318 2 378 1 355 3 357 2 
302 2 223 1 75 9 118 2 22 1 23 1 278 2 340 1 339 5 199 4 279 1 230 1 204 1 307 1 264 1 13 9 161 1 286 1 312 1 163 6 288 2 316 2 375 1 66 1 318 2 378 1 355 3 357 2 
302 2 223 1 75 10 118 2 22 1 23 1 278 2 340 1 339 6 199 5 279 1 230 1 204 1 307 1 264 1 13 10 161 1 286 1 312 1 163 7 288 2 316 2 375 1 66 1 318 2 378 1 355 4 357 2 
302 1 223 1 75 7 118 2 22 1 23 1 278 2 340 1 339 4 199 3 279 1 230 1 204 1 307 1 264 1 13 7 161 1 286 1 312 1 163 4 288 2 316 2 375 1 66 1 318 2 355 2 357 2 
302 2 118 1 13 4 75 4 163 3 316 1 23 1 278 1 66 1 318 1 340 1 339 3 199 2 378 1 307 1 355 1 264 1 357 1 
22 1 13 2 75 2 118 1 288 1 316 1 278 1 375 1 66 1 318 1 339 1 340 1 319 1 41 1 264 1 372 1 
13 3 75 3 163 1 288 1 316 2 66 1 318 2 340 1 339 2 199 1 230 1 355 1 264 1 
302 2 75 9 118 1 23 1 278 1 340 1 339 5 199 4 230 1 307 1 128 1 264 1 61 1 13 9 161 1 312 1 163 7 288 1 316 2 66 1 318 2 378 1 355 3 357 1 
302 2 75 9 118 1 23 1 278 1 340 1 339 5 199 4 230 1 307 1 128 1 264 1 61 1 13 9 161 1 312 1 163 7 288 1 316 2 66 1 318 2 378 1 355 3 357 1 
91 1 350 1 219 1 
176 1 219 1 276 2 
104 1 304 1 201 2 202 2 315 2 216 2 85 2 26 2 
0 1 358 1 48 1 304 1 251 1 1 1 2 1 225 1 362 2 26 2 122 2 180 1 104 1 28 1 201 2 202 3 260 1 33 1 158 1 310 1 159 1 85 2 110 1 205 1 109 1 62 1 63 1 315 3 167 1 290 2 70 1 190 1 210 1 271 2 214 1 216 2 274 2 
104 1 341 1 201 1 202 1 162 1 186 1 315 1 216 1 85 1 26 1 
35 1 287 1 315 1 186 1 224 1 17 1 202 1 350 1 218 1 219 1 301 1 34 1 184 1 85 1 
35 1 287 2 315 1 186 1 224 1 17 1 26 1 201 1 202 1 350 1 216 1 218 1 219 1 301 2 85 1 
373 1 379 1 287 1 301 1 248 1 
349 1 373 1 287 2 350 1 277 1 219 1 301 2 248 1 
373 1 287 1 301 1 
287 1 162 1 186 1 315 1 26 1 104 1 341 1 201 1 202 1 216 1 301 1 248 1 59 1 85 1 
219 1 
373 1 287 2 350 1 277 1 172 1 219 1 301 2 248 1 
89 1 373 2 149 1 287 5 253 1 277 1 94 1 347 1 137 1 123 2 81 1 181 2 350 1 217 1 219 1 301 5 97 1 248 2 131 2 
358 1 109 1 205 1 315 2 2 1 167 1 362 1 26 1 122 1 180 1 257 1 210 1 201 1 182 1 202 2 262 1 274 1 310 1 159 1 85 1 
304 1 91 1 
304 2 315 2 136 1 26 1 201 1 39 1 202 2 216 1 85 2 
140 1 257 1 369 1 
358 1 205 1 109 1 304 1 315 1 2 1 167 1 362 1 155 1 122 1 180 1 210 1 202 1 274 1 310 1 159 1 
304 1 201 3 182 1 202 3 315 3 216 1 85 3 26 3 
341 1 201 1 202 1 186 1 315 1 85 1 26 1 
201 1 39 1 202 1 186 1 315 1 216 1 136 1 85 1 26 1 
358 1 304 1 251 1 1 1 2 1 224 1 225 1 362 1 26 3 122 1 180 1 4 1 104 1 201 3 202 4 182 1 260 1 262 1 33 1 158 1 310 1 159 1 85 3 35 1 109 1 205 1 63 1 287 1 315 4 186 1 17 1 167 1 136 1 290 2 70 1 190 1 210 1 271 1 214 1 216 2 218 1 274 1 301 1 46 1 
304 1 201 1 202 2 182 1 315 2 112 1 184 1 85 2 26 1 
35 1 287 1 186 1 315 3 224 1 17 1 136 1 26 3 4 1 366 1 201 3 182 2 202 3 262 1 216 1 218 1 219 1 301 1 85 3 
315 2 136 1 26 2 140 1 257 1 201 2 182 1 202 2 216 1 85 2 
358 1 205 1 109 1 304 1 315 1 2 1 167 1 362 1 122 1 180 1 210 1 202 1 274 1 159 1 310 1 
358 1 205 1 109 1 304 1 315 1 167 1 362 1 122 1 113 1 210 1 202 1 352 1 274 1 159 1 310 1 
250 1 1 1 195 1 256 1 257 2 29 1 260 2 157 1 126 1 33 1 158 1 369 2 62 2 290 2 139 1 140 2 70 1 190 1 72 1 271 4 214 1 246 1 44 1 45 1 
201 1 202 1 186 1 315 1 224 1 10 1 85 1 26 1 
304 1 37 1 315 5 136 1 112 1 26 4 201 4 182 2 202 5 262 1 334 1 216 1 184 1 85 5 
341 1 201 2 202 2 186 1 315 2 10 1 85 2 26 2 
175 1 268 1 
175 1 268 1 
82 1 194 1 
82 1 194 1 
82 1 194 1 
175 1 268 1 170 1 
175 1 268 1 170 1 
82 1 194 1 175 1 268 1 
76 1 175 1 268 1 
175 1 268 1 170 1 
175 1 268 1 3 1 
175 1 268 1 3 1 
175 1 268 1 3 1 
359 2 313 1 287 2 329 2 164 2 268 2 175 2 346 1 338 1 289 1 324 1 141 1 142 2 219 1 301 2 73 1 263 3 322 2 11 1 
76 1 304 1 359 1 175 1 228 1 26 2 229 1 201 2 202 2 259 1 127 1 183 1 263 1 85 2 11 1 185 1 287 1 164 1 329 1 315 2 268 1 142 1 272 1 301 1 
118 1 278 1 357 1 
118 1 278 1 372 1 
151 1 278 3 381 1 330 1 357 2 372 1 
27 1 151 1 278 2 330 1 357 1 372 1 
151 2 278 2 357 1 330 1 372 1 
250 1 277 1 195 1 196 1 176 1 103 2 123 1 81 1 181 1 55 1 157 1 126 1 127 1 183 1 326 1 131 1 373 1 285 1 344 1 185 1 287 5 94 2 347 3 240 1 294 1 144 2 350 1 40 2 301 5 219 2 276 3 248 4 
47 1 250 3 277 1 195 3 196 2 176 3 177 1 100 1 103 6 123 2 81 1 181 2 55 3 157 3 126 3 131 2 373 6 285 1 185 4 160 5 287 9 94 6 347 8 240 2 348 1 379 5 144 6 350 1 192 1 301 9 219 5 97 1 276 9 98 1 248 7 
250 1 195 1 196 1 176 2 103 2 123 1 181 1 55 1 157 1 126 1 131 1 344 1 185 1 287 3 94 2 347 3 240 1 294 1 144 2 350 1 40 1 219 3 301 3 97 1 276 4 248 2 
47 1 250 2 195 2 196 1 176 3 103 4 123 1 181 1 55 2 157 2 126 2 131 1 344 1 185 2 287 4 94 4 347 5 240 1 294 1 144 4 350 1 40 2 192 1 219 4 301 4 276 7 97 1 98 1 248 3 
91 1 101 1 310 1 
31 1 310 1 
309 1 
310 1 159 1 
210 1 36 1 114 1 101 2 310 3 159 1 
210 1 310 1 159 1 
310 1 365 1 
146 1 250 1 77 1 62 4 78 1 50 1 267 1 198 1 121 2 200 1 29 2 271 7 143 1 260 3 126 1 245 1 44 3 
146 1 250 1 77 1 62 4 78 1 50 1 267 1 198 1 121 2 200 1 29 2 271 7 143 1 260 3 126 1 245 1 44 3 
146 1 250 1 77 1 62 4 78 1 50 1 267 1 178 1 198 1 121 2 200 1 29 2 271 7 143 1 260 3 126 1 245 1 44 3 
146 1 250 4 77 2 1 1 78 2 49 1 50 2 195 3 154 1 323 1 198 2 121 3 200 1 29 5 55 3 260 15 157 3 126 4 33 1 84 4 87 3 62 16 133 1 267 1 269 1 290 2 70 1 271 31 143 5 214 1 173 1 245 1 43 1 44 10 
146 1 250 1 77 1 62 5 78 1 1 2 50 1 267 1 269 1 238 1 290 4 198 1 121 2 70 2 200 1 29 3 271 9 143 1 244 1 260 4 214 2 126 1 33 2 44 4 
21 1 117 1 118 1 75 2 254 1 278 2 362 1 122 1 339 1 340 1 125 1 368 1 107 1 342 1 264 1 372 1 13 2 205 1 109 1 163 1 288 1 316 1 236 1 66 1 318 1 215 1 274 1 115 1 381 1 357 1 
118 1 75 3 254 1 278 2 362 1 122 1 339 1 340 1 125 1 368 1 107 1 342 1 264 1 372 1 13 3 205 1 109 1 163 2 288 1 316 1 236 1 16 1 318 1 20 1 215 1 353 1 274 1 381 1 115 1 357 1 
75 2 118 1 254 1 278 2 362 1 122 1 339 1 340 1 107 1 342 1 264 1 372 1 13 2 205 1 109 1 163 2 288 1 236 1 16 1 215 1 353 1 274 1 115 1 381 1 357 1 
75 1 254 2 362 1 122 1 107 2 159 1 310 1 327 1 109 1 13 1 205 1 288 2 316 1 209 1 64 1 65 1 167 1 38 1 318 1 20 1 274 1 115 2 145 1 
117 1 118 1 75 1 254 1 278 2 362 1 122 1 125 1 368 1 107 1 342 1 372 1 13 1 205 1 109 1 288 1 316 1 236 1 66 1 318 1 215 1 353 1 274 1 115 1 381 1 357 1 
53 1 
153 2 106 1 202 1 261 2 159 1 310 1 205 1 109 1 315 1 167 2 17 1 169 2 347 2 19 2 171 1 211 1 350 1 274 2 354 1 218 1 219 2 275 2 276 2 220 1 277 3 224 1 176 2 362 2 25 2 364 2 122 2 123 1 81 1 181 1 282 1 283 4 34 1 284 1 184 1 85 1 131 1 373 6 35 1 287 5 186 1 92 1 94 2 38 1 240 1 293 1 377 1 297 1 301 5 42 1 145 1 
224 1 277 1 202 1 283 2 34 1 284 1 85 1 184 1 35 1 373 2 287 3 315 1 186 1 17 1 293 1 19 1 377 1 354 1 218 1 172 1 301 3 220 1 
224 1 277 1 202 1 283 3 34 1 284 1 85 1 184 1 373 1 35 1 287 3 315 1 186 1 17 1 169 1 293 1 377 1 350 1 354 1 218 1 172 1 301 3 219 1 220 1 
277 1 224 1 202 1 283 3 261 1 34 1 284 1 85 1 184 1 35 1 373 2 287 3 315 1 186 1 17 1 169 1 293 1 19 1 377 1 350 1 172 1 354 1 218 1 301 3 219 1 220 1 
152 1 153 2 202 1 261 4 56 1 345 1 315 1 17 1 169 4 347 1 19 4 211 1 350 5 218 1 172 1 354 1 219 5 275 2 220 1 224 1 277 3 361 1 176 2 25 2 364 2 120 1 123 1 81 1 181 1 283 6 34 1 284 1 184 1 85 1 131 1 35 1 373 7 287 5 186 1 94 1 293 1 377 1 297 1 301 5 
153 2 202 1 261 2 315 1 17 1 347 1 169 2 19 2 171 1 211 1 350 1 218 1 354 1 275 2 219 2 220 1 276 2 224 1 277 2 176 2 25 2 364 2 123 1 81 1 181 1 283 4 34 1 284 1 85 1 184 1 131 1 35 1 373 4 287 4 186 1 94 1 293 1 377 1 297 1 301 4 
277 2 224 1 361 1 153 2 176 2 25 2 364 2 123 1 81 1 181 1 202 1 261 2 283 4 56 1 34 1 284 1 85 1 184 1 131 1 373 4 35 1 287 4 345 1 315 1 186 1 94 1 17 1 169 2 347 1 19 2 293 1 211 1 377 1 297 1 350 1 354 1 218 1 219 1 275 2 301 4 220 1 
277 2 224 1 361 1 153 2 176 2 25 2 364 2 123 1 81 1 181 1 202 1 261 2 283 4 56 1 34 1 284 1 85 1 184 1 131 1 373 4 35 1 287 4 345 1 315 1 186 1 94 1 17 1 169 2 347 1 19 2 293 1 211 1 377 1 297 1 350 1 354 1 218 1 219 1 275 2 301 4 220 1 
277 2 224 1 361 1 25 2 364 2 123 1 81 1 181 1 6 1 202 1 261 2 283 4 9 1 34 1 284 1 85 1 184 1 131 1 373 4 35 1 287 4 315 1 186 1 94 1 17 1 169 2 138 2 347 1 19 2 293 1 241 1 211 1 377 1 242 2 350 1 354 1 218 1 219 1 301 4 276 2 220 1 
277 2 224 1 361 1 153 2 176 2 25 2 364 2 120 1 123 1 81 1 181 1 202 1 283 5 261 3 56 1 34 1 284 1 85 1 184 1 131 1 35 1 373 5 287 4 345 1 315 1 186 1 94 1 17 1 347 1 169 3 293 1 19 3 211 1 377 1 297 1 350 1 354 1 218 1 219 1 275 2 301 4 220 1 
277 2 224 1 361 1 153 2 176 2 25 2 364 2 120 1 123 1 81 1 181 1 202 1 283 5 261 3 56 1 34 1 284 1 85 1 184 1 131 1 35 1 373 5 287 4 345 1 315 1 186 1 94 1 17 1 347 1 169 3 293 1 19 3 211 1 377 1 297 1 350 1 354 1 218 1 219 1 275 2 301 4 220 1 
202 1 261 2 9 1 315 1 17 1 347 1 169 2 19 2 171 1 211 1 350 1 218 1 354 1 219 1 220 1 276 2 224 1 277 2 25 2 364 2 123 1 81 1 181 1 283 4 34 1 284 1 85 1 184 1 131 1 35 1 373 4 287 4 186 1 94 1 138 2 293 1 377 1 242 2 301 4 
146 1 250 1 77 1 304 2 1 1 198 1 121 1 257 1 200 1 29 2 260 3 126 1 33 1 158 1 369 1 62 3 91 1 267 1 290 2 140 1 70 1 190 1 271 6 214 1 44 2 45 1 
48 1 250 2 304 1 1 2 49 1 225 1 195 1 51 1 257 11 29 1 55 2 260 6 157 2 126 1 33 2 84 3 158 1 369 11 87 3 62 8 290 4 140 4 70 2 190 2 271 14 143 1 320 1 214 2 173 1 336 1 335 1 116 1 44 2 
358 1 48 1 304 1 1 1 2 1 225 1 51 1 362 1 155 1 122 1 26 1 180 1 201 1 202 2 182 1 203 1 260 1 262 1 33 1 158 1 310 1 159 1 85 1 109 1 205 1 62 1 315 2 374 1 167 1 290 2 140 1 70 1 190 1 210 1 271 2 214 1 351 1 274 1 
146 1 48 1 250 3 304 2 148 1 251 2 1 3 2 2 195 2 51 1 198 1 200 1 257 7 201 1 202 3 55 2 260 10 157 2 262 1 158 3 159 2 310 2 205 2 109 2 62 10 207 1 315 3 267 1 167 1 70 3 210 2 271 20 214 3 353 1 274 3 356 2 358 2 77 1 225 1 24 1 362 3 121 1 122 3 26 1 180 2 29 4 182 1 126 3 33 3 369 7 85 1 86 2 235 2 290 6 140 7 190 3 143 4 333 2 44 8 
21 1 0 2 48 1 150 1 1 2 193 1 225 1 362 7 26 1 122 8 201 1 202 1 182 1 260 1 32 1 33 2 158 2 85 1 310 3 159 2 109 2 205 2 132 1 62 1 315 1 187 1 167 2 67 1 38 1 290 4 70 2 190 2 243 1 271 2 214 2 353 1 274 8 45 1 145 1 
250 1 1 1 195 1 51 1 227 1 26 1 257 1 29 1 201 1 202 1 55 1 157 1 260 2 126 1 33 1 158 1 369 1 85 1 62 1 315 1 136 1 290 2 140 1 70 1 190 1 271 3 214 1 216 1 44 1 
250 1 62 2 1 1 290 2 139 1 140 1 190 1 70 1 257 1 271 2 143 1 214 1 157 1 33 1 158 1 369 1 44 1 45 1 
1 1 195 1 290 2 256 1 140 1 190 1 70 1 257 1 29 1 271 2 214 1 260 2 126 1 33 1 158 1 369 1 44 1 45 1 
250 1 1 1 195 1 257 2 29 1 55 1 157 1 260 2 126 1 33 1 158 1 369 2 62 2 290 2 140 2 70 1 190 1 271 4 143 1 214 1 44 2 45 1 
250 1 62 2 1 1 67 1 290 2 139 1 140 1 190 1 70 1 257 1 271 2 143 1 214 1 157 1 33 1 158 1 369 1 44 1 
1 1 195 1 67 1 290 2 256 1 140 1 190 1 70 1 257 1 29 1 271 2 214 1 260 2 126 1 33 1 158 1 369 1 44 1 
250 1 1 1 195 1 257 2 29 1 55 1 157 1 260 2 126 1 33 1 158 1 369 2 62 2 67 1 290 2 140 2 70 1 190 1 271 4 143 1 214 1 44 2 
250 1 62 2 1 1 195 1 290 2 140 2 190 1 70 1 257 2 29 1 271 4 143 1 55 1 260 2 214 1 157 1 126 1 33 1 158 1 369 2 44 2 
358 1 48 1 304 1 251 1 1 1 2 1 225 1 362 1 122 1 180 1 202 1 260 1 33 1 158 1 159 1 310 1 109 1 205 1 62 1 315 1 167 1 290 2 190 1 70 1 210 1 271 2 214 1 274 1 
358 1 48 1 304 1 1 1 225 1 362 1 122 1 202 1 260 1 308 1 33 1 158 1 159 1 310 1 109 1 205 1 62 1 315 1 167 1 290 2 113 1 190 1 70 1 210 1 271 2 214 1 352 1 274 1 
250 1 1 1 195 1 51 1 257 2 29 1 55 1 157 1 260 2 126 1 33 1 158 1 369 2 62 2 290 2 140 2 70 1 190 1 271 4 143 1 214 1 44 2 
21 1 358 1 250 1 251 1 1 1 2 1 195 1 362 1 122 1 180 1 257 2 29 1 202 1 55 1 260 2 157 1 126 1 33 1 158 1 369 2 159 1 310 1 86 1 109 1 205 1 62 2 315 1 290 2 140 2 190 1 70 1 210 1 271 4 143 1 214 1 274 1 44 2 
250 1 1 1 195 1 51 1 26 1 257 1 201 1 202 1 55 1 260 1 157 1 126 1 33 1 158 1 369 1 85 1 62 2 315 1 136 1 290 2 291 1 140 1 70 1 190 1 271 3 143 1 214 1 216 1 44 1 
250 3 1 2 49 1 79 1 195 3 306 1 197 2 29 3 55 3 260 10 157 3 126 3 33 2 84 2 370 1 129 1 234 1 12 2 87 1 62 9 15 1 290 4 70 2 71 1 271 19 244 1 143 3 214 2 173 1 44 6 
250 3 1 3 79 2 195 2 306 1 197 4 7 1 29 2 55 3 260 12 157 3 126 2 33 3 84 2 234 2 12 1 87 2 206 1 62 14 269 2 15 1 290 6 70 3 71 1 331 1 271 26 212 1 143 2 244 1 96 1 214 3 173 2 44 4 174 1 
146 1 250 5 1 3 49 1 195 4 197 4 306 1 198 1 7 1 200 1 55 4 157 4 260 21 12 1 62 20 206 1 267 1 15 1 269 1 70 3 71 1 271 41 212 1 214 3 173 3 174 1 77 1 79 1 121 1 29 4 126 5 83 1 33 3 84 4 370 1 234 2 87 3 290 6 331 1 143 4 244 1 96 1 44 8 
146 1 250 5 77 1 1 4 49 1 79 1 195 3 306 1 197 4 121 1 198 1 200 1 7 1 29 4 55 4 260 18 157 4 126 4 83 1 33 4 84 4 370 1 234 2 12 1 87 3 206 1 62 20 267 1 269 2 15 1 290 8 70 4 71 1 331 1 212 1 271 38 244 1 143 3 96 1 214 4 173 3 44 7 174 1 
146 1 250 8 77 1 1 2 49 2 79 1 195 7 306 1 197 4 121 1 198 1 200 1 7 1 29 7 55 7 260 25 157 7 126 8 33 2 84 4 234 1 12 1 87 4 206 1 62 27 267 1 269 1 15 1 290 4 70 2 71 1 331 1 212 1 271 52 244 1 143 7 96 1 214 2 173 2 336 2 44 14 174 1 
324 1 141 1 142 1 359 1 164 1 329 1 134 1 175 1 268 1 289 1 
76 1 272 1 
142 1 359 1 296 1 164 1 329 1 175 1 268 1 343 1 60 1 
359 1 313 1 287 1 329 1 164 1 268 1 175 1 346 1 289 1 324 1 141 1 142 1 219 1 301 1 73 1 263 2 322 1 11 1 
359 1 313 1 287 1 329 1 164 1 268 1 175 1 346 1 289 1 324 1 141 1 142 1 219 1 301 1 73 1 263 2 322 1 11 1 
359 1 313 1 287 1 329 1 164 1 268 1 175 1 346 1 289 1 324 1 141 1 142 1 219 1 301 1 73 1 263 2 322 1 11 1 
266 1 226 1 170 1 
266 1 226 1 170 1 
3 1 292 1 
266 1 3 1 292 1 
229 1 259 1 
76 1 304 1 359 1 175 1 228 1 26 2 229 1 201 2 202 2 259 1 127 1 183 1 263 1 85 2 185 1 313 1 287 1 315 2 164 1 329 1 268 1 142 1 272 1 301 1 247 1 248 1 322 1 
226 1 170 1 
266 1 3 1 292 1 
303 1 0 2 48 1 1 1 193 1 225 1 51 1 362 2 52 1 122 2 202 2 260 1 33 1 158 1 233 1 310 1 159 1 85 2 311 1 109 1 205 1 132 1 62 1 315 2 290 2 68 1 70 1 190 1 271 2 214 1 274 2 
21 1 118 1 109 1 205 1 265 1 236 1 278 2 362 2 337 1 122 2 105 1 125 1 215 1 353 1 274 2 381 1 115 1 357 1 372 1 
118 1 205 1 109 1 236 1 278 2 362 1 337 1 122 1 124 1 125 1 215 1 353 1 274 1 381 1 115 1 357 1 372 1 
109 1 205 1 209 1 167 1 362 1 38 1 122 1 105 1 274 1 115 1 325 1 310 1 159 1 145 1 
118 1 109 1 265 1 205 1 236 1 278 2 362 1 337 1 122 1 105 1 125 1 215 1 353 1 274 1 381 1 115 1 357 1 372 1 
314 1 
91 1 350 1 94 1 217 1 219 1 347 1 137 1 
277 1 176 1 153 1 123 1 81 1 181 1 131 1 373 1 287 1 94 1 347 1 297 1 350 1 275 1 219 2 301 1 276 1 
250 2 252 2 195 2 101 2 103 6 5 2 55 2 157 2 57 2 108 1 310 10 159 3 109 4 205 3 208 2 167 1 168 1 111 1 270 1 347 9 18 2 210 3 350 2 114 1 217 1 274 3 219 8 356 2 276 12 74 1 21 1 277 3 176 6 363 2 362 3 365 2 122 3 123 4 81 4 181 4 280 2 31 3 126 2 131 4 373 5 35 2 287 5 92 1 94 8 137 1 240 2 380 2 144 6 301 5 
250 2 277 1 195 2 176 3 103 5 123 2 81 2 7 1 181 2 55 2 367 1 157 2 126 2 57 1 84 1 131 2 87 1 373 1 206 1 287 1 92 1 94 5 188 1 347 8 240 1 212 1 380 2 144 5 96 1 350 2 173 1 301 1 219 5 276 6 174 1 
146 1 250 2 77 1 198 1 26 1 123 1 81 1 104 1 341 1 181 1 201 1 202 1 126 1 57 1 56 1 59 1 85 1 131 1 287 1 162 1 186 1 315 1 94 2 347 2 380 2 299 1 216 1 301 1 
94 1 137 1 347 1 123 1 81 1 181 1 350 1 217 1 219 1 131 1 
250 2 195 2 176 5 94 5 347 5 103 5 380 2 55 2 144 5 157 2 126 2 57 1 219 5 356 1 276 10 
373 1 287 1 350 1 277 1 219 1 301 1 
277 2 362 4 122 4 123 2 81 1 181 2 106 1 258 1 108 2 310 1 159 1 131 2 373 4 109 1 205 1 287 3 92 2 167 2 94 2 38 1 270 1 347 2 240 2 321 1 274 4 301 3 97 1 42 1 145 1 
358 1 304 1 251 1 1 1 2 1 225 1 362 1 122 1 26 2 180 1 104 1 201 2 202 3 260 1 33 1 158 1 85 2 159 1 310 1 205 1 109 1 63 1 315 3 167 1 290 2 190 1 70 1 210 1 271 1 214 1 216 2 274 1 
92 1 176 2 94 2 347 1 240 1 121 1 103 2 123 1 81 1 181 1 144 2 350 2 219 4 276 4 131 1 
359 1 305 1 164 1 
359 1 305 1 164 1 
324 1 359 1 298 1 259 1 164 1 
359 1 305 1 164 1 
359 1 164 1 130 1 
359 1 164 1 130 1 
359 1 164 1 130 1 
359 1 164 1 
175 1 268 1 
146 1 250 1 77 1 62 4 1 2 267 1 269 1 290 4 121 1 198 1 70 2 200 1 271 8 29 2 143 1 260 4 214 2 126 1 33 2 44 3 
146 1 250 1 77 1 62 3 91 1 267 1 121 1 198 1 200 1 29 2 271 6 260 3 126 1 44 2 
250 1 62 2 1 1 195 1 93 1 290 2 70 1 29 1 271 4 143 1 55 1 260 2 214 1 157 1 126 1 33 1 44 2 
87 1 250 1 62 3 49 1 195 1 29 1 271 7 143 1 55 1 260 4 157 1 126 1 173 1 84 2 44 2 
146 1 250 3 77 2 1 2 49 1 195 2 121 1 198 2 200 1 29 5 55 2 157 2 260 12 231 1 126 3 33 2 84 2 87 2 62 11 267 1 269 2 290 4 70 2 271 23 143 4 320 1 214 2 336 1 44 9 
271 1 260 1 84 1 
87 1 271 1 62 1 
250 1 62 3 1 1 195 1 93 1 290 2 70 1 271 6 29 2 143 1 55 1 214 1 260 3 157 1 126 1 33 1 356 1 44 3 
250 2 1 1 195 2 7 1 29 1 55 2 260 6 157 2 126 2 33 1 84 1 87 1 62 6 206 1 290 2 70 1 271 12 212 1 143 1 244 1 214 1 96 1 173 1 44 2 174 1 
146 1 250 1 77 1 62 3 198 1 271 6 29 1 143 1 260 3 126 1 44 2 
77 1 62 1 1 1 267 1 269 1 290 2 198 1 70 1 200 1 29 1 271 3 143 1 231 1 260 2 214 1 33 1 44 2 
146 1 250 2 77 2 62 5 1 1 290 2 198 2 70 1 29 3 271 10 244 1 299 1 143 2 214 1 260 5 126 2 33 1 44 5 
250 1 62 2 1 1 290 2 70 1 271 2 244 1 143 1 214 1 157 1 33 1 44 1 
250 1 62 2 1 1 195 1 290 2 70 1 29 1 271 4 244 1 143 1 55 1 260 2 214 1 157 1 126 1 33 1 44 2 
77 1 62 1 1 3 269 1 290 6 198 1 70 3 271 3 29 1 244 1 143 1 231 1 260 2 214 3 33 3 370 1 44 2 
146 2 250 5 77 3 1 5 49 1 195 3 323 1 154 1 121 1 198 3 200 1 29 7 55 3 231 1 260 18 157 3 126 5 33 5 84 4 370 1 87 3 62 16 133 1 267 1 269 2 93 1 290 10 70 5 271 34 244 1 143 5 214 5 173 1 44 12 
146 1 250 1 77 1 1 1 121 1 198 1 7 1 200 1 29 2 260 4 126 1 33 1 84 1 87 1 62 4 267 1 290 2 70 1 271 8 244 1 214 1 173 1 44 2 
146 1 250 2 77 1 1 2 49 1 121 1 198 1 200 1 7 1 29 2 55 1 260 5 157 1 126 1 33 2 84 2 87 1 62 6 267 1 93 1 290 4 70 2 271 11 244 1 143 1 214 2 173 1 44 3 
146 1 250 3 77 1 1 3 195 2 121 1 198 1 200 1 7 1 29 3 55 2 260 10 157 2 126 3 33 3 84 1 87 1 62 9 206 1 267 1 269 1 93 1 290 6 70 3 271 19 212 1 143 1 244 1 96 1 214 3 173 1 44 4 174 1 
146 1 250 3 77 1 1 3 195 1 121 1 198 1 200 1 7 1 29 3 55 2 260 7 157 2 126 2 33 3 84 1 87 1 62 10 206 1 267 1 269 1 93 1 290 6 70 3 271 17 212 1 143 2 244 1 214 3 96 1 173 1 44 5 174 1 
146 1 250 1 77 1 1 1 121 1 198 1 7 1 200 1 29 2 260 4 126 1 33 1 84 1 87 1 62 4 267 1 290 2 70 1 271 8 244 1 214 1 173 1 44 2 
250 2 1 1 195 2 7 1 29 1 55 2 260 6 157 2 126 2 33 1 84 1 87 1 62 6 206 1 290 2 70 1 271 12 212 1 143 1 244 1 214 1 96 1 173 1 44 2 174 1 
146 1 250 3 77 1 1 4 195 1 121 1 198 1 200 1 7 1 29 3 55 2 260 8 157 2 126 2 33 4 84 1 87 1 206 1 62 10 267 1 269 2 93 1 290 8 70 4 271 18 212 1 143 2 244 1 96 1 214 4 173 1 44 5 174 1 
250 3 1 4 195 2 7 1 29 3 55 3 260 7 157 3 126 2 33 4 84 1 370 1 87 1 206 1 62 9 269 2 290 8 70 4 271 16 212 1 143 3 244 1 96 1 214 4 173 1 44 6 174 1 
146 1 250 1 77 3 62 3 267 1 198 3 200 2 271 7 29 3 143 3 260 4 126 1 44 6 
146 1 250 3 77 1 1 4 195 1 121 1 198 1 200 1 7 1 29 3 55 2 260 8 157 2 126 2 33 4 84 1 370 1 87 1 206 1 62 10 267 1 269 2 290 8 70 4 271 18 212 1 143 1 244 1 96 1 214 4 173 1 44 4 174 1 
304 1 202 1 315 1 54 1 112 1 85 1 184 1 
328 1 304 1 315 1 165 1 112 1 69 1 191 1 30 1 202 1 54 1 184 1 85 1 
109 1 205 1 91 1 274 1 362 1 167 1 38 1 310 1 159 1 145 1 122 1 
358 1 109 1 205 1 304 1 315 2 167 1 362 1 26 1 122 1 180 1 210 1 201 1 182 1 202 2 274 1 310 1 159 1 85 1 
358 1 109 1 205 1 304 1 186 1 315 2 224 1 362 1 18 1 365 1 26 1 122 1 180 1 210 2 201 2 182 1 202 2 218 1 274 1 108 1 310 3 159 2 85 2 
358 1 304 1 224 1 362 2 365 1 122 2 26 1 201 2 202 2 182 1 108 1 85 2 159 2 310 3 90 1 205 1 109 1 315 2 186 1 18 1 210 2 352 1 274 2 218 1 
362 3 101 1 365 1 122 3 80 1 31 1 108 1 310 4 159 1 373 1 35 1 90 1 205 1 109 1 287 2 167 1 18 1 210 1 332 1 350 1 274 3 301 2 219 1 
35 1 373 1 90 1 109 1 205 1 287 2 208 1 167 1 362 3 101 1 18 1 365 1 122 3 210 1 350 1 31 1 274 3 219 1 301 2 108 1 159 1 310 4 
109 1 205 1 32 1 274 1 362 1 122 1 
21 1 0 1 205 2 109 3 150 1 193 1 135 1 187 1 167 2 362 6 239 1 122 7 210 1 243 1 32 1 353 1 273 1 114 1 274 7 159 2 310 3 
21 1 146 1 358 1 250 1 304 2 77 1 251 1 1 2 2 1 51 1 362 1 121 1 198 1 26 1 122 1 180 1 257 1 200 1 29 2 201 1 202 2 182 1 260 3 126 1 33 2 158 2 369 1 310 1 159 1 85 1 86 1 311 1 109 1 205 1 62 3 235 1 315 2 267 1 290 4 140 1 70 2 190 2 210 1 271 6 214 2 274 1 44 2 
277 1 362 1 363 1 101 1 122 1 123 2 5 1 81 2 181 2 280 1 31 1 310 2 131 2 373 2 35 1 287 3 208 1 94 1 167 1 347 1 137 1 270 1 350 1 217 1 274 1 219 1 301 3 248 1 
21 1 205 1 109 2 362 2 101 1 111 1 122 2 210 1 32 1 114 1 274 2 159 1 310 2 
21 1 90 1 109 1 205 1 167 1 362 4 38 1 122 4 8 1 274 4 159 1 310 1 145 1 
205 1 109 2 207 1 135 1 362 2 239 1 122 2 210 1 213 1 274 2 108 1 221 1 159 1 310 1 
118 1 109 1 205 1 236 1 278 1 274 1 362 1 167 1 372 1 122 1 
21 1 205 1 109 1 193 1 362 2 68 1 122 2 353 1 274 2 159 1 310 1 
21 1 205 2 109 2 150 1 193 1 167 1 362 4 38 1 122 5 243 1 8 1 274 5 108 1 159 2 310 3 145 1 
21 1 205 2 109 2 150 1 193 1 167 1 362 4 38 1 122 5 295 1 8 1 274 5 108 1 159 2 310 3 145 1 
358 1 109 1 205 1 304 1 315 2 167 1 362 1 26 1 122 1 210 1 201 1 182 1 202 2 352 1 274 1 310 1 159 1 85 1 
205 1 109 2 135 1 362 1 239 1 122 1 210 1 273 1 114 1 274 1 108 1 159 1 310 1 
303 1 202 1 315 1 237 1 232 1 233 1 376 1 52 1 85 1 
360 1 317 1 376 1 
88 1 304 1 237 1 232 1 376 1 
88 2 35 1 304 1 287 2 186 1 224 1 360 1 317 1 237 2 17 1 376 1 95 1 4 1 350 1 218 1 219 1 301 2 232 2 248 1 
339 1 340 1 91 1 264 1 
339 1 340 1 75 1 13 1 316 1 264 1 318 1 
75 1 288 1 254 1 
222 1 13 3 75 3 22 2 316 1 179 1 66 1 318 1 339 1 340 1 58 1 264 1 
339 1 340 1 302 1 75 2 13 2 163 1 316 1 264 1 318 1 
339 1 199 1 118 1 75 1 13 1 316 1 278 1 307 1 66 1 357 1 318 1 
339 1 340 1 75 1 13 1 316 1 66 1 318 1 
340 2 75 1 13 1 316 1 66 1 264 1 318 1 
249 1 13 2 75 2 14 1 316 2 66 1 318 2 339 1 340 1 281 1 
13 3 75 3 161 1 312 1 163 2 316 1 66 1 318 1 340 1 339 2 199 1 355 1 264 1 
13 2 75 2 118 1 147 1 163 1 316 1 278 2 66 1 318 1 339 1 340 1 381 1 264 1 357 1 372 1 
302 1 13 4 75 4 163 2 316 2 66 1 318 2 340 1 339 2 199 1 378 1 355 1 264 1 
339 1 340 1 75 1 13 1 316 1 66 1 264 1 318 1 
222 1 22 1 13 4 75 4 163 2 316 1 102 1 318 1 340 2 339 3 199 1 355 1 58 1 264 2 
13 2 75 2 163 1 316 1 66 1 189 1 318 1 339 1 340 1 300 1 128 1 264 1 
222 1 13 3 75 3 22 2 316 1 66 1 119 1 318 1 339 1 340 1 58 2 264 1 
339 2 99 1 255 1 371 2 
75 1 13 1 316 1 166 1 66 1 318 1 
339 1 340 1 75 2 13 2 161 1 163 1 316 1 66 1 264 1 318 1 
156 1 
339 1 340 1 75 1 13 1 316 1 66 1 264 1 318 1 
13 3 75 3 22 1 161 1 163 1 316 1 66 1 318 1 340 1 339 1 264 1 
339 1 199 1 355 1 102 1 
339 1 340 1 

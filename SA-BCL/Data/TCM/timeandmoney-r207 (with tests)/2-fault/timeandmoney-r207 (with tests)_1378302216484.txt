#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4821 | 1 -> 2
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate; | RETURN | 2841 | return null
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
181 1 257 1 182 2 232 4 167 1 5 1 336 1 60 1 235 5 131 1 211 2 238 1 115 2 15 1 213 9 372 3 346 6 271 2 118 2 247 1 42 1 120 1 275 2 226 1 378 1 73 9 277 1 48 2 
181 1 257 1 182 2 232 4 167 1 5 1 336 1 60 1 235 5 131 1 211 2 238 1 115 2 15 1 213 9 372 3 346 6 271 2 118 2 247 1 42 1 120 1 275 2 226 1 378 1 73 9 277 1 48 2 
181 1 257 1 182 2 232 5 167 1 5 1 336 1 60 1 235 6 131 1 211 2 238 1 115 2 15 1 213 10 372 4 346 7 271 2 118 2 247 1 42 1 120 1 275 2 226 1 378 1 73 10 277 1 48 2 
181 1 257 1 182 2 232 3 167 1 336 1 60 1 235 4 131 1 211 2 238 1 115 2 15 1 213 7 372 2 346 4 271 2 118 2 247 1 42 1 120 1 275 1 226 1 378 1 73 7 277 1 48 2 
372 1 213 4 346 3 271 1 118 1 182 1 167 1 232 2 5 1 42 1 120 1 60 1 275 2 235 3 211 1 73 4 48 1 277 1 
213 2 204 1 271 1 118 1 182 1 42 1 120 1 336 1 93 1 60 1 235 1 327 1 378 1 73 2 115 1 48 1 
213 3 372 1 346 1 118 2 232 1 247 1 42 1 120 1 60 1 235 2 73 3 115 1 48 2 
182 1 232 4 167 1 5 1 6 1 60 1 235 5 131 1 211 1 238 1 115 1 372 3 213 9 346 7 271 1 118 2 247 1 42 1 120 1 275 2 329 1 73 9 48 2 277 1 
182 1 232 4 167 1 5 1 6 1 60 1 235 5 131 1 211 1 238 1 115 1 372 3 213 9 346 7 271 1 118 2 247 1 42 1 120 1 275 2 329 1 73 9 48 2 277 1 
187 1 37 1 149 1 
331 1 98 2 149 1 
325 2 108 2 139 2 30 1 82 1 38 2 288 2 321 2 
50 1 30 1 121 1 2 1 55 1 56 2 148 1 262 1 186 1 59 1 108 3 366 1 82 1 264 1 110 1 38 2 288 3 289 1 214 1 133 1 156 2 157 1 137 2 273 2 244 1 294 1 321 2 325 2 140 1 139 2 161 2 45 1 202 1 69 1 228 1 359 1 276 1 
325 1 108 1 139 1 230 1 82 1 11 1 38 1 288 1 20 1 321 1 
104 1 149 1 176 1 233 1 108 1 37 1 9 1 285 1 11 1 38 1 111 1 288 1 74 1 330 1 
104 1 149 1 321 1 325 1 233 1 139 1 108 1 37 1 9 2 285 1 11 1 38 1 111 1 288 1 330 2 
9 1 339 1 62 1 347 1 330 1 
65 1 37 1 9 2 162 1 62 1 149 1 347 1 330 2 
9 1 347 1 330 1 
230 1 20 1 282 1 321 1 325 1 139 1 108 1 9 1 82 1 11 1 38 1 62 1 288 1 330 1 
149 1 
49 1 65 1 37 1 9 2 62 1 149 1 347 1 330 2 
164 1 65 1 54 1 185 1 149 1 347 2 350 1 109 2 37 1 9 5 130 1 22 2 355 1 299 1 358 2 62 2 153 1 27 1 330 5 
187 1 30 1 
30 2 321 1 325 1 108 2 139 1 367 1 192 1 38 2 288 2 
216 1 234 1 117 1 
156 1 30 1 157 1 273 1 2 1 244 1 294 1 55 1 56 1 262 1 108 1 107 1 59 1 69 1 264 1 288 1 
216 1 156 1 157 1 2 1 273 1 244 1 294 1 55 1 34 1 56 1 221 1 321 1 262 1 59 1 139 1 108 2 69 1 264 1 38 1 288 2 
30 1 332 1 40 1 34 1 221 2 321 4 325 1 139 4 108 5 203 1 367 1 38 5 288 5 74 1 
108 2 139 2 230 1 11 1 38 2 208 1 288 2 321 2 
325 1 108 3 139 3 30 1 38 3 288 3 221 1 321 3 
108 1 139 1 230 1 11 1 38 1 288 1 321 1 
325 1 108 1 139 1 367 1 11 1 192 1 38 1 288 1 321 1 
50 1 30 1 2 1 104 1 55 1 34 1 56 1 148 1 262 1 186 1 233 1 59 1 108 4 366 1 9 1 82 1 264 1 367 1 285 1 11 1 110 1 38 3 111 1 313 1 288 4 289 1 214 1 133 1 156 1 157 1 137 1 273 1 244 1 294 1 221 1 321 3 325 2 140 1 139 3 161 2 45 1 69 1 253 1 330 1 
108 2 139 1 30 1 332 1 38 2 288 2 221 1 74 1 321 1 
104 1 246 1 34 1 149 1 221 2 321 3 325 1 233 1 139 3 108 3 9 1 367 1 285 1 11 1 253 1 38 3 111 1 288 3 330 1 
216 1 117 1 221 1 321 2 325 1 139 2 108 2 367 1 38 2 288 2 
156 1 30 1 157 1 273 1 2 1 294 1 244 1 55 1 56 1 262 1 108 1 59 1 69 1 264 1 288 1 
156 1 30 1 157 1 273 1 2 1 295 1 294 1 244 1 56 1 4 1 108 1 59 1 69 1 264 1 288 1 
363 1 122 1 102 1 148 1 106 1 126 1 128 1 234 2 266 1 110 1 289 1 214 1 133 2 216 2 117 2 137 4 220 1 91 1 140 1 161 2 45 1 227 1 359 2 75 1 
108 1 139 1 11 1 111 1 38 1 288 1 208 1 321 1 
70 1 259 1 
70 1 259 1 
100 1 158 1 
100 1 158 1 
100 1 158 1 
70 1 259 1 84 1 
70 1 259 1 84 1 
70 1 342 1 259 1 
100 1 158 1 70 2 287 1 259 2 369 1 
70 1 259 1 84 1 
70 1 259 1 163 1 
70 1 259 1 163 1 
70 1 259 1 163 1 
30 1 197 1 292 1 293 1 198 1 374 1 310 1 259 1 207 1 321 2 297 1 108 2 139 2 338 1 142 1 9 1 70 1 342 1 38 2 267 1 288 2 379 1 212 1 330 1 
215 1 195 1 343 1 292 2 293 2 166 1 374 1 259 2 207 3 149 1 57 1 377 1 297 2 338 2 9 2 70 2 287 1 236 2 330 2 
271 1 182 1 211 1 
204 1 271 1 182 1 
138 1 204 1 271 3 61 1 211 2 268 1 
138 1 204 1 141 1 271 2 61 1 211 1 
138 2 204 1 271 2 211 1 61 1 
331 1 98 3 102 1 54 1 206 1 184 1 149 2 126 1 80 1 109 1 128 1 9 5 37 1 130 2 171 1 266 1 172 2 62 4 370 2 212 1 291 2 65 1 66 1 345 1 198 1 347 1 21 1 22 1 355 3 358 1 379 1 330 5 
164 1 229 1 331 3 98 9 306 1 102 3 307 1 54 1 206 3 184 1 149 5 126 3 109 2 128 3 170 5 9 9 37 1 130 6 339 5 171 2 266 3 172 6 62 7 291 6 65 1 347 6 322 1 21 2 22 2 355 8 356 1 358 2 26 1 379 4 330 9 
164 1 331 2 98 4 102 1 206 1 149 3 80 1 126 1 109 1 128 1 37 1 9 3 130 2 171 1 266 1 172 2 62 2 370 1 291 2 66 1 21 1 22 1 355 3 358 1 379 1 330 3 
164 1 331 3 98 7 306 1 102 2 206 2 149 4 80 1 126 2 109 1 128 2 37 1 9 4 130 4 171 1 266 2 172 4 62 3 370 2 291 4 66 1 21 1 22 1 355 5 356 1 358 1 26 1 379 2 330 4 
180 1 187 1 244 1 
244 1 90 1 
254 1 
59 1 2 1 244 1 
244 1 125 1 
2 1 244 1 
150 1 180 2 59 1 2 1 244 3 114 1 
133 3 97 1 363 3 116 1 217 1 122 2 319 1 137 7 245 1 258 1 199 2 334 1 126 1 68 1 266 1 132 1 359 4 
133 3 97 1 363 3 116 1 217 1 122 2 319 1 137 7 245 1 258 1 199 2 334 1 126 1 68 1 266 1 132 1 359 4 
133 3 97 1 363 3 116 1 217 1 122 2 319 1 137 7 245 1 258 1 199 2 334 1 126 1 68 1 266 1 286 1 132 1 359 4 
97 1 363 10 122 5 102 3 258 1 206 3 334 2 148 1 126 4 128 3 129 1 266 4 132 2 110 1 314 4 214 1 116 1 133 15 155 1 270 1 217 2 319 1 137 31 89 1 245 5 19 3 199 3 323 1 68 2 161 2 45 1 300 1 359 16 96 1 
363 4 97 1 122 3 148 2 334 1 126 1 266 1 110 2 132 1 214 2 318 1 133 4 116 1 217 1 319 1 137 9 245 1 199 2 68 1 161 4 45 2 47 1 359 5 96 1 
362 1 204 1 182 1 231 1 56 1 146 1 60 1 235 1 211 1 268 1 115 1 316 1 213 2 85 1 16 1 156 1 346 1 271 2 118 1 273 1 294 1 41 1 274 1 42 1 120 1 69 1 23 1 380 1 73 2 48 1 
204 1 182 1 231 1 78 1 56 1 146 1 60 1 235 1 211 1 268 1 115 1 316 1 213 3 16 1 156 1 346 2 271 2 118 1 273 1 119 1 294 1 41 1 274 1 120 1 69 1 354 1 23 1 380 1 73 3 48 1 
204 1 182 1 231 1 78 1 56 1 60 1 235 1 211 1 268 1 115 1 316 1 213 2 16 1 156 1 346 2 271 2 273 1 119 1 294 1 41 1 274 1 120 1 69 1 23 1 73 2 
213 1 51 1 269 1 156 1 16 2 157 1 174 1 123 1 118 1 2 1 273 1 294 1 244 1 308 1 41 2 56 1 69 1 354 1 23 2 255 1 115 2 73 1 48 1 
362 1 204 1 182 1 231 1 78 1 56 1 146 1 211 1 268 1 115 1 316 1 213 1 16 1 156 1 271 2 118 1 273 1 294 1 41 1 274 1 42 1 69 1 23 1 380 1 73 1 48 1 
0 1 
98 2 331 2 2 1 104 1 54 1 105 1 183 2 281 2 56 2 149 2 233 1 108 1 188 2 109 1 9 5 285 1 11 1 111 1 112 1 288 1 13 1 290 1 63 2 65 3 156 2 157 2 241 1 243 1 244 1 294 1 347 6 249 1 69 1 22 1 355 2 358 1 74 1 361 2 28 1 303 2 308 1 36 1 37 1 130 2 171 1 38 1 371 2 269 1 134 4 88 1 273 2 176 1 223 1 326 1 330 5 
49 1 65 1 134 2 243 1 104 1 105 1 347 2 249 1 36 1 176 1 233 1 108 1 9 3 285 1 11 1 111 1 38 1 288 1 74 1 361 1 330 3 28 1 
49 1 104 1 105 1 149 1 233 1 36 1 108 1 188 1 9 3 37 1 285 1 11 1 38 1 111 1 288 1 134 3 65 1 243 1 347 1 249 1 176 1 74 1 28 1 330 3 
49 1 104 1 105 1 183 1 149 1 233 1 36 1 108 1 188 1 9 3 37 1 285 1 11 1 38 1 111 1 288 1 65 1 134 3 243 1 347 2 249 1 176 1 74 1 28 1 330 3 361 1 
49 1 230 1 104 1 105 1 54 1 183 2 149 1 282 1 233 1 108 2 109 1 9 3 285 1 11 2 111 1 288 2 65 1 241 1 242 1 243 1 20 1 347 3 249 1 22 1 355 1 357 1 358 1 74 1 361 2 28 1 76 1 36 1 37 1 82 1 130 1 38 2 134 2 376 1 321 1 325 1 176 1 139 1 330 3 
331 2 98 2 104 1 105 1 54 1 183 2 281 2 149 2 233 1 108 1 109 1 188 2 9 4 285 1 11 1 111 1 288 1 112 1 63 2 290 1 65 2 241 1 243 1 347 4 249 1 22 1 355 1 358 1 74 1 28 1 361 2 303 2 36 1 37 1 130 1 38 1 371 2 134 4 176 1 330 4 
230 1 104 1 105 1 54 1 282 1 149 1 233 1 36 1 108 2 109 1 82 1 37 1 9 2 130 1 285 1 11 2 38 2 111 1 288 2 134 2 241 1 242 1 243 1 20 1 321 1 249 1 325 1 176 1 139 1 22 1 355 1 358 1 357 1 74 1 28 1 330 2 
230 1 104 1 105 1 54 1 282 1 149 1 233 1 36 1 108 2 109 1 82 1 37 1 9 2 130 1 285 1 11 2 38 2 111 1 288 2 134 2 241 1 242 1 243 1 20 1 321 1 249 1 325 1 176 1 139 1 22 1 355 1 358 1 357 1 74 1 28 1 330 2 
98 2 104 1 105 1 54 1 183 2 281 2 149 1 58 1 233 1 36 1 108 1 188 2 109 1 37 1 9 4 130 1 285 1 11 1 38 1 111 1 113 2 112 1 288 1 371 2 154 1 194 1 65 2 134 4 243 1 67 1 347 4 248 2 249 1 176 1 22 1 355 1 358 1 74 1 361 2 28 1 330 4 
230 1 104 1 105 1 54 1 183 1 149 1 282 1 233 1 108 2 188 1 109 1 9 2 285 1 11 2 111 1 288 2 241 1 242 1 243 1 20 1 347 1 249 1 22 1 355 1 357 1 358 1 74 1 361 1 28 1 36 1 37 1 82 1 130 1 38 2 134 3 376 1 321 1 325 1 176 1 139 1 330 2 
230 1 104 1 105 1 54 1 183 1 149 1 282 1 233 1 108 2 188 1 109 1 9 2 285 1 11 2 111 1 288 2 241 1 242 1 243 1 20 1 347 1 249 1 22 1 355 1 357 1 358 1 74 1 361 1 28 1 36 1 37 1 82 1 130 1 38 2 134 3 376 1 321 1 325 1 176 1 139 1 330 2 
98 2 104 1 54 1 105 1 183 2 281 2 149 1 36 1 233 1 108 1 188 2 109 1 37 1 9 4 130 1 285 1 11 1 38 1 111 1 113 2 112 1 288 1 371 2 290 1 65 2 134 4 243 1 67 1 347 4 248 2 249 1 176 1 22 1 355 1 358 1 74 1 361 2 28 1 330 4 
214 1 133 3 97 1 363 2 116 1 216 1 30 2 122 2 117 1 319 1 137 6 199 1 148 1 334 1 106 1 126 1 140 1 187 1 234 1 45 1 161 2 266 1 132 1 110 1 359 3 289 1 
50 1 363 2 30 1 53 1 122 1 102 2 206 2 148 2 126 2 234 11 128 1 341 1 266 1 368 1 110 2 314 3 289 1 214 2 133 6 216 11 117 4 137 14 245 1 89 1 19 3 296 1 323 1 140 2 161 4 45 2 25 1 359 8 276 1 
50 1 30 1 53 1 2 1 55 1 56 1 3 1 34 1 148 1 262 1 59 1 107 1 108 2 127 1 264 1 110 1 38 1 288 2 289 1 214 1 133 1 156 1 157 1 117 1 273 1 137 2 244 1 294 1 221 1 321 1 222 1 140 1 139 1 45 1 161 2 69 1 359 1 276 1 
97 1 50 1 53 1 102 2 2 2 55 2 56 3 334 1 148 3 108 3 59 2 234 7 110 3 288 3 289 3 116 1 196 2 156 3 157 1 117 7 294 2 244 2 245 4 199 1 349 1 353 2 161 6 69 2 359 10 363 8 304 1 30 2 122 4 78 1 206 2 34 1 262 2 126 3 366 2 128 2 264 2 266 3 132 1 38 1 214 3 133 10 216 7 319 1 273 3 137 20 320 1 221 1 321 1 139 1 140 3 45 3 144 2 95 2 276 1 
50 1 1 1 2 2 308 1 78 1 56 7 261 1 148 2 260 1 106 1 168 1 108 1 81 1 38 1 110 2 288 1 289 2 214 2 85 1 133 1 156 8 269 1 157 2 273 8 137 2 294 2 244 3 221 1 321 1 139 1 140 2 201 1 161 4 45 2 69 2 178 1 228 2 359 1 276 1 
363 1 53 1 122 1 102 1 206 1 148 1 108 1 126 1 234 1 128 1 367 1 266 1 110 1 38 1 288 1 289 1 214 1 133 2 216 1 117 1 137 3 321 1 325 1 139 1 140 1 161 2 45 1 302 1 359 1 
214 1 363 1 216 1 117 1 102 1 137 2 245 1 148 1 106 1 140 1 126 1 234 1 45 1 161 2 110 1 289 1 359 2 75 1 
214 1 363 1 133 2 216 1 122 1 117 1 137 2 148 1 106 1 140 1 234 1 128 1 45 1 161 2 266 1 110 1 227 1 289 1 
363 2 122 1 102 1 206 1 148 1 106 1 126 1 234 2 128 1 266 1 110 1 289 1 214 1 133 2 216 2 117 2 137 4 245 1 140 1 161 2 45 1 359 2 
214 1 363 1 216 1 117 1 102 1 137 2 245 1 260 1 148 1 140 1 126 1 234 1 45 1 161 2 110 1 289 1 359 2 75 1 
214 1 363 1 133 2 216 1 122 1 117 1 137 2 260 1 148 1 140 1 234 1 128 1 45 1 161 2 266 1 110 1 227 1 289 1 
363 2 122 1 102 1 206 1 148 1 260 1 126 1 234 2 128 1 266 1 110 1 289 1 214 1 133 2 216 2 117 2 137 4 245 1 140 1 161 2 45 1 359 2 
363 2 122 1 102 1 206 1 148 1 126 1 234 2 128 1 266 1 110 1 289 1 214 1 133 2 216 2 117 2 137 4 245 1 140 1 161 2 45 1 359 2 
50 1 30 1 2 1 55 1 56 1 148 1 262 1 59 1 108 1 366 1 264 1 110 1 288 1 289 1 214 1 133 1 156 1 157 1 137 2 273 1 294 1 244 1 140 1 45 1 161 2 69 1 359 1 276 1 
50 1 30 1 2 1 103 1 4 1 56 1 148 1 59 1 108 1 264 1 110 1 288 1 289 1 214 1 133 1 156 1 157 1 137 2 273 1 294 1 295 1 244 1 140 1 45 1 161 2 69 1 359 1 276 1 
363 2 53 1 122 1 102 1 206 1 148 1 126 1 234 2 128 1 266 1 110 1 289 1 214 1 133 2 216 2 117 2 137 4 245 1 140 1 161 2 45 1 359 2 
363 2 122 1 102 1 2 1 55 1 206 1 56 1 148 1 262 1 126 1 59 1 108 1 366 1 128 1 234 2 264 1 266 1 110 1 288 1 289 1 214 1 133 2 85 1 216 2 196 1 156 1 117 2 137 4 273 1 245 1 294 1 244 1 140 1 45 1 161 2 69 1 359 2 
363 1 53 1 165 1 102 1 206 1 148 1 108 1 126 1 128 1 234 1 367 1 266 1 110 1 38 1 288 1 289 1 214 1 133 1 216 1 117 1 137 3 245 1 321 1 325 1 139 1 140 1 161 2 45 1 359 2 
363 6 305 1 122 3 102 3 206 3 148 2 7 1 126 3 152 1 189 2 128 3 191 2 266 3 12 1 110 2 314 2 315 1 214 2 133 10 272 1 137 19 89 1 245 3 19 1 323 1 250 1 161 4 45 2 47 1 359 9 
363 4 305 1 77 1 122 2 102 3 205 1 280 1 206 3 148 3 126 3 189 4 128 2 191 1 266 2 12 1 110 3 315 2 314 2 214 3 133 12 272 1 137 26 245 2 19 2 323 2 250 2 161 6 45 3 251 1 301 1 47 1 71 1 359 14 96 2 
29 1 97 1 363 8 305 1 77 1 122 4 102 4 205 1 280 1 206 4 334 1 148 3 126 5 152 1 189 4 128 4 191 1 266 5 12 1 132 1 110 3 314 4 315 2 214 3 116 1 133 21 272 1 319 1 137 41 89 1 245 4 19 3 199 1 323 3 250 1 161 6 45 3 251 1 301 1 71 1 47 1 359 20 96 1 
29 1 97 1 363 7 305 1 77 1 122 4 102 4 205 1 280 1 206 4 334 1 148 4 126 5 152 1 189 4 128 3 191 1 266 4 12 1 132 1 110 4 314 4 315 2 214 4 116 1 133 18 272 1 319 1 137 38 89 1 245 3 19 3 199 1 323 3 250 1 161 8 45 4 251 1 301 1 71 1 47 1 359 20 96 2 
97 1 363 14 305 1 77 1 122 7 102 7 205 1 280 1 206 7 334 1 148 2 126 8 189 4 128 7 191 1 266 8 12 1 132 1 368 2 110 2 314 4 315 1 214 2 116 1 133 25 272 1 319 1 137 52 89 2 245 7 19 4 199 1 323 2 250 1 161 4 45 2 251 1 301 1 71 1 47 1 359 27 96 1 
215 1 297 1 343 1 338 1 293 1 292 1 70 1 287 1 259 1 72 1 
342 1 310 1 
297 1 279 1 44 1 338 1 293 1 292 1 70 1 218 1 259 1 
337 1 84 1 
35 1 369 1 163 1 
215 1 195 1 343 1 292 1 293 1 166 1 374 1 259 1 207 2 149 1 57 1 297 1 338 1 9 1 70 1 287 1 236 1 330 1 
215 1 195 1 343 1 292 1 293 1 166 1 374 1 259 1 207 2 149 1 57 1 297 1 338 1 9 1 70 1 287 1 236 1 330 1 
215 1 195 1 343 1 292 1 293 1 166 1 374 1 259 1 207 2 149 1 57 1 297 1 338 1 9 1 70 1 287 1 236 1 330 1 
337 1 369 1 84 1 
337 1 369 1 84 1 
35 1 163 1 
35 1 369 1 163 1 
142 1 267 1 
30 1 310 1 259 1 207 1 57 1 108 2 338 1 9 1 342 1 236 1 38 2 288 2 62 1 267 1 14 1 212 1 197 1 293 1 292 1 198 1 321 2 297 1 139 2 142 1 70 1 379 1 330 1 
50 1 53 1 2 1 56 2 148 1 168 1 263 1 108 2 81 1 38 2 110 1 288 2 289 1 214 1 133 1 239 1 156 2 373 1 135 1 18 1 273 2 137 2 294 1 244 1 140 1 45 1 161 2 69 1 228 2 359 1 276 1 
204 1 85 1 156 2 271 2 182 1 273 2 294 1 231 1 78 1 56 2 41 1 324 1 351 1 69 1 211 1 268 1 380 1 381 1 316 1 
204 1 156 1 271 2 182 1 273 1 231 1 294 1 78 1 56 1 41 1 351 1 169 1 69 1 211 1 268 1 380 1 316 1 
156 1 269 1 157 1 123 1 2 1 273 1 294 1 244 1 308 1 56 1 41 1 324 1 190 1 69 1 
204 1 156 1 271 2 182 1 273 1 231 1 294 1 78 1 56 1 41 1 324 1 351 1 69 1 211 1 268 1 380 1 381 1 316 1 
136 1 
350 1 187 1 37 1 130 1 355 1 299 1 149 1 
303 1 331 1 98 1 54 1 149 2 109 1 9 1 37 1 130 1 63 1 65 1 241 1 347 1 22 1 355 1 358 1 330 1 
180 2 98 12 331 6 99 2 102 2 2 3 104 2 54 4 56 3 149 8 59 3 109 4 9 5 340 2 114 1 291 6 156 3 65 3 17 1 157 1 240 2 159 2 294 3 244 10 347 5 350 1 69 4 22 4 355 9 252 2 299 1 358 4 206 2 79 2 209 2 125 2 126 2 128 2 37 2 130 8 171 2 172 6 266 2 85 1 87 1 273 3 90 3 375 1 92 1 223 1 46 2 144 2 328 1 330 5 
98 6 331 3 77 1 102 2 31 1 54 2 205 1 280 1 206 2 79 2 209 1 149 5 126 2 109 2 128 2 9 1 37 2 130 5 171 1 172 5 266 2 314 1 291 5 65 1 19 1 347 1 323 1 223 1 94 1 22 2 355 8 358 2 301 1 71 1 330 1 
97 1 230 1 54 1 79 2 209 1 334 1 282 1 108 1 126 2 109 1 9 1 82 1 130 2 266 1 11 1 132 1 38 1 288 1 237 1 20 1 321 1 325 1 139 1 22 1 355 2 358 1 357 1 330 1 
54 1 149 1 350 1 109 1 37 1 22 1 130 1 355 1 299 1 358 1 
291 5 98 10 331 5 102 2 206 2 79 2 209 1 149 5 126 2 128 2 130 5 172 5 266 2 355 5 144 1 
65 1 37 1 9 1 149 1 347 1 330 1 
164 1 333 1 2 1 54 1 308 1 56 4 109 2 9 3 130 2 171 2 265 1 13 1 156 4 65 2 269 1 17 1 157 2 88 1 273 4 294 1 244 1 375 2 347 4 69 1 223 2 22 2 355 2 358 2 330 3 
50 1 30 1 2 1 55 1 56 1 148 1 262 1 186 1 108 3 59 1 366 1 82 1 264 1 110 1 38 2 288 3 289 1 214 1 133 1 156 1 157 1 137 1 273 1 294 1 244 1 321 2 325 2 139 2 140 1 161 2 45 1 69 1 
291 2 331 2 98 4 54 1 199 1 149 4 109 1 37 2 223 1 130 2 22 1 171 1 172 2 355 1 358 1 
278 1 297 1 293 1 
278 1 297 1 293 1 
335 1 297 1 343 1 142 1 293 1 
278 1 297 1 293 1 
297 1 293 1 101 1 
297 1 293 1 101 1 
297 1 293 1 101 1 
297 1 293 1 
70 1 259 1 
214 2 97 1 133 4 363 3 116 1 122 2 319 1 137 8 245 1 199 1 148 2 334 1 126 1 45 2 161 4 266 1 110 2 132 1 359 4 96 1 
133 3 116 1 363 2 97 1 122 2 319 1 137 6 199 1 334 1 187 1 126 1 266 1 132 1 359 3 
214 1 133 2 363 2 122 1 102 1 137 4 245 1 206 1 148 1 160 1 126 1 128 1 45 1 161 2 266 1 110 1 359 2 
133 4 363 2 122 1 102 1 137 7 89 1 245 1 19 1 206 1 323 1 126 1 128 1 266 1 314 2 359 3 
97 1 363 9 122 5 102 2 206 2 334 2 148 2 124 1 126 3 128 2 341 1 266 3 132 2 368 1 110 2 314 2 214 2 116 1 133 12 319 1 137 23 245 4 89 1 19 2 199 1 45 2 161 4 359 11 96 2 
133 1 137 1 314 1 
137 1 19 1 359 1 
214 1 133 3 363 3 122 2 102 1 137 6 245 1 206 1 148 1 160 1 126 1 128 1 161 2 45 1 266 1 110 1 144 1 359 3 
363 2 77 1 122 1 102 2 205 1 206 2 280 1 148 1 126 2 128 2 266 2 110 1 314 1 214 1 133 6 137 12 245 1 19 1 323 1 161 2 45 1 301 1 71 1 47 1 359 6 
97 1 133 3 363 2 122 1 137 6 245 1 334 1 126 1 266 1 132 1 359 3 
214 1 363 2 116 1 133 2 122 1 319 1 137 3 245 1 334 1 124 1 148 1 45 1 161 2 132 1 110 1 359 1 96 1 
214 1 363 5 133 5 97 1 122 3 137 10 245 2 148 1 334 2 126 2 161 2 45 1 266 2 110 1 132 2 237 1 47 1 359 5 
214 1 363 1 102 1 137 2 245 1 148 1 126 1 45 1 161 2 110 1 47 1 359 2 
214 1 133 2 363 2 122 1 102 1 137 4 245 1 206 1 148 1 126 1 128 1 45 1 161 2 266 1 110 1 47 1 359 2 
214 3 133 2 363 2 122 1 137 3 245 1 124 1 148 3 334 1 152 1 45 3 161 6 110 3 132 1 47 1 359 1 96 1 
97 2 363 12 122 7 102 3 206 3 334 3 124 1 148 5 126 5 152 1 129 1 128 3 266 5 132 3 110 5 314 4 214 5 116 1 133 18 270 1 319 1 137 34 89 1 245 5 19 3 199 1 323 1 160 1 161 10 45 5 300 1 47 1 359 16 96 2 
363 2 97 1 122 2 148 1 334 1 126 1 266 1 110 1 132 1 314 1 214 1 133 4 116 1 319 1 137 8 19 1 199 1 323 1 161 2 45 1 71 1 47 1 359 4 
97 1 363 3 122 2 102 1 206 1 334 1 148 2 126 2 266 1 132 1 110 2 314 2 214 2 116 1 133 5 319 1 137 11 89 1 245 1 19 1 199 1 323 1 160 1 161 4 45 2 71 1 47 1 359 6 
97 1 363 4 77 1 122 3 102 2 205 1 206 2 280 1 334 1 148 3 126 3 128 2 266 3 132 1 110 3 314 1 214 3 116 1 133 10 319 1 137 19 245 1 19 1 199 1 323 1 160 1 161 6 45 3 301 1 71 1 47 1 359 9 96 1 
97 1 363 5 77 1 122 3 102 2 205 1 206 2 280 1 334 1 148 3 126 3 128 1 266 2 132 1 110 3 314 1 214 3 116 1 133 7 319 1 137 17 245 2 19 1 199 1 323 1 160 1 161 6 45 3 301 1 71 1 47 1 359 10 96 1 
363 2 97 1 122 2 148 1 334 1 126 1 266 1 110 1 132 1 314 1 214 1 133 4 116 1 319 1 137 8 19 1 199 1 323 1 161 2 45 1 71 1 47 1 359 4 
363 2 77 1 122 1 102 2 205 1 206 2 280 1 148 1 126 2 128 2 266 2 110 1 314 1 214 1 133 6 137 12 245 1 19 1 323 1 161 2 45 1 301 1 71 1 47 1 359 6 
97 1 363 5 77 1 122 3 102 2 205 1 280 1 206 2 334 1 148 4 126 3 128 1 266 2 132 1 110 4 314 1 214 4 116 1 133 8 319 1 137 18 245 2 19 1 199 1 323 1 160 1 161 8 45 4 301 1 71 1 47 1 359 10 96 2 
363 6 77 1 122 3 102 3 205 1 280 1 206 3 148 4 126 3 152 1 128 2 266 2 110 4 314 1 214 4 133 7 137 16 245 3 19 1 323 1 161 8 45 4 301 1 71 1 47 1 359 9 96 2 
133 4 116 2 363 6 97 1 122 3 319 1 137 7 245 3 334 3 126 1 266 1 132 3 359 3 
97 1 363 4 77 1 122 3 102 2 205 1 280 1 206 2 334 1 148 4 126 3 152 1 128 1 266 2 132 1 110 4 314 1 214 4 116 1 133 8 319 1 137 18 245 1 19 1 199 1 323 1 161 8 45 4 301 1 71 1 47 1 359 10 96 2 
108 1 30 1 332 1 38 1 288 1 147 1 74 1 
30 1 344 1 332 1 32 1 147 1 364 1 200 1 108 1 225 1 38 1 288 1 74 1 
187 1 269 1 156 1 157 1 69 1 2 1 273 1 294 1 244 1 308 1 56 1 
156 1 30 1 157 1 2 1 273 1 244 1 294 1 55 1 56 1 221 1 321 1 59 1 139 1 108 2 69 1 264 1 38 1 288 2 
156 1 30 1 2 2 273 1 244 3 294 1 375 1 55 1 56 1 221 1 321 2 125 1 59 2 139 1 108 2 69 1 285 1 264 1 11 1 46 1 111 1 38 2 288 2 
179 1 156 2 30 1 2 2 273 2 244 3 295 1 294 1 375 1 56 2 221 1 321 2 125 1 59 2 139 1 108 2 69 1 285 1 264 1 11 1 46 1 111 1 38 2 288 2 
179 1 180 1 156 3 157 1 39 1 104 1 2 1 273 3 90 1 244 4 294 1 375 1 56 3 149 1 347 1 125 1 59 1 37 1 69 1 9 2 46 1 330 2 360 1 
179 1 180 1 156 3 157 1 104 1 2 1 273 3 90 1 244 4 294 1 375 1 56 3 149 1 347 1 125 1 59 1 37 1 69 1 9 2 340 1 46 1 330 2 
156 1 69 1 178 1 273 1 294 1 56 1 
85 1 156 7 157 2 1 1 175 1 273 7 2 2 244 3 294 2 78 1 56 6 261 1 168 1 283 1 59 1 201 1 10 1 69 3 178 1 228 1 114 1 
97 1 363 2 30 2 53 1 122 2 2 1 55 1 56 1 334 1 148 2 262 1 126 1 59 1 108 2 366 1 234 1 264 1 266 1 132 1 110 2 38 1 288 2 289 2 214 2 133 3 116 1 85 1 216 1 196 1 156 1 117 1 319 1 135 1 137 6 273 1 244 1 294 1 199 1 221 1 321 1 140 2 139 1 353 1 45 2 161 4 69 1 359 3 
180 1 99 1 104 1 54 2 56 1 149 1 109 2 37 1 9 3 130 1 340 1 62 1 156 1 65 1 17 1 157 1 273 1 159 1 90 1 244 2 347 2 350 1 22 2 355 1 252 1 299 1 358 2 330 3 
85 1 180 1 156 2 273 2 2 1 244 2 294 1 56 2 59 1 69 2 178 1 114 1 328 1 
179 1 85 1 156 4 269 1 157 1 273 4 2 1 308 1 244 1 294 1 56 4 69 1 83 1 
156 2 175 1 273 2 2 1 244 1 294 1 375 1 320 1 56 2 283 1 312 1 59 1 210 1 69 2 
204 1 156 1 157 1 69 1 271 1 182 1 273 1 294 1 231 1 56 1 
168 1 85 1 263 1 156 2 69 1 2 1 273 2 294 1 244 1 78 1 56 2 
85 1 269 1 156 5 157 1 1 1 273 5 2 2 308 1 244 3 294 2 375 1 56 4 261 1 168 1 69 2 83 1 
85 1 269 1 156 5 157 1 1 1 273 5 2 2 308 1 244 3 294 2 375 1 309 1 56 4 168 1 69 2 83 1 
156 1 30 1 157 1 2 1 273 1 244 1 295 1 294 1 56 1 221 1 321 1 59 1 139 1 108 2 69 1 264 1 38 1 288 2 
156 1 175 1 273 1 2 1 244 1 294 1 375 1 56 1 283 1 59 1 10 1 69 2 114 1 
317 1 43 1 64 1 30 1 33 1 
317 1 86 1 64 2 30 1 104 1 33 2 149 1 43 2 233 1 37 1 9 2 143 1 285 1 11 1 253 1 111 1 145 1 62 1 330 2 
317 1 108 1 239 1 64 1 373 1 18 1 33 1 38 1 288 1 
317 1 86 1 143 1 
120 1 187 1 60 1 235 1 
213 1 120 1 60 1 235 1 118 1 73 1 48 1 
16 1 115 1 73 1 
213 3 52 1 173 1 118 1 42 1 120 1 336 2 284 1 60 1 235 1 73 3 48 1 
213 2 120 1 60 1 346 1 275 1 235 1 118 1 73 2 48 1 
213 1 271 1 118 1 182 1 232 1 42 1 235 1 211 1 73 1 48 1 277 1 
213 1 60 1 235 1 118 1 42 1 73 1 48 1 
213 1 120 1 60 2 118 1 42 1 73 1 48 1 
213 2 256 1 60 1 235 1 118 2 224 1 24 1 42 1 73 2 48 2 
213 3 372 1 346 2 118 1 232 1 42 1 120 1 60 1 235 2 131 1 238 1 73 3 48 1 
204 1 213 2 346 1 271 2 118 1 182 1 42 1 120 1 60 1 235 1 177 1 211 1 268 1 73 2 48 1 
213 4 372 1 346 2 118 2 232 1 42 1 5 1 120 1 60 1 275 1 235 2 73 4 48 2 
213 1 120 1 60 1 235 1 118 1 42 1 73 1 48 1 
213 4 372 1 52 1 346 2 118 1 232 1 120 2 352 1 336 1 284 1 60 2 235 3 73 4 48 1 
213 2 346 1 118 1 42 1 6 1 120 1 365 1 298 1 60 1 235 1 73 2 48 1 
213 3 52 2 118 1 42 1 348 1 120 1 336 2 284 1 60 1 235 1 73 3 48 1 
8 1 235 2 311 2 193 1 
213 1 118 1 219 1 42 1 73 1 48 1 
213 2 120 1 60 1 346 1 235 1 118 1 238 1 42 1 73 2 48 1 
151 1 
213 1 120 1 60 1 235 1 118 1 42 1 73 1 48 1 
213 3 346 1 118 1 42 1 120 1 336 1 60 1 235 1 238 1 73 3 48 1 
372 1 352 1 235 1 232 1 
60 1 235 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3624 | < -> !=
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONSTANT | 10154 | 0 -> -1
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
43 4 0 2 127 1 260 1 90 2 283 1 8 1 9 2 372 1 11 2 289 1 34 3 349 6 240 5 291 1 76 1 356 9 376 1 142 9 100 2 143 1 82 2 217 2 249 1 159 1 195 1 359 1 162 1 
43 4 0 2 127 1 260 1 90 2 283 1 8 1 9 2 372 1 11 2 289 1 34 3 349 6 240 5 291 1 76 1 356 9 100 2 376 1 142 9 143 1 82 2 217 2 249 1 159 1 195 1 359 1 162 1 
43 5 0 2 127 1 260 1 90 2 283 1 8 1 9 2 372 1 11 2 289 1 34 4 349 7 240 6 291 1 76 1 356 10 100 2 376 1 142 10 143 1 82 2 217 2 249 1 159 1 195 1 359 1 162 1 
43 3 0 2 127 1 260 1 90 2 283 1 8 1 9 1 372 1 11 2 289 1 34 2 349 4 240 4 291 1 356 7 100 2 376 1 142 7 143 1 82 2 217 2 249 1 159 1 195 1 359 1 162 1 
43 2 11 1 289 1 34 1 349 3 240 3 291 1 76 1 356 4 260 1 90 1 142 4 100 1 217 1 82 1 8 1 9 2 359 1 
105 1 0 1 11 1 108 1 169 1 240 1 291 1 356 2 260 1 142 2 90 1 376 1 82 1 217 1 8 1 162 1 
43 1 0 1 11 2 34 1 349 1 240 2 291 1 356 3 260 1 142 3 283 1 82 2 8 1 
43 4 0 1 253 1 346 1 260 1 90 1 283 1 8 1 9 2 11 2 289 1 34 3 349 7 240 5 291 1 76 1 356 9 142 9 100 1 143 1 82 2 217 1 195 1 359 1 
43 4 0 1 253 1 346 1 260 1 90 1 283 1 8 1 9 2 11 2 289 1 34 3 349 7 240 5 291 1 76 1 356 9 142 9 100 1 143 1 82 2 217 1 195 1 359 1 
317 1 241 1 173 1 
18 1 317 1 179 2 
370 2 371 2 23 1 83 1 379 2 244 2 221 2 210 2 
148 2 324 1 299 1 365 1 110 1 23 1 54 1 3 1 89 2 130 1 58 1 370 3 371 2 61 1 62 1 30 1 180 1 210 2 134 2 307 1 137 2 333 1 352 1 310 2 242 1 311 1 244 2 270 1 245 1 274 1 320 1 83 1 379 3 221 2 41 1 42 1 165 1 
370 1 371 1 23 1 358 1 379 1 244 1 221 1 124 1 374 1 210 1 
167 1 288 1 114 1 202 1 241 1 52 1 244 1 37 1 230 1 317 1 370 1 250 1 379 1 124 1 
167 1 288 1 202 2 241 1 52 1 244 1 230 2 317 1 370 1 371 1 250 1 379 1 221 1 124 1 210 1 
230 1 269 1 121 1 202 1 284 1 
25 1 230 2 269 1 202 2 317 1 284 1 241 1 258 1 
230 1 202 1 284 1 
202 1 23 1 244 1 374 1 230 1 269 1 370 1 371 1 358 1 379 1 221 1 124 1 164 1 210 1 
317 1 
230 2 269 1 202 2 317 1 284 1 241 1 309 1 258 1 
361 2 341 1 202 5 241 1 243 1 258 1 99 2 228 1 230 5 187 2 269 2 20 1 317 1 7 1 306 1 284 2 63 1 192 1 161 1 
83 1 173 1 
33 1 335 1 244 2 370 2 371 1 83 2 379 2 221 1 210 1 
46 1 128 1 145 1 
348 1 137 1 333 1 310 1 54 1 3 1 130 1 58 1 370 1 274 1 62 1 83 1 379 1 41 1 30 1 134 1 
332 1 114 1 33 1 254 2 53 1 244 5 294 1 375 1 370 5 371 1 83 1 379 5 221 4 210 4 
370 2 379 2 244 2 221 2 124 1 374 1 210 2 5 1 
137 1 254 1 333 1 310 1 128 1 244 1 54 1 294 1 3 1 130 1 58 1 370 2 274 1 62 1 379 2 30 1 221 1 41 1 210 1 134 1 
254 1 370 3 371 1 83 1 379 3 244 3 221 3 210 3 
370 1 379 1 244 1 221 1 124 1 374 1 210 1 
33 1 370 1 371 1 335 1 379 1 244 1 221 1 124 1 210 1 
148 2 167 1 324 1 365 1 202 1 254 1 110 1 23 1 52 1 54 1 3 1 89 1 230 1 130 1 58 1 370 4 371 2 62 1 61 1 30 1 180 1 210 3 134 1 307 1 70 1 288 1 137 1 33 1 333 1 352 1 310 1 312 1 244 3 294 1 245 1 274 1 83 1 250 1 379 4 41 1 221 3 124 1 42 1 165 1 
375 1 114 1 370 2 254 1 83 1 379 2 244 2 221 1 210 1 
167 1 288 1 33 1 202 1 254 2 52 1 244 3 312 1 294 1 230 1 317 1 370 3 371 1 102 1 250 1 379 3 221 3 124 1 210 3 
33 1 254 1 128 1 244 2 370 2 371 1 379 2 221 2 145 1 210 2 
137 1 333 1 310 1 54 1 3 1 130 1 58 1 370 1 62 1 274 1 83 1 379 1 41 1 30 1 134 1 
251 1 137 1 333 1 310 1 95 1 54 1 3 1 130 1 58 1 370 1 274 1 83 1 379 1 30 1 134 1 
148 2 125 1 324 1 46 2 365 1 170 1 203 1 110 1 205 1 128 2 89 4 259 1 285 1 180 1 307 1 93 1 311 2 314 1 245 1 246 1 360 1 298 1 42 2 145 2 
370 1 250 1 379 1 244 1 221 1 124 1 210 1 5 1 
38 1 321 1 
38 1 321 1 
189 1 327 1 
189 1 327 1 
189 1 327 1 
38 1 78 1 321 1 
38 1 78 1 321 1 
38 1 184 1 321 1 
282 1 38 2 122 1 189 1 327 1 321 2 
38 1 78 1 321 1 
166 1 38 1 321 1 
166 1 38 1 321 1 
166 1 38 1 321 1 
86 1 149 1 22 1 202 1 55 1 206 1 174 1 230 1 60 1 370 2 234 1 210 2 118 1 184 1 244 2 38 1 273 1 218 1 83 1 321 1 194 1 379 2 221 2 163 1 
86 2 22 2 202 2 94 1 2 1 304 1 174 2 355 1 230 2 38 2 122 1 60 3 152 2 317 1 79 1 273 2 218 1 321 2 123 1 
90 1 100 1 217 1 
105 1 90 1 217 1 
105 1 100 2 90 3 380 1 103 1 303 1 
105 1 100 1 90 2 191 1 380 1 103 1 
105 1 100 1 90 2 380 2 103 1 
361 1 341 2 202 5 87 1 258 1 55 1 206 1 230 5 368 1 284 1 63 3 179 3 285 1 66 1 93 1 117 1 73 1 118 1 241 1 243 1 266 2 99 1 296 1 187 1 269 4 18 1 214 2 246 1 317 2 219 2 84 1 360 1 
361 2 198 1 341 6 200 1 202 9 258 1 343 1 111 1 55 4 230 9 368 1 284 6 63 8 262 1 179 9 285 3 66 2 93 3 73 3 351 5 241 1 243 1 99 2 187 2 269 7 18 3 214 6 246 3 121 5 20 1 317 5 40 1 219 6 84 2 360 3 
361 1 341 2 202 3 87 1 55 1 230 3 63 3 179 4 66 1 285 1 93 1 117 1 73 1 241 1 266 1 99 1 187 1 269 2 18 2 214 2 246 1 20 1 317 3 84 1 219 2 360 1 
361 1 341 4 202 4 87 1 343 1 111 1 55 2 230 4 63 5 179 7 66 1 285 2 93 2 117 1 73 2 241 1 266 2 99 1 187 1 269 3 18 3 214 4 246 2 20 1 317 4 40 1 219 4 84 1 360 2 
274 1 173 1 10 1 
274 1 293 1 
347 1 
58 1 274 1 54 1 
268 1 274 1 
58 1 274 1 
197 1 58 1 334 1 274 3 54 1 10 2 
363 1 203 2 211 1 171 1 35 2 49 1 311 4 89 7 156 1 319 1 160 1 285 1 360 1 298 3 67 1 42 3 68 1 
363 1 203 2 211 1 171 1 35 2 49 1 311 4 89 7 156 1 319 1 160 1 285 1 360 1 298 3 67 1 42 3 68 1 
363 1 203 2 211 1 171 1 35 2 49 1 336 1 311 4 89 7 156 1 319 1 160 1 285 1 360 1 298 3 67 1 42 3 68 1 
148 2 363 2 365 1 203 4 171 4 110 1 49 2 89 26 285 3 67 1 68 2 307 1 93 2 211 2 73 2 183 1 35 3 311 14 17 1 156 1 315 3 337 1 246 2 245 1 297 1 377 3 319 1 160 1 298 8 360 3 42 12 147 1 340 1 
148 4 363 1 365 2 203 3 171 1 110 2 172 1 49 1 88 1 89 9 285 1 67 1 68 1 307 2 211 1 35 2 311 5 156 1 245 2 297 1 319 1 360 1 298 4 42 4 
105 1 0 1 106 1 151 1 302 1 345 1 303 1 130 1 6 1 231 1 260 1 90 2 233 1 64 1 8 1 330 1 30 1 134 1 137 1 11 1 349 1 240 1 310 1 291 1 356 2 100 1 142 2 248 1 217 1 82 1 
105 1 0 1 106 1 151 1 302 1 303 1 345 1 4 1 130 1 6 1 231 1 260 1 232 1 90 2 65 1 64 1 8 1 30 1 134 1 137 1 11 1 349 2 240 1 310 1 356 3 100 1 142 3 248 1 217 1 82 1 
105 1 0 1 106 1 151 1 302 1 345 1 303 1 4 1 130 1 260 1 232 1 90 2 64 1 8 1 30 1 134 1 137 1 349 2 240 1 310 1 356 2 142 2 100 1 248 1 217 1 
0 2 126 1 11 1 137 1 47 1 333 1 265 1 310 1 151 2 1 1 345 2 176 1 130 1 356 1 58 1 142 1 248 2 82 1 274 1 65 1 30 1 331 1 134 1 
105 1 0 1 106 1 151 1 302 1 345 1 303 1 4 1 130 1 6 1 231 1 90 2 233 1 64 1 30 1 134 1 137 1 11 1 310 1 291 1 356 1 100 1 142 1 248 1 217 1 82 1 
316 1 
44 1 341 2 202 5 109 1 258 3 52 1 112 4 305 1 58 1 57 1 261 2 63 2 263 1 66 1 114 1 115 1 308 1 265 1 155 1 310 2 18 2 317 2 21 2 274 1 124 1 361 1 167 1 230 5 130 1 369 2 370 1 284 6 179 2 29 2 30 1 331 1 134 2 235 1 31 2 288 1 239 1 137 2 333 2 241 1 243 1 292 1 244 1 186 1 141 2 99 1 37 1 295 2 187 1 250 1 379 1 
167 1 44 1 202 3 258 1 52 1 112 2 230 3 57 1 370 1 261 1 284 2 263 1 235 1 288 1 114 1 309 1 244 1 292 1 37 1 250 1 379 1 124 1 
167 1 44 1 202 3 258 1 52 1 112 3 230 3 57 1 369 1 370 1 284 1 263 1 235 1 288 1 114 1 241 1 309 1 244 1 292 1 37 1 317 1 250 1 379 1 124 1 
167 1 44 1 202 3 258 1 52 1 112 3 230 3 57 1 369 1 370 1 261 1 284 2 263 1 29 1 235 1 288 1 114 1 309 1 241 1 244 1 292 1 37 1 317 1 250 1 379 1 124 1 
361 1 167 1 44 1 341 1 201 1 202 5 258 3 227 1 52 1 112 6 230 5 369 4 57 1 370 1 261 4 284 7 63 1 263 1 27 1 29 4 235 1 31 2 239 1 288 1 114 1 115 1 241 5 309 1 243 1 244 1 292 1 141 2 99 1 37 1 295 2 187 1 18 2 21 2 247 1 317 5 250 1 379 1 144 1 124 1 
44 1 341 1 202 4 258 2 52 1 112 4 57 1 261 2 63 1 263 1 114 1 115 1 155 1 18 2 21 2 317 2 124 1 167 1 361 1 230 4 369 2 370 1 284 4 179 2 29 2 235 1 31 2 239 1 288 1 241 1 243 1 244 1 292 1 99 1 37 1 141 2 187 1 295 2 250 1 379 1 
361 1 167 1 44 1 341 1 202 4 258 2 227 1 52 1 112 4 230 4 369 2 57 1 261 2 370 1 284 4 63 1 263 1 29 2 27 1 235 1 31 2 239 1 288 1 114 1 115 1 241 1 243 1 244 1 292 1 141 2 37 1 99 1 295 2 187 1 18 2 317 1 21 2 247 1 250 1 379 1 124 1 
361 1 167 1 44 1 341 1 202 4 258 2 227 1 52 1 112 4 230 4 369 2 57 1 261 2 370 1 284 4 63 1 263 1 29 2 27 1 235 1 31 2 239 1 288 1 114 1 115 1 241 1 243 1 244 1 292 1 141 2 37 1 99 1 295 2 187 1 18 2 317 1 21 2 247 1 250 1 379 1 124 1 
361 1 167 1 44 1 341 1 202 4 48 1 258 2 325 2 227 1 52 1 112 4 230 4 369 2 57 1 261 2 370 1 284 4 63 1 263 1 179 2 29 2 132 2 235 1 31 2 153 1 288 1 114 1 115 1 241 1 243 1 244 1 292 1 37 1 99 1 187 1 39 1 317 1 21 2 250 1 379 1 124 1 
361 1 167 1 44 1 341 1 202 4 201 1 258 2 227 1 52 1 112 5 230 4 57 1 369 3 370 1 261 3 284 5 63 1 263 1 29 3 27 1 235 1 31 2 239 1 288 1 114 1 115 1 241 1 243 1 244 1 292 1 141 2 99 1 37 1 295 2 187 1 18 2 317 1 21 2 247 1 250 1 379 1 124 1 
361 1 167 1 44 1 341 1 202 4 201 1 258 2 227 1 52 1 112 5 230 4 57 1 369 3 370 1 261 3 284 5 63 1 263 1 29 3 27 1 235 1 31 2 239 1 288 1 114 1 115 1 241 1 243 1 244 1 292 1 141 2 99 1 37 1 295 2 187 1 18 2 317 1 21 2 247 1 250 1 379 1 124 1 
44 1 341 1 202 4 258 2 52 1 112 4 57 1 261 2 63 1 263 1 153 1 114 1 115 1 155 1 21 2 317 1 124 1 167 1 361 1 325 2 230 4 369 2 370 1 284 4 179 2 29 2 132 2 235 1 31 2 288 1 241 1 243 1 244 1 292 1 99 1 37 1 187 1 250 1 379 1 
148 2 363 1 324 1 46 1 365 1 203 2 110 1 128 1 173 1 89 6 259 1 285 1 67 1 180 1 68 1 307 1 35 1 311 3 156 1 245 1 319 1 83 2 298 2 360 1 145 1 42 3 
148 4 324 2 199 1 46 11 224 1 365 2 203 1 256 1 171 1 110 2 128 11 89 14 285 2 180 1 307 2 136 1 93 1 73 2 242 1 311 8 315 3 337 1 157 1 245 2 246 2 377 3 158 1 83 1 298 2 360 1 42 6 145 4 165 1 
148 2 324 1 199 1 365 1 254 1 110 1 280 1 367 1 54 1 3 1 89 2 130 1 58 1 370 2 62 1 30 1 180 1 134 1 210 1 307 1 348 1 137 1 333 1 310 1 242 1 244 1 311 1 294 1 140 1 245 1 274 1 83 1 379 2 41 1 221 1 145 1 42 1 165 1 
148 6 199 1 107 2 46 7 342 1 203 4 254 1 110 3 54 2 4 1 3 2 207 1 58 2 61 2 62 2 67 1 210 1 68 1 307 3 12 2 350 2 73 2 310 3 311 10 156 1 319 1 274 2 83 2 360 3 221 1 165 1 363 1 324 3 365 3 277 2 171 4 128 7 89 20 130 2 370 3 285 3 30 2 180 3 134 3 92 1 137 3 93 2 333 1 35 1 242 1 244 1 294 1 245 3 246 2 379 3 41 2 298 8 42 10 145 7 
148 4 324 2 299 2 364 1 365 2 254 1 257 1 110 2 4 1 89 2 259 1 130 2 58 2 370 1 330 1 30 2 180 2 210 1 134 8 331 1 307 2 137 7 71 1 333 2 265 1 310 8 242 1 244 1 311 1 188 1 245 2 80 1 318 1 274 3 379 1 221 1 42 1 146 1 165 1 
148 2 324 1 46 1 199 1 365 1 203 1 110 1 128 1 89 3 370 1 371 1 285 1 180 1 210 1 307 1 93 1 33 1 73 1 244 1 311 1 15 1 245 1 246 1 379 1 298 1 221 1 360 1 145 1 42 2 
148 2 324 1 307 1 46 1 365 1 171 1 110 1 128 1 311 2 89 2 259 1 314 1 245 1 246 1 285 1 298 1 180 1 145 1 
148 2 324 1 307 1 46 1 93 1 365 1 203 1 170 1 110 1 128 1 89 2 259 1 245 1 298 1 360 1 180 1 145 1 42 2 
148 2 324 1 46 2 365 1 203 1 171 1 110 1 128 2 89 4 259 1 285 1 180 1 307 1 93 1 73 1 311 2 246 1 245 1 298 2 360 1 145 2 42 2 
148 2 324 1 307 1 46 1 365 1 171 1 110 1 128 1 311 2 89 2 314 1 245 1 246 1 285 1 298 1 180 1 145 1 146 1 
148 2 324 1 307 1 46 1 93 1 365 1 203 1 170 1 110 1 128 1 89 2 245 1 298 1 360 1 180 1 145 1 42 2 146 1 
148 2 324 1 46 2 365 1 203 1 171 1 110 1 128 2 89 4 285 1 180 1 307 1 93 1 73 1 311 2 246 1 245 1 298 2 360 1 145 2 42 2 146 1 
148 2 324 1 46 2 365 1 203 1 171 1 110 1 128 2 89 4 285 1 180 1 307 1 93 1 73 1 311 2 246 1 245 1 298 2 360 1 145 2 42 2 
148 2 324 1 365 1 110 1 54 1 3 1 89 2 130 1 58 1 370 1 62 1 61 1 30 1 180 1 134 1 307 1 137 1 333 1 310 1 242 1 311 1 245 1 274 1 83 1 379 1 41 1 42 1 165 1 
148 2 251 1 324 1 365 1 110 1 54 1 3 1 89 2 130 1 58 1 370 1 30 1 180 1 134 1 307 1 137 1 333 1 95 1 310 1 242 1 311 1 75 1 245 1 274 1 83 1 379 1 42 1 165 1 
148 2 324 1 199 1 46 2 365 1 203 1 171 1 110 1 128 2 89 4 285 1 180 1 307 1 93 1 73 1 311 2 246 1 245 1 298 2 360 1 145 2 42 2 
148 2 324 1 46 2 277 1 365 1 203 1 171 1 110 1 128 2 54 1 3 1 89 4 130 1 58 1 370 1 62 1 61 1 285 1 30 1 330 1 180 1 134 1 307 1 93 1 137 1 73 1 310 1 311 2 246 1 245 1 274 1 379 1 360 1 298 2 41 1 42 2 145 2 
148 2 324 1 199 1 46 1 365 1 171 1 110 1 128 1 89 3 370 1 371 1 285 1 180 1 210 1 307 1 93 1 33 1 73 1 244 1 311 2 245 1 246 1 216 1 379 1 360 1 298 1 221 1 42 1 145 1 
148 4 365 2 203 2 171 2 110 2 172 1 89 14 285 2 133 2 287 2 307 2 93 2 13 1 116 1 73 2 311 7 185 1 120 1 77 1 315 1 215 1 337 1 245 2 246 2 377 1 360 2 298 4 381 1 42 7 
148 6 365 3 203 2 255 1 171 2 110 3 172 1 89 26 328 1 285 3 133 4 287 1 307 3 93 2 13 1 72 1 116 2 73 3 74 1 311 14 185 2 212 1 77 1 315 2 215 1 245 3 337 2 246 3 297 2 377 2 298 4 360 2 42 12 322 1 
148 6 363 1 365 3 203 3 255 1 171 3 366 1 110 3 172 1 89 36 328 1 285 4 67 1 133 4 68 1 287 1 307 3 93 3 13 1 72 1 116 1 73 3 35 1 74 1 311 18 185 2 212 1 77 1 156 1 315 3 215 1 337 3 245 3 246 3 297 1 377 3 319 1 298 6 360 4 381 1 42 18 322 1 
148 8 363 1 365 4 203 3 255 1 171 2 366 1 110 4 172 1 89 33 328 1 285 4 67 1 133 4 68 1 287 1 307 4 93 2 13 1 72 1 116 1 73 3 35 1 74 1 311 18 185 2 212 1 77 1 156 1 315 3 215 1 337 3 245 4 246 3 297 2 377 3 319 1 298 5 360 3 381 1 42 15 322 1 
148 2 363 1 365 1 203 3 255 1 171 2 110 1 172 1 89 29 328 1 285 4 67 1 133 3 68 1 287 1 307 1 93 3 13 1 72 1 116 1 73 3 35 1 74 1 311 15 185 1 212 1 77 1 156 1 315 2 215 1 337 2 245 1 246 3 377 2 319 1 298 5 360 4 42 14 322 1 
355 1 86 1 38 1 19 1 22 1 122 1 273 1 94 1 321 1 174 1 
184 1 163 1 
135 1 86 1 38 1 22 1 190 1 357 1 273 1 321 1 174 1 
78 1 204 1 
282 1 166 1 272 1 
86 1 22 1 202 1 94 1 304 1 174 1 355 1 230 1 38 1 122 1 60 2 152 1 317 1 79 1 273 1 218 1 321 1 123 1 
86 1 22 1 202 1 94 1 304 1 174 1 355 1 230 1 38 1 122 1 60 2 152 1 317 1 79 1 273 1 218 1 321 1 123 1 
86 1 22 1 202 1 94 1 304 1 174 1 355 1 230 1 38 1 122 1 60 2 152 1 317 1 79 1 273 1 218 1 321 1 123 1 
282 1 78 1 204 1 
282 1 78 1 204 1 
166 1 272 1 
282 1 166 1 272 1 
149 1 194 1 
86 1 149 1 22 1 202 1 55 1 206 1 174 1 230 1 152 1 60 1 370 2 326 1 234 1 210 2 118 1 184 1 244 2 269 1 38 1 273 1 83 1 321 1 194 1 379 2 123 1 221 2 163 1 
148 2 324 1 299 2 199 1 365 1 257 1 110 1 89 2 229 1 130 1 58 1 59 1 370 2 28 1 30 1 180 1 134 2 286 1 307 1 137 2 310 2 242 1 244 2 311 1 245 1 80 1 274 1 379 2 42 1 104 1 165 1 
105 1 106 1 137 2 138 1 310 2 302 1 51 1 303 1 345 1 97 1 4 1 130 1 231 1 100 1 90 2 217 1 30 1 330 1 134 2 
105 1 222 1 106 1 137 1 310 1 302 1 303 1 345 1 97 1 4 1 130 1 231 1 100 1 90 2 217 1 30 1 134 1 
323 1 137 1 126 1 333 1 265 1 310 1 51 1 345 1 130 1 58 1 274 1 30 1 134 1 331 1 
105 1 106 1 137 1 138 1 310 1 302 1 51 1 303 1 345 1 97 1 4 1 130 1 231 1 100 1 90 2 217 1 30 1 134 1 
339 1 
341 1 317 1 7 1 306 1 63 1 241 1 173 1 
361 1 341 1 202 1 258 1 230 1 284 1 63 1 179 1 239 1 241 1 243 1 99 1 141 1 295 1 187 1 18 1 317 2 
197 1 341 8 202 5 50 1 258 3 54 3 56 2 58 3 7 1 306 1 63 9 66 2 69 2 10 2 308 1 350 2 73 2 354 1 310 3 14 2 268 2 214 6 18 6 317 8 81 2 274 10 219 6 220 2 360 2 361 4 167 2 225 1 175 1 230 5 130 3 284 5 179 12 285 2 330 1 30 4 134 3 182 2 137 3 93 2 333 1 241 2 243 4 293 3 36 1 99 4 98 2 187 4 338 2 246 2 
361 2 341 5 202 1 255 1 258 1 344 1 230 1 284 1 63 8 179 6 66 1 328 1 285 2 237 1 93 2 308 1 73 2 241 2 243 2 74 1 212 1 99 2 187 2 315 1 214 5 18 3 337 1 246 2 317 5 81 2 377 1 219 5 220 1 360 2 322 1 
361 1 363 1 341 2 301 1 202 1 23 1 230 1 370 1 371 1 63 2 285 2 210 1 68 1 243 1 244 1 374 1 99 1 187 1 156 1 247 1 81 2 358 1 379 1 220 1 360 1 221 1 124 1 164 1 
361 1 341 1 241 1 243 1 99 1 187 1 7 1 317 1 306 1 63 1 
341 5 93 2 350 1 73 2 214 5 18 5 246 2 317 5 81 2 63 5 179 10 285 2 219 5 220 1 360 2 
230 1 202 1 317 1 284 1 241 1 258 1 
361 2 341 2 202 3 225 2 109 1 226 1 258 2 230 3 130 1 58 1 284 4 63 2 66 2 30 1 134 4 331 1 137 4 308 2 333 2 265 1 354 1 310 4 243 1 186 1 99 2 16 1 187 2 20 1 274 1 
148 2 324 1 365 1 110 1 23 1 54 1 3 1 89 1 130 1 58 1 370 3 371 2 61 1 62 1 30 1 180 1 134 1 210 2 307 1 137 1 333 1 352 1 310 1 244 2 245 1 274 1 83 1 379 3 221 2 41 1 42 1 165 1 
361 1 341 2 308 1 35 1 241 2 243 1 99 1 187 1 214 2 18 2 317 4 63 1 179 4 219 2 66 1 
113 1 22 1 174 1 
113 1 22 1 174 1 
149 1 22 1 279 1 94 1 174 1 
113 1 22 1 174 1 
22 1 181 1 174 1 
22 1 181 1 174 1 
22 1 181 1 174 1 
22 1 174 1 
38 1 321 1 
148 4 307 2 363 1 365 2 203 2 171 1 35 1 110 2 311 4 89 8 156 1 245 2 297 1 319 1 285 1 360 1 298 3 67 1 42 4 68 1 
363 1 203 2 35 1 173 1 311 3 89 6 156 1 319 1 285 1 298 2 360 1 67 1 42 3 68 1 
148 2 307 1 93 1 168 1 365 1 203 1 73 1 171 1 110 1 311 2 89 4 245 1 246 1 285 1 360 1 298 2 42 2 
89 2 315 1 337 1 377 1 311 1 42 1 
148 4 363 2 365 2 256 1 203 5 171 4 110 2 89 23 285 3 67 1 68 2 307 2 93 2 73 2 35 1 311 11 156 1 315 2 246 2 157 1 245 2 297 2 158 1 377 2 319 1 193 1 298 9 360 3 42 12 
89 1 315 1 42 1 
89 1 377 1 311 1 
148 2 307 1 93 1 365 1 168 1 203 2 350 1 73 1 171 1 110 1 311 3 89 6 245 1 246 1 285 1 298 3 360 1 42 3 
148 2 365 1 255 1 203 1 171 1 110 1 172 1 89 12 285 2 328 1 307 1 93 2 73 2 74 1 311 6 212 1 315 1 337 1 245 1 246 2 377 1 360 2 298 2 42 6 322 1 
363 1 203 1 171 1 311 3 89 6 156 1 285 1 360 1 298 2 42 3 68 1 
148 2 363 1 307 1 365 1 203 1 171 1 110 1 311 1 89 3 245 1 297 1 319 1 193 1 298 2 67 1 42 2 68 1 
148 2 307 1 363 2 365 1 301 1 203 3 171 2 110 1 172 1 311 5 89 10 156 1 245 1 285 2 298 5 360 2 42 5 68 2 
148 2 307 1 365 1 171 1 110 1 172 1 311 2 89 2 245 1 246 1 285 1 298 1 
148 2 307 1 93 1 365 1 203 1 73 1 171 1 110 1 172 1 311 2 89 4 245 1 246 1 285 1 360 1 298 2 42 2 
148 6 307 3 363 1 365 3 203 1 171 1 110 3 172 1 311 1 89 3 245 3 297 1 193 1 298 2 381 1 42 2 68 1 
148 10 363 3 168 1 365 5 203 6 171 4 110 5 172 1 89 29 285 4 67 1 68 3 307 5 93 2 73 2 35 1 183 1 311 14 17 1 156 2 315 3 337 1 245 5 246 2 297 2 377 3 319 1 193 1 298 10 360 4 381 1 42 15 340 1 
148 2 363 1 365 1 203 2 110 1 172 1 89 8 285 1 67 1 68 1 307 1 35 1 311 4 212 1 315 1 156 1 337 1 245 1 377 1 319 1 360 1 298 2 42 4 
148 4 363 1 365 2 168 1 203 2 110 2 172 1 89 8 285 1 67 1 68 1 307 2 35 1 311 4 212 1 156 1 315 1 337 1 245 2 377 1 319 1 360 1 298 2 42 4 
148 6 363 1 168 1 365 3 255 1 203 3 171 1 110 3 172 1 89 19 285 3 328 1 67 1 68 1 307 3 93 2 73 2 35 1 74 1 311 9 212 1 156 1 315 1 337 1 245 3 246 2 297 1 377 1 319 1 360 3 298 4 42 10 322 1 
148 6 363 1 168 1 365 3 255 1 203 3 171 2 110 3 172 1 89 17 285 3 328 1 67 1 68 1 307 3 93 1 73 2 35 1 74 1 311 10 212 1 156 1 315 1 337 1 245 3 246 2 297 1 377 1 319 1 360 2 298 5 42 7 322 1 
148 2 363 1 365 1 203 2 110 1 172 1 89 8 285 1 67 1 68 1 307 1 35 1 311 4 212 1 315 1 156 1 337 1 245 1 377 1 319 1 360 1 298 2 42 4 
148 2 365 1 255 1 203 1 171 1 110 1 172 1 89 12 285 2 328 1 307 1 93 2 73 2 74 1 311 6 212 1 315 1 337 1 245 1 246 2 377 1 360 2 298 2 42 6 322 1 
148 8 363 1 168 1 365 4 255 1 203 3 171 2 110 4 172 1 89 18 328 1 285 3 67 1 68 1 307 4 93 1 73 2 35 1 74 1 311 10 212 1 156 1 315 1 337 1 245 4 246 2 297 2 377 1 319 1 360 2 298 5 42 8 322 1 
148 8 365 4 255 1 203 3 171 3 110 4 172 1 89 16 328 1 285 3 307 4 93 2 73 3 74 1 311 9 212 1 315 1 337 1 245 4 246 3 297 2 377 1 360 2 298 6 381 1 42 7 322 1 
363 3 203 3 171 3 311 3 89 7 156 1 319 2 285 1 360 1 298 6 67 1 42 4 68 3 
148 8 363 1 365 4 255 1 203 3 171 1 110 4 172 1 89 18 328 1 285 3 67 1 68 1 307 4 93 1 73 2 35 1 74 1 311 10 212 1 156 1 315 1 337 1 245 4 246 2 297 2 377 1 319 1 360 2 298 4 381 1 42 8 322 1 
375 1 114 1 370 1 290 1 83 1 379 1 244 1 
276 1 238 1 114 1 300 1 290 1 139 1 244 1 375 1 178 1 370 1 83 1 379 1 
130 1 58 1 137 1 333 1 265 1 274 1 310 1 173 1 30 1 331 1 134 1 
137 1 254 1 333 1 310 1 244 1 54 1 3 1 130 1 58 1 370 2 274 1 62 1 83 1 379 2 30 1 221 1 210 1 134 1 
225 1 254 1 54 2 3 1 56 1 130 1 58 2 370 2 62 1 30 1 134 1 210 2 288 1 137 1 310 1 244 2 268 1 274 3 83 1 250 1 379 2 221 1 124 1 
278 1 225 1 254 1 54 2 3 1 56 1 130 1 58 2 370 2 30 1 134 2 210 2 288 1 137 2 95 1 310 2 244 2 268 1 274 3 83 1 250 1 379 2 221 1 124 1 
167 1 202 2 278 1 225 1 54 1 56 1 230 2 130 1 58 1 284 1 30 1 134 3 10 1 32 1 137 3 333 1 310 3 241 1 293 1 268 1 317 1 378 1 274 4 
167 1 137 3 202 2 278 1 333 1 225 1 241 1 310 3 14 1 54 1 293 1 56 1 230 2 268 1 130 1 58 1 317 1 284 1 274 4 30 1 134 3 10 1 
130 1 137 1 364 1 310 1 30 1 134 1 
299 1 197 1 85 1 137 6 364 1 71 1 333 2 257 1 310 7 54 1 4 1 281 1 130 2 188 1 58 2 318 1 274 3 330 1 30 3 131 1 134 7 
148 4 199 1 46 1 254 1 203 2 110 2 54 1 3 1 59 1 58 1 62 1 61 1 67 1 210 1 68 1 307 2 12 1 310 1 311 3 156 1 274 1 319 1 83 2 221 1 360 1 324 2 363 1 277 1 365 2 128 1 89 6 130 1 370 2 285 1 330 1 30 1 180 2 134 1 137 1 35 1 244 1 245 2 379 2 41 1 298 2 145 1 42 3 
361 2 167 1 341 1 202 3 258 1 230 3 7 1 306 1 284 2 63 1 134 1 69 1 10 1 182 1 137 1 333 1 241 1 310 1 354 1 243 2 14 1 293 1 99 2 98 1 187 2 269 1 317 1 274 2 
197 1 137 2 364 1 310 2 54 1 175 1 130 1 58 1 274 2 330 1 30 2 134 2 10 1 
196 1 137 4 278 1 333 1 265 1 310 4 130 1 58 1 274 1 30 1 330 1 134 4 331 1 
45 1 85 1 137 2 225 1 310 2 54 1 207 1 130 1 58 1 101 1 274 1 30 2 131 1 134 2 
105 1 106 1 130 1 137 1 90 1 333 1 217 1 310 1 30 1 134 1 
137 2 257 1 310 2 4 1 130 1 58 1 274 1 330 1 30 1 134 2 286 1 
196 1 137 4 71 1 225 1 333 1 265 1 257 1 310 5 130 2 188 1 58 2 274 3 330 1 30 2 331 1 134 5 
196 1 137 4 150 1 71 1 225 1 333 1 265 1 257 1 310 5 130 2 58 2 274 3 330 1 30 2 331 1 134 5 
137 1 254 1 333 1 310 1 95 1 244 1 54 1 3 1 130 1 58 1 370 2 274 1 83 1 379 2 30 1 221 1 210 1 134 1 
197 1 85 1 137 1 225 1 310 1 54 1 281 1 130 1 58 1 274 1 30 2 131 1 134 1 
154 1 24 1 244 1 119 1 229 1 370 1 28 1 379 1 104 1 
154 1 271 1 26 1 
154 1 264 1 83 1 24 1 119 1 
167 1 288 1 154 1 202 2 264 2 353 1 241 1 24 2 52 1 312 1 119 2 230 2 269 1 271 1 317 1 26 1 83 1 250 1 124 1 
260 1 240 1 8 1 173 1 
356 1 11 1 260 1 142 1 82 1 240 1 8 1 
0 1 142 1 248 1 
313 1 356 3 11 1 260 1 373 1 142 3 82 1 240 1 8 1 275 1 291 1 162 2 
356 2 11 1 260 1 142 2 349 1 82 1 240 1 8 1 9 1 
43 1 11 1 289 1 240 1 291 1 356 1 142 1 100 1 90 1 82 1 217 1 
356 1 11 1 260 1 142 1 82 1 240 1 291 1 
356 1 11 1 260 2 142 1 82 1 8 1 291 1 
362 1 11 2 252 1 240 1 291 1 356 2 260 1 142 2 82 2 236 1 
43 1 11 1 349 2 34 1 240 2 291 1 356 3 260 1 142 3 143 1 82 1 8 1 195 1 
105 1 11 1 349 1 240 1 96 1 291 1 303 1 356 2 260 1 90 2 142 2 100 1 82 1 217 1 8 1 
43 1 11 2 349 2 34 1 240 2 291 1 76 1 356 4 260 1 142 4 82 2 8 1 9 1 
356 1 11 1 260 1 142 1 82 1 240 1 8 1 291 1 
43 1 11 1 373 1 349 2 34 1 240 3 313 1 356 4 260 2 142 4 82 1 8 2 209 1 162 1 
91 1 223 1 356 2 11 1 260 1 142 2 349 1 82 1 240 1 8 1 291 1 346 1 
11 1 373 1 240 1 291 1 313 2 356 3 260 1 142 3 82 1 8 1 329 1 162 2 
177 2 240 2 129 1 267 1 
356 1 11 1 142 1 82 1 208 1 291 1 
356 2 11 1 260 1 142 2 349 1 82 1 240 1 8 1 195 1 291 1 
213 1 
356 1 11 1 260 1 142 1 82 1 240 1 8 1 291 1 
356 3 11 1 260 1 142 3 349 1 82 1 240 1 195 1 8 1 291 1 162 1 
43 1 34 1 240 1 209 1 
260 1 240 1 

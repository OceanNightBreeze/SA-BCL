#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 31 298 123 154 225 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.IllegalArgumentException 317 59 345 26 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 31 298 123 154 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 4492 | + -> *
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8690 | = null
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeOfDay:getMinute()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
162 1 3 1 278 1 117 1 282 1 184 9 47 1 234 1 15 3 325 2 18 2 191 1 128 4 22 7 238 9 352 1 268 2 266 5 353 1 132 1 133 1 309 1 58 1 32 1 
162 1 3 1 278 1 117 1 282 1 184 9 47 1 234 1 15 3 325 2 18 2 191 1 128 4 22 7 238 9 352 1 268 2 266 5 353 1 132 1 133 1 309 1 58 1 32 1 
60 1 90 1 162 1 3 1 278 2 117 1 282 2 184 9 15 3 325 2 18 2 191 1 128 4 238 9 22 6 352 1 265 1 268 2 266 5 353 2 132 1 133 2 194 1 309 1 108 1 175 1 32 1 58 1 
60 1 90 1 162 1 3 1 278 2 117 1 282 2 184 9 15 3 325 2 18 2 191 1 128 4 238 9 22 6 352 1 265 1 268 2 266 5 353 2 132 1 133 2 194 1 309 1 108 1 175 1 32 1 58 1 
60 1 90 1 162 1 3 1 278 2 117 1 282 2 184 10 15 4 325 2 18 2 191 1 128 5 238 10 22 7 352 1 265 1 268 2 266 6 353 2 132 1 133 2 194 1 309 1 108 1 175 1 32 1 58 1 
60 1 90 1 162 1 3 1 278 2 117 1 282 2 184 7 15 2 325 1 18 2 191 1 128 3 238 7 22 4 352 1 265 1 268 2 266 4 353 2 132 1 133 2 194 1 309 1 108 1 175 1 58 1 
325 2 18 1 191 1 128 2 238 4 22 3 162 1 117 1 282 1 268 1 184 4 266 3 353 1 132 1 133 1 32 1 58 1 15 1 
18 1 112 1 191 1 238 2 98 1 278 1 117 1 265 1 282 1 266 1 268 1 184 2 200 1 353 1 175 1 58 1 
18 2 191 1 128 1 238 3 22 1 278 1 117 1 268 2 184 3 266 2 309 1 58 1 15 1 
64 1 318 1 36 1 
164 2 193 1 36 1 
346 2 252 2 27 2 339 1 165 1 130 2 91 2 25 2 
86 1 252 2 339 1 340 1 113 1 343 1 91 2 317 2 2 1 345 1 346 3 256 1 165 1 362 1 188 2 233 1 235 1 206 1 366 1 149 1 73 1 20 1 130 3 304 1 76 1 351 1 25 2 293 2 27 2 374 1 52 1 29 1 195 1 217 1 376 2 337 1 59 2 
305 1 346 1 252 1 27 1 165 1 342 1 130 1 91 1 271 1 25 1 
130 1 260 1 318 1 25 1 346 1 305 1 331 1 8 1 171 1 134 1 348 1 110 1 273 1 36 1 
252 1 91 1 130 1 260 2 318 1 25 1 331 2 346 1 305 1 27 1 171 1 134 1 110 1 273 1 36 1 
331 1 260 1 262 1 66 1 125 1 
252 1 342 1 297 1 130 1 91 1 260 2 66 1 262 1 318 1 100 1 25 1 305 1 346 1 331 2 27 1 165 1 82 1 271 1 36 1 
331 1 260 1 262 1 
252 1 342 1 260 1 91 1 130 1 66 1 100 1 25 1 305 1 331 1 346 1 27 1 165 1 271 1 
36 1 
252 1 342 1 130 1 91 1 260 2 66 1 262 1 318 1 100 1 25 1 305 1 346 1 331 2 27 1 269 1 165 1 82 1 271 1 36 1 
252 1 222 1 342 1 91 1 315 2 66 2 318 2 40 1 344 1 183 1 346 1 185 1 45 1 165 1 229 1 237 1 126 1 130 1 260 5 262 2 192 5 77 4 329 2 100 1 25 1 78 2 210 2 305 1 267 2 331 5 27 1 174 1 104 2 82 1 271 1 355 1 34 1 36 2 
252 1 340 1 113 1 20 1 343 1 91 1 130 2 142 1 317 1 304 1 345 1 25 1 293 1 346 2 52 1 166 1 106 1 195 1 235 1 59 1 
339 1 64 1 
252 1 339 2 130 2 91 1 4 1 25 2 346 2 27 1 167 1 
334 1 142 1 50 1 
111 1 339 1 340 1 113 1 343 1 20 1 130 1 317 1 304 1 345 1 293 1 346 1 52 1 195 1 235 1 59 1 
346 5 27 1 252 4 339 1 119 1 348 1 166 1 213 1 130 5 91 4 106 2 167 1 25 5 228 1 
305 1 346 2 252 2 130 2 91 2 271 1 12 1 25 2 
346 3 27 1 252 3 339 1 106 1 130 3 91 3 25 3 
305 1 346 1 252 1 130 1 91 1 271 1 25 1 
305 1 346 1 252 1 27 1 130 1 91 1 167 1 4 1 25 1 
86 1 252 3 339 1 340 1 113 1 343 1 91 3 317 1 345 1 346 4 256 1 165 1 362 1 166 1 188 1 167 1 235 1 206 1 149 1 73 1 20 1 130 4 260 1 304 1 351 1 25 3 131 1 293 1 305 1 331 1 306 1 27 2 171 1 134 1 52 1 29 1 106 1 195 1 110 1 217 1 376 2 337 1 273 1 59 1 
346 2 252 1 339 1 119 1 348 1 130 2 91 1 106 1 25 2 
252 3 369 1 260 1 91 3 130 3 25 3 331 1 305 1 346 3 27 1 306 1 171 1 134 1 166 1 106 2 167 1 110 1 273 1 36 1 
252 2 91 2 130 2 142 1 50 1 25 2 346 2 27 1 106 1 167 1 
339 1 340 1 113 1 343 1 20 1 130 1 317 1 304 1 345 1 293 1 346 1 52 1 195 1 235 1 59 1 
339 1 340 1 113 1 343 1 20 1 129 1 130 1 317 1 304 1 345 1 293 1 346 1 84 1 235 1 59 1 
86 1 38 1 142 2 358 1 256 2 187 1 96 1 188 4 205 1 206 1 291 1 73 1 303 1 351 1 50 2 267 1 334 2 374 2 104 1 29 1 30 1 31 1 376 2 337 1 
305 1 346 1 252 1 171 1 130 1 91 1 12 1 25 1 
1 1 300 1 
1 1 300 1 
65 1 327 1 
65 1 327 1 
65 1 327 1 
1 1 300 1 49 1 
1 1 300 1 49 1 
244 1 1 1 300 1 
65 1 327 1 114 1 1 2 300 2 302 1 
1 1 300 1 49 1 
204 1 1 1 300 1 
204 1 1 1 300 1 
204 1 1 1 300 1 
159 1 252 2 339 1 181 1 91 2 1 1 182 1 346 2 361 1 286 1 97 1 258 1 300 1 14 1 127 1 260 1 130 2 261 1 24 1 25 2 331 1 102 1 244 1 377 1 
178 1 260 2 114 1 261 2 1 2 24 2 255 1 264 1 331 2 102 1 285 1 361 2 286 3 201 1 97 2 300 2 124 1 36 1 236 2 
353 1 133 1 282 1 
200 1 353 1 282 1 
200 1 160 1 133 2 161 1 46 1 282 3 
200 1 160 1 133 1 161 1 157 1 282 2 
200 1 133 1 160 1 161 2 282 2 
159 1 338 1 66 4 318 1 298 1 182 1 164 3 163 1 186 1 95 2 45 1 96 1 145 1 258 1 71 2 260 5 262 1 192 2 329 1 77 3 51 1 78 1 210 1 267 1 331 5 212 1 193 1 104 1 82 1 31 1 140 2 36 2 
39 1 66 7 318 1 298 3 183 1 42 1 5 1 164 9 163 2 95 6 45 1 96 3 258 4 125 5 323 5 189 1 71 6 260 9 262 6 192 6 329 2 77 8 51 2 210 2 78 2 267 3 331 9 212 1 193 3 104 3 82 1 31 3 56 1 311 1 36 5 
338 1 318 1 66 2 298 1 183 1 163 1 164 4 95 2 96 1 145 1 258 1 71 2 260 3 192 2 329 1 77 3 51 1 78 1 210 1 331 3 267 1 193 2 104 1 31 1 140 1 36 3 
338 1 39 1 318 1 66 3 298 2 183 1 5 1 164 7 163 1 95 4 96 2 145 1 258 2 189 1 71 4 260 4 192 4 329 1 77 5 51 1 78 1 210 1 331 4 267 2 193 3 104 2 31 2 140 2 36 4 
220 1 64 1 304 1 
177 1 304 1 
221 1 
113 1 235 1 304 1 
243 1 304 1 
235 1 304 1 
220 2 190 1 113 1 310 1 235 1 304 3 
237 1 126 1 180 1 21 1 267 1 294 1 256 3 118 1 374 4 187 2 104 1 105 2 216 1 188 7 205 3 301 1 34 1 
237 1 126 1 180 1 21 1 267 1 294 1 256 3 118 1 374 4 187 2 104 1 105 2 216 1 188 7 205 3 301 1 34 1 
237 1 126 1 180 1 21 1 267 1 294 1 256 3 118 1 374 4 187 2 104 1 105 2 216 1 188 7 205 3 85 1 301 1 34 1 
19 3 48 1 154 1 225 1 298 3 99 1 242 3 267 3 118 1 256 7 374 10 187 1 96 2 104 2 105 1 31 3 216 2 188 17 205 3 123 1 301 2 138 1 
180 1 118 1 256 4 187 3 188 9 205 4 301 1 73 2 237 1 126 1 21 1 351 2 371 1 267 1 373 1 374 5 135 1 104 1 29 2 105 2 216 1 376 4 337 2 34 1 
251 1 341 1 343 1 317 1 226 1 278 1 320 1 117 1 282 2 184 2 200 1 203 1 46 1 18 1 151 1 191 1 20 1 22 1 238 2 293 1 158 1 266 1 268 1 353 1 133 1 335 1 109 1 55 1 58 1 59 1 
251 1 341 1 343 1 317 1 226 1 278 1 117 1 282 2 184 3 200 1 203 1 46 1 364 1 18 1 150 1 151 1 191 1 20 1 238 3 22 2 293 1 266 1 268 1 353 1 133 1 335 1 109 1 55 1 59 1 275 1 
343 1 317 1 226 1 278 1 117 1 282 2 184 2 200 1 203 1 46 1 364 1 150 1 151 1 191 1 20 1 238 2 22 2 293 1 266 1 353 1 133 1 335 1 109 1 55 1 59 1 
343 1 314 1 317 1 226 2 278 2 345 1 227 1 184 1 203 2 235 1 289 1 18 1 20 1 368 1 238 1 304 1 293 1 268 1 333 1 55 2 59 1 275 1 35 1 
251 1 341 1 343 1 317 1 226 1 278 1 320 1 282 2 184 1 200 1 203 1 46 1 364 1 18 1 151 1 20 1 238 1 293 1 268 1 353 1 133 1 335 1 109 1 55 1 58 1 59 1 
74 1 
252 1 342 1 198 2 116 3 299 5 346 2 8 1 165 1 348 1 350 1 10 3 69 1 70 1 17 2 260 4 130 2 262 5 77 1 25 2 210 1 78 1 305 2 27 1 171 1 134 1 354 1 82 2 136 1 271 1 273 1 36 1 87 3 356 1 91 1 318 1 45 1 192 1 330 1 329 1 100 1 241 1 331 4 245 1 193 2 295 2 336 2 375 1 248 1 110 1 
252 1 342 1 198 2 116 3 299 5 346 2 8 1 165 1 348 1 350 1 10 3 69 1 70 1 17 2 260 4 130 2 262 5 77 1 25 2 210 1 78 1 305 2 27 1 171 1 134 1 354 1 82 2 136 1 271 1 273 1 36 1 87 3 356 1 91 1 318 1 45 1 192 1 330 1 329 1 100 1 241 1 331 4 245 1 193 2 295 2 336 2 375 1 248 1 110 1 
87 1 356 1 312 2 198 2 318 1 116 1 346 1 299 3 284 1 164 2 8 1 45 1 348 1 10 1 70 1 153 1 260 3 130 1 262 2 192 1 77 1 330 1 329 1 241 1 25 1 78 1 210 1 331 3 305 1 171 1 134 1 82 1 336 2 136 1 375 1 137 1 110 1 273 1 36 1 
113 1 343 2 314 1 317 2 345 2 163 1 45 1 257 1 235 2 365 1 20 3 260 2 262 2 155 1 192 1 304 2 329 1 77 1 26 1 293 2 78 1 210 1 331 2 333 1 28 1 82 1 57 1 59 2 250 1 
356 1 116 1 346 1 299 2 8 1 348 1 70 1 130 1 260 3 262 2 330 1 25 1 331 3 305 1 269 1 171 1 134 1 82 1 136 1 375 1 110 1 273 1 
356 1 318 1 346 1 299 3 8 1 348 1 10 1 70 1 130 1 260 3 262 1 330 1 25 1 331 3 305 1 171 1 269 1 134 1 82 1 136 1 375 1 110 1 273 1 36 1 
87 1 356 1 116 1 346 1 299 3 8 1 348 1 10 1 70 1 130 1 260 3 262 2 330 1 25 1 331 3 305 1 269 1 171 1 134 1 82 1 136 1 375 1 110 1 273 1 
252 1 342 1 198 2 116 4 299 4 346 2 8 1 165 1 348 1 350 1 10 2 69 1 70 1 17 2 130 2 260 5 262 7 77 1 25 2 210 1 78 1 305 2 27 1 172 1 171 1 269 1 134 1 354 1 82 3 136 1 271 1 273 1 36 1 87 4 356 1 91 1 318 1 45 1 192 1 330 1 329 1 100 1 241 1 331 5 245 1 193 2 295 2 336 2 375 1 110 1 248 1 
252 1 342 1 198 2 116 2 299 4 346 2 164 2 8 1 165 1 348 1 10 2 69 1 70 1 17 2 130 2 260 4 262 4 77 1 25 2 210 1 78 1 305 2 27 1 171 1 134 1 82 2 136 1 271 1 273 1 36 1 87 2 356 1 91 1 318 1 284 1 45 1 192 1 329 1 330 1 100 1 241 1 331 4 193 2 295 2 336 2 375 1 110 1 
87 2 356 1 198 2 318 1 116 2 346 1 299 4 8 1 45 1 348 1 350 1 10 2 69 1 70 1 17 2 130 1 260 4 262 4 192 1 77 1 330 1 329 1 241 1 25 1 78 1 210 1 331 4 305 1 245 1 171 1 193 2 134 1 295 2 354 1 82 2 336 2 136 1 375 1 110 1 273 1 36 1 
252 1 342 1 198 2 116 2 299 4 346 2 8 1 165 1 348 1 350 1 10 2 69 1 70 1 17 2 260 4 130 2 262 4 77 1 25 2 210 1 78 1 305 2 27 1 171 1 134 1 354 1 82 2 136 1 271 1 273 1 36 1 87 2 356 1 91 1 318 1 45 1 192 1 329 1 330 1 100 1 241 1 331 4 245 1 193 2 295 2 336 2 375 1 110 1 
252 1 342 1 198 2 116 2 299 4 346 2 164 2 8 1 165 1 348 1 10 2 70 1 208 1 260 4 130 2 262 4 77 1 25 2 210 1 78 1 305 2 27 1 171 1 134 1 82 2 136 1 271 1 137 2 273 1 36 1 87 2 356 1 312 2 91 1 318 1 45 1 153 1 192 1 329 1 330 1 100 1 241 1 101 1 331 4 245 1 336 2 375 1 110 1 
86 1 180 1 339 2 64 1 142 1 256 3 187 2 188 6 205 2 206 1 237 1 73 1 126 1 21 1 50 1 351 1 267 1 334 1 374 3 29 1 104 1 30 1 105 1 376 2 337 1 34 1 
196 1 86 1 339 1 254 1 142 11 298 2 41 1 256 6 187 1 362 1 96 1 188 14 205 2 301 1 206 2 366 1 73 2 19 3 169 1 240 1 99 1 351 2 50 4 242 3 267 2 334 11 374 8 29 2 104 1 31 2 376 4 138 1 337 2 
86 1 111 1 252 1 339 1 340 1 113 1 343 1 91 1 317 1 345 1 359 1 41 1 346 2 256 1 9 1 362 1 166 1 188 2 235 1 206 1 366 1 73 1 20 1 130 2 304 1 50 1 351 1 25 1 293 1 374 1 52 1 29 1 106 1 195 1 376 2 337 1 59 1 139 1 
252 1 339 2 340 2 62 1 113 2 343 2 298 2 345 1 346 3 256 10 166 1 205 8 301 4 206 3 73 3 126 1 207 1 20 2 21 1 130 3 304 2 351 3 263 2 25 1 267 3 29 3 31 2 218 2 34 1 86 3 180 1 91 1 317 3 142 7 41 1 187 4 362 1 96 2 188 20 235 2 364 1 366 1 149 2 237 1 324 2 152 2 370 1 50 7 293 3 334 7 374 10 52 2 104 3 105 1 106 1 195 2 376 6 337 3 59 3 
86 2 252 1 89 1 343 2 91 1 357 1 314 1 317 8 2 2 345 2 67 1 346 1 6 1 256 1 362 1 188 2 235 2 364 1 206 2 366 1 73 2 20 2 130 1 304 3 351 2 25 1 158 1 293 8 333 1 374 1 29 2 54 1 30 1 214 1 106 1 107 1 376 4 337 2 59 7 
86 1 252 1 276 1 91 1 142 1 298 1 41 1 346 1 256 2 187 1 96 1 167 1 188 3 205 1 206 1 73 1 130 1 50 1 351 1 25 1 267 1 27 1 334 1 374 1 29 1 104 1 31 1 376 2 337 1 
86 1 73 1 142 1 358 1 50 1 351 1 267 1 334 1 374 2 29 1 30 1 188 2 31 1 205 1 376 2 301 1 337 1 206 1 
86 1 73 1 291 1 142 1 50 1 351 1 256 2 334 1 187 1 96 1 29 1 104 1 30 1 188 2 205 1 376 2 337 1 206 1 
86 1 73 1 142 2 298 1 50 2 351 1 267 1 256 2 334 2 374 2 187 1 96 1 104 1 29 1 30 1 188 4 31 1 205 2 376 2 301 1 337 1 206 1 
86 1 73 1 357 1 142 1 358 1 50 1 351 1 267 1 334 1 374 2 29 1 188 2 31 1 205 1 376 2 301 1 337 1 206 1 
86 1 73 1 291 1 357 1 142 1 50 1 351 1 256 2 334 1 187 1 96 1 29 1 104 1 188 2 205 1 376 2 337 1 206 1 
86 1 73 1 357 1 142 2 298 1 50 2 351 1 267 1 256 2 334 2 374 2 187 1 96 1 104 1 29 1 188 4 31 1 205 2 376 2 301 1 337 1 206 1 
86 1 73 1 142 2 298 1 50 2 351 1 267 1 256 2 334 2 374 2 187 1 96 1 104 1 29 1 31 1 188 4 205 2 376 2 301 1 337 1 206 1 
86 1 339 1 340 1 113 1 343 1 317 1 345 1 346 1 256 1 362 1 188 2 235 1 206 1 366 1 149 1 73 1 20 1 130 1 304 1 351 1 293 1 374 1 52 1 29 1 195 1 376 2 337 1 59 1 
86 1 339 1 340 1 113 1 343 1 317 1 345 1 346 1 256 1 362 1 188 2 235 1 206 1 366 1 73 1 20 1 129 1 130 1 304 1 351 1 293 1 374 1 247 1 29 1 84 1 376 2 337 1 59 1 
86 1 142 2 298 1 41 1 256 2 187 1 96 1 188 4 205 2 301 1 206 1 73 1 351 1 50 2 267 1 334 2 374 2 29 1 104 1 31 1 376 2 337 1 
86 1 340 1 113 1 343 1 142 2 317 1 298 1 346 1 256 2 187 1 96 1 188 4 205 2 235 1 301 1 206 1 149 1 324 1 73 1 20 1 130 1 304 1 50 2 351 1 293 1 158 1 267 1 334 2 374 2 52 1 104 1 29 1 31 1 195 1 376 2 337 1 59 1 
86 1 252 1 91 1 142 1 298 1 41 1 346 1 256 1 44 1 96 1 167 1 188 3 205 1 301 1 206 1 73 1 130 1 351 1 50 1 25 1 267 1 27 1 334 1 374 2 104 1 29 1 31 1 376 2 337 1 
298 4 256 21 7 1 122 1 205 8 301 4 73 3 126 1 19 3 21 1 209 1 351 3 267 5 29 3 270 1 31 4 138 3 274 1 34 1 179 4 180 1 93 1 280 1 283 1 187 4 96 4 230 1 188 41 363 1 322 2 147 1 148 1 237 1 328 1 99 1 371 1 242 4 373 1 374 20 104 5 105 1 376 6 337 3 
179 4 180 1 298 4 93 1 280 1 283 1 256 18 7 1 187 4 96 3 230 1 122 1 188 38 363 1 205 7 322 2 301 3 148 1 147 1 237 1 73 4 126 1 19 3 21 1 328 1 209 1 99 1 351 4 242 4 371 1 267 5 373 2 374 20 29 4 104 4 270 1 105 1 31 4 376 8 138 3 337 4 274 1 34 1 
179 4 180 1 254 2 298 7 93 1 283 1 256 25 7 1 187 7 96 7 230 1 122 1 188 52 205 14 322 1 301 7 148 1 147 1 237 1 73 2 126 1 19 4 21 1 328 1 209 1 99 2 351 2 242 4 371 1 267 8 373 1 374 27 29 2 104 8 270 1 105 1 31 7 376 4 138 2 337 2 274 1 34 1 
179 2 298 3 279 1 280 1 283 1 256 10 187 3 96 3 230 1 188 19 205 6 322 1 301 3 147 1 73 2 19 1 99 1 351 2 242 2 371 1 267 3 374 9 29 2 104 3 270 2 31 3 376 4 138 1 337 2 274 1 
179 4 298 3 93 1 283 1 256 12 7 1 187 2 96 2 230 1 188 26 122 1 205 4 322 2 301 2 147 2 148 1 73 3 19 2 328 1 209 1 351 3 371 1 242 2 267 3 373 2 374 14 104 2 29 3 270 1 31 3 376 6 337 3 138 2 274 1 
178 1 361 1 223 1 114 1 261 1 97 1 1 1 300 1 24 1 255 1 
244 1 127 1 
361 1 37 1 63 1 261 1 97 1 1 1 300 1 24 1 13 1 
259 1 49 1 
204 1 143 1 302 1 
178 1 260 1 114 1 261 1 1 1 24 1 255 1 264 1 102 1 331 1 361 1 286 2 201 1 97 1 300 1 124 1 36 1 236 1 
178 1 260 1 114 1 261 1 1 1 24 1 255 1 264 1 102 1 331 1 361 1 286 2 201 1 97 1 300 1 124 1 36 1 236 1 
178 1 260 1 114 1 261 1 1 1 24 1 255 1 264 1 102 1 331 1 361 1 286 2 201 1 97 1 300 1 124 1 36 1 236 1 
259 1 302 1 49 1 
259 1 302 1 49 1 
204 1 143 1 
204 1 143 1 302 1 
181 1 377 1 
159 1 252 2 339 1 181 1 91 2 66 1 1 1 182 1 346 2 361 1 201 1 286 1 97 1 258 1 300 1 236 1 14 1 16 1 127 1 130 2 260 1 261 1 24 1 25 2 331 1 244 1 377 1 
86 1 296 1 89 1 343 1 317 2 2 2 41 1 346 2 6 1 256 1 362 1 121 1 188 2 235 1 206 1 366 1 73 1 20 1 170 1 130 2 304 1 351 1 25 2 293 2 374 1 29 1 53 1 215 1 376 2 337 1 59 2 
341 1 151 1 20 1 343 1 317 2 92 1 226 1 115 1 282 2 293 2 158 1 200 1 332 1 353 1 133 1 46 1 335 1 364 1 59 2 
367 1 341 1 151 1 343 1 20 1 317 1 92 1 226 1 282 2 293 1 200 1 353 1 133 1 46 1 335 1 364 1 59 1 
20 1 343 1 314 1 317 1 226 1 304 1 345 1 293 1 332 1 333 1 272 1 235 1 59 1 35 1 
341 1 151 1 20 1 343 1 317 1 92 1 226 1 115 1 282 2 293 1 200 1 332 1 353 1 133 1 46 1 335 1 364 1 59 1 
249 1 
86 1 252 2 339 1 340 1 113 1 343 1 91 2 317 1 345 1 346 3 256 1 165 1 362 1 188 1 235 1 206 1 149 1 73 1 20 1 130 3 304 1 351 1 25 2 293 1 27 2 52 1 29 1 195 1 217 1 376 2 337 1 59 1 
71 2 318 2 192 2 329 1 77 1 210 1 78 1 164 4 163 1 95 2 45 1 257 1 193 2 105 1 36 4 
229 1 174 1 64 1 318 1 192 1 77 1 36 1 
252 1 342 1 91 1 318 1 346 1 164 1 45 1 165 1 69 1 17 1 130 1 260 1 262 1 192 1 77 1 329 1 100 1 25 1 78 1 210 1 305 1 331 1 27 1 193 1 295 1 82 1 271 1 36 1 
113 1 343 1 298 1 345 1 163 1 164 6 168 1 71 3 75 1 20 2 260 2 262 2 77 4 304 4 263 1 210 2 78 2 267 1 211 1 134 1 82 1 31 1 310 1 36 3 177 2 220 1 313 1 317 1 315 1 144 1 45 2 95 3 96 1 321 1 235 1 192 3 329 2 293 1 331 2 246 1 193 3 104 1 59 1 
252 1 342 1 298 2 344 1 346 1 164 6 163 1 7 1 257 1 165 1 122 1 71 5 19 1 130 1 260 1 262 1 77 8 209 1 25 1 210 2 78 2 305 1 267 2 27 1 80 1 82 1 271 1 31 2 138 1 36 5 91 1 315 2 318 2 93 1 45 2 95 5 96 2 148 1 290 1 192 5 329 2 100 1 242 1 331 1 193 3 104 2 
252 1 342 1 91 1 315 2 40 1 344 1 346 1 45 1 165 1 237 1 126 1 130 1 260 1 192 2 329 1 77 2 100 1 25 1 78 1 210 1 305 1 331 1 267 2 27 1 354 1 104 1 271 1 34 1 
318 1 192 1 329 1 77 1 210 1 78 1 45 1 229 1 174 1 36 1 
71 5 315 2 298 2 192 5 344 1 77 5 263 1 267 2 164 10 95 5 193 5 96 2 104 2 31 2 36 5 
252 1 342 1 130 1 91 1 260 1 262 1 318 1 100 1 25 1 305 1 346 1 331 1 27 1 165 1 82 1 271 1 36 1 
260 1 317 2 262 2 192 1 77 1 329 1 345 2 293 2 210 1 78 1 26 1 331 1 163 1 257 1 45 1 82 1 307 1 59 2 250 1 
361 1 253 1 97 1 
361 1 253 1 97 1 
178 1 361 1 81 1 181 1 97 1 
361 1 253 1 97 1 
361 1 349 1 97 1 
361 1 349 1 97 1 
361 1 349 1 97 1 
361 1 97 1 
1 1 300 1 
180 1 256 4 7 1 187 2 188 8 205 2 73 1 237 1 126 1 19 1 21 1 351 1 242 1 371 1 267 1 374 4 104 1 29 1 105 1 376 2 138 1 337 1 34 1 
180 1 298 1 256 5 7 1 187 2 288 1 188 11 205 3 301 1 237 1 73 2 126 1 19 1 21 1 99 1 351 2 242 2 371 1 267 2 374 6 104 1 29 2 105 1 31 1 376 4 138 1 337 2 34 1 
180 1 298 2 93 1 256 10 7 1 187 3 96 2 288 1 188 19 122 1 205 4 301 1 148 1 237 1 73 3 126 1 19 1 21 1 209 1 351 3 242 1 371 1 267 3 373 1 374 9 29 3 104 3 105 1 31 2 376 6 138 1 337 3 34 1 
180 1 298 2 93 1 256 7 7 1 187 3 96 1 288 1 188 17 122 1 205 5 301 2 148 1 237 1 73 3 126 1 19 1 21 1 209 1 351 3 242 1 371 1 267 3 373 1 374 10 29 3 104 2 105 1 31 2 376 6 138 1 337 3 34 1 
180 1 256 4 7 1 187 2 188 8 205 2 73 1 237 1 126 1 19 1 21 1 351 1 242 1 371 1 267 1 374 4 104 1 29 1 105 1 376 2 138 1 337 1 34 1 
298 2 93 1 256 6 7 1 187 1 96 2 188 12 122 1 205 2 301 1 148 1 73 1 19 1 209 1 351 1 242 1 371 1 267 2 374 6 29 1 104 2 31 2 376 2 138 1 337 1 
180 1 298 2 93 1 256 8 7 1 187 3 96 1 288 1 188 18 122 1 205 5 301 2 148 1 237 1 73 4 126 1 19 1 21 1 209 1 351 4 242 1 371 1 267 3 373 2 374 10 29 4 104 2 105 1 31 2 376 8 138 1 337 4 34 1 
298 3 93 1 280 1 256 7 7 1 187 3 96 2 188 16 122 1 205 6 301 3 148 1 73 4 19 1 209 1 351 4 242 1 371 1 267 3 373 2 374 9 29 4 104 2 31 3 376 8 138 1 337 4 
237 3 126 3 180 1 21 2 267 1 256 4 374 3 187 3 104 1 188 7 205 6 301 3 34 1 
180 1 298 2 93 1 280 1 256 8 7 1 187 3 96 1 188 18 122 1 205 4 301 1 148 1 237 1 73 4 126 1 19 1 21 1 209 1 351 4 242 1 371 1 267 3 373 2 374 10 29 4 104 2 105 1 31 2 376 8 138 1 337 4 34 1 
73 2 237 1 126 1 180 1 21 1 351 2 267 1 256 4 373 1 374 4 187 2 104 1 29 2 105 1 188 8 205 3 376 4 301 1 337 2 34 1 
237 1 126 1 180 1 64 1 21 1 267 1 256 3 374 3 187 2 104 1 105 1 188 6 205 2 34 1 
73 1 298 1 351 1 267 1 256 2 374 2 187 1 96 1 104 1 29 1 288 1 31 1 188 4 205 2 376 2 337 1 301 1 
19 1 298 1 99 1 242 2 267 1 256 4 374 3 187 1 96 1 104 1 188 7 31 1 205 2 138 1 301 1 
196 1 180 1 254 1 298 2 281 1 256 12 187 5 96 2 188 23 205 9 301 4 237 2 73 2 126 2 19 2 21 1 99 1 351 2 242 2 267 3 373 2 374 11 104 3 29 2 105 1 31 2 376 4 337 2 34 1 
256 1 188 1 242 1 
374 1 19 1 188 1 
73 1 298 1 351 1 263 1 267 1 256 3 374 3 187 2 96 1 29 1 104 1 288 1 188 6 31 1 205 3 376 2 337 1 301 1 
298 2 93 1 256 6 7 1 187 1 96 2 188 12 122 1 205 2 301 1 148 1 73 1 19 1 209 1 351 1 242 1 371 1 267 2 374 6 29 1 104 2 31 2 376 2 138 1 337 1 
237 1 126 1 267 1 256 3 374 3 187 1 104 1 188 6 205 2 301 1 34 1 
237 1 73 1 126 1 180 1 21 1 351 1 281 1 256 2 373 1 374 1 187 1 29 1 188 3 205 2 376 2 301 1 337 1 
73 1 237 2 126 2 40 1 351 1 371 1 267 2 256 5 374 5 187 3 29 1 104 2 188 10 205 5 376 2 337 1 301 2 34 1 
73 1 351 1 371 1 267 1 374 2 29 1 31 1 188 2 205 1 376 2 337 1 301 1 
73 1 298 1 351 1 371 1 267 1 256 2 374 2 187 1 96 1 104 1 29 1 31 1 188 4 205 2 376 2 337 1 301 1 
73 3 237 1 126 1 351 3 281 1 280 1 371 1 256 2 373 1 374 1 187 1 29 3 188 3 205 2 376 6 337 3 301 1 
73 3 19 3 48 1 154 1 298 2 351 3 280 1 371 1 242 2 267 2 256 4 374 7 96 1 104 1 29 3 288 1 31 2 188 11 205 1 376 6 123 1 301 1 337 3 138 1 
346 1 43 1 339 1 119 1 348 1 130 1 25 1 
72 1 339 1 224 1 277 1 130 1 25 1 346 1 43 1 119 1 348 1 146 1 33 1 
333 1 20 1 343 1 64 1 314 1 317 1 235 1 304 1 345 1 59 1 293 1 
252 1 339 1 340 1 113 1 20 1 343 1 91 1 130 2 317 1 304 1 345 1 25 1 293 1 346 2 106 1 195 1 235 1 59 1 
252 1 339 1 340 1 113 2 343 1 91 2 317 1 360 1 346 2 202 1 235 2 20 1 130 2 304 3 25 2 293 1 305 1 243 1 171 1 106 1 195 1 110 1 59 1 
252 1 339 1 340 1 113 2 343 1 91 2 317 2 360 1 346 2 202 1 235 2 20 1 130 2 156 1 304 3 25 2 293 2 305 1 243 1 171 1 84 1 106 1 110 1 59 2 
177 1 220 1 113 1 20 1 343 1 260 2 317 3 318 1 262 1 156 1 304 4 345 1 360 1 293 3 243 1 331 2 134 1 202 1 173 1 83 1 235 1 59 3 36 1 
177 1 220 1 113 1 313 1 20 1 343 1 260 2 317 3 318 1 262 1 156 1 304 4 345 1 360 1 293 3 243 1 331 2 134 1 202 1 235 1 59 3 36 1 
20 1 343 1 54 1 317 1 59 1 293 1 
292 1 113 1 343 2 20 3 317 7 2 1 304 3 345 2 67 1 158 1 293 7 6 1 54 1 214 1 107 1 310 1 235 2 364 1 57 1 365 1 59 6 
252 1 296 1 340 1 339 2 113 1 343 1 346 2 256 3 205 2 206 2 73 2 126 1 20 1 21 1 130 2 304 1 351 2 25 1 267 1 29 2 34 1 86 2 180 1 91 1 317 1 142 1 41 1 187 2 188 6 235 1 149 1 324 1 237 1 152 1 50 1 293 1 158 1 334 1 374 3 52 1 104 1 106 1 105 1 195 1 376 4 337 2 59 1 
252 1 342 1 66 1 344 1 345 1 346 1 165 1 126 1 75 1 260 3 130 1 262 2 304 2 77 4 25 1 210 2 78 2 305 1 267 2 211 1 27 1 134 1 174 1 82 1 307 1 271 1 36 2 34 1 177 1 220 1 313 1 91 1 317 1 315 2 318 2 40 1 144 1 45 2 229 1 237 1 192 5 329 2 100 1 293 1 331 3 104 2 59 1 
220 1 113 1 343 1 20 2 317 2 304 2 158 1 293 2 54 1 310 1 235 1 59 2 168 1 
20 1 343 1 314 1 317 4 156 1 304 1 345 1 79 1 293 4 158 1 333 1 235 1 59 4 
113 1 343 1 20 2 370 1 317 2 155 1 304 1 360 1 293 2 28 1 235 1 57 1 365 1 59 2 
200 1 353 1 151 1 20 1 343 1 317 1 345 1 59 1 282 1 293 1 
343 1 20 1 170 1 317 2 304 1 158 1 293 2 6 1 235 1 364 1 59 2 
343 2 20 2 314 1 317 5 304 3 360 1 345 1 79 1 293 5 158 1 333 1 6 1 214 1 107 1 235 2 59 4 
343 2 20 2 314 1 326 1 317 5 304 3 360 1 345 1 79 1 293 5 158 1 333 1 6 1 107 1 235 2 59 4 
252 1 339 1 340 1 113 1 20 1 343 1 91 1 130 2 317 1 304 1 345 1 25 1 293 1 346 2 106 1 84 1 235 1 59 1 
292 1 113 1 343 1 20 2 317 1 304 1 360 1 293 1 310 1 235 1 57 1 365 1 59 1 
339 1 61 1 88 1 199 1 11 1 
339 1 61 2 88 1 260 2 23 1 318 1 66 1 199 2 305 1 331 2 306 1 171 1 134 1 231 1 232 1 110 1 11 2 273 1 36 1 
61 1 88 1 130 1 199 1 25 1 346 1 53 1 215 1 121 1 
88 1 231 1 23 1 
18 1 191 1 22 1 238 3 352 1 265 1 117 1 268 1 184 3 266 1 58 1 
266 1 372 1 128 1 15 1 
266 1 191 1 
266 1 191 1 64 1 117 1 
266 1 184 1 268 1 18 1 191 1 238 1 117 1 
203 1 238 1 278 1 
18 1 191 1 0 1 238 3 265 2 117 1 266 1 268 1 184 3 347 1 120 1 58 1 
266 1 325 1 184 2 268 1 18 1 191 1 22 1 238 2 117 1 
18 1 128 1 238 1 282 1 268 1 184 1 266 1 353 1 132 1 133 1 58 1 
266 1 184 1 268 1 18 1 191 1 238 1 58 1 
184 1 268 1 18 1 191 2 238 1 58 1 117 1 
18 2 191 1 238 2 141 1 266 1 268 2 184 2 287 1 308 1 58 1 
18 1 191 1 128 1 238 3 22 2 3 1 352 1 117 1 268 1 184 3 266 2 58 1 15 1 
18 1 191 1 238 2 22 1 316 1 117 1 282 2 266 1 200 1 268 1 184 2 353 1 133 1 46 1 58 1 
325 1 18 2 191 1 128 1 238 4 22 2 117 1 268 2 184 4 266 2 58 1 32 1 15 1 
266 1 184 1 268 1 18 1 191 1 238 1 58 1 117 1 
18 1 191 2 128 1 22 2 238 4 265 1 117 2 184 4 268 1 266 3 372 1 347 1 120 1 15 1 
18 1 191 1 238 2 239 1 22 1 117 1 266 1 268 1 184 2 103 1 234 1 58 1 
18 1 191 1 238 3 94 1 265 2 117 1 266 1 268 1 184 3 347 1 120 2 58 1 
266 2 197 2 176 1 219 1 
184 1 268 1 18 1 238 1 319 1 58 1 
266 1 184 2 268 1 18 1 191 1 22 1 238 2 352 1 58 1 117 1 
68 1 
266 1 184 1 268 1 18 1 191 1 238 1 58 1 117 1 

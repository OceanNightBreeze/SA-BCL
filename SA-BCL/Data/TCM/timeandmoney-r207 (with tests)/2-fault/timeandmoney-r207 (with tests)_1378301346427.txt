#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (94,148,262) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (94,148,262) 34 54 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (94,148,262) 34 215 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (94,148,262) (94,148,262) 349 320 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (94,148,262) 34 251 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 1256 | = null
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | CONDITION | 11255 | if (x) -> if (!x)
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 333 2 44 1 2 1 261 1 131 1 85 2 163 2 288 2 87 1 183 1 9 2 108 9 11 1 269 9 92 1 111 1 112 6 30 1 14 1 274 5 321 1 232 1 199 2 235 3 220 1 221 4 284 1 
0 2 333 2 44 1 2 1 261 1 131 1 85 2 163 2 288 2 87 1 183 1 9 2 108 9 11 1 269 9 92 1 111 1 112 6 30 1 14 1 274 5 321 1 232 1 199 2 235 3 220 1 221 4 284 1 
0 2 333 2 44 1 2 1 261 1 131 1 85 2 163 2 288 2 87 1 183 1 9 2 108 10 11 1 269 10 92 1 111 1 112 7 30 1 14 1 274 6 321 1 232 1 199 2 235 4 220 1 221 5 284 1 
0 2 333 2 2 1 261 1 131 1 85 2 163 2 288 2 87 1 183 1 9 1 108 7 11 1 269 7 92 1 111 1 112 4 30 1 14 1 274 4 321 1 232 1 199 2 235 2 220 1 221 3 284 1 
333 1 0 1 44 1 2 1 112 3 274 3 85 1 163 1 288 1 87 1 9 2 108 4 11 1 269 4 235 1 221 2 92 1 284 1 
93 1 0 1 333 1 111 1 274 1 131 1 163 1 288 1 324 1 87 1 108 2 11 1 269 2 199 1 158 1 92 1 
87 1 112 1 274 2 108 3 11 1 199 1 269 3 235 1 220 1 163 2 221 1 288 2 92 1 
0 1 333 1 2 1 44 1 302 1 85 1 163 2 288 2 87 1 183 1 9 2 108 9 11 1 269 9 92 1 112 7 30 1 274 5 17 1 199 1 235 3 220 1 221 4 284 1 
0 1 333 1 2 1 44 1 302 1 85 1 163 2 288 2 87 1 183 1 9 2 108 9 11 1 269 9 92 1 112 7 30 1 274 5 17 1 199 1 235 3 220 1 221 4 284 1 
335 1 55 1 216 1 
46 1 55 1 101 2 
204 2 88 2 107 1 340 2 10 1 173 2 311 2 247 2 
332 1 238 1 45 2 3 1 180 1 263 1 48 1 224 1 51 1 50 1 140 1 204 2 88 3 107 1 227 1 340 2 10 1 205 1 12 1 311 2 144 1 247 2 168 1 248 1 250 2 319 1 113 2 173 3 151 1 152 1 254 1 296 1 297 2 120 2 360 1 122 1 178 1 
245 1 204 1 202 1 88 1 107 1 340 1 173 1 311 1 247 1 300 1 
204 1 88 1 262 1 148 1 173 1 206 1 
204 1 88 1 340 1 262 1 173 1 311 1 247 1 
143 1 94 1 194 1 229 1 95 1 
21 1 143 2 94 2 55 1 216 1 194 1 229 1 124 1 
143 1 94 1 194 1 
202 1 94 1 173 1 245 1 204 1 107 1 88 1 340 1 143 1 191 1 311 1 229 1 247 1 300 1 
55 1 
21 1 143 2 94 2 55 1 216 1 194 1 229 1 139 1 
169 1 315 2 286 2 179 1 21 1 94 5 55 1 133 1 116 1 356 1 337 1 156 1 143 5 192 1 228 2 39 1 216 1 229 2 194 2 
335 1 10 1 
231 1 173 2 204 2 88 2 340 1 10 2 268 1 311 1 247 1 
73 1 84 1 193 1 
45 1 319 1 3 1 113 1 173 1 151 1 152 1 296 1 297 1 50 1 88 1 10 1 144 1 20 1 122 1 178 1 
285 1 204 3 88 3 340 3 10 1 173 3 311 3 247 1 
204 1 202 1 88 1 340 1 173 1 311 1 300 1 
204 1 88 1 340 1 268 1 231 1 173 1 311 1 247 1 300 1 
54 1 204 2 285 1 88 2 340 2 262 1 231 1 173 2 311 2 34 1 247 1 301 1 
204 2 285 1 88 2 340 1 10 1 173 2 311 1 206 1 23 1 
204 1 285 1 88 1 340 1 262 1 173 1 311 1 34 1 215 1 301 1 
285 1 84 1 231 1 173 2 204 2 88 2 340 2 193 1 311 2 247 1 
45 1 319 1 3 1 113 1 173 1 151 1 152 1 296 1 297 1 50 1 88 1 10 1 144 1 122 1 178 1 
314 1 45 1 319 1 3 1 113 1 173 1 151 1 152 1 297 1 50 1 88 1 176 1 10 1 144 1 178 1 
238 1 223 1 84 2 224 1 308 1 52 1 140 1 289 1 227 1 205 2 193 2 168 1 350 1 248 1 250 2 73 2 153 1 58 1 57 1 174 1 63 1 120 4 360 2 200 1 
204 1 88 1 185 1 340 1 336 1 173 1 311 1 300 1 
285 1 45 1 319 1 3 1 113 1 152 1 173 2 151 1 296 1 50 1 297 1 204 1 88 2 340 1 193 1 311 1 144 1 122 1 301 1 178 1 
285 2 241 1 231 1 173 5 23 1 204 5 88 5 340 4 10 1 311 4 206 1 246 1 247 1 301 1 
204 2 185 1 202 1 88 2 340 2 173 2 311 2 300 1 
110 1 33 1 
110 1 33 1 
16 1 70 1 
16 1 70 1 
16 1 70 1 
110 1 33 1 42 1 
99 1 110 1 33 1 
16 1 110 2 128 1 33 2 41 1 70 1 
110 1 33 1 42 1 
110 1 33 1 42 1 
110 1 33 1 265 1 
110 1 33 1 265 1 
110 1 33 1 265 1 
237 2 110 2 273 3 287 1 31 1 128 1 33 2 94 2 55 1 149 2 86 1 59 1 325 2 26 2 142 1 143 2 213 2 328 1 346 1 
237 1 22 1 6 1 26 1 164 1 204 2 88 2 340 2 143 1 10 1 311 2 313 1 110 1 292 1 273 1 353 1 33 1 94 1 173 2 325 1 99 1 213 1 280 1 328 1 
333 1 0 1 85 1 
333 1 0 1 93 1 
0 3 93 1 317 1 352 1 252 1 85 2 
0 2 93 1 317 1 352 1 106 1 85 1 
0 2 93 1 317 1 352 2 85 1 
286 1 46 1 179 3 21 1 223 1 83 1 22 1 337 1 24 2 242 1 164 1 143 5 228 1 270 1 194 1 229 4 350 1 315 1 292 1 94 5 55 2 75 1 116 2 276 1 58 1 294 2 298 1 63 1 101 3 216 1 217 1 331 2 
286 2 46 3 179 8 21 1 223 3 83 2 129 1 181 1 337 1 24 6 242 3 143 9 228 2 194 6 229 7 350 3 315 2 292 4 94 9 55 5 116 6 276 1 58 3 95 5 294 6 63 3 156 1 258 5 177 1 121 1 214 1 101 9 216 1 217 2 81 1 
286 1 46 2 179 3 223 1 83 1 24 2 242 1 143 3 228 1 229 2 270 1 315 1 350 1 292 1 94 3 55 3 116 2 58 1 294 2 298 1 63 1 156 1 101 4 216 1 217 1 331 1 
286 1 46 3 179 5 223 2 83 1 24 4 242 2 143 4 228 1 270 1 229 3 315 1 350 2 292 2 94 4 55 4 116 4 58 2 294 4 298 1 63 2 156 1 177 1 121 1 214 1 101 7 216 1 217 1 331 2 
319 1 62 1 335 1 
319 1 37 1 
155 1 
319 1 178 1 
351 1 62 2 319 3 78 1 144 1 178 1 
319 1 144 1 178 1 
319 1 306 1 
350 1 71 1 115 1 58 1 137 1 25 1 243 1 174 3 289 2 27 1 120 7 327 1 342 2 360 4 205 3 19 1 219 1 
350 1 71 1 115 1 58 1 137 1 25 1 243 1 174 3 289 2 27 1 120 7 327 1 342 2 360 4 205 3 19 1 219 1 
350 1 71 1 115 1 58 1 137 1 25 1 243 1 174 3 289 2 27 1 339 1 120 7 327 1 342 2 360 4 205 3 19 1 219 1 
238 1 223 3 136 1 137 1 224 1 242 3 25 2 243 2 289 5 7 1 27 1 227 1 8 4 310 3 341 1 342 3 205 15 29 1 348 1 168 1 71 2 350 4 250 2 115 1 58 4 174 10 97 1 299 1 120 31 63 3 327 1 360 16 19 5 219 2 
238 2 224 2 137 1 243 1 25 1 289 3 7 1 227 2 27 1 342 2 205 4 168 2 350 1 271 1 71 1 250 4 208 1 115 1 58 1 174 4 120 9 360 5 19 1 219 1 
333 1 0 2 239 1 45 1 3 1 162 1 85 1 163 1 288 1 50 1 87 1 189 1 108 2 11 1 269 2 344 1 347 1 92 1 93 1 112 1 274 1 113 1 252 1 253 1 297 1 36 1 175 1 259 1 199 1 80 1 
333 1 0 2 239 1 45 1 47 1 3 1 162 1 85 1 163 1 288 1 50 1 87 1 189 1 108 3 11 1 269 3 344 1 347 1 93 1 112 2 274 1 113 1 252 1 253 1 297 1 36 1 154 1 199 1 80 1 159 1 
333 1 0 2 93 1 45 1 239 1 112 2 3 1 47 1 274 1 113 1 252 1 162 1 85 1 253 1 50 1 297 1 87 1 189 1 108 2 11 1 269 2 199 1 80 1 347 1 159 1 
239 2 45 1 3 1 160 1 163 1 288 1 50 1 182 1 108 1 269 1 347 2 319 1 207 1 113 1 151 1 322 1 297 1 100 1 154 1 358 1 199 2 80 2 178 1 
333 1 0 2 239 1 45 1 47 1 3 1 162 1 85 1 163 1 288 1 50 1 189 1 108 1 269 1 344 1 347 1 92 1 93 1 113 1 252 1 253 1 297 1 36 1 259 1 199 1 80 1 
109 1 
45 2 286 1 179 1 3 1 21 1 262 1 337 1 50 1 182 1 204 1 88 1 143 2 228 1 345 1 206 1 194 2 312 1 349 1 315 1 272 1 319 1 320 1 148 1 113 2 94 2 173 1 151 2 322 1 116 1 76 1 297 2 278 1 217 1 178 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 320 1 21 1 262 1 148 1 94 2 173 1 139 1 76 1 204 1 88 1 143 2 194 1 206 1 
315 1 349 1 272 1 286 1 320 1 262 1 148 1 94 1 173 1 337 1 76 1 204 1 88 1 143 1 228 1 206 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
349 1 272 1 204 1 88 1 320 1 262 1 148 1 143 1 94 1 173 1 206 1 76 1 
315 1 349 1 272 1 286 1 320 1 262 1 148 1 94 1 173 1 337 1 76 1 204 1 88 1 143 1 228 1 206 1 
238 1 335 1 84 1 224 1 137 1 308 1 25 1 140 1 289 2 27 1 227 1 10 2 342 1 193 1 205 3 168 1 71 1 248 1 350 1 250 2 73 1 115 1 58 1 174 2 120 6 360 3 
238 2 223 2 84 4 132 1 263 1 264 1 136 1 224 2 242 2 51 1 289 1 140 2 8 3 227 2 310 3 10 1 341 1 205 6 193 11 168 2 248 1 350 2 250 4 73 11 58 1 174 2 98 1 257 1 120 14 63 1 360 8 19 1 123 1 
238 1 45 1 285 1 3 1 84 1 263 1 224 1 50 1 51 1 140 1 204 1 88 2 188 1 227 1 340 1 10 1 205 1 311 1 53 1 144 1 168 1 248 1 250 2 319 1 113 1 152 1 151 1 173 2 296 1 297 1 60 1 257 1 120 2 360 1 122 1 20 1 301 1 178 1 
45 3 47 1 3 2 127 1 223 2 84 7 263 1 137 1 224 3 51 1 50 2 140 3 88 3 227 3 10 2 193 7 311 1 144 2 316 2 319 2 150 2 151 1 152 2 58 3 63 2 19 4 332 2 238 3 285 1 67 2 242 2 25 1 289 4 204 1 27 1 340 1 342 1 205 10 168 3 71 1 248 3 350 3 250 6 73 7 355 1 113 3 173 3 115 1 35 2 296 2 357 1 297 3 174 8 257 1 120 20 360 10 122 2 301 1 178 2 
102 1 238 2 285 1 45 8 47 1 3 2 263 1 48 2 224 2 307 1 308 1 50 2 51 1 140 2 182 1 338 1 204 1 88 1 227 2 340 1 205 1 311 1 168 2 248 2 249 1 250 4 319 3 32 1 113 8 173 1 151 2 56 1 322 1 297 7 175 1 120 2 79 1 360 1 178 2 
238 1 223 1 84 1 224 1 242 1 289 1 140 1 204 1 88 1 227 1 340 1 193 1 205 2 311 1 13 1 247 1 168 1 248 1 350 1 250 2 73 1 231 1 173 1 58 1 174 1 257 1 120 3 63 1 360 1 
248 1 350 1 238 1 250 2 73 1 223 1 84 1 224 1 308 1 174 1 140 1 227 1 120 2 360 2 193 1 200 1 19 1 168 1 
248 1 238 1 250 2 73 1 84 1 224 1 57 1 58 1 308 1 174 1 289 1 140 1 227 1 120 2 63 1 193 1 205 2 168 1 
238 1 223 1 84 2 224 1 242 1 308 1 140 1 289 1 227 1 193 2 205 2 168 1 350 1 248 1 250 2 73 2 58 1 174 2 120 4 63 1 360 2 19 1 
248 1 350 1 238 1 250 2 73 1 223 1 84 1 224 1 174 1 140 1 227 1 120 2 79 1 360 2 193 1 200 1 19 1 168 1 
248 1 238 1 250 2 73 1 84 1 224 1 57 1 58 1 174 1 289 1 140 1 227 1 120 2 63 1 79 1 193 1 205 2 168 1 
238 1 223 1 84 2 224 1 242 1 140 1 289 1 227 1 193 2 205 2 168 1 350 1 248 1 250 2 73 2 58 1 174 2 120 4 63 1 360 2 79 1 19 1 
238 1 223 1 84 2 224 1 242 1 140 1 289 1 227 1 193 2 205 2 168 1 350 1 248 1 250 2 73 2 58 1 174 2 120 4 63 1 360 2 19 1 
332 1 238 1 45 1 3 1 263 1 224 1 50 1 51 1 140 1 88 1 227 1 10 1 205 1 144 1 168 1 248 1 250 2 319 1 113 1 152 1 151 1 173 1 296 1 297 1 120 2 360 1 122 1 178 1 
238 1 45 1 126 1 3 1 263 1 224 1 50 1 51 1 140 1 88 1 227 1 10 1 205 1 144 1 168 1 314 1 248 1 250 2 319 1 113 1 152 1 151 1 173 1 297 1 120 2 176 1 360 1 178 1 
238 1 223 1 84 2 224 1 242 1 140 1 289 1 227 1 193 2 205 2 168 1 350 1 248 1 250 2 73 2 58 1 174 2 257 1 120 4 63 1 360 2 19 1 
332 1 238 1 45 1 3 1 223 1 84 2 224 1 242 1 50 1 289 1 140 1 88 1 227 1 205 2 193 2 144 1 168 1 350 1 248 1 316 1 250 2 319 1 73 2 113 1 152 1 173 1 58 1 296 1 297 1 174 2 175 1 63 1 120 4 360 2 19 1 122 1 178 1 
238 1 66 1 223 1 84 1 224 1 242 1 140 1 204 1 88 1 227 1 340 1 205 1 193 1 311 1 247 1 168 1 248 1 350 1 250 2 73 1 231 1 173 1 58 1 174 1 63 1 257 1 120 3 360 2 19 1 
238 2 223 2 161 1 136 3 224 2 242 2 289 1 267 1 8 4 227 2 310 3 341 1 343 2 205 12 290 1 195 1 168 2 271 1 350 2 318 1 250 4 209 1 58 2 211 1 77 4 174 3 279 1 120 23 63 2 360 11 19 2 283 1 
238 2 223 2 161 1 136 3 224 2 242 2 289 2 267 1 8 4 227 2 310 3 341 1 343 2 205 12 290 1 195 1 168 2 271 1 350 2 318 1 250 4 209 1 58 2 211 1 77 4 174 4 279 1 120 23 63 2 360 11 19 2 283 1 
238 1 223 5 161 1 132 2 136 2 137 3 224 1 242 5 25 3 289 8 267 1 27 3 8 4 227 1 310 4 342 3 341 2 343 1 205 24 290 1 195 1 168 1 71 3 271 1 350 8 250 2 115 3 58 8 211 1 77 4 174 13 279 1 120 51 63 5 360 27 19 5 283 1 
238 2 240 1 223 3 161 2 136 1 224 2 242 3 289 3 267 1 8 2 227 2 310 1 341 1 343 1 205 10 195 1 168 2 271 1 350 3 250 4 209 1 58 3 211 1 77 2 174 6 279 1 120 19 63 3 360 9 19 3 
238 1 223 1 161 1 136 2 224 1 242 1 227 1 8 2 267 1 310 2 205 8 343 2 290 1 195 1 168 1 271 1 350 1 250 2 58 1 211 1 77 4 63 1 279 2 120 16 360 8 283 1 
59 1 237 1 325 1 110 1 26 1 128 1 213 1 33 1 346 1 89 1 
99 1 353 1 
237 1 325 1 110 1 26 1 146 1 303 1 222 1 213 1 33 1 
237 1 110 1 273 2 287 1 31 1 128 1 94 1 33 1 55 1 149 1 86 1 59 1 325 1 26 1 143 1 213 1 328 1 346 1 
237 1 110 1 273 2 287 1 31 1 128 1 94 1 33 1 55 1 149 1 86 1 59 1 325 1 26 1 143 1 213 1 328 1 346 1 
237 1 110 1 273 2 287 1 31 1 128 1 94 1 33 1 55 1 149 1 86 1 59 1 325 1 26 1 143 1 213 1 328 1 346 1 
277 1 41 1 42 1 
277 1 41 1 42 1 
226 1 265 1 
226 1 41 1 265 1 
313 1 280 1 
237 1 22 1 6 1 86 1 26 1 164 1 204 2 88 2 340 2 143 1 10 1 311 2 229 1 313 1 110 1 292 1 273 1 353 1 94 1 33 1 149 1 173 2 325 1 99 1 213 1 280 1 64 1 
277 1 42 1 
226 1 41 1 265 1 
102 1 238 1 45 2 3 1 263 1 48 2 224 1 50 1 51 1 140 1 204 2 88 2 227 1 205 1 168 1 248 1 250 2 319 1 147 1 293 1 113 2 173 2 56 1 297 2 212 1 257 1 120 2 360 1 178 1 43 1 236 1 
333 1 0 2 93 1 45 2 3 1 47 1 230 1 113 2 252 1 162 1 85 1 135 1 15 1 50 1 297 2 36 1 175 1 189 1 80 1 
333 1 0 2 93 1 45 1 47 1 3 1 113 1 252 1 162 1 85 1 15 1 297 1 50 1 36 1 189 1 166 1 80 1 
45 1 319 1 3 1 113 1 151 1 322 1 135 1 323 1 50 1 297 1 182 1 100 1 80 1 178 1 
333 1 0 2 93 1 45 1 3 1 47 1 230 1 113 1 252 1 162 1 85 1 135 1 15 1 297 1 50 1 36 1 189 1 80 1 
90 1 
169 1 179 1 335 1 55 1 216 1 116 1 356 1 
286 1 46 1 179 1 21 1 337 1 244 1 187 1 143 1 228 1 194 1 315 1 72 1 94 1 55 2 116 1 101 1 216 1 
45 3 260 1 82 2 179 9 46 6 3 4 223 2 306 2 138 1 50 3 186 2 143 5 228 4 144 3 194 5 145 2 312 1 315 4 319 10 94 5 55 8 151 1 58 2 62 2 234 2 63 2 101 12 65 1 282 2 286 4 104 1 105 2 21 3 67 2 337 4 68 2 24 6 242 2 169 1 350 2 170 2 74 1 113 3 356 1 116 8 294 6 297 3 175 1 78 1 37 3 216 2 217 2 40 2 178 3 
202 1 286 1 179 2 46 1 136 1 337 1 24 2 203 1 245 1 204 1 88 1 107 1 8 1 186 1 340 1 310 1 191 1 228 1 311 1 290 1 247 1 145 1 312 1 315 1 55 2 173 1 116 2 294 2 101 2 216 1 217 1 300 1 
202 1 286 1 179 2 337 1 225 1 137 1 25 1 245 1 204 1 88 1 107 1 186 2 340 1 143 1 191 1 228 1 311 1 247 1 145 1 71 1 315 1 350 2 94 1 173 1 116 2 210 1 58 1 300 1 
315 1 169 1 286 1 179 1 55 1 356 1 337 1 116 1 228 1 216 1 
350 2 46 5 179 5 223 2 67 1 55 5 116 5 58 2 294 5 24 5 242 2 186 2 63 2 101 10 145 1 
21 1 143 1 94 1 55 1 216 1 194 1 
45 4 286 2 104 1 179 2 3 1 21 2 337 1 50 1 182 1 143 3 228 2 345 1 194 4 312 2 291 1 315 2 319 1 113 4 94 3 151 2 322 1 116 2 297 4 326 1 278 1 156 1 217 2 65 2 178 1 
332 1 238 1 45 1 3 1 180 1 224 1 51 1 50 1 140 1 204 2 88 3 107 1 227 1 340 2 10 1 205 1 311 2 144 1 247 2 168 1 248 1 250 2 319 1 113 1 151 1 173 3 152 1 296 1 297 1 120 1 122 1 178 1 
315 1 286 1 46 2 179 1 55 4 116 2 337 1 294 2 24 2 342 1 228 1 101 4 217 1 216 2 312 1 
118 1 237 1 213 1 
237 1 280 1 213 1 329 1 346 1 
118 1 237 1 213 1 
118 1 237 1 213 1 
237 1 213 1 361 1 
237 1 213 1 361 1 
237 1 213 1 361 1 
237 1 213 1 
110 1 33 1 
238 2 223 2 130 1 136 1 137 2 224 2 242 2 25 2 289 5 7 1 27 1 8 1 227 2 310 1 342 1 205 10 290 1 168 2 71 2 271 1 350 5 250 4 115 1 210 1 197 1 58 4 174 9 256 1 120 24 63 1 360 14 19 4 218 1 
238 3 223 3 130 1 136 1 137 1 224 3 242 3 25 1 289 3 7 1 27 1 8 2 227 3 310 1 342 1 341 1 205 8 290 1 168 3 71 1 271 1 350 4 250 6 115 1 197 1 58 2 174 5 256 1 120 20 63 1 360 12 18 1 19 2 218 1 
238 2 136 1 137 2 224 2 25 2 289 3 8 1 227 2 27 1 310 1 342 1 205 7 290 1 168 2 350 3 271 1 71 2 250 4 115 1 210 1 58 3 174 4 120 15 360 8 18 1 19 1 
238 2 136 1 137 2 224 2 25 2 289 4 8 1 227 2 27 1 310 1 342 1 205 7 290 1 168 2 350 3 271 1 71 2 250 4 115 1 210 1 58 3 174 7 120 15 360 8 18 1 19 3 
238 2 223 2 130 1 136 1 137 2 224 2 242 2 25 2 289 5 7 1 27 1 8 1 227 2 310 1 342 1 205 10 290 1 168 2 71 2 271 1 350 5 250 4 115 1 210 1 197 1 58 4 174 9 256 1 120 24 63 1 360 14 19 4 218 1 
271 1 238 1 250 2 136 1 224 1 227 1 8 1 120 2 310 1 360 1 205 1 290 1 168 1 
271 1 238 2 250 4 136 1 224 2 227 2 8 1 310 1 120 2 360 1 18 1 205 1 290 1 168 2 
271 1 238 2 250 4 209 1 136 1 224 2 227 2 8 1 310 1 120 2 360 1 205 1 290 1 168 2 
71 3 350 1 115 1 58 1 137 1 25 3 289 3 174 6 27 2 120 7 360 3 205 4 19 3 
271 1 238 2 250 4 209 1 136 1 224 2 227 2 8 1 310 1 120 2 360 1 205 1 290 1 168 2 
350 1 71 1 238 2 250 4 115 1 58 1 137 1 224 2 25 1 174 3 289 2 7 1 227 2 27 1 120 8 342 1 360 4 205 4 19 1 168 2 
71 1 350 1 335 1 115 1 137 1 58 1 25 1 289 2 174 2 27 1 120 6 342 1 360 3 205 3 
350 1 238 1 250 2 223 1 58 1 224 1 242 1 289 1 174 2 227 1 63 1 120 4 360 2 205 2 18 1 19 1 168 1 
350 1 223 1 136 1 58 1 242 1 289 1 174 2 8 2 63 1 120 7 310 1 360 3 341 1 205 4 19 1 
238 2 304 1 223 2 132 1 264 1 137 1 224 2 242 2 25 2 289 5 7 2 27 1 8 2 227 2 310 2 342 1 341 1 205 12 168 2 71 2 350 3 250 4 115 1 58 3 174 9 120 23 63 2 360 11 19 4 
8 1 120 1 205 1 
120 1 310 1 360 1 
350 1 238 1 250 2 223 1 67 1 224 1 58 1 242 1 174 3 289 2 227 1 120 6 63 1 360 3 18 1 205 3 19 1 168 1 
271 1 238 1 250 2 136 1 224 1 227 1 8 1 120 2 310 1 360 1 205 1 290 1 168 1 
350 1 71 1 137 1 58 1 25 1 289 1 174 2 120 6 360 3 205 3 19 1 
71 1 238 1 250 2 304 1 115 1 224 1 25 1 174 2 289 1 7 1 27 1 227 1 120 3 360 1 205 2 19 1 168 1 
271 1 71 2 350 2 238 1 250 2 224 1 210 1 137 1 58 2 25 2 289 3 174 5 227 1 120 10 360 5 205 5 19 2 168 1 
271 1 350 1 238 1 250 2 223 1 224 1 174 1 227 1 120 2 360 2 19 1 168 1 
271 1 350 1 238 1 250 2 223 1 58 1 224 1 242 1 289 1 174 2 227 1 63 1 120 4 360 2 205 2 19 1 168 1 
271 1 71 1 238 3 250 6 304 1 209 1 224 3 25 1 289 1 174 2 7 1 227 3 120 3 360 1 205 2 19 1 168 3 
238 5 304 1 223 3 136 1 137 2 224 5 242 3 25 3 289 7 7 2 27 1 8 4 227 5 310 3 342 1 341 1 205 18 348 1 168 5 71 3 271 1 350 5 250 10 209 1 115 1 58 5 97 1 174 12 299 1 120 34 63 3 360 16 18 1 19 5 
204 1 88 1 69 1 10 1 173 1 206 1 23 1 
173 1 275 1 23 1 266 1 184 1 204 1 88 1 69 1 10 1 201 1 206 1 91 1 
50 1 297 1 182 1 45 1 319 1 335 1 3 1 113 1 322 1 151 1 178 1 
285 1 45 1 319 1 3 1 113 1 152 1 173 2 151 1 297 1 50 1 204 1 88 2 340 1 10 1 311 1 144 1 122 1 178 1 
103 1 285 1 45 1 319 3 3 1 306 1 113 1 336 1 152 1 173 2 68 1 297 1 50 1 204 2 88 2 340 1 10 1 311 2 144 2 65 1 122 1 300 1 178 2 
103 1 285 1 45 2 319 3 3 1 306 1 113 2 336 1 152 1 173 2 68 1 297 2 50 1 204 2 88 2 340 1 176 1 10 1 38 1 311 2 144 2 65 1 300 1 178 2 
125 1 45 3 319 4 3 1 306 1 94 2 113 3 55 1 151 1 68 1 297 3 50 1 62 1 37 1 143 2 38 1 216 1 40 1 144 1 330 1 194 1 65 1 178 1 
170 1 45 3 319 4 3 1 306 1 94 2 113 3 55 1 151 1 68 1 297 3 50 1 62 1 37 1 143 2 38 1 216 1 40 1 144 1 194 1 65 1 178 1 
50 1 297 1 249 1 45 1 3 1 113 1 
102 1 249 1 45 7 319 3 47 1 3 3 32 1 113 7 171 1 151 2 48 1 307 1 297 6 50 2 338 1 175 1 141 1 78 1 198 1 144 1 178 2 
332 1 238 2 285 1 45 1 3 1 84 1 137 1 224 2 25 1 50 1 289 2 140 2 204 1 88 2 27 1 227 2 340 1 10 2 342 1 193 1 205 3 311 1 144 1 168 2 350 1 71 1 248 2 316 1 250 4 319 1 73 1 113 1 152 1 173 2 115 1 58 1 35 1 296 1 297 1 174 2 175 1 120 6 257 1 360 3 122 1 178 1 43 1 
45 1 286 2 179 1 104 1 105 1 21 1 337 2 143 3 228 2 229 1 194 2 169 1 315 2 170 1 319 2 113 1 94 3 55 1 151 1 116 1 356 1 297 1 62 1 234 1 37 1 216 1 40 1 282 1 
249 1 45 2 319 2 3 2 113 2 138 1 297 2 50 1 175 1 62 1 78 1 144 1 178 1 
45 4 319 1 3 1 113 4 151 1 322 1 297 4 50 1 182 1 175 1 359 1 38 1 178 1 
1 1 45 2 319 1 3 2 355 1 113 2 171 1 297 2 50 1 198 1 281 1 144 1 65 1 178 1 
333 1 0 1 93 1 50 1 297 1 45 1 3 1 113 1 162 1 151 1 
50 1 102 1 297 2 45 2 175 1 319 1 212 1 3 1 47 1 113 2 178 1 
102 1 45 5 319 3 3 2 113 5 322 1 151 1 307 1 297 4 50 2 182 1 175 1 338 1 359 1 65 1 178 2 
102 1 45 5 319 3 3 2 113 5 322 1 151 1 307 1 297 4 50 2 182 1 175 1 359 1 157 1 65 1 178 2 
285 1 45 1 319 1 3 1 113 1 152 1 173 2 151 1 297 1 50 1 204 1 88 2 340 1 176 1 10 1 311 1 144 1 178 1 
45 1 319 1 3 2 113 1 171 1 297 1 50 1 141 1 78 1 198 1 144 1 65 1 178 1 
354 1 10 1 28 1 5 1 255 1 
354 1 262 1 305 1 251 1 143 1 94 1 28 1 5 1 34 1 229 1 255 1 295 1 
204 1 88 1 354 1 147 1 293 1 28 1 173 1 5 1 236 1 
305 1 251 1 5 1 
87 1 335 1 274 1 11 1 
87 1 274 1 108 1 11 1 269 1 163 1 288 1 
239 1 199 1 269 1 
87 1 111 2 119 1 274 1 108 3 11 1 114 1 269 3 163 1 117 1 288 1 92 1 
87 1 112 1 9 1 274 1 108 2 11 1 269 2 163 1 288 1 
333 1 0 1 2 1 274 1 108 1 269 1 85 1 163 1 221 1 288 1 92 1 
87 1 274 1 108 1 269 1 163 1 288 1 92 1 
87 2 108 1 11 1 269 1 163 1 288 1 92 1 
196 1 4 1 274 1 163 2 288 2 309 1 87 1 108 2 269 2 92 1 
112 2 30 1 274 2 163 1 288 1 87 1 183 1 108 3 11 1 269 3 235 1 221 1 92 1 
93 1 0 2 333 1 112 1 274 1 252 1 134 1 85 1 163 1 288 1 87 1 108 2 11 1 269 2 92 1 
44 1 112 2 274 2 163 2 288 2 87 1 9 1 108 4 11 1 269 4 235 1 221 1 92 1 
87 1 274 1 108 1 11 1 269 1 163 1 288 1 92 1 
111 1 112 2 274 3 114 1 163 1 117 1 288 1 87 2 190 1 108 4 11 2 269 4 235 1 221 1 
87 1 112 1 17 1 233 1 274 1 108 2 11 1 269 2 167 1 163 1 288 1 92 1 
111 2 274 1 172 1 114 1 163 1 288 1 117 2 87 1 108 3 11 1 269 3 92 1 
334 1 165 1 274 2 96 2 
108 1 269 1 163 1 288 1 49 1 92 1 
87 1 183 1 112 1 274 1 108 2 11 1 269 2 163 1 288 1 92 1 
61 1 
87 1 274 1 108 1 11 1 269 1 163 1 288 1 92 1 
183 1 87 1 111 1 112 1 274 1 108 3 11 1 269 3 163 1 288 1 92 1 
190 1 274 1 235 1 221 1 
87 1 274 1 

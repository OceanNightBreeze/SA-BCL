#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V ERROR java.lang.NullPointerException 266 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 784 | 1 -> 0
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
172 2 363 1 28 1 191 1 366 1 173 9 261 6 262 1 194 2 148 1 238 2 214 1 341 1 200 3 78 9 39 1 303 2 302 5 204 2 42 4 327 1 92 1 252 2 310 1 328 1 227 1 256 2 285 1 
172 2 363 1 28 1 191 1 366 1 173 9 261 6 262 1 194 2 148 1 238 2 214 1 341 1 200 3 78 9 39 1 303 2 302 5 204 2 42 4 327 1 92 1 252 2 310 1 328 1 227 1 256 2 285 1 
172 2 363 1 28 1 191 1 366 1 173 10 261 7 262 1 194 2 148 1 238 2 214 1 341 1 200 4 78 10 39 1 303 2 302 6 204 2 42 5 327 1 92 1 252 2 310 1 328 1 227 1 256 2 285 1 
172 2 363 1 28 1 191 1 173 7 261 4 262 1 194 2 148 1 238 2 214 1 341 1 200 2 78 7 39 1 303 2 302 4 204 2 42 3 327 1 92 1 252 1 310 1 328 1 227 1 256 2 285 1 
39 1 28 1 366 1 173 4 261 3 303 1 302 3 204 1 194 1 42 2 238 1 252 2 92 1 310 1 200 1 256 1 78 4 285 1 
39 1 172 1 28 1 191 1 173 2 331 1 302 1 303 1 204 1 194 1 148 1 310 1 34 1 187 1 256 1 78 2 
39 1 172 1 28 1 173 3 261 1 302 2 204 2 42 1 310 1 328 1 200 1 256 2 78 3 
172 1 28 1 366 1 261 7 173 9 262 1 194 1 238 1 294 1 341 1 320 1 200 3 78 9 39 1 302 5 303 1 204 2 42 4 252 2 92 1 310 1 328 1 256 2 285 1 
172 1 28 1 366 1 261 7 173 9 262 1 194 1 238 1 294 1 341 1 320 1 200 3 78 9 39 1 302 5 303 1 204 2 42 4 252 2 92 1 310 1 328 1 256 2 285 1 
160 1 275 1 86 1 
275 1 281 1 236 2 
118 2 156 2 287 2 301 2 315 2 354 1 374 1 8 2 
118 2 313 1 231 1 287 2 315 2 212 1 58 1 317 2 149 1 101 1 102 1 267 1 62 1 152 1 125 2 374 1 8 2 127 1 321 1 80 1 156 3 301 3 248 1 276 1 354 1 83 1 205 1 112 1 325 1 376 2 22 1 253 1 169 1 380 2 95 1 284 2 312 1 
118 1 156 1 287 1 301 1 315 1 36 1 342 1 374 1 8 1 130 1 
229 1 118 1 156 1 257 1 159 1 160 1 275 1 301 1 289 1 43 1 130 1 37 1 137 1 344 1 
118 1 287 1 156 1 159 1 160 1 275 1 301 1 315 1 289 1 43 2 130 1 37 1 137 1 344 2 8 1 
326 1 364 1 344 1 43 1 44 1 
326 1 206 1 160 1 377 1 275 1 344 2 43 2 44 1 
344 1 43 1 44 1 
118 1 287 1 156 1 10 1 301 1 315 1 43 1 130 1 326 1 36 1 342 1 344 1 374 1 8 1 
275 1 
326 1 206 1 160 1 275 1 94 1 344 2 43 2 44 1 
244 1 160 1 275 1 54 1 304 1 224 1 332 2 43 5 166 2 73 1 44 2 293 1 326 2 206 1 339 2 90 1 270 1 344 5 272 1 
354 1 86 1 
118 2 156 2 287 1 301 2 315 1 354 2 234 1 133 1 8 1 
150 1 226 1 292 1 
80 1 231 1 156 1 301 1 276 1 354 1 210 1 317 1 102 1 101 1 22 1 253 1 380 1 284 1 312 1 321 1 
118 1 80 1 231 1 232 1 287 1 156 2 301 2 315 1 276 1 17 1 292 1 317 1 101 1 102 1 22 1 253 1 380 1 284 1 312 1 321 1 
118 3 232 1 156 3 287 3 301 3 315 3 354 1 8 1 
118 1 156 1 287 1 301 1 315 1 36 1 130 1 
118 1 156 1 287 1 301 1 133 1 315 1 234 1 8 1 130 1 
118 3 313 1 231 1 287 3 232 1 315 3 289 1 58 1 317 1 149 1 101 1 102 1 62 1 125 1 37 1 344 1 374 1 8 2 127 1 321 1 106 1 80 1 156 4 159 1 301 4 248 1 276 1 354 1 205 1 17 1 43 1 130 1 112 1 278 1 376 2 22 1 253 1 133 1 169 1 380 1 95 1 137 1 284 1 312 1 
229 1 118 2 362 1 156 2 287 1 232 1 301 2 315 1 354 1 
118 3 106 1 232 2 287 3 156 3 159 1 275 1 301 3 315 3 289 1 17 1 43 1 370 1 130 1 133 1 344 1 37 1 137 1 8 1 
118 2 232 1 287 2 156 2 301 2 315 2 292 1 133 1 226 1 8 1 
231 1 80 1 156 1 301 1 276 1 354 1 317 1 102 1 101 1 22 1 253 1 380 1 284 1 312 1 321 1 
80 1 156 1 301 1 12 1 276 1 354 1 317 1 102 1 101 1 22 1 253 1 380 1 77 1 284 1 312 1 
230 1 313 2 288 1 235 1 195 1 56 1 292 2 33 1 149 1 338 1 150 2 103 1 152 2 125 4 154 1 127 1 248 1 16 1 112 1 376 2 308 1 169 1 226 2 95 1 
118 1 156 1 287 1 301 1 315 1 137 1 88 1 130 1 
229 1 118 5 362 1 232 2 287 4 156 5 203 1 301 5 315 4 354 1 17 1 133 1 8 1 349 1 
118 2 156 2 287 2 301 2 315 2 36 1 88 1 130 1 
61 1 345 1 
61 1 345 1 
209 1 283 1 
209 1 283 1 
61 1 209 1 345 1 283 1 
61 1 353 1 345 1 
61 1 353 1 345 1 
61 1 353 1 345 1 
61 1 185 1 345 1 
61 1 223 1 345 1 
60 1 258 1 61 2 209 1 345 2 283 1 
61 1 185 1 345 1 
61 1 185 1 345 1 
96 1 140 1 63 2 108 1 260 1 275 1 368 2 43 2 181 2 60 1 316 1 215 2 61 2 198 1 76 3 135 1 345 2 344 2 361 2 
118 2 287 2 315 2 368 1 237 1 239 1 213 1 316 1 61 1 215 1 76 1 345 1 344 1 63 1 79 1 156 2 301 2 354 1 223 1 43 1 181 1 250 1 358 1 330 1 
238 1 303 1 194 1 
34 1 303 1 194 1 
238 2 74 1 34 1 182 1 303 3 117 1 
238 1 74 1 350 1 34 1 182 1 303 2 
238 1 74 1 34 1 182 2 303 2 
230 1 233 1 54 3 72 1 195 1 332 1 236 3 239 1 33 1 99 1 339 1 344 5 272 2 154 1 105 2 79 1 244 1 160 1 300 1 275 2 166 1 43 5 44 1 19 2 326 4 358 1 206 1 208 1 359 1 48 1 281 1 50 2 
230 3 364 5 29 1 54 8 195 3 332 2 236 9 239 4 266 1 33 3 99 2 339 2 270 1 344 9 272 6 154 3 244 1 65 1 160 1 300 2 275 5 13 5 43 9 166 2 44 6 19 6 326 7 225 1 206 1 208 1 359 3 379 1 281 3 186 1 50 6 
118 1 230 1 287 1 233 1 315 1 54 3 332 1 195 1 236 4 239 1 33 1 99 1 339 1 36 1 342 1 270 1 344 3 374 1 272 2 8 1 154 1 105 1 156 1 10 1 160 1 300 1 301 1 275 3 166 1 43 3 130 1 19 2 326 2 48 1 359 1 281 2 50 2 
230 1 233 1 54 3 332 1 195 1 236 4 239 1 266 1 33 1 99 1 339 1 270 1 344 2 272 2 154 1 105 1 300 1 275 2 166 1 43 2 19 2 326 1 48 1 359 1 281 2 50 2 
80 1 124 1 86 1 
80 1 120 1 
128 1 
80 1 101 1 
80 3 101 1 102 1 124 2 367 1 134 1 
80 1 101 1 102 1 
80 1 145 1 
230 1 313 3 288 3 222 1 41 1 85 1 165 1 16 2 18 1 68 1 33 1 311 2 329 1 152 4 125 7 171 1 381 1 
230 1 313 3 288 3 222 1 41 1 85 1 165 1 16 2 18 1 68 1 33 1 311 2 329 1 152 4 125 7 171 1 381 1 
230 1 313 3 288 3 222 1 41 1 85 1 165 1 16 2 18 1 68 1 33 1 311 2 329 1 152 4 125 7 153 1 171 1 381 1 
230 4 313 15 192 3 365 1 288 10 195 3 33 4 197 1 149 1 372 1 199 1 125 31 152 16 104 4 154 3 127 1 9 1 222 1 247 1 11 1 41 1 85 1 165 2 16 5 18 2 68 2 376 2 311 3 359 3 169 1 329 2 171 1 95 1 381 5 
230 1 313 4 288 4 33 1 149 2 125 9 152 5 343 1 127 2 299 1 9 1 222 1 41 1 165 1 85 1 16 3 18 1 68 1 376 4 311 2 169 2 329 1 95 2 381 1 
172 1 28 1 52 1 261 1 173 2 53 1 194 1 146 1 238 1 317 1 34 1 179 1 271 1 347 1 78 2 155 1 39 1 302 1 375 1 276 1 303 2 204 1 280 1 310 1 380 1 170 1 284 1 256 1 312 1 117 1 
172 1 28 1 52 1 173 3 261 2 53 1 194 1 146 1 238 1 317 1 34 1 179 1 347 1 78 3 155 1 39 1 302 1 375 1 276 1 303 2 204 1 305 1 355 1 46 1 280 1 380 1 284 1 256 1 117 1 312 1 
172 1 28 1 52 1 173 2 261 2 194 1 146 1 238 1 317 1 34 1 179 1 347 1 78 2 155 1 39 1 302 1 375 1 276 1 303 2 305 1 355 1 380 1 284 1 312 1 117 1 
172 2 173 1 146 2 335 1 122 1 317 1 196 1 101 1 78 1 155 2 80 1 375 2 276 1 204 1 324 1 46 1 113 1 132 1 22 1 380 1 284 1 256 1 312 1 
172 1 52 1 173 1 53 1 194 1 146 1 238 1 317 1 34 1 179 1 347 1 78 1 155 1 375 1 276 1 303 2 204 1 305 1 280 1 310 1 380 1 170 1 284 1 256 1 312 1 117 1 
228 1 
229 1 97 1 193 1 289 1 54 2 332 1 236 2 335 1 101 1 99 1 339 1 241 1 344 5 348 1 244 1 156 1 159 1 160 1 301 1 110 2 164 1 166 1 67 1 206 3 207 1 22 2 21 1 116 1 312 1 118 1 257 1 30 1 317 2 178 1 126 1 37 1 272 2 323 2 80 1 40 2 221 2 81 2 275 2 276 1 43 5 44 6 130 1 89 2 132 1 281 2 380 2 137 1 284 2 138 4 286 2 
118 1 229 1 257 1 289 1 241 1 178 1 37 1 344 3 156 1 159 1 301 1 43 3 130 1 44 2 207 1 206 1 21 1 116 1 94 1 137 1 138 2 286 1 
118 1 229 1 257 1 289 1 241 1 178 1 37 1 344 3 156 1 221 1 159 1 160 1 301 1 275 1 43 3 44 1 130 1 207 1 206 1 21 1 116 1 94 1 137 1 138 3 
118 1 229 1 257 1 289 1 241 1 178 1 37 1 344 3 156 1 81 1 221 1 159 1 160 1 301 1 275 1 43 3 130 1 44 2 206 1 207 1 21 1 94 1 116 1 137 1 138 3 286 1 
229 1 97 1 289 1 54 1 4 1 332 1 339 1 241 1 344 5 244 1 156 1 159 1 160 5 301 1 110 2 166 1 206 3 207 1 21 1 23 1 116 1 24 1 118 1 257 1 178 1 75 1 37 1 126 1 272 1 323 2 40 2 81 4 221 4 275 5 43 5 130 1 44 7 89 2 281 2 94 1 137 1 138 6 286 4 139 1 
229 1 118 1 257 1 97 1 289 1 54 1 332 1 236 2 339 1 241 1 178 1 126 1 344 4 37 1 272 1 323 2 244 1 40 2 156 1 221 2 81 2 159 1 160 1 275 2 301 1 110 2 164 1 166 1 43 4 44 4 130 1 89 2 206 2 207 1 21 1 281 2 116 1 137 1 138 4 286 2 
118 1 229 1 257 1 97 1 289 1 4 1 54 1 332 1 339 1 241 1 178 1 126 1 37 1 344 4 272 1 323 2 244 1 40 2 156 1 221 2 81 2 159 1 160 1 275 1 301 1 110 2 43 4 166 1 44 4 130 1 89 2 206 2 207 1 21 1 281 2 23 1 116 1 137 1 138 4 286 2 139 1 
118 1 229 1 257 1 97 1 289 1 4 1 54 1 332 1 339 1 241 1 178 1 126 1 37 1 344 4 272 1 323 2 244 1 40 2 156 1 221 2 81 2 159 1 160 1 275 1 301 1 110 2 43 4 166 1 44 4 130 1 89 2 206 2 207 1 21 1 281 2 23 1 116 1 137 1 138 4 286 2 139 1 
118 1 229 1 141 1 257 1 289 1 4 1 54 1 332 1 236 2 57 1 339 1 241 1 178 1 123 1 126 1 37 1 344 4 272 1 323 2 244 1 245 2 156 1 221 2 81 2 159 1 160 1 161 2 275 1 301 1 43 4 166 1 44 4 130 1 89 2 206 2 207 1 21 1 116 1 137 1 138 4 286 2 
118 1 229 1 257 1 97 1 289 1 4 1 54 1 332 1 339 1 241 1 178 1 126 1 37 1 344 4 272 1 323 2 244 1 40 2 156 1 81 3 221 3 159 1 160 1 275 1 301 1 110 2 166 1 43 4 130 1 44 5 89 2 206 2 207 1 21 1 281 2 23 1 116 1 24 1 137 1 138 5 286 3 139 1 
118 1 229 1 257 1 97 1 289 1 4 1 54 1 332 1 339 1 241 1 178 1 126 1 37 1 344 4 272 1 323 2 244 1 40 2 156 1 81 3 221 3 159 1 160 1 275 1 301 1 110 2 166 1 43 4 130 1 44 5 89 2 206 2 207 1 21 1 281 2 23 1 116 1 24 1 137 1 138 5 286 3 139 1 
229 1 118 1 141 1 257 1 289 1 54 1 332 1 236 2 339 1 241 1 178 1 126 1 344 4 37 1 272 1 323 2 244 1 245 2 156 1 221 2 81 2 159 1 160 1 161 2 275 1 301 1 164 1 166 1 43 4 44 4 130 1 89 2 206 2 207 1 21 1 116 1 137 1 138 4 286 2 
230 1 313 3 288 2 222 1 248 1 41 1 354 2 85 1 16 2 235 1 86 1 292 1 18 1 112 1 68 1 33 1 376 2 149 1 150 1 311 1 169 1 125 6 152 3 226 1 95 1 127 1 
230 1 313 6 1 1 192 3 288 2 195 2 292 11 58 1 33 2 197 1 149 2 267 1 150 11 340 1 125 14 152 8 104 3 154 1 127 2 247 1 248 2 354 1 84 1 16 1 112 1 279 1 114 1 376 4 359 2 169 2 226 4 95 2 381 1 
118 1 231 1 1 1 313 1 287 1 232 1 315 1 210 1 177 1 58 1 317 1 101 1 102 1 149 1 267 1 125 2 152 1 127 1 321 1 80 1 156 2 301 2 248 1 276 1 354 1 17 1 112 1 111 1 376 2 22 1 253 1 169 1 360 1 380 1 226 1 95 1 284 1 312 1 
230 3 1 1 231 2 232 1 287 1 288 8 195 2 333 2 292 7 6 1 58 1 336 2 149 3 102 2 101 2 150 7 152 10 154 2 156 3 301 3 248 3 354 2 305 1 16 4 17 1 205 2 18 1 112 3 68 1 22 1 311 1 253 2 359 2 169 3 312 2 118 1 313 10 27 1 315 1 70 2 174 1 317 3 33 3 267 1 125 20 269 2 127 3 321 2 80 2 222 1 41 1 276 2 85 1 376 6 380 3 226 7 95 3 284 3 381 4 
118 1 313 1 287 1 232 1 315 1 211 1 176 1 235 1 335 1 58 1 317 8 149 2 101 2 267 1 152 1 125 2 271 1 38 1 127 2 80 3 156 1 129 1 301 1 248 2 276 2 14 1 305 1 112 2 47 1 325 2 376 4 132 1 22 2 169 2 254 1 380 8 95 2 284 7 312 2 
118 1 230 1 1 1 313 2 287 1 288 1 315 1 195 1 292 1 33 1 149 1 150 1 318 1 152 1 125 3 8 1 154 1 127 1 156 1 301 1 248 1 16 1 112 1 376 2 133 1 359 1 169 1 226 1 95 1 
288 1 248 1 235 1 195 1 292 1 112 1 376 2 33 1 149 1 338 1 150 1 169 1 125 2 152 2 226 1 95 1 127 1 381 1 
230 1 313 2 288 1 248 1 16 1 235 1 292 1 112 1 376 2 149 1 308 1 150 1 169 1 125 2 226 1 95 1 154 1 127 1 
230 1 313 2 288 2 195 1 235 1 292 2 33 1 149 1 150 2 152 2 125 4 154 1 127 1 248 1 16 1 112 1 376 2 359 1 169 1 226 2 95 1 381 1 
288 1 248 1 14 1 195 1 292 1 112 1 376 2 33 1 149 1 338 1 150 1 169 1 125 2 152 2 226 1 95 1 127 1 381 1 
230 1 313 2 288 1 248 1 14 1 16 1 292 1 112 1 376 2 149 1 308 1 150 1 169 1 125 2 226 1 95 1 154 1 127 1 
230 1 313 2 288 2 195 1 292 2 33 1 149 1 150 2 152 2 125 4 154 1 127 1 248 1 14 1 16 1 112 1 376 2 359 1 169 1 226 2 95 1 381 1 
230 1 313 2 288 2 195 1 292 2 33 1 149 1 150 2 125 4 152 2 154 1 127 1 248 1 16 1 112 1 376 2 359 1 169 1 226 2 95 1 381 1 
231 1 313 1 58 1 317 1 101 1 102 1 149 1 267 1 152 1 125 2 127 1 321 1 80 1 156 1 301 1 248 1 276 1 354 1 205 1 112 1 376 2 22 1 253 1 169 1 380 1 95 1 284 1 312 1 
313 1 263 1 58 1 317 1 101 1 102 1 149 1 267 1 152 1 125 2 77 1 127 1 80 1 156 1 301 1 12 1 248 1 276 1 354 1 112 1 376 2 22 1 253 1 169 1 380 1 95 1 284 1 312 1 
230 1 1 1 313 2 288 2 195 1 292 2 33 1 149 1 150 2 152 2 125 4 154 1 127 1 248 1 16 1 112 1 376 2 359 1 169 1 226 2 95 1 381 1 
230 1 313 2 231 1 288 2 195 1 292 2 317 1 33 1 102 1 101 1 149 1 150 2 125 4 152 2 269 1 271 1 154 1 127 1 321 1 80 1 156 1 301 1 248 1 276 1 16 1 205 1 112 1 376 2 253 1 359 1 169 1 226 2 380 1 95 1 284 1 312 1 381 1 
230 1 118 1 313 1 1 1 287 1 288 1 315 1 264 1 195 1 292 1 33 1 149 1 150 1 152 2 125 3 154 1 8 1 127 1 156 1 301 1 248 1 112 1 376 2 133 1 359 1 169 1 226 1 95 1 381 1 
230 3 313 10 192 1 288 6 290 1 71 1 121 1 195 3 33 3 197 1 149 2 268 1 125 19 152 9 296 1 104 2 154 3 297 1 127 2 299 1 157 2 247 1 162 2 16 3 45 1 376 4 359 3 169 2 95 2 381 3 
230 2 313 12 192 2 288 4 290 2 121 2 195 3 33 3 149 3 197 2 268 1 125 26 152 14 296 1 104 2 154 2 201 1 127 3 299 1 202 1 157 1 9 2 352 1 162 4 16 2 307 1 45 1 376 6 359 3 93 1 169 3 95 3 136 1 381 2 
230 5 313 21 192 3 288 8 290 2 121 1 195 4 334 1 33 5 197 3 149 3 268 1 125 41 152 20 296 1 104 4 154 4 297 1 201 1 127 3 202 1 299 1 157 1 9 1 222 1 352 1 247 1 162 4 41 1 85 1 16 4 18 1 307 1 45 1 68 1 376 6 311 1 359 4 93 1 169 3 136 1 95 3 381 4 
230 4 313 18 192 3 288 7 290 2 121 1 195 4 334 1 33 5 197 3 149 4 268 1 125 38 152 20 296 1 104 4 154 3 297 1 201 1 127 4 202 1 299 1 157 1 9 2 222 1 352 1 247 1 162 4 41 1 85 1 16 4 18 1 307 1 45 1 68 1 376 8 311 1 359 4 93 1 169 4 136 1 95 4 381 3 
230 8 313 25 192 4 288 14 290 1 121 1 195 7 33 8 197 2 149 2 268 1 125 52 152 27 296 1 104 4 154 7 201 1 127 2 202 1 299 1 157 1 9 1 222 1 352 1 247 2 162 4 41 1 85 1 84 2 16 7 18 1 307 1 45 1 68 1 376 4 311 1 359 7 93 1 169 2 136 1 95 2 381 7 
63 1 60 1 61 1 215 1 198 1 135 1 345 1 368 1 181 1 356 1 
330 1 223 1 
63 1 158 1 61 1 215 1 100 1 15 1 345 1 368 1 181 1 
140 1 63 1 108 1 260 1 275 1 43 1 368 1 181 1 60 1 316 1 215 1 61 1 198 1 76 2 135 1 344 1 345 1 361 1 
140 1 63 1 108 1 260 1 275 1 43 1 368 1 181 1 60 1 316 1 215 1 61 1 198 1 76 2 135 1 344 1 345 1 361 1 
140 1 63 1 108 1 260 1 275 1 43 1 368 1 181 1 60 1 316 1 215 1 61 1 198 1 76 2 135 1 344 1 345 1 361 1 
31 1 258 1 353 1 
31 1 258 1 353 1 
185 1 217 1 
258 1 185 1 217 1 
213 1 237 1 
118 2 314 1 287 2 315 2 368 1 237 1 239 1 213 1 61 1 215 1 76 1 344 1 345 1 63 1 108 1 79 1 156 2 301 2 354 1 223 1 43 1 181 1 250 1 326 1 358 1 330 1 361 1 
31 1 353 1 
258 1 185 1 217 1 
118 2 1 1 313 1 259 1 211 1 58 1 317 2 101 1 149 1 267 1 152 1 125 2 38 1 127 1 80 1 156 2 301 2 248 1 276 1 167 1 112 1 325 2 376 2 378 1 69 1 169 1 380 2 95 1 284 2 312 1 188 1 
143 1 52 1 351 1 303 2 276 1 53 1 194 1 305 1 146 1 87 1 238 1 317 2 34 1 380 2 271 1 347 1 284 2 117 1 312 1 
52 1 351 1 303 2 53 1 276 1 194 1 305 1 146 1 238 1 317 1 295 1 34 1 380 1 347 1 284 1 117 1 312 1 
80 1 143 1 276 1 146 1 335 1 277 1 122 1 317 1 101 1 132 1 22 1 380 1 284 1 312 1 
143 1 52 1 351 1 303 2 53 1 276 1 194 1 305 1 146 1 87 1 238 1 317 1 34 1 380 1 347 1 284 1 117 1 312 1 
5 1 
160 1 275 1 54 1 304 1 224 1 272 1 86 1 
244 1 40 1 160 1 275 2 97 1 110 1 54 1 332 1 43 1 236 1 166 1 44 1 206 1 339 1 281 1 344 1 272 1 
189 2 230 2 289 2 54 9 145 2 291 2 332 4 195 2 236 12 147 1 7 2 99 2 101 3 102 3 339 4 344 5 348 1 154 2 244 4 160 2 246 2 304 1 166 4 19 6 20 1 206 3 22 1 359 2 115 1 312 4 119 1 120 3 70 2 367 1 175 2 369 1 317 3 33 2 124 2 216 2 271 1 272 8 80 10 82 2 275 8 276 3 224 1 43 5 44 5 281 6 184 2 380 3 50 6 284 3 
230 2 192 1 54 8 332 2 195 2 236 6 7 2 33 2 99 1 197 1 339 2 344 1 104 1 272 5 348 1 154 2 201 1 322 1 202 1 244 2 82 1 160 2 352 1 275 5 43 1 166 2 44 1 19 5 206 1 91 1 359 2 93 1 281 3 136 1 50 5 
230 1 118 1 287 1 315 1 54 2 332 1 7 2 33 2 339 1 36 1 342 1 344 1 243 1 272 2 374 1 8 1 244 1 156 1 82 1 10 1 301 1 85 1 166 1 43 1 130 1 18 1 68 1 23 1 
244 1 160 1 339 1 275 1 54 1 304 1 224 1 272 1 332 1 166 1 
230 2 82 1 275 5 70 1 54 5 195 2 236 10 19 5 7 2 33 2 359 2 281 5 272 5 50 5 154 2 
206 1 160 1 275 1 344 1 43 1 44 1 
193 1 54 2 332 2 369 1 335 1 32 1 317 4 101 1 99 2 339 2 242 1 270 1 344 3 272 2 348 2 80 1 244 1 276 1 166 2 43 3 44 4 67 1 20 2 206 2 132 1 22 2 380 4 284 4 312 1 
118 2 313 1 231 1 287 2 315 2 58 1 317 1 102 1 101 1 149 1 62 1 125 1 374 1 8 2 127 1 321 1 80 1 156 3 301 3 248 1 276 1 354 1 205 1 112 1 376 2 22 1 253 1 169 1 380 1 95 1 284 1 312 1 
244 1 160 2 275 4 54 1 332 1 236 4 166 1 19 2 99 1 339 1 311 1 281 2 50 2 272 2 348 1 
3 1 368 1 181 1 
3 1 368 1 181 1 
3 1 368 1 181 1 
2 1 368 1 181 1 
135 1 265 1 237 1 368 1 181 1 
2 1 368 1 181 1 
2 1 368 1 181 1 
368 1 181 1 
61 1 345 1 
230 1 313 4 9 1 288 3 222 1 41 1 85 1 16 2 18 1 68 1 33 1 376 4 149 2 311 1 169 2 125 8 152 4 95 2 127 2 381 1 
230 1 313 3 222 1 288 2 41 1 85 1 16 2 86 1 18 1 68 1 33 1 311 1 152 3 125 6 
230 1 313 2 288 2 16 1 195 1 376 2 33 1 149 1 359 1 169 1 152 2 125 4 95 1 154 1 219 1 127 1 381 1 
230 1 313 4 192 1 247 1 288 2 16 1 195 1 33 1 197 1 359 1 125 7 152 3 104 2 154 1 381 1 
230 3 313 12 192 2 288 9 195 2 33 3 149 2 152 11 125 23 104 2 154 2 127 2 9 2 222 1 247 1 41 1 85 1 84 1 16 5 18 2 68 2 114 1 376 4 168 1 311 1 359 2 169 2 95 2 381 4 
313 1 125 1 104 1 
192 1 125 1 152 1 
230 1 313 3 288 3 70 1 195 1 16 2 376 2 33 1 149 1 359 1 169 1 125 6 152 3 95 1 154 1 127 1 219 1 381 1 
230 2 313 6 192 1 288 2 195 2 33 2 197 1 149 1 125 12 152 6 104 1 154 2 127 1 201 1 299 1 202 1 352 1 16 1 376 2 359 2 93 1 169 1 95 1 136 1 381 1 
230 1 313 3 288 2 85 1 16 1 18 1 68 1 33 1 152 3 125 6 381 1 
313 2 9 1 288 2 222 1 41 1 16 1 18 1 68 1 376 2 168 1 149 1 169 1 152 1 125 3 95 1 127 1 381 1 
299 1 230 2 313 5 288 5 85 1 16 3 18 2 68 2 376 2 33 2 149 1 169 1 152 5 125 10 95 1 243 1 127 1 381 2 
299 1 288 1 195 1 376 2 33 1 149 1 169 1 152 2 125 2 95 1 127 1 381 1 
230 1 299 1 313 2 288 2 16 1 195 1 376 2 33 1 149 1 359 1 169 1 152 2 125 4 95 1 154 1 127 1 381 1 
299 1 313 2 9 1 288 2 16 1 18 1 68 1 376 6 168 1 149 3 169 3 125 3 152 1 95 3 297 1 127 3 381 1 
230 5 313 18 192 3 365 1 288 12 195 3 33 5 197 1 149 5 199 1 125 34 152 16 104 4 154 3 219 1 297 1 127 5 299 1 9 2 222 1 11 1 247 1 41 1 85 2 16 7 18 3 68 3 376 10 168 1 311 1 359 3 169 5 95 5 381 5 
230 1 313 4 192 1 288 2 33 1 197 1 149 1 125 8 152 4 104 1 127 1 299 1 222 1 41 1 85 1 16 2 18 1 68 1 376 2 311 1 93 1 169 1 95 1 
230 1 313 5 192 1 288 3 195 1 33 2 197 1 149 2 125 11 152 6 104 2 127 2 219 1 299 1 222 1 247 1 41 1 85 1 16 2 18 1 68 1 376 4 311 1 359 1 93 1 169 2 95 2 381 1 
230 3 313 10 192 1 288 4 195 2 33 3 197 1 149 3 125 19 152 9 104 1 154 2 219 1 201 1 127 3 299 1 202 1 9 1 222 1 352 1 41 1 85 1 16 3 18 1 68 1 376 6 311 1 359 2 93 1 169 3 95 3 136 1 381 1 
230 2 313 7 192 1 288 5 195 2 33 3 197 1 149 3 125 17 152 10 104 1 154 1 219 1 127 3 201 1 299 1 202 1 9 1 222 1 352 1 41 1 85 1 16 3 18 1 68 1 376 6 311 1 359 2 93 1 169 3 95 3 136 1 381 2 
230 1 313 4 192 1 288 2 33 1 197 1 149 1 125 8 152 4 104 1 127 1 299 1 222 1 41 1 85 1 16 2 18 1 68 1 376 2 311 1 93 1 169 1 95 1 
230 2 313 6 192 1 288 2 195 2 33 2 197 1 149 1 125 12 152 6 104 1 154 2 127 1 201 1 299 1 202 1 352 1 16 1 376 2 359 2 93 1 169 1 95 1 136 1 381 1 
230 2 313 8 192 1 288 5 195 2 33 3 197 1 149 4 125 18 152 10 104 1 154 1 201 1 219 1 127 4 299 1 202 1 9 2 222 1 352 1 41 1 85 1 16 3 18 1 68 1 376 8 311 1 359 2 93 1 169 4 95 4 136 1 381 2 
230 2 313 7 192 1 288 6 195 3 33 3 197 1 149 4 125 16 152 9 104 1 154 2 201 1 127 4 297 1 299 1 202 1 9 2 352 1 16 3 376 8 359 3 93 1 169 4 95 4 136 1 381 3 
230 1 313 4 222 1 288 6 41 2 85 1 16 3 18 3 68 3 33 1 125 7 152 3 381 3 
230 2 313 8 192 1 288 4 195 2 33 3 197 1 149 4 125 18 152 10 104 1 154 1 201 1 127 4 297 1 299 1 202 1 9 2 222 1 352 1 41 1 85 1 16 3 18 1 68 1 376 8 311 1 359 2 93 1 169 4 95 4 136 1 381 1 
118 1 229 1 362 1 156 1 301 1 354 1 346 1 
118 1 229 1 298 1 362 1 59 1 156 1 337 1 301 1 35 1 354 1 346 1 306 1 
80 1 317 1 101 1 132 1 22 1 276 1 380 1 86 1 284 1 312 1 335 1 
118 1 80 1 231 1 232 1 287 1 156 2 301 2 315 1 276 1 354 1 317 1 101 1 102 1 22 1 253 1 380 1 284 1 312 1 
118 2 189 1 231 1 287 1 232 1 315 2 145 1 317 1 102 2 101 2 80 3 156 2 159 1 301 2 276 1 354 1 130 1 20 1 253 1 380 1 137 1 284 1 312 1 
118 2 189 1 287 1 232 1 315 2 145 1 317 2 102 2 101 2 77 1 218 1 80 3 156 2 159 1 301 2 276 1 354 1 130 1 20 1 253 1 380 2 137 1 284 2 312 1 
189 1 120 1 289 1 145 1 317 3 371 1 102 1 101 1 124 1 344 2 218 1 80 4 274 1 160 1 275 1 276 1 43 2 44 1 20 1 22 1 380 3 284 3 312 1 
189 1 80 4 120 1 160 1 275 1 289 1 276 1 145 1 43 2 44 1 317 3 101 1 102 1 20 1 22 1 124 1 184 1 380 3 344 2 284 3 218 1 312 1 
317 1 276 1 254 1 380 1 284 1 312 1 
25 1 80 3 220 1 129 1 367 1 276 2 305 1 176 1 325 1 47 1 317 7 102 1 101 2 22 2 254 1 151 1 271 1 380 7 284 6 38 1 312 3 
230 1 231 1 1 1 232 1 287 1 288 2 292 1 336 1 149 2 102 1 101 1 150 1 152 3 156 2 301 2 248 2 354 2 205 1 16 2 18 1 112 2 68 1 253 1 311 1 169 2 312 1 118 1 313 3 315 1 317 1 33 1 269 1 125 6 271 1 127 2 321 1 80 1 222 1 41 1 276 1 85 1 376 4 378 1 226 1 380 1 95 2 284 1 
120 1 289 1 54 1 175 1 332 2 369 1 317 1 339 2 124 1 216 1 344 3 272 1 244 2 80 2 160 1 275 1 246 1 304 1 224 1 166 2 43 3 44 2 326 1 206 1 22 1 184 1 380 1 284 1 
80 2 119 1 367 1 276 1 317 2 102 1 101 1 124 1 254 1 271 1 380 2 284 2 312 2 
80 1 276 1 335 1 317 4 132 1 101 1 22 1 373 1 380 4 271 1 284 4 218 1 312 1 
25 1 80 1 27 1 220 1 276 1 98 1 317 2 20 1 102 1 101 1 380 2 282 1 284 2 312 2 
317 1 22 1 34 1 303 1 276 1 380 1 194 1 347 1 284 1 312 1 
80 1 317 2 101 1 276 1 380 2 271 1 305 1 284 2 312 1 38 1 188 1 
80 3 129 1 276 2 176 1 335 1 317 5 20 1 132 1 101 2 22 1 373 1 380 5 271 1 284 4 38 1 312 2 
107 1 80 3 129 1 276 2 335 1 317 5 20 1 132 1 101 2 22 1 373 1 380 5 271 1 284 4 38 1 312 2 
118 1 80 1 232 1 287 1 156 2 301 2 315 1 276 1 354 1 317 1 101 1 102 1 22 1 253 1 380 1 77 1 284 1 312 1 
25 1 80 1 220 1 367 1 276 1 317 1 20 1 102 1 101 1 151 1 380 1 284 1 312 2 
273 1 251 1 190 1 183 1 354 1 
273 2 106 1 51 1 159 1 142 1 190 2 160 1 275 1 289 1 354 1 43 2 130 1 251 2 326 1 183 1 137 1 344 2 37 1 180 1 
118 1 156 1 190 1 259 1 301 1 167 1 251 1 69 1 183 1 
51 1 142 1 183 1 
39 1 28 1 302 1 86 1 
39 1 28 1 173 1 302 1 204 1 78 1 256 1 
172 1 173 1 375 1 
39 1 240 1 28 1 191 2 109 1 310 1 173 3 302 1 204 1 55 1 78 3 256 1 
39 1 28 1 252 1 261 1 173 2 302 1 204 1 78 2 256 1 
238 1 92 1 310 1 173 1 303 1 302 1 204 1 194 1 42 1 78 1 256 1 
39 1 310 1 173 1 302 1 204 1 78 1 256 1 
39 2 28 1 310 1 173 1 204 1 78 1 256 1 
39 1 173 2 302 1 204 2 249 1 310 1 255 1 49 1 256 2 78 2 
39 1 28 1 173 3 261 2 262 1 302 2 204 1 42 1 310 1 341 1 200 1 256 1 78 3 
39 1 0 1 28 1 173 2 261 1 302 1 303 2 204 1 194 1 238 1 34 1 310 1 256 1 78 2 117 1 
39 1 28 1 366 1 173 4 261 2 302 2 204 2 42 1 252 1 310 1 200 1 256 2 78 4 
39 1 28 1 310 1 173 1 302 1 204 1 78 1 256 1 
39 2 191 1 28 2 109 1 261 2 173 4 302 3 163 1 204 1 55 1 42 1 200 1 78 4 256 1 
39 1 294 1 28 1 309 1 310 1 261 1 173 2 319 1 302 1 204 1 78 2 256 1 
39 1 191 2 28 1 109 1 173 3 302 1 204 1 55 2 66 1 310 1 256 1 78 3 
26 1 357 2 64 1 302 2 
310 1 173 1 144 1 204 1 78 1 256 1 
39 1 28 1 310 1 261 1 173 2 302 1 262 1 204 1 78 2 256 1 
131 1 
39 1 28 1 310 1 173 1 302 1 204 1 78 1 256 1 
39 1 191 1 28 1 261 1 173 3 302 1 262 1 204 1 310 1 256 1 78 3 
302 1 163 1 200 1 42 1 
39 1 302 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | STATEMENT | 1218 | stmt -> ;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | OPERATOR | 3823 | + -> >>>
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 2 208 2 266 1 209 2 109 3 247 3 185 1 149 1 334 1 116 1 41 1 232 1 80 1 
362 1 266 6 247 9 318 1 218 1 364 2 149 1 10 2 178 1 80 1 251 1 158 5 33 1 208 2 85 1 209 2 109 9 185 1 287 1 334 3 289 2 64 1 116 4 232 2 41 1 339 2 214 1 295 1 
362 1 266 6 247 9 318 1 218 1 364 2 149 1 10 2 178 1 80 1 251 1 158 5 33 1 208 2 85 1 209 2 109 9 185 1 287 1 334 3 289 2 64 1 116 4 232 2 41 1 339 2 214 1 295 1 
362 1 266 7 247 10 318 1 218 1 364 2 149 1 10 2 178 1 80 1 251 1 158 6 33 1 208 2 85 1 209 2 109 10 185 1 287 1 334 4 289 2 64 1 116 5 232 2 41 1 339 2 214 1 295 1 
362 1 266 4 247 7 318 1 218 1 364 2 149 1 10 2 178 1 80 1 251 1 158 4 33 1 208 2 85 1 209 2 109 7 185 1 287 1 334 2 289 1 64 1 116 3 232 2 41 1 339 2 214 1 
158 3 208 1 85 1 266 3 209 1 109 4 247 4 364 1 185 1 334 1 289 2 10 1 116 2 41 1 339 1 80 1 214 1 295 1 
251 1 276 1 158 1 208 1 209 1 109 2 247 2 364 1 185 1 178 1 41 1 232 1 43 1 339 1 80 1 315 1 
362 1 266 7 247 9 364 1 149 1 10 1 80 1 158 5 33 1 208 2 85 1 209 2 109 9 185 1 259 1 334 3 289 2 116 4 232 1 41 1 339 1 214 1 357 1 295 1 
362 1 266 7 247 9 364 1 149 1 10 1 80 1 158 5 33 1 208 2 85 1 209 2 109 9 185 1 259 1 334 3 289 2 116 4 232 1 41 1 339 1 214 1 357 1 295 1 
204 1 82 1 181 1 121 1 189 1 242 1 196 1 29 1 322 1 53 1 355 1 31 1 202 1 92 1 
290 1 
181 2 121 1 290 1 75 1 242 2 37 1 79 1 245 1 
250 1 181 5 121 2 83 1 191 1 242 5 375 1 37 2 229 1 348 1 367 2 290 1 75 1 169 2 168 2 154 1 54 1 324 1 79 1 
258 1 290 1 75 1 
290 1 327 2 89 1 
204 2 189 2 29 2 380 1 355 2 31 2 202 2 92 1 
297 1 46 1 189 2 190 1 145 2 26 1 96 1 345 1 150 1 74 2 219 1 29 2 199 2 76 2 31 3 202 3 133 1 204 2 156 1 252 1 281 1 138 1 63 1 139 1 257 1 113 1 231 1 377 1 187 1 379 1 233 2 234 1 264 1 380 1 355 2 265 1 92 1 
204 1 196 1 82 1 189 1 29 1 322 1 355 1 31 1 202 1 92 1 
204 1 173 1 181 1 242 1 70 1 230 1 290 1 75 1 221 1 322 1 31 1 202 1 14 1 236 1 
204 1 173 1 181 2 189 1 242 2 290 1 75 1 221 1 29 1 322 1 355 1 31 1 202 1 14 1 236 1 
181 1 121 1 52 1 242 1 37 1 
181 2 121 1 290 1 75 1 242 2 244 1 37 1 79 1 
181 1 242 1 37 1 
204 2 182 1 189 1 62 1 29 1 380 2 355 1 31 2 202 2 
101 1 336 1 71 1 
156 1 190 1 145 1 138 1 98 1 139 1 257 1 231 1 150 1 377 1 187 1 233 1 76 1 380 1 31 1 202 1 
258 1 380 1 
156 1 204 1 317 1 190 1 145 1 138 1 139 1 50 1 257 1 150 1 231 1 377 1 101 1 187 1 29 1 233 1 76 1 355 1 31 2 202 2 
204 5 189 1 317 1 70 1 62 1 5 1 354 1 50 2 29 4 380 1 355 4 31 5 202 5 203 1 
204 2 82 1 16 1 29 2 322 1 355 2 31 2 202 2 
204 3 189 1 29 3 380 1 355 3 31 3 202 3 50 1 
204 1 82 1 29 1 322 1 355 1 31 1 202 1 
204 1 182 1 189 1 29 1 322 1 62 1 355 1 31 1 202 1 
297 1 173 1 46 1 189 2 317 1 190 1 242 1 145 1 26 1 49 1 96 1 345 1 50 1 150 1 74 2 221 1 29 3 199 1 322 1 76 1 31 4 202 4 14 1 156 1 204 3 181 1 281 1 62 1 138 1 63 1 139 1 257 1 113 1 231 1 115 1 377 1 187 1 233 1 234 1 380 1 355 3 265 1 236 1 92 1 
204 2 29 1 380 1 70 1 355 1 5 1 31 2 202 2 50 1 
173 1 204 3 181 1 189 1 317 1 242 1 49 1 62 1 50 2 186 1 290 1 221 1 29 3 322 1 355 3 31 3 202 3 14 1 236 1 
204 2 101 1 189 1 336 1 29 2 62 1 355 2 31 2 202 2 50 1 
156 1 190 1 145 1 138 1 139 1 257 1 231 1 150 1 377 1 187 1 233 1 76 1 380 1 31 1 202 1 
156 1 25 1 190 1 145 1 138 1 139 1 347 1 257 1 377 1 187 1 233 1 76 1 380 1 31 1 202 1 
297 2 174 1 122 1 192 1 26 1 96 1 71 2 176 1 74 2 101 2 180 1 103 1 199 4 304 1 228 1 281 1 63 1 184 1 113 1 311 1 336 2 234 1 264 2 90 1 
204 1 16 1 29 1 322 1 355 1 31 1 202 1 236 1 
124 1 294 1 332 1 
358 1 239 1 124 2 294 2 356 1 172 1 
124 1 294 1 
124 1 294 1 
356 1 172 1 
356 1 172 1 
356 1 172 1 
306 1 124 1 294 1 
306 1 124 1 294 1 
306 1 124 1 294 1 
24 1 124 1 294 1 
24 1 124 1 294 1 
24 1 124 1 294 1 
316 1 359 1 361 1 124 1 242 1 321 1 13 1 29 2 31 2 272 1 202 2 225 1 204 2 181 1 18 1 282 1 332 1 162 1 292 1 380 1 355 2 294 1 44 1 171 1 
358 1 45 1 359 2 316 2 58 1 181 2 342 1 254 1 134 1 124 2 242 2 282 1 129 2 320 1 290 1 13 2 292 3 294 2 44 2 
10 1 152 2 43 1 339 2 194 1 
10 1 339 1 364 1 
43 1 339 1 364 1 
299 1 152 1 10 2 43 1 339 3 194 1 
59 1 152 1 10 1 43 1 339 2 194 1 
121 4 217 2 191 1 242 5 125 1 267 1 8 2 73 1 367 1 321 1 75 1 180 1 103 1 54 3 79 1 155 2 250 2 181 5 327 3 18 1 107 1 136 1 37 1 284 1 310 1 311 1 290 2 168 1 169 1 89 1 90 1 171 1 
65 1 121 7 217 6 242 9 191 1 51 1 267 1 8 6 269 5 321 4 367 2 52 5 75 1 180 3 103 3 54 8 79 1 372 1 250 6 181 9 327 9 107 3 136 2 375 1 37 6 36 1 310 2 311 3 290 5 169 2 168 2 89 3 90 3 188 1 235 1 
121 2 217 2 242 3 8 2 73 1 367 1 321 1 75 1 180 1 103 1 54 3 155 1 250 2 181 3 327 4 107 1 136 1 375 1 284 1 310 1 311 1 290 3 168 1 169 1 89 2 90 1 
121 3 217 4 242 4 51 1 8 4 73 1 367 1 321 2 75 1 180 2 103 2 54 5 155 2 372 1 250 4 181 4 327 7 107 2 136 1 375 1 284 1 310 1 311 2 290 4 168 1 169 1 89 3 90 2 235 1 
167 1 
258 1 187 1 271 1 
187 1 111 1 
257 1 187 1 139 1 
163 1 187 1 
187 1 139 1 
139 1 257 1 187 3 349 1 167 1 314 1 271 2 
297 3 228 2 34 1 61 1 307 1 19 2 137 1 283 1 176 3 151 1 141 1 312 1 212 1 103 1 199 7 264 4 90 1 42 1 
297 15 26 1 176 10 319 1 151 2 74 2 303 1 180 3 199 31 103 4 323 1 77 1 34 1 228 5 61 1 17 3 279 1 307 1 135 1 107 3 281 1 87 1 19 3 137 5 283 1 113 1 141 2 312 2 311 3 166 4 212 2 234 1 264 16 90 4 
297 4 26 2 176 4 319 1 151 1 74 4 103 1 199 9 227 1 228 3 34 1 307 1 281 2 19 2 137 1 283 1 113 2 141 1 312 1 212 1 234 2 264 5 90 1 119 1 
297 3 228 2 34 1 61 1 307 1 19 2 137 1 283 1 176 3 151 1 141 1 312 1 212 1 103 1 199 7 264 4 90 1 
297 3 228 2 34 1 61 1 307 1 19 2 137 1 283 1 176 3 151 1 141 1 312 1 212 1 103 1 199 7 264 4 90 1 
2 1 1 1 190 1 145 1 247 1 148 1 72 1 76 1 56 1 156 1 208 1 329 2 209 1 108 1 109 1 139 1 286 2 377 1 187 1 313 1 232 2 233 1 93 2 
299 1 190 1 145 1 247 1 364 1 27 1 9 1 10 1 370 1 76 1 156 1 253 1 208 1 329 1 209 1 109 1 308 1 286 1 376 1 211 1 41 1 232 1 233 1 43 1 339 2 93 1 
299 1 190 1 145 1 266 1 247 2 364 1 27 1 10 1 370 1 76 1 80 1 55 1 156 1 158 1 253 1 208 1 329 1 209 1 109 2 308 1 185 1 286 1 376 1 211 1 41 1 232 1 233 1 43 1 339 2 93 1 
2 1 299 1 190 1 145 1 266 2 247 3 364 1 27 1 9 1 10 1 370 1 76 1 80 1 156 1 158 1 206 1 208 1 329 1 209 1 109 3 308 1 185 1 286 1 376 1 211 1 232 1 233 1 43 1 339 2 93 1 
299 1 190 1 145 1 266 2 247 2 364 1 27 1 9 1 10 1 76 1 80 1 156 1 158 1 206 1 329 1 109 2 308 1 185 1 286 1 211 1 232 1 233 1 43 1 339 2 93 1 
183 1 
3 2 300 1 190 1 242 5 191 1 145 2 97 2 346 1 54 2 350 1 202 1 105 2 14 1 56 1 250 2 156 1 204 1 106 1 256 1 260 1 210 2 117 2 169 1 168 1 173 1 67 2 68 1 70 1 72 1 367 1 75 1 221 1 76 2 322 1 79 3 273 1 31 1 325 2 81 1 181 5 278 1 327 2 136 1 37 6 330 4 139 1 230 1 377 2 288 1 187 1 290 2 337 1 233 2 89 2 236 1 
173 1 242 3 70 1 245 1 346 1 221 1 322 1 350 1 79 1 31 1 202 1 14 1 204 1 181 3 106 1 256 1 37 2 330 2 230 1 288 1 210 1 236 1 
173 1 242 3 70 1 245 1 346 1 221 1 75 1 322 1 350 1 79 1 31 1 202 1 14 1 105 1 204 1 181 3 106 1 256 1 37 1 330 3 230 1 288 1 290 1 236 1 
173 1 242 3 70 1 97 1 245 1 346 1 221 1 75 1 322 1 350 1 79 1 31 1 202 1 14 1 105 1 204 1 181 3 106 1 256 1 37 2 330 3 230 1 288 1 210 1 290 1 236 1 
237 1 3 2 300 1 242 5 191 1 97 4 245 1 346 1 248 1 350 1 54 1 202 1 14 1 105 4 250 1 204 1 106 1 256 1 20 1 210 4 169 1 168 1 117 2 173 1 67 2 70 1 367 1 221 1 75 5 322 1 79 3 373 1 31 1 325 2 81 1 181 5 326 1 37 7 330 6 230 1 288 1 290 5 89 2 236 1 
3 2 300 1 242 4 191 1 97 2 346 1 350 1 54 1 202 1 14 1 105 2 250 1 204 1 106 1 256 1 210 2 169 1 168 1 117 2 173 1 67 2 70 1 367 1 221 1 75 1 322 1 79 2 31 1 325 2 81 1 181 4 327 2 37 4 330 4 230 1 288 1 290 2 337 1 89 2 236 1 
173 1 67 2 3 2 300 1 242 4 191 1 70 1 97 2 346 1 367 1 75 1 221 1 248 1 322 1 54 1 350 1 79 2 31 1 325 2 202 1 105 2 81 1 14 1 250 1 204 1 181 4 106 1 326 1 256 1 37 4 330 4 20 1 230 1 210 2 288 1 290 1 117 2 168 1 169 1 89 2 236 1 
173 1 67 2 3 2 300 1 242 4 191 1 70 1 97 2 346 1 367 1 75 1 221 1 248 1 322 1 54 1 350 1 79 2 31 1 325 2 202 1 105 2 81 1 14 1 250 1 204 1 181 4 106 1 326 1 256 1 37 4 330 4 20 1 230 1 210 2 288 1 290 1 117 2 168 1 169 1 89 2 236 1 
173 1 67 2 3 2 300 1 242 4 175 1 191 1 70 1 97 2 346 1 367 1 75 1 221 1 248 1 322 1 54 1 350 1 79 2 31 1 202 1 105 2 14 1 250 1 204 1 181 4 106 1 15 2 327 2 256 1 37 4 330 4 230 1 38 1 88 1 210 2 288 1 290 1 168 1 169 1 381 2 236 1 
173 1 237 1 67 2 3 2 300 1 191 1 242 4 70 1 97 3 346 1 367 1 75 1 221 1 248 1 322 1 54 1 350 1 79 2 31 1 325 2 202 1 81 1 14 1 105 3 250 1 204 1 181 4 106 1 326 1 256 1 37 5 330 5 20 1 230 1 288 1 210 3 290 1 117 2 168 1 169 1 89 2 236 1 
173 1 237 1 67 2 3 2 300 1 191 1 242 4 70 1 97 3 346 1 367 1 75 1 221 1 248 1 322 1 54 1 350 1 79 2 31 1 325 2 202 1 81 1 14 1 105 3 250 1 204 1 181 4 106 1 326 1 256 1 37 5 330 5 20 1 230 1 288 1 210 3 290 1 117 2 168 1 169 1 89 2 236 1 
3 2 300 1 242 4 191 1 97 2 346 1 350 1 54 1 202 1 14 1 105 2 250 1 204 1 106 1 15 2 256 1 210 2 169 1 168 1 173 1 67 2 70 1 367 1 221 1 75 1 322 1 79 2 31 1 181 4 327 2 37 4 330 4 230 1 88 1 288 1 290 1 337 1 381 2 236 1 
297 1 123 1 190 2 192 1 145 8 26 2 96 2 193 1 345 1 50 1 72 1 9 1 74 4 369 1 29 1 76 8 199 2 55 1 31 1 202 1 104 1 133 1 56 1 204 1 156 2 57 1 252 2 281 2 63 2 139 2 113 2 261 1 377 2 114 1 187 3 233 7 234 2 264 1 355 1 
297 2 189 1 26 1 96 1 71 1 176 1 101 1 74 2 29 1 102 1 180 1 103 1 199 3 31 1 202 1 204 1 228 1 107 1 281 1 62 1 63 1 113 1 333 1 311 1 336 1 234 1 264 1 90 1 355 1 
297 3 192 1 26 1 96 1 71 1 176 2 101 1 74 2 103 1 199 6 34 1 228 2 307 1 281 1 19 1 63 1 283 1 258 1 113 1 141 1 336 1 212 1 234 1 264 3 380 2 90 1 
297 6 0 1 238 1 26 2 96 2 345 1 71 11 176 2 74 4 101 11 180 2 199 14 103 2 133 1 226 1 228 1 17 3 135 1 107 2 281 2 87 1 137 1 63 1 113 2 333 1 311 1 166 3 336 4 234 2 380 1 264 8 293 1 90 1 
297 1 360 1 317 1 190 1 145 1 26 1 96 1 345 1 98 1 50 1 150 1 74 2 29 1 76 1 199 2 371 1 31 2 202 2 133 1 156 1 204 1 281 1 138 1 63 1 139 1 257 1 231 1 113 1 333 1 377 1 187 1 336 1 233 1 118 1 234 1 380 1 264 1 355 1 
297 10 46 2 190 2 145 3 96 3 345 1 50 1 150 2 9 1 101 7 12 2 153 1 199 20 103 3 202 3 204 1 156 2 205 1 157 1 307 1 107 2 19 1 63 3 257 2 113 3 311 2 212 1 264 10 355 1 317 1 26 3 71 7 176 8 74 6 368 2 179 2 29 1 180 2 76 3 31 3 133 1 34 1 228 4 35 2 281 3 138 2 137 4 283 1 139 2 333 1 231 2 377 1 141 1 187 2 336 7 233 3 234 3 380 2 90 3 
192 1 26 1 281 1 96 1 137 1 71 1 63 1 184 1 176 1 113 1 101 1 74 2 336 1 180 1 199 2 234 1 103 1 264 2 
297 2 174 1 228 1 192 1 26 1 281 1 96 1 71 1 63 1 176 1 113 1 101 1 74 2 311 1 336 1 199 2 234 1 90 1 
297 2 192 1 26 1 96 1 71 2 176 2 74 2 101 2 180 1 103 1 199 4 228 1 107 1 281 1 137 1 63 1 113 1 311 1 336 2 234 1 264 2 90 1 
57 1 26 1 281 1 96 1 137 1 71 1 63 1 184 1 176 1 113 1 101 1 74 2 336 1 180 1 199 2 234 1 103 1 264 2 
297 2 57 1 174 1 228 1 26 1 281 1 96 1 71 1 63 1 176 1 113 1 101 1 74 2 311 1 336 1 199 2 234 1 90 1 
297 2 26 1 96 1 71 2 176 2 74 2 101 2 180 1 103 1 199 4 57 1 228 1 107 1 281 1 137 1 63 1 113 1 311 1 336 2 234 1 264 2 90 1 
297 2 26 1 96 1 71 2 176 2 74 2 101 2 180 1 199 4 103 1 228 1 107 1 281 1 137 1 63 1 113 1 311 1 336 2 234 1 264 2 90 1 
297 1 46 1 190 1 145 1 26 1 96 1 345 1 150 1 74 2 199 2 76 1 31 1 202 1 133 1 156 1 281 1 138 1 63 1 139 1 257 1 231 1 113 1 377 1 187 1 233 1 234 1 264 1 380 1 
297 1 25 1 190 1 145 1 26 1 96 1 345 1 347 1 74 2 199 2 76 1 31 1 202 1 133 1 156 1 281 1 138 1 63 1 139 1 257 1 113 1 377 1 187 1 39 1 233 1 234 1 264 1 380 1 
297 2 26 1 96 1 71 2 176 2 74 2 101 2 180 1 103 1 199 4 228 1 107 1 281 1 137 1 63 1 113 1 333 1 311 1 336 2 234 1 264 2 90 1 
297 2 46 1 190 1 145 1 26 1 96 1 71 2 176 2 150 1 101 2 74 2 179 1 180 1 199 4 103 1 76 1 55 1 31 1 202 1 156 1 228 1 107 1 281 1 137 1 138 1 63 1 139 1 257 1 231 1 113 1 311 1 187 1 336 2 233 1 234 1 264 2 90 1 
297 1 189 1 26 1 96 1 71 1 176 1 197 1 74 2 101 1 29 1 180 1 103 1 199 3 31 1 202 1 204 1 107 1 281 1 62 1 137 1 63 1 113 1 333 1 311 1 336 1 234 1 264 2 90 1 355 1 
297 10 94 1 243 2 26 2 127 1 176 6 28 1 74 4 220 1 180 3 199 19 103 3 30 1 228 3 17 1 135 1 107 3 281 2 87 1 137 3 21 2 113 2 335 1 311 3 166 2 234 2 264 9 90 3 143 1 119 1 
297 12 120 1 94 1 243 1 26 3 176 4 319 2 74 6 220 2 180 3 199 26 103 3 78 1 30 1 274 1 228 2 17 2 107 3 281 3 87 2 137 2 21 4 23 1 113 3 335 1 165 1 311 2 166 2 234 3 170 1 264 14 90 2 143 2 119 1 
120 1 297 21 94 1 243 1 26 3 176 8 319 1 28 1 74 6 220 1 180 4 199 41 103 5 78 1 30 1 274 1 34 1 228 4 17 3 307 1 135 1 107 4 281 3 19 1 87 3 137 4 283 1 21 4 309 1 23 1 113 3 335 1 141 1 165 1 311 4 166 4 212 1 234 3 170 1 264 20 90 5 143 2 119 1 
120 1 297 18 94 1 243 1 26 4 176 7 319 2 28 1 74 8 220 1 180 4 199 38 103 5 78 1 30 1 274 1 34 1 228 4 17 3 307 1 135 1 107 4 281 4 19 1 87 3 137 3 283 1 21 4 309 1 23 1 113 4 335 1 141 1 165 1 311 3 166 4 212 1 234 4 170 1 264 20 90 4 143 2 119 1 
120 1 297 25 94 1 243 1 26 2 176 14 319 1 74 4 220 1 180 7 199 52 103 8 78 1 30 1 274 1 226 2 34 1 228 7 17 4 307 1 135 2 107 7 281 2 19 1 87 2 137 7 283 1 21 4 23 1 113 2 335 1 141 1 165 1 311 7 166 4 212 1 234 2 170 1 264 27 90 8 143 1 119 1 
358 1 316 1 359 1 320 1 342 1 13 1 124 1 142 1 294 1 44 1 
225 1 332 1 
275 1 316 1 359 1 11 1 13 1 144 1 124 1 294 1 44 1 
7 1 306 1 
24 1 239 1 95 1 
358 1 45 1 359 1 316 1 181 1 342 1 254 1 134 1 124 1 242 1 282 1 129 1 320 1 290 1 13 1 292 2 294 1 44 1 
358 1 45 1 359 1 316 1 181 1 342 1 254 1 134 1 124 1 242 1 282 1 129 1 320 1 290 1 13 1 292 2 294 1 44 1 
358 1 45 1 359 1 316 1 181 1 342 1 254 1 134 1 124 1 242 1 282 1 129 1 320 1 290 1 13 1 292 2 294 1 44 1 
7 1 306 1 239 1 
7 1 306 1 239 1 
24 1 95 1 
24 1 239 1 95 1 
162 1 361 1 
316 1 359 1 216 1 121 1 361 1 124 1 242 1 129 1 321 1 13 1 29 2 31 2 272 1 202 2 225 1 204 2 181 1 254 1 18 1 332 1 162 1 292 1 380 1 294 1 355 2 44 1 171 1 
297 1 190 1 145 2 241 1 26 1 96 1 345 1 302 1 74 2 76 2 199 2 31 2 202 2 104 1 133 1 156 1 277 1 204 2 252 2 159 1 281 1 86 1 63 1 139 1 113 1 333 1 114 1 187 1 233 2 234 1 264 1 
56 1 156 1 190 1 145 1 343 1 329 1 108 1 139 1 140 1 72 1 377 1 187 1 233 1 76 1 
340 1 156 1 299 1 190 1 145 1 343 1 329 1 110 1 364 1 376 1 27 1 9 1 10 1 211 1 233 1 76 1 43 1 339 2 
156 1 340 1 299 1 190 1 145 2 343 1 329 1 110 1 364 1 376 1 27 1 9 1 10 1 211 1 233 2 76 2 43 1 339 2 55 1 
340 1 156 1 299 1 190 1 145 1 329 1 364 1 376 1 27 1 9 1 10 1 366 1 211 1 233 1 76 1 43 1 339 2 
147 1 
250 1 191 1 348 1 367 1 290 1 169 1 168 1 75 1 54 1 324 1 
250 5 217 5 327 10 107 2 160 1 8 5 311 2 368 1 290 5 180 2 103 2 89 5 90 2 54 5 132 2 
181 1 290 1 75 1 242 1 37 1 79 1 
68 1 190 1 191 1 145 4 242 3 72 1 367 2 249 1 76 4 54 2 79 2 273 1 250 2 56 1 156 1 181 3 374 2 278 2 255 1 136 2 375 1 37 4 139 1 377 2 187 1 168 2 169 2 233 4 263 1 
250 1 258 1 348 1 290 1 75 1 54 1 324 1 
191 1 242 1 367 1 75 1 54 1 79 1 325 1 81 1 250 1 181 1 327 1 37 1 290 2 168 1 169 1 117 1 89 1 
48 2 190 4 191 4 145 3 242 5 246 1 8 6 348 1 349 1 103 2 54 9 55 1 250 8 156 3 107 2 160 2 111 3 257 3 163 2 164 2 311 2 169 4 168 4 263 1 173 2 217 6 363 2 126 2 367 4 368 2 75 2 130 2 180 2 76 3 324 1 271 2 79 3 132 2 181 5 374 1 278 1 327 12 136 2 37 5 139 3 377 1 187 10 290 8 338 1 40 2 233 3 89 6 90 2 91 1 
120 1 217 5 242 1 191 2 69 1 8 5 367 2 75 2 180 2 103 2 54 8 78 1 79 1 132 2 274 1 250 5 181 1 278 1 17 1 327 6 107 2 136 1 160 1 87 1 37 1 23 1 311 2 291 1 166 1 290 5 168 2 169 2 170 1 89 3 90 2 
189 1 191 1 242 1 196 1 367 1 29 1 322 1 103 2 53 1 54 2 31 1 202 1 132 2 250 2 204 1 82 1 181 1 326 1 307 1 160 1 285 1 141 1 212 1 168 1 169 1 90 1 355 1 92 1 
297 1 46 1 189 2 190 1 145 1 26 1 96 1 345 1 150 1 74 2 29 2 199 1 76 1 31 3 202 3 204 2 156 1 281 1 138 1 63 1 139 1 257 1 231 1 113 1 377 1 187 1 233 1 234 1 380 1 355 2 265 1 92 1 
250 2 278 1 217 2 327 4 191 1 136 1 19 1 8 2 367 1 290 4 169 1 168 1 75 2 89 2 54 1 
316 1 320 1 361 1 207 1 13 1 
316 1 215 1 13 1 
316 1 215 1 13 1 
316 1 215 1 13 1 
316 1 13 1 331 1 
316 1 13 1 331 1 
316 1 13 1 331 1 
316 1 13 1 
124 1 294 1 
297 5 228 3 307 1 281 1 26 1 137 2 285 1 176 5 113 1 74 2 141 2 212 2 234 1 199 10 103 2 264 5 90 2 119 1 
26 1 281 1 137 1 176 1 113 1 74 2 180 1 234 1 103 1 199 2 264 2 119 1 
297 2 228 1 107 1 26 1 281 1 137 1 176 2 113 1 74 2 311 1 180 1 234 1 103 1 199 4 264 2 90 1 119 1 
297 2 228 1 26 3 281 3 137 1 176 2 319 1 113 3 28 1 378 1 74 6 141 1 212 1 199 3 234 3 264 1 119 1 
297 18 301 1 26 5 176 12 319 2 28 1 74 10 180 3 199 34 103 5 77 1 323 1 34 1 228 7 279 1 17 3 307 2 135 1 107 3 281 5 19 1 87 1 137 5 283 1 113 5 141 3 378 1 311 3 166 4 212 3 234 5 264 16 90 5 119 1 
297 4 228 2 34 1 307 1 26 2 281 2 19 1 137 1 283 1 176 3 113 2 319 1 74 4 141 1 212 1 103 1 199 8 234 2 264 4 90 1 
297 3 34 1 228 2 307 1 19 1 283 1 258 1 176 2 141 1 212 1 103 1 199 6 264 3 90 1 
297 2 228 1 301 1 107 1 26 1 281 1 137 1 176 2 113 1 74 2 311 1 180 1 234 1 103 1 199 4 264 2 90 1 
297 4 228 1 17 1 135 1 107 1 87 1 137 1 176 2 311 1 166 2 180 1 199 7 103 1 264 3 90 1 
297 12 26 2 176 9 319 2 74 4 180 2 103 3 199 23 226 1 34 1 228 5 17 2 307 1 107 2 135 1 281 2 19 1 137 4 283 1 113 2 141 2 378 1 311 2 166 2 212 2 234 2 264 11 293 1 90 3 
297 1 166 1 199 1 
17 1 199 1 264 1 
297 3 228 2 301 1 107 1 281 1 26 1 137 1 176 3 113 1 74 2 311 1 368 1 180 1 234 1 199 6 103 1 264 3 90 1 
297 6 120 1 26 1 176 2 74 2 180 2 199 12 103 2 78 1 274 1 228 1 17 1 107 2 281 1 87 1 137 1 113 1 23 1 311 2 166 1 234 1 264 6 170 1 90 2 119 1 
297 3 228 1 307 1 137 1 176 2 141 1 212 1 103 1 199 6 264 3 90 1 
297 2 228 1 34 1 26 1 281 1 137 1 283 1 176 2 319 1 113 1 141 1 378 1 74 2 212 1 199 3 234 1 264 1 
297 4 26 1 176 2 74 2 103 1 199 8 274 1 34 1 228 2 17 1 307 1 281 1 19 1 87 1 283 1 113 1 141 1 166 1 212 1 234 1 264 4 90 1 119 1 
297 5 301 1 26 2 176 3 74 4 180 1 199 11 103 2 274 1 228 2 34 1 17 1 307 1 135 1 107 1 281 2 19 1 87 1 137 1 283 1 113 2 141 1 166 2 212 1 234 2 264 6 90 1 119 1 
297 10 120 1 301 1 26 3 176 4 319 1 74 6 180 2 199 19 103 3 78 1 274 1 34 1 228 3 17 1 307 1 107 2 281 3 19 1 87 1 137 1 283 1 23 1 113 3 141 1 311 2 166 1 212 1 234 3 264 9 170 1 90 3 119 1 
297 7 120 1 301 1 26 3 176 5 319 1 74 6 180 2 199 17 103 3 78 1 274 1 34 1 228 3 17 1 307 1 107 2 281 3 19 1 87 1 137 2 283 1 113 3 23 1 141 1 311 1 166 1 212 1 234 3 264 10 170 1 90 2 119 1 
297 4 26 1 176 2 74 2 103 1 199 8 274 1 34 1 228 2 17 1 307 1 281 1 19 1 87 1 283 1 113 1 141 1 166 1 212 1 234 1 264 4 90 1 119 1 
297 6 120 1 26 1 176 2 74 2 180 2 199 12 103 2 78 1 274 1 228 1 17 1 107 2 281 1 87 1 137 1 113 1 23 1 311 2 166 1 234 1 264 6 170 1 90 2 119 1 
297 8 120 1 301 1 26 4 176 5 319 2 74 8 180 2 199 18 103 3 78 1 274 1 34 1 228 3 17 1 307 1 107 2 281 4 19 1 87 1 137 2 283 1 23 1 113 4 141 1 311 1 166 1 212 1 234 4 170 1 264 10 90 2 119 1 
297 7 120 1 26 4 176 6 319 2 28 1 74 8 180 3 199 16 103 3 78 1 274 1 228 3 17 1 107 3 281 4 87 1 137 3 23 1 113 4 311 2 166 1 234 4 170 1 264 9 90 2 119 1 
297 4 34 2 228 3 307 1 137 3 283 1 176 6 141 3 212 3 199 7 103 1 264 3 90 1 
297 8 120 1 26 4 176 4 319 2 28 1 74 8 180 2 199 18 103 3 78 1 274 1 34 1 228 3 17 1 307 1 107 2 281 4 19 1 87 1 137 1 283 1 23 1 113 4 141 1 311 1 166 1 212 1 234 4 170 1 264 10 90 2 119 1 
204 1 380 1 70 1 31 1 5 1 202 1 224 1 
204 1 305 1 70 1 5 1 6 1 222 1 380 1 200 1 31 1 131 1 202 1 224 1 
56 1 156 1 190 1 145 4 139 1 268 1 72 1 377 1 187 1 233 4 76 4 213 1 55 1 
352 1 156 1 374 1 240 1 190 2 145 2 139 1 128 1 195 1 257 1 187 1 233 2 153 1 76 2 
156 1 377 1 211 1 190 1 233 1 76 1 145 1 43 1 339 1 364 1 
277 1 156 1 190 1 145 2 139 1 9 1 187 1 233 2 76 2 55 1 104 1 
56 1 156 2 374 1 123 1 190 2 145 5 139 2 72 1 377 1 187 3 369 1 233 4 76 5 213 1 55 1 104 1 
56 1 156 2 374 1 123 1 190 2 145 5 139 2 72 1 377 1 187 3 233 4 76 5 213 1 55 1 32 1 104 1 
56 1 72 1 258 1 156 1 377 1 187 1 190 1 233 1 76 1 145 1 139 1 
204 1 156 1 190 1 145 1 138 1 139 1 50 1 257 1 150 1 377 1 187 1 29 1 233 1 76 1 380 1 355 1 31 2 202 2 
204 2 156 1 374 1 190 1 145 1 138 1 139 2 50 1 257 2 150 1 163 1 187 3 130 1 221 1 29 1 233 1 322 1 76 1 380 1 355 2 31 2 202 2 236 1 
25 1 190 1 145 2 50 1 268 1 221 1 130 1 29 1 76 2 322 1 31 2 202 2 156 1 204 2 374 1 138 1 139 2 257 2 163 1 187 3 233 2 380 1 355 2 236 1 
173 1 190 1 145 3 242 2 4 1 268 1 130 1 75 1 76 3 271 1 223 1 156 1 181 2 374 1 37 1 139 1 111 1 257 1 163 1 377 1 187 4 290 1 233 3 
173 1 156 1 181 2 374 1 48 1 190 1 242 2 145 3 37 1 139 1 111 1 268 1 257 1 377 1 163 1 187 4 290 1 75 1 130 1 233 3 76 3 271 1 
156 1 190 1 233 1 76 1 145 1 193 1 
352 1 156 2 252 1 123 1 190 3 145 7 193 1 353 1 139 2 128 1 257 1 261 1 377 2 9 1 187 3 369 1 349 1 233 6 76 7 55 1 104 1 
297 3 46 1 190 1 145 1 96 2 50 1 150 1 101 1 12 1 103 1 199 6 55 1 202 2 204 1 156 1 307 1 19 1 63 2 257 1 113 2 212 1 264 3 355 1 26 2 71 1 176 2 74 4 179 1 29 1 76 1 31 2 34 1 228 2 281 2 86 1 138 1 139 1 283 1 231 1 333 1 141 1 187 1 336 1 233 1 234 2 380 2 90 1 
173 1 121 1 48 1 145 1 191 2 242 3 363 1 126 1 348 1 367 2 75 1 76 1 54 1 324 1 271 1 79 1 250 1 181 3 37 2 111 1 377 1 164 1 187 2 290 1 168 2 169 2 233 1 263 1 
156 1 190 2 145 2 193 1 246 1 139 1 257 1 187 2 349 1 233 2 76 2 55 1 271 1 
204 1 156 1 25 1 190 1 145 1 138 1 139 1 50 1 257 1 377 1 187 1 29 1 233 1 76 1 380 1 355 1 31 2 202 2 
352 1 156 1 374 1 190 2 145 1 353 1 139 1 128 1 257 1 187 1 349 1 233 1 76 1 
365 1 60 1 84 1 380 1 112 1 
173 1 66 1 181 2 60 2 121 1 84 2 242 2 49 1 112 1 365 2 290 1 198 1 75 1 221 1 322 1 262 1 380 1 236 1 14 1 
204 1 159 1 84 1 241 1 112 1 365 1 302 1 31 1 202 1 
66 1 262 1 112 1 
185 1 158 1 41 1 208 1 209 1 80 1 109 1 247 1 
251 1 158 3 47 1 208 1 266 2 209 1 109 4 247 4 185 2 334 1 116 1 80 2 201 1 351 1 
158 1 208 1 266 1 209 1 109 2 161 1 247 2 185 1 41 1 270 1 80 1 357 1 
251 2 185 1 158 1 47 1 41 1 208 1 328 1 209 1 80 1 109 3 351 2 247 3 
158 2 341 1 99 1 296 2 
100 1 41 1 208 1 209 1 109 1 247 1 
185 1 158 1 33 1 41 1 208 1 266 1 209 1 80 1 109 2 247 2 
298 1 
185 1 158 1 41 1 208 1 209 1 80 1 109 1 247 1 
258 1 185 1 158 1 80 1 
185 1 158 1 208 1 209 1 80 1 109 1 247 1 
286 1 232 1 247 1 
251 2 185 1 158 1 47 1 41 1 208 1 209 1 80 1 109 3 351 1 247 3 22 1 
185 1 158 1 289 1 208 1 266 1 209 1 80 1 109 2 247 2 
158 1 10 1 116 1 41 1 208 1 85 1 339 1 209 1 109 1 247 1 364 1 
158 1 41 1 208 1 209 1 80 1 109 1 247 1 
185 1 41 1 208 1 209 1 80 2 109 1 247 1 
158 1 208 2 344 1 146 1 209 2 109 2 247 2 177 1 41 1 80 1 
33 1 158 2 362 1 208 1 266 2 209 1 109 3 247 3 185 1 334 1 116 1 41 1 80 1 
299 1 158 1 208 1 280 1 266 1 209 1 109 2 247 2 364 1 185 1 10 1 41 1 43 1 339 2 80 1 
158 2 208 2 266 2 209 2 109 4 247 4 185 1 334 1 289 1 116 1 41 1 80 1 295 1 
251 1 185 1 33 1 158 1 41 1 208 1 266 1 209 1 80 1 109 3 247 3 
334 1 158 1 116 1 201 1 
158 1 80 1 

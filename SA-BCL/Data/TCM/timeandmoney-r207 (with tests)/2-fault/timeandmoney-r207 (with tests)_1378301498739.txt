#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (47,334) 108 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (46,215) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (89,173,179) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (46,215) (46,215) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 338 
com.domainlanguage.time.TimePointTest:testEquals()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (89,173,179) (89,173,179) 55 50 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 338 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 166 24 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (47,334) (47,334) (208,285) 341 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 304 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (47,334) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 104 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (47,334) (47,334) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (46,215) (46,215) 124 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (47,334) 108 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 338 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 121 (219,259) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 121 (219,259) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 121 (111,287) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 121 (111,287) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 149 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | CONDITION | 6040 | if (x) -> if (!x)
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2913 | return null
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
38 1 167 9 90 2 300 1 125 1 40 3 42 1 45 1 267 1 310 4 221 1 138 1 316 1 61 9 139 2 21 2 192 1 70 1 290 1 235 2 112 2 113 1 291 1 238 1 332 2 81 6 157 5 295 2 
38 1 167 9 90 2 300 1 125 1 40 3 42 1 45 1 267 1 310 4 221 1 138 1 316 1 61 9 139 2 21 2 192 1 70 1 290 1 235 2 112 2 113 1 291 1 238 1 332 2 81 6 157 5 295 2 
38 1 167 10 90 2 300 1 125 1 40 4 42 1 45 1 267 1 310 5 221 1 138 1 316 1 61 10 139 2 21 2 192 1 70 1 290 1 235 2 112 2 113 1 291 1 238 1 332 2 81 7 157 6 295 2 
38 1 167 7 90 2 300 1 125 1 40 2 45 1 267 1 310 3 221 1 138 1 316 1 61 7 139 2 21 2 192 1 70 1 290 1 235 2 112 2 113 1 291 1 238 1 332 2 81 4 157 4 295 1 
21 1 167 4 90 1 300 1 125 1 40 1 112 1 42 1 113 1 238 1 332 1 81 3 310 2 157 3 295 2 138 1 61 4 139 1 
229 1 167 2 21 1 90 1 300 1 70 1 125 1 112 1 235 1 194 1 113 1 45 1 332 1 309 1 157 1 61 2 
38 1 167 3 90 2 300 1 125 1 40 1 112 2 235 1 113 1 81 1 310 1 157 2 61 3 
38 1 167 9 90 2 300 1 169 1 125 1 40 3 42 1 310 4 138 1 61 9 139 1 21 1 290 1 235 1 112 2 113 1 291 1 238 1 332 1 78 1 81 7 157 5 295 2 
38 1 167 9 90 2 300 1 169 1 125 1 40 3 42 1 310 4 138 1 61 9 139 1 21 1 290 1 235 1 112 2 113 1 291 1 238 1 332 1 78 1 81 7 157 5 295 2 
144 1 178 1 338 1 
178 1 56 1 9 2 
54 1 110 2 337 2 329 2 250 2 
284 1 187 1 108 1 110 1 289 1 329 1 47 1 132 2 13 2 54 1 311 1 223 2 337 1 250 1 
54 1 110 1 337 1 329 1 250 1 46 1 
323 1 89 1 173 1 250 1 
110 1 173 1 337 1 329 1 250 1 
52 1 69 1 93 1 179 1 12 1 
52 1 144 1 256 1 69 1 178 1 93 2 179 2 319 1 
52 1 93 1 179 1 
54 1 69 1 110 1 93 1 179 1 337 1 329 1 250 1 46 1 215 1 
178 1 
52 1 144 1 69 1 178 1 93 2 179 2 319 1 16 1 
211 1 144 1 231 2 69 2 233 1 302 1 96 1 93 5 76 1 155 2 52 2 102 2 243 1 105 1 32 1 178 1 179 5 251 1 319 1 
132 1 13 1 187 1 110 1 223 1 11 1 225 1 337 1 250 1 
338 1 
7 1 110 1 262 1 337 1 329 1 250 2 
110 3 11 1 329 1 337 3 250 3 
110 1 337 1 250 1 
7 1 110 1 262 1 337 1 329 1 250 1 
7 1 110 2 11 1 225 1 329 1 337 2 250 2 
323 1 110 1 11 1 337 1 62 1 250 2 
110 1 11 1 225 1 337 1 250 1 
7 1 110 1 337 1 329 1 250 1 
132 1 13 1 187 1 223 1 
132 1 13 1 187 1 223 1 
3 1 100 1 199 1 103 1 30 1 314 1 58 1 172 2 
110 1 337 1 250 1 162 1 
322 1 323 1 122 1 7 1 110 4 11 2 225 1 329 1 337 4 62 1 250 5 
110 1 337 1 250 1 
39 1 342 1 
39 1 342 1 
37 1 305 1 
37 1 305 1 
37 1 305 1 
39 1 171 1 342 1 
39 1 234 1 342 1 
39 2 57 1 25 1 37 1 305 1 342 2 
39 1 171 1 342 1 
39 1 171 1 342 1 
39 1 148 1 342 1 
39 1 148 1 342 1 
39 1 148 1 342 1 
164 2 20 1 123 1 39 2 301 2 93 2 43 1 25 1 331 2 330 1 130 1 131 3 241 1 202 2 116 1 273 2 178 1 179 2 342 2 
39 1 301 1 110 2 234 1 93 1 263 1 43 1 331 1 27 1 131 1 202 1 273 1 277 1 179 1 296 1 337 2 163 1 35 1 250 2 207 1 342 1 
21 1 139 1 332 1 
309 1 21 1 332 1 
217 1 309 1 82 1 21 3 136 1 139 2 
217 1 156 1 309 1 82 1 21 2 139 1 
217 2 309 1 82 1 21 2 139 1 
91 1 9 3 92 2 96 1 93 5 52 1 51 1 134 1 102 1 14 1 220 1 177 2 105 2 56 1 178 2 179 5 277 1 107 1 318 1 182 1 319 1 228 1 186 1 144 1 231 1 69 4 150 2 155 1 243 3 296 1 35 1 249 1 
211 1 258 1 91 2 9 9 92 6 93 9 261 1 96 1 12 5 175 1 52 6 134 3 102 2 220 3 177 6 105 6 56 3 178 5 277 4 179 9 107 3 182 1 319 1 228 3 186 2 144 1 231 2 69 7 155 2 79 1 243 8 294 1 158 5 340 1 249 3 
211 1 91 1 92 2 9 4 93 3 51 1 102 1 134 1 220 1 105 2 177 2 178 3 56 2 179 3 277 1 318 1 107 1 228 1 186 1 144 1 231 1 69 2 150 1 155 1 243 3 249 1 
211 1 258 1 91 1 9 7 92 4 93 4 175 1 51 1 102 1 134 2 220 2 177 4 105 4 178 4 56 3 179 4 277 2 318 1 107 2 228 2 186 1 144 1 231 1 69 3 150 2 155 1 243 5 340 1 249 2 
244 1 338 1 279 1 
272 1 279 1 
255 1 
97 1 279 1 
269 1 5 1 257 1 244 2 97 1 279 3 
257 1 97 1 279 1 
8 1 279 1 
124 1 95 2 213 1 220 3 135 2 313 8 17 1 228 3 185 1 146 1 153 14 74 5 195 2 77 6 293 4 205 1 247 1 34 2 
124 1 95 2 213 1 220 3 135 2 313 8 17 1 228 3 185 1 146 1 153 14 74 7 195 2 77 6 293 4 205 3 247 1 34 2 
124 1 95 2 213 1 220 3 135 2 313 8 17 1 228 3 185 1 146 1 153 14 74 5 195 2 77 6 80 1 293 4 205 1 247 1 34 2 
299 4 124 1 95 3 172 2 94 1 264 1 213 1 174 1 100 1 103 1 134 3 220 6 135 3 313 21 59 3 107 3 17 1 228 6 185 2 143 1 145 1 146 2 195 2 153 40 74 14 239 1 237 1 77 19 199 1 30 1 293 7 205 7 247 1 34 3 249 3 
124 1 172 4 95 2 213 1 100 2 103 2 220 3 135 2 313 9 106 1 17 1 228 3 185 1 146 1 73 1 153 16 74 7 195 2 237 1 77 7 199 2 30 2 293 5 205 2 34 2 
120 1 167 2 90 1 300 1 125 1 48 1 132 1 13 1 309 1 222 1 275 1 136 1 223 1 61 2 139 1 64 1 67 1 18 1 21 2 190 1 112 1 235 1 72 1 113 1 75 1 332 1 81 1 157 1 159 1 204 1 
252 1 253 1 120 1 167 3 90 1 300 1 125 1 48 1 132 1 13 1 309 1 136 1 275 1 223 1 61 3 139 1 64 1 67 1 18 1 189 1 21 2 190 1 112 1 235 1 75 1 332 1 81 2 157 1 159 1 204 1 
64 1 252 1 253 1 67 1 120 1 18 1 21 2 167 2 190 1 300 1 125 1 235 1 75 1 332 1 132 1 13 1 309 1 81 2 157 1 136 1 275 1 204 1 223 1 61 2 139 1 
120 1 167 1 260 1 90 1 97 1 306 1 132 1 13 1 312 1 223 1 317 1 61 1 279 1 64 2 67 2 187 1 18 2 189 1 190 1 112 1 235 2 117 1 248 1 
252 1 120 1 167 1 90 1 48 1 132 1 13 1 309 1 275 1 136 1 223 1 61 1 139 1 64 1 67 1 18 1 21 2 190 1 112 1 235 1 72 1 113 1 75 1 332 1 159 1 204 1 
265 1 
1 1 120 1 89 1 173 1 96 1 93 2 97 1 306 1 132 2 50 1 13 2 52 2 102 1 105 1 55 1 276 1 223 2 179 2 279 1 63 1 319 1 323 1 187 2 186 1 231 1 190 1 236 1 196 1 155 1 243 1 117 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 323 1 89 1 173 1 93 2 50 1 52 1 55 1 276 1 179 2 250 1 16 1 319 1 
1 1 323 1 231 1 89 1 173 1 93 1 96 1 155 1 50 1 102 1 55 1 276 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 50 1 323 1 89 1 55 1 276 1 173 1 93 1 179 1 250 1 
1 1 323 1 231 1 89 1 173 1 93 1 96 1 155 1 50 1 102 1 55 1 276 1 179 1 250 1 
3 1 172 2 95 1 153 2 195 1 74 1 213 1 100 1 199 1 103 1 220 1 293 1 30 1 135 1 313 2 314 1 58 1 338 1 34 1 17 1 
3 1 209 1 299 1 166 1 172 2 153 2 24 1 77 1 100 1 199 1 103 1 30 1 313 1 58 1 59 1 
87 1 3 1 209 1 110 1 11 1 172 2 153 2 152 1 129 1 77 1 100 1 199 1 103 1 30 1 313 1 58 1 336 1 225 1 337 1 250 1 
87 1 3 1 285 1 187 1 209 1 110 1 11 1 172 2 153 1 47 1 77 1 132 1 13 1 100 1 199 1 103 1 30 1 334 1 223 1 58 1 225 1 337 1 250 1 341 1 
132 1 3 1 13 1 187 1 100 1 142 1 199 1 103 1 30 1 313 1 223 1 58 1 172 2 304 1 153 1 129 1 
3 1 209 1 7 1 172 2 100 1 103 1 134 1 220 1 313 1 58 1 107 1 227 1 228 1 110 1 329 1 153 2 77 1 199 1 30 1 337 1 250 1 249 1 
3 1 210 1 172 2 153 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 314 1 58 1 
228 1 3 1 88 1 172 2 153 1 77 1 100 1 199 1 103 1 30 1 314 1 58 1 249 1 
228 1 3 1 172 2 153 2 77 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 314 1 58 1 107 1 249 1 
3 1 142 1 210 1 172 2 153 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 58 1 
228 1 3 1 88 1 142 1 172 2 153 1 77 1 100 1 199 1 103 1 30 1 58 1 249 1 
228 1 3 1 142 1 172 2 153 2 77 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 58 1 107 1 249 1 
228 1 3 1 172 2 153 2 77 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 58 1 107 1 249 1 
132 1 13 1 187 1 223 1 47 1 
132 1 13 1 187 1 104 1 223 1 
228 1 3 1 209 1 172 2 153 2 77 1 100 1 199 1 103 1 134 1 30 1 220 1 313 1 58 1 107 1 249 1 
132 1 13 1 334 1 222 1 223 1 47 1 
3 1 209 1 7 1 172 2 100 1 103 1 134 1 220 1 313 1 58 1 107 1 228 1 110 1 193 1 329 1 153 2 77 1 199 1 30 1 337 1 250 1 249 1 
172 6 95 1 264 3 174 1 100 3 103 3 106 1 107 4 17 1 283 1 184 1 23 4 195 1 26 1 199 3 30 3 201 1 293 4 205 4 34 1 36 1 299 4 212 1 41 1 213 1 214 1 134 4 220 5 135 1 313 20 59 3 228 5 325 2 324 1 71 1 151 1 74 8 153 41 237 1 240 1 77 21 335 1 249 4 
299 4 212 1 95 1 41 1 172 8 264 3 213 1 214 1 174 1 100 4 103 4 134 4 220 5 135 1 313 20 106 1 59 3 107 4 17 1 228 4 184 1 283 1 324 1 325 2 23 4 151 1 71 1 195 1 153 38 74 7 237 2 26 1 240 1 77 18 199 4 293 4 201 1 30 4 335 1 205 3 34 1 249 3 36 1 
299 4 212 1 95 1 41 1 172 4 264 2 213 1 214 1 174 2 100 2 103 2 134 7 220 8 135 1 313 27 106 1 59 4 107 7 17 1 228 8 283 1 325 1 23 4 151 1 327 2 71 1 195 1 153 52 74 14 237 1 26 1 240 1 77 25 199 2 293 7 201 1 30 2 335 1 205 7 34 1 249 7 36 1 
299 2 172 4 264 1 174 1 100 2 103 2 134 3 220 3 313 9 106 1 59 1 107 3 228 3 184 1 325 1 23 2 71 1 153 19 74 6 26 2 240 1 77 10 199 2 293 3 201 1 30 2 335 1 205 3 249 3 85 1 
299 2 212 1 41 1 172 6 264 2 214 1 100 3 103 3 134 3 220 3 313 14 106 1 59 2 107 3 228 2 283 1 325 2 23 4 71 1 151 1 74 4 153 26 237 2 26 1 240 1 77 12 199 3 293 2 201 2 30 3 335 1 205 2 249 2 36 1 
20 1 202 1 116 1 273 1 39 1 301 1 84 1 25 1 331 1 342 1 
234 1 263 1 
68 1 202 1 273 1 39 1 301 1 315 1 15 1 331 1 342 1 
164 1 20 1 123 1 39 1 301 1 93 1 43 1 25 1 331 1 330 1 131 2 241 1 202 1 116 1 273 1 178 1 179 1 342 1 
164 1 20 1 123 1 39 1 301 1 93 1 43 1 25 1 331 1 330 1 131 2 241 1 202 1 116 1 273 1 178 1 179 1 342 1 
164 1 20 1 123 1 39 1 301 1 93 1 43 1 25 1 331 1 330 1 131 2 241 1 202 1 116 1 273 1 178 1 179 1 342 1 
115 1 57 1 171 1 
115 1 57 1 171 1 
268 1 148 1 
268 1 57 1 148 1 
163 1 207 1 
164 1 39 1 301 1 93 1 263 1 131 1 273 1 179 1 277 1 230 1 69 1 110 2 234 1 330 1 331 1 27 1 202 1 296 1 337 2 35 1 163 1 250 2 342 1 207 1 
115 1 171 1 
268 1 57 1 148 1 
6 1 83 1 160 1 250 2 
140 1 64 1 252 1 120 1 188 1 21 2 190 1 75 1 332 1 48 1 132 2 13 2 309 1 222 1 136 1 274 1 275 1 223 2 139 1 
64 1 252 1 188 1 120 1 21 2 190 1 75 1 332 1 48 1 132 1 271 1 13 1 309 1 136 1 275 1 223 1 139 1 
140 1 64 1 187 1 120 1 190 1 326 1 97 1 306 1 132 1 13 1 223 1 117 1 317 1 279 1 
140 1 64 1 252 1 188 1 120 1 21 2 190 1 75 1 332 1 48 1 132 1 13 1 309 1 136 1 274 1 275 1 223 1 139 1 
278 1 
144 1 243 1 105 1 32 1 178 1 302 1 338 1 
9 1 96 1 93 1 127 1 270 1 52 1 53 1 102 1 105 1 56 1 178 2 179 1 319 1 144 1 231 1 155 1 243 1 
86 2 254 1 5 1 257 3 8 2 92 6 9 12 96 4 93 5 97 3 98 1 13 3 272 3 102 4 177 6 105 8 178 8 179 5 181 1 180 2 107 2 279 10 183 2 186 2 187 1 288 2 190 4 28 2 32 1 208 2 120 3 302 1 126 2 132 3 307 2 133 2 52 5 219 2 134 2 220 2 222 1 56 6 223 3 63 1 319 3 228 2 144 2 231 4 328 1 155 4 242 1 243 9 244 2 249 2 
299 1 212 1 9 6 92 5 41 1 93 1 96 2 264 1 214 1 133 2 52 1 102 2 134 2 220 2 177 5 105 5 56 3 178 5 59 1 179 1 107 2 63 1 319 1 281 1 228 2 186 1 144 2 231 2 151 1 28 1 155 2 243 8 246 1 249 2 36 1 
228 1 231 1 124 1 110 1 93 1 96 1 95 1 329 1 195 1 46 1 215 1 266 1 155 1 133 2 102 1 220 1 54 1 243 2 105 1 179 1 337 1 34 1 250 1 
144 1 231 1 302 1 96 1 155 1 102 1 243 1 32 1 105 1 178 1 
228 2 86 1 92 5 9 10 28 1 133 2 134 2 220 2 243 5 105 5 177 5 56 5 178 5 107 2 249 2 
52 1 144 1 178 1 93 1 179 1 319 1 
254 2 211 1 120 1 96 1 93 3 97 1 99 1 306 1 132 4 13 4 52 4 102 2 105 2 223 4 179 3 181 1 279 1 63 2 319 2 321 1 187 2 186 2 231 2 190 1 236 1 196 1 155 2 243 2 117 1 
132 1 13 1 187 1 54 1 108 1 110 1 223 1 337 1 329 1 250 1 47 1 
186 1 144 2 231 1 9 4 92 2 96 1 155 1 102 1 135 1 243 1 177 2 105 2 56 2 178 4 63 1 
273 1 301 1 114 1 
20 1 273 1 109 1 301 1 163 1 
273 1 301 1 114 1 
273 1 301 1 114 1 
273 1 301 1 170 1 
273 1 301 1 170 1 
273 1 301 1 170 1 
273 1 301 1 
39 1 342 1 
299 1 124 1 172 2 95 2 264 1 213 1 214 1 100 1 103 1 220 3 135 1 313 8 106 1 59 1 17 1 228 3 153 15 74 5 195 2 77 7 199 1 30 1 293 4 205 1 34 2 
299 2 124 1 95 2 172 4 264 1 213 1 214 1 174 1 100 2 103 2 134 1 220 4 135 1 313 10 106 1 59 1 226 1 107 1 17 1 228 3 195 2 153 18 74 6 77 8 199 2 293 4 30 2 205 2 34 2 
299 1 124 1 212 1 95 2 41 1 172 6 264 1 213 1 214 1 100 3 103 3 134 2 220 5 135 1 313 13 106 1 59 1 226 1 107 2 17 1 228 5 151 1 195 2 153 26 74 7 237 1 77 13 199 3 30 3 293 5 205 2 34 2 249 2 36 1 
299 1 124 1 212 1 95 2 172 6 41 1 264 1 213 1 214 1 100 3 103 3 134 2 220 5 135 1 313 14 106 1 59 1 226 1 107 2 17 1 228 4 151 1 195 2 153 24 74 9 237 1 77 10 199 3 30 3 293 5 205 4 34 2 249 1 36 1 
299 1 124 1 172 2 95 2 264 1 213 1 214 1 100 1 103 1 220 3 135 1 313 8 106 1 59 1 17 1 228 3 153 15 74 5 195 2 77 7 199 1 30 1 293 4 205 1 34 2 
299 1 212 1 172 2 41 1 264 1 214 1 100 1 103 1 134 2 220 2 313 6 106 1 59 1 107 2 228 2 151 1 153 12 74 2 77 6 199 1 30 1 293 1 205 1 249 2 36 1 
299 1 124 1 212 1 95 2 41 1 172 8 264 1 213 1 214 1 100 4 103 4 134 2 220 5 135 1 313 14 106 1 59 1 226 1 107 2 17 1 228 4 151 1 195 2 153 25 74 7 237 2 77 11 199 4 30 4 293 5 205 2 34 2 249 1 36 1 
299 1 212 1 41 1 172 8 264 1 214 1 100 4 103 4 134 3 220 3 313 9 106 1 59 1 107 3 228 2 184 1 151 1 153 16 74 6 237 2 77 7 199 4 30 4 293 3 205 3 249 2 36 1 
228 1 95 3 153 7 74 6 195 1 213 2 77 4 293 3 220 1 313 3 205 3 34 3 17 1 
299 1 124 1 212 1 95 2 41 1 172 8 264 1 213 1 214 1 100 4 103 4 134 2 220 5 135 1 313 14 106 1 59 1 107 2 17 1 228 4 184 1 151 1 195 2 153 25 74 7 237 2 77 11 199 4 30 4 293 5 205 2 34 2 249 1 36 1 
228 3 124 1 172 4 95 2 195 2 153 17 74 7 237 1 213 1 77 8 100 2 199 2 103 2 220 3 293 4 30 2 135 1 313 9 205 3 34 2 17 1 
228 1 95 1 74 2 195 1 153 5 213 1 77 2 293 2 220 1 135 1 313 3 338 1 34 1 17 1 
228 1 172 2 74 2 153 4 77 2 100 1 199 1 103 1 134 1 293 1 30 1 220 1 313 2 205 1 226 1 107 1 249 1 
228 1 299 2 264 1 153 7 74 2 174 1 77 4 134 1 293 1 220 1 313 3 59 1 205 1 107 1 249 1 
299 2 166 1 124 1 95 2 172 2 213 1 174 1 100 1 134 2 103 1 220 5 135 1 313 13 59 2 107 2 17 1 228 5 327 1 195 2 153 25 74 7 237 1 77 12 199 1 293 5 30 1 205 2 34 2 249 2 
77 1 299 1 153 1 
313 1 59 1 153 1 
228 1 86 1 172 2 153 6 74 3 77 3 100 1 199 1 103 1 134 1 30 1 220 1 293 2 313 3 205 1 226 1 107 1 249 1 
299 1 212 1 172 2 41 1 264 1 214 1 100 1 103 1 134 2 220 2 313 6 106 1 59 1 107 2 228 2 151 1 153 12 74 2 77 6 199 1 30 1 293 1 205 1 249 2 36 1 
228 1 95 1 195 1 153 6 74 2 77 3 220 1 293 1 313 3 205 1 34 1 
95 1 172 2 74 2 153 3 213 1 237 1 77 2 100 1 199 1 103 1 293 1 30 1 31 1 313 1 205 1 34 1 17 1 
228 2 124 1 172 2 95 2 74 5 153 10 195 1 77 5 100 1 199 1 103 1 30 1 293 3 220 2 313 5 106 1 205 2 34 2 
172 2 153 2 74 1 100 1 199 1 103 1 134 1 30 1 220 1 313 2 106 1 205 1 
228 1 172 2 74 2 153 4 77 2 100 1 199 1 103 1 134 1 293 1 30 1 220 1 313 2 106 1 205 1 107 1 249 1 
184 1 172 6 95 1 153 3 74 2 237 1 77 2 100 3 199 3 103 3 30 3 293 1 31 1 313 1 106 1 205 1 34 1 
299 3 124 1 95 2 172 8 264 1 213 1 100 4 103 4 134 2 220 5 135 1 313 16 106 1 59 3 226 1 107 2 17 1 228 5 184 1 143 1 145 1 195 2 153 31 74 9 237 1 239 1 77 15 199 4 293 5 30 4 205 4 34 2 249 2 
323 1 65 1 203 1 232 1 118 1 250 1 62 1 
65 1 323 1 165 1 19 1 232 1 147 1 101 1 203 1 118 1 224 1 62 1 250 1 
132 1 13 1 187 1 120 1 190 1 117 1 223 1 97 1 338 1 279 1 306 1 
132 1 13 1 187 1 121 1 120 1 257 1 259 1 190 1 110 1 223 1 11 1 97 1 337 1 250 1 279 1 
132 1 13 1 254 1 121 1 120 1 257 1 259 1 190 1 110 1 223 1 11 1 97 1 337 1 250 1 279 1 
132 1 13 1 254 1 121 1 120 1 257 1 190 1 110 1 111 1 223 1 11 1 97 1 337 1 250 1 279 1 
254 1 120 1 257 1 8 1 93 2 97 1 132 3 52 1 13 3 272 1 178 1 223 3 179 2 180 1 279 4 183 1 187 1 287 1 144 1 190 1 29 1 244 1 297 1 
187 1 254 1 120 1 144 1 257 1 8 1 190 1 93 2 97 1 132 3 13 3 52 1 219 1 272 1 244 1 178 1 223 3 179 2 297 1 180 1 183 1 279 4 
132 1 13 1 120 1 190 1 223 1 280 1 
141 1 252 1 4 1 187 2 5 1 120 2 257 1 190 3 97 2 128 1 198 1 132 7 308 1 13 7 311 1 333 1 222 1 245 1 223 6 280 1 279 3 
110 1 11 1 337 1 250 1 
208 1 302 1 96 2 93 3 126 1 132 1 13 1 52 2 219 1 102 2 272 1 105 1 178 1 223 1 179 3 181 1 180 1 279 2 319 1 187 1 144 1 231 2 288 1 69 1 155 2 243 1 32 1 244 1 
5 1 120 1 257 1 190 2 328 1 97 1 132 2 13 2 222 1 244 1 223 2 280 1 279 2 
187 1 120 1 190 1 303 1 97 1 306 1 132 4 13 4 222 1 223 4 117 1 297 1 279 1 
4 1 254 1 66 1 120 1 257 1 190 2 97 1 154 1 132 2 197 1 308 1 13 2 223 2 279 1 
132 1 13 1 187 1 309 1 120 1 21 1 190 1 223 1 75 1 332 1 
141 1 132 2 119 1 252 1 13 2 120 1 190 1 222 1 223 2 97 1 279 1 
141 1 254 1 187 1 120 2 190 2 303 1 97 2 306 1 132 5 198 1 13 5 333 1 222 1 117 1 223 4 279 3 
141 1 254 1 187 1 120 2 190 2 303 1 97 2 306 1 132 5 13 5 333 1 222 1 117 1 223 4 60 1 279 3 
132 1 13 1 187 1 121 1 120 1 257 1 190 1 110 1 111 1 223 1 11 1 97 1 337 1 250 1 279 1 
4 1 254 1 5 1 120 1 257 1 190 2 97 1 128 1 132 1 308 1 13 1 223 1 279 1 
0 1 298 1 168 1 44 1 
0 1 298 1 200 1 168 1 69 1 176 1 149 1 93 1 179 1 44 1 
6 1 298 1 83 1 168 1 160 1 44 1 250 1 
298 1 200 1 149 1 
157 1 300 1 125 1 338 1 
167 1 157 1 90 1 300 1 125 1 112 1 61 1 
18 1 167 1 235 1 
2 1 167 3 90 1 70 2 300 1 125 1 112 1 113 1 292 1 157 1 61 3 161 1 
81 1 167 2 157 1 90 1 300 1 125 1 295 1 112 1 61 2 
310 1 21 1 167 1 157 1 90 1 112 1 138 1 61 1 113 1 139 1 332 1 
167 1 157 1 90 1 300 1 112 1 61 1 113 1 
167 1 90 1 300 2 125 1 112 1 61 1 113 1 
286 1 167 2 90 2 300 1 112 2 113 1 216 1 157 1 61 2 33 1 
167 3 90 1 300 1 125 1 290 1 40 1 112 1 113 1 291 1 81 2 310 1 157 2 61 3 
21 2 167 2 90 1 300 1 191 1 125 1 112 1 113 1 332 1 309 1 81 1 157 1 136 1 61 2 139 1 
167 4 90 2 300 1 125 1 40 1 112 2 42 1 113 1 81 2 310 1 157 2 295 1 61 4 
167 1 157 1 90 1 300 1 125 1 112 1 61 1 113 1 
2 1 282 1 167 4 90 1 70 1 300 2 125 2 40 1 112 1 292 1 81 2 310 1 157 3 61 4 
167 2 22 1 90 1 300 1 125 1 112 1 113 1 49 1 78 1 81 1 157 1 61 2 
2 2 167 3 90 1 70 2 300 1 125 1 112 1 113 1 292 1 218 1 157 1 61 3 
157 2 10 2 137 1 339 1 
320 1 167 1 90 1 112 1 61 1 113 1 
81 1 167 2 157 1 90 1 300 1 125 1 112 1 61 2 113 1 291 1 
206 1 
167 1 157 1 90 1 300 1 125 1 112 1 61 1 113 1 
167 3 90 1 70 1 300 1 125 1 112 1 113 1 291 1 81 1 157 1 61 3 
282 1 310 1 157 1 40 1 
157 1 300 1 

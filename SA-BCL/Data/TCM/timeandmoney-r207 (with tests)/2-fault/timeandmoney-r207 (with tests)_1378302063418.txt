#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String; | STATEMENT | 3023 | stmt -> ;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5678 | return null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
77 1 354 2 239 1 227 2 326 2 342 1 358 3 377 1 242 3 245 1 173 1 345 1 339 1 
54 1 253 1 77 1 367 1 227 2 342 1 30 2 150 1 316 1 174 1 173 4 63 2 345 2 354 2 239 1 267 2 326 5 374 1 358 9 297 1 242 9 377 1 362 1 245 3 132 2 339 6 366 1 134 1 
54 1 253 1 77 1 367 1 227 2 342 1 30 2 150 1 316 1 174 1 173 4 63 2 345 2 354 2 239 1 267 2 326 5 374 1 358 9 297 1 242 9 377 1 362 1 245 3 132 2 339 6 366 1 134 1 
54 1 253 1 77 1 367 1 227 2 342 1 30 2 150 1 316 1 174 1 173 5 63 2 345 2 354 2 239 1 267 2 326 6 374 1 358 10 297 1 242 10 377 1 362 1 245 4 132 2 339 7 366 1 134 1 
54 1 253 1 77 1 367 1 227 2 342 1 30 1 150 1 316 1 174 1 173 3 63 2 345 2 354 2 239 1 267 2 326 4 374 1 358 7 297 1 242 7 377 1 362 1 245 2 132 2 339 4 134 1 
77 1 354 1 239 1 267 1 227 1 326 3 30 2 358 4 377 1 242 4 316 1 362 1 245 1 173 2 63 1 339 3 132 1 366 1 
77 1 354 1 41 1 239 1 326 1 227 1 267 1 78 1 358 2 150 1 377 1 242 2 174 1 63 1 82 1 345 1 
253 1 77 1 354 2 239 1 267 1 374 1 326 5 227 2 30 2 342 1 358 9 316 1 377 1 242 9 362 1 245 3 173 4 139 1 20 1 63 1 345 1 132 1 339 7 366 1 
253 1 77 1 354 2 239 1 267 1 374 1 326 5 227 2 30 2 342 1 358 9 316 1 377 1 242 9 362 1 245 3 173 4 139 1 20 1 63 1 345 1 132 1 339 7 366 1 
144 1 324 1 292 1 127 1 375 1 48 1 376 1 7 1 246 1 335 1 162 1 381 1 131 1 305 1 
178 1 
178 1 172 1 42 1 11 1 324 2 271 1 127 2 305 1 
251 1 178 1 42 1 324 5 215 1 216 1 18 1 127 5 113 1 171 2 49 2 332 1 31 2 172 2 281 1 183 1 271 1 205 1 305 2 
73 1 178 1 271 1 
178 1 280 1 352 2 
48 1 376 2 7 2 144 2 283 1 162 2 131 2 375 2 
306 1 74 1 101 1 192 1 104 1 151 2 258 1 7 2 200 2 202 1 155 1 283 1 203 1 10 2 284 2 33 1 110 2 36 1 65 1 262 1 260 1 144 2 67 1 373 1 47 1 375 3 48 1 376 2 363 1 301 1 218 1 364 1 162 3 303 1 131 2 338 1 119 1 
48 1 376 1 7 1 144 1 246 1 162 1 292 1 381 1 131 1 375 1 
178 1 85 1 25 1 214 1 324 1 127 1 375 1 197 1 376 1 334 1 162 1 83 1 381 1 271 1 
178 1 144 1 25 1 324 2 127 2 375 1 197 1 376 1 7 1 334 1 162 1 83 1 381 1 271 1 131 1 
172 1 210 1 324 1 127 1 305 1 
178 1 172 1 1 1 42 1 324 2 271 1 127 2 305 1 
172 1 324 1 127 1 
144 1 15 1 375 2 376 2 7 1 199 1 283 2 162 2 131 1 
318 1 302 1 129 1 
74 1 373 1 67 1 355 1 375 1 151 1 200 1 155 1 283 1 218 1 301 1 162 1 284 1 36 1 338 1 65 1 
74 1 14 1 144 1 67 1 373 1 375 2 151 1 376 1 181 1 200 1 155 1 301 1 218 1 302 1 162 2 284 1 36 1 338 1 131 1 65 1 
73 1 283 1 
376 3 7 1 14 1 144 3 283 1 162 3 131 3 375 3 
376 1 144 1 162 1 292 1 381 1 131 1 375 1 
376 1 7 1 144 1 199 1 15 1 162 1 381 1 131 1 375 1 
74 1 25 1 276 1 192 1 104 1 197 1 151 1 7 2 199 1 200 1 202 1 155 1 283 1 203 1 10 1 284 1 33 1 83 1 110 2 36 1 65 1 262 1 260 1 144 3 14 1 67 1 373 1 324 1 127 1 375 4 48 1 376 3 181 1 300 1 363 1 334 1 301 1 218 1 364 1 162 4 381 1 338 1 131 3 119 1 
350 1 376 2 144 1 14 1 85 1 283 1 162 2 131 1 375 2 
178 1 14 2 144 3 25 1 324 1 356 1 127 1 375 3 197 1 376 3 7 1 181 1 199 1 300 1 334 1 162 3 83 1 381 1 131 3 
14 1 144 2 375 2 376 2 7 1 199 1 302 1 162 2 129 1 131 2 
74 1 373 1 67 1 375 1 151 1 200 1 155 1 283 1 218 1 301 1 162 1 284 1 338 1 36 1 65 1 
74 1 353 1 151 1 200 1 283 1 284 1 381 1 249 1 
306 2 4 1 190 1 192 1 194 1 318 2 202 1 203 2 10 4 286 1 110 2 262 1 260 1 372 1 39 1 92 1 160 1 302 2 364 1 96 1 148 1 129 2 184 1 119 1 
376 1 144 1 25 1 162 1 381 1 131 1 46 1 375 1 
143 1 350 1 14 2 144 4 85 1 309 1 375 5 376 5 7 1 181 1 199 1 283 1 162 5 131 4 
376 2 144 2 162 2 292 1 381 1 131 2 46 1 375 2 
182 1 357 1 322 1 
237 1 182 2 115 1 108 1 369 1 322 2 
182 1 322 1 
182 1 322 1 
115 1 108 1 
115 1 108 1 
115 1 108 1 
182 1 322 1 330 1 
182 1 322 1 330 1 
182 1 322 1 330 1 
182 1 128 1 322 1 
182 1 128 1 322 1 
182 1 128 1 322 1 
222 2 223 1 208 2 178 1 125 1 237 1 58 1 188 1 179 2 87 1 324 2 310 2 127 2 91 1 138 2 182 2 21 1 117 3 322 2 
222 1 255 1 341 1 310 1 169 1 137 1 138 1 283 1 322 1 261 1 144 2 179 1 40 1 324 1 357 1 127 1 269 1 375 2 376 2 91 1 182 1 162 2 117 1 131 2 
51 2 267 2 347 1 78 1 132 1 
63 1 267 1 132 1 
63 1 267 1 78 1 
212 1 51 1 267 3 347 1 78 1 132 2 
159 1 51 1 267 2 347 1 78 1 132 1 
23 1 255 1 341 1 29 1 191 2 171 1 280 1 31 1 172 1 62 1 106 1 32 2 233 1 205 1 372 1 156 2 288 1 178 2 352 3 39 1 40 1 42 1 324 5 43 1 215 2 127 5 49 1 332 3 148 1 271 1 184 1 305 4 
166 1 76 1 191 6 171 2 280 3 172 6 31 2 281 1 62 2 106 3 32 6 205 1 372 3 178 5 288 1 352 9 210 5 39 3 40 4 266 1 88 1 42 1 324 9 43 2 215 6 127 9 89 1 49 2 50 1 332 8 148 3 53 5 271 1 184 3 305 7 
29 1 191 2 171 1 280 2 31 1 281 1 62 1 106 1 32 2 233 1 372 1 156 1 178 3 352 4 39 1 40 1 324 3 43 1 215 2 127 3 49 1 332 3 148 1 271 1 184 1 305 2 
76 1 29 1 191 4 171 1 280 3 31 1 281 1 62 1 106 2 32 4 233 1 372 2 156 2 178 4 352 7 39 2 40 2 266 1 324 4 43 1 215 4 127 4 49 1 50 1 332 5 148 2 271 1 184 2 305 3 
206 1 
73 1 299 1 36 1 
36 1 37 1 
301 1 36 1 
299 2 67 1 301 1 36 3 234 1 45 1 
67 1 301 1 36 1 
180 1 36 1 
306 4 38 1 39 1 90 1 360 1 270 1 160 2 244 1 279 1 378 1 230 1 201 2 203 3 10 7 96 3 148 1 118 1 220 1 
306 16 340 3 0 1 226 4 192 1 313 1 6 1 279 2 230 1 201 3 203 15 106 3 10 31 344 1 110 2 64 1 262 1 372 3 39 4 90 1 360 1 146 1 270 1 244 2 378 2 160 5 364 1 96 10 148 4 220 2 118 5 119 1 184 3 100 1 
306 5 262 2 0 1 39 1 3 1 192 2 90 1 270 1 244 1 160 3 279 1 378 1 230 1 201 2 203 4 175 1 10 9 96 4 364 2 148 1 110 4 220 1 118 1 119 2 
306 4 39 1 90 1 360 1 270 1 160 2 244 1 279 1 378 1 201 2 230 1 203 3 10 7 96 3 148 1 118 1 220 1 
306 4 39 1 90 1 360 1 270 1 160 2 244 1 279 1 378 1 201 2 230 1 203 3 10 7 96 3 148 1 118 1 220 1 
74 1 275 2 227 1 151 1 200 1 9 1 231 1 284 1 345 2 346 1 36 1 124 1 16 1 373 1 354 1 70 2 358 1 241 1 242 1 243 2 218 1 247 1 301 1 
275 1 254 1 227 1 78 1 151 1 152 1 61 1 200 1 63 1 176 1 284 1 345 1 204 1 373 1 212 1 354 1 290 1 267 2 70 1 358 1 242 1 377 1 243 1 218 1 304 1 132 1 
275 1 254 1 77 1 227 1 78 1 151 1 152 1 61 1 200 1 63 1 176 1 284 1 345 1 204 1 373 1 212 1 354 1 290 1 239 1 326 1 267 2 70 1 358 2 242 2 377 1 243 1 218 1 379 1 339 1 132 1 
275 1 254 1 77 1 227 1 78 1 151 1 105 1 61 1 200 1 63 1 176 1 284 1 345 1 204 1 212 1 373 1 354 1 290 1 239 1 326 1 267 2 70 1 358 3 241 1 242 3 243 1 218 1 304 1 132 1 339 2 
275 1 77 1 78 1 151 1 105 1 61 1 200 1 63 1 176 1 284 1 345 1 204 1 373 1 212 1 239 1 326 1 267 2 70 1 358 2 242 2 243 1 218 1 304 1 339 2 132 1 
71 1 
274 2 57 2 225 2 278 2 171 1 280 2 172 6 231 1 62 1 232 1 284 2 178 2 351 1 352 2 291 1 68 1 294 1 295 1 298 4 361 1 301 1 74 2 186 1 25 1 256 1 193 2 151 2 197 1 123 2 31 1 200 2 83 1 205 1 36 1 124 1 85 1 373 1 214 1 42 3 324 5 215 2 268 1 127 5 158 1 375 1 49 1 376 1 332 2 334 1 218 1 336 1 162 1 381 1 271 1 164 2 
186 1 25 1 256 1 197 1 172 2 232 1 11 1 83 1 351 1 85 1 214 1 42 1 324 3 268 1 127 3 375 1 376 1 298 2 334 1 162 1 381 1 164 1 
186 1 25 1 256 1 193 1 197 1 172 1 232 1 11 1 83 1 351 1 178 1 85 1 214 1 42 1 324 3 268 1 127 3 375 1 376 1 298 3 334 1 162 1 381 1 271 1 
186 1 25 1 225 1 256 1 193 1 197 1 172 2 232 1 11 1 83 1 351 1 178 1 85 1 214 1 42 1 324 3 268 1 127 3 375 1 376 1 298 3 334 1 162 1 381 1 271 1 164 1 
274 2 57 2 225 4 171 1 278 2 172 7 280 2 232 1 11 1 351 1 178 5 13 1 68 1 298 6 147 1 252 1 186 1 25 1 256 1 193 4 197 1 123 2 31 1 83 1 205 1 85 1 214 1 42 3 324 5 215 1 268 1 127 5 329 1 375 1 376 1 49 1 332 1 334 1 336 1 162 1 97 1 381 1 271 5 164 4 
274 2 57 2 225 2 171 1 278 2 280 2 172 4 232 1 351 1 178 2 352 2 291 1 68 1 298 4 186 1 25 1 256 1 193 2 197 1 123 2 31 1 83 1 205 1 85 1 214 1 42 2 324 4 215 1 268 1 127 4 375 1 376 1 49 1 332 1 334 1 336 1 162 1 381 1 271 1 164 2 
252 1 274 2 186 1 57 2 25 1 225 2 256 1 193 2 278 2 197 1 171 1 123 2 172 4 280 2 31 1 232 1 83 1 205 1 178 1 351 1 13 1 85 1 214 1 42 2 68 1 324 4 215 1 268 1 127 4 375 1 376 1 49 1 298 4 332 1 334 1 336 1 147 1 162 1 381 1 271 1 164 2 
252 1 274 2 186 1 57 2 25 1 225 2 256 1 193 2 278 2 197 1 171 1 123 2 172 4 280 2 31 1 232 1 83 1 205 1 178 1 351 1 13 1 85 1 214 1 42 2 68 1 324 4 215 1 268 1 127 4 375 1 376 1 49 1 298 4 332 1 334 1 336 1 147 1 162 1 381 1 271 1 164 2 
250 1 252 1 186 1 25 1 225 2 256 1 193 2 196 2 278 2 197 1 171 1 123 2 172 4 31 1 343 2 232 1 109 1 83 1 205 1 178 1 351 1 352 2 85 1 214 1 42 2 68 1 324 4 215 1 268 1 127 4 375 1 376 1 49 1 298 4 332 1 334 1 162 1 381 1 365 1 271 1 164 2 
252 1 274 2 186 1 57 2 25 1 225 3 256 1 193 3 278 2 171 1 197 1 123 2 280 2 31 1 172 5 232 1 83 1 205 1 178 1 13 1 351 1 85 1 214 1 42 2 68 1 324 4 215 1 268 1 127 4 375 1 49 1 376 1 298 5 332 1 334 1 336 1 147 1 162 1 97 1 381 1 271 1 164 3 
252 1 274 2 186 1 57 2 25 1 225 3 256 1 193 3 278 2 171 1 197 1 123 2 280 2 31 1 172 5 232 1 83 1 205 1 178 1 13 1 351 1 85 1 214 1 42 2 68 1 324 4 215 1 268 1 127 4 375 1 49 1 376 1 298 5 332 1 334 1 336 1 147 1 162 1 97 1 381 1 271 1 164 3 
225 2 171 1 278 2 172 4 343 2 232 1 109 1 351 1 178 1 352 2 291 1 68 1 298 4 186 1 25 1 256 1 193 2 197 1 196 2 123 2 31 1 83 1 205 1 85 1 214 1 42 2 324 4 215 1 268 1 127 4 375 1 376 1 49 1 332 1 334 1 162 1 381 1 271 1 164 2 
74 2 306 1 4 1 192 2 151 8 258 2 200 7 202 2 231 1 203 1 10 2 284 8 320 1 33 1 110 4 36 3 349 1 262 2 260 2 124 1 144 1 14 1 126 1 373 2 157 1 375 1 47 1 376 1 94 1 219 1 218 2 301 2 162 1 364 2 304 1 379 1 131 1 119 2 99 1 
306 1 192 1 318 1 7 1 199 1 154 1 202 1 106 1 203 2 10 3 110 2 262 1 260 1 372 1 144 1 39 1 112 1 375 1 376 1 160 1 302 1 96 1 364 1 162 1 148 1 129 1 131 1 119 1 184 1 
73 1 306 3 4 1 192 1 318 1 230 1 201 1 202 1 203 3 283 2 10 6 110 2 262 1 260 1 39 1 90 1 270 1 244 1 160 2 302 1 364 1 96 2 148 1 129 1 220 1 119 1 
306 8 340 3 226 3 192 2 6 1 318 11 259 1 154 1 202 2 283 1 203 6 106 2 10 14 33 1 110 4 111 1 64 1 262 2 260 1 372 2 263 1 39 2 47 1 160 1 302 11 96 2 364 2 248 1 148 1 129 4 118 1 119 2 184 1 
74 1 306 1 102 1 189 1 192 1 151 1 200 1 154 1 155 1 202 1 283 1 203 1 10 2 284 1 33 1 110 2 36 1 35 1 65 1 260 1 262 1 144 1 14 1 67 1 373 1 355 1 375 2 47 1 376 1 181 1 301 1 218 1 364 1 162 2 129 1 338 1 131 1 119 1 
277 2 104 2 230 1 283 2 106 2 10 20 284 3 285 2 110 6 65 2 14 1 144 1 67 2 293 1 244 1 181 1 301 2 302 7 364 3 148 3 304 1 118 4 119 3 184 2 74 1 306 10 27 1 28 2 257 2 192 3 151 3 318 7 200 3 154 1 201 1 202 3 155 2 203 10 33 1 36 2 262 3 260 3 372 2 373 2 323 1 39 3 90 1 47 1 375 3 270 1 376 1 160 4 218 2 162 3 96 8 129 7 220 1 131 1 338 2 
260 1 262 1 372 1 306 2 39 1 4 1 192 1 194 1 318 1 202 1 302 1 10 2 96 1 364 1 129 1 110 2 118 1 119 1 
260 1 262 1 4 1 192 1 318 1 160 1 92 1 202 1 203 2 302 1 10 2 96 1 364 1 148 1 129 1 110 2 119 1 184 1 
306 2 4 1 192 1 318 2 202 1 106 1 203 2 10 4 110 2 372 1 262 1 260 1 39 1 160 1 302 2 364 1 96 2 148 1 129 2 118 1 119 1 184 1 
260 1 262 1 372 1 306 2 39 1 192 1 194 1 318 1 94 1 202 1 302 1 10 2 96 1 364 1 129 1 110 2 118 1 119 1 
260 1 262 1 192 1 318 1 160 1 92 1 94 1 202 1 203 2 302 1 10 2 96 1 364 1 148 1 129 1 110 2 119 1 184 1 
306 2 192 1 318 2 202 1 106 1 203 2 10 4 110 2 372 1 262 1 260 1 39 1 160 1 94 1 302 2 364 1 96 2 148 1 129 2 118 1 119 1 184 1 
306 2 192 1 318 2 202 1 106 1 203 2 10 4 110 2 372 1 262 1 260 1 39 1 160 1 302 2 364 1 96 2 148 1 129 2 118 1 119 1 184 1 
306 1 74 1 104 1 192 1 151 1 200 1 155 1 202 1 283 1 203 1 10 2 284 1 33 1 110 2 36 1 65 1 260 1 262 1 67 1 373 1 47 1 375 1 301 1 218 1 162 1 364 1 338 1 119 1 
74 1 260 1 262 1 353 1 192 1 151 1 200 1 202 1 283 1 203 1 10 1 284 1 364 1 33 1 110 2 381 1 130 1 119 1 249 1 
306 2 192 1 318 2 154 1 202 1 106 1 203 2 10 4 110 2 372 1 262 1 260 1 39 1 160 1 302 2 364 1 96 2 148 1 129 2 118 1 119 1 184 1 
306 2 28 1 104 1 192 1 151 1 318 2 200 1 155 1 202 1 203 2 106 1 10 4 284 1 110 2 36 1 65 1 372 1 260 1 262 1 67 1 373 1 39 1 375 1 160 1 218 1 301 1 302 2 96 2 162 1 364 1 148 1 129 2 379 1 118 1 338 1 184 1 119 1 
306 2 192 1 318 1 7 1 199 1 154 1 202 1 203 1 106 1 10 3 110 2 262 1 260 1 372 1 144 1 39 1 375 1 376 1 95 1 302 1 96 1 364 1 162 1 148 1 129 1 118 1 131 1 184 1 119 1 
306 9 340 1 224 2 56 1 103 1 3 1 226 2 368 1 312 1 192 2 195 2 6 1 198 1 203 10 106 3 10 19 110 4 64 1 371 1 262 2 372 3 39 3 19 1 160 3 364 2 96 6 148 3 118 3 119 2 184 3 
306 14 340 2 120 1 224 4 56 1 0 2 3 1 368 2 226 2 170 1 312 1 192 3 195 1 198 2 203 12 106 3 10 26 110 6 64 2 177 1 371 1 262 3 372 3 39 3 359 1 160 2 114 1 96 4 364 3 148 2 98 1 118 2 119 3 184 2 
306 20 120 1 340 3 224 4 56 1 0 1 103 1 3 1 226 4 368 1 170 1 312 1 192 3 195 1 6 1 229 1 198 2 201 1 230 1 203 21 106 4 10 41 110 6 177 1 64 3 371 1 262 3 372 4 39 5 359 1 90 1 270 1 244 1 114 1 160 4 364 3 96 8 148 5 98 1 220 1 118 4 119 3 184 4 
306 20 120 1 340 3 224 4 56 1 0 2 103 1 3 1 226 4 368 1 170 1 312 1 192 4 195 1 6 1 229 1 198 2 201 1 230 1 203 18 106 4 10 38 110 8 177 1 64 3 371 1 262 4 372 4 39 5 359 1 90 1 270 1 244 1 114 1 160 4 364 4 96 7 148 4 98 1 220 1 118 3 119 4 184 3 
306 27 120 1 340 4 224 4 56 1 0 1 3 1 226 4 368 1 170 1 312 1 192 2 195 1 6 2 198 1 201 1 230 1 203 25 106 7 10 52 110 4 177 1 64 2 371 1 262 2 372 7 39 8 359 1 90 1 270 1 244 1 114 1 160 7 364 2 96 14 248 2 148 8 98 1 220 1 118 7 119 2 184 7 
222 1 237 1 58 1 188 1 179 1 182 1 138 1 310 1 221 1 322 1 
357 1 137 1 
222 1 179 1 182 1 138 1 310 1 321 1 60 1 348 1 322 1 
222 1 223 1 208 1 178 1 125 1 237 1 58 1 188 1 179 1 324 1 310 1 127 1 91 1 138 1 182 1 21 1 117 2 322 1 
222 1 223 1 208 1 178 1 125 1 237 1 58 1 188 1 179 1 324 1 310 1 127 1 91 1 138 1 182 1 21 1 117 2 322 1 
222 1 223 1 208 1 178 1 125 1 237 1 58 1 188 1 179 1 324 1 310 1 127 1 91 1 138 1 182 1 21 1 117 2 322 1 
369 1 330 1 287 1 
369 1 330 1 287 1 
128 1 12 1 
128 1 12 1 369 1 
261 1 269 1 
222 1 223 1 255 1 341 1 310 1 169 1 137 1 138 1 283 1 322 1 261 1 208 1 144 2 179 1 40 1 324 1 357 1 127 1 269 1 375 2 376 2 182 1 162 2 117 1 131 2 305 1 72 1 
330 1 287 1 
128 1 12 1 369 1 
306 1 192 1 151 2 258 2 154 1 200 2 202 1 203 1 10 2 284 2 320 1 33 1 110 2 36 1 260 1 262 1 209 1 373 1 265 1 296 1 375 2 47 1 376 2 218 1 301 1 162 2 364 1 163 1 380 1 119 1 99 1 
74 1 124 1 187 1 16 1 373 1 151 1 243 1 200 1 231 1 218 1 301 1 284 1 36 1 141 1 
212 1 238 1 373 1 290 1 267 2 78 1 151 1 243 1 200 1 93 1 63 1 218 1 176 1 284 1 304 1 204 1 132 1 141 1 
212 1 373 1 238 1 290 1 267 2 78 1 151 2 243 1 200 2 93 1 63 1 218 1 176 1 284 2 304 1 379 1 204 1 132 1 141 1 
212 1 373 1 290 1 267 2 78 1 151 1 80 1 243 1 200 1 93 1 63 1 218 1 176 1 284 1 304 1 204 1 132 1 
8 1 
178 1 216 1 215 1 18 1 171 1 49 1 31 1 332 1 205 1 271 1 
372 2 178 5 86 1 352 10 26 2 39 2 215 5 191 5 257 1 280 5 332 5 106 2 32 5 148 2 184 2 
178 1 172 1 42 1 324 1 271 1 127 1 
74 2 311 1 171 2 151 4 314 1 31 2 200 4 172 4 281 1 62 2 231 1 284 4 36 1 205 1 124 1 373 1 42 2 324 3 215 2 327 2 294 2 127 3 158 1 49 2 333 1 361 1 332 2 218 1 301 1 
73 1 178 1 332 1 215 1 216 1 271 1 18 1 
274 1 57 1 171 1 280 1 31 1 172 1 205 1 178 2 352 1 42 1 324 1 215 1 127 1 49 1 332 1 336 1 271 1 
136 2 171 4 172 5 280 6 282 1 62 2 106 2 284 3 234 1 178 8 352 12 67 3 145 2 180 2 69 1 294 1 18 1 299 2 301 3 148 2 184 2 74 1 26 2 191 6 257 2 151 3 314 1 317 1 31 4 200 3 81 2 32 6 37 3 36 10 205 4 372 2 86 2 373 3 39 2 42 3 325 2 324 5 216 1 215 8 327 1 127 5 49 4 332 9 161 2 334 2 218 4 379 1 271 2 272 2 
120 1 340 1 26 2 226 1 191 5 170 1 171 2 319 1 172 1 31 2 280 3 62 1 106 2 32 5 140 1 205 2 64 1 177 1 372 2 178 5 86 1 352 6 39 2 42 1 324 1 215 5 294 1 127 1 359 1 49 2 114 1 332 8 148 2 271 2 184 2 
26 2 171 1 370 1 7 1 31 1 205 1 13 1 144 1 86 1 39 2 324 1 292 1 215 2 127 1 375 1 90 1 48 1 49 1 376 1 244 1 332 2 246 1 335 1 162 1 148 1 381 1 220 1 131 1 
74 1 104 1 192 1 151 1 7 2 200 1 155 1 202 1 283 1 203 1 10 1 284 1 33 1 110 2 36 1 65 1 262 1 260 1 144 2 373 1 67 1 375 3 48 1 376 2 363 1 218 1 301 1 364 1 162 3 131 2 338 1 119 1 
178 4 352 4 215 2 191 2 294 1 171 1 49 1 280 2 31 1 332 1 201 1 62 1 32 2 205 1 271 2 
58 1 179 1 22 1 310 1 269 1 
236 1 179 1 310 1 
236 1 179 1 310 1 
236 1 179 1 310 1 
179 1 310 1 133 1 
179 1 310 1 133 1 
179 1 310 1 133 1 
179 1 310 1 
182 1 322 1 
262 1 306 5 39 2 3 1 192 1 90 1 370 1 244 2 160 3 203 5 10 10 364 1 96 5 148 2 110 2 220 2 118 2 119 1 
262 1 372 1 306 2 39 1 3 1 192 1 10 2 364 1 96 1 110 2 118 1 119 1 
262 1 372 1 306 2 39 1 3 1 192 1 160 1 203 2 106 1 10 4 96 2 364 1 148 1 110 2 118 1 184 1 119 1 
262 3 306 1 0 1 103 1 3 1 192 3 244 1 160 1 203 2 10 3 364 3 96 2 34 1 110 6 220 1 118 1 119 3 
306 16 340 3 0 2 103 1 3 1 226 4 192 5 313 1 6 1 201 1 230 1 203 18 106 3 10 34 344 1 34 1 110 10 64 1 262 5 372 3 39 5 90 2 146 1 270 1 244 3 160 7 364 5 96 12 148 5 220 3 118 5 119 5 184 3 273 1 
306 4 340 1 120 1 3 1 226 1 192 1 201 1 230 1 203 4 10 8 110 2 64 1 262 1 39 1 90 1 270 1 244 1 160 2 364 1 96 2 148 1 220 1 119 1 
306 6 120 1 340 1 3 1 226 2 192 2 6 1 201 1 230 1 203 5 106 1 10 11 110 4 64 1 262 2 372 1 39 2 90 1 270 1 160 2 244 1 364 2 96 3 148 1 220 1 118 1 119 2 273 1 
306 9 340 1 120 1 0 1 3 1 226 1 170 1 192 3 201 1 230 1 203 10 106 2 10 19 110 6 64 1 177 1 262 3 372 2 39 3 359 1 90 1 270 1 244 1 114 1 160 3 364 3 96 4 148 3 220 1 118 1 119 3 184 2 273 1 
306 10 340 1 120 1 0 1 3 1 226 1 170 1 192 3 201 1 230 1 203 7 106 2 10 17 110 6 64 1 177 1 262 3 372 2 39 3 359 1 90 1 270 1 244 1 114 1 160 3 364 3 96 5 148 2 220 1 118 2 119 3 184 1 273 1 
306 4 340 1 120 1 3 1 226 1 192 1 201 1 230 1 203 4 10 8 110 2 64 1 262 1 39 1 90 1 270 1 244 1 160 2 364 1 96 2 148 1 220 1 119 1 
306 6 340 1 120 1 3 1 226 1 170 1 192 1 203 6 106 2 10 12 110 2 64 1 177 1 262 1 372 2 39 2 359 1 114 1 160 1 364 1 96 2 148 2 118 1 119 1 184 2 
306 10 120 1 340 1 0 2 3 1 226 1 170 1 192 4 201 1 230 1 203 8 106 2 10 18 110 8 64 1 177 1 262 4 372 2 39 3 359 1 90 1 270 1 244 1 114 1 160 3 364 4 96 5 148 2 220 1 118 2 119 4 184 1 273 1 
306 9 120 1 340 1 0 2 3 1 103 1 226 1 170 1 192 4 203 7 106 3 10 16 110 8 64 1 177 1 262 4 372 3 39 3 359 1 114 1 160 3 364 4 96 6 148 2 118 3 119 4 184 2 
306 3 39 1 90 1 270 1 244 3 160 3 230 2 203 4 10 7 96 6 148 1 220 3 118 3 
306 10 120 1 340 1 0 2 3 1 103 1 226 1 170 1 192 4 201 1 230 1 203 8 106 2 10 18 110 8 64 1 177 1 262 4 372 2 39 3 359 1 90 1 270 1 244 1 114 1 160 3 364 4 96 4 148 2 220 1 118 1 119 4 184 1 
306 4 262 2 0 1 39 1 192 2 90 1 270 1 160 2 244 1 201 1 230 1 203 4 10 8 96 3 364 2 148 1 110 4 118 1 220 1 119 2 
73 1 306 3 39 1 90 1 270 1 244 1 160 2 201 1 230 1 203 3 10 6 96 2 148 1 220 1 
262 1 372 1 306 2 39 1 192 1 160 1 203 2 106 1 10 4 96 2 364 1 148 1 110 2 118 1 184 1 119 1 273 1 
306 3 372 1 340 1 39 1 226 2 6 1 160 1 203 4 106 1 10 7 96 2 148 1 118 1 184 1 64 1 
306 11 340 2 0 2 226 2 192 2 6 1 201 1 230 1 106 2 203 12 10 23 110 4 34 1 111 1 372 2 262 2 39 3 90 1 270 1 244 2 160 5 96 9 364 2 148 3 248 1 220 2 118 4 184 2 119 2 
203 1 10 1 226 1 
306 1 340 1 10 1 
262 1 372 1 306 3 39 1 257 1 192 1 160 2 203 3 106 1 10 6 364 1 96 3 148 1 110 2 118 1 119 1 184 1 273 1 
306 6 340 1 120 1 3 1 226 1 170 1 192 1 203 6 106 2 10 12 110 2 64 1 177 1 262 1 372 2 39 2 359 1 114 1 160 1 364 1 96 2 148 2 118 1 119 1 184 2 
306 3 39 1 90 1 244 1 160 1 203 3 10 6 96 2 148 1 220 1 118 1 
306 1 262 1 0 1 192 1 270 1 160 1 244 1 230 1 203 2 10 3 96 2 364 1 34 1 110 2 118 1 220 1 119 1 
376 1 350 1 85 1 283 1 116 1 162 1 375 1 
350 1 121 1 85 1 59 1 375 1 228 1 376 1 331 1 283 1 116 1 162 1 149 1 
74 1 124 1 373 1 168 1 151 4 200 4 231 1 218 1 301 1 107 1 284 4 379 1 36 1 
185 1 307 1 67 1 373 1 27 1 122 1 240 1 151 1 200 1 301 1 218 2 284 1 36 1 
74 1 200 1 373 1 63 1 218 1 176 1 284 1 267 1 78 1 151 1 
200 2 373 1 218 1 301 1 265 1 284 2 320 1 304 1 379 1 36 1 151 2 
74 1 124 1 126 1 373 2 168 1 157 1 327 1 151 5 200 4 231 1 301 2 218 2 284 5 320 1 379 1 36 3 
74 1 124 1 308 1 126 1 373 2 168 1 327 1 151 5 200 4 231 1 301 2 218 2 284 5 320 1 379 1 36 3 
73 1 74 1 124 1 200 1 373 1 231 1 218 1 301 1 284 1 36 1 151 1 
74 1 14 1 144 1 67 1 373 1 375 2 151 1 376 1 200 1 283 1 301 1 218 1 162 2 284 1 36 1 131 1 338 1 65 1 
25 1 136 1 151 1 200 1 283 1 284 1 83 1 36 3 65 1 144 2 14 1 373 1 67 2 180 1 327 1 375 2 376 2 218 1 301 2 162 2 381 1 338 1 131 1 
25 1 136 1 151 2 200 2 283 1 107 1 284 2 83 1 36 3 65 1 144 2 14 1 373 1 67 2 180 1 44 1 327 1 375 2 376 2 218 1 301 2 162 2 381 1 131 1 
74 1 135 1 136 1 151 3 172 1 200 3 107 1 284 3 36 4 37 1 235 1 178 1 373 1 67 1 324 2 180 1 327 1 127 2 299 1 334 1 218 1 301 1 271 1 
74 1 178 1 67 1 373 1 136 1 180 1 324 2 325 1 327 1 127 2 151 3 200 3 172 1 299 1 334 1 301 1 218 1 107 1 284 3 271 1 37 1 36 4 
200 1 373 1 218 1 284 1 151 1 349 1 
74 1 75 1 307 1 67 1 373 1 122 1 151 1 200 1 301 1 218 2 284 1 234 1 36 1 
306 3 28 1 192 2 104 1 151 1 318 1 154 1 200 1 201 1 230 1 202 2 155 1 283 2 203 3 10 6 284 1 285 1 110 4 36 1 65 1 260 2 262 2 209 1 144 1 14 1 67 1 373 1 39 1 90 1 375 2 270 1 376 1 160 2 244 1 301 1 218 1 302 1 96 2 364 2 162 2 148 1 129 1 379 1 220 1 131 1 338 1 119 2 
74 1 151 1 171 2 314 1 200 1 31 2 172 2 81 1 284 1 205 2 37 1 36 2 178 1 42 1 324 3 325 1 215 1 216 1 18 1 127 3 49 2 332 1 161 1 299 1 334 1 271 1 305 1 272 1 
317 1 200 2 299 1 373 1 67 1 218 2 301 1 284 2 379 1 36 2 234 1 151 2 349 1 
74 1 14 1 144 1 67 1 373 1 44 1 375 2 151 1 376 1 200 1 283 1 301 1 218 1 162 2 284 1 36 1 131 1 65 1 
75 1 307 1 67 1 373 1 327 1 122 1 151 1 200 1 301 1 218 2 284 1 234 1 36 1 
153 1 66 1 24 1 283 1 52 1 
178 1 24 1 66 2 25 1 324 2 17 1 127 2 197 1 79 1 153 2 300 1 334 1 283 1 52 2 83 1 381 1 271 1 305 1 165 1 
153 1 376 1 24 1 52 1 162 1 163 1 380 1 296 1 375 1 
79 1 24 1 17 1 
242 1 377 1 77 1 354 1 239 1 326 1 227 1 358 1 
142 1 77 2 354 1 239 2 227 1 326 3 358 4 242 4 174 1 245 1 173 1 337 1 339 2 207 1 
77 1 354 1 5 1 239 1 326 1 227 1 358 2 377 1 242 2 217 1 20 1 339 1 
142 2 77 1 354 1 2 1 239 1 326 1 227 1 358 3 377 1 242 3 174 2 207 1 
84 2 167 1 55 1 326 2 
242 1 377 1 211 1 354 1 227 1 358 1 
242 2 377 1 253 1 77 1 354 1 239 1 326 1 227 1 339 1 358 2 
289 1 
242 1 377 1 77 1 354 1 239 1 326 1 227 1 358 1 
73 1 77 1 239 1 326 1 
242 1 77 1 354 1 239 1 326 1 227 1 358 1 
242 1 275 1 345 1 
142 1 77 1 354 1 239 1 326 1 227 1 358 3 377 1 242 3 174 2 382 1 207 1 
242 2 77 1 354 1 239 1 326 1 227 1 30 1 339 1 358 2 
354 1 227 1 326 1 267 1 358 1 377 1 242 1 362 1 173 1 63 1 132 1 
242 1 377 1 77 1 354 1 326 1 227 1 358 1 
242 1 377 1 77 2 354 1 239 1 227 1 358 1 
77 1 264 1 354 2 326 1 227 2 358 2 328 1 315 1 377 1 242 2 
253 1 77 1 354 1 239 1 227 1 374 1 326 2 358 3 377 1 242 3 245 1 173 1 339 2 
77 1 212 1 354 1 213 1 239 1 326 1 267 2 227 1 78 1 358 2 377 1 242 2 63 1 132 1 339 1 
77 1 354 2 239 1 227 2 326 2 30 1 358 4 377 1 242 4 245 1 173 1 339 2 366 1 
253 1 77 1 354 1 239 1 227 1 326 1 358 3 377 1 242 3 174 1 339 1 
173 1 245 1 337 1 326 1 
77 1 326 1 

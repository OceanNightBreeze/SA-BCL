#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate; | STATEMENT | 3677 | stmt -> ;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | CONDITION | 3650 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 3 85 1 29 1 3 2 159 1 286 2 229 1 317 1 318 1 195 3 123 1 14 2 149 1 
351 9 27 1 29 1 3 2 274 1 278 1 195 9 13 2 123 6 14 5 149 4 282 1 198 1 153 1 85 1 204 1 159 1 261 1 262 1 286 2 229 3 45 2 317 2 318 1 183 2 208 1 71 1 349 2 
351 9 27 1 29 1 3 2 274 1 278 1 195 9 13 2 123 6 14 5 149 4 282 1 198 1 153 1 85 1 204 1 159 1 261 1 262 1 286 2 229 3 45 2 317 2 318 1 183 2 208 1 71 1 349 2 
351 10 27 1 29 1 3 2 274 1 278 1 195 10 13 2 123 7 14 6 149 5 282 1 198 1 153 1 85 1 204 1 159 1 261 1 262 1 286 2 229 4 45 2 317 2 318 1 183 2 208 1 71 1 349 2 
351 7 27 1 29 1 3 2 274 1 195 7 13 2 123 4 14 4 149 3 282 1 198 1 153 1 85 1 204 1 159 1 261 1 262 1 286 2 229 2 45 2 317 2 318 1 183 2 208 1 71 1 349 1 
351 4 85 1 29 1 3 1 274 1 286 1 229 1 45 1 278 1 318 1 13 1 195 4 123 3 183 1 208 1 14 3 149 2 349 2 
351 2 27 1 85 1 29 1 3 1 286 1 33 1 317 1 318 1 195 2 13 1 183 1 14 1 348 1 282 1 258 1 
351 9 29 1 3 2 274 1 278 1 123 7 195 9 13 1 106 1 14 5 149 4 153 1 85 1 159 1 286 2 229 3 45 1 317 1 318 1 183 1 208 1 71 1 349 2 322 1 
351 9 29 1 3 2 274 1 278 1 123 7 195 9 13 1 106 1 14 5 149 4 153 1 85 1 159 1 286 2 229 3 45 1 317 1 318 1 183 1 208 1 71 1 349 2 322 1 
57 1 357 1 252 1 334 1 266 1 230 1 284 1 86 1 327 1 143 1 285 1 329 1 26 1 338 1 
344 1 
57 1 194 1 225 1 284 2 86 2 184 1 344 1 43 1 
169 1 202 2 225 2 86 5 284 5 315 1 43 1 78 2 299 1 57 2 194 1 246 1 37 1 341 1 344 1 380 1 307 1 25 2 138 1 
330 1 194 1 344 1 
344 1 73 2 74 1 
357 2 252 2 334 2 266 2 230 1 327 2 285 2 324 1 
118 2 189 1 233 1 327 2 190 1 298 1 80 1 236 1 176 1 357 3 252 2 12 1 280 1 222 1 223 2 281 1 197 2 109 1 17 2 18 2 334 2 20 1 365 1 336 1 285 2 88 1 266 3 230 1 231 1 209 1 117 1 291 1 211 1 381 1 324 1 293 1 165 1 
357 1 252 1 334 1 266 1 230 1 327 1 143 1 285 1 329 1 26 1 
283 1 86 1 284 1 143 1 175 1 112 1 194 1 252 1 357 1 303 1 319 1 266 1 305 1 344 1 
334 1 284 2 86 2 327 1 143 1 285 1 175 1 112 1 194 1 252 1 357 1 303 1 266 1 305 1 344 1 
57 1 225 1 65 1 284 1 86 1 
57 1 194 1 225 1 28 1 284 2 86 2 344 1 43 1 
225 1 284 1 86 1 
334 1 327 1 285 1 252 2 357 2 374 1 266 2 323 1 324 2 
98 1 125 1 56 1 
118 1 18 1 20 1 328 1 336 1 298 1 80 1 176 1 357 1 12 1 266 1 231 1 223 1 281 1 381 1 324 1 
118 1 18 1 20 1 327 1 298 1 336 1 285 1 56 1 80 1 176 1 264 1 252 1 357 2 12 1 93 1 266 2 231 1 223 1 281 1 381 1 
330 1 324 1 
334 1 327 4 285 4 134 1 339 1 264 2 252 5 357 5 374 1 319 1 279 1 266 5 93 1 324 1 
357 2 252 2 266 2 343 1 327 2 143 1 285 2 329 1 
264 1 357 3 252 3 334 1 266 3 327 3 285 3 324 1 
357 1 252 1 266 1 327 1 143 1 285 1 329 1 
357 1 252 1 334 1 374 1 266 1 327 1 143 1 285 1 323 1 
118 1 189 1 353 1 327 3 190 1 298 1 143 1 175 1 80 1 176 1 357 4 252 3 12 1 303 1 280 1 305 1 222 1 223 1 281 1 197 2 109 1 17 1 18 1 334 2 20 1 86 1 284 1 365 1 336 1 285 3 88 1 264 1 112 1 374 1 266 4 93 1 230 1 231 1 186 1 291 1 211 1 381 1 324 1 293 1 
264 1 357 2 252 2 319 1 266 2 327 1 285 1 339 1 324 1 
334 1 353 1 284 1 86 1 327 3 143 1 285 3 175 1 264 2 112 1 252 3 357 3 374 1 303 1 305 1 93 1 266 3 344 1 290 1 
334 1 98 1 327 2 285 2 56 1 264 1 252 2 357 2 374 1 266 2 
118 1 18 1 20 1 336 1 298 1 80 1 176 1 357 1 12 1 266 1 231 1 223 1 281 1 381 1 324 1 
118 1 18 1 155 1 20 1 336 1 298 1 80 1 176 1 357 1 253 1 12 1 266 1 223 1 381 1 324 1 
189 1 5 1 141 1 98 2 144 1 56 2 79 1 236 2 122 1 280 1 148 1 125 2 333 1 197 2 109 1 17 4 365 1 313 1 88 1 46 1 378 1 347 1 291 2 293 1 
357 1 252 1 266 1 327 1 343 1 143 1 175 1 285 1 
193 1 213 1 133 1 
193 2 69 1 213 2 235 1 111 1 269 1 
193 1 213 1 
193 1 213 1 
235 1 111 1 
235 1 111 1 
235 1 111 1 
193 1 139 1 213 1 
193 1 139 1 213 1 
193 1 139 1 213 1 
193 1 213 1 335 1 
193 1 213 1 335 1 
193 1 213 1 335 1 
151 1 167 1 154 1 213 1 157 1 86 1 284 1 327 2 133 1 285 2 193 1 357 2 252 2 105 1 11 1 90 1 217 1 60 1 266 2 221 1 239 1 150 1 163 1 324 1 
75 1 167 2 151 1 154 2 310 1 213 2 157 2 86 2 284 2 142 2 181 1 193 2 11 3 69 1 321 1 94 1 344 1 306 1 239 2 
45 1 13 2 273 1 42 2 33 1 
45 1 13 1 183 1 
13 1 183 1 33 1 
45 2 13 3 273 1 377 1 42 1 33 1 
45 1 13 2 214 1 273 1 42 1 33 1 
55 2 100 2 144 1 78 1 299 2 81 1 300 1 57 4 194 1 105 1 148 1 124 1 308 1 307 1 202 1 225 1 284 5 86 5 313 1 244 1 43 1 44 2 182 1 90 1 135 1 46 1 73 3 344 2 74 1 25 1 163 1 138 3 
54 1 55 6 7 1 100 6 144 3 78 2 299 6 57 7 58 1 194 1 105 4 220 1 148 3 124 3 307 1 202 2 225 6 65 5 364 1 284 9 86 9 313 3 244 2 43 1 370 1 182 1 341 1 135 2 46 3 73 9 49 5 344 5 74 3 25 2 138 8 
55 2 100 2 144 1 78 1 300 1 81 1 299 2 57 2 194 1 105 1 148 1 124 1 202 1 284 3 86 3 313 1 244 1 44 1 341 1 135 1 46 1 344 3 73 4 74 2 25 1 138 3 
54 1 55 4 100 4 144 2 78 1 300 1 81 1 299 4 57 3 58 1 194 1 105 2 220 1 148 2 124 2 202 1 284 4 86 4 313 2 244 1 44 2 341 1 135 1 46 2 344 4 73 7 74 3 25 1 138 5 
156 1 
330 1 20 1 192 1 
20 1 366 1 
12 1 20 1 381 1 
20 1 234 1 
12 1 20 1 
12 1 207 1 20 3 47 1 192 2 381 1 
270 1 128 1 5 2 259 2 173 1 313 1 216 1 263 1 236 4 373 1 375 1 148 1 345 1 333 3 291 3 50 1 17 7 166 1 
168 1 270 2 4 1 5 5 6 1 173 1 144 3 216 5 276 1 236 16 280 1 196 4 124 3 148 4 333 10 197 2 109 1 17 31 309 3 63 1 259 3 313 4 88 1 263 2 22 1 373 2 375 2 46 3 48 1 345 1 291 15 50 1 166 1 293 1 
270 1 5 3 250 1 259 2 173 1 313 1 216 1 88 2 263 1 236 5 373 1 288 1 375 1 48 1 280 2 148 1 333 4 291 4 50 1 109 2 197 4 166 1 17 9 293 2 
270 1 5 2 259 2 173 1 313 1 216 1 263 1 236 4 373 1 375 1 148 1 345 1 333 3 291 3 50 1 17 7 166 1 
270 1 5 2 259 2 173 1 313 1 216 1 263 1 236 4 373 1 375 1 148 1 345 1 333 3 291 3 50 1 17 7 166 1 
351 1 118 1 18 1 110 1 1 1 3 1 20 1 336 1 286 1 9 1 80 1 176 1 372 2 317 2 12 1 254 2 195 1 178 2 223 1 107 1 240 1 127 1 294 1 
118 1 351 1 3 1 32 1 33 1 80 1 176 1 254 1 195 1 13 2 178 1 223 1 62 1 361 1 18 1 85 1 131 1 286 1 45 1 372 1 317 1 91 1 92 1 183 1 114 1 377 1 
118 1 351 2 29 1 3 1 32 1 33 1 80 1 176 1 254 1 123 1 195 2 13 2 178 1 14 1 223 1 62 1 361 1 18 1 85 1 131 1 21 1 286 1 45 1 372 1 317 1 318 1 91 1 183 1 114 1 377 1 
118 1 351 3 29 1 3 1 32 1 33 1 80 1 176 1 254 1 195 3 123 2 13 2 178 1 14 1 223 1 240 1 62 1 361 1 18 1 130 1 131 1 286 1 45 1 372 1 317 1 318 1 92 1 183 1 114 1 377 1 
118 1 351 2 29 1 32 1 33 1 80 1 176 1 254 1 195 2 123 2 13 2 178 1 14 1 223 1 18 1 130 1 131 1 372 1 45 1 317 1 318 1 92 1 114 1 183 1 377 1 
30 1 
143 1 102 1 237 1 194 1 12 1 107 1 18 2 201 1 283 1 202 1 284 5 20 1 336 2 287 1 113 2 112 1 161 1 23 2 247 1 344 2 73 2 74 2 25 1 294 1 118 2 76 1 175 1 78 1 80 1 35 1 299 2 176 1 356 2 252 1 357 1 303 1 305 1 255 1 223 2 307 1 362 1 129 2 40 2 225 6 86 5 87 2 43 3 316 1 135 1 319 1 266 1 95 2 379 1 138 2 137 4 
76 1 143 1 175 1 35 1 357 1 252 1 303 1 305 1 362 1 283 1 225 2 284 3 86 3 87 1 43 1 287 1 112 1 316 1 319 1 266 1 184 1 137 2 
76 1 143 1 175 1 35 1 357 1 252 1 194 1 303 1 305 1 362 1 283 1 225 1 284 3 86 3 43 1 287 1 112 1 113 1 316 1 319 1 266 1 184 1 344 1 137 3 
76 1 143 1 175 1 35 1 356 1 357 1 252 1 194 1 303 1 305 1 362 1 283 1 225 2 284 3 86 3 87 1 43 1 287 1 112 1 113 1 316 1 319 1 266 1 184 1 344 1 137 3 
99 1 143 1 102 1 194 5 283 1 202 1 284 5 337 1 287 1 112 1 113 4 23 2 344 5 74 2 25 1 76 1 175 1 78 1 35 1 299 1 356 4 355 1 357 1 252 1 303 1 304 1 305 1 256 1 307 1 362 1 129 2 225 7 40 2 86 5 87 4 43 3 316 1 319 1 266 1 184 1 95 2 379 1 137 6 138 1 
143 1 102 1 237 1 194 1 283 1 202 1 284 4 287 1 112 1 113 2 23 2 73 2 344 2 74 2 25 1 76 1 175 1 78 1 35 1 299 1 356 2 357 1 252 1 303 1 305 1 307 1 362 1 129 2 40 2 225 4 86 4 87 2 43 2 316 1 319 1 266 1 95 2 379 1 137 4 138 1 
76 1 143 1 175 1 102 1 78 1 35 1 299 1 356 2 355 1 194 1 357 1 252 1 303 1 304 1 305 1 256 1 307 1 362 1 283 1 202 1 129 2 225 4 40 2 284 4 86 4 87 2 43 2 287 1 113 2 112 1 316 1 23 2 319 1 266 1 95 2 344 1 74 2 379 1 25 1 138 1 137 4 
76 1 143 1 175 1 102 1 78 1 35 1 299 1 356 2 355 1 194 1 357 1 252 1 303 1 304 1 305 1 256 1 307 1 362 1 283 1 202 1 129 2 225 4 40 2 284 4 86 4 87 2 43 2 287 1 113 2 112 1 316 1 23 2 319 1 266 1 95 2 344 1 74 2 379 1 25 1 138 1 137 4 
76 1 77 2 143 1 175 1 78 1 35 1 299 1 356 2 194 1 357 1 252 1 303 1 304 1 219 1 305 1 307 1 362 1 283 1 202 1 129 2 225 4 180 2 284 4 86 4 87 2 43 2 287 1 113 2 112 1 316 1 319 1 266 1 95 2 72 1 344 1 73 2 379 1 25 1 138 1 164 1 137 4 
76 1 99 1 143 1 175 1 102 1 78 1 35 1 299 1 356 3 355 1 194 1 357 1 252 1 303 1 304 1 305 1 307 1 256 1 362 1 283 1 202 1 129 2 40 2 225 5 284 4 86 4 87 3 43 2 287 1 112 1 113 3 316 1 23 2 319 1 266 1 95 2 344 1 74 2 379 1 25 1 138 1 137 5 
76 1 99 1 143 1 175 1 102 1 78 1 35 1 299 1 356 3 355 1 194 1 357 1 252 1 303 1 304 1 305 1 307 1 256 1 362 1 283 1 202 1 129 2 40 2 225 5 284 4 86 4 87 3 43 2 287 1 112 1 113 3 316 1 23 2 319 1 266 1 95 2 344 1 74 2 379 1 25 1 138 1 137 5 
143 1 237 1 194 1 283 1 202 1 284 4 287 1 112 1 113 2 73 2 344 1 25 1 164 1 76 1 77 2 175 1 78 1 35 1 299 1 356 2 357 1 252 1 303 1 305 1 307 1 362 1 129 2 225 4 180 2 86 4 87 2 43 2 316 1 319 1 266 1 95 2 379 1 137 4 138 1 
118 8 51 1 189 2 120 1 327 1 190 1 80 2 176 2 10 1 236 1 357 1 252 1 36 1 12 2 59 1 280 2 223 7 107 1 197 4 109 2 17 2 18 8 20 3 226 1 21 1 365 2 336 2 285 1 88 2 264 1 92 1 266 1 346 1 209 2 347 1 117 1 291 1 293 2 294 1 
189 1 5 1 98 1 327 1 144 1 56 1 236 1 252 1 357 1 280 1 125 1 124 1 148 1 333 1 197 2 109 1 17 3 334 1 242 1 365 1 313 1 285 1 88 1 340 1 374 1 46 1 266 1 291 2 293 1 
270 1 189 1 5 2 98 1 173 1 56 1 236 3 330 1 280 1 148 1 125 1 333 2 197 2 109 1 17 6 259 1 365 1 313 1 88 1 263 1 347 1 291 3 50 1 166 1 293 1 324 2 
168 1 189 1 5 1 98 4 190 1 144 2 216 1 56 11 236 8 302 1 280 2 196 3 125 11 124 2 148 1 333 2 197 4 109 2 17 14 309 3 365 2 313 2 88 2 340 1 22 1 67 1 206 1 46 1 117 1 291 6 188 1 324 1 293 2 
118 1 189 1 98 1 327 1 328 1 190 1 298 1 80 1 176 1 236 1 357 2 252 1 332 1 12 1 280 1 223 1 281 1 109 1 197 2 17 2 18 1 158 1 20 1 365 1 336 1 285 1 340 1 88 1 264 1 266 2 93 1 231 1 267 1 117 1 291 1 381 1 324 1 293 1 
270 1 189 2 52 1 5 4 98 6 327 1 190 1 143 1 144 2 56 6 236 10 146 1 12 1 280 2 148 4 108 1 333 5 281 1 197 4 109 2 17 21 18 1 241 1 20 1 336 1 66 2 285 1 340 1 24 1 291 11 350 1 166 1 293 2 118 1 173 1 121 2 298 1 216 1 80 1 176 1 252 1 357 2 222 1 223 1 125 6 124 2 365 2 313 4 88 2 263 1 264 1 46 2 93 1 266 2 231 1 50 1 381 1 324 1 
189 1 141 1 98 1 365 1 313 1 144 1 216 1 56 1 88 1 236 2 280 1 125 1 347 1 333 1 109 1 197 2 17 2 293 1 
189 1 5 1 98 1 365 1 56 1 79 1 88 1 46 1 280 1 125 1 148 1 347 1 333 1 291 2 109 1 197 2 17 2 293 1 
189 1 5 1 98 2 365 1 313 1 144 1 216 1 56 2 88 1 236 2 46 1 280 1 148 1 125 2 124 1 347 1 333 2 291 2 109 1 197 2 17 4 293 1 
189 1 141 1 98 1 365 1 313 1 144 1 216 1 56 1 88 1 236 2 280 1 125 1 346 1 333 1 109 1 197 2 17 2 293 1 
189 1 5 1 98 1 365 1 56 1 79 1 88 1 46 1 280 1 125 1 346 1 148 1 333 1 291 2 109 1 197 2 17 2 293 1 
189 1 5 1 98 2 365 1 313 1 144 1 216 1 56 2 88 1 236 2 46 1 280 1 148 1 125 2 346 1 124 1 333 2 291 2 109 1 197 2 17 4 293 1 
189 1 5 1 98 2 365 1 313 1 144 1 216 1 56 2 88 1 236 2 46 1 280 1 148 1 125 2 124 1 333 2 291 2 109 1 197 2 293 1 17 4 
118 1 189 1 190 1 298 1 80 1 236 1 176 1 357 1 12 1 280 1 222 1 223 1 281 1 109 1 197 2 17 2 18 1 20 1 365 1 336 1 88 1 266 1 231 1 117 1 291 1 381 1 324 1 293 1 
118 1 189 1 190 1 298 1 80 1 236 1 176 1 357 1 253 1 12 1 280 1 223 1 109 1 197 2 17 2 18 1 155 1 20 1 365 1 336 1 314 1 88 1 266 1 117 1 291 1 381 1 324 1 293 1 
189 1 5 1 98 2 365 1 313 1 144 1 216 1 56 2 340 1 88 1 236 2 46 1 280 1 148 1 125 2 124 1 333 2 291 2 109 1 197 2 17 4 293 1 
118 1 189 1 5 1 98 2 298 1 144 1 216 1 56 2 80 1 236 2 176 1 357 1 12 1 280 1 222 1 148 1 125 2 223 1 124 1 333 2 281 1 109 1 197 2 17 4 18 1 20 1 21 1 365 1 313 1 88 1 46 1 266 1 231 1 291 2 381 1 350 1 293 1 
189 1 98 1 327 1 144 1 216 1 56 1 236 2 252 1 357 1 280 1 148 1 124 1 125 1 333 1 197 2 109 1 17 3 334 1 365 1 313 1 285 1 88 1 340 1 374 1 46 1 266 1 185 1 291 1 293 1 
168 1 170 1 326 1 5 3 53 2 250 1 297 1 251 1 144 3 216 3 236 9 280 2 196 2 124 3 148 3 84 1 333 6 197 4 109 2 17 19 309 1 64 2 313 3 88 2 22 1 46 3 96 1 162 1 291 10 293 2 
170 2 295 1 5 2 53 4 250 1 172 1 297 1 251 2 144 3 216 2 34 1 236 14 280 3 196 2 148 2 124 3 84 1 333 4 197 6 109 3 17 26 200 1 309 2 64 1 312 1 313 3 88 3 22 2 46 2 70 1 48 2 96 1 291 12 293 3 
270 1 5 4 53 4 144 4 236 20 280 3 196 4 148 5 333 8 109 3 197 6 17 41 200 1 64 1 22 3 68 1 70 1 162 1 291 21 293 3 166 1 168 1 170 2 295 1 250 1 172 1 297 1 173 1 251 1 216 4 34 1 124 4 84 1 309 3 259 1 312 1 313 5 88 3 263 1 46 4 48 1 96 1 50 1 
168 1 295 1 170 2 270 1 5 4 53 4 250 1 172 1 173 1 297 1 251 1 144 4 216 3 34 1 236 20 280 4 196 4 124 4 148 4 84 1 333 7 197 8 109 4 17 38 200 1 309 3 64 1 259 1 312 1 313 5 88 4 263 1 22 3 68 1 46 3 70 1 48 2 96 1 162 1 291 18 50 1 166 1 293 4 
168 2 295 1 170 1 270 1 5 7 53 4 250 1 172 1 173 1 297 1 251 1 144 7 216 7 34 1 236 27 302 2 280 2 196 4 124 7 148 8 84 1 333 14 197 4 109 2 17 52 200 1 309 4 64 1 259 1 312 1 313 8 88 2 263 1 22 2 46 7 70 1 48 1 96 1 291 25 50 1 166 1 293 2 
167 1 193 1 154 1 2 1 310 1 69 1 157 1 213 1 239 1 181 1 
221 1 133 1 
167 1 193 1 154 1 157 1 213 1 147 1 215 1 239 1 210 1 
139 1 228 1 
352 1 335 1 269 1 
75 1 151 1 167 1 154 1 310 1 213 1 157 1 86 1 284 1 142 1 181 1 193 1 11 2 69 1 321 1 94 1 344 1 239 1 
75 1 151 1 167 1 154 1 310 1 213 1 157 1 86 1 284 1 142 1 181 1 193 1 11 2 69 1 321 1 94 1 344 1 239 1 
75 1 151 1 167 1 154 1 310 1 213 1 157 1 86 1 284 1 142 1 181 1 193 1 11 2 69 1 321 1 94 1 344 1 239 1 
139 1 228 1 269 1 
139 1 228 1 269 1 
352 1 335 1 
352 1 335 1 269 1 
60 1 150 1 
167 1 213 1 327 2 142 1 57 1 193 1 357 2 252 2 11 1 105 1 217 1 60 1 221 1 239 1 150 1 154 1 157 1 284 1 86 1 367 1 133 1 285 2 90 1 266 2 321 1 163 1 324 1 
118 2 232 1 51 1 189 1 271 1 190 1 80 1 176 1 10 1 236 1 357 2 252 2 83 1 12 1 280 1 223 2 109 1 197 2 17 2 18 2 20 1 365 1 340 1 88 1 371 1 248 1 266 2 209 2 117 1 291 1 293 1 
118 1 18 1 110 1 20 1 336 1 101 1 80 1 176 1 104 1 12 1 178 1 223 1 107 1 294 1 
118 1 18 1 131 1 33 1 80 1 104 1 176 1 45 1 13 2 92 1 183 1 320 1 114 1 377 1 178 1 223 1 116 1 62 1 
118 2 18 2 131 1 21 1 33 1 80 1 176 1 104 1 45 1 13 2 92 1 183 1 320 1 114 1 377 1 178 1 223 2 116 1 62 1 
118 1 18 1 249 1 131 1 33 1 80 1 176 1 45 1 13 2 92 1 183 1 114 1 377 1 178 1 223 1 116 1 62 1 
187 1 
194 1 202 1 246 1 344 1 380 1 78 1 25 1 307 1 138 1 299 1 
55 5 66 1 313 2 100 5 144 2 299 5 358 1 46 2 124 2 73 10 344 5 148 2 74 5 360 2 138 5 
194 1 225 1 284 1 86 1 344 1 43 1 
118 4 140 2 354 1 78 2 80 1 176 1 299 2 12 1 255 1 223 4 107 1 307 1 18 4 201 2 202 2 39 1 225 4 20 1 86 3 284 3 336 2 43 2 161 1 205 1 341 1 135 2 25 2 138 2 294 1 
330 1 194 1 246 1 344 1 380 1 138 1 299 1 
202 1 225 1 40 1 284 1 86 1 102 1 43 1 78 1 299 1 194 1 23 1 344 2 73 1 74 1 307 1 25 1 138 1 
140 1 55 6 275 1 100 6 192 2 234 2 144 2 8 2 194 2 12 3 61 2 148 2 15 2 16 1 18 3 201 1 202 4 20 10 284 5 21 1 336 1 66 2 205 1 246 1 73 12 344 8 74 6 25 4 292 1 118 3 78 4 80 4 176 3 299 8 218 2 358 2 305 2 223 3 124 2 360 2 307 4 179 2 225 5 86 5 366 3 313 2 227 2 43 3 135 2 46 2 47 1 380 1 381 3 138 9 
295 1 172 1 272 1 55 5 100 5 144 2 78 2 34 1 299 5 194 2 358 1 196 1 124 2 148 2 360 2 307 2 309 1 201 1 202 2 225 1 284 1 86 1 312 1 313 2 43 1 22 1 265 1 135 1 46 2 70 1 73 6 344 5 74 3 25 2 138 8 
270 1 173 1 327 1 143 1 329 1 78 1 299 2 357 1 252 1 358 1 148 1 360 2 108 1 307 1 256 1 202 1 334 1 284 1 86 1 313 2 285 1 338 1 263 1 266 1 230 1 25 1 26 1 138 2 
118 1 189 1 327 2 190 1 298 1 80 1 176 1 357 3 252 2 12 1 280 1 222 1 223 1 281 1 197 2 109 1 17 1 18 1 334 2 20 1 365 1 336 1 285 2 88 1 266 3 230 1 231 1 291 1 211 1 381 1 324 1 293 1 
201 1 202 1 259 1 55 2 100 2 78 1 299 2 194 2 135 1 73 4 344 4 74 2 307 1 25 1 138 1 
167 1 310 1 157 1 60 1 126 1 
167 1 245 1 157 1 
167 1 245 1 157 1 
167 1 245 1 157 1 
167 1 157 1 212 1 
167 1 157 1 212 1 
167 1 157 1 212 1 
167 1 157 1 
193 1 213 1 
270 2 5 3 250 1 173 1 313 2 216 2 88 1 263 2 236 5 280 1 148 2 108 1 333 5 291 5 197 2 109 1 293 1 17 10 
250 1 313 1 144 1 216 1 88 1 236 2 280 1 333 1 109 1 197 2 293 1 17 2 
5 1 250 1 313 1 144 1 216 1 88 1 236 2 46 1 280 1 148 1 124 1 333 2 291 2 109 1 197 2 293 1 17 4 
270 1 203 1 5 1 250 1 216 1 88 3 263 1 236 1 48 1 280 3 162 1 333 2 291 2 109 3 197 6 17 3 293 3 
168 1 270 3 4 1 5 7 250 1 6 1 173 2 144 3 216 5 236 16 280 5 196 4 124 3 148 5 333 12 197 10 109 5 17 34 63 1 309 3 203 1 259 1 313 5 243 1 88 5 263 3 22 1 46 3 48 2 162 1 291 18 50 1 166 1 293 5 
270 1 5 2 259 1 173 1 313 1 216 1 88 2 236 4 263 1 280 2 48 1 148 1 333 3 291 4 109 2 197 4 50 1 17 8 293 2 166 1 
330 1 270 1 5 2 259 1 173 1 148 1 313 1 333 2 291 3 50 1 17 6 236 3 263 1 166 1 
5 1 313 1 243 1 144 1 216 1 88 1 236 2 46 1 280 1 148 1 124 1 333 2 291 2 109 1 197 2 293 1 17 4 
309 1 168 1 5 1 313 1 144 1 216 1 22 1 236 3 46 1 196 2 148 1 124 1 333 2 291 4 17 7 
168 1 270 2 5 5 173 1 144 2 216 4 236 11 302 1 280 2 196 2 124 2 148 3 333 9 109 2 197 4 17 23 309 2 203 1 259 1 313 3 88 2 263 2 67 1 46 2 48 2 291 12 50 1 166 1 293 2 
196 1 291 1 17 1 
309 1 17 1 236 1 
5 2 66 1 313 1 243 1 144 1 216 1 88 1 236 3 46 1 280 1 124 1 148 1 333 3 291 3 197 2 109 1 293 1 17 6 
295 1 5 1 250 1 172 1 144 2 216 1 34 1 236 6 280 1 196 1 124 2 148 2 333 2 197 2 109 1 17 12 309 1 312 1 313 2 88 1 22 1 46 2 70 1 291 6 293 1 
270 1 5 1 173 1 313 1 216 1 236 3 263 1 148 1 333 2 291 3 17 6 
270 1 5 1 203 1 216 1 88 1 236 1 263 1 48 1 280 1 333 2 291 2 50 1 109 1 197 2 17 3 293 1 166 1 
309 1 295 1 270 1 5 2 250 1 259 1 173 1 313 1 88 1 263 1 236 4 22 1 280 1 196 1 148 1 333 2 291 4 50 1 109 1 197 2 166 1 293 1 17 8 
168 1 295 1 270 1 5 2 250 1 173 1 144 1 216 1 236 6 280 2 196 2 148 1 124 1 333 3 197 4 109 2 17 11 309 1 259 1 313 2 243 1 88 2 263 1 22 1 291 5 50 1 166 1 293 2 
295 1 270 1 5 3 250 1 172 1 173 1 144 2 216 1 34 1 236 9 280 3 196 1 124 2 148 3 333 4 197 6 109 3 17 19 309 1 259 1 312 1 313 3 243 1 88 3 263 1 22 1 46 2 70 1 48 1 291 10 50 1 166 1 293 3 
295 1 270 1 5 3 250 1 172 1 173 1 144 2 216 2 34 1 236 10 280 3 196 1 124 2 148 2 333 5 197 6 109 3 17 17 309 1 259 1 312 1 313 3 243 1 88 3 263 1 22 1 46 1 70 1 48 1 291 7 50 1 166 1 293 3 
309 1 295 1 270 1 5 2 250 1 259 1 173 1 313 1 88 1 263 1 236 4 22 1 280 1 196 1 148 1 333 2 291 4 50 1 109 1 197 2 166 1 293 1 17 8 
295 1 5 1 250 1 172 1 144 2 216 1 34 1 236 6 280 1 196 1 124 2 148 2 333 2 197 2 109 1 17 12 309 1 312 1 313 2 88 1 22 1 46 2 70 1 291 6 293 1 
295 1 270 1 5 3 250 1 172 1 173 1 144 2 216 2 34 1 236 10 280 4 196 1 124 2 148 2 333 5 197 8 109 4 17 18 309 1 259 1 312 1 313 3 243 1 88 4 263 1 22 1 46 1 70 1 48 2 291 8 50 1 166 1 293 4 
295 1 5 3 250 1 172 1 144 3 216 3 34 1 236 9 280 4 196 1 124 3 148 2 333 6 197 8 109 4 17 16 309 1 312 1 313 3 88 4 22 1 46 2 70 1 48 2 162 1 291 7 293 4 
270 3 5 3 173 1 313 1 216 3 263 3 236 3 148 1 333 6 291 4 50 2 17 7 166 1 
295 1 270 1 5 3 250 1 172 1 173 1 144 2 216 1 34 1 236 10 280 4 196 1 124 2 148 2 333 4 197 8 109 4 17 18 309 1 259 1 312 1 313 3 88 4 263 1 22 1 46 1 70 1 48 2 162 1 291 8 50 1 166 1 293 4 
357 1 252 1 319 1 266 1 171 1 339 1 324 1 
0 1 171 1 311 1 174 1 339 1 252 1 357 1 319 1 266 1 359 1 257 1 324 1 
118 4 18 4 20 1 21 1 336 1 80 1 176 1 301 1 12 1 115 1 223 4 107 1 294 1 
325 1 118 2 18 2 19 1 140 1 20 1 80 2 176 1 12 1 238 1 342 1 223 2 289 1 381 1 
18 1 118 1 13 1 183 1 131 1 223 1 336 1 33 1 80 1 176 1 
118 2 18 2 232 1 51 1 20 1 21 1 80 1 176 1 12 1 92 1 223 2 
118 5 18 5 140 1 51 1 20 3 21 1 226 1 336 1 80 2 176 2 301 1 36 1 12 2 223 4 107 1 294 1 
118 5 18 5 140 1 51 1 20 3 21 1 336 1 80 2 176 2 301 1 36 1 12 2 376 1 223 4 107 1 294 1 
330 1 18 1 118 1 12 1 20 1 223 1 336 1 107 1 80 1 176 1 294 1 
118 1 18 1 20 1 327 1 298 1 336 1 285 1 80 1 176 1 264 1 252 1 357 2 12 1 266 2 223 1 281 1 381 1 324 1 
118 1 18 1 140 1 20 3 327 1 143 1 298 1 234 1 175 1 285 2 8 1 80 1 176 1 264 1 252 2 357 2 303 1 12 2 266 2 223 1 281 1 381 2 324 1 
118 2 140 1 327 1 298 1 143 1 175 1 234 1 8 1 80 1 176 1 357 2 252 2 253 1 12 2 303 1 223 2 18 2 20 3 285 2 264 1 266 2 115 1 381 2 324 1 
118 1 140 1 327 1 143 1 192 1 329 1 357 1 252 1 194 1 305 1 223 1 18 1 152 1 334 1 225 1 20 2 284 2 86 2 366 1 285 1 338 1 266 1 230 1 344 1 26 1 
118 3 18 3 140 1 225 1 86 2 284 2 20 4 366 1 336 1 234 1 192 1 8 1 80 1 176 1 194 1 12 1 218 1 305 1 115 1 344 1 223 3 381 1 
18 1 118 1 120 1 223 1 80 1 176 1 
325 1 118 7 18 7 51 1 20 3 120 1 226 1 21 1 260 1 336 2 80 3 176 2 36 1 12 2 59 1 92 1 342 1 47 1 209 1 223 6 381 1 
118 1 270 1 189 2 5 2 271 1 98 1 173 1 327 1 298 1 56 1 80 1 236 3 176 1 146 1 357 2 252 1 12 1 280 2 222 1 125 1 148 1 223 1 333 2 281 1 109 2 197 4 17 6 18 1 259 1 20 1 365 2 21 1 313 1 285 1 340 1 88 2 263 1 264 1 266 2 231 1 291 3 50 1 381 1 350 1 324 2 166 1 293 2 
118 1 192 1 78 2 299 1 57 1 194 1 218 1 305 1 61 1 223 1 15 1 307 2 179 1 18 1 202 2 225 2 284 3 86 3 20 2 366 1 336 1 43 1 246 1 205 1 344 1 380 1 25 2 138 1 
118 2 18 2 20 2 21 1 120 1 192 1 80 2 176 1 12 1 47 1 223 2 292 1 381 1 
118 1 18 1 20 1 327 1 298 1 336 1 285 1 80 1 176 1 264 1 252 1 357 2 253 1 12 1 266 2 223 1 381 1 324 1 
325 1 118 1 18 1 140 1 20 1 260 1 80 2 176 1 12 1 342 1 47 1 223 1 381 1 
160 1 97 1 103 1 324 1 199 1 
353 1 86 2 284 2 97 2 143 1 175 1 368 1 103 2 57 1 160 1 112 1 194 1 89 1 303 1 305 1 344 1 268 1 324 1 199 2 
97 1 160 1 371 1 252 1 357 1 83 1 248 1 266 1 199 1 
160 1 89 1 368 1 
351 1 85 1 29 1 3 1 318 1 195 1 14 1 286 1 
351 4 27 1 363 1 29 2 3 1 31 1 286 1 229 1 277 1 318 2 123 2 195 4 14 3 149 1 
351 2 85 1 29 1 3 1 286 1 145 1 195 2 123 1 318 1 14 1 136 1 322 1 
351 3 27 2 85 1 3 1 29 1 132 1 31 2 286 1 277 1 195 3 318 1 14 1 
177 1 119 2 296 1 14 2 
351 1 85 1 3 1 195 1 286 1 82 1 
351 2 85 1 29 1 3 1 318 1 123 1 195 2 71 1 14 1 286 1 
369 1 
351 1 85 1 29 1 3 1 318 1 195 1 14 1 286 1 
330 1 29 1 318 1 14 1 
351 1 29 1 3 1 318 1 195 1 14 1 286 1 
351 1 317 1 254 1 
351 3 27 2 85 1 3 1 29 1 31 1 286 1 277 1 331 1 195 3 318 1 14 1 
351 2 29 1 3 1 318 1 123 1 195 2 14 1 286 1 349 1 
351 1 45 1 85 1 3 1 13 1 195 1 183 1 208 1 14 1 149 1 286 1 
351 1 85 1 29 1 3 1 195 1 14 1 286 1 
351 1 85 1 29 2 3 1 318 1 195 1 286 1 
351 2 85 1 38 1 29 1 3 2 191 1 41 1 286 2 195 2 14 1 
351 3 153 1 85 1 29 1 3 1 286 1 229 1 318 1 195 3 123 2 71 1 14 2 149 1 
351 2 85 1 224 1 29 1 3 1 286 1 33 1 45 1 318 1 13 2 195 2 123 1 183 1 377 1 14 1 
351 4 85 1 29 1 3 2 286 2 229 1 278 1 318 1 195 4 123 2 14 2 149 1 349 1 
351 3 27 1 85 1 3 1 29 1 286 1 123 1 195 3 318 1 71 1 14 1 
363 1 14 1 149 1 229 1 
29 1 14 1 

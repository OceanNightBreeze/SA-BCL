#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (122,129) (122,129) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (122,129) 51 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (122,129) (122,129) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
333 1 113 2 340 1 314 1 69 1 147 5 49 9 271 3 25 2 52 1 9 1 10 1 245 4 194 1 125 1 13 1 318 7 232 1 203 9 131 1 104 1 325 1 61 2 360 1 
333 1 113 2 340 1 314 1 69 1 147 5 49 9 271 3 25 2 52 1 9 1 10 1 245 4 194 1 125 1 13 1 318 7 232 1 203 9 131 1 104 1 325 1 61 2 360 1 
333 1 113 2 340 2 69 2 114 1 314 2 291 1 147 5 49 9 271 3 25 2 10 1 9 1 219 1 245 4 194 1 125 1 157 1 13 1 318 6 232 1 203 9 104 1 325 2 134 1 61 2 327 1 360 1 
333 1 113 2 340 2 69 2 114 1 314 2 291 1 147 5 49 9 271 3 25 2 10 1 9 1 219 1 245 4 194 1 125 1 157 1 13 1 318 6 232 1 203 9 104 1 325 2 134 1 61 2 327 1 360 1 
333 1 113 2 340 2 69 2 114 1 314 2 291 1 147 6 49 10 271 4 25 2 10 1 9 1 219 1 245 5 194 1 125 1 157 1 13 1 318 7 232 1 203 10 104 1 325 2 134 1 61 2 327 1 360 1 
333 1 113 1 340 2 69 2 114 1 314 2 291 1 147 4 49 7 271 2 25 2 10 1 9 1 219 1 245 3 194 1 125 1 157 1 13 1 318 4 232 1 203 7 325 2 134 1 61 2 327 1 360 1 
333 1 318 3 113 2 340 1 69 1 232 1 203 4 147 3 104 1 49 4 325 1 271 1 25 1 61 1 9 1 10 1 245 2 360 1 
333 1 340 1 314 1 232 1 203 2 147 1 257 1 235 1 49 2 169 1 325 1 25 1 61 1 327 1 157 1 360 1 
333 1 318 1 314 1 232 1 203 3 147 2 49 3 271 1 25 2 61 2 245 1 194 1 360 1 
305 1 299 1 110 1 
299 1 265 1 322 2 
373 2 240 2 36 2 243 1 53 1 86 2 109 2 79 2 
313 1 21 1 240 3 212 1 165 1 243 1 3 1 86 2 184 2 185 2 119 1 5 1 216 1 269 2 151 1 90 1 53 1 220 1 197 1 373 3 75 1 252 2 348 1 161 1 36 2 278 1 176 1 39 1 79 2 101 1 204 2 280 1 308 1 109 2 380 1 285 1 332 1 
73 1 373 1 240 1 36 1 53 1 145 1 86 1 109 1 79 1 65 1 
299 1 373 1 240 1 46 1 167 1 79 1 341 1 303 1 305 1 24 1 73 1 358 1 211 1 32 1 
299 1 373 1 240 1 46 2 36 1 86 1 167 1 79 1 341 1 303 2 305 1 73 1 109 1 358 1 32 1 
46 1 123 1 180 1 369 1 303 1 
305 1 299 1 46 2 236 1 162 1 123 1 369 1 303 2 
46 1 369 1 303 1 
373 1 46 1 240 1 36 1 253 1 145 1 86 1 79 1 303 1 73 1 123 1 53 1 109 1 65 1 
299 1 
305 1 299 1 46 2 356 1 236 1 123 1 369 1 303 2 
198 1 160 2 172 1 299 1 34 1 251 1 46 5 1 2 201 1 254 1 303 5 304 1 354 1 305 1 236 1 192 2 123 2 273 1 369 2 
21 1 287 1 373 2 212 1 240 2 252 1 36 1 176 1 86 1 39 1 79 1 184 1 216 1 269 1 151 1 259 1 90 1 55 1 380 1 285 1 
243 1 110 1 
373 2 240 2 36 1 243 2 86 1 79 2 187 1 109 1 274 1 
106 1 259 1 156 1 
21 1 373 1 240 1 252 1 212 1 243 1 214 1 176 1 39 1 184 1 216 1 269 1 151 1 90 1 380 1 285 1 
287 1 373 3 240 3 36 3 243 1 109 1 86 3 79 3 
73 1 373 1 240 1 36 1 145 1 86 1 79 1 
73 1 373 1 240 1 36 1 86 1 109 1 79 1 274 1 187 1 
21 1 287 1 313 1 212 1 240 4 46 1 338 1 165 1 243 1 3 1 86 3 167 1 341 1 184 1 185 2 119 1 216 1 269 1 151 1 73 1 90 1 53 1 220 1 55 1 274 1 32 1 197 1 75 1 373 4 252 1 348 1 161 1 36 3 176 1 39 1 79 3 303 1 204 1 280 1 358 1 109 2 380 1 285 1 45 1 
286 1 287 1 24 1 373 2 240 2 36 1 243 1 86 1 79 2 
287 2 299 1 373 3 46 1 240 3 174 1 36 3 86 3 167 1 341 1 79 3 303 1 73 1 109 1 55 1 358 1 274 1 45 1 32 1 
287 1 373 2 240 2 259 1 36 2 86 2 109 1 79 2 156 1 274 1 
21 1 373 1 240 1 252 1 212 1 243 1 176 1 39 1 184 1 216 1 269 1 151 1 90 1 380 1 285 1 
264 1 21 1 373 1 240 1 252 1 212 1 276 1 243 1 176 1 39 1 184 1 216 1 269 1 90 1 380 1 
165 1 3 1 70 1 185 2 119 2 244 1 156 2 197 1 126 1 127 1 348 1 161 1 58 1 229 1 37 1 321 1 102 1 204 4 106 2 280 1 81 1 308 2 259 2 238 1 
73 1 373 1 240 1 36 1 375 1 86 1 79 1 32 1 
286 1 287 2 95 1 373 5 240 5 36 4 243 1 86 4 79 5 367 1 24 1 109 1 55 1 274 1 
73 1 373 2 240 2 375 1 36 2 145 1 86 2 79 2 
193 1 210 1 
193 1 210 1 
193 1 91 1 210 1 177 1 
193 1 91 1 210 1 177 1 
91 1 177 1 
362 1 193 1 210 1 
362 1 193 1 210 1 
362 1 193 1 210 1 
246 1 193 2 117 1 91 1 177 1 210 2 
193 1 309 1 210 1 
260 1 193 1 210 1 
260 1 193 1 210 1 
260 1 193 1 210 1 
288 1 299 1 97 1 46 2 277 1 77 2 364 1 351 1 215 2 4 2 117 1 303 2 133 2 17 2 217 1 193 2 108 3 18 1 210 2 
46 1 240 2 364 1 243 1 86 2 215 1 4 1 343 1 193 1 373 2 36 2 99 1 77 1 79 2 303 1 202 1 133 1 132 1 80 1 108 1 309 1 138 1 210 1 239 1 
325 1 340 1 69 1 
325 1 340 1 257 1 
223 1 0 1 325 3 339 1 69 2 257 1 
223 1 325 2 339 1 69 1 316 1 257 1 
223 2 325 2 339 1 69 1 257 1 
46 5 337 2 265 1 1 1 6 2 186 1 150 2 244 1 89 1 192 1 123 4 273 1 369 1 126 1 160 1 299 2 14 1 230 1 254 3 38 1 322 3 303 5 233 1 102 1 354 2 132 1 164 1 305 1 80 1 236 1 238 1 239 1 
85 1 46 9 337 6 265 3 1 2 186 2 150 6 244 3 192 2 123 7 273 1 369 6 275 5 346 1 198 1 126 3 160 2 299 5 14 3 128 1 254 8 38 1 322 9 303 9 233 2 102 3 354 6 305 1 236 1 310 1 329 1 180 5 238 3 239 4 20 1 
46 3 337 2 265 2 1 1 186 1 6 1 150 2 244 1 192 1 123 2 160 1 198 1 126 1 299 3 14 1 230 1 254 3 303 3 233 1 322 4 102 1 354 2 164 1 305 1 238 1 239 1 
46 4 337 4 265 3 1 1 186 1 6 2 150 4 244 2 192 1 123 3 346 1 160 1 198 1 126 2 299 4 14 2 230 1 254 5 322 7 303 4 233 1 102 2 354 4 164 1 305 1 310 1 329 1 238 2 239 2 
27 1 39 1 110 1 
8 1 39 1 
171 1 
39 1 216 1 
152 1 27 2 90 1 39 3 255 1 216 1 
90 1 39 1 216 1 
35 1 39 1 
48 1 228 1 302 1 70 2 119 3 102 1 256 2 204 7 244 1 105 1 270 1 81 3 308 4 154 1 359 1 312 1 262 1 
48 1 228 1 302 1 70 2 119 3 102 1 256 2 204 7 244 1 105 1 270 1 81 3 308 4 154 1 359 1 312 1 262 1 
48 1 228 1 302 1 70 2 378 1 119 3 102 1 256 2 204 7 244 1 105 1 270 1 81 3 308 4 154 1 359 1 312 1 262 1 
165 1 48 5 70 5 185 2 119 15 168 1 270 2 244 4 368 1 154 2 222 1 370 4 126 3 197 1 14 3 161 1 228 2 302 2 323 1 204 31 256 3 102 4 105 1 280 1 281 1 81 10 308 16 178 1 209 3 312 1 359 1 19 1 238 3 262 1 
165 2 48 1 70 3 185 4 119 4 244 1 270 1 26 1 154 1 197 2 161 2 228 1 302 1 323 1 102 1 204 9 256 2 105 1 280 2 81 4 308 5 311 1 312 1 262 1 
333 1 0 1 213 1 212 1 166 1 340 1 69 1 314 1 184 1 147 1 49 2 269 1 25 1 11 1 293 1 344 1 318 1 76 1 252 1 226 1 301 1 176 1 232 1 203 2 257 1 326 1 325 2 61 1 261 1 360 1 
333 1 0 1 213 1 212 1 166 1 340 1 69 1 314 1 184 1 365 1 147 1 49 3 269 1 25 1 293 1 344 1 318 2 76 1 252 1 173 1 226 1 301 1 176 1 232 1 379 1 203 3 257 1 326 1 325 2 61 1 
333 1 0 1 212 1 166 1 340 1 314 1 69 1 184 1 147 1 49 2 269 1 344 1 318 2 76 1 252 1 173 1 226 1 301 1 176 1 232 1 379 1 203 2 257 1 326 1 325 2 
212 1 314 2 184 1 365 1 216 1 49 1 269 1 25 1 344 2 221 1 296 1 252 1 226 2 176 1 39 1 203 1 326 2 61 1 83 1 380 1 330 1 139 1 263 1 
0 1 213 1 212 1 166 1 340 1 69 1 314 1 184 1 49 1 269 1 25 1 11 1 293 1 344 1 76 1 252 1 226 1 301 1 176 1 379 1 203 1 257 1 326 1 325 2 61 1 360 1 
284 1 
336 1 46 4 240 1 1 1 87 3 341 1 50 2 191 1 192 1 158 3 160 1 299 1 254 1 303 4 205 2 354 1 305 1 107 1 63 2 358 1 211 1 265 2 167 1 366 1 268 1 24 1 73 1 74 1 124 3 273 1 369 5 32 1 371 1 373 1 227 2 79 1 376 1 234 1 41 1 236 2 283 5 331 1 
240 1 46 4 336 1 265 2 1 1 167 1 341 1 87 3 366 1 268 1 50 2 24 1 73 1 74 1 192 1 191 1 273 1 124 3 369 5 158 3 32 1 371 1 160 1 299 1 373 1 227 2 254 1 79 1 376 1 303 4 234 1 205 2 354 1 41 1 305 1 107 1 236 2 63 2 283 5 358 1 331 1 211 1 
336 1 240 1 46 4 1 1 341 1 87 2 50 2 192 1 191 1 158 2 94 1 160 1 200 2 299 1 254 1 303 4 354 1 305 1 63 2 358 1 211 1 111 1 167 1 268 1 72 2 24 1 73 1 273 1 124 2 369 4 32 1 373 1 79 1 322 2 234 1 41 1 236 2 283 4 331 1 
46 5 240 1 336 1 1 1 87 2 341 1 184 2 186 1 50 2 192 1 191 1 345 1 158 2 296 1 94 1 347 1 160 1 299 2 252 2 100 1 254 2 303 5 205 2 354 2 305 1 63 2 358 1 211 1 212 1 265 2 167 1 116 1 268 1 216 1 269 2 24 1 73 1 74 1 124 2 273 1 221 1 369 6 32 1 373 1 227 2 176 1 39 1 79 1 322 2 234 1 41 1 236 3 283 4 380 2 331 1 
240 1 46 3 336 1 167 1 341 1 87 1 268 1 24 1 73 1 191 1 369 2 32 1 373 1 79 1 303 3 234 1 41 1 356 1 236 1 283 2 358 1 211 1 
240 1 46 3 336 1 167 1 341 1 268 1 24 1 73 1 191 1 124 1 369 1 32 1 373 1 299 1 79 1 303 3 234 1 41 1 305 1 356 1 236 1 283 3 358 1 211 1 
240 1 46 3 336 1 167 1 341 1 87 1 268 1 24 1 73 1 191 1 124 1 369 2 158 1 32 1 373 1 299 1 79 1 303 3 234 1 41 1 305 1 356 1 236 1 283 3 358 1 211 1 
182 1 336 1 240 1 46 5 1 1 87 4 341 1 50 2 191 1 192 1 158 4 160 1 299 5 254 1 303 5 205 2 354 1 305 5 107 1 356 1 63 2 358 1 211 1 265 2 167 1 366 1 268 1 24 1 73 1 74 1 124 4 273 1 369 7 32 1 371 1 373 1 227 2 79 1 376 1 234 1 41 1 236 3 283 6 331 1 
336 1 240 1 46 4 1 1 341 1 87 2 50 2 192 1 191 1 158 2 94 1 160 1 299 2 254 1 303 4 205 2 354 1 305 1 63 2 358 1 211 1 265 2 167 1 268 1 24 1 73 1 74 1 273 1 124 2 369 4 32 1 373 1 227 2 79 1 322 2 234 1 41 1 236 2 283 4 331 1 
240 1 46 4 336 1 265 2 1 1 167 1 87 2 341 1 366 1 268 1 50 2 24 1 73 1 74 1 191 1 192 1 124 2 273 1 369 4 158 2 32 1 160 1 299 1 373 1 227 2 254 1 79 1 376 1 303 4 234 1 205 2 354 1 41 1 305 1 107 1 236 2 63 2 283 4 358 1 331 1 211 1 
240 1 46 4 336 1 265 2 1 1 167 1 87 2 341 1 366 1 268 1 50 2 24 1 73 1 74 1 191 1 192 1 124 2 273 1 369 4 158 2 32 1 160 1 299 1 373 1 227 2 254 1 79 1 376 1 303 4 234 1 205 2 354 1 41 1 305 1 107 1 236 2 63 2 283 4 358 1 331 1 211 1 
111 1 240 1 46 4 336 1 1 1 167 1 87 2 341 1 268 1 72 2 50 2 24 1 73 1 191 1 192 1 124 2 273 1 369 4 158 2 32 1 160 1 299 1 200 2 373 1 98 1 254 1 79 1 322 2 376 1 303 4 234 1 354 1 41 1 305 1 236 2 63 2 283 4 358 1 331 1 141 1 211 1 
165 1 243 2 3 1 70 2 185 2 119 3 244 1 154 1 156 1 197 1 348 1 161 1 58 1 228 1 102 1 204 6 256 1 105 1 106 1 280 1 81 2 259 1 308 3 312 1 110 1 262 1 
112 1 165 2 48 1 242 1 243 1 3 2 70 1 185 4 119 6 244 1 121 1 368 1 220 1 156 4 222 1 370 3 197 2 126 2 224 1 348 1 14 2 161 2 350 1 204 14 102 2 106 11 280 2 81 2 259 11 308 8 209 3 238 1 332 1 
21 1 287 1 112 1 212 1 240 2 165 1 144 1 243 1 214 1 3 1 86 1 184 1 185 2 119 1 71 1 216 1 269 1 151 1 90 1 54 1 55 1 220 1 156 1 197 1 373 2 252 1 348 1 36 1 161 1 176 1 39 1 79 1 204 2 280 1 308 1 380 1 285 1 332 1 
287 1 240 3 48 4 243 2 86 1 3 3 290 2 184 3 185 6 244 3 151 2 153 1 90 2 55 1 154 1 156 7 197 3 252 3 348 3 14 2 161 3 353 2 256 1 204 20 102 3 163 1 105 1 106 7 259 7 308 10 208 2 312 1 262 1 21 2 112 1 212 2 165 3 70 4 119 10 216 2 269 3 317 1 220 1 126 2 373 3 75 2 36 1 228 1 176 2 79 1 39 2 379 1 280 3 81 8 328 2 380 1 238 2 285 2 332 1 
287 1 240 1 212 2 142 1 241 1 165 2 86 1 3 2 68 1 184 7 185 4 119 1 5 2 216 2 88 1 269 8 220 1 221 1 296 1 248 1 197 2 373 1 252 8 348 2 58 1 36 1 161 2 176 2 79 1 39 3 379 1 204 2 207 1 280 2 308 1 261 1 84 1 380 2 332 1 
112 1 240 1 165 1 3 1 86 1 70 1 185 2 119 2 244 1 156 1 274 1 197 1 126 1 373 1 348 1 14 1 36 1 161 1 78 1 79 1 102 1 204 3 106 1 280 1 81 1 259 1 308 1 109 1 238 1 
197 1 126 1 348 1 165 1 48 1 58 1 161 1 3 1 321 1 185 2 204 2 102 1 106 1 280 1 81 1 259 1 308 2 156 1 
197 1 348 1 165 1 58 1 161 1 229 1 3 1 70 1 185 2 204 2 119 2 106 1 244 1 280 1 81 1 259 1 156 1 238 1 
165 1 48 1 3 1 70 1 185 2 119 2 244 1 156 2 126 1 197 1 14 1 348 1 161 1 58 1 102 1 204 4 106 2 280 1 81 2 308 2 259 2 238 1 
197 1 126 1 348 1 165 1 48 1 161 1 68 1 3 1 321 1 185 2 204 2 102 1 106 1 280 1 81 1 259 1 308 2 156 1 
197 1 348 1 165 1 161 1 229 1 68 1 3 1 70 1 185 2 204 2 119 2 106 1 244 1 280 1 81 1 259 1 156 1 238 1 
165 1 48 1 3 1 68 1 70 1 185 2 119 2 244 1 156 2 126 1 197 1 14 1 348 1 161 1 102 1 204 4 106 2 280 1 81 2 308 2 259 2 238 1 
165 1 48 1 3 1 70 1 185 2 119 2 244 1 156 2 126 1 197 1 14 1 348 1 161 1 204 4 102 1 106 2 280 1 81 2 308 2 259 2 238 1 
21 1 212 1 240 1 165 1 243 1 3 1 184 1 185 2 119 1 216 1 269 1 151 1 90 1 220 1 197 1 75 1 373 1 252 1 348 1 161 1 176 1 39 1 204 2 280 1 308 1 380 1 285 1 332 1 
21 1 264 1 212 1 240 1 165 1 243 1 3 1 184 1 185 2 119 1 216 1 149 1 269 1 90 1 220 1 197 1 373 1 252 1 276 1 348 1 161 1 176 1 39 1 204 2 280 1 308 1 380 1 332 1 
112 1 165 1 48 1 3 1 70 1 185 2 119 2 244 1 156 2 126 1 197 1 14 1 348 1 161 1 102 1 204 4 106 2 280 1 81 2 308 2 259 2 238 1 
21 1 212 1 240 1 165 1 48 1 290 1 3 1 70 1 184 1 185 2 119 2 216 1 269 1 244 1 151 1 90 1 156 2 126 1 197 1 75 1 373 1 252 1 348 1 14 1 161 1 176 1 39 1 204 4 102 1 106 2 280 1 81 2 259 2 308 2 261 1 238 1 285 1 
112 1 240 1 165 1 48 1 2 1 3 1 86 1 185 2 119 1 244 1 156 1 274 1 197 1 126 1 373 1 348 1 14 1 36 1 161 1 79 1 102 1 204 3 106 1 280 1 81 1 308 2 259 1 109 1 238 1 
165 2 48 3 70 3 185 4 119 10 148 1 244 3 368 1 247 2 12 1 222 1 370 2 249 1 197 2 126 3 298 1 14 3 161 2 349 1 204 19 102 3 42 1 280 2 81 6 308 9 311 1 209 1 238 3 44 1 381 2 
361 1 165 3 48 2 70 2 185 6 119 12 148 1 244 2 170 1 218 1 368 2 272 1 247 1 249 2 370 2 197 3 126 3 298 2 14 3 161 3 349 1 323 2 204 26 102 3 306 1 280 3 81 4 308 14 137 1 311 1 209 2 238 2 44 1 381 4 
48 4 342 1 185 6 148 1 244 5 247 1 154 1 249 1 197 3 298 2 14 4 349 1 161 3 102 5 204 41 256 1 306 1 105 1 308 20 311 1 209 3 312 1 262 1 361 1 165 3 70 4 119 21 170 1 368 3 218 1 272 1 222 1 370 4 126 4 228 1 323 1 42 1 280 3 81 8 137 1 238 4 44 1 381 4 
361 1 165 4 48 3 342 1 70 4 185 8 119 18 148 1 244 4 170 1 218 1 368 3 272 1 247 1 154 1 222 1 370 4 249 1 197 4 126 4 298 2 14 4 161 4 349 1 228 1 323 2 256 1 204 38 102 5 42 1 306 1 105 1 280 4 81 7 308 20 137 1 311 1 209 3 312 1 238 3 44 1 262 1 381 4 
361 1 165 2 48 7 70 7 185 4 119 25 148 1 244 8 170 1 218 1 368 2 272 1 247 1 154 1 222 2 370 4 249 1 197 2 126 7 298 1 14 7 161 2 349 1 228 1 350 2 323 1 256 1 204 52 102 8 306 1 105 1 280 2 81 14 308 27 137 1 311 1 209 4 312 1 238 7 44 1 262 1 381 4 
97 1 277 1 193 1 77 1 66 1 215 1 4 1 117 1 210 1 133 1 
309 1 202 1 
175 1 193 1 77 1 215 1 4 1 155 1 40 1 210 1 133 1 
288 1 299 1 97 1 46 1 277 1 364 1 77 1 351 1 215 1 4 1 117 1 303 1 133 1 17 1 217 1 193 1 108 2 210 1 
288 1 299 1 97 1 46 1 277 1 364 1 77 1 351 1 215 1 4 1 117 1 303 1 133 1 17 1 217 1 193 1 108 2 210 1 
288 1 299 1 97 1 46 1 277 1 364 1 77 1 351 1 215 1 4 1 117 1 303 1 133 1 17 1 217 1 193 1 108 2 210 1 
362 1 246 1 179 1 
362 1 246 1 179 1 
57 1 260 1 
57 1 246 1 260 1 
343 1 138 1 
288 1 240 2 46 1 243 1 215 1 86 2 4 1 343 1 193 1 123 1 30 1 373 2 99 1 36 2 77 1 79 2 303 1 202 1 17 1 133 1 132 1 80 1 108 1 309 1 138 1 210 1 239 1 
362 1 179 1 
57 1 246 1 260 1 
112 1 335 1 212 1 240 2 142 1 241 1 165 1 3 1 184 2 185 2 119 1 5 2 216 1 188 1 269 2 189 1 220 1 295 1 197 1 373 2 252 2 348 1 161 1 176 1 39 1 79 2 204 2 280 1 62 1 308 1 332 1 
250 1 0 1 212 1 252 2 213 1 166 1 226 1 301 1 340 1 176 1 69 1 184 2 118 1 379 1 257 1 325 2 269 2 43 1 261 1 
0 1 252 1 213 1 212 1 166 1 226 1 301 1 183 1 340 1 176 1 69 1 184 1 379 1 257 1 325 2 269 1 43 1 
212 1 252 1 226 1 176 1 39 1 184 1 118 1 216 1 269 1 357 1 380 1 221 1 296 1 263 1 
250 1 0 1 212 1 252 1 213 1 166 1 226 1 301 1 340 1 176 1 69 1 184 1 118 1 379 1 257 1 325 2 269 1 43 1 
225 1 
313 1 21 1 240 3 212 1 165 1 243 1 86 2 3 1 184 1 185 2 119 1 216 1 269 1 151 1 90 1 53 1 220 1 197 1 373 3 75 1 252 1 348 1 161 1 36 2 176 1 79 2 39 1 204 1 280 1 380 1 109 2 285 1 
160 1 299 4 337 2 265 2 1 1 254 1 100 1 322 4 256 1 354 2 186 1 150 2 305 2 192 1 273 1 
305 1 299 1 251 1 254 1 304 1 354 1 110 1 
160 1 299 2 46 1 1 1 265 1 227 1 254 1 303 1 322 1 205 1 354 1 305 1 74 1 236 1 192 1 273 1 369 1 
46 5 337 6 1 4 341 2 184 3 146 2 186 2 7 2 150 6 8 3 244 2 190 1 192 4 90 3 195 1 196 2 199 2 160 4 299 8 251 1 252 3 300 1 14 2 100 1 254 9 303 5 304 1 255 1 102 2 354 8 103 2 305 2 261 1 212 4 22 1 265 6 67 2 216 3 269 3 27 2 273 4 369 5 29 2 126 2 374 1 35 2 176 3 39 10 322 12 236 3 328 2 135 2 380 1 238 2 
361 1 46 1 337 5 1 2 265 3 67 2 23 1 186 1 150 5 244 2 170 1 368 1 192 2 272 1 273 2 369 1 370 1 160 2 126 2 299 5 14 2 100 1 254 8 303 1 322 6 102 2 103 1 354 5 324 1 306 1 305 2 236 1 137 1 209 1 238 2 
240 1 46 1 1 1 145 1 67 2 86 1 366 1 73 1 244 1 192 1 53 1 273 1 154 1 56 1 160 1 373 1 36 1 228 1 253 1 254 2 79 1 303 1 102 2 103 1 354 2 105 1 109 1 65 1 
160 1 299 1 251 1 1 1 254 1 304 1 354 1 305 1 192 1 273 1 
126 2 299 5 337 5 14 2 265 5 254 5 67 2 322 10 102 2 103 1 354 5 150 5 244 2 328 1 238 2 
305 1 299 1 46 1 236 1 303 1 369 1 
212 1 46 3 1 2 116 1 184 4 186 2 216 1 269 4 192 2 190 1 273 1 221 1 369 4 296 1 347 1 198 1 160 2 372 1 374 2 252 4 254 2 100 2 176 1 39 1 303 3 354 2 355 1 236 2 380 2 
294 1 215 1 133 1 
294 1 215 1 133 1 
294 1 215 1 133 1 
277 1 215 1 343 1 31 1 133 1 
258 1 215 1 133 1 
258 1 215 1 133 1 
258 1 215 1 133 1 
215 1 133 1 
193 1 210 1 
197 2 165 2 48 1 161 2 228 1 70 2 185 4 323 1 256 1 102 1 119 4 204 8 244 1 105 1 280 2 81 3 308 4 154 1 312 1 262 1 
228 1 70 2 256 1 119 3 102 1 204 6 105 1 244 1 81 2 308 3 154 1 312 1 110 1 262 1 
197 1 126 1 165 1 14 1 161 1 48 1 70 1 185 2 119 2 102 1 204 4 244 1 280 1 81 2 308 2 136 1 238 1 
126 1 14 1 48 1 70 1 119 4 204 7 102 1 244 1 81 2 368 1 308 3 209 1 238 1 222 1 370 2 
165 2 48 4 70 5 185 4 119 12 244 3 154 2 222 1 370 2 159 1 126 2 197 2 224 1 14 2 161 2 228 2 350 1 323 2 256 1 102 3 204 23 105 1 280 2 81 9 308 11 209 2 312 1 238 2 262 1 
204 1 119 1 370 1 
308 1 209 1 204 1 
197 1 126 1 165 1 14 1 161 1 48 1 70 2 185 2 119 3 204 6 102 1 244 1 280 1 81 3 328 1 308 3 136 1 238 1 
361 1 165 1 48 1 70 1 185 2 119 6 244 2 170 1 368 1 272 1 370 1 197 1 126 2 14 2 161 1 204 12 102 2 306 1 280 1 81 2 308 6 311 1 137 1 209 1 238 2 
48 1 228 1 70 1 102 1 204 6 119 3 105 1 244 1 81 2 308 3 154 1 
197 1 165 1 48 1 161 1 228 1 70 1 323 1 185 2 119 2 204 3 280 1 81 2 308 1 154 1 312 1 262 1 159 1 
197 1 165 1 161 1 48 2 228 2 70 3 185 2 204 10 119 5 102 2 105 1 244 2 280 1 81 5 308 5 311 1 154 2 56 1 
197 1 126 1 165 1 161 1 48 1 185 2 102 1 204 2 280 1 81 1 308 2 311 1 
197 1 126 1 165 1 14 1 161 1 48 1 70 1 185 2 119 2 102 1 204 4 244 1 280 1 81 2 308 2 311 1 238 1 
197 3 165 3 161 3 48 1 228 1 70 1 323 1 185 6 119 2 204 3 42 1 280 3 81 2 308 1 311 1 154 1 159 1 
165 5 48 5 70 7 185 10 119 18 168 1 244 5 368 1 154 3 222 1 159 1 370 4 197 5 126 3 14 3 161 5 228 3 323 2 256 1 204 34 102 5 42 1 105 2 281 1 280 5 81 12 308 16 178 1 136 1 311 1 209 3 312 1 238 3 262 1 
165 1 70 2 185 2 119 4 244 1 368 1 154 1 370 1 197 1 161 1 228 1 256 1 102 1 204 8 306 1 105 1 280 1 81 2 308 4 311 1 209 1 312 1 262 1 
165 2 48 1 70 2 185 4 119 5 244 1 368 1 154 1 222 1 370 2 197 2 126 1 14 1 161 2 228 1 256 1 204 11 102 2 306 1 105 1 280 2 81 3 308 6 136 1 311 1 209 1 312 1 262 1 
361 1 165 3 48 1 70 3 185 6 119 10 244 3 170 1 368 1 272 1 154 1 370 1 197 3 126 2 14 2 161 3 228 1 323 1 256 1 204 19 102 3 306 1 105 1 280 3 81 4 308 9 136 1 311 1 137 1 209 1 312 1 238 2 262 1 
361 1 165 3 48 2 70 3 185 6 119 7 244 2 170 1 368 1 272 1 154 1 370 1 197 3 126 2 14 2 161 3 228 1 323 1 256 1 204 17 102 3 306 1 105 1 280 3 81 5 308 10 136 1 311 1 137 1 209 1 312 1 238 1 262 1 
165 1 70 2 185 2 119 4 244 1 368 1 154 1 370 1 197 1 161 1 228 1 256 1 102 1 204 8 306 1 105 1 280 1 81 2 308 4 311 1 209 1 312 1 262 1 
361 1 165 1 48 1 70 1 185 2 119 6 244 2 170 1 368 1 272 1 370 1 197 1 126 2 14 2 161 1 204 12 102 2 306 1 280 1 81 2 308 6 311 1 137 1 209 1 238 2 
361 1 165 4 48 2 70 3 185 8 119 8 244 2 170 1 368 1 272 1 154 1 370 1 197 4 126 2 14 2 161 4 228 1 323 2 256 1 204 18 102 3 306 1 105 1 280 4 81 5 308 10 136 1 137 1 311 1 209 1 312 1 238 1 262 1 
361 1 165 4 48 3 70 3 185 8 119 7 244 2 170 1 368 1 272 1 370 1 197 4 126 3 14 3 161 4 323 2 204 16 102 3 42 1 306 1 280 4 81 6 308 9 137 1 311 1 209 1 238 2 
48 3 228 3 70 3 119 4 204 7 102 1 244 1 105 1 81 6 308 3 154 3 312 1 262 2 
361 1 165 4 48 1 70 3 185 8 119 8 244 2 170 1 368 1 272 1 154 1 370 1 197 4 126 2 14 2 161 4 228 1 323 2 256 1 204 18 102 3 42 1 306 1 105 1 280 4 81 4 308 10 137 1 311 1 209 1 312 1 238 1 262 1 
286 1 24 1 373 1 240 1 243 1 79 1 352 1 
286 1 96 1 373 1 289 1 240 1 363 1 243 1 79 1 352 1 24 1 140 1 33 1 
269 1 212 1 252 1 176 1 380 1 39 1 221 1 184 1 296 1 110 1 216 1 
21 1 287 1 373 2 212 1 240 2 252 1 36 1 243 1 86 1 176 1 39 1 79 1 184 1 216 1 269 1 90 1 380 1 285 1 
21 1 287 1 373 2 212 1 240 2 374 1 252 1 35 1 36 1 243 1 167 1 86 2 176 1 39 3 79 2 184 1 216 2 269 1 73 1 90 2 29 1 32 1 285 1 
21 1 287 1 264 1 373 2 212 1 240 2 374 1 252 2 35 1 36 1 243 1 167 1 86 2 176 1 39 3 79 2 184 2 120 1 216 2 269 2 73 1 90 2 29 1 32 1 
299 1 212 1 46 2 374 1 252 3 35 1 176 1 341 1 39 4 303 2 184 3 120 1 216 1 292 1 305 1 269 3 8 1 282 1 27 1 90 1 380 1 369 1 29 1 
299 1 212 1 46 2 374 1 252 3 35 1 176 1 341 1 39 4 303 2 184 3 120 1 216 1 305 1 269 3 8 1 27 1 90 1 135 1 380 1 369 1 29 1 
269 1 212 1 252 1 176 1 84 1 184 1 
252 1 212 2 129 1 176 1 39 1 184 1 255 1 216 1 269 1 122 1 90 1 64 1 380 1 
21 1 287 1 112 1 212 1 240 2 165 2 243 2 3 2 86 1 290 1 70 2 184 1 185 4 119 3 216 1 269 1 244 1 151 1 90 1 154 1 156 1 197 2 373 2 75 1 252 1 348 2 36 1 161 2 228 1 176 1 39 1 79 1 353 1 256 1 204 6 102 1 106 1 105 1 280 2 81 2 62 1 259 1 308 3 261 1 312 1 285 1 262 1 
46 3 1 2 341 1 184 1 7 1 269 1 8 1 27 1 192 2 190 1 123 1 273 2 369 2 196 1 160 2 199 1 299 1 251 1 252 1 254 1 39 2 303 3 304 1 354 1 305 1 236 1 135 1 380 1 
252 2 22 1 212 2 176 1 39 2 184 2 255 1 216 1 269 2 27 1 261 1 90 1 84 1 
212 1 252 4 176 1 39 1 184 4 120 1 216 1 269 4 261 1 237 1 380 1 221 1 296 1 
252 1 212 2 59 1 129 1 176 1 39 1 184 1 216 1 269 1 51 1 153 1 90 1 64 1 
325 1 269 1 212 1 252 1 301 1 340 1 176 1 380 1 184 1 257 1 
252 2 212 1 241 1 176 1 39 1 184 2 379 1 216 1 188 1 269 2 261 1 
374 1 252 5 212 2 241 1 176 2 39 3 184 4 216 2 269 5 207 1 88 1 261 1 237 1 380 1 221 1 296 1 
374 1 252 5 212 2 241 1 176 2 39 3 184 4 130 1 216 2 269 5 88 1 261 1 237 1 380 1 221 1 296 1 
21 1 287 1 264 1 373 2 212 1 240 2 252 1 36 1 243 1 86 1 176 1 39 1 79 1 184 1 216 1 269 1 90 1 380 1 
374 1 252 1 212 2 129 1 176 1 39 1 184 1 255 1 216 1 269 1 122 1 90 1 64 1 
335 1 373 1 240 1 79 1 377 1 60 1 189 1 295 1 28 1 
334 1 267 1 60 1 
243 1 231 1 377 1 28 1 60 1 
334 1 299 1 46 2 243 1 167 1 231 2 341 1 267 1 303 2 377 2 60 1 305 1 73 1 123 1 358 1 28 2 93 1 32 1 45 1 
318 1 333 1 232 1 203 3 147 1 49 3 25 1 61 1 327 1 360 1 13 1 
271 1 245 1 181 1 147 1 
333 1 147 1 
333 1 232 1 147 1 110 1 
333 1 49 1 25 1 61 1 232 1 203 1 147 1 
326 1 314 1 203 1 
333 1 49 3 25 1 61 1 327 2 15 1 232 1 203 3 206 1 147 1 16 1 360 1 
333 1 318 1 49 2 25 1 61 1 113 1 232 1 203 2 147 1 
49 1 325 1 25 1 10 1 61 1 245 1 340 1 69 1 203 1 147 1 360 1 
333 1 49 1 25 1 61 1 203 1 147 1 360 1 
333 2 49 1 25 1 61 1 232 1 203 1 360 1 
333 1 47 1 203 2 315 1 147 1 49 2 25 2 61 2 82 1 360 1 
333 1 318 2 232 1 203 3 147 2 49 3 271 1 25 1 61 1 245 1 125 1 360 1 13 1 
333 1 318 1 0 1 340 1 69 1 232 1 203 2 147 1 257 1 49 2 279 1 325 2 25 1 61 1 360 1 
333 1 318 2 113 1 232 1 203 4 147 2 49 4 104 1 271 1 25 2 61 2 245 1 360 1 
333 1 49 1 25 1 61 1 232 1 203 1 147 1 360 1 
333 2 318 2 15 1 232 2 203 4 147 3 16 1 49 4 271 1 25 1 61 1 327 1 245 1 181 1 
333 1 318 1 143 1 320 1 232 1 203 2 147 1 131 1 49 2 25 1 61 1 360 1 
333 1 15 2 232 1 203 3 147 1 16 1 49 3 25 1 61 1 327 2 92 1 360 1 
297 1 266 2 115 1 147 2 
49 1 25 1 61 1 307 1 203 1 360 1 
333 1 318 1 49 2 25 1 61 1 232 1 203 2 147 1 13 1 360 1 
319 1 
333 1 49 1 25 1 61 1 232 1 203 1 147 1 360 1 

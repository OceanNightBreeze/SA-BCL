#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7146 | if (x) -> if (!x)
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 9723 | ^ -> &
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 272 2 360 4 22 1 74 1 297 1 24 1 365 1 104 2 368 6 159 1 282 1 160 1 27 1 210 2 237 2 304 1 374 2 213 1 12 5 87 1 331 2 88 1 36 3 356 2 199 9 292 9 268 1 
1 1 272 2 360 4 22 1 74 1 297 1 24 1 365 1 104 2 368 6 159 1 282 1 160 1 27 1 237 2 210 2 304 1 213 1 374 2 12 5 87 1 331 2 88 1 36 3 356 2 199 9 292 9 268 1 
1 1 272 2 360 5 22 1 74 1 297 1 24 1 365 1 104 2 368 7 159 1 282 1 160 1 27 1 237 2 210 2 304 1 213 1 374 2 12 6 87 1 331 2 88 1 36 4 356 2 199 10 292 10 268 1 
1 1 272 2 360 3 22 1 297 1 24 1 365 1 104 2 368 4 159 1 282 1 160 1 27 1 237 2 210 2 304 1 213 1 374 1 12 4 87 1 331 2 88 1 36 2 356 2 199 7 292 7 268 1 
272 1 374 2 360 2 12 3 74 1 297 1 331 1 104 1 36 1 368 3 282 1 160 1 27 1 210 1 237 1 199 4 304 1 292 4 
261 1 272 1 12 1 24 1 34 1 331 1 104 1 282 1 160 1 300 1 210 1 199 2 356 1 304 1 292 2 268 1 
272 2 360 1 12 2 88 1 36 1 368 1 282 1 160 1 210 2 199 3 356 1 304 1 292 3 
272 2 359 1 374 2 213 1 360 4 12 5 74 1 297 1 331 1 88 1 104 1 159 1 368 7 36 3 282 1 27 1 160 1 237 1 210 2 199 9 94 1 356 1 304 1 292 9 
272 2 359 1 374 2 213 1 360 4 12 5 74 1 297 1 331 1 88 1 104 1 159 1 368 7 36 3 282 1 27 1 160 1 237 1 210 2 199 9 94 1 356 1 304 1 292 9 
377 1 303 1 364 1 
380 1 61 2 303 1 
224 1 327 2 80 2 173 1 93 2 154 2 371 2 25 2 
224 1 293 1 273 1 255 1 154 3 25 3 185 1 155 2 78 1 127 1 80 2 367 1 52 1 233 1 235 1 345 1 371 2 134 1 238 2 133 1 326 1 11 1 56 1 327 2 168 1 350 2 173 1 241 1 89 2 116 1 352 1 313 1 198 1 314 2 93 2 222 1 202 1 
327 1 80 1 173 1 93 1 154 1 371 1 174 1 25 1 121 1 348 1 
182 1 154 1 139 1 257 1 25 1 364 1 175 1 80 1 15 1 208 1 220 1 303 1 285 1 348 1 
327 1 182 1 154 1 139 2 257 1 25 1 364 1 80 1 15 1 208 2 220 1 93 1 371 1 303 1 348 1 
208 1 254 1 362 1 296 1 139 1 
208 2 254 1 296 1 14 1 139 2 303 1 259 1 364 1 
208 1 296 1 139 1 
327 1 254 1 173 1 139 1 154 1 174 1 25 1 80 1 208 1 176 1 93 1 371 1 121 1 348 1 
303 1 
157 1 208 2 254 1 296 1 14 1 139 2 303 1 364 1 
21 1 30 2 240 2 254 2 43 1 14 1 139 5 296 2 206 1 364 1 6 2 351 1 208 5 283 1 130 1 334 1 266 1 303 1 177 1 
224 1 377 1 
327 1 168 1 42 1 255 1 154 2 278 1 89 1 25 2 127 1 78 1 155 1 80 1 367 1 313 1 198 1 314 1 93 1 211 1 222 1 326 1 
224 2 327 1 154 2 25 2 366 1 80 2 17 1 93 1 371 1 
51 1 42 1 2 1 
224 1 168 1 255 1 154 1 89 1 25 1 155 1 78 1 127 1 207 1 367 1 313 1 314 1 198 1 222 1 326 1 
224 1 327 4 318 1 154 5 278 2 25 5 175 1 366 1 80 5 93 4 211 1 371 1 40 1 315 1 
84 1 327 2 80 2 93 2 154 2 174 1 25 2 348 1 
224 1 327 3 80 3 93 3 154 3 371 1 278 1 25 3 
327 1 80 1 93 1 154 1 174 1 25 1 348 1 
366 1 327 1 80 1 17 1 93 1 154 1 371 1 25 1 348 1 
224 1 339 1 273 1 255 1 182 1 154 4 257 1 278 1 25 4 185 1 127 1 78 1 366 1 155 1 80 3 367 1 208 1 52 1 235 1 345 1 370 1 211 1 371 2 238 1 326 1 348 1 11 1 56 1 327 3 168 1 350 2 173 1 241 1 139 1 89 1 352 1 15 1 313 1 220 1 198 1 314 1 93 3 222 1 202 1 
224 1 175 1 327 1 80 2 93 1 154 2 278 1 40 1 25 2 
339 1 327 3 182 1 139 1 154 3 257 1 278 2 25 3 366 1 80 3 15 1 208 1 220 1 93 3 211 1 325 1 371 1 303 1 348 1 
366 1 327 2 80 2 51 1 42 1 93 2 154 2 371 1 278 1 25 2 
224 1 168 1 255 1 154 1 89 1 25 1 155 1 78 1 127 1 367 1 313 1 314 1 198 1 222 1 326 1 
224 1 168 1 110 1 111 1 154 1 89 1 25 1 155 1 78 1 127 1 313 1 314 1 198 1 222 1 326 1 
42 2 2 2 77 1 47 1 320 1 156 1 280 1 298 1 51 2 158 1 52 1 233 2 345 1 235 2 302 1 54 1 238 4 11 1 56 1 58 1 350 2 352 1 145 1 202 1 
84 1 327 1 80 1 93 1 154 1 257 1 25 1 348 1 
166 1 129 1 
166 1 129 1 
59 1 49 1 
59 1 49 1 
59 1 49 1 
166 1 129 1 162 1 
166 1 129 1 147 1 
166 2 129 2 59 1 284 1 301 1 49 1 
166 1 129 1 162 1 
166 1 129 1 162 1 
166 1 129 1 150 1 
166 1 129 1 150 1 
166 1 129 1 150 1 
224 1 166 1 327 2 171 1 41 1 289 1 329 1 154 2 139 1 63 1 184 1 25 2 195 1 117 1 322 1 80 2 208 1 129 1 186 1 131 1 188 1 93 2 147 1 251 1 
99 1 166 2 328 2 41 2 289 2 153 1 139 2 184 2 195 3 322 1 129 2 186 2 208 2 19 1 38 1 301 1 267 1 303 1 120 1 
237 1 331 1 104 1 
34 1 331 1 104 1 
271 1 113 1 237 2 34 1 55 1 104 3 
271 1 237 1 34 1 5 1 55 1 104 2 
271 1 237 1 34 1 55 2 104 2 
0 2 21 3 227 2 254 4 296 1 320 1 206 2 6 1 364 1 280 1 298 1 208 5 188 1 53 1 303 2 135 2 58 1 240 1 30 1 309 1 61 3 14 1 139 5 63 1 379 1 380 1 143 1 197 1 334 1 251 1 178 1 97 1 
0 6 21 8 23 1 227 6 254 7 362 5 296 6 320 3 206 6 364 1 6 2 280 3 298 3 208 9 258 1 28 1 303 5 58 3 212 5 30 2 240 2 61 9 140 1 139 9 14 1 63 4 379 2 351 1 141 1 142 1 380 3 197 1 334 1 178 2 97 3 
0 2 21 3 254 2 227 2 320 1 206 2 364 1 6 1 280 1 298 1 208 3 53 1 303 3 135 1 240 1 30 1 58 1 309 1 61 4 139 3 63 1 379 1 351 1 380 2 178 1 97 1 
0 4 21 5 23 1 227 4 254 3 320 2 206 4 364 1 6 1 280 2 298 2 208 4 53 1 303 4 135 2 240 1 30 1 58 2 309 1 61 7 139 4 63 2 379 1 351 1 141 1 142 1 380 3 178 1 97 2 
151 1 313 1 377 1 
313 1 242 1 
316 1 
313 1 198 1 326 1 
313 1 291 1 
313 1 326 1 
151 2 313 3 198 1 65 1 326 1 35 1 
270 2 225 1 58 1 375 1 252 1 172 1 60 1 103 1 320 1 247 1 343 1 158 2 235 3 7 1 233 4 302 3 238 7 
270 2 225 1 58 1 375 1 252 1 172 1 60 1 103 1 320 1 247 1 343 1 158 2 235 3 7 1 233 4 302 3 238 7 
270 2 225 1 58 1 375 1 252 1 124 1 172 1 60 1 103 1 320 1 247 1 343 1 158 2 235 3 7 1 233 4 302 3 238 7 
270 3 225 2 252 2 103 1 126 3 319 1 320 4 280 3 298 3 343 1 158 5 52 1 235 15 233 16 7 5 299 1 302 10 238 31 11 1 58 4 375 2 172 2 350 2 60 1 194 1 217 1 247 1 352 1 312 4 355 1 335 1 148 1 202 1 97 3 
270 2 225 1 11 2 58 1 375 1 252 1 123 1 172 1 350 4 60 1 103 1 320 1 352 2 343 1 158 3 52 2 7 1 235 4 233 5 355 1 68 1 302 4 238 9 202 2 
272 1 3 1 317 1 256 1 104 2 155 1 78 1 368 1 282 1 160 1 369 1 237 1 210 1 304 1 170 1 12 1 62 1 113 1 34 1 331 1 89 1 67 1 333 1 381 1 118 1 314 1 199 2 356 1 222 1 292 2 
20 1 272 1 317 1 256 1 104 2 155 1 78 1 368 2 282 1 369 1 237 1 210 1 304 1 372 1 170 1 12 1 113 1 62 1 216 1 34 1 331 1 89 1 333 1 381 1 118 1 314 1 199 3 356 1 222 1 292 3 
20 1 317 1 256 1 104 2 155 1 78 1 368 2 282 1 237 1 304 1 372 1 170 1 12 1 113 1 34 1 89 1 331 1 333 1 381 1 118 1 314 1 356 1 199 2 222 1 292 2 
272 1 317 2 256 2 78 1 155 1 210 1 29 1 306 1 326 1 168 1 373 1 170 2 138 1 216 1 89 1 265 1 313 1 314 1 119 1 199 1 356 2 222 1 292 1 
20 1 272 1 317 1 256 1 104 2 155 1 78 1 160 1 369 1 237 1 210 1 170 1 62 1 113 1 34 1 331 1 89 1 67 1 333 1 381 1 118 1 314 1 199 1 356 1 222 1 292 1 
107 1 
100 2 101 2 4 2 296 6 154 1 257 1 205 2 206 2 6 1 155 2 208 5 9 1 303 2 348 1 168 2 112 1 61 2 14 3 175 1 353 1 15 1 313 1 220 1 314 2 119 1 222 1 21 2 70 1 73 1 182 1 76 1 25 1 364 1 78 1 79 1 80 1 187 2 234 4 29 1 285 1 326 1 239 1 30 1 240 1 139 5 379 1 89 2 243 1 245 2 290 1 380 2 37 1 334 1 200 1 96 2 
101 1 73 1 182 1 154 1 296 2 257 1 25 1 157 1 80 1 79 1 208 3 234 2 285 1 348 1 139 3 14 1 243 1 175 1 15 1 37 1 220 1 200 1 
73 1 182 1 296 1 154 1 257 1 25 1 364 1 157 1 80 1 79 1 208 3 234 3 285 1 303 1 348 1 139 3 14 1 243 1 245 1 175 1 15 1 37 1 220 1 200 1 
101 1 73 1 182 1 154 1 296 2 257 1 205 1 25 1 364 1 157 1 80 1 79 1 208 3 234 3 285 1 303 1 348 1 14 1 139 3 243 1 245 1 175 1 15 1 37 1 220 1 200 1 
340 1 100 2 253 1 101 4 4 2 154 1 296 7 257 1 205 4 206 1 6 1 157 1 208 5 303 5 348 1 307 1 14 3 175 1 353 1 15 1 220 1 21 1 182 1 73 1 25 1 364 5 79 1 80 1 187 2 234 6 285 1 30 1 240 1 85 1 139 5 378 1 243 1 245 4 290 1 380 2 37 1 334 1 200 1 96 2 
100 2 101 2 4 2 154 1 296 4 257 1 205 2 206 1 6 1 208 4 303 2 348 1 61 2 14 2 175 1 353 1 15 1 220 1 21 1 182 1 73 1 76 1 25 1 364 1 80 1 79 1 187 2 234 4 285 1 30 1 240 1 139 4 243 1 245 2 290 1 380 2 37 1 334 1 200 1 96 2 
21 1 100 2 340 1 101 2 4 2 73 1 182 1 296 4 154 1 257 1 205 2 206 1 25 1 364 1 6 1 80 1 79 1 187 2 208 4 234 4 303 1 285 1 307 1 348 1 240 1 30 1 14 2 139 4 378 1 243 1 245 2 290 1 175 1 353 1 380 2 15 1 37 1 220 1 334 1 200 1 96 2 
21 1 100 2 340 1 101 2 4 2 73 1 182 1 296 4 154 1 257 1 205 2 206 1 25 1 364 1 6 1 80 1 79 1 187 2 208 4 234 4 303 1 285 1 307 1 348 1 240 1 30 1 14 2 139 4 378 1 243 1 245 2 290 1 175 1 353 1 380 2 15 1 37 1 220 1 334 1 200 1 96 2 
269 1 21 1 100 2 101 2 73 1 182 1 296 4 154 1 257 1 205 2 206 1 25 1 364 1 6 1 80 1 79 1 208 4 234 4 82 1 303 1 285 1 307 1 348 1 240 1 30 1 86 2 61 2 14 2 139 4 243 1 245 2 290 1 175 1 15 1 37 1 220 1 144 2 334 1 200 1 96 2 179 1 
21 1 100 2 340 1 253 1 101 3 4 2 73 1 182 1 154 1 296 5 257 1 205 3 206 1 25 1 364 1 6 1 80 1 79 1 187 2 208 4 234 5 303 1 285 1 307 1 348 1 240 1 30 1 14 2 139 4 378 1 243 1 245 3 290 1 175 1 353 1 380 2 15 1 37 1 220 1 334 1 200 1 96 2 
21 1 100 2 340 1 253 1 101 3 4 2 73 1 182 1 154 1 296 5 257 1 205 3 206 1 25 1 364 1 6 1 80 1 79 1 187 2 208 4 234 5 303 1 285 1 307 1 348 1 240 1 30 1 14 2 139 4 378 1 243 1 245 3 290 1 175 1 353 1 380 2 15 1 37 1 220 1 334 1 200 1 96 2 
100 2 101 2 154 1 296 4 257 1 205 2 206 1 6 1 208 4 303 1 348 1 61 2 14 2 175 1 15 1 220 1 269 1 21 1 182 1 73 1 76 1 25 1 364 1 80 1 79 1 234 4 285 1 30 1 240 1 86 2 139 4 243 1 245 2 290 1 37 1 334 1 144 2 200 1 96 2 
224 2 270 1 252 1 42 1 2 1 103 1 320 1 343 1 51 1 158 2 52 1 345 1 233 3 235 3 302 2 238 6 11 1 56 1 58 1 172 1 350 2 60 1 377 1 352 1 145 1 202 1 
224 1 273 1 42 11 2 11 46 1 126 3 320 1 280 2 298 1 158 1 51 4 52 2 7 1 235 6 345 1 233 8 302 2 134 1 108 1 238 14 57 1 11 2 56 2 58 2 350 4 194 1 114 1 64 1 352 2 312 3 335 1 202 2 97 2 
224 1 273 1 255 1 154 2 278 1 25 2 127 1 78 1 155 1 80 1 367 1 207 1 51 1 52 1 345 1 235 1 233 1 236 1 211 1 238 2 134 1 326 1 260 1 11 1 56 1 327 1 168 1 350 2 64 1 89 1 352 1 313 1 198 1 314 1 93 1 222 1 336 1 202 1 
252 1 42 7 2 7 255 2 154 3 103 1 155 3 298 2 343 1 158 4 51 7 52 3 345 3 7 4 211 1 302 8 56 3 11 3 349 2 168 1 58 3 172 1 350 6 60 1 64 1 352 3 313 2 314 3 222 2 20 1 270 1 224 2 273 1 69 2 71 1 278 1 320 3 25 3 78 2 127 2 280 2 80 1 367 2 323 2 324 1 235 10 233 10 286 2 134 1 83 1 238 20 326 2 327 1 241 2 89 3 198 2 93 1 202 3 97 2 
20 1 203 1 273 1 3 1 154 1 277 1 278 1 25 1 321 1 78 2 155 8 80 1 230 1 52 2 345 2 233 1 235 1 29 1 134 1 238 2 133 2 326 2 327 1 11 2 56 2 168 2 350 4 115 1 89 8 352 2 313 3 145 1 314 7 93 1 119 1 221 1 222 2 202 2 98 1 
42 1 2 1 154 1 25 1 320 1 366 1 280 1 298 1 80 1 158 1 51 1 52 1 345 1 233 1 235 2 302 1 371 1 238 3 11 1 56 1 327 1 58 1 350 2 64 1 352 1 93 1 357 1 202 1 97 1 
56 1 11 1 58 1 42 1 350 2 2 1 47 1 280 1 352 1 51 1 52 1 7 1 345 1 233 2 145 1 302 1 238 2 202 1 
56 1 11 1 42 1 350 2 2 1 320 1 156 1 352 1 298 1 158 1 51 1 52 1 345 1 235 2 145 1 302 1 238 2 202 1 
42 2 2 2 320 1 280 1 298 1 51 2 158 1 52 1 233 2 345 1 7 1 235 2 302 2 238 4 11 1 56 1 58 1 350 2 352 1 145 1 202 1 97 1 
56 1 11 1 58 1 42 1 350 2 2 1 115 1 47 1 280 1 352 1 51 1 52 1 7 1 345 1 233 2 302 1 238 2 202 1 
56 1 11 1 42 1 350 2 2 1 115 1 320 1 156 1 352 1 298 1 158 1 51 1 52 1 345 1 235 2 302 1 238 2 202 1 
42 2 2 2 320 1 280 1 298 1 51 2 158 1 52 1 233 2 345 1 7 1 235 2 302 2 238 4 11 1 56 1 58 1 350 2 115 1 352 1 202 1 97 1 
42 2 2 2 320 1 280 1 298 1 51 2 158 1 52 1 233 2 345 1 7 1 235 2 302 2 238 4 11 1 56 1 58 1 350 2 352 1 202 1 97 1 
224 1 273 1 255 1 154 1 25 1 127 1 78 1 155 1 367 1 52 1 233 1 345 1 235 1 134 1 238 2 326 1 56 1 11 1 168 1 350 2 241 1 89 1 352 1 313 1 198 1 314 1 222 1 202 1 
224 1 273 1 154 1 48 1 25 1 127 1 78 1 155 1 52 1 233 1 345 1 235 1 134 1 238 2 326 1 56 1 11 1 110 1 168 1 111 1 350 2 89 1 352 1 313 1 198 1 314 1 222 1 202 1 
42 2 2 2 320 1 280 1 298 1 51 2 158 1 52 1 233 2 345 1 7 1 235 2 302 2 238 4 11 1 56 1 58 1 350 2 64 1 352 1 202 1 97 1 
42 2 2 2 3 1 255 1 154 1 320 1 25 1 280 1 127 1 78 1 155 1 298 1 158 1 51 2 367 1 323 1 52 1 235 2 7 1 233 2 345 1 302 2 238 4 326 1 56 1 11 1 58 1 350 2 241 1 89 1 352 1 313 1 198 1 314 1 222 1 202 1 97 1 
42 1 2 1 154 1 320 1 25 1 366 1 280 1 298 1 80 1 51 1 52 1 235 1 7 1 345 1 233 2 302 1 371 1 238 3 11 1 56 1 327 1 58 1 350 2 64 1 352 1 248 1 93 1 202 1 97 1 
252 1 103 1 341 1 298 4 343 1 158 4 50 1 52 3 344 1 7 4 106 1 302 8 10 1 347 1 11 3 58 5 167 4 215 1 350 6 172 1 60 1 218 1 352 3 312 4 355 1 18 1 270 1 123 1 274 1 275 1 183 1 320 5 126 3 279 2 280 4 233 20 235 21 238 41 194 3 330 1 335 1 202 3 97 4 
270 1 252 1 123 1 274 1 183 1 275 1 103 1 341 1 279 2 126 3 320 4 280 4 298 3 343 1 50 1 158 4 344 1 52 4 235 18 233 20 7 3 106 1 302 7 10 1 238 38 347 1 11 4 167 4 58 5 215 1 172 1 350 8 60 1 330 1 194 3 218 1 352 4 312 4 355 2 18 1 335 1 202 4 97 4 
270 1 252 1 123 1 183 1 275 1 103 1 341 1 279 1 126 4 320 8 280 7 298 7 343 1 50 1 158 7 344 1 52 2 235 25 233 27 7 7 106 1 302 14 10 1 108 2 238 52 347 1 11 2 167 4 58 8 215 1 172 1 350 4 60 1 194 2 218 1 352 2 312 4 355 1 18 1 335 2 202 2 97 7 
123 1 44 1 274 1 183 1 275 1 279 1 126 1 320 3 280 3 298 3 158 3 344 2 52 2 235 10 233 9 7 3 106 1 302 6 238 19 11 2 167 2 58 3 350 4 194 1 352 2 312 2 18 1 335 1 202 2 97 3 
123 1 183 1 275 1 320 2 279 2 126 2 341 1 280 3 298 2 50 1 158 2 344 1 52 3 7 2 235 12 233 14 106 2 302 4 238 26 10 1 347 1 11 3 167 4 58 3 215 1 350 6 194 2 218 1 352 3 312 2 355 2 18 1 202 3 97 3 
166 1 90 1 186 1 129 1 41 1 289 1 153 1 301 1 120 1 184 1 
117 1 147 1 
166 1 31 1 186 1 129 1 361 1 41 1 289 1 376 1 184 1 
162 1 164 1 
128 1 284 1 150 1 
99 1 166 1 328 1 41 1 289 1 153 1 139 1 184 1 195 2 322 1 208 1 129 1 186 1 38 1 301 1 267 1 303 1 120 1 
99 1 166 1 328 1 41 1 289 1 153 1 139 1 184 1 195 2 322 1 208 1 129 1 186 1 38 1 301 1 267 1 303 1 120 1 
99 1 166 1 328 1 41 1 289 1 153 1 139 1 184 1 195 2 322 1 208 1 129 1 186 1 38 1 301 1 267 1 303 1 120 1 
162 1 164 1 284 1 
162 1 164 1 284 1 
128 1 150 1 
128 1 284 1 150 1 
171 1 131 1 
224 1 254 1 41 1 154 2 184 1 25 2 80 2 208 1 186 1 129 1 131 1 188 1 166 1 327 2 328 1 171 1 289 1 329 1 139 1 63 1 195 1 117 1 93 2 267 1 147 1 149 1 251 1 
203 1 273 1 181 1 72 1 276 1 154 2 25 2 78 1 155 2 80 2 105 1 52 1 345 1 233 1 235 1 134 1 238 2 133 2 326 1 11 1 56 1 350 2 64 1 89 2 352 1 66 1 313 1 314 2 222 1 202 1 98 1 
20 1 137 1 3 1 113 1 256 1 62 1 34 1 331 1 89 2 104 2 78 1 155 2 381 1 118 1 314 2 161 1 237 1 222 1 223 1 
20 1 113 1 256 1 62 1 34 1 331 1 89 1 104 2 155 1 196 1 78 1 381 1 118 1 314 1 237 1 222 1 223 1 
168 1 373 1 137 1 256 1 89 1 78 1 155 1 313 1 314 1 119 1 29 1 222 1 189 1 326 1 
20 1 137 1 113 1 256 1 62 1 34 1 331 1 89 1 104 2 78 1 155 1 381 1 118 1 314 1 161 1 237 1 222 1 223 1 
244 1 
21 1 283 1 377 1 303 1 177 1 206 1 364 1 
21 1 4 1 296 1 206 1 6 1 364 1 187 1 208 1 303 2 240 1 30 1 61 1 14 1 139 1 353 1 380 1 334 1 
0 6 151 2 294 2 204 1 3 1 296 5 206 8 6 4 155 3 298 2 208 5 303 8 109 2 168 1 169 2 58 2 263 1 61 12 14 3 313 10 220 2 314 3 222 3 177 1 122 2 21 9 227 6 70 1 228 2 125 1 320 2 364 2 78 4 280 2 283 1 132 2 286 2 326 3 30 4 240 4 136 1 193 1 32 2 139 5 242 3 379 2 89 3 35 1 246 2 380 6 334 4 198 3 291 2 97 2 
0 5 294 1 21 8 227 5 70 1 296 1 126 1 206 5 341 1 320 2 6 2 364 2 280 2 298 2 281 1 50 1 208 1 303 5 10 1 347 1 240 2 30 2 58 2 215 1 61 6 194 1 139 1 14 1 33 1 379 1 380 3 312 1 334 2 122 2 97 2 
294 1 21 2 252 1 340 1 154 1 25 1 206 2 320 1 6 1 80 1 208 1 371 1 348 1 327 1 240 1 30 1 58 2 172 1 60 1 173 1 139 1 174 1 332 1 176 1 334 1 93 1 121 1 122 2 
30 1 240 1 21 1 206 1 6 1 364 1 283 1 334 1 303 1 177 1 
0 5 294 1 58 2 21 5 227 5 61 10 206 5 320 2 280 2 298 2 380 5 286 1 303 5 122 2 97 2 
208 1 139 1 296 1 14 1 303 1 364 1 
21 2 70 2 45 1 296 4 206 2 6 2 78 1 155 4 208 3 29 1 9 1 326 1 240 2 30 2 168 2 263 2 112 1 193 1 14 2 139 3 89 4 379 2 351 1 311 1 313 1 334 1 314 4 119 1 222 1 
224 1 273 1 255 1 154 3 25 3 185 1 155 1 78 1 127 1 80 2 367 1 52 1 235 1 345 1 371 2 238 1 326 1 327 2 56 1 11 1 168 1 350 2 173 1 241 1 89 1 352 1 313 1 314 1 198 1 93 2 222 1 202 1 
270 1 0 2 30 1 240 1 21 1 227 2 70 1 61 4 379 1 206 2 6 1 364 2 380 2 334 1 303 4 
186 1 41 1 192 1 
186 1 41 1 131 1 153 1 229 1 
186 1 41 1 192 1 
186 1 41 1 192 1 
186 1 41 1 191 1 
186 1 41 1 191 1 
186 1 41 1 191 1 
186 1 41 1 
166 1 129 1 
270 1 11 2 58 1 252 1 350 4 172 1 60 1 103 1 320 1 352 2 343 1 158 2 52 2 235 4 233 4 7 1 355 1 302 3 238 8 202 2 
270 1 58 1 252 1 172 1 60 1 377 1 103 1 320 1 343 1 158 2 235 3 233 3 302 2 238 6 
11 1 58 1 350 2 102 1 320 1 280 1 298 1 352 1 158 1 52 1 235 2 233 2 7 1 302 2 238 4 202 1 97 1 
58 1 194 1 320 1 126 1 280 1 298 1 158 1 312 2 235 4 233 3 7 1 302 2 335 1 238 7 97 1 
270 1 252 2 103 1 126 2 320 3 280 2 298 2 343 1 158 5 52 2 7 4 233 11 235 12 302 9 238 23 108 1 11 2 58 3 172 2 350 4 60 1 114 1 352 2 312 2 16 1 355 2 335 1 202 2 97 2 
235 1 312 1 238 1 
233 1 238 1 126 1 
11 1 58 1 350 2 102 1 320 1 280 1 352 1 298 1 158 2 52 1 235 3 233 3 7 1 302 3 286 1 238 6 202 1 97 1 
123 1 126 1 341 1 320 2 280 2 298 2 158 1 50 1 52 1 7 1 235 6 233 6 302 2 238 12 10 1 347 1 11 1 58 2 215 1 350 2 194 1 352 1 312 1 202 1 97 2 
58 1 252 1 172 1 60 1 320 1 158 1 233 3 235 3 7 1 302 2 238 6 
11 1 252 1 172 1 350 2 103 1 352 1 343 1 158 1 52 1 233 1 7 1 16 1 235 2 355 1 302 2 238 3 202 1 
270 1 123 1 252 1 103 1 320 1 126 1 343 1 158 2 52 1 235 4 233 4 302 2 238 8 347 1 11 1 58 1 350 2 172 1 60 1 194 1 352 1 312 1 202 1 
270 1 252 1 123 1 102 1 103 1 320 1 126 1 280 1 343 1 158 2 52 2 235 5 233 6 7 1 302 3 238 11 347 1 11 2 58 2 172 1 350 4 60 1 194 1 352 2 312 2 335 1 202 2 97 1 
270 1 252 1 123 1 102 1 103 1 126 1 341 1 320 3 280 2 298 2 343 1 50 1 158 3 52 3 7 1 235 10 233 9 302 4 238 19 10 1 347 1 11 3 58 3 215 1 172 1 350 6 60 1 194 1 352 3 312 1 355 1 202 3 97 2 
270 1 252 1 123 1 102 1 103 1 126 1 341 1 320 2 280 2 298 1 343 1 158 3 50 1 52 3 7 2 235 7 233 10 302 5 238 17 10 1 347 1 11 3 58 3 215 1 172 1 350 6 60 1 194 1 352 3 312 1 355 1 202 3 97 2 
270 1 123 1 252 1 103 1 320 1 126 1 343 1 158 2 52 1 235 4 233 4 302 2 238 8 347 1 11 1 58 1 350 2 172 1 60 1 194 1 352 1 312 1 202 1 
123 1 126 1 341 1 320 2 280 2 298 2 158 1 50 1 52 1 7 1 235 6 233 6 302 2 238 12 10 1 347 1 11 1 58 2 215 1 350 2 194 1 352 1 312 1 202 1 97 2 
270 1 252 1 123 1 102 1 103 1 126 1 341 1 320 2 280 2 298 1 343 1 50 1 158 3 52 4 7 2 235 8 233 10 302 5 238 18 10 1 347 1 11 4 58 3 215 1 172 1 350 8 60 1 194 1 352 4 312 1 355 2 202 4 97 2 
123 1 274 1 126 1 341 1 320 2 280 3 298 2 50 1 158 3 52 4 7 3 235 7 233 9 302 6 238 16 10 1 347 1 11 4 58 3 215 1 350 8 194 1 352 4 312 1 355 2 202 4 97 3 
58 1 252 3 172 3 60 1 103 2 320 1 343 1 158 3 235 4 7 3 233 3 302 6 238 7 
270 1 252 1 123 1 274 1 103 1 126 1 341 1 320 2 280 2 298 1 343 1 50 1 158 3 52 4 7 1 235 8 233 10 302 4 238 18 10 1 347 1 11 4 58 3 215 1 172 1 350 8 60 1 194 1 352 4 312 1 355 2 202 4 97 2 
11 1 58 2 123 1 252 2 350 2 172 2 60 1 332 1 320 2 352 1 158 3 52 1 7 2 233 5 235 5 302 5 238 10 202 1 
11 1 58 1 123 1 350 2 280 1 352 1 52 1 233 2 7 1 302 1 238 2 202 1 
11 1 58 1 123 1 350 2 320 1 280 1 298 1 352 1 158 1 52 1 235 2 233 2 7 1 302 2 238 4 202 1 97 1 
11 3 123 1 252 1 350 6 172 1 274 1 352 3 158 1 52 3 16 1 235 2 7 1 233 1 355 1 302 2 238 3 202 3 
270 1 252 3 123 1 102 1 274 1 103 1 126 3 320 5 280 3 298 3 343 1 158 7 52 5 235 18 233 16 7 5 299 1 302 12 238 34 11 5 58 5 172 3 350 10 60 2 194 1 217 1 352 5 16 1 312 4 355 2 148 1 335 1 202 5 97 3 
224 1 175 1 80 1 226 1 154 1 25 1 40 1 
224 1 165 1 180 1 226 1 152 1 154 1 25 1 175 1 219 1 80 1 8 1 40 1 
78 1 155 1 168 1 313 1 377 1 314 1 119 1 29 1 222 1 89 1 326 1 
224 1 327 1 168 1 255 1 154 2 278 1 89 1 25 2 127 1 78 1 155 1 80 1 313 1 198 1 314 1 93 1 222 1 326 1 
224 1 109 1 327 2 263 1 182 1 255 1 154 2 257 1 278 1 89 1 25 2 127 1 78 1 155 1 80 2 313 3 291 1 198 2 314 1 93 1 222 1 348 1 326 2 
224 1 182 1 154 2 257 1 278 1 25 2 155 2 78 1 127 1 80 2 326 2 348 1 308 1 327 2 109 1 110 1 263 1 89 2 313 3 314 2 198 2 291 1 93 1 222 1 
308 1 109 1 168 1 151 1 214 1 263 1 139 2 264 1 296 1 242 1 89 3 364 1 78 1 155 3 208 2 220 1 313 4 291 1 198 1 314 3 303 1 222 1 326 1 
308 1 109 1 168 1 151 1 263 1 139 2 296 1 242 1 89 3 364 1 78 1 155 3 246 1 208 2 220 1 313 4 291 1 198 1 314 3 303 1 222 1 326 1 
78 1 155 1 314 1 221 1 222 1 89 1 
358 1 168 1 75 1 89 1 35 1 155 1 78 2 313 1 314 1 198 1 222 1 337 1 326 1 
252 1 42 1 3 1 2 1 255 1 154 2 103 1 155 1 343 1 51 1 158 2 52 2 345 2 302 2 349 1 56 2 11 2 58 1 350 4 172 1 60 1 64 1 352 2 313 1 314 1 222 1 224 2 270 1 276 1 278 1 25 2 320 1 78 1 127 1 80 1 367 1 323 1 233 3 235 3 238 6 326 1 327 1 241 1 89 1 198 1 93 1 202 2 
21 1 151 1 254 1 228 1 296 2 206 1 364 1 6 2 155 1 208 3 283 1 303 1 132 1 168 1 240 2 30 2 169 1 193 1 139 3 14 1 242 1 89 1 246 1 313 2 220 1 334 2 314 1 177 1 
78 2 155 2 151 1 136 1 313 2 3 1 198 1 314 2 221 1 222 1 89 2 326 1 35 1 
308 1 168 1 3 1 89 4 78 1 155 4 91 1 313 1 314 4 119 1 29 1 222 1 326 1 
358 1 190 1 71 1 75 1 89 1 155 1 78 2 313 1 314 1 346 1 198 1 222 1 326 1 
78 1 155 1 168 1 118 1 314 1 34 1 222 1 331 1 89 1 104 1 
20 1 203 1 3 1 181 1 89 2 155 2 78 1 313 1 314 2 222 1 326 1 
168 1 203 1 263 1 3 1 89 5 155 5 78 2 321 1 230 1 91 1 313 3 314 4 119 1 29 1 222 2 326 2 
168 1 203 1 263 1 3 1 89 5 155 5 78 2 321 1 91 1 313 3 314 4 119 1 29 1 222 2 287 1 326 2 
224 1 327 1 168 1 110 1 154 2 278 1 89 1 25 2 127 1 78 1 155 1 80 1 313 1 198 1 314 1 93 1 222 1 326 1 
358 1 263 1 75 1 89 1 35 1 155 1 78 2 313 1 314 1 198 1 222 1 337 1 326 1 
224 1 342 1 262 1 249 1 288 1 
224 1 339 1 254 1 262 2 295 1 182 1 139 2 257 1 364 1 342 2 15 1 310 1 208 2 220 1 146 1 303 1 249 2 288 1 348 1 
72 1 154 1 25 1 342 1 66 1 80 1 105 1 249 1 288 1 
295 1 146 1 288 1 
12 1 282 1 377 1 304 1 
272 1 12 1 282 1 210 1 199 1 304 1 292 1 
170 1 356 1 292 1 
272 1 12 1 24 2 231 1 282 1 160 1 210 1 199 3 304 1 292 3 201 1 338 1 
272 1 374 1 368 1 12 1 282 1 210 1 199 2 304 1 292 2 
272 1 360 1 12 1 297 1 331 1 104 1 160 1 210 1 237 1 199 1 292 1 
272 1 12 1 282 1 160 1 210 1 199 1 292 1 
272 1 282 2 160 1 210 1 199 1 304 1 292 1 
272 2 12 1 282 1 209 1 160 1 210 2 199 2 95 1 292 2 39 1 
272 1 213 1 360 1 12 2 159 1 368 2 36 1 282 1 160 1 210 1 199 3 304 1 292 3 
272 1 12 1 113 1 34 1 363 1 331 1 104 2 368 1 282 1 160 1 210 1 237 1 199 2 304 1 292 2 
272 2 374 1 360 1 12 2 74 1 368 2 36 1 282 1 160 1 210 2 199 4 304 1 292 4 
272 1 12 1 282 1 160 1 210 1 199 1 304 1 292 1 
272 1 360 1 12 3 24 1 231 1 368 2 36 1 282 2 210 1 199 4 250 1 304 2 201 1 292 4 
272 1 12 1 13 1 368 1 282 1 160 1 210 1 199 2 94 1 305 1 304 1 292 2 
272 1 12 1 24 2 81 1 231 2 282 1 160 1 210 1 199 3 304 1 201 1 292 3 
12 2 26 1 232 1 354 2 
272 1 160 1 163 1 210 1 199 1 292 1 
272 1 213 1 368 1 12 1 282 1 160 1 210 1 199 2 304 1 292 2 
92 1 
272 1 12 1 282 1 160 1 210 1 199 1 304 1 292 1 
272 1 213 1 368 1 12 1 282 1 160 1 24 1 210 1 199 3 304 1 292 3 
360 1 36 1 12 1 250 1 
12 1 282 1 

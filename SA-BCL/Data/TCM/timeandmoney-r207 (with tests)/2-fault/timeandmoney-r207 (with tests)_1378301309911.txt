#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V ERROR java.lang.NullPointerException 288 0 14 
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 288 0 14 212 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException 288 0 14 (101,180) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException 288 0 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException 288 0 14 (101,180) (101,180) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V ERROR java.lang.NullPointerException 288 
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V ERROR java.lang.NullPointerException 288 331 32 
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException 288 0 14 (101,180) (101,180) 153 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 288 0 14 212 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 288 248 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 288 248 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 288 248 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 288 248 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 288 248 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | STATEMENT | 4967 | stmt -> ;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2101 | = null
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
55 2 293 2 296 1 143 1 231 1 65 2 67 2 16 9 69 2 314 2 243 4 160 1 25 1 162 1 206 9 277 1 323 1 213 3 249 1 215 1 326 1 91 2 251 1 173 1 221 1 220 1 333 5 291 6 
55 2 293 2 296 1 143 1 231 1 65 2 67 2 16 9 69 2 314 2 243 4 160 1 25 1 162 1 206 9 277 1 323 1 213 3 249 1 215 1 326 1 251 1 91 2 173 1 221 1 220 1 333 5 291 6 
55 2 293 2 296 1 143 1 231 1 65 2 67 2 16 10 69 2 314 2 243 5 160 1 25 1 162 1 206 10 277 1 323 1 213 4 249 1 215 1 326 1 251 1 91 2 173 1 221 1 220 1 333 6 291 7 
55 2 293 2 296 1 143 1 231 1 65 2 67 2 16 7 69 2 314 2 243 3 160 1 162 1 206 7 277 1 323 1 213 2 249 1 215 1 326 1 251 1 91 1 173 1 221 1 220 1 333 4 291 4 
55 1 243 2 293 1 160 1 25 1 206 4 323 1 213 1 65 1 326 1 16 4 69 1 91 2 173 1 221 1 291 3 333 3 314 1 
55 1 293 1 160 1 225 1 206 2 296 1 143 1 65 1 131 1 326 1 16 2 67 1 148 1 69 1 221 1 333 1 
243 1 293 2 160 1 206 3 65 2 213 1 326 1 16 3 67 1 221 1 220 1 333 2 291 1 
55 1 293 2 65 2 67 1 16 9 69 1 314 1 243 4 160 1 25 1 162 1 206 9 323 1 280 1 213 3 326 1 251 1 91 2 286 1 173 1 221 1 220 1 291 7 333 5 
55 1 293 2 65 2 67 1 16 9 69 1 314 1 243 4 160 1 25 1 162 1 206 9 323 1 280 1 213 3 326 1 251 1 91 2 286 1 173 1 221 1 220 1 291 7 333 5 
22 1 178 1 52 1 
178 1 179 2 20 1 
0 1 14 1 288 1 
0 1 14 1 288 1 212 1 
0 1 14 1 180 1 288 1 
242 1 22 1 178 1 226 1 27 1 276 1 229 1 283 1 36 1 330 1 172 1 239 1 253 1 334 1 
0 1 288 1 
216 1 152 1 276 1 172 1 198 1 
22 1 216 1 178 1 276 2 172 2 50 1 174 1 198 1 
216 1 276 1 172 1 
0 1 14 1 180 1 276 1 172 1 101 1 288 1 198 1 
178 1 
22 1 216 1 250 1 178 1 276 2 172 2 174 1 198 1 
98 1 22 1 178 1 276 5 163 1 298 1 128 2 189 1 216 2 284 1 328 2 43 2 172 5 312 1 241 1 51 1 174 1 198 2 315 1 
85 1 190 1 
85 1 190 1 
177 1 90 1 
177 1 90 1 
177 1 90 1 
85 1 190 1 62 1 
85 1 190 1 62 1 
85 1 190 1 139 1 
85 2 190 2 177 1 90 1 122 1 186 1 
85 1 190 1 62 1 
85 1 190 1 295 1 
85 1 190 1 295 1 
85 1 190 1 295 1 
85 1 190 1 303 1 245 1 150 1 151 1 276 1 183 1 172 1 288 1 199 1 
245 2 178 1 276 2 183 2 104 1 11 1 186 1 190 2 85 2 83 1 303 3 150 1 151 2 169 1 172 2 114 1 47 1 199 2 74 2 
55 1 69 1 314 1 
55 1 225 1 69 1 
230 1 225 1 252 1 69 3 218 1 314 2 
230 1 225 1 252 1 69 2 72 1 314 1 
230 1 225 1 252 2 69 2 314 1 
99 1 178 2 179 3 9 1 105 2 142 1 189 2 191 1 70 1 198 4 75 1 20 1 316 1 22 1 276 5 246 1 209 1 80 1 324 1 247 1 128 1 35 1 325 2 216 1 328 1 284 3 329 1 43 1 172 5 290 2 51 1 174 1 
56 1 99 3 178 5 179 9 187 1 142 3 189 6 144 1 191 3 152 5 70 2 312 1 116 5 198 7 155 1 75 3 20 3 316 4 76 1 22 1 319 1 276 9 324 3 247 1 128 2 35 2 325 6 216 6 328 2 284 8 43 2 172 9 290 6 174 1 51 1 
99 1 178 3 179 4 9 1 105 1 142 1 189 2 191 1 70 1 312 1 198 2 75 1 20 2 316 1 22 1 276 3 324 1 128 1 35 1 325 2 328 1 284 3 329 1 43 1 172 3 290 2 
56 1 99 2 178 4 179 7 9 1 105 2 142 2 189 4 191 2 70 1 312 1 198 3 155 1 75 2 20 3 316 2 76 1 22 1 276 4 324 2 128 1 35 1 325 4 328 1 284 5 43 1 329 1 172 4 290 4 
66 1 300 1 4 1 285 1 197 1 
300 1 45 1 
300 1 86 1 52 1 
120 1 300 1 
10 1 
300 1 4 1 
300 3 86 2 4 1 235 1 261 1 197 1 
1 1 244 1 3 7 138 1 263 1 185 1 30 2 324 1 106 2 267 1 68 3 191 1 17 1 306 3 170 1 19 1 97 4 
1 1 244 1 3 7 138 1 263 1 185 1 30 2 324 1 106 2 267 1 68 3 191 1 17 1 306 3 170 1 19 1 97 4 
1 1 244 1 3 7 138 1 263 1 140 1 185 1 30 2 324 1 106 2 267 1 68 3 191 1 17 1 306 3 170 1 19 1 97 4 
1 2 99 3 3 31 138 2 263 1 103 1 61 1 185 1 142 3 106 5 188 1 267 1 68 15 17 1 191 4 306 10 307 1 196 1 19 2 75 3 23 4 244 5 207 1 211 3 30 3 324 4 37 1 87 1 89 1 44 2 171 1 170 2 95 1 97 16 
1 1 3 9 138 1 263 1 103 2 185 1 106 3 188 1 68 4 191 1 17 1 110 1 306 4 307 2 154 1 19 1 244 1 207 2 30 2 324 1 89 2 44 4 170 1 97 5 
55 1 293 1 294 1 225 1 58 1 12 1 65 1 64 1 145 1 16 2 67 1 149 1 69 2 71 1 113 2 314 1 160 1 161 1 206 2 208 1 33 2 326 1 134 1 92 2 218 1 46 1 221 1 137 1 333 1 291 1 222 1 
55 1 293 1 294 1 225 1 58 1 141 1 65 1 64 1 145 1 16 3 67 1 149 1 71 1 69 2 113 1 314 1 159 1 160 1 206 3 33 1 134 1 167 1 92 1 218 1 46 1 221 1 137 1 333 1 291 2 222 1 
55 1 294 1 225 1 58 1 141 1 67 1 16 2 149 1 71 1 69 2 113 1 314 1 159 1 160 1 206 2 33 1 134 1 92 1 46 1 218 1 221 1 137 1 333 1 291 2 222 1 
293 1 294 2 4 1 58 1 299 1 65 1 300 1 16 1 67 2 302 1 193 1 71 2 113 1 201 1 200 1 206 1 281 1 33 1 134 1 167 1 92 1 46 2 94 1 
55 1 293 1 225 1 294 1 161 1 58 1 206 1 141 1 64 1 65 1 145 1 33 1 67 1 326 1 16 1 134 1 149 1 69 2 71 1 92 1 113 1 218 1 46 1 137 1 314 1 222 1 
111 1 
258 2 259 2 178 2 4 1 179 2 262 1 189 2 13 1 193 1 109 1 113 2 273 1 20 2 22 1 276 5 27 1 123 2 283 1 128 1 35 1 33 2 214 2 36 1 39 2 40 2 216 6 134 1 284 2 43 1 51 1 226 1 58 1 59 1 229 1 63 2 299 2 300 1 302 1 238 1 239 1 311 1 158 1 242 1 318 4 321 1 327 1 328 1 330 1 172 5 92 2 254 1 253 1 174 3 256 1 334 1 
158 1 242 1 258 1 318 2 226 1 59 1 27 1 276 3 229 1 283 1 13 1 36 1 250 1 216 2 109 1 330 1 172 3 239 1 311 1 253 1 174 1 334 1 
226 1 178 1 59 1 229 1 13 1 109 1 239 1 311 1 242 1 158 1 22 1 318 3 276 3 27 1 283 1 36 1 216 1 39 1 250 1 330 1 172 3 253 1 174 1 334 1 
258 1 226 1 178 1 59 1 229 1 63 1 13 1 109 1 239 1 311 1 242 1 158 1 22 1 318 3 276 3 27 1 283 1 36 1 250 1 216 2 39 1 330 1 172 3 253 1 174 1 334 1 
258 4 259 2 178 5 102 1 13 1 189 1 109 1 112 1 273 1 20 2 22 5 24 1 27 1 276 5 123 2 283 1 128 1 36 1 214 2 216 7 39 4 40 2 284 1 43 1 51 1 226 1 59 1 228 1 229 1 63 4 239 1 311 1 310 1 242 1 158 1 318 6 321 1 250 1 328 1 330 1 172 5 253 1 174 3 334 1 
258 2 259 2 178 2 179 2 262 1 13 1 189 1 109 1 273 1 20 2 22 1 27 1 276 4 123 2 283 1 128 1 36 1 214 2 40 2 216 4 39 2 284 1 43 1 51 1 226 1 59 1 229 1 63 2 239 1 311 1 242 1 158 1 318 4 321 1 328 1 330 1 172 4 253 1 174 2 334 1 
258 2 259 2 178 1 226 1 59 1 229 1 63 2 189 1 13 1 109 1 112 1 239 1 311 1 310 1 273 1 20 2 242 1 158 1 22 1 318 4 24 1 321 1 276 4 27 1 123 2 283 1 128 1 214 2 36 1 39 2 216 4 40 2 284 1 328 1 43 1 330 1 172 4 253 1 174 2 51 1 334 1 
258 2 259 2 178 1 226 1 59 1 229 1 63 2 189 1 13 1 109 1 112 1 239 1 311 1 310 1 273 1 20 2 242 1 158 1 22 1 318 4 24 1 321 1 276 4 27 1 123 2 283 1 128 1 214 2 36 1 39 2 216 4 40 2 284 1 328 1 43 1 330 1 172 4 253 1 174 2 51 1 334 1 
258 2 178 1 226 1 179 2 59 1 229 1 63 2 189 1 13 1 146 1 109 1 236 2 239 1 311 1 273 1 275 1 242 1 158 1 22 1 318 4 24 1 276 4 27 1 123 2 283 1 128 1 82 2 130 1 214 2 36 1 39 2 216 4 284 1 328 1 43 1 330 1 172 4 253 1 174 2 51 1 334 1 
258 3 259 2 178 1 226 1 59 1 228 1 229 1 63 3 189 1 13 1 112 1 109 1 239 1 311 1 310 1 273 1 20 2 242 1 158 1 22 1 318 5 24 1 321 1 276 4 27 1 123 2 283 1 128 1 214 2 36 1 40 2 216 5 39 3 284 1 328 1 43 1 330 1 172 4 253 1 174 2 51 1 334 1 
258 3 259 2 178 1 226 1 59 1 228 1 229 1 63 3 189 1 13 1 112 1 109 1 239 1 311 1 310 1 273 1 20 2 242 1 158 1 22 1 318 5 24 1 321 1 276 4 27 1 123 2 283 1 128 1 214 2 36 1 40 2 216 5 39 3 284 1 328 1 43 1 330 1 172 4 253 1 174 2 51 1 334 1 
258 2 178 1 179 2 262 1 13 1 189 1 109 1 273 1 22 1 27 1 276 4 123 2 283 1 128 1 36 1 214 2 216 4 39 2 284 1 43 1 51 1 226 1 59 1 229 1 63 2 146 1 236 2 239 1 311 1 242 1 158 1 318 4 82 2 328 1 330 1 172 4 253 1 174 2 334 1 
223 1 1 1 99 4 3 41 263 1 61 3 103 3 185 1 142 4 188 1 106 4 233 1 15 1 68 21 17 1 147 2 191 5 305 1 110 1 306 8 307 3 237 1 19 1 75 4 23 4 244 4 121 1 205 1 124 1 278 1 207 3 79 4 210 1 30 1 211 3 282 1 324 5 129 1 37 1 132 1 89 3 44 6 97 20 
223 1 1 1 99 4 3 38 263 1 61 3 103 4 185 1 142 4 188 2 106 4 233 1 15 1 68 18 17 1 147 2 191 4 305 1 110 1 306 7 307 4 237 1 19 1 75 3 23 4 244 3 121 1 205 1 124 1 278 1 207 4 79 4 210 1 30 1 211 3 282 1 324 5 129 1 37 1 132 1 89 4 44 8 97 20 
223 1 1 1 99 7 3 52 263 1 61 2 103 2 185 1 142 7 188 1 106 7 233 1 15 1 68 25 17 1 147 1 191 8 108 2 305 1 110 1 306 14 307 2 237 1 19 1 75 7 23 4 244 7 205 1 278 1 207 2 79 4 210 1 30 1 211 4 282 1 324 8 129 1 37 2 132 1 89 2 44 4 97 27 
223 2 99 3 3 19 227 1 61 1 103 2 142 3 106 3 233 1 68 10 147 1 191 3 305 1 110 1 306 6 307 2 237 1 75 3 23 2 244 3 121 1 207 2 79 2 210 1 211 1 324 3 37 1 89 2 44 4 97 9 
223 1 99 3 3 26 103 3 61 2 142 3 188 2 106 2 233 1 15 1 68 12 191 2 147 2 306 4 305 1 110 1 307 3 237 1 75 2 23 2 244 2 205 1 278 1 207 3 79 4 210 2 211 2 282 1 324 3 129 1 132 1 89 3 44 6 97 14 
165 1 62 1 
122 1 295 1 31 1 
85 1 190 1 245 1 18 1 151 1 183 1 114 1 11 1 199 1 186 1 
93 1 139 1 
85 1 190 1 245 1 100 1 151 1 182 1 287 1 183 1 199 1 
245 1 178 1 276 1 183 1 11 1 186 1 190 1 85 1 83 1 303 2 150 1 151 1 169 1 172 1 114 1 47 1 199 1 74 1 
245 1 178 1 276 1 183 1 11 1 186 1 190 1 85 1 83 1 303 2 150 1 151 1 169 1 172 1 114 1 47 1 199 1 74 1 
245 1 178 1 276 1 183 1 11 1 186 1 190 1 85 1 83 1 303 2 150 1 151 1 169 1 172 1 114 1 47 1 199 1 74 1 
165 1 122 1 62 1 
165 1 122 1 62 1 
295 1 31 1 
122 1 295 1 31 1 
301 1 320 1 
320 1 245 1 276 1 183 1 139 1 209 1 80 1 32 1 190 1 85 1 83 1 301 1 303 1 151 1 93 1 172 1 288 1 331 1 199 1 198 1 74 1 316 1 
292 1 176 1 57 1 4 1 3 2 58 1 103 1 12 2 232 1 300 1 68 1 307 1 113 2 308 1 115 1 274 1 242 2 322 1 207 1 127 1 33 2 36 2 134 1 89 1 44 2 330 2 92 2 255 1 96 1 97 1 257 1 
55 1 317 1 225 1 294 1 58 1 208 1 141 1 64 1 33 2 134 1 149 1 69 2 92 2 113 2 218 1 49 1 272 1 137 1 314 1 
55 1 202 1 225 1 294 1 58 1 141 1 64 1 33 1 134 1 149 1 69 2 92 1 113 1 218 1 272 1 137 1 314 1 
4 1 294 1 58 1 299 1 33 1 300 1 134 1 302 1 41 1 193 1 92 1 113 1 94 1 49 1 
55 1 317 1 225 1 294 1 58 1 141 1 64 1 33 1 134 1 149 1 69 2 92 1 113 1 218 1 49 1 272 1 137 1 314 1 
6 1 
98 1 22 1 189 1 284 1 178 1 52 1 298 1 
259 1 178 2 179 1 189 1 20 1 22 1 321 1 276 1 128 1 40 1 216 1 284 1 328 1 43 1 172 1 51 1 174 1 
98 1 2 2 99 2 4 3 178 8 261 1 179 12 7 2 265 2 189 8 191 2 197 3 113 3 117 1 20 6 22 2 120 3 276 5 208 1 128 4 34 2 35 2 33 3 134 4 216 5 284 9 42 1 43 4 45 2 217 2 48 2 51 4 290 6 226 2 58 3 298 1 142 2 299 1 300 10 234 2 156 1 75 2 78 2 324 2 164 2 84 1 325 6 86 2 327 1 328 4 92 3 172 5 174 3 175 1 
99 2 178 5 179 6 7 1 8 1 61 1 142 2 189 5 191 2 20 3 75 2 22 2 23 1 276 1 205 1 278 1 211 1 282 1 324 2 128 2 129 1 35 1 325 5 216 1 132 1 327 1 284 8 328 2 43 2 172 1 48 2 174 1 290 5 51 2 53 1 
0 1 1 1 180 1 276 1 101 1 185 1 324 1 128 1 189 1 14 1 191 1 284 2 328 1 112 1 43 1 153 1 172 1 19 1 48 2 288 1 51 1 
98 1 22 1 178 1 298 1 128 1 189 1 328 1 284 1 43 1 51 1 
99 2 178 5 179 10 7 1 324 2 142 2 189 5 325 5 234 1 191 2 284 5 48 2 290 5 20 5 75 2 
22 1 216 1 178 1 276 1 172 1 174 1 
4 1 58 1 299 2 189 2 300 1 302 1 193 1 238 1 113 4 312 1 156 1 276 3 279 1 128 2 84 2 33 4 35 2 134 1 216 4 328 2 284 2 327 2 43 2 92 4 172 3 254 1 332 1 51 1 174 2 
0 1 14 1 288 1 212 1 
22 2 178 4 179 4 30 1 128 1 189 2 35 1 325 2 328 1 284 1 327 1 43 1 290 2 51 1 20 2 
183 1 199 1 81 1 
183 1 199 1 81 1 
301 1 183 1 114 1 289 1 199 1 
183 1 199 1 81 1 
195 1 183 1 199 1 
195 1 183 1 199 1 
195 1 183 1 199 1 
183 1 199 1 
85 1 190 1 
1 1 3 8 263 1 61 1 103 1 185 1 106 2 68 4 191 1 17 1 110 1 306 2 307 1 19 1 23 1 207 1 30 1 211 1 324 1 282 1 89 1 44 2 97 4 
1 1 99 1 3 11 263 1 61 1 103 2 185 1 142 1 106 2 68 5 191 1 17 1 110 1 306 3 307 2 19 1 23 2 244 1 207 2 30 1 211 1 282 1 324 2 37 1 133 1 89 2 44 4 97 6 
1 1 99 2 3 19 263 1 61 1 103 3 185 1 142 2 106 3 188 1 68 10 17 1 191 3 110 1 306 4 307 3 19 1 75 2 23 1 244 1 205 1 278 1 207 3 30 1 211 1 282 1 324 3 129 1 133 1 132 1 89 3 44 6 97 9 
1 1 99 2 3 17 263 1 61 1 103 3 185 1 142 2 188 1 106 3 68 7 17 1 191 2 110 1 306 5 307 3 19 1 75 1 23 1 244 2 205 1 207 3 278 1 30 1 211 1 282 1 324 3 129 1 133 1 132 1 89 3 44 6 97 10 
1 1 3 8 263 1 61 1 103 1 185 1 106 2 68 4 191 1 17 1 110 1 306 2 307 1 19 1 23 1 207 1 30 1 211 1 324 1 282 1 89 1 44 2 97 4 
99 2 3 12 61 1 103 1 142 2 106 1 68 6 191 2 110 1 306 2 307 1 75 2 23 1 244 1 205 1 207 1 278 1 211 1 282 1 324 2 129 1 132 1 89 1 44 2 97 6 
1 1 99 2 3 18 263 1 61 1 103 4 185 1 142 2 106 3 188 2 68 8 17 1 191 2 110 1 306 5 307 4 19 1 75 1 23 1 244 2 205 1 278 1 207 4 30 1 211 1 282 1 324 3 129 1 133 1 132 1 89 4 44 8 97 10 
99 3 3 16 61 1 103 4 142 3 106 3 188 2 68 7 191 2 110 1 306 6 307 4 75 2 23 1 244 3 121 1 205 1 278 1 207 4 211 1 282 1 324 3 129 1 132 1 89 4 44 8 97 9 
1 3 244 3 3 7 263 1 185 1 324 1 106 3 68 4 191 1 17 2 306 6 19 3 97 3 
1 1 99 2 3 18 263 1 61 1 103 4 185 1 142 2 106 3 188 2 68 8 17 1 191 2 110 1 306 4 307 4 19 1 75 1 23 1 244 1 121 1 205 1 278 1 207 4 30 1 211 1 282 1 324 3 129 1 132 1 89 4 44 8 97 10 
1 1 244 1 3 8 263 1 207 2 103 2 30 1 185 1 324 1 106 2 188 1 68 4 191 1 17 1 89 2 306 3 307 2 44 4 19 1 97 4 
1 1 3 6 263 1 30 1 185 1 324 1 106 2 68 3 17 1 191 1 306 2 19 1 52 1 97 3 
99 1 244 1 3 4 207 1 103 1 324 1 142 1 106 1 68 2 191 1 133 1 89 1 306 2 307 1 44 2 75 1 97 2 
23 2 99 1 244 1 3 7 61 1 211 1 324 1 142 1 106 1 37 1 68 4 191 1 306 2 75 1 97 3 
54 1 1 2 99 2 3 23 263 1 103 2 185 1 142 2 106 5 188 2 68 12 17 1 191 3 192 1 108 1 306 9 307 2 19 2 75 2 23 2 244 4 207 2 30 1 211 2 324 3 37 1 89 2 44 4 97 11 
68 1 23 1 3 1 
3 1 211 1 97 1 
99 1 244 1 3 6 207 1 103 1 324 1 142 1 106 2 234 1 68 3 133 1 191 1 89 1 306 3 44 2 307 1 97 3 75 1 
99 2 3 12 61 1 103 1 142 2 106 1 68 6 191 2 110 1 306 2 307 1 75 2 23 1 244 1 205 1 207 1 278 1 211 1 282 1 324 2 129 1 132 1 89 1 44 2 97 6 
1 1 244 1 3 6 185 1 324 1 106 1 68 3 191 1 306 2 19 1 97 3 
1 1 244 1 3 3 263 1 207 1 103 1 106 1 188 1 68 2 17 1 192 1 89 1 306 2 307 1 44 2 19 1 97 1 
1 2 244 2 3 10 207 1 103 1 185 1 324 2 106 3 68 5 191 2 89 1 110 1 306 5 44 2 307 1 153 1 19 2 97 5 
244 1 3 2 207 1 103 1 324 1 142 1 89 1 110 1 306 1 307 1 44 2 97 2 
99 1 244 1 3 4 207 1 103 1 324 1 142 1 106 1 68 2 191 1 89 1 306 2 110 1 307 1 44 2 75 1 97 2 
1 1 244 1 3 3 121 1 207 3 103 3 188 1 106 1 68 2 192 1 89 3 110 1 306 2 307 3 44 6 19 1 97 1 
1 3 99 3 3 34 263 1 61 1 103 5 185 2 142 3 188 2 106 7 68 18 17 1 192 1 191 5 110 1 306 12 307 5 196 1 19 3 75 3 23 4 244 5 121 1 207 5 30 1 211 3 324 5 37 1 133 1 89 5 44 10 171 1 95 1 97 16 
242 1 21 1 36 1 60 1 330 1 253 1 119 1 
21 1 242 1 60 1 28 1 126 1 36 1 166 1 270 1 330 1 219 1 253 1 119 1 
248 1 288 1 
260 1 4 1 261 1 77 1 58 1 181 1 84 1 33 1 300 1 134 2 92 1 113 1 197 1 
299 1 33 1 300 1 134 1 302 1 4 1 193 1 58 1 113 1 92 1 52 1 
248 1 288 1 
248 1 288 1 
248 1 288 1 
22 1 120 1 178 1 226 1 4 1 5 1 58 1 276 2 299 1 265 1 84 1 33 3 300 4 269 1 86 1 134 1 216 1 45 1 197 1 172 2 92 3 113 3 313 1 
22 1 120 1 2 1 178 1 226 1 4 1 58 1 276 2 299 1 265 1 84 1 33 3 300 4 86 1 134 1 216 1 45 1 197 1 172 2 92 3 113 3 313 1 
33 1 134 1 203 1 58 1 113 1 92 1 
203 1 260 1 4 2 261 1 77 1 58 2 181 1 208 1 141 1 12 1 299 2 33 6 268 1 300 3 38 1 134 3 135 1 92 7 113 7 197 1 255 1 
248 1 288 1 
98 1 2 1 178 1 226 1 298 1 299 1 189 1 300 2 113 1 198 1 156 1 22 1 120 1 276 3 78 1 128 2 164 1 33 1 34 1 86 1 216 2 284 1 328 2 43 2 92 1 172 3 51 2 174 1 
203 1 4 1 261 1 58 1 208 1 33 2 300 2 86 1 134 2 92 2 113 2 197 1 117 1 
4 1 58 1 208 1 299 1 33 4 300 1 134 1 302 1 193 1 92 4 113 4 136 1 313 1 
260 1 4 1 77 1 58 1 29 1 264 1 84 1 33 2 300 1 134 2 194 1 92 2 113 2 197 1 
299 1 55 1 33 1 134 1 225 1 149 1 69 1 58 1 113 1 92 1 
57 1 4 1 58 1 208 1 141 1 33 2 300 1 134 1 92 2 113 2 255 1 
4 2 58 2 208 1 299 1 84 1 33 4 300 3 38 1 302 1 134 2 193 1 135 1 92 5 113 5 136 1 255 1 
4 2 58 2 208 1 299 1 84 1 33 4 300 3 302 1 134 2 193 1 135 1 92 5 113 5 136 1 240 1 255 1 
160 1 221 1 52 1 333 1 
65 1 293 1 16 1 160 1 206 1 221 1 333 1 
67 1 16 1 46 1 
293 1 224 1 160 1 206 3 184 1 296 2 65 1 326 1 16 3 73 1 221 1 333 1 
65 1 293 1 16 2 160 1 91 1 206 2 221 1 333 1 291 1 
243 1 55 1 293 1 206 1 65 1 326 1 16 1 69 1 173 1 333 1 314 1 
65 1 293 1 16 1 326 1 160 1 206 1 333 1 
65 1 293 1 16 1 326 1 160 2 206 1 221 1 
293 2 160 1 206 2 65 2 326 1 16 2 88 1 271 1 333 1 118 1 
243 1 293 1 160 1 162 1 206 3 65 1 213 1 326 1 16 3 251 1 221 1 291 2 333 2 
55 1 293 1 160 1 225 1 206 2 65 1 326 1 16 2 69 2 168 1 218 1 221 1 333 1 314 1 291 1 
243 1 293 2 160 1 25 1 206 4 65 2 213 1 326 1 16 4 91 1 221 1 291 2 333 2 
65 1 293 1 16 1 326 1 160 1 206 1 221 1 333 1 
243 1 293 1 224 1 160 2 206 4 125 1 296 1 65 1 213 1 16 4 73 1 221 2 291 2 333 3 
293 1 160 1 206 2 280 1 297 1 65 1 107 1 326 1 16 2 221 1 333 1 291 1 
293 1 224 1 160 1 206 3 296 2 65 1 266 1 326 1 16 3 73 2 221 1 333 1 
304 1 26 2 309 1 333 2 
65 1 293 1 16 1 326 1 204 1 206 1 
65 1 293 1 16 2 326 1 160 1 251 1 206 2 221 1 333 1 291 1 
157 1 
65 1 293 1 16 1 326 1 160 1 206 1 221 1 333 1 
293 1 160 1 206 3 296 1 65 1 326 1 16 3 251 1 221 1 291 1 333 1 
243 1 213 1 125 1 333 1 
160 1 333 1 

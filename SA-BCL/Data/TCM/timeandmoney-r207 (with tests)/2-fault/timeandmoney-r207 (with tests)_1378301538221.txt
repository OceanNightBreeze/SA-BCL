#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 70 259 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 70 259 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 70 259 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 70 259 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 70 259 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | RETURN | 5667 | return null
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 1 121 1 264 1 235 9 286 5 335 1 337 4 98 1 34 1 242 1 126 1 249 2 217 1 147 1 218 2 317 2 272 2 151 6 348 1 105 2 300 1 175 2 84 1 372 1 373 3 206 1 46 9 29 2 
186 1 121 1 264 1 235 9 286 5 335 1 337 4 98 1 34 1 242 1 126 1 249 2 217 1 147 1 218 2 317 2 272 2 151 6 348 1 105 2 300 1 175 2 84 1 372 1 373 3 206 1 46 9 29 2 
186 1 121 1 264 1 235 10 286 6 335 1 337 5 98 1 34 1 242 1 126 1 249 2 217 1 147 1 218 2 317 2 272 2 151 7 348 1 105 2 300 1 175 2 84 1 372 1 373 4 206 1 46 10 29 2 
186 1 121 1 264 1 235 7 286 4 335 1 337 3 98 1 34 1 242 1 126 1 249 2 217 1 147 1 218 2 317 2 272 2 151 4 348 1 105 1 300 1 175 2 84 1 372 1 373 2 46 7 29 2 
272 1 317 1 151 3 348 1 121 1 235 4 105 2 286 3 175 1 337 2 84 1 242 1 373 1 126 1 206 1 29 1 218 1 46 4 
272 1 348 1 264 1 286 1 235 2 96 1 300 1 175 1 227 1 242 1 126 1 249 1 103 1 218 1 46 2 29 1 
151 1 348 1 186 1 235 3 286 2 175 2 337 1 242 1 373 1 126 1 249 1 218 2 46 3 
186 1 121 1 235 9 286 5 335 1 337 4 98 1 242 1 126 1 249 1 170 1 218 2 317 1 272 1 151 7 348 1 105 2 175 2 84 1 373 3 206 1 280 1 46 9 29 1 
186 1 121 1 235 9 286 5 335 1 337 4 98 1 242 1 126 1 249 1 170 1 218 2 317 1 272 1 151 7 348 1 105 2 175 2 84 1 373 3 206 1 280 1 46 9 29 1 
347 1 144 1 354 1 
347 1 305 1 155 2 
297 2 48 2 184 2 24 2 5 1 67 2 117 2 287 1 
306 1 329 1 48 3 184 2 5 1 285 2 163 1 287 1 311 1 312 1 166 2 8 1 167 2 99 1 10 1 36 1 341 2 146 1 168 1 344 1 346 1 297 2 318 1 150 1 365 1 276 1 20 2 133 1 253 1 368 1 24 2 324 1 374 1 67 3 117 2 258 1 139 1 
297 1 48 1 184 1 24 1 364 1 67 1 181 1 263 1 117 1 287 1 
347 1 297 1 48 1 307 1 354 1 263 1 156 1 370 1 371 1 85 1 11 1 67 1 233 1 45 1 
347 1 297 1 48 1 307 1 184 1 354 1 263 1 156 1 371 2 24 1 85 1 67 1 117 1 233 2 45 1 
371 1 127 1 233 1 148 1 328 1 
347 1 177 1 354 1 371 2 115 1 233 2 148 1 328 1 
371 1 233 1 148 1 
297 1 48 1 184 1 364 1 263 1 287 1 371 1 24 1 181 1 67 1 136 1 117 1 233 1 328 1 
347 1 
347 1 354 1 371 2 115 1 153 1 233 2 148 1 328 1 
347 1 354 1 310 1 73 2 356 1 107 1 108 2 42 1 192 1 371 5 115 1 256 1 360 1 375 2 55 1 233 5 17 1 148 2 328 2 
144 1 5 1 
297 2 48 2 184 1 5 2 24 1 216 1 67 2 137 1 117 1 
266 1 9 1 95 1 
329 1 48 1 318 1 150 1 5 1 163 1 276 1 20 1 97 1 311 1 167 1 67 1 341 1 258 1 346 1 139 1 
297 3 48 3 184 1 24 3 5 1 67 3 117 3 202 1 
297 1 48 1 24 1 364 1 67 1 263 1 117 1 
297 1 48 1 184 1 24 1 216 1 67 1 137 1 263 1 117 1 
306 1 329 1 48 4 307 1 184 2 5 1 285 2 163 1 263 1 287 1 311 1 166 1 8 1 167 1 10 1 216 1 36 1 341 1 168 1 344 1 346 1 297 3 318 1 150 1 79 1 365 1 276 1 20 1 253 1 156 1 368 1 202 1 114 1 24 3 371 1 324 1 85 1 116 1 67 4 117 3 258 1 233 1 45 1 139 1 
297 2 48 2 24 1 5 1 67 2 117 1 370 1 104 1 202 1 
347 1 297 3 48 3 307 1 184 1 171 1 263 1 156 1 202 2 371 1 24 3 114 1 216 1 85 1 116 1 67 3 117 3 233 1 45 1 
297 2 48 2 184 1 202 1 266 1 24 2 216 1 9 1 67 2 117 2 
329 1 48 1 150 1 318 1 5 1 163 1 276 1 20 1 311 1 167 1 67 1 341 1 258 1 346 1 139 1 
363 1 329 1 48 1 2 1 318 1 5 1 163 1 276 1 20 1 311 1 167 1 67 1 341 1 258 1 139 1 
306 1 210 1 93 1 285 2 95 2 289 1 8 1 166 4 266 2 9 2 267 1 36 1 12 1 146 2 168 1 268 1 56 1 319 1 222 1 320 1 365 2 253 1 324 1 86 1 
297 1 307 1 48 1 24 1 67 1 263 1 117 1 208 1 
329 1 297 1 318 1 150 1 48 2 276 1 163 1 20 1 311 1 202 1 24 1 167 1 9 1 116 1 67 2 341 1 117 1 258 1 139 1 346 1 
297 5 48 5 184 1 5 1 370 1 202 2 24 4 216 1 116 1 230 1 67 5 117 4 197 1 104 1 
297 2 48 2 24 2 364 1 67 2 263 1 117 2 208 1 
193 1 304 1 
193 1 304 1 
7 1 183 1 
7 1 183 1 
7 1 183 1 
193 1 159 1 304 1 
193 1 159 1 304 1 
193 1 304 1 281 1 
193 2 40 1 304 2 7 1 183 1 283 1 
193 1 159 1 304 1 
193 1 195 1 304 1 
193 1 195 1 304 1 
193 1 195 1 304 1 
347 1 40 1 262 2 254 1 75 1 226 1 193 2 83 2 241 3 371 2 279 2 35 1 293 1 247 2 118 1 304 2 207 1 250 2 233 2 
48 2 5 1 262 1 213 1 336 1 193 1 241 1 247 1 250 1 38 1 297 2 200 1 78 1 322 1 254 1 109 1 24 2 371 1 279 1 67 2 117 2 304 1 233 1 281 1 
272 1 317 1 29 1 
272 1 96 1 29 1 
47 1 317 2 272 3 204 1 178 1 96 1 
47 1 317 1 265 1 272 2 178 1 96 1 
317 1 47 2 272 2 178 1 96 1 
354 1 122 1 123 2 331 1 73 1 310 1 356 2 213 1 191 2 240 1 267 1 56 1 148 1 38 1 347 2 219 2 320 1 252 1 322 1 155 3 108 1 42 3 371 5 64 1 115 1 86 1 302 1 375 1 305 1 232 1 233 5 328 4 
354 1 141 1 122 2 123 6 310 1 73 2 356 6 192 1 240 3 244 5 267 3 127 5 342 1 56 3 294 1 148 6 251 1 347 5 219 6 320 3 252 1 322 4 155 9 108 2 42 8 371 9 115 1 86 3 231 1 302 2 375 2 257 1 305 3 233 9 328 7 
354 1 122 1 331 1 123 2 73 1 356 2 191 1 192 1 240 1 267 1 56 1 347 3 219 2 320 1 322 1 155 4 108 1 42 3 371 3 64 1 86 1 302 1 375 1 305 2 233 3 328 2 
354 1 141 1 122 1 123 4 331 1 73 1 356 4 191 2 192 1 240 2 267 2 56 2 294 1 347 4 219 4 320 2 322 2 155 7 108 1 42 5 371 4 64 1 86 2 231 1 302 1 375 1 305 3 233 4 328 3 
318 1 144 1 343 1 
318 1 238 1 
111 1 
318 1 276 1 
318 3 291 1 276 1 163 1 343 2 164 1 
318 1 276 1 163 1 
318 1 334 1 
49 1 120 1 275 1 93 2 365 3 320 1 321 1 333 1 142 1 166 7 267 1 158 2 245 1 146 4 16 1 268 3 270 1 
49 1 120 1 275 1 93 2 365 3 320 1 321 1 333 1 142 1 166 7 267 1 158 2 245 1 146 4 16 1 268 3 270 1 
49 1 120 1 275 1 93 2 365 3 320 1 321 1 333 1 142 1 166 7 43 1 267 1 158 2 245 1 146 4 16 1 268 3 270 1 
306 1 90 3 49 5 120 1 51 1 92 1 93 5 285 2 94 4 72 1 333 1 212 1 142 1 240 3 165 1 8 1 166 31 267 4 36 1 245 2 313 1 146 16 16 1 168 1 56 3 268 10 270 2 275 2 321 2 365 15 320 4 224 1 86 3 158 3 
306 2 49 1 93 3 285 4 333 1 142 1 8 2 166 9 267 1 36 2 245 1 146 5 168 2 268 4 16 1 269 1 270 1 275 1 320 1 365 4 321 1 224 1 158 2 69 1 
0 1 286 1 235 2 96 1 33 1 167 1 242 1 126 1 341 1 249 1 15 1 198 1 218 1 317 1 39 1 272 2 18 1 151 1 131 1 348 1 20 1 350 1 62 1 175 1 204 1 25 1 258 1 29 1 46 2 139 1 
0 1 119 1 286 1 235 3 96 1 358 1 33 1 167 1 126 1 341 1 249 1 15 1 198 1 218 1 317 1 39 1 272 2 151 2 131 1 348 1 20 1 350 1 175 1 255 1 204 1 25 1 258 1 29 1 46 3 139 1 
0 1 119 1 286 1 235 2 96 1 358 1 33 1 167 1 126 1 341 1 249 1 198 1 39 1 272 2 317 1 151 2 348 1 20 1 350 1 204 1 25 1 258 1 46 2 139 1 29 1 
0 2 1 1 235 1 311 1 33 2 167 1 341 1 13 1 249 2 129 1 218 1 39 2 318 1 77 1 276 1 20 1 369 1 175 1 255 1 229 1 258 1 46 1 139 1 
0 1 235 1 96 1 358 1 33 1 167 1 242 1 341 1 249 1 15 1 198 1 218 1 317 1 39 1 272 2 18 1 131 1 20 1 350 1 175 1 204 1 25 1 258 1 29 1 46 1 139 1 
134 1 
1 1 48 1 185 2 189 1 288 2 194 1 11 1 341 2 148 6 199 1 347 2 297 1 58 2 20 2 155 2 156 1 108 1 203 1 110 1 113 2 115 3 67 1 305 2 258 1 307 1 354 1 122 1 310 1 73 1 263 1 31 2 356 2 311 2 167 2 220 1 318 1 77 1 221 4 276 1 323 1 277 1 173 1 174 2 370 1 42 2 371 5 85 1 325 2 87 1 375 1 327 1 233 5 45 1 234 1 139 1 
297 1 307 1 48 1 58 1 221 2 153 1 263 1 189 1 323 1 277 1 156 1 370 1 371 3 115 1 85 1 11 1 67 1 233 3 45 1 148 2 199 1 234 1 
48 1 307 1 354 1 263 1 189 1 11 1 148 1 199 1 297 1 347 1 221 3 153 1 277 1 323 1 156 1 370 1 371 3 85 1 115 1 325 1 67 1 233 3 45 1 234 1 
48 1 307 1 354 1 263 1 189 1 11 1 199 1 148 2 297 1 347 1 58 1 221 3 153 1 277 1 323 1 156 1 174 1 370 1 371 3 115 1 85 1 325 1 67 1 233 3 45 1 234 1 
48 1 185 2 189 1 288 2 239 1 11 1 199 1 148 7 297 1 347 5 149 1 58 4 153 1 156 1 108 1 113 2 23 1 115 3 67 1 305 2 307 1 354 5 263 1 310 1 73 1 356 1 31 2 221 6 323 1 277 1 173 1 174 4 80 1 370 1 42 1 82 1 371 5 85 1 325 4 375 1 327 1 233 5 45 1 234 1 
48 1 307 1 354 1 185 2 73 1 310 1 263 1 31 2 356 1 189 1 288 2 11 1 148 4 199 1 347 2 297 1 58 2 221 4 277 1 323 1 155 2 156 1 173 1 174 2 108 1 370 1 42 1 203 1 113 2 371 4 115 2 85 1 325 2 67 1 375 1 327 1 305 2 233 4 45 1 234 1 
48 1 307 1 354 1 185 2 263 1 310 1 73 1 31 2 356 1 189 1 288 2 239 1 11 1 148 4 199 1 347 1 297 1 58 2 221 4 277 1 323 1 173 1 156 1 174 2 80 1 108 1 370 1 42 1 82 1 113 2 371 4 115 2 85 1 325 2 67 1 375 1 327 1 305 2 233 4 45 1 234 1 
48 1 307 1 354 1 185 2 263 1 310 1 73 1 31 2 356 1 189 1 288 2 239 1 11 1 148 4 199 1 347 1 297 1 58 2 221 4 277 1 323 1 173 1 156 1 174 2 80 1 108 1 370 1 42 1 82 1 113 2 371 4 115 2 85 1 325 2 67 1 375 1 327 1 305 2 233 4 45 1 234 1 
161 2 48 1 307 1 354 1 91 1 263 1 310 1 73 1 356 1 189 1 288 2 239 1 143 2 11 1 148 4 199 1 347 1 297 1 58 2 132 1 221 4 277 1 323 1 155 2 156 1 367 1 174 2 108 1 370 1 42 1 113 2 371 4 115 2 85 1 325 2 67 1 375 1 327 1 233 4 45 1 234 1 
48 1 307 1 354 1 185 2 73 1 310 1 263 1 31 2 356 1 189 1 288 2 239 1 11 1 199 1 148 5 347 1 297 1 149 1 58 3 221 5 277 1 323 1 173 1 156 1 108 1 174 3 80 1 370 1 42 1 82 1 113 2 371 4 115 2 85 1 325 3 67 1 375 1 327 1 305 2 233 4 45 1 234 1 
48 1 307 1 354 1 185 2 73 1 310 1 263 1 31 2 356 1 189 1 288 2 239 1 11 1 199 1 148 5 347 1 297 1 149 1 58 3 221 5 277 1 323 1 173 1 156 1 108 1 174 3 80 1 370 1 42 1 82 1 113 2 371 4 115 2 85 1 325 3 67 1 375 1 327 1 305 2 233 4 45 1 234 1 
161 2 48 1 307 1 354 1 73 1 310 1 263 1 356 1 189 1 288 2 143 2 11 1 148 4 199 1 347 1 297 1 58 2 132 1 221 4 277 1 323 1 155 2 156 1 174 2 108 1 370 1 42 1 203 1 113 2 371 4 115 2 85 1 325 2 67 1 375 1 327 1 233 4 45 1 234 1 
306 1 210 1 93 2 5 2 285 2 95 1 333 1 142 1 144 1 266 1 8 1 166 6 9 1 36 1 267 1 245 1 146 3 168 1 268 2 16 1 321 1 320 1 365 3 253 1 324 1 158 1 
306 2 49 1 90 3 30 1 5 1 93 1 92 1 94 3 285 4 95 11 212 1 240 2 8 2 166 14 266 4 9 11 36 2 267 2 101 1 146 8 268 2 168 2 56 2 344 1 365 6 320 1 225 1 253 2 324 1 86 1 374 1 353 1 160 1 
329 1 306 1 48 2 5 1 163 1 285 2 311 1 97 1 266 1 8 1 166 2 167 1 36 1 341 1 101 1 146 1 168 1 344 1 316 1 346 1 297 1 318 1 150 1 276 1 365 1 20 1 253 1 202 1 112 1 24 1 324 1 116 1 374 1 67 2 301 1 117 1 258 1 139 1 
329 2 48 3 49 4 5 2 93 4 285 6 95 7 333 1 142 1 240 2 8 3 10 2 9 7 245 1 100 1 341 3 101 1 146 10 16 1 56 2 344 1 346 2 297 1 150 2 59 2 298 2 20 3 253 3 202 1 22 1 24 1 116 1 158 1 67 3 117 1 258 2 306 3 162 2 163 2 358 1 311 1 166 20 266 7 167 3 36 3 267 3 168 3 268 8 318 2 321 1 320 3 365 10 276 2 324 3 86 2 374 1 88 1 282 2 139 2 
306 2 1 1 48 1 210 1 285 4 358 1 311 2 312 2 8 2 166 2 167 7 36 2 341 8 196 1 14 1 146 1 168 2 57 1 344 1 297 1 318 3 77 1 365 1 276 2 20 8 62 1 253 2 157 1 81 1 202 1 176 1 24 1 324 2 374 1 67 1 117 1 258 2 71 1 139 2 
306 1 48 1 184 1 93 1 285 2 95 1 240 1 266 1 8 1 166 3 9 1 216 1 36 1 267 1 101 1 146 1 268 1 168 1 56 1 297 1 320 1 365 2 172 1 253 1 24 1 324 1 86 1 67 1 117 1 
306 1 49 1 210 1 285 2 95 1 253 1 266 1 166 2 8 1 9 1 324 1 36 1 267 1 12 1 146 2 268 1 168 1 56 1 
306 1 93 1 210 1 285 2 320 1 365 2 95 1 253 1 289 1 266 1 166 2 8 1 9 1 324 1 86 1 36 1 268 1 168 1 
306 1 49 1 210 1 93 1 285 2 95 2 240 1 8 1 166 4 266 2 9 2 267 1 36 1 146 2 56 1 168 1 268 2 320 1 365 2 253 1 324 1 86 1 
306 1 49 1 285 2 95 1 253 1 266 1 166 2 8 1 9 1 324 1 36 1 267 1 12 1 146 2 268 1 168 1 56 1 71 1 
306 1 93 1 285 2 320 1 365 2 95 1 253 1 289 1 266 1 166 2 8 1 9 1 324 1 86 1 36 1 268 1 168 1 71 1 
306 1 49 1 93 1 285 2 95 2 240 1 8 1 166 4 266 2 9 2 267 1 36 1 146 2 56 1 168 1 268 2 320 1 365 2 253 1 324 1 86 1 71 1 
306 1 49 1 93 1 285 2 95 2 240 1 166 4 8 1 266 2 9 2 267 1 36 1 146 2 56 1 168 1 268 2 320 1 365 2 253 1 324 1 86 1 
329 1 306 1 48 1 5 1 163 1 285 2 311 1 166 2 8 1 167 1 10 1 36 1 341 1 146 1 168 1 344 1 346 1 150 1 318 1 276 1 365 1 20 1 253 1 324 1 374 1 67 1 258 1 139 1 
329 1 306 1 2 1 48 1 261 1 5 1 163 1 285 2 311 1 166 2 8 1 167 1 36 1 341 1 146 1 168 1 344 1 363 1 318 1 276 1 365 1 20 1 253 1 324 1 374 1 67 1 258 1 139 1 
306 1 49 1 93 1 285 2 95 2 240 1 8 1 166 4 266 2 9 2 267 1 36 1 101 1 146 2 56 1 168 1 268 2 320 1 365 2 253 1 324 1 86 1 
329 1 306 1 48 1 49 1 93 1 163 1 285 2 95 2 240 1 266 2 166 4 8 1 167 1 9 2 10 1 267 1 36 1 341 1 146 2 268 2 56 1 168 1 346 1 150 1 318 1 59 1 365 2 320 1 276 1 20 1 62 1 253 1 324 1 86 1 67 1 258 1 139 1 
306 1 48 1 49 1 184 1 285 2 95 1 240 1 8 1 166 3 266 1 216 1 9 1 292 1 36 1 267 1 101 1 146 2 268 1 168 1 56 1 297 1 365 1 320 1 253 1 24 1 324 1 86 1 67 1 117 1 
306 1 8 1 308 1 36 1 285 2 315 1 70 1 168 1 259 1 269 1 
306 1 8 1 308 1 36 1 285 2 315 1 70 1 168 1 259 1 269 1 
306 1 8 1 308 1 36 1 285 2 315 1 70 1 168 1 259 1 269 1 
306 1 8 1 308 1 36 1 285 2 315 1 70 1 168 1 259 1 269 1 
306 1 8 1 308 1 36 1 285 2 315 1 70 1 168 1 259 1 269 1 
193 1 279 1 35 1 40 1 76 1 262 1 247 1 304 1 207 1 250 1 
78 1 281 1 
193 1 4 1 279 1 187 1 262 1 247 1 154 1 304 1 250 1 
347 1 40 1 262 1 254 1 75 1 226 1 193 1 83 1 241 2 371 1 279 1 35 1 247 1 118 1 304 1 207 1 233 1 250 1 
347 1 40 1 262 1 254 1 75 1 226 1 193 1 83 1 241 2 371 1 279 1 35 1 247 1 118 1 304 1 207 1 233 1 250 1 
347 1 40 1 262 1 254 1 75 1 226 1 193 1 83 1 241 2 371 1 279 1 35 1 247 1 118 1 304 1 207 1 233 1 250 1 
159 1 283 1 345 1 
159 1 283 1 345 1 
195 1 89 1 
195 1 89 1 283 1 
200 1 109 1 
48 2 5 1 262 1 6 1 213 1 336 1 193 1 241 1 247 1 250 1 38 1 297 2 200 1 78 1 322 1 226 1 109 1 83 1 371 1 24 2 279 1 67 2 117 2 304 1 233 1 281 1 328 1 
159 1 345 1 
195 1 89 1 283 1 
306 1 48 2 285 2 312 2 53 1 8 1 166 2 215 1 339 1 167 2 36 1 341 2 246 1 101 1 14 1 146 1 168 1 344 1 297 2 318 1 276 1 365 1 20 2 253 1 81 1 324 1 374 1 66 1 67 2 258 1 139 1 
317 1 272 2 273 1 20 2 350 1 366 1 62 1 96 1 358 1 33 1 204 1 167 2 125 1 25 1 341 2 15 1 258 1 29 1 139 1 
317 1 272 2 273 1 20 1 350 1 96 1 214 1 358 1 33 1 204 1 167 1 25 1 341 1 15 1 258 1 29 1 139 1 
1 1 318 1 77 1 276 1 20 1 366 1 74 1 311 1 33 1 167 1 341 1 258 1 129 1 139 1 
317 1 272 2 273 1 20 1 350 1 366 1 96 1 358 1 33 1 204 1 167 1 125 1 25 1 341 1 15 1 258 1 29 1 139 1 
274 1 
347 1 144 1 354 1 256 1 356 1 55 1 42 1 
185 1 354 1 73 1 310 1 31 1 356 1 148 1 347 2 173 1 155 1 108 1 42 1 371 1 115 1 375 1 305 1 233 1 
334 2 238 3 240 2 338 2 54 1 291 1 341 3 55 1 248 2 56 2 343 2 295 1 148 5 347 8 60 1 152 2 298 2 349 2 20 3 62 1 21 1 156 2 155 12 108 4 115 3 256 1 352 2 258 4 305 6 354 2 309 2 122 2 163 3 123 6 310 4 73 4 356 8 357 1 311 1 167 3 267 2 220 1 318 10 219 6 276 3 320 2 42 9 228 2 371 5 86 2 375 4 326 2 233 5 139 3 
90 1 354 2 122 1 94 1 123 5 73 2 310 2 356 5 236 1 237 1 212 1 240 2 340 1 267 2 128 1 248 2 56 2 362 1 148 1 347 5 220 1 219 5 320 2 349 1 155 6 299 1 108 2 42 8 371 1 115 1 86 2 375 2 305 3 233 1 209 1 
48 1 184 1 263 1 73 1 310 1 356 2 287 1 267 2 245 1 248 2 16 1 297 1 364 1 321 1 320 1 349 1 108 1 42 2 82 1 371 1 24 1 67 1 181 1 44 1 136 1 375 1 117 1 233 1 
347 1 354 1 310 1 73 1 356 1 108 1 42 1 256 1 375 1 55 1 
347 5 219 5 320 2 349 1 298 1 123 5 356 5 155 10 240 2 42 5 86 2 267 2 248 2 56 2 305 5 
347 1 354 1 371 1 115 1 233 1 148 1 
1 1 122 2 73 2 310 1 356 2 311 2 192 1 194 1 167 4 341 4 295 1 148 4 130 1 318 1 220 2 77 1 276 1 20 4 21 2 108 2 42 2 110 1 371 3 115 2 179 1 375 2 258 1 233 3 139 1 
306 1 329 1 48 3 184 2 5 1 285 2 163 1 287 1 311 1 166 1 8 1 167 1 10 1 36 1 341 1 168 1 344 1 346 1 297 2 150 1 318 1 365 1 276 1 20 1 253 1 368 1 24 2 324 1 67 3 117 2 258 1 139 1 
347 4 219 2 220 1 354 2 122 1 123 2 310 1 73 1 356 2 155 4 108 1 42 1 158 1 375 1 305 2 
68 1 247 1 250 1 
68 1 247 1 250 1 
260 1 200 1 35 1 247 1 250 1 
68 1 247 1 250 1 
247 1 32 1 250 1 
247 1 32 1 250 1 
247 1 32 1 250 1 
247 1 250 1 
193 1 304 1 
306 2 49 1 93 2 320 1 365 4 285 4 321 1 224 1 333 1 142 1 166 8 8 2 267 1 36 2 158 1 245 1 146 4 16 1 268 3 168 2 
93 2 365 3 321 1 320 1 333 1 142 1 144 1 166 6 267 1 158 1 245 1 146 3 268 2 16 1 
306 1 49 1 93 1 365 2 320 1 285 2 240 1 8 1 166 4 86 1 36 1 267 1 180 1 146 2 268 2 168 1 56 1 
90 1 49 1 93 1 92 1 320 1 94 2 365 4 212 1 240 1 166 7 86 1 267 1 146 3 56 1 268 2 
306 2 49 4 90 2 92 1 93 5 94 2 285 4 333 1 142 1 240 2 166 23 8 2 267 3 36 2 245 2 146 11 16 1 268 9 56 2 168 2 321 2 365 12 320 3 224 2 225 1 86 2 158 1 182 1 160 1 
166 1 365 1 94 1 
166 1 90 1 146 1 
306 1 49 1 93 2 285 2 365 3 320 1 298 1 240 1 8 1 166 6 86 1 36 1 267 1 180 1 146 3 168 1 56 1 268 3 
306 1 49 1 90 1 93 1 94 1 285 2 236 1 237 1 212 1 240 2 166 12 8 1 340 1 36 1 267 2 146 6 168 1 56 2 268 2 269 1 362 1 365 6 320 2 299 1 86 2 
49 1 93 1 320 1 365 3 321 1 166 6 267 1 245 1 146 3 16 1 268 2 
306 1 49 1 93 1 321 1 365 2 285 2 224 1 333 1 142 1 166 3 8 1 36 1 245 1 182 1 146 1 268 2 168 1 
306 1 49 2 93 3 285 2 321 2 365 5 320 2 8 1 166 10 36 1 267 2 44 1 245 2 146 5 168 1 268 5 16 1 269 1 
306 1 49 1 285 2 8 1 166 2 36 1 267 1 146 2 168 1 56 1 268 1 269 1 
306 1 49 1 93 1 365 2 320 1 285 2 240 1 8 1 166 4 86 1 36 1 267 1 146 2 268 2 168 1 56 1 269 1 
306 3 49 1 93 1 365 2 285 6 321 1 224 1 190 1 166 3 8 3 36 3 245 1 182 1 146 1 168 3 268 2 269 1 
306 5 90 3 49 5 51 1 92 1 93 7 94 4 285 10 333 1 190 1 212 1 142 1 240 3 165 1 8 5 166 34 36 5 267 5 245 3 313 1 146 16 16 2 168 5 56 3 268 12 269 1 321 3 365 18 320 5 224 2 86 3 158 1 180 1 182 1 
306 1 90 1 93 2 94 1 285 2 333 1 212 1 142 1 166 8 8 1 267 1 340 1 36 1 245 1 146 4 168 1 268 2 16 1 269 1 320 1 365 4 321 1 158 1 
306 2 90 1 49 1 93 2 92 1 94 2 285 4 333 1 212 1 142 1 240 1 166 11 8 2 340 1 36 2 267 2 245 1 146 6 16 1 168 2 56 1 268 3 269 1 320 1 321 1 365 5 158 1 180 1 
306 3 49 1 90 1 93 3 94 1 285 6 333 1 236 1 237 1 212 1 142 1 240 2 166 19 8 3 340 1 36 3 267 3 245 1 146 9 16 1 168 3 56 2 268 4 269 1 362 1 321 1 365 10 320 3 224 1 299 1 86 2 158 1 180 1 
306 3 49 2 90 1 93 3 94 1 285 6 333 1 236 1 237 1 212 1 142 1 240 2 166 17 8 3 340 1 36 3 267 3 245 1 146 10 16 1 168 3 56 2 268 5 269 1 362 1 321 1 365 7 320 2 224 1 299 1 86 1 158 1 180 1 
306 1 90 1 93 2 94 1 285 2 333 1 212 1 142 1 166 8 8 1 267 1 340 1 36 1 245 1 146 4 168 1 268 2 16 1 269 1 320 1 365 4 321 1 158 1 
306 1 49 1 90 1 93 1 94 1 285 2 236 1 237 1 212 1 240 2 166 12 8 1 340 1 36 1 267 2 146 6 168 1 56 2 268 2 269 1 362 1 365 6 320 2 299 1 86 2 
306 4 49 2 90 1 93 3 94 1 285 8 333 1 236 1 237 1 212 1 142 1 240 2 166 18 8 4 340 1 36 4 267 3 245 1 146 10 16 1 168 4 56 2 268 5 269 1 362 1 321 1 365 8 320 2 224 2 299 1 86 1 158 1 180 1 
306 4 49 3 90 1 93 3 94 1 285 8 236 1 237 1 190 1 212 1 240 3 166 16 8 4 340 1 36 4 267 3 146 9 168 4 56 3 268 6 269 1 362 1 365 7 320 2 224 2 299 1 86 2 
49 3 93 3 365 4 320 1 321 3 333 2 142 1 166 7 267 1 245 3 146 3 268 6 16 1 
306 4 49 1 90 1 93 3 94 1 285 8 333 1 236 1 237 1 190 1 212 1 142 1 240 2 166 18 8 4 340 1 36 4 267 3 245 1 146 10 16 1 168 4 56 2 268 4 269 1 362 1 321 1 365 8 320 2 224 2 299 1 86 1 158 1 
297 1 48 1 5 1 67 1 370 1 376 1 104 1 
297 1 48 1 355 1 5 1 211 1 52 1 370 1 27 1 67 1 102 1 376 1 104 1 
1 1 318 1 144 1 77 1 167 1 276 1 341 1 20 1 258 1 311 1 139 1 
329 1 297 1 318 1 48 2 150 1 5 1 276 1 163 1 20 1 311 1 202 1 24 1 167 1 67 2 341 1 117 1 258 1 139 1 
329 1 48 1 307 1 5 1 163 2 263 2 334 1 167 1 243 1 341 1 297 1 150 1 318 3 276 2 20 1 21 1 202 1 24 1 85 1 67 1 117 1 326 1 258 1 139 1 
329 1 48 1 307 1 5 1 163 2 263 2 334 1 167 1 243 1 341 1 363 1 297 1 318 3 276 2 20 1 21 1 202 1 24 1 85 1 67 1 117 1 326 1 258 1 139 1 
354 1 163 1 334 1 238 1 311 1 167 3 341 3 361 1 343 1 148 1 37 1 347 1 318 4 276 1 20 3 21 1 156 1 371 2 326 1 258 1 233 2 140 1 139 1 
347 1 318 4 354 1 276 1 163 1 20 3 334 1 156 1 21 1 311 1 238 1 371 2 167 3 341 3 326 1 352 1 258 1 233 2 343 1 148 1 140 1 139 1 
167 1 341 1 20 1 258 1 57 1 139 1 
318 3 50 1 201 1 163 1 276 2 61 1 20 7 62 1 358 1 157 1 311 2 312 1 176 1 167 6 291 1 341 7 196 1 14 1 258 3 57 1 139 2 
329 1 48 2 93 2 5 2 285 4 95 1 333 1 142 1 8 2 339 1 10 1 9 1 341 1 245 1 101 1 146 3 16 1 346 1 297 1 150 1 59 1 20 1 62 1 253 2 202 1 24 1 67 2 158 1 117 1 258 1 306 2 163 1 266 1 166 6 167 1 36 2 267 1 168 2 268 2 318 1 276 1 321 1 320 1 365 3 324 2 282 1 139 1 
354 1 309 1 73 2 310 2 356 1 311 1 238 1 338 1 167 1 341 1 55 1 343 1 295 1 148 2 347 1 318 2 20 1 156 1 108 2 42 1 228 1 371 3 115 1 256 1 375 2 352 1 233 3 328 1 
318 2 163 1 276 1 20 2 62 1 357 1 167 2 291 1 341 2 258 2 343 1 57 1 139 1 
1 1 318 1 77 1 276 1 20 4 62 1 311 1 167 4 359 1 341 4 258 1 140 1 139 1 
318 1 201 1 163 1 276 1 61 1 20 2 106 1 21 1 22 1 167 2 341 2 258 2 138 1 139 1 
272 1 167 1 341 1 350 1 20 1 258 1 96 1 311 1 29 1 139 1 
318 1 215 1 167 2 276 1 341 2 20 2 14 1 258 1 62 1 358 1 139 1 
1 1 318 3 77 1 276 2 20 5 62 1 21 1 311 1 176 1 167 4 359 1 341 5 196 1 14 1 258 2 139 2 
1 1 318 3 77 1 276 2 20 5 188 1 62 1 21 1 311 1 167 4 359 1 341 5 196 1 14 1 258 2 139 2 
329 1 297 1 363 1 318 1 48 2 5 1 276 1 163 1 20 1 311 1 202 1 24 1 167 1 67 2 341 1 117 1 258 1 139 1 
318 1 50 1 201 1 163 1 276 1 61 1 20 1 21 1 167 1 291 1 341 1 258 2 139 1 
297 1 48 1 41 1 53 1 205 1 66 1 67 1 246 1 303 1 
205 1 314 1 63 1 
205 1 5 1 41 1 28 1 303 1 
347 1 307 1 354 1 5 1 41 2 263 1 156 1 63 1 135 1 371 2 114 1 85 1 205 1 314 1 303 2 28 2 233 2 45 1 328 1 
144 1 348 1 126 1 286 1 
348 1 126 1 286 1 235 1 46 1 175 1 218 1 
0 1 249 1 46 1 
348 1 330 1 264 2 286 1 235 3 175 1 290 1 242 1 126 1 145 1 218 1 46 3 
151 1 348 1 126 1 286 1 105 1 235 2 46 2 175 1 218 1 
317 1 272 1 121 1 235 1 286 1 175 1 337 1 242 1 218 1 46 1 29 1 
348 1 242 1 286 1 235 1 46 1 175 1 218 1 
348 2 242 1 126 1 235 1 46 1 175 1 218 1 
348 1 286 1 235 2 175 2 242 1 65 1 169 1 271 1 218 2 46 2 
151 2 348 1 235 3 286 2 335 1 175 1 337 1 98 1 242 1 373 1 126 1 218 1 46 3 
272 2 317 1 151 1 348 1 223 1 286 1 235 2 96 1 175 1 204 1 242 1 126 1 218 1 46 2 29 1 
151 2 348 1 235 4 105 1 286 2 175 2 337 1 242 1 373 1 126 1 206 1 218 2 46 4 
348 1 242 1 126 1 286 1 235 1 46 1 175 1 218 1 
3 1 151 2 348 2 330 1 264 1 235 4 286 3 175 1 337 1 290 1 373 1 126 2 46 4 218 1 
151 1 348 1 284 1 286 1 235 2 175 1 242 1 126 1 280 1 296 1 218 1 46 2 
348 1 330 2 264 2 286 1 235 3 175 1 290 1 278 1 242 1 126 1 218 1 46 3 
351 2 19 1 332 1 286 2 
26 1 242 1 235 1 46 1 175 1 218 1 
151 1 348 1 242 1 126 1 286 1 235 2 335 1 46 2 175 1 218 1 
124 1 
348 1 242 1 126 1 286 1 235 1 46 1 175 1 218 1 
151 1 348 1 242 1 126 1 264 1 286 1 235 3 335 1 46 3 175 1 218 1 
337 1 3 1 373 1 286 1 
348 1 286 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) (7,77) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) 334 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (15,198,265,301) (7,77) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.NullPointerException (15,198,265,301) (15,198,265,301) (7,77) 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money; | ASSIGN | 1823 | = null
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | STATEMENT | 6040 | stmt -> ;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
217 1 67 1 96 1 95 1 221 1 244 1 226 1 31 1 32 1 322 1 327 1 83 1 332 1 197 1 
188 1 
90 1 188 1 311 1 31 2 326 1 95 1 221 2 107 1 
90 1 153 1 216 1 66 2 157 2 136 1 95 2 221 5 162 1 188 1 266 1 31 5 210 1 326 1 298 2 52 1 150 1 107 2 257 1 
90 1 188 1 211 1 
114 2 188 1 245 1 
306 1 217 1 32 2 67 2 327 2 83 2 332 2 197 2 
36 1 217 1 135 1 288 1 93 1 40 2 291 1 42 1 185 1 10 1 46 1 145 1 186 1 17 1 197 2 306 1 112 1 21 2 63 1 64 2 156 2 67 2 117 1 161 1 118 1 314 1 279 1 121 1 30 2 32 3 174 1 81 1 327 2 83 3 332 2 86 1 87 1 
226 1 217 1 32 1 67 1 96 1 327 1 244 1 83 1 332 1 197 1 
90 1 65 1 155 1 158 1 200 1 221 1 28 1 226 1 188 1 32 1 31 1 327 1 83 1 177 1 
90 1 155 1 158 1 67 1 221 2 28 1 226 1 188 1 31 2 32 1 327 1 83 1 332 1 197 1 177 1 
31 1 95 1 223 1 221 1 107 1 
90 1 188 1 31 2 326 1 95 1 221 2 107 1 144 1 
31 1 221 1 107 1 
306 2 261 1 67 1 50 1 32 2 327 2 83 2 332 1 197 1 
4 1 274 1 228 1 
306 1 112 1 64 1 93 1 40 1 291 1 42 1 314 1 10 1 73 1 145 1 30 1 32 1 83 1 86 1 87 1 
112 1 64 1 93 1 40 1 42 1 291 1 314 1 184 1 10 1 145 1 30 1 78 1 228 1 32 2 327 1 83 2 86 1 332 1 87 1 197 1 
306 1 211 1 
306 1 261 1 67 1 200 1 139 1 184 1 78 2 252 1 170 1 32 5 327 5 83 5 332 4 197 4 
47 1 226 1 32 2 96 1 327 2 83 2 332 2 197 2 
306 1 78 1 32 3 67 1 327 3 83 3 332 3 197 3 
226 1 32 1 96 1 327 1 83 1 332 1 197 1 
226 1 261 1 50 1 32 1 67 1 327 1 83 1 332 1 197 1 
36 1 217 1 135 1 261 1 93 1 40 1 42 1 291 1 221 1 184 1 10 1 46 1 145 1 226 1 186 1 17 1 197 3 306 1 112 1 21 2 64 1 155 1 156 1 158 1 67 2 117 1 118 1 314 1 28 1 279 1 121 1 30 1 78 1 32 4 31 1 174 1 325 1 327 3 83 4 86 1 332 3 87 1 88 1 177 1 
306 1 78 1 32 2 200 1 139 1 327 2 83 2 332 1 197 1 
261 1 155 1 158 1 67 1 221 1 163 1 28 1 184 1 226 1 188 1 78 2 31 1 32 3 325 1 327 3 83 3 332 3 177 1 197 3 
274 1 261 1 67 1 78 1 228 1 32 2 327 2 83 2 332 2 197 2 
306 1 112 1 64 1 93 1 40 1 291 1 42 1 314 1 10 1 145 1 30 1 32 1 83 1 86 1 87 1 
306 1 112 1 64 1 93 1 40 1 42 1 10 1 145 1 30 1 32 1 104 1 83 1 86 1 87 1 236 1 
36 1 4 2 99 1 98 1 185 2 46 1 48 1 228 2 109 1 303 1 21 2 274 2 156 4 117 1 118 1 121 1 318 1 279 2 74 1 254 1 174 1 125 1 175 1 285 1 
47 1 226 1 155 1 32 1 327 1 83 1 332 1 197 1 
187 1 106 1 151 1 
204 1 296 1 250 1 187 2 169 1 106 2 
187 1 106 1 
187 1 106 1 
250 1 169 1 
250 1 169 1 
250 1 169 1 
19 1 187 1 106 1 
19 1 187 1 106 1 
19 1 187 1 106 1 
187 1 268 1 106 1 
187 1 268 1 106 1 
187 1 268 1 106 1 
182 1 221 1 143 1 295 1 187 1 105 1 106 1 151 1 197 2 306 1 152 1 271 1 27 1 120 1 282 1 281 1 31 1 32 2 327 2 83 2 127 1 332 2 286 1 89 1 
152 2 182 3 9 1 221 2 164 1 247 1 296 1 282 2 188 1 187 2 31 2 105 2 126 1 106 2 302 1 269 1 110 2 286 2 89 1 
312 2 235 1 278 1 292 1 57 2 
137 1 235 1 57 1 
137 1 292 1 57 1 
312 1 51 1 235 2 278 1 292 1 57 3 
312 1 235 1 278 1 194 1 292 1 57 2 
90 1 218 1 95 4 221 5 143 1 295 1 48 1 188 2 266 1 298 1 52 3 234 1 150 2 107 1 56 1 114 3 157 1 66 1 201 1 245 1 277 2 71 1 74 1 206 1 171 1 31 5 209 2 326 1 125 1 175 1 127 1 214 2 
90 1 215 1 216 1 218 1 95 7 223 5 221 9 44 1 48 3 188 5 189 5 266 1 298 2 52 8 150 6 107 6 111 1 240 1 114 9 66 2 157 2 201 2 245 3 277 6 29 1 71 2 74 3 171 3 31 9 326 1 125 3 175 3 127 4 34 1 214 6 
90 1 216 1 95 2 221 3 48 1 188 3 298 1 52 3 234 1 150 2 114 4 157 1 66 1 201 1 245 2 277 2 71 1 74 1 206 1 31 3 171 1 209 1 125 1 175 1 127 1 214 2 
90 1 216 1 95 3 221 4 48 2 188 4 298 1 52 5 234 1 150 4 114 7 240 1 157 1 66 1 201 1 245 3 277 4 29 1 71 1 74 2 206 1 31 4 171 2 209 2 125 2 175 2 127 2 34 1 214 4 
38 1 
243 1 211 1 87 1 
116 1 87 1 
145 1 93 1 87 1 
191 1 87 1 
145 1 87 1 
145 1 93 1 243 2 330 1 276 1 87 3 
219 1 199 1 156 7 94 1 220 1 98 3 165 1 293 2 279 3 185 4 74 1 48 1 49 1 321 1 85 1 109 2 108 1 196 1 
219 1 94 1 98 10 224 1 293 3 185 16 46 1 12 1 48 4 49 1 190 1 108 1 109 5 196 5 21 2 239 1 156 31 199 2 115 4 117 1 165 2 118 1 316 3 121 1 279 15 280 1 74 4 208 1 171 3 321 2 125 3 175 3 82 1 85 2 
219 1 94 1 8 1 98 4 293 2 185 5 46 2 48 1 49 1 109 3 196 1 21 4 156 9 199 1 117 2 118 2 165 1 121 2 279 4 74 1 320 1 321 1 82 1 85 1 
219 1 199 1 156 7 94 1 98 3 165 1 293 2 279 3 185 4 74 1 48 1 49 1 321 1 85 1 109 2 108 1 196 1 
219 1 199 1 156 7 94 1 98 3 165 1 293 2 279 3 185 4 74 1 48 1 49 1 321 1 85 1 109 2 108 1 196 1 
265 1 198 1 77 1 231 1 301 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 231 1 301 1 334 1 
265 1 198 1 77 1 231 1 301 1 
265 1 15 1 7 1 231 1 
103 1 
90 1 92 2 178 1 6 2 10 1 188 2 266 1 107 6 112 2 114 2 200 1 203 1 28 1 122 1 30 2 124 2 31 5 32 1 283 1 128 1 40 2 140 1 221 5 42 1 145 1 226 1 227 1 147 1 229 1 298 1 52 2 233 2 150 2 55 4 59 2 237 1 154 1 64 2 241 2 65 1 155 1 66 1 157 1 158 1 245 2 167 1 71 1 172 2 326 3 256 1 327 1 329 1 83 1 87 1 177 1 
154 1 65 1 155 1 311 1 158 1 200 1 221 3 203 1 167 1 28 1 226 1 124 1 31 3 147 1 32 1 326 1 256 1 327 1 107 2 83 1 55 2 177 1 
90 1 221 3 226 1 188 1 147 1 233 1 107 1 55 3 154 1 65 1 155 1 158 1 311 1 200 1 203 1 28 1 167 1 32 1 31 3 256 1 326 1 327 1 83 1 177 1 
90 1 92 1 221 3 226 1 188 1 147 1 233 1 107 2 55 3 154 1 65 1 155 1 311 1 158 1 200 1 203 1 28 1 167 1 32 1 31 3 124 1 326 1 256 1 327 1 83 1 177 1 
90 5 260 1 92 4 178 1 6 2 188 5 266 1 107 7 195 1 200 1 275 1 203 1 28 1 207 1 124 4 32 1 31 5 37 1 221 5 226 1 227 1 147 1 298 1 52 1 233 4 150 1 55 6 59 2 154 1 65 1 241 2 155 1 158 1 311 1 66 1 157 1 245 2 167 1 172 2 326 3 256 1 327 1 83 1 177 1 
90 1 92 2 178 1 6 2 221 4 226 1 188 2 227 1 147 1 266 1 229 1 298 1 52 1 233 2 107 4 150 1 55 4 59 2 154 1 114 2 241 2 65 1 155 1 157 1 66 1 158 1 200 1 245 2 203 1 167 1 28 1 124 2 172 2 31 4 32 1 326 2 256 1 327 1 83 1 177 1 
90 1 260 1 92 2 178 1 6 2 221 4 226 1 188 1 227 1 147 1 266 1 298 1 52 1 233 2 107 4 150 1 55 4 195 1 59 2 154 1 241 2 65 1 155 1 157 1 158 1 66 1 275 1 200 1 245 2 203 1 28 1 167 1 124 2 172 2 32 1 31 4 326 2 256 1 327 1 83 1 177 1 
90 1 260 1 92 2 178 1 6 2 221 4 226 1 188 1 227 1 147 1 266 1 298 1 52 1 233 2 107 4 150 1 55 4 195 1 59 2 154 1 241 2 65 1 155 1 157 1 158 1 66 1 275 1 200 1 245 2 203 1 28 1 167 1 124 2 172 2 32 1 31 4 326 2 256 1 327 1 83 1 177 1 
90 1 35 2 92 2 178 1 221 4 226 1 188 1 147 1 266 1 298 1 52 1 233 2 107 4 150 1 55 4 60 2 270 1 154 1 114 2 241 2 65 1 155 1 24 1 157 1 158 1 66 1 275 1 200 1 203 1 28 1 167 1 124 2 172 2 32 1 31 4 323 1 326 2 256 1 327 1 83 1 177 1 
90 1 260 1 92 3 178 1 37 1 6 2 221 4 226 1 188 1 227 1 266 1 147 1 298 1 52 1 233 3 150 1 107 5 55 5 195 1 59 2 154 1 241 2 65 1 155 1 157 1 66 1 158 1 275 1 200 1 245 2 203 1 28 1 167 1 172 2 32 1 31 4 124 3 326 2 256 1 327 1 83 1 177 1 
90 1 260 1 92 3 178 1 37 1 6 2 221 4 226 1 188 1 227 1 266 1 147 1 298 1 52 1 233 3 150 1 107 5 55 5 195 1 59 2 154 1 241 2 65 1 155 1 157 1 66 1 158 1 275 1 200 1 245 2 203 1 28 1 167 1 172 2 32 1 31 4 124 3 326 2 256 1 327 1 83 1 177 1 
90 1 35 2 92 2 178 1 221 4 226 1 188 1 147 1 266 1 229 1 298 1 52 1 233 2 107 4 150 1 55 4 60 2 154 1 114 2 241 2 65 1 155 1 157 1 66 1 158 1 24 1 200 1 203 1 167 1 28 1 124 2 172 2 31 4 32 1 326 2 256 1 327 1 83 1 177 1 
132 1 36 2 135 1 288 2 179 1 40 8 42 2 10 2 185 1 46 2 145 2 197 1 112 2 308 1 64 8 21 4 156 2 160 1 159 1 117 2 118 2 249 1 318 1 121 2 279 1 122 1 30 7 78 1 32 1 174 2 255 1 327 1 81 1 33 1 329 1 83 1 84 1 332 1 87 3 
4 1 36 1 261 1 98 1 225 1 185 1 46 1 48 1 228 1 109 1 197 1 21 2 274 1 156 3 67 1 117 1 118 1 121 1 279 2 74 1 32 1 171 1 174 1 327 1 125 1 175 1 83 1 176 1 332 1 
306 2 4 1 36 1 21 2 274 1 156 6 219 1 94 1 117 1 98 2 165 1 118 1 293 1 279 3 185 3 318 1 121 1 46 1 74 1 48 1 49 1 228 1 321 1 174 1 211 1 109 2 
91 1 36 1 4 11 135 1 138 1 98 2 225 1 185 8 46 2 48 2 13 1 228 11 190 1 109 1 196 1 306 1 21 4 274 4 156 14 115 3 117 2 202 1 118 2 316 3 279 6 121 2 74 1 208 1 171 2 174 2 81 1 125 2 175 1 
36 1 135 1 93 1 40 1 42 1 291 1 184 1 264 1 10 1 225 1 185 1 145 1 46 1 267 1 197 1 306 1 112 1 64 1 21 2 274 1 156 2 25 1 117 1 118 1 314 1 121 1 279 1 73 1 30 1 78 1 32 2 174 1 327 1 81 1 83 2 86 1 332 1 87 1 
1 1 4 7 94 1 93 2 98 8 184 1 10 2 185 10 11 1 102 1 17 2 109 4 197 1 196 4 112 1 21 6 274 7 117 3 118 3 279 10 121 3 30 3 32 3 125 2 133 2 36 3 135 1 219 1 39 2 40 3 291 2 42 2 293 1 225 1 46 3 145 2 48 3 49 1 228 7 306 2 64 3 156 20 160 1 165 1 314 2 74 3 76 2 78 1 251 2 171 2 321 1 174 3 81 1 327 1 175 2 83 3 332 1 86 2 87 2 
4 1 36 1 21 2 274 1 156 2 117 1 98 1 118 1 318 1 121 1 185 2 46 1 48 1 228 1 174 1 125 1 285 1 196 1 
4 1 36 1 21 2 274 1 156 2 117 1 98 1 118 1 318 1 121 1 279 2 46 1 74 1 228 1 174 1 254 1 175 1 109 1 
36 1 4 2 98 2 185 2 46 1 48 1 228 2 109 1 196 1 21 2 274 2 156 4 117 1 118 1 121 1 318 1 279 2 74 1 171 1 174 1 125 1 175 1 
4 1 36 1 21 2 274 1 156 2 179 1 117 1 98 1 118 1 121 1 185 2 46 1 48 1 228 1 174 1 125 1 285 1 196 1 
4 1 36 1 21 2 274 1 156 2 179 1 117 1 98 1 118 1 121 1 279 2 46 1 74 1 228 1 174 1 254 1 175 1 109 1 
36 1 4 2 179 1 98 2 185 2 46 1 48 1 228 2 109 1 196 1 21 2 274 2 156 4 117 1 118 1 121 1 279 2 74 1 171 1 174 1 125 1 175 1 
36 1 4 2 98 2 185 2 46 1 48 1 228 2 109 1 196 1 21 2 274 2 156 4 117 1 118 1 121 1 279 2 74 1 171 1 174 1 125 1 175 1 
36 1 135 1 93 1 40 1 42 1 291 1 185 1 10 1 145 1 46 1 17 1 306 1 112 1 64 1 21 2 156 2 117 1 118 1 314 1 121 1 279 1 30 1 32 1 174 1 81 1 83 1 86 1 87 1 
36 1 135 1 93 1 40 1 42 1 185 1 10 1 145 1 46 1 104 1 236 1 306 1 112 1 64 1 21 2 156 2 117 1 118 1 121 1 279 1 75 1 30 1 32 1 174 1 81 1 83 1 86 1 87 1 
36 1 4 2 98 2 185 2 225 1 46 1 48 1 228 2 109 1 196 1 21 2 274 2 156 4 117 1 118 1 121 1 279 2 74 1 171 1 174 1 125 1 175 1 
4 2 36 1 39 1 93 1 40 1 42 1 291 1 98 2 185 2 10 1 145 1 46 1 48 1 228 2 17 1 109 1 196 1 64 1 21 2 274 2 156 4 117 1 118 1 314 1 279 2 121 1 74 1 30 1 32 1 171 1 174 1 255 1 125 1 175 1 83 1 86 1 87 1 
36 1 4 1 261 1 98 1 225 1 185 2 46 1 48 1 228 1 196 1 197 1 21 2 274 1 156 3 67 1 117 1 118 1 315 1 279 1 121 1 74 1 32 1 171 1 174 1 327 1 125 1 175 1 83 1 332 1 
259 1 8 1 98 6 185 9 46 2 48 3 190 1 192 1 299 1 193 1 109 3 58 1 196 3 18 2 21 4 310 2 156 19 115 2 117 2 118 2 316 1 69 1 121 2 279 10 74 3 79 1 208 1 171 3 125 3 175 3 
2 1 259 1 8 1 98 4 185 14 46 3 48 3 190 2 192 1 299 1 109 2 58 2 196 2 18 4 21 6 310 1 156 26 115 2 117 3 118 3 119 1 316 2 69 2 248 1 279 12 121 3 74 2 171 3 173 1 284 1 125 3 82 2 212 1 175 2 
2 1 259 1 94 1 8 1 98 8 185 20 190 3 192 1 109 4 196 4 18 4 21 6 115 4 117 3 118 3 119 1 279 21 121 3 208 1 125 4 284 1 212 1 219 1 142 1 293 1 46 3 48 5 49 1 299 1 58 2 310 1 156 41 165 1 316 3 69 1 248 1 74 5 171 4 79 1 173 1 321 1 175 4 82 1 
2 1 259 1 219 1 94 1 8 1 142 1 98 7 293 1 185 20 46 4 48 5 49 1 190 3 192 1 299 1 109 4 58 2 196 3 18 4 21 8 310 1 156 38 115 4 117 4 165 1 118 4 119 1 316 3 69 1 248 1 121 4 279 18 74 4 79 1 208 1 171 4 321 1 173 1 284 1 125 4 82 2 212 1 175 3 
2 1 259 1 219 1 94 1 138 2 8 1 98 14 293 1 185 27 46 2 48 8 49 1 190 2 192 1 299 1 109 7 58 1 196 7 18 4 21 4 310 1 156 52 115 4 117 2 165 1 118 2 119 1 316 4 69 1 248 1 121 2 279 25 74 8 208 2 171 7 321 1 173 1 284 1 125 7 82 1 212 1 175 7 
152 1 3 1 296 1 282 1 187 1 105 1 106 1 269 1 247 1 286 1 
27 1 151 1 
113 1 152 1 101 1 282 1 187 1 105 1 328 1 106 1 286 1 
19 1 134 1 
204 1 268 1 313 1 
152 1 182 2 9 1 221 1 164 1 247 1 296 1 282 1 188 1 187 1 31 1 105 1 126 1 106 1 269 1 110 1 89 1 286 1 
152 1 182 2 9 1 221 1 164 1 247 1 296 1 282 1 188 1 187 1 31 1 105 1 126 1 106 1 269 1 110 1 89 1 286 1 
152 1 182 2 9 1 221 1 164 1 247 1 296 1 282 1 188 1 187 1 31 1 105 1 126 1 106 1 269 1 110 1 89 1 286 1 
204 1 19 1 134 1 
204 1 19 1 134 1 
268 1 313 1 
204 1 268 1 313 1 
271 1 281 1 
182 1 9 1 95 1 221 1 143 1 295 1 187 1 105 1 106 1 54 1 151 1 110 1 197 2 306 1 152 1 271 1 27 1 120 1 282 1 281 1 32 2 31 1 327 2 83 2 127 1 332 2 286 1 
36 1 135 1 288 2 40 2 290 1 42 1 10 1 225 1 185 1 145 1 46 1 272 1 308 1 238 1 64 2 21 2 156 2 117 1 118 1 121 1 279 1 30 2 319 1 32 2 253 1 174 1 327 2 81 1 33 1 83 2 87 1 
112 1 64 1 40 1 42 1 10 1 145 1 122 1 30 1 146 1 80 1 149 1 329 1 87 1 130 1 
64 1 23 1 160 1 137 1 40 1 180 1 42 1 292 1 10 1 30 1 148 1 80 1 324 1 51 1 235 1 129 1 57 2 130 1 
64 2 23 1 160 1 137 1 40 2 180 1 42 1 292 1 10 1 30 2 148 1 80 1 255 1 324 1 51 1 235 1 129 1 57 2 130 1 
64 1 23 1 160 1 137 1 40 1 180 1 141 1 42 1 292 1 10 1 30 1 80 1 324 1 51 1 235 1 129 1 57 2 
232 1 
90 1 153 1 188 1 157 1 66 1 266 1 210 1 298 1 52 1 150 1 
133 1 114 10 245 5 277 5 294 2 48 2 74 2 188 5 14 1 171 2 125 2 52 5 175 2 150 5 214 5 
90 1 188 1 31 1 326 1 221 1 107 1 
0 1 216 1 40 4 140 1 97 1 42 1 221 3 10 1 145 1 266 1 298 2 52 2 107 4 150 2 112 2 64 4 157 2 66 2 246 2 317 1 71 2 122 1 30 4 31 3 326 2 283 2 329 1 128 1 87 1 
90 1 153 1 188 1 210 1 52 1 211 1 150 1 
90 1 6 1 221 1 227 1 188 2 266 1 298 1 52 1 150 1 107 1 59 1 114 1 157 1 66 1 245 1 31 1 326 1 
0 1 90 2 5 2 93 3 100 2 10 4 188 8 14 2 266 4 191 2 107 5 112 1 114 12 116 3 276 1 277 6 30 3 31 5 210 1 283 1 125 2 214 6 287 1 133 2 40 3 42 3 221 5 294 2 45 1 145 3 48 2 230 2 298 4 52 9 53 1 150 8 304 2 62 2 153 1 64 3 66 4 157 4 243 2 245 6 166 2 246 1 71 2 74 2 171 2 255 1 326 3 175 2 87 10 177 2 
90 2 2 1 181 1 221 1 294 2 48 2 188 5 14 1 266 2 190 1 298 2 52 8 107 1 150 5 114 6 157 2 66 2 115 1 245 3 277 5 119 1 316 1 71 1 205 1 74 2 31 1 171 2 173 1 326 1 283 1 284 1 125 2 212 1 175 2 214 5 
260 1 217 1 219 1 96 1 221 1 263 1 294 2 226 1 48 2 14 1 266 1 298 1 52 2 150 2 197 1 157 1 66 1 67 1 244 1 165 1 74 1 32 1 31 1 321 1 322 1 327 1 83 1 332 1 
217 1 36 1 135 1 93 1 40 1 291 1 42 1 10 1 145 1 46 1 186 1 17 1 197 2 306 1 112 1 21 2 64 1 156 1 67 2 117 1 118 1 314 1 279 1 121 1 30 1 32 3 174 1 327 2 83 3 332 2 86 1 87 1 
90 2 114 4 66 1 157 1 245 2 277 2 293 1 71 1 188 4 266 1 298 1 52 1 283 1 150 2 214 2 
152 1 281 1 282 1 262 1 247 1 
152 1 282 1 297 1 
152 1 282 1 297 1 
152 1 282 1 297 1 
152 1 282 1 300 1 
152 1 282 1 300 1 
152 1 282 1 300 1 
152 1 282 1 
187 1 106 1 
21 2 156 10 219 1 117 1 8 1 118 1 165 2 98 5 263 1 121 1 185 5 279 5 46 1 48 2 74 2 321 2 109 3 196 2 
21 2 156 2 8 1 117 1 118 1 98 1 121 1 185 2 46 1 48 1 125 1 196 1 
21 2 156 4 8 1 117 1 98 2 118 1 279 2 121 1 185 2 46 1 74 1 48 1 171 1 125 1 175 1 109 1 196 1 
258 1 21 6 156 3 8 1 117 3 118 3 165 1 98 2 279 2 121 3 185 1 46 3 79 1 321 1 82 1 109 1 196 1 
258 1 219 2 94 1 8 1 224 1 98 12 293 1 185 16 46 5 48 5 49 1 190 1 109 7 196 5 239 1 21 10 156 34 115 4 117 5 165 3 118 5 316 3 279 18 121 5 280 1 168 1 74 5 79 1 208 1 171 3 321 3 125 3 82 2 175 3 
219 1 94 1 8 1 98 2 293 1 185 4 46 1 48 1 49 1 190 1 109 2 21 2 156 8 115 1 117 1 118 1 165 1 316 1 279 4 121 1 74 1 321 1 212 1 
219 1 94 1 8 1 98 3 293 1 185 6 46 2 48 2 49 1 190 1 109 2 196 1 21 4 156 11 115 2 117 2 165 1 118 2 316 1 279 5 121 2 168 1 74 1 208 1 171 1 321 1 125 1 212 1 
2 1 219 1 94 1 8 1 98 4 293 1 185 9 46 3 48 3 49 1 190 1 109 3 196 1 21 6 156 19 115 1 117 3 165 1 118 3 119 1 316 1 279 10 121 3 168 1 74 3 171 2 321 1 173 1 284 1 125 2 212 1 175 2 82 1 
2 1 219 1 94 1 8 1 98 5 293 1 185 10 46 3 48 3 49 1 190 1 109 3 196 2 21 6 156 17 115 1 117 3 165 1 118 3 119 1 316 1 279 7 121 3 168 1 74 2 171 2 321 1 173 1 125 2 284 1 82 1 212 1 175 1 
219 1 94 1 8 1 98 2 293 1 185 4 46 1 48 1 49 1 190 1 109 2 21 2 156 8 115 1 117 1 118 1 165 1 316 1 279 4 121 1 74 1 321 1 212 1 
2 1 21 2 156 12 115 1 8 1 117 1 98 2 118 1 119 1 316 1 185 6 121 1 279 6 46 1 74 2 48 2 171 2 173 1 190 1 284 1 125 2 175 2 212 1 109 1 196 1 
2 1 219 1 94 1 8 1 98 5 293 1 185 10 46 4 48 3 49 1 190 1 109 3 196 2 21 8 156 18 115 1 117 4 165 1 118 4 119 1 316 1 279 8 121 4 168 1 74 2 171 2 321 1 173 1 284 1 125 2 212 1 175 1 82 2 
2 1 8 1 98 6 185 9 46 4 48 3 190 1 109 3 196 3 21 8 156 16 115 1 117 4 118 4 119 1 316 1 279 7 121 4 74 2 79 1 171 3 173 1 284 1 125 3 212 1 175 2 82 2 
156 7 219 1 94 1 165 3 98 6 279 4 185 3 74 1 48 1 49 2 321 3 109 3 196 3 
2 1 219 1 94 1 8 1 98 4 293 1 185 10 46 4 48 3 49 1 190 1 109 3 196 1 21 8 156 18 115 1 117 4 165 1 118 4 119 1 316 1 279 8 121 4 74 2 79 1 171 2 321 1 173 1 284 1 125 2 212 1 175 1 82 2 
21 4 219 1 156 8 94 1 117 2 98 3 118 2 165 1 293 1 279 4 185 4 121 2 46 2 74 1 48 1 49 1 321 1 82 1 109 2 196 1 
219 1 156 6 94 1 165 1 98 2 293 1 279 3 185 3 48 1 74 1 49 1 321 1 211 1 109 2 
21 2 156 4 117 1 98 2 118 1 279 2 121 1 185 2 168 1 46 1 74 1 48 1 171 1 125 1 175 1 109 1 196 1 
156 7 115 2 98 2 316 1 279 4 185 3 74 1 48 1 208 1 171 1 190 1 125 1 175 1 109 1 196 1 
258 1 219 1 94 1 138 1 98 9 293 1 185 11 46 2 48 3 49 1 13 1 109 5 196 4 21 4 156 23 115 2 117 2 165 2 118 2 316 2 279 12 121 2 74 3 171 2 208 1 321 2 125 2 175 2 82 2 
279 1 156 1 115 1 
185 1 156 1 316 1 
133 1 21 2 156 6 117 1 118 1 98 3 121 1 279 3 185 3 46 1 168 1 48 1 74 1 171 1 125 1 175 1 109 2 196 1 
2 1 21 2 156 12 115 1 8 1 117 1 98 2 118 1 119 1 316 1 185 6 121 1 279 6 46 1 74 2 48 2 171 2 173 1 190 1 284 1 125 2 175 2 212 1 109 1 196 1 
219 1 156 6 165 1 98 2 185 3 279 3 48 1 74 1 321 1 109 1 196 1 
258 1 21 2 156 3 94 1 117 1 98 2 165 1 118 1 185 1 279 2 121 1 46 1 49 1 321 1 82 1 109 1 196 1 
306 1 123 1 32 1 200 1 139 1 327 1 83 1 
306 1 309 1 139 1 200 1 43 1 70 1 123 1 32 1 327 1 331 1 83 1 333 1 
112 1 64 4 40 4 41 1 42 1 10 1 122 1 145 1 30 4 255 1 329 1 87 1 305 1 
307 1 20 1 64 2 22 1 93 1 40 2 289 1 42 1 246 1 10 2 145 1 11 1 30 2 87 1 
10 1 112 1 64 1 30 1 137 1 40 1 42 1 292 1 129 1 57 1 
10 1 145 1 308 1 238 1 64 2 30 2 160 1 40 2 255 1 42 1 87 1 
112 1 308 1 64 5 159 1 40 5 41 1 42 2 246 1 10 2 249 1 122 1 145 2 30 4 255 1 329 1 87 3 
112 1 308 1 64 5 40 5 41 1 42 2 246 1 10 2 249 1 122 1 145 2 30 4 16 1 255 1 329 1 87 3 
10 1 112 1 145 1 122 1 64 1 30 1 40 1 42 1 329 1 211 1 87 1 
306 1 112 1 64 1 93 1 40 1 291 1 42 1 10 1 145 1 30 1 78 1 32 2 327 1 83 2 86 1 332 1 87 1 197 1 
306 1 64 1 155 1 158 1 93 2 40 1 291 1 42 1 246 1 10 1 145 2 226 1 30 1 78 1 32 2 191 1 230 1 327 2 83 2 86 1 332 2 87 3 197 1 
93 2 40 2 42 1 10 1 145 2 226 1 230 1 191 1 305 1 236 1 197 1 306 1 64 2 155 1 158 1 246 1 30 2 78 1 32 2 327 2 83 2 332 2 86 1 87 3 
90 1 93 1 40 3 42 1 221 2 10 1 145 1 188 1 230 1 191 1 107 1 305 1 112 1 64 3 242 1 116 1 68 1 243 1 246 1 30 3 31 2 87 4 177 1 
112 1 90 1 62 1 64 3 93 1 40 3 116 1 243 1 221 2 42 1 246 1 10 1 145 1 30 3 188 1 31 2 191 1 230 1 107 1 87 4 305 1 177 1 
10 1 132 1 64 1 30 1 40 1 42 1 
112 2 20 1 132 1 308 1 64 7 288 1 22 1 160 1 159 1 93 1 40 7 42 2 276 1 249 1 10 3 72 1 145 2 30 6 255 1 84 1 87 3 
4 1 36 2 219 1 39 1 94 1 93 1 40 1 290 1 42 1 291 1 98 2 293 1 185 3 10 1 225 1 145 1 46 2 48 1 49 1 228 1 17 1 109 2 197 1 306 2 21 4 64 1 274 1 156 6 117 2 165 1 118 2 314 1 279 3 121 2 74 1 30 1 76 1 78 1 32 2 321 1 174 2 255 1 327 1 83 2 86 1 332 1 87 1 
90 1 0 1 5 1 40 1 95 1 221 3 100 1 188 1 266 2 298 2 52 1 150 1 107 2 112 1 62 1 153 1 64 1 157 2 66 2 116 1 243 1 166 1 30 1 31 3 210 1 326 1 87 2 177 1 
132 1 64 2 93 1 40 2 243 1 42 1 276 1 10 2 145 1 30 2 255 1 87 2 287 1 
306 1 112 1 64 1 93 1 40 1 42 1 10 1 145 1 30 1 78 1 32 2 327 1 83 2 86 1 332 1 87 1 197 1 236 1 
20 1 64 1 22 1 93 1 40 1 42 1 276 1 246 1 10 2 72 1 145 1 30 1 87 1 
306 1 131 1 61 1 222 1 183 1 
306 1 90 1 61 1 131 2 273 1 155 1 158 1 95 1 26 1 221 2 222 2 183 2 28 1 226 1 188 1 31 2 325 1 213 1 177 1 
272 1 61 1 222 1 183 1 319 1 32 1 253 1 327 1 83 1 
61 1 26 1 213 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException 306 319 121 149 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException 306 319 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException 306 319 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException 306 264 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException 306 319 121 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException 306 319 121 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.RuntimeException 23 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate; | CONDITION | 1056 | if (x) -> if (!x)
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate; | ASSIGN | 3404 | = null
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
186 9 218 2 323 1 31 1 113 9 59 2 33 1 117 1 146 3 120 1 245 2 147 2 150 1 38 5 292 2 315 1 317 1 173 1 130 1 359 2 298 1 279 2 174 1 177 1 101 4 362 1 261 1 180 6 
186 9 218 2 323 1 31 1 113 9 59 2 33 1 117 1 146 3 120 1 245 2 147 2 150 1 38 5 292 2 315 1 317 1 173 1 130 1 359 2 298 1 279 2 174 1 177 1 101 4 362 1 261 1 180 6 
186 10 218 2 323 1 31 1 113 10 59 2 33 1 117 1 146 4 120 1 245 2 147 2 150 1 38 6 292 2 315 1 317 1 173 1 130 1 359 2 298 1 279 2 174 1 177 1 101 5 362 1 261 1 180 7 
186 7 218 2 323 1 31 1 113 7 59 2 33 1 117 1 146 2 245 2 147 2 150 1 38 4 292 1 315 1 317 1 173 1 130 1 359 2 298 1 279 2 174 1 177 1 101 3 362 1 261 1 180 4 
317 1 186 4 218 1 113 4 59 1 33 1 279 1 174 1 146 1 120 1 245 1 147 1 150 1 101 2 38 3 362 1 180 3 292 2 
317 1 186 2 81 1 173 1 113 2 59 1 298 1 359 1 279 1 174 1 245 1 236 1 147 1 150 1 351 1 38 1 
315 1 279 2 174 1 146 1 186 3 245 2 317 1 150 1 113 3 38 2 101 1 180 1 359 1 
315 1 317 1 186 9 218 1 31 1 113 9 59 1 359 1 33 1 279 2 174 1 88 1 146 3 120 1 245 2 147 1 328 1 150 1 38 5 101 4 362 1 261 1 180 7 292 2 
315 1 317 1 186 9 218 1 31 1 113 9 59 1 359 1 33 1 279 2 174 1 88 1 146 3 120 1 245 2 147 1 328 1 150 1 38 5 101 4 362 1 261 1 180 7 292 2 
160 1 345 1 82 1 
63 1 345 1 368 2 
207 1 26 2 346 2 231 1 89 2 192 2 371 2 131 2 
308 2 2 1 26 3 321 1 187 1 266 1 366 1 219 1 283 1 192 3 287 2 346 2 89 2 246 1 122 2 329 1 371 2 43 1 124 1 231 1 199 1 72 1 172 1 17 2 297 1 131 2 206 1 207 1 280 1 19 1 132 2 97 1 99 1 381 1 212 1 262 1 22 1 
207 1 26 1 42 1 346 1 89 1 257 1 79 1 192 1 371 1 131 1 
26 1 184 1 42 1 82 1 357 1 192 1 358 1 343 1 288 1 345 1 89 1 90 1 258 1 229 1 
26 1 184 2 42 1 82 1 192 1 358 1 131 1 343 1 345 1 346 1 89 1 90 1 258 2 371 1 229 1 
363 1 184 1 247 1 258 1 202 1 
316 1 184 2 345 1 82 1 247 1 258 2 202 1 58 1 
184 1 258 1 202 1 
184 1 26 1 42 1 192 1 221 1 131 1 207 1 346 1 89 1 247 1 257 1 79 1 258 1 371 1 
345 1 
316 1 232 1 184 2 345 1 82 1 247 1 258 2 202 1 
316 1 251 1 184 5 82 1 267 1 16 1 74 2 202 2 164 1 32 1 286 1 18 1 153 1 345 1 289 1 247 2 226 2 100 2 258 5 
160 1 231 1 
26 2 231 2 311 1 192 2 131 1 318 1 346 1 89 2 371 1 
364 1 142 1 380 1 
308 1 26 1 231 1 199 1 172 1 72 1 219 1 192 1 341 1 287 1 206 1 132 1 246 1 212 1 262 1 22 1 
308 1 26 2 12 1 199 1 72 1 172 1 219 1 192 2 142 1 206 1 287 1 346 1 132 1 20 1 89 1 246 1 212 1 371 1 262 1 22 1 
204 1 288 1 26 5 346 4 12 2 20 1 231 1 89 5 311 1 192 5 371 4 263 1 103 1 131 1 
26 2 42 1 346 2 89 2 376 1 79 1 192 2 371 2 
26 3 12 1 346 3 231 1 89 3 192 3 371 3 131 1 
26 1 42 1 346 1 89 1 79 1 192 1 371 1 
26 1 42 1 318 1 346 1 89 1 311 1 192 1 371 1 131 1 
308 1 26 4 184 1 321 1 311 1 266 1 366 1 219 1 192 4 343 1 287 1 244 1 346 3 89 3 246 1 90 1 122 2 329 1 371 3 229 1 12 1 42 1 231 1 199 1 72 1 172 1 358 1 17 1 297 1 131 2 206 1 207 1 280 1 19 1 132 1 97 1 20 1 281 1 99 1 258 1 381 1 212 1 262 1 22 1 
288 1 26 2 346 1 12 1 231 1 89 2 192 2 371 1 103 1 
184 1 26 3 42 1 12 2 311 1 192 3 295 1 358 1 131 1 343 1 244 1 345 1 346 3 20 1 89 3 90 1 258 1 371 3 229 1 
364 1 26 2 12 1 311 1 192 2 142 1 131 1 346 2 89 2 371 2 
308 1 26 1 231 1 199 1 172 1 72 1 219 1 192 1 287 1 206 1 132 1 246 1 212 1 262 1 22 1 
308 1 26 1 231 1 199 1 72 1 219 1 192 1 287 1 206 1 132 1 208 1 212 1 262 1 373 1 22 1 
2 2 364 2 321 1 107 1 266 1 366 1 4 1 85 1 367 1 142 2 5 1 122 2 329 2 41 1 297 1 17 4 380 2 299 1 255 1 176 1 99 1 381 1 361 1 178 1 
26 1 42 1 346 1 89 1 376 1 192 1 358 1 371 1 
277 1 80 1 
277 1 80 1 
215 1 322 1 
215 1 322 1 
215 1 322 1 
277 1 327 1 80 1 
277 1 327 1 80 1 
277 1 197 1 80 1 
54 1 215 1 322 1 78 1 277 2 80 2 
277 1 327 1 80 1 
277 1 349 1 80 1 
277 1 349 1 80 1 
277 1 349 1 80 1 
104 1 106 1 184 1 26 2 191 1 192 2 193 1 6 1 8 1 346 2 89 2 64 1 314 1 167 1 197 1 370 1 168 1 371 2 274 1 70 1 231 1 277 1 258 1 80 1 
294 1 320 1 171 1 54 1 151 1 70 2 106 1 184 2 277 2 191 2 138 2 356 1 345 1 314 2 64 3 258 2 168 2 40 1 80 2 
218 1 147 1 59 1 
147 1 351 1 59 1 
136 1 118 1 355 1 218 2 147 3 351 1 
136 1 355 1 218 1 147 2 350 1 351 1 
136 2 355 1 218 1 147 2 351 1 
184 5 82 1 164 1 368 3 5 1 143 1 63 1 222 2 6 1 289 2 345 2 145 1 247 4 326 1 167 1 226 1 370 1 67 1 273 1 41 1 352 1 316 1 200 2 16 3 74 1 202 1 299 1 255 1 157 2 100 1 258 5 21 1 
363 5 184 9 217 5 82 1 285 1 268 1 164 1 368 9 5 3 143 2 63 3 6 4 289 6 345 5 145 2 247 7 326 1 226 2 67 3 41 3 316 1 126 1 200 6 16 8 202 6 74 2 378 1 18 1 299 3 255 3 157 6 237 1 100 2 258 9 134 1 
184 3 82 1 143 1 5 1 368 4 63 2 6 1 222 1 345 3 145 1 289 2 247 2 226 1 67 1 273 1 41 1 352 1 200 2 16 3 74 1 18 1 299 1 255 1 100 1 157 2 258 3 
184 4 82 1 285 1 268 1 368 7 143 1 5 2 63 3 6 2 222 2 345 4 145 1 289 4 247 3 226 1 67 2 273 1 41 2 352 1 200 4 16 5 74 1 18 1 299 2 255 2 157 4 100 1 258 4 134 1 
11 1 160 1 22 1 
365 1 22 1 
330 1 
206 1 72 1 22 1 
22 1 158 1 
206 1 22 1 
206 1 11 2 238 1 72 1 272 1 22 3 
293 1 159 1 25 1 252 2 2 4 377 1 194 1 85 2 17 7 5 1 205 1 45 1 250 1 329 3 361 3 41 1 183 1 
293 1 159 1 25 1 252 2 2 4 377 1 194 1 85 2 17 7 5 1 205 1 45 1 250 1 329 3 361 3 41 1 183 1 
293 1 159 1 170 1 25 1 252 2 2 4 377 1 194 1 85 2 17 7 5 1 205 1 45 1 250 1 329 3 361 3 41 1 183 1 
159 2 25 2 2 16 321 1 312 1 194 1 85 5 5 4 325 1 7 4 250 2 65 1 67 3 122 2 329 15 198 3 41 4 293 5 252 3 375 1 377 1 297 1 17 31 205 1 299 3 255 3 45 2 302 1 99 1 381 1 361 10 213 1 50 1 183 1 
293 1 159 1 25 1 252 2 2 5 321 2 377 1 194 1 85 3 165 1 17 9 297 2 86 1 5 1 205 1 325 1 45 1 250 1 99 2 122 4 361 4 329 4 381 2 41 1 
308 1 108 1 186 2 218 1 338 1 163 1 113 2 139 1 59 1 287 1 118 1 245 1 290 1 147 2 150 1 351 1 38 1 93 1 317 1 359 1 279 1 95 1 174 1 154 1 76 1 132 1 212 1 262 1 180 1 51 1 
308 1 108 1 186 3 218 1 338 1 111 1 113 3 139 1 59 1 287 1 118 1 119 1 245 1 290 1 147 2 150 1 351 1 38 1 93 1 359 1 279 1 95 1 174 1 154 1 132 1 235 1 212 1 262 1 180 2 51 1 
308 1 108 1 186 2 338 1 218 1 113 2 139 1 59 1 287 1 118 1 119 1 147 2 150 1 351 1 38 1 93 1 359 1 95 1 174 1 132 1 235 1 212 1 262 1 180 2 51 1 
308 1 354 1 199 1 186 1 239 1 111 1 253 1 113 1 139 2 359 2 114 1 206 1 279 1 287 1 95 2 132 1 270 1 245 1 227 1 212 1 262 1 22 1 51 2 
308 1 108 1 186 1 218 1 338 1 163 1 113 1 139 1 59 1 287 1 118 1 245 1 290 1 147 2 351 1 93 1 317 1 359 1 279 1 95 1 154 1 132 1 235 1 212 1 262 1 51 1 
87 1 
52 1 308 2 164 1 63 2 343 1 224 4 345 2 226 1 271 1 348 1 66 2 227 1 229 1 316 3 71 2 16 2 74 1 357 1 129 1 358 1 132 2 181 1 22 1 182 1 184 5 26 1 185 1 82 1 192 1 284 1 368 2 287 2 34 1 288 1 289 2 145 1 89 1 90 1 37 2 42 1 199 2 202 6 332 2 253 1 206 1 155 2 209 1 211 2 100 1 46 2 258 5 212 1 48 1 262 1 304 1 
52 1 316 1 184 3 26 1 42 1 202 2 332 1 284 1 357 1 192 1 358 1 343 1 232 1 224 2 34 1 288 1 89 1 90 1 271 1 258 3 229 1 182 1 
52 1 316 1 184 3 26 1 42 1 82 1 202 1 284 1 357 1 192 1 358 1 343 1 232 1 224 3 34 1 288 1 345 1 155 1 89 1 90 1 271 1 258 3 229 1 182 1 
52 1 26 1 184 3 82 1 192 1 284 1 343 1 288 1 34 1 224 3 345 1 89 1 90 1 271 1 229 1 316 1 42 1 71 1 202 2 357 1 332 1 358 1 232 1 155 1 258 3 182 1 
306 1 52 1 184 3 26 1 192 1 284 1 164 1 343 1 288 1 34 1 224 2 289 1 89 1 90 1 226 1 121 1 271 1 149 1 229 1 316 1 42 1 71 2 16 1 74 1 202 3 357 1 332 2 358 1 232 1 209 1 100 1 258 3 303 1 319 1 182 1 
52 1 184 4 26 1 82 1 192 1 284 1 164 1 368 2 63 2 343 1 34 1 288 1 224 4 345 2 289 1 89 1 90 1 37 2 271 1 226 1 348 1 66 2 229 1 316 2 42 1 71 2 16 1 202 4 74 1 332 2 357 1 358 1 155 2 209 1 211 2 100 1 46 2 258 4 181 1 182 1 
306 1 52 1 26 1 184 2 192 1 284 1 164 1 343 1 288 1 34 1 224 2 289 1 89 1 90 1 271 1 226 1 229 1 42 1 16 1 74 1 357 1 358 1 209 1 100 1 258 2 303 1 182 1 319 1 
306 1 52 1 26 1 184 2 192 1 284 1 164 1 343 1 288 1 34 1 224 2 289 1 89 1 90 1 271 1 226 1 229 1 42 1 16 1 74 1 357 1 358 1 209 1 100 1 258 2 303 1 182 1 319 1 
306 1 52 1 26 1 184 2 28 1 192 1 284 1 164 1 196 1 343 1 288 1 34 1 224 2 289 1 89 1 90 1 271 1 226 1 229 1 42 1 16 1 74 1 357 1 358 1 100 1 258 2 182 1 264 1 
306 1 52 1 26 1 184 2 192 1 284 1 164 1 343 1 288 1 34 1 224 3 289 1 89 1 90 1 226 1 271 1 121 1 229 1 42 1 71 1 16 1 74 1 202 1 357 1 332 1 358 1 209 1 155 1 100 1 258 2 303 1 182 1 319 1 
306 1 52 1 26 1 184 2 192 1 284 1 164 1 343 1 288 1 34 1 224 3 289 1 89 1 90 1 226 1 271 1 121 1 229 1 42 1 71 1 16 1 74 1 202 1 357 1 332 1 358 1 209 1 155 1 100 1 258 2 303 1 182 1 319 1 
52 1 184 4 26 1 82 1 190 2 192 1 284 1 164 1 368 2 343 1 196 1 34 1 288 1 224 4 345 1 289 1 89 1 90 1 369 2 271 1 226 1 348 1 229 1 316 2 42 1 71 2 16 1 202 4 74 1 332 2 357 1 358 1 155 2 211 2 100 1 46 2 258 4 181 1 182 1 
160 1 364 1 2 3 321 1 266 1 366 1 194 1 4 1 85 2 142 1 5 1 250 1 122 2 329 3 41 1 252 1 231 2 377 1 297 1 17 6 380 1 205 1 45 1 99 1 381 1 361 2 
2 8 364 4 321 2 188 1 266 1 366 2 283 1 85 1 142 11 62 1 5 2 7 3 36 1 65 1 67 2 122 4 329 6 198 3 41 1 293 1 231 1 375 1 297 2 17 14 380 11 299 2 280 1 255 1 301 1 99 2 361 2 381 2 214 1 
308 1 364 1 26 2 2 1 321 1 266 1 219 1 366 1 283 1 192 2 195 1 341 1 287 1 346 1 89 1 246 1 122 2 329 1 371 1 291 1 12 1 231 1 199 1 72 1 172 1 297 1 17 2 206 1 280 1 132 1 20 1 99 1 336 1 212 1 381 1 214 1 262 1 22 1 
308 3 2 10 266 3 162 2 219 2 112 1 5 3 346 1 67 2 122 6 230 2 12 1 231 2 172 2 72 2 17 20 280 1 132 3 235 1 20 1 361 8 22 2 26 3 364 7 321 3 30 2 366 3 283 1 192 3 194 1 85 4 142 7 287 3 89 1 246 2 250 1 329 10 371 1 41 3 293 4 252 1 199 1 377 1 334 1 297 3 380 7 205 1 206 2 300 2 299 2 255 2 45 1 256 1 97 2 99 3 381 3 212 2 214 1 262 2 
24 1 308 7 26 1 2 1 321 2 266 2 366 2 283 1 192 1 4 1 141 1 287 8 346 1 89 1 227 1 122 4 329 1 371 1 12 1 43 2 199 2 15 1 73 1 201 1 253 1 297 2 17 2 206 2 76 1 77 1 280 1 132 8 235 1 99 2 212 2 381 2 179 1 262 2 22 3 
364 1 26 1 2 1 321 1 311 1 266 1 366 1 192 1 85 1 142 1 5 1 346 1 89 1 67 1 122 2 329 2 371 1 41 1 297 1 17 3 380 1 131 1 299 1 255 1 210 1 99 1 361 1 381 1 214 1 
293 1 364 1 2 2 321 1 107 1 266 1 366 1 4 1 142 1 17 2 297 1 380 1 5 1 299 1 99 1 122 2 361 1 381 1 
364 1 321 1 266 1 366 1 4 1 85 1 142 1 17 2 297 1 380 1 255 1 176 1 99 1 122 2 361 1 381 1 329 2 41 1 
293 1 364 2 2 2 321 1 266 1 366 1 4 1 85 1 142 2 17 4 297 1 380 2 5 1 299 1 255 1 99 1 67 1 122 2 329 2 361 2 381 1 41 1 
293 1 364 1 2 2 321 1 107 1 15 1 266 1 366 1 142 1 17 2 297 1 380 1 5 1 299 1 99 1 122 2 361 1 381 1 
364 1 321 1 15 1 266 1 366 1 85 1 142 1 17 2 297 1 380 1 255 1 176 1 99 1 122 2 361 1 381 1 329 2 41 1 
293 1 364 2 2 2 321 1 15 1 266 1 366 1 85 1 142 2 17 4 297 1 380 2 5 1 299 1 255 1 99 1 67 1 122 2 329 2 361 2 381 1 41 1 
293 1 364 2 2 2 321 1 266 1 366 1 85 1 142 2 297 1 17 4 380 2 5 1 299 1 255 1 99 1 67 1 122 2 329 2 361 2 381 1 41 1 
308 1 2 1 26 1 321 1 266 1 219 1 366 1 283 1 192 1 287 1 246 1 122 2 329 1 231 1 199 1 72 1 172 1 17 2 297 1 206 1 280 1 132 1 97 1 99 1 212 1 381 1 262 1 22 1 
308 1 2 1 26 1 321 1 266 1 219 1 366 1 283 1 192 1 287 1 122 2 329 1 373 1 231 1 199 1 72 1 17 2 297 1 206 1 280 1 208 1 132 1 98 1 99 1 212 1 381 1 262 1 22 1 
293 1 364 2 2 2 321 1 266 1 366 1 85 1 142 2 17 4 297 1 380 2 5 1 299 1 255 1 99 1 67 1 122 2 329 2 361 2 381 1 214 1 41 1 
308 1 364 2 2 2 26 1 321 1 162 1 266 1 219 1 366 1 192 1 85 1 142 2 5 1 287 1 246 1 67 1 122 2 329 2 41 1 293 1 72 1 172 1 17 4 297 1 380 2 299 1 206 1 255 1 76 1 132 1 97 1 99 1 361 2 212 1 381 1 262 1 22 1 
26 1 2 2 364 1 321 1 311 1 266 1 366 1 192 1 142 1 5 1 346 1 89 1 67 1 148 1 122 2 329 1 371 1 41 1 293 1 297 1 17 3 131 1 380 1 299 1 255 1 99 1 361 1 381 1 214 1 
305 1 2 9 321 2 29 1 84 1 85 3 165 1 5 3 223 1 7 2 248 1 65 1 67 3 92 2 122 4 329 10 10 1 198 1 41 3 293 3 375 1 297 2 17 19 299 3 233 2 255 3 335 1 99 2 381 2 361 6 
305 1 2 14 321 3 310 1 29 1 161 1 339 1 84 1 85 2 165 1 5 3 325 2 7 2 269 1 67 3 92 1 122 6 329 12 10 2 198 2 41 2 293 2 375 2 203 1 379 1 297 3 17 26 299 3 233 4 255 2 335 2 99 3 361 4 381 3 
305 1 2 20 310 1 321 3 29 1 161 1 339 1 84 1 3 1 194 1 85 4 165 1 5 5 223 1 325 1 7 4 269 1 250 1 65 1 67 4 92 1 122 6 329 21 10 2 198 3 41 5 293 4 252 1 375 3 377 1 203 1 379 1 297 3 17 41 205 1 299 4 233 4 255 4 45 1 335 1 99 3 381 3 361 8 
305 1 2 20 310 1 321 4 29 1 161 1 339 1 84 1 3 1 194 1 85 4 165 1 5 5 223 1 325 2 7 4 269 1 250 1 65 1 67 4 92 1 122 8 329 18 10 2 198 3 41 4 293 3 252 1 375 3 377 1 203 1 379 1 297 4 17 38 205 1 299 4 233 4 255 3 45 1 335 1 99 4 381 4 361 7 
305 1 2 27 310 1 321 2 29 1 161 1 339 1 84 1 194 1 85 7 165 1 62 2 5 8 325 1 7 4 269 1 250 1 65 2 67 7 92 1 122 4 329 25 10 1 198 4 41 8 293 7 252 1 375 2 377 1 203 1 379 1 297 2 17 52 205 1 299 7 233 4 255 7 45 1 335 1 99 2 381 2 361 14 
171 1 54 1 151 1 70 1 277 1 94 1 314 1 191 1 168 1 80 1 
274 1 197 1 
70 1 27 1 156 1 277 1 314 1 191 1 91 1 168 1 80 1 
276 1 327 1 
53 1 78 1 349 1 
294 1 320 1 171 1 54 1 151 1 106 1 70 1 184 1 277 1 191 1 138 1 356 1 345 1 314 1 64 2 258 1 168 1 80 1 
294 1 320 1 171 1 54 1 151 1 106 1 70 1 184 1 277 1 191 1 138 1 356 1 345 1 314 1 64 2 258 1 168 1 80 1 
294 1 320 1 171 1 54 1 151 1 106 1 70 1 184 1 277 1 191 1 138 1 356 1 345 1 314 1 64 2 258 1 168 1 80 1 
276 1 78 1 327 1 
276 1 78 1 327 1 
53 1 349 1 
53 1 78 1 349 1 
104 1 193 1 
104 1 320 1 26 2 184 1 191 1 138 1 192 2 193 1 6 1 8 1 346 2 89 2 247 1 314 1 64 1 167 1 197 1 370 1 168 1 371 2 169 1 274 1 70 1 231 1 277 1 258 1 80 1 
308 2 26 2 2 1 321 1 110 1 266 1 366 1 283 1 192 2 287 2 89 2 313 1 122 2 329 1 123 1 39 1 43 2 127 1 201 1 297 1 17 2 206 1 77 1 280 1 132 2 99 1 212 1 381 1 214 1 262 1 22 1 
0 1 308 2 93 1 108 1 218 1 57 1 324 1 59 1 287 2 154 1 118 1 76 1 132 2 235 1 147 2 351 1 212 1 262 1 51 1 
308 1 93 1 108 1 218 1 57 1 333 1 59 1 287 1 154 1 118 1 132 1 235 1 147 2 351 1 212 1 262 1 51 1 
0 1 307 1 308 1 354 1 199 1 253 1 206 1 287 1 132 1 227 1 212 1 262 1 22 1 51 1 
0 1 308 1 93 1 108 1 218 1 57 1 324 1 59 1 287 1 154 1 118 1 132 1 235 1 147 2 351 1 212 1 262 1 51 1 
166 1 
153 1 160 1 345 1 289 1 82 1 16 1 32 1 
184 1 82 1 164 1 368 1 63 1 289 1 345 2 37 1 226 1 66 1 316 1 16 1 74 1 202 1 209 1 100 1 258 1 
308 3 164 4 342 2 5 2 63 6 345 8 226 4 67 2 68 1 229 2 275 2 11 2 316 3 230 2 125 1 72 3 128 1 16 9 74 4 278 2 129 1 75 2 76 1 132 3 22 10 184 5 137 2 365 3 82 2 238 1 241 2 32 1 368 12 287 3 243 2 145 2 289 8 249 2 41 2 199 1 200 6 202 5 296 1 153 1 206 3 299 2 255 2 100 4 157 6 258 5 260 1 212 4 262 3 158 2 
184 1 310 1 82 2 339 1 241 1 83 1 164 2 368 6 5 2 63 3 7 1 145 1 35 1 345 5 289 5 269 1 226 2 67 2 198 1 41 2 316 1 200 5 375 1 16 8 202 1 74 2 203 1 129 1 379 1 75 2 299 2 255 2 157 5 100 2 258 1 
26 1 184 1 241 1 192 1 164 1 221 1 5 2 116 1 289 2 346 1 89 1 226 1 250 1 371 1 41 1 42 1 16 2 74 1 377 1 131 1 75 2 207 1 45 1 257 1 100 1 79 1 258 1 303 1 
82 1 16 1 74 1 164 1 32 1 153 1 289 1 345 1 226 1 100 1 
230 1 200 5 241 1 16 5 5 2 368 10 75 2 299 2 63 5 255 2 289 5 345 5 67 2 157 5 41 2 
316 1 184 1 345 1 82 1 258 1 202 1 
308 4 184 3 56 1 164 1 287 4 145 2 289 2 226 2 227 1 68 1 316 2 125 2 199 2 16 2 74 2 202 4 253 1 129 2 18 1 206 1 132 4 100 2 258 3 212 1 48 1 262 1 337 1 22 1 304 1 
308 1 26 3 321 1 266 1 219 1 366 1 192 3 287 1 346 2 89 2 246 1 122 2 329 1 371 2 231 1 199 1 172 1 72 1 17 1 297 1 131 2 206 1 207 1 280 1 19 1 132 1 97 1 99 1 381 1 212 1 262 1 22 1 
252 1 82 2 200 2 16 1 74 1 164 1 129 1 368 4 63 2 289 2 145 1 345 4 226 1 157 2 100 1 
70 1 13 1 191 1 
70 1 13 1 191 1 
171 1 70 1 191 1 193 1 61 1 
70 1 13 1 191 1 
70 1 152 1 191 1 
70 1 152 1 191 1 
70 1 152 1 191 1 
70 1 191 1 
277 1 80 1 
293 1 252 1 2 4 321 2 377 1 194 1 85 2 17 8 297 2 5 1 205 1 325 1 45 1 99 2 250 1 122 4 329 4 361 3 381 2 41 1 
252 1 160 1 2 3 377 1 194 1 85 2 17 6 5 1 205 1 45 1 250 1 329 3 361 2 41 1 
293 1 2 2 321 1 85 1 297 1 17 4 5 1 299 1 255 1 96 1 99 1 67 1 122 2 329 2 361 2 381 1 41 1 
293 1 2 3 375 1 85 1 17 7 5 1 299 1 7 2 255 1 65 1 67 1 329 4 361 2 198 1 41 1 
2 11 321 2 194 1 85 5 5 3 62 1 325 2 7 2 36 1 250 2 67 2 65 1 122 4 329 12 198 2 41 3 293 4 252 1 377 1 44 1 17 23 297 2 205 1 299 2 255 2 45 2 99 2 361 9 381 2 
7 1 329 1 17 1 
2 1 17 1 198 1 
293 1 230 1 2 3 321 1 85 2 297 1 17 6 5 1 299 1 255 1 96 1 99 1 67 1 122 2 381 1 329 3 361 3 41 1 
2 6 310 1 321 1 339 1 165 1 85 1 5 2 7 1 269 1 67 2 122 2 329 6 198 1 41 2 293 1 375 1 203 1 17 12 297 1 379 1 299 2 255 2 99 1 381 1 361 2 
293 1 2 3 377 1 85 1 17 6 5 1 45 1 250 1 329 3 361 2 41 1 
293 1 2 1 321 1 44 1 194 1 85 1 17 3 297 1 205 1 325 1 45 1 250 1 99 1 122 2 361 2 329 2 381 1 
293 2 2 5 321 1 377 1 165 1 85 3 297 1 17 10 5 2 116 1 45 2 99 1 250 2 122 2 381 1 361 5 329 5 41 2 
293 1 2 2 321 1 165 1 297 1 17 2 5 1 299 1 99 1 122 2 381 1 361 1 
293 1 2 2 321 1 85 1 165 1 297 1 17 4 5 1 299 1 255 1 99 1 67 1 122 2 329 2 361 2 381 1 41 1 
293 1 2 1 321 3 44 1 165 1 85 1 17 3 297 3 325 1 223 1 45 1 99 3 250 1 122 6 329 2 381 3 361 2 
2 16 321 5 312 1 194 1 165 1 85 7 5 5 325 2 223 1 7 4 250 3 65 1 67 3 122 10 329 18 198 3 41 5 293 5 252 1 375 1 377 2 44 1 297 5 17 34 205 1 299 3 255 3 45 3 96 1 99 5 381 5 361 12 213 1 50 1 
2 4 310 1 321 1 194 1 165 1 85 2 5 1 7 1 250 1 122 2 329 4 198 1 41 1 252 1 375 1 377 1 17 8 297 1 205 1 45 1 99 1 381 1 361 2 
2 6 310 1 321 2 194 1 85 2 165 1 5 2 7 2 250 1 65 1 67 1 122 4 329 5 198 1 41 1 293 1 252 1 375 1 377 1 17 11 297 2 205 1 299 1 45 1 96 1 99 2 381 2 361 3 
2 9 310 1 321 3 339 1 194 1 165 1 85 3 5 3 325 1 7 1 269 1 250 1 67 2 122 6 329 10 198 1 41 3 293 1 252 1 375 1 377 1 203 1 17 19 297 3 379 1 205 1 299 2 255 2 45 1 96 1 99 3 381 3 361 4 
2 10 310 1 321 3 339 1 194 1 165 1 85 3 5 3 325 1 7 1 269 1 250 1 67 2 122 6 329 7 198 1 41 2 293 2 252 1 375 1 377 1 203 1 17 17 297 3 379 1 205 1 299 2 255 1 45 1 96 1 99 3 381 3 361 5 
2 4 310 1 321 1 194 1 165 1 85 2 5 1 7 1 250 1 122 2 329 4 198 1 41 1 252 1 375 1 377 1 17 8 297 1 205 1 45 1 99 1 381 1 361 2 
2 6 310 1 321 1 339 1 165 1 85 1 5 2 7 1 269 1 67 2 122 2 329 6 198 1 41 2 293 1 375 1 203 1 17 12 297 1 379 1 299 2 255 2 99 1 381 1 361 2 
2 10 310 1 321 4 339 1 194 1 165 1 85 3 5 3 325 2 7 1 269 1 250 1 67 2 122 8 329 8 198 1 41 2 293 2 252 1 375 1 377 1 203 1 379 1 17 18 297 4 205 1 299 2 255 1 45 1 96 1 99 4 381 4 361 5 
2 9 310 1 321 4 339 1 165 1 85 3 5 3 223 1 325 2 7 1 269 1 67 3 122 8 329 7 198 1 41 2 293 3 375 1 203 1 379 1 17 16 297 4 299 3 255 2 99 4 381 4 361 6 
293 3 2 3 377 1 194 1 85 3 17 7 5 1 205 2 45 3 250 3 329 4 361 6 41 1 
2 10 310 1 321 4 339 1 194 1 165 1 85 3 5 3 223 1 325 2 7 1 269 1 250 1 67 2 122 8 329 8 198 1 41 2 293 1 252 1 375 1 377 1 203 1 379 1 17 18 297 4 205 1 299 2 255 1 45 1 99 4 381 4 361 4 
288 1 26 1 231 1 89 1 220 1 192 1 103 1 
105 1 331 1 26 1 231 1 265 1 220 1 192 1 360 1 144 1 288 1 89 1 103 1 
206 1 287 1 160 1 308 1 132 1 199 1 227 1 212 1 253 1 262 1 22 1 
308 1 26 2 12 1 231 1 199 1 72 1 219 1 192 2 206 1 287 1 346 1 132 1 89 1 246 1 212 1 371 1 262 1 22 1 
308 1 26 2 219 1 192 2 287 1 243 1 346 1 89 2 246 1 90 1 371 2 12 1 42 1 231 1 125 1 72 2 358 1 206 2 132 1 212 1 262 1 22 3 158 1 
308 2 26 2 240 1 219 1 192 2 287 2 243 1 346 1 89 2 90 1 371 2 12 1 42 1 231 1 125 1 72 2 358 1 206 2 208 1 132 2 212 1 262 1 22 3 158 1 
308 3 1 1 184 2 365 1 82 1 240 1 287 3 243 1 345 1 372 1 229 1 11 1 125 1 199 1 72 1 202 1 206 1 132 3 258 2 212 1 262 1 22 4 158 1 
275 1 11 1 308 3 184 2 199 1 125 1 365 1 82 1 240 1 72 1 202 1 206 1 287 3 243 1 345 1 132 3 258 2 212 1 229 1 262 1 22 4 158 1 
287 1 24 1 308 1 132 1 212 1 262 1 
24 1 308 6 43 1 199 2 238 1 73 1 72 1 201 1 141 1 287 7 206 2 76 1 132 7 235 1 9 1 47 1 69 1 212 3 179 1 262 2 22 3 
308 1 2 3 162 1 266 2 219 1 5 1 346 1 122 4 12 1 231 2 127 1 172 1 72 1 17 6 76 1 132 1 361 2 22 1 364 1 26 2 321 2 30 1 366 2 192 2 194 1 85 2 142 1 287 1 89 1 246 1 250 1 329 3 371 1 41 1 252 1 377 1 297 2 380 1 206 1 205 1 45 1 97 1 99 2 381 2 212 1 214 1 262 1 
308 1 184 3 137 1 365 1 82 1 164 2 32 1 342 1 287 1 345 1 289 1 247 1 226 2 249 1 68 1 229 1 275 1 11 1 316 1 199 1 16 1 74 2 202 2 153 1 132 1 100 2 258 3 22 2 
11 1 24 1 308 2 238 1 72 1 287 2 206 1 76 1 132 2 260 1 212 2 262 1 22 2 
308 4 199 1 240 1 253 1 287 4 206 1 76 1 132 4 175 1 227 1 212 1 262 1 22 1 
308 2 125 1 72 1 254 1 334 1 287 2 206 1 132 2 9 1 69 1 212 2 135 1 262 1 22 1 
287 1 308 1 132 1 108 1 199 1 147 1 351 1 212 1 59 1 262 1 
308 2 110 1 201 1 287 2 206 1 76 1 132 2 235 1 212 1 262 1 22 1 
308 4 125 1 199 1 73 1 201 1 253 1 287 5 206 2 76 1 132 5 175 1 227 1 212 2 179 1 262 2 22 3 
308 4 125 1 199 1 201 1 253 1 340 1 287 5 206 2 76 1 132 5 175 1 227 1 212 2 179 1 262 2 22 3 
308 1 26 2 12 1 231 1 199 1 72 1 219 1 192 2 206 1 287 1 346 1 132 1 208 1 89 1 212 1 371 1 262 1 22 1 
308 1 125 1 238 1 72 1 287 1 206 1 132 1 9 1 47 1 69 1 212 2 262 1 22 1 
26 1 282 1 109 1 192 1 89 1 313 1 228 1 123 1 39 1 
23 1 282 1 42 1 109 1 358 1 343 1 234 1 242 1 244 1 90 1 228 1 229 1 
242 1 282 1 231 1 109 1 228 1 
23 1 234 1 184 1 247 1 258 1 228 1 374 1 
174 1 160 1 150 1 38 1 
279 1 174 1 186 1 245 1 150 1 113 1 38 1 
113 1 139 1 359 1 
279 1 174 1 353 1 309 1 216 1 186 3 245 1 317 1 173 2 150 1 113 3 38 1 
279 1 174 1 186 2 245 1 150 1 113 2 38 1 180 1 292 1 
279 1 186 1 245 1 317 1 218 1 147 1 113 1 38 1 101 1 59 1 362 1 
279 1 186 1 245 1 317 1 150 1 113 1 38 1 
279 1 174 1 186 1 245 1 317 1 150 2 113 1 
317 1 186 2 189 1 113 2 60 1 279 2 344 1 245 2 150 1 38 1 
317 1 186 3 31 1 113 3 279 1 174 1 146 1 245 1 150 1 101 1 38 2 261 1 180 2 
317 1 186 2 218 1 113 2 59 1 279 1 174 1 118 1 245 1 133 1 147 2 150 1 351 1 38 1 180 1 
279 2 174 1 146 1 120 1 186 4 245 2 317 1 150 1 113 4 38 2 101 1 180 2 292 1 
279 1 174 1 186 1 245 1 317 1 150 1 113 1 38 1 
309 1 216 1 186 4 173 1 113 4 279 1 174 2 146 1 245 1 150 2 49 1 101 1 38 3 180 2 
317 1 186 2 113 2 140 1 279 1 174 1 245 1 328 1 150 1 38 1 102 1 180 1 
279 1 174 1 309 1 216 2 186 3 245 1 317 1 347 1 173 2 150 1 113 3 38 1 
115 1 55 2 259 1 38 2 
279 1 14 1 186 1 245 1 317 1 113 1 
279 1 174 1 186 2 245 1 317 1 150 1 113 2 38 1 261 1 180 1 
225 1 
279 1 174 1 186 1 245 1 317 1 150 1 113 1 38 1 
279 1 174 1 186 3 245 1 317 1 173 1 150 1 113 3 38 1 261 1 180 1 
146 1 49 1 38 1 101 1 
150 1 38 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) (62,85) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (62,85) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) (62,85) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (152,283,303,320) (152,283,303,320) (152,283,303,320) 80 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 246 157 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 246 157 
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | CONDITION | 1159 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I | ASSIGN | 4800 | = null
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 80 1 
212 1 217 1 292 1 
217 1 178 1 26 2 
204 2 304 1 281 1 21 2 93 2 307 2 7 2 328 2 
161 1 204 2 115 1 206 2 205 1 297 2 41 1 261 1 7 2 9 1 10 1 304 1 124 1 46 1 307 3 174 1 134 1 21 2 93 3 95 1 54 1 143 1 60 1 237 1 328 2 194 2 329 1 27 2 196 1 101 1 281 1 29 1 244 1 243 1 250 1 66 1 37 2 
204 1 304 1 21 1 93 1 307 1 319 1 247 1 7 1 86 1 328 1 
69 1 19 1 21 1 93 1 207 1 165 1 319 1 149 1 217 1 307 1 126 1 34 1 292 1 112 1 
204 1 69 1 19 2 21 1 165 2 93 1 207 1 319 1 7 1 149 1 328 1 217 1 307 1 292 1 112 1 
19 1 165 1 13 1 167 1 120 1 
19 2 217 1 39 1 165 2 13 1 35 1 292 1 120 1 
19 1 165 1 120 1 
204 1 19 1 21 1 165 1 93 1 319 1 7 1 328 1 304 1 13 1 307 1 247 1 84 1 86 1 
217 1 
19 2 217 1 165 2 13 1 35 1 310 1 292 1 120 1 
19 5 186 1 165 5 318 2 3 1 188 1 55 1 81 1 120 2 191 1 302 1 217 1 13 2 200 1 332 1 35 1 158 2 292 1 87 2 
212 1 281 1 
139 1 204 1 21 2 93 2 7 1 328 1 281 2 307 2 220 1 
264 1 5 1 177 1 
205 1 93 1 41 1 143 1 261 1 194 1 27 1 124 1 101 1 281 1 307 1 243 1 174 1 175 1 134 1 37 1 
204 1 205 1 21 1 93 2 41 1 143 1 261 1 7 1 194 1 264 1 27 1 101 1 124 1 243 1 174 1 307 2 134 1 111 1 37 1 38 1 
204 3 281 1 21 3 93 3 307 3 7 3 38 1 328 1 
204 1 21 1 93 1 307 1 319 1 7 1 86 1 
139 1 204 1 21 1 93 1 307 1 319 1 220 1 7 1 328 1 
161 1 204 3 69 1 115 1 206 1 205 1 207 1 165 1 297 2 41 1 261 1 7 3 262 1 9 1 46 1 304 1 124 1 174 1 307 4 134 1 220 1 19 1 21 3 93 4 54 1 319 1 143 1 60 1 237 1 149 1 328 2 194 1 329 1 27 1 101 1 281 1 244 1 243 1 331 1 111 1 66 1 37 1 38 1 112 1 
204 1 281 1 21 2 93 2 307 2 126 1 7 1 170 1 38 1 
204 3 69 1 19 1 21 3 165 1 93 3 207 1 319 1 7 3 25 1 262 1 149 1 328 1 217 1 307 3 220 1 111 1 38 2 112 1 
264 1 204 2 21 2 93 2 307 2 5 1 220 1 7 2 38 1 328 1 
205 1 93 1 41 1 143 1 261 1 194 1 27 1 124 1 101 1 281 1 307 1 174 1 243 1 134 1 37 1 
93 1 41 1 323 1 261 1 194 1 27 1 124 1 101 1 281 1 307 1 174 1 243 1 221 1 134 1 37 1 
161 1 115 2 206 4 297 2 5 2 299 1 301 1 264 2 177 2 309 1 131 1 90 1 315 1 228 1 141 1 95 2 54 1 57 1 144 1 60 1 237 1 329 1 244 1 106 1 
204 1 21 1 207 1 93 1 307 1 306 1 319 1 7 1 
204 4 21 5 93 5 7 4 170 1 328 1 281 1 307 5 126 1 105 1 220 1 109 1 111 1 38 2 
204 2 21 2 306 1 93 2 307 2 319 1 7 2 86 1 
254 1 218 1 
254 1 218 1 
164 1 219 1 
164 1 219 1 
164 1 219 1 
254 1 218 1 145 1 
238 1 254 1 218 1 
164 1 254 2 215 1 218 2 219 1 99 1 
254 1 218 1 145 1 
254 1 218 1 145 1 
254 1 218 1 79 1 
254 1 218 1 79 1 
254 1 218 1 79 1 
314 1 316 2 19 2 254 2 165 2 273 2 326 3 211 1 171 1 123 2 279 2 215 1 217 1 218 2 155 2 88 1 225 1 160 1 203 1 
204 2 70 1 254 1 165 1 7 2 123 1 307 2 14 1 218 1 130 1 135 1 225 1 312 1 316 1 19 1 21 2 93 2 272 1 273 1 326 1 238 1 281 1 248 1 155 1 
280 1 137 1 277 1 
280 1 195 1 277 1 
240 1 195 1 269 1 253 1 137 2 277 3 
195 1 234 1 269 1 253 1 137 1 277 2 
195 1 269 2 137 1 253 1 277 2 
256 2 165 5 81 2 120 1 42 1 300 1 13 4 305 1 217 2 127 1 130 1 309 1 178 1 267 2 87 1 312 1 185 1 19 5 228 1 141 1 318 1 272 1 26 3 191 3 102 1 106 1 332 1 35 1 108 1 158 1 291 2 292 1 
256 6 165 9 167 5 81 6 120 6 42 1 13 7 217 5 127 2 130 4 309 3 178 3 267 6 87 2 185 3 19 9 228 3 141 3 318 2 188 1 321 1 56 1 26 9 191 8 98 1 63 1 287 1 106 3 35 1 332 1 108 2 289 1 158 2 110 5 292 1 
256 2 165 3 81 2 300 1 217 3 13 2 305 1 127 1 130 1 309 1 178 2 267 2 87 1 19 3 185 1 228 1 318 1 141 1 188 1 191 3 26 4 106 1 108 1 158 1 291 1 292 1 
256 4 165 4 81 4 300 1 217 4 305 1 13 3 127 1 130 2 309 2 178 3 267 4 87 1 19 4 185 2 228 2 318 1 141 2 188 1 26 7 191 5 98 1 63 1 287 1 106 2 108 1 158 1 291 2 292 1 
213 1 212 1 243 1 
243 1 61 1 
0 1 
243 1 41 1 
213 2 243 3 48 1 153 1 41 1 261 1 
243 1 41 1 261 1 
243 1 249 1 
17 1 115 3 162 1 227 1 206 7 141 1 233 1 95 4 169 2 47 1 32 1 30 1 106 1 131 2 107 1 67 1 90 3 
17 1 115 3 162 1 227 1 206 7 141 1 233 1 95 4 169 2 47 1 32 1 30 1 106 1 131 2 107 1 67 1 90 3 
17 1 115 3 162 1 270 1 227 1 206 7 141 1 233 1 95 4 169 2 47 1 32 1 30 1 106 1 131 2 107 1 67 1 90 3 
161 1 294 1 162 2 115 15 206 31 297 2 169 3 47 1 129 1 309 3 131 5 90 10 17 1 185 3 227 2 228 3 94 1 229 1 141 4 233 1 95 16 142 1 325 1 60 1 329 1 28 1 151 3 244 1 30 2 32 5 106 4 107 2 67 1 159 4 
161 2 294 1 115 4 162 1 206 9 297 4 169 2 47 1 216 1 131 3 90 4 20 1 227 1 141 1 95 5 233 1 60 2 329 2 244 2 30 1 32 1 106 1 107 1 67 1 
303 1 22 1 152 1 320 1 80 1 
303 1 22 1 152 1 320 1 62 1 
303 1 22 1 283 1 85 1 
303 1 22 1 152 1 320 1 62 1 
303 1 22 1 152 1 320 1 80 1 
288 1 
69 1 257 2 165 5 259 2 74 4 81 2 12 1 178 2 87 1 89 2 19 5 21 1 93 1 24 1 26 2 191 2 192 2 100 1 278 2 194 2 27 2 101 1 197 1 35 3 34 1 292 1 37 2 112 1 207 1 208 1 41 1 120 6 43 1 122 1 45 1 124 2 125 1 214 1 217 2 307 1 126 1 127 1 49 1 134 1 317 2 318 1 232 1 319 1 235 1 147 2 149 1 242 1 243 1 332 1 158 1 
69 1 19 3 21 1 207 1 165 3 93 1 319 1 74 2 120 2 24 1 192 1 149 1 122 1 45 1 125 1 242 1 307 1 126 1 35 1 310 1 34 1 112 1 
69 1 19 3 21 1 207 1 165 3 93 1 259 1 319 1 74 3 120 1 24 1 149 1 122 1 45 1 125 1 242 1 217 1 307 1 126 1 35 1 310 1 34 1 292 1 112 1 
69 1 165 3 207 1 259 1 74 3 120 2 122 1 45 1 125 1 307 1 217 1 126 1 310 1 19 3 21 1 93 1 319 1 24 1 147 1 149 1 192 1 242 1 35 1 34 1 292 1 112 1 
69 1 165 5 257 2 4 1 259 4 168 1 74 6 81 1 178 2 87 1 89 2 19 5 21 1 91 1 93 1 24 1 191 1 192 4 278 2 35 3 34 1 292 5 112 1 117 1 207 1 120 7 43 1 122 1 45 1 125 1 307 1 217 5 126 1 49 1 310 1 138 1 317 2 318 1 319 1 147 4 149 1 242 1 332 1 158 1 
69 1 165 4 257 2 259 2 74 4 81 1 178 2 87 1 89 2 19 4 21 1 93 1 24 1 191 1 26 2 192 2 278 2 100 1 34 1 35 2 292 1 112 1 207 1 120 4 43 1 122 1 45 1 125 1 307 1 217 2 126 1 49 1 317 2 318 1 319 1 147 2 149 1 242 1 332 1 158 1 
69 1 117 1 257 2 165 4 207 1 259 2 74 4 120 4 81 1 43 1 122 1 45 1 125 1 217 1 307 1 126 1 49 1 178 2 87 1 89 2 138 1 19 4 317 2 91 1 21 1 93 1 318 1 319 1 147 2 24 1 191 1 192 2 149 1 278 2 242 1 35 2 34 1 332 1 158 1 292 1 112 1 
69 1 117 1 257 2 165 4 207 1 259 2 74 4 120 4 81 1 43 1 122 1 45 1 125 1 217 1 307 1 126 1 49 1 178 2 87 1 89 2 138 1 19 4 317 2 91 1 21 1 93 1 318 1 319 1 147 2 24 1 191 1 192 2 149 1 278 2 242 1 35 2 34 1 332 1 158 1 292 1 112 1 
69 1 165 4 207 1 259 2 166 2 72 1 74 4 120 4 81 1 43 1 122 1 45 1 125 1 217 1 307 1 126 1 87 1 19 4 317 2 91 1 21 1 93 1 318 1 319 1 236 2 147 2 24 1 26 2 191 1 192 2 149 1 278 2 239 1 242 1 64 1 35 2 34 1 332 1 158 1 292 1 112 1 
69 1 117 1 257 2 165 4 207 1 259 3 168 1 74 5 81 1 120 5 43 1 122 1 45 1 125 1 217 1 307 1 126 1 49 1 178 2 87 1 89 2 138 1 19 4 317 2 91 1 21 1 318 1 93 1 319 1 24 1 147 3 191 1 149 1 192 3 278 2 242 1 35 2 332 1 34 1 158 1 292 1 112 1 
69 1 117 1 257 2 165 4 207 1 259 3 168 1 74 5 81 1 120 5 43 1 122 1 45 1 125 1 217 1 307 1 126 1 49 1 178 2 87 1 89 2 138 1 19 4 317 2 91 1 21 1 318 1 93 1 319 1 24 1 147 3 191 1 149 1 192 3 278 2 242 1 35 2 332 1 34 1 158 1 292 1 112 1 
69 1 165 4 166 2 259 2 74 4 81 1 87 1 19 4 21 1 93 1 24 1 191 1 26 2 192 2 278 2 100 1 34 1 35 2 292 1 112 1 207 1 120 4 43 1 122 1 45 1 125 1 307 1 217 1 126 1 317 2 318 1 319 1 236 2 147 2 149 1 242 1 64 1 332 1 158 1 
161 1 162 1 115 3 206 6 5 1 297 2 169 1 264 1 212 1 47 1 177 1 131 2 90 2 227 1 141 1 54 1 233 1 95 3 57 1 60 1 237 1 329 1 281 2 244 1 106 1 67 1 
161 2 115 6 206 14 297 4 5 4 6 1 9 1 263 1 264 11 177 11 131 1 309 1 90 2 185 2 228 2 229 1 23 1 94 1 141 2 54 1 95 8 96 1 60 2 237 2 329 2 196 1 281 1 151 3 244 2 32 1 199 1 106 1 159 3 
204 1 161 1 115 1 205 1 206 2 5 1 297 2 41 1 261 1 7 1 9 1 124 1 174 1 307 2 175 1 134 1 313 1 52 1 21 1 93 2 54 1 95 1 143 1 96 1 60 1 237 1 194 1 27 1 329 1 101 1 196 1 281 1 243 1 244 1 245 1 111 1 37 1 38 1 
161 3 162 1 71 2 5 7 169 1 7 1 261 2 83 1 9 1 264 7 174 2 177 7 15 2 268 1 90 8 185 2 21 1 93 3 271 2 95 10 96 1 276 1 194 3 27 3 196 1 101 2 281 2 32 4 106 3 111 1 37 3 38 1 204 1 115 10 206 20 205 2 297 6 41 2 47 1 124 1 46 2 307 3 131 4 309 2 134 2 222 2 53 1 227 1 228 2 141 3 233 1 54 3 143 2 60 3 237 3 329 3 244 3 243 2 67 1 
204 1 161 2 115 1 206 2 297 4 41 2 7 1 119 1 9 1 124 2 307 1 134 2 179 1 268 1 16 1 21 1 93 1 54 2 95 1 232 1 57 1 235 1 60 2 237 2 194 8 150 1 27 8 329 2 241 1 101 2 196 1 282 1 243 3 244 2 246 1 201 1 250 2 37 7 38 1 
161 1 204 1 115 2 206 3 5 1 297 2 7 1 264 1 307 1 177 1 131 1 309 1 220 1 90 1 185 1 21 1 228 1 93 1 141 1 54 1 95 1 96 1 60 1 237 1 148 1 328 1 329 1 244 1 106 1 
161 1 315 1 206 2 228 1 141 1 54 1 95 2 5 1 297 2 57 1 60 1 237 1 264 1 329 1 244 1 32 1 177 1 90 1 
161 1 115 2 206 2 54 1 5 1 297 2 57 1 60 1 299 1 237 1 264 1 329 1 244 1 177 1 131 1 309 1 106 1 90 1 
161 1 115 2 206 4 297 2 5 2 264 2 177 2 309 1 131 1 90 2 185 1 228 1 141 1 95 2 54 1 57 1 60 1 237 1 329 1 244 1 32 1 106 1 
161 1 315 1 206 2 228 1 141 1 54 1 95 2 5 1 297 2 60 1 237 1 264 1 329 1 244 1 32 1 177 1 179 1 90 1 
161 1 115 2 206 2 54 1 5 1 297 2 60 1 299 1 237 1 264 1 329 1 244 1 177 1 131 1 309 1 106 1 179 1 90 1 
161 1 115 2 206 4 297 2 5 2 264 2 177 2 309 1 131 1 179 1 90 2 185 1 228 1 141 1 95 2 54 1 60 1 237 1 329 1 244 1 32 1 106 1 
161 1 115 2 206 4 297 2 5 2 264 2 177 2 309 1 131 1 90 2 185 1 228 1 141 1 95 2 54 1 60 1 237 1 329 1 244 1 32 1 106 1 
161 1 115 1 206 2 205 1 297 2 41 1 261 1 9 1 46 1 124 1 174 1 307 1 134 1 93 1 95 1 54 1 143 1 60 1 237 1 194 1 27 1 329 1 196 1 101 1 281 1 243 1 244 1 37 1 
161 1 115 1 206 2 297 2 41 1 261 1 9 1 124 1 174 1 307 1 134 1 221 1 92 1 93 1 95 1 54 1 323 1 60 1 237 1 194 1 27 1 329 1 196 1 101 1 281 1 243 1 244 1 37 1 
161 1 115 2 206 4 297 2 5 2 264 2 177 2 309 1 131 1 90 2 185 1 228 1 141 1 95 2 54 1 96 1 60 1 237 1 329 1 244 1 32 1 106 1 
161 1 115 2 206 4 205 1 5 2 297 2 41 1 261 1 264 2 46 1 174 1 307 1 177 2 131 1 309 1 134 1 90 2 185 1 228 1 141 1 271 1 93 1 95 2 54 1 143 1 60 1 237 1 194 1 27 1 329 1 101 1 282 1 243 1 244 1 32 1 106 1 37 1 
161 1 204 1 115 1 206 3 297 2 5 1 7 1 264 1 307 1 128 1 177 1 309 1 220 1 90 1 185 1 21 1 228 1 93 1 141 1 54 1 95 2 96 1 60 1 237 1 328 1 329 1 244 1 32 1 106 1 
161 3 162 1 255 1 169 1 173 1 176 1 90 8 184 1 185 4 20 1 94 1 95 20 193 1 103 1 285 1 32 4 286 1 106 5 294 1 115 21 206 41 209 4 297 6 121 1 47 1 309 4 131 4 226 2 228 4 227 1 141 5 229 3 233 1 231 1 322 1 60 3 146 1 329 3 151 3 244 3 154 1 159 4 67 1 
294 2 161 4 162 1 115 18 255 1 206 38 209 4 297 8 169 1 121 1 47 1 173 1 176 1 131 4 309 3 226 2 90 7 184 1 185 4 20 1 227 1 228 4 229 3 94 1 141 5 231 1 233 1 95 20 322 1 60 4 146 1 193 1 329 4 151 3 103 1 244 4 285 1 154 1 286 1 32 3 106 4 67 1 159 4 
294 1 161 2 162 1 115 25 255 1 206 52 209 4 297 4 169 1 121 1 263 2 47 1 173 1 176 1 131 7 309 7 226 1 90 14 184 1 185 7 20 1 227 1 228 7 229 2 94 2 141 8 233 1 95 27 322 1 60 2 146 1 193 1 329 2 151 4 244 2 285 1 154 1 286 1 32 7 106 8 67 1 159 4 
161 2 115 10 255 1 206 19 209 2 297 4 173 1 176 2 131 3 309 3 226 1 90 6 185 3 20 1 228 3 229 1 94 1 141 3 231 1 95 9 322 1 60 2 193 1 329 2 151 1 244 2 104 1 32 3 106 3 159 2 
294 2 161 3 115 12 255 1 206 26 209 4 297 6 121 1 173 1 176 1 131 2 309 2 226 2 90 4 184 1 185 3 20 1 228 3 229 2 141 3 95 14 322 1 60 3 146 1 193 2 329 3 151 2 244 3 285 1 32 2 286 1 154 1 106 2 159 2 
18 1 316 1 254 1 215 1 218 1 273 1 155 1 211 1 171 1 123 1 
238 1 70 1 
172 1 316 1 254 1 258 1 218 1 273 1 210 1 155 1 123 1 
314 1 19 1 316 1 254 1 165 1 273 1 326 2 211 1 171 1 123 1 279 1 215 1 217 1 218 1 155 1 225 1 160 1 203 1 
314 1 19 1 316 1 254 1 165 1 273 1 326 2 211 1 171 1 123 1 279 1 215 1 217 1 218 1 155 1 225 1 160 1 203 1 
314 1 19 1 316 1 254 1 165 1 273 1 326 2 211 1 171 1 123 1 279 1 215 1 217 1 218 1 155 1 225 1 160 1 203 1 
330 1 145 1 99 1 
330 1 145 1 99 1 
79 1 327 1 
79 1 327 1 99 1 
14 1 248 1 
204 2 70 1 254 1 165 1 7 2 123 1 307 2 13 1 14 1 218 1 130 1 135 1 312 1 314 1 140 1 19 1 316 1 21 2 93 2 272 1 273 1 326 1 279 1 238 1 281 1 248 1 155 1 
330 1 145 1 
79 1 327 1 99 1 
161 1 115 1 163 1 206 2 297 2 82 1 9 1 307 2 311 1 224 1 21 2 93 2 54 1 95 1 96 1 60 1 237 1 194 2 150 1 27 2 329 1 196 1 244 1 246 1 157 1 250 2 37 2 
116 1 324 1 190 1 97 1 277 2 194 2 27 2 280 1 240 1 195 1 101 1 282 1 134 1 268 1 180 1 334 1 37 2 137 1 202 1 
324 1 97 1 277 2 194 1 27 1 280 1 240 1 195 1 101 1 308 1 134 1 268 1 180 1 334 1 37 1 137 1 202 1 
232 1 41 1 77 1 235 1 190 1 194 1 27 1 101 1 124 1 243 1 134 1 37 1 252 1 202 1 
116 1 324 1 190 1 97 1 277 2 194 1 27 1 280 1 240 1 195 1 101 1 134 1 268 1 180 1 334 1 37 1 137 1 202 1 
230 1 
212 1 217 1 186 1 292 1 81 1 191 1 302 1 
257 1 165 1 81 1 120 1 217 2 49 1 178 1 87 1 89 1 19 1 318 1 191 1 26 1 332 1 35 1 158 1 292 1 
2 2 256 6 165 5 75 2 260 2 261 3 78 1 81 8 12 1 266 1 267 6 178 6 87 4 181 1 19 5 185 2 186 1 191 9 26 12 275 2 194 3 27 3 101 3 282 1 31 2 106 2 35 3 292 2 36 2 37 3 293 2 41 3 120 5 302 1 213 2 124 1 217 8 127 2 309 2 134 4 222 2 51 1 228 2 318 4 141 2 61 3 149 2 243 10 153 1 249 2 332 4 158 4 65 2 251 1 
295 1 256 5 165 1 120 1 81 5 121 1 12 1 217 5 127 1 309 2 267 5 178 3 87 2 19 1 185 2 228 2 229 1 318 2 141 2 59 1 146 1 275 1 26 6 191 8 151 1 285 1 286 1 154 1 106 2 35 1 332 2 158 2 36 2 292 2 159 1 
204 1 162 1 1 1 117 1 165 1 7 1 81 2 304 1 307 1 84 1 86 1 87 1 19 1 227 1 21 1 93 1 318 1 141 2 319 1 233 1 275 1 191 2 328 1 247 1 106 1 332 1 158 1 36 2 
318 1 186 1 81 1 191 1 302 1 217 1 332 1 158 1 87 1 292 1 
185 2 228 2 256 5 141 2 81 5 275 1 26 10 191 5 217 5 309 2 106 2 222 1 267 5 178 5 36 2 
19 1 217 1 165 1 35 1 292 1 120 1 
165 3 41 1 120 4 81 2 124 2 12 2 214 1 127 2 266 1 134 1 87 2 181 2 19 3 318 2 188 1 232 1 235 1 58 1 191 2 194 4 27 4 101 1 243 1 197 1 332 1 35 2 158 2 37 4 68 1 
161 1 204 2 115 1 206 1 205 1 297 2 41 1 7 2 261 1 9 1 124 1 304 1 46 1 307 3 174 1 134 1 21 2 93 3 54 1 143 1 60 1 237 1 194 1 328 2 329 1 27 1 101 1 281 1 244 1 243 1 66 1 37 1 
256 2 318 1 169 1 81 2 26 4 191 1 12 1 217 4 127 1 178 2 267 2 332 1 158 1 87 1 292 2 
273 1 155 1 50 1 
40 1 248 1 273 1 155 1 171 1 
273 1 155 1 50 1 
273 1 155 1 50 1 
73 1 273 1 155 1 
73 1 273 1 155 1 
73 1 273 1 155 1 
273 1 155 1 
254 1 218 1 
161 1 115 4 162 1 206 8 297 2 169 1 47 1 131 2 90 2 20 1 227 1 141 1 229 1 95 4 233 1 60 1 329 1 151 1 244 1 286 1 106 1 159 1 67 1 
161 2 162 1 115 5 206 11 296 1 297 4 169 1 47 1 131 2 90 3 185 1 20 1 227 1 228 1 229 1 94 1 141 2 233 1 95 6 60 2 329 2 151 1 244 2 286 1 32 1 106 1 67 1 159 2 
161 3 294 1 162 1 115 10 296 1 206 19 297 6 169 1 121 1 47 1 309 2 131 3 90 4 185 2 20 1 227 1 228 2 229 1 141 3 233 1 95 9 60 3 146 1 329 3 151 1 244 3 285 1 32 1 286 1 154 1 106 3 67 1 159 1 
294 1 161 3 162 1 115 7 296 1 206 17 297 6 169 1 121 1 47 1 309 1 131 3 90 5 185 2 20 1 227 1 228 2 229 1 141 3 233 1 95 10 60 3 146 1 329 3 151 1 244 3 285 1 32 2 286 1 154 1 106 2 67 1 159 1 
161 1 115 4 162 1 206 8 297 2 169 1 47 1 131 2 90 2 20 1 227 1 141 1 229 1 95 4 233 1 60 1 329 1 151 1 244 1 286 1 106 1 159 1 67 1 
161 1 115 6 206 12 297 2 121 1 309 2 131 1 90 2 185 2 20 1 228 2 229 1 141 2 95 6 60 1 146 1 329 1 151 1 244 1 285 1 32 1 286 1 154 1 106 2 159 1 
161 4 294 2 162 1 115 8 206 18 296 1 297 8 169 1 121 1 47 1 309 1 131 3 90 5 185 2 20 1 227 1 228 2 229 1 141 3 233 1 95 10 60 4 146 1 329 4 151 1 244 4 285 1 32 2 286 1 154 1 106 2 67 1 159 1 
161 4 294 2 115 7 206 16 297 8 121 1 309 2 131 3 90 6 185 3 20 1 228 3 229 1 141 3 231 1 95 9 60 4 146 1 329 4 151 1 244 4 285 1 32 3 286 1 154 1 106 2 159 1 
115 4 162 3 206 7 227 3 141 1 233 1 95 3 47 1 32 3 106 1 131 3 67 2 90 6 
161 4 294 2 162 1 115 8 206 18 297 8 169 1 121 1 47 1 309 1 131 3 90 4 185 2 20 1 227 1 228 2 229 1 141 3 233 1 231 1 95 10 60 4 146 1 329 4 151 1 244 4 285 1 32 1 286 1 154 1 106 2 67 1 159 1 
161 2 294 1 115 4 162 1 206 8 227 1 141 1 233 1 95 4 297 4 169 1 60 2 329 2 47 1 244 2 32 1 106 1 131 2 67 1 90 3 
115 3 162 1 227 1 206 6 141 1 233 1 95 3 169 1 212 1 47 1 131 2 106 1 67 1 90 2 
161 1 115 2 185 1 296 1 228 1 206 4 141 1 95 2 297 2 60 1 329 1 244 1 32 1 131 1 106 1 309 1 90 2 
115 4 185 1 206 7 228 1 229 1 94 1 141 1 95 3 151 1 32 1 131 1 106 1 309 1 159 2 90 2 
294 2 161 2 114 1 162 2 115 12 206 23 297 4 169 1 263 1 47 1 309 2 131 5 90 9 185 2 227 2 228 2 141 3 94 1 23 1 233 1 95 11 60 2 329 2 151 2 244 2 32 4 106 3 67 1 159 2 
115 1 206 1 159 1 
151 1 206 1 95 1 
161 1 115 3 185 1 296 1 206 6 228 1 141 1 95 3 297 2 60 1 329 1 244 1 32 1 309 1 106 1 131 2 222 1 90 3 
161 1 115 6 206 12 297 2 121 1 309 2 131 1 90 2 185 2 20 1 228 2 229 1 141 2 95 6 60 1 146 1 329 1 151 1 244 1 285 1 32 1 286 1 154 1 106 2 159 1 
115 3 162 1 206 6 227 1 141 1 233 1 95 3 32 1 106 1 131 1 90 2 
114 1 294 1 161 1 162 1 115 2 227 1 206 3 95 1 297 2 60 1 329 1 47 1 244 1 32 1 131 1 67 1 90 2 
161 1 162 2 115 5 20 1 1 1 227 2 206 10 141 2 95 5 233 1 297 2 60 1 329 1 244 1 32 2 131 3 106 2 90 5 
161 1 20 1 228 1 206 2 141 1 95 2 297 2 60 1 329 1 244 1 32 1 90 1 
161 1 115 2 185 1 20 1 228 1 206 4 141 1 95 2 297 2 60 1 329 1 244 1 32 1 131 1 106 1 309 1 90 2 
294 1 114 1 161 3 115 2 162 1 20 1 206 3 227 1 231 1 95 1 297 6 60 3 329 3 244 3 32 1 131 1 90 2 
114 1 294 2 161 5 162 3 115 18 296 1 206 34 297 10 169 1 47 1 309 3 131 7 90 12 185 3 20 1 227 3 228 3 229 1 94 1 141 5 233 2 231 1 95 16 142 1 325 1 60 5 329 5 28 1 151 3 244 5 32 5 106 5 67 1 159 4 
281 1 21 1 93 1 307 1 126 1 198 1 170 1 
21 1 93 1 170 1 44 1 281 1 11 1 307 1 126 1 198 1 333 1 290 1 223 1 
212 1 27 1 101 1 124 1 243 1 232 1 41 1 134 1 235 1 37 1 194 1 
204 1 21 1 205 1 93 2 41 1 261 1 7 1 194 1 27 1 124 1 101 1 281 1 243 1 174 1 307 2 134 1 37 1 38 1 
69 1 204 2 21 2 205 1 207 1 93 2 319 1 41 2 261 2 7 1 194 1 27 1 101 1 281 1 243 3 174 1 307 2 249 1 31 1 134 1 181 1 37 1 38 1 
69 1 204 2 21 2 207 1 93 2 319 1 41 2 261 2 7 1 323 1 194 2 27 2 101 1 281 1 243 3 174 1 307 2 249 1 31 1 33 1 134 1 181 1 37 2 38 1 
19 2 165 2 41 1 261 1 120 1 61 1 149 1 194 3 27 3 213 1 124 1 101 1 217 1 243 4 249 1 31 1 33 1 134 1 133 1 292 1 181 1 182 1 37 3 
19 2 165 2 41 1 75 1 261 1 120 1 61 1 149 1 194 3 27 3 213 1 124 1 101 1 217 1 243 4 249 1 31 1 33 1 134 1 292 1 181 1 37 3 
27 1 101 1 134 1 37 1 16 1 194 1 
187 1 298 1 189 1 41 2 261 1 119 1 194 7 27 7 241 1 124 2 101 2 282 1 243 3 153 1 246 1 201 1 134 3 268 1 250 1 16 1 37 6 
161 2 162 1 71 1 5 1 169 1 7 1 261 1 264 1 174 1 177 1 90 2 21 1 271 1 93 2 95 3 96 1 194 1 27 1 101 1 282 1 281 2 106 1 37 1 38 1 204 1 115 3 205 1 206 6 297 4 41 1 46 1 47 1 307 2 131 2 134 1 311 1 227 1 141 1 54 2 233 1 143 1 60 2 237 2 329 2 244 2 243 1 67 1 
293 1 165 3 75 1 260 1 81 1 120 2 302 1 213 1 124 1 217 1 13 1 266 1 87 2 19 3 186 1 318 2 61 1 191 1 149 1 194 1 27 1 243 2 332 2 35 1 158 2 65 1 292 1 37 1 
41 1 261 1 194 2 213 1 27 2 101 1 282 1 243 2 153 1 134 2 251 1 16 1 37 2 
232 1 41 1 235 1 194 4 27 4 124 1 101 1 282 1 265 1 243 1 33 1 134 1 37 4 
187 1 298 1 41 1 261 1 83 1 194 2 27 2 101 1 243 1 156 1 134 2 181 1 37 2 113 1 
27 1 280 1 195 1 101 1 124 1 134 1 97 1 37 1 277 1 194 1 
27 2 282 1 246 1 157 1 268 1 37 2 194 2 
232 1 41 2 235 1 119 1 194 5 27 5 124 1 101 2 282 1 265 1 243 3 246 1 134 2 201 1 181 1 37 4 
232 1 41 2 76 1 235 1 194 5 27 5 124 1 101 2 282 1 265 1 243 3 246 1 134 2 201 1 181 1 37 4 
204 1 21 1 93 2 41 1 261 1 7 1 323 1 194 1 27 1 124 1 101 1 281 1 243 1 174 1 307 2 134 1 37 1 38 1 
187 1 298 1 189 1 41 1 261 1 194 1 27 1 101 1 243 1 153 1 134 2 181 1 37 1 
163 1 21 1 93 1 307 1 284 1 224 1 82 1 8 1 183 1 
274 1 132 1 183 1 
281 1 284 1 118 1 8 1 183 1 
69 1 19 2 207 1 165 2 319 1 118 2 274 1 262 1 8 2 149 1 281 1 217 1 13 1 284 2 132 1 292 1 136 1 183 1 112 1 

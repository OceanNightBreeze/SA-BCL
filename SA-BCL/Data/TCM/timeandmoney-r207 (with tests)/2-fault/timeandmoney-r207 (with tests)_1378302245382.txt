#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException (248,348) (248,348) 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException (248,348) 306 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException (248,348) (248,348) 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 627 | stmt -> ;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | ASSIGN | 6874 | = null
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
158 6 270 9 60 2 109 2 296 1 7 1 226 3 11 1 165 2 301 1 17 2 205 2 193 1 122 5 77 1 123 2 345 1 286 1 172 1 236 1 104 1 353 1 55 1 354 1 180 2 108 4 269 1 381 9 
158 6 270 9 60 2 109 2 296 1 7 1 226 3 11 1 165 2 301 1 17 2 205 2 193 1 122 5 77 1 123 2 345 1 286 1 172 1 236 1 104 1 353 1 55 1 354 1 180 2 108 4 269 1 381 9 
158 7 270 10 60 2 109 2 296 1 7 1 226 4 11 1 165 2 301 1 17 2 205 2 193 1 122 6 77 1 123 2 345 1 286 1 172 1 236 1 104 1 353 1 55 1 354 1 180 2 108 5 269 1 381 10 
158 4 270 7 60 2 109 2 7 1 226 2 11 1 165 1 301 1 17 2 205 2 193 1 122 4 77 1 123 2 345 1 286 1 172 1 236 1 104 1 353 1 55 1 354 1 180 2 108 3 269 1 381 7 
158 3 193 1 270 4 122 3 60 1 109 1 296 1 345 1 226 1 236 1 165 2 104 1 17 1 205 1 55 1 180 1 108 2 381 4 
122 1 193 1 270 2 3 1 77 1 123 1 109 1 7 1 40 1 236 1 151 1 17 1 205 1 55 1 180 1 381 2 
158 1 193 1 270 3 122 2 123 1 172 1 226 1 236 1 17 2 205 2 55 1 108 1 381 3 
158 7 270 9 60 1 109 1 296 1 226 3 165 2 17 2 205 2 281 1 193 1 122 5 123 1 345 1 172 1 236 1 349 1 104 1 353 1 55 1 180 1 108 4 269 1 381 9 
158 7 270 9 60 1 109 1 296 1 226 3 165 2 17 2 205 2 281 1 193 1 122 5 123 1 345 1 172 1 236 1 349 1 104 1 353 1 55 1 180 1 108 4 269 1 381 9 
29 1 319 1 21 1 
29 1 342 2 80 1 
373 2 338 1 160 2 213 2 198 2 48 2 79 2 66 1 
356 1 332 1 160 2 161 1 9 1 66 1 137 1 116 1 338 1 186 1 45 1 118 2 166 1 46 1 20 1 48 3 304 1 207 2 73 2 168 1 283 1 284 1 127 1 213 2 79 2 264 1 150 1 197 1 373 3 84 1 153 2 238 1 34 1 198 2 85 2 377 1 56 1 
252 1 373 1 152 1 169 1 160 1 213 1 198 1 48 1 79 1 66 1 
223 1 183 1 169 1 112 1 65 1 373 1 29 1 93 1 190 1 198 1 47 1 178 1 21 1 48 1 
223 1 160 1 183 1 169 1 213 1 112 2 65 1 79 1 373 1 29 1 178 2 198 1 47 1 21 1 48 1 
256 1 112 1 366 1 178 1 262 1 
29 1 256 1 112 2 366 1 147 1 178 2 21 1 261 1 
256 1 112 1 178 1 
252 1 169 1 160 1 112 1 213 1 66 1 79 1 347 1 373 1 152 1 366 1 178 1 198 1 48 1 
29 1 
291 1 29 1 256 1 112 2 366 1 147 1 178 2 21 1 
250 1 254 1 256 2 112 5 147 1 336 2 337 1 275 2 329 1 29 1 366 2 247 1 178 5 157 1 21 1 376 2 191 1 218 1 57 1 
338 1 319 1 
160 1 213 1 79 1 315 1 373 2 338 2 189 1 198 2 48 2 
368 1 237 1 224 1 
344 1 264 1 197 1 150 1 373 1 338 1 84 1 153 1 238 1 118 1 46 1 85 1 20 1 48 1 304 1 56 1 
368 1 160 1 195 1 79 1 264 1 150 1 197 1 373 2 84 1 238 1 153 1 118 1 53 1 46 1 20 1 198 1 85 1 48 2 56 1 304 1 
373 3 338 1 160 3 195 1 213 1 198 3 48 3 79 3 
252 1 373 1 169 1 160 1 198 1 48 1 79 1 
373 1 169 1 160 1 189 1 213 1 198 1 48 1 79 1 315 1 
356 1 223 1 332 1 160 3 183 1 161 1 112 1 9 1 65 1 66 1 315 1 137 1 116 1 338 1 45 1 118 1 121 1 46 1 20 1 47 1 48 4 304 1 207 1 73 2 168 1 284 1 169 1 195 1 213 2 79 3 264 1 150 1 197 1 373 4 175 1 84 1 238 1 153 1 53 1 34 1 198 3 178 1 85 1 56 1 
233 1 373 2 338 1 160 1 195 1 93 1 198 2 48 2 79 1 
223 1 169 1 160 3 183 1 195 2 213 1 112 1 313 1 65 1 79 3 315 1 373 3 29 1 175 1 53 1 178 1 198 3 47 1 48 3 
368 1 224 1 160 2 195 1 213 1 79 2 315 1 373 2 198 2 48 2 
264 1 197 1 150 1 373 1 338 1 84 1 153 1 238 1 118 1 85 1 20 1 46 1 48 1 304 1 56 1 
25 1 197 1 150 1 373 1 338 1 84 1 153 1 238 1 118 1 293 1 85 1 20 1 46 1 48 1 56 1 
356 1 224 2 161 2 358 1 9 1 137 1 116 1 43 1 45 1 142 1 207 4 368 2 73 2 168 1 97 1 125 1 127 2 326 1 214 1 82 1 237 2 177 1 105 1 201 1 
373 1 169 1 183 1 160 1 320 1 198 1 48 1 79 1 
233 1 160 4 50 1 195 2 213 1 79 4 315 1 373 5 338 1 93 1 53 1 198 5 48 5 220 1 
252 1 373 2 169 1 160 2 320 1 198 2 48 2 79 2 
111 1 90 1 
111 1 90 1 
209 1 68 1 
209 1 68 1 
209 1 111 1 90 1 68 1 
111 1 90 1 8 1 
111 1 90 1 8 1 
111 1 90 1 8 1 
145 1 111 1 90 1 
36 1 111 1 90 1 
209 1 176 1 111 2 90 2 303 1 68 1 
145 1 111 1 90 1 
145 1 111 1 90 1 
72 2 167 1 271 2 242 2 110 1 111 2 90 2 272 1 212 2 112 2 298 1 114 3 290 2 69 1 29 1 303 1 178 2 144 1 23 1 
271 1 5 1 36 1 242 1 160 2 357 1 111 1 90 1 112 1 298 1 273 1 114 1 361 1 338 1 278 1 48 2 24 1 72 1 212 1 79 2 373 2 129 1 178 1 198 2 
60 1 109 1 180 1 
151 1 109 1 180 1 
308 1 151 1 229 1 60 2 378 1 180 3 
151 1 229 1 60 1 299 1 378 1 180 2 
151 1 60 1 229 2 378 1 180 2 
5 1 311 1 184 2 112 5 10 1 336 1 13 1 361 1 275 1 228 1 141 2 366 4 247 3 21 1 342 3 191 2 24 1 322 1 256 1 97 1 326 1 147 1 80 1 82 1 174 1 29 2 307 1 178 5 106 2 376 1 218 1 201 1 
184 6 112 9 163 1 336 2 13 1 275 2 339 1 141 6 318 1 231 1 366 7 247 8 21 1 342 9 191 6 24 4 322 2 256 6 97 3 326 3 147 1 80 3 262 5 149 5 82 3 350 1 174 3 29 5 307 2 130 1 178 9 376 2 218 1 57 1 201 3 
184 2 112 3 10 1 336 1 275 1 228 1 141 2 366 2 247 3 21 1 191 2 342 4 24 1 322 1 97 1 326 1 80 2 82 1 174 1 29 3 307 1 178 3 106 1 376 1 57 1 201 1 
184 4 112 4 10 1 336 1 275 1 228 1 339 1 141 4 231 1 366 3 247 5 21 1 342 7 191 4 24 2 322 1 97 2 326 2 80 3 82 2 350 1 174 2 29 4 307 1 178 4 106 2 376 1 57 1 201 2 
319 1 46 1 143 1 
185 1 46 1 
92 1 
150 1 46 1 
150 1 197 1 267 1 46 3 143 2 12 1 
150 1 197 1 46 1 
46 1 173 1 
207 7 159 1 37 1 97 1 161 3 358 2 127 4 27 1 215 1 258 2 82 1 83 1 128 1 16 1 292 1 105 3 86 1 
207 7 159 1 37 1 97 1 161 3 358 2 127 4 27 1 215 1 258 2 82 1 83 1 128 1 16 1 292 1 105 3 86 1 
207 7 159 1 37 1 97 1 161 3 358 2 297 1 127 4 27 1 215 1 258 2 82 1 83 1 128 1 16 1 292 1 105 3 86 1 
159 1 37 1 161 15 358 5 9 1 360 1 137 1 116 1 16 2 230 1 45 1 300 1 207 31 73 2 210 1 324 1 26 1 97 4 27 1 127 16 326 3 215 2 258 3 82 4 83 1 128 2 174 3 154 4 292 5 105 10 352 3 379 1 201 3 86 2 
207 9 73 4 159 1 194 1 97 1 358 3 161 4 27 1 127 5 9 2 132 1 215 1 258 2 82 1 83 1 116 2 137 2 128 1 16 1 45 2 300 1 292 1 105 4 86 1 
158 1 308 1 270 2 60 1 109 1 243 1 39 1 335 1 164 1 188 1 44 1 17 1 118 1 340 1 205 1 20 1 122 1 208 1 193 1 123 1 236 1 372 1 151 1 153 1 85 1 200 1 55 1 56 1 180 2 381 2 
308 1 158 2 270 3 60 1 109 1 243 1 39 1 67 1 164 1 188 1 17 1 118 1 340 1 205 1 20 1 206 1 122 1 208 1 123 1 346 1 236 1 372 1 151 1 153 1 85 1 200 1 55 1 56 1 180 2 381 3 
158 2 308 1 270 2 60 1 243 1 109 1 39 1 67 1 164 1 188 1 118 1 340 1 20 1 206 1 122 1 208 1 123 1 236 1 151 1 153 1 85 1 55 1 56 1 180 2 381 2 
221 1 0 1 208 2 270 1 59 1 123 2 346 1 39 2 216 1 265 1 150 1 84 1 188 2 17 1 153 1 18 1 118 1 20 1 46 1 205 1 85 1 56 1 381 1 
308 1 270 1 60 1 109 1 243 1 39 1 164 1 188 1 44 1 17 1 118 1 340 1 205 1 20 1 206 1 208 1 193 1 123 1 372 1 151 1 153 1 85 1 200 1 56 1 180 2 381 1 
341 1 
112 5 65 1 336 1 245 1 118 2 247 2 20 1 21 1 342 2 22 1 251 1 253 1 256 6 169 1 259 1 216 1 80 2 29 2 84 2 31 1 33 2 178 5 85 2 218 1 221 1 223 1 183 1 134 2 91 1 227 4 275 1 93 1 46 1 190 1 47 1 48 1 191 2 192 1 282 1 322 1 101 1 147 3 370 2 148 2 150 1 373 1 330 2 153 2 239 1 155 2 54 1 198 1 376 1 107 2 56 1 
223 1 183 1 112 3 65 1 134 1 91 1 227 2 93 1 47 1 190 1 48 1 192 1 251 1 253 1 169 1 256 2 147 1 373 1 291 1 54 1 198 1 178 3 
223 1 183 1 112 3 65 1 91 1 227 3 93 1 47 1 190 1 48 1 21 1 192 1 251 1 253 1 256 1 169 1 147 1 370 1 373 1 291 1 29 1 54 1 198 1 178 3 
223 1 183 1 112 3 65 1 134 1 91 1 227 3 93 1 47 1 190 1 48 1 21 1 192 1 251 1 253 1 169 1 256 2 147 1 370 1 291 1 373 1 29 1 155 1 54 1 198 1 178 3 
112 5 65 1 336 1 247 1 21 5 251 1 305 1 253 1 169 1 256 7 126 1 259 1 80 2 29 5 33 2 178 5 218 1 223 1 183 1 134 4 227 6 91 1 135 1 275 1 316 1 93 1 47 1 190 1 48 1 192 1 191 1 282 1 235 1 147 3 370 4 148 2 373 1 291 1 330 2 155 4 54 1 198 1 376 1 107 2 
112 4 65 1 336 1 247 1 21 1 342 2 22 1 251 1 253 1 169 1 256 4 259 1 80 2 29 2 33 2 178 4 218 1 223 1 183 1 134 2 227 4 91 1 275 1 93 1 47 1 190 1 48 1 192 1 191 1 282 1 147 2 370 2 148 2 373 1 330 2 155 2 54 1 198 1 376 1 107 2 
223 1 183 1 112 4 65 1 134 2 91 1 227 4 135 1 336 1 275 1 93 1 247 1 47 1 190 1 21 1 48 1 191 1 192 1 282 1 251 1 253 1 256 4 169 1 126 1 235 1 147 2 370 2 259 1 148 2 80 2 373 1 29 1 330 2 33 2 155 2 54 1 198 1 178 4 376 1 107 2 218 1 
223 1 183 1 112 4 65 1 134 2 91 1 227 4 135 1 336 1 275 1 93 1 247 1 47 1 190 1 21 1 48 1 191 1 192 1 282 1 251 1 253 1 256 4 169 1 126 1 235 1 147 2 370 2 259 1 148 2 80 2 373 1 29 1 330 2 33 2 155 2 54 1 198 1 178 4 376 1 107 2 218 1 
4 1 223 1 183 1 112 4 65 1 134 2 91 1 227 4 336 1 275 1 93 1 247 1 47 1 190 1 21 1 94 1 48 1 342 2 191 1 192 1 251 1 253 1 256 4 169 1 126 1 147 2 370 2 259 1 373 1 29 1 330 2 32 1 155 2 156 2 54 1 198 1 178 4 376 1 294 2 107 2 218 1 
223 1 183 1 112 4 65 1 134 3 91 1 227 5 135 1 336 1 275 1 316 1 93 1 247 1 47 1 190 1 21 1 48 1 191 1 192 1 282 1 251 1 253 1 169 1 256 5 126 1 235 1 147 2 259 1 370 3 148 2 80 2 373 1 29 1 330 2 33 2 155 3 54 1 198 1 178 4 376 1 107 2 218 1 
223 1 183 1 112 4 65 1 134 3 91 1 227 5 135 1 336 1 275 1 316 1 93 1 247 1 47 1 190 1 21 1 48 1 191 1 192 1 282 1 251 1 253 1 169 1 256 5 126 1 235 1 147 2 259 1 370 3 148 2 80 2 373 1 29 1 330 2 33 2 155 3 54 1 198 1 178 4 376 1 107 2 218 1 
112 4 65 1 336 1 247 1 21 1 342 2 22 1 251 1 253 1 169 1 256 4 259 1 29 1 178 4 218 1 223 1 183 1 134 2 227 4 91 1 275 1 93 1 47 1 190 1 94 1 48 1 192 1 191 1 147 2 370 2 373 1 330 2 155 2 54 1 156 2 198 1 376 1 107 2 294 2 
356 1 159 1 224 1 358 2 161 3 9 1 137 1 116 1 43 1 338 2 45 1 319 1 368 1 207 6 73 2 168 1 97 1 27 1 127 3 215 1 258 1 82 1 83 1 237 1 105 2 86 1 
131 1 355 1 356 2 224 4 358 1 161 6 9 2 137 2 116 2 230 1 338 1 45 2 207 14 368 11 73 4 168 1 76 1 284 1 26 1 97 1 127 8 326 1 263 1 82 2 237 11 174 2 52 1 154 3 292 1 105 2 352 3 377 1 201 2 
309 1 356 1 61 1 224 1 160 1 161 1 9 1 334 1 137 1 116 1 338 1 45 1 118 1 46 1 20 1 48 2 304 1 207 2 73 2 168 1 76 1 284 1 344 1 195 1 127 1 79 1 264 1 150 1 197 1 373 2 84 1 238 1 153 1 53 1 85 1 198 1 377 1 56 1 
159 1 160 1 161 10 9 3 116 3 338 2 118 3 20 2 304 2 206 1 207 20 73 6 76 1 168 3 27 1 127 10 258 1 215 1 79 1 264 2 82 3 83 1 174 2 84 1 34 2 85 3 86 1 356 3 182 1 224 7 358 4 137 3 45 3 365 2 46 2 48 3 368 7 284 1 234 2 97 3 100 1 195 1 326 2 287 1 328 2 197 2 150 2 237 7 373 3 153 3 238 2 53 1 292 4 105 8 198 1 377 1 56 2 201 2 295 2 
58 1 221 1 356 2 160 1 162 1 161 1 9 2 335 1 43 1 137 2 116 2 187 1 186 2 45 2 118 8 20 2 46 3 48 1 249 1 206 1 95 1 207 2 73 4 168 2 284 1 170 1 195 1 127 1 79 1 216 1 150 2 373 1 217 1 84 2 153 8 198 1 85 7 377 1 56 2 
356 1 224 1 160 1 358 1 161 2 9 1 133 1 315 1 137 1 116 1 45 1 48 1 368 1 207 3 73 2 168 1 76 1 97 1 213 1 127 1 326 1 79 1 82 1 237 1 373 1 174 1 105 1 198 1 201 1 
368 1 207 2 73 2 168 1 356 1 224 1 125 1 127 2 9 1 82 1 237 1 43 1 116 1 137 1 45 1 105 1 292 1 201 1 
368 1 207 2 73 2 168 1 356 1 224 1 97 1 358 1 161 2 9 1 326 1 237 1 43 1 116 1 137 1 45 1 177 1 105 1 
368 2 207 4 73 2 168 1 356 1 224 2 97 1 358 1 161 2 127 2 326 1 9 1 82 1 237 2 43 1 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
368 1 207 2 58 1 73 2 168 1 356 1 224 1 125 1 127 2 9 1 82 1 237 1 116 1 137 1 45 1 105 1 292 1 201 1 
368 1 207 2 58 1 73 2 168 1 356 1 224 1 97 1 358 1 161 2 9 1 326 1 237 1 116 1 137 1 45 1 177 1 105 1 
368 2 207 4 58 1 73 2 168 1 356 1 224 2 97 1 358 1 161 2 127 2 326 1 9 1 82 1 237 2 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
368 2 207 4 73 2 168 1 356 1 224 2 97 1 358 1 161 2 127 2 326 1 9 1 82 1 237 2 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
356 1 161 1 9 1 116 1 137 1 338 1 45 1 118 1 20 1 46 1 48 1 304 1 207 2 73 2 168 1 284 1 127 1 264 1 150 1 197 1 373 1 84 1 238 1 153 1 34 1 85 1 377 1 56 1 
356 1 161 1 9 1 116 1 137 1 338 1 277 1 45 1 118 1 20 1 46 1 48 1 207 2 73 2 168 1 25 1 284 1 127 1 150 1 197 1 373 1 84 1 238 1 153 1 293 1 85 1 377 1 56 1 
368 2 207 4 73 2 76 1 168 1 356 1 224 2 97 1 358 1 161 2 127 2 326 1 9 1 82 1 237 2 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
356 1 224 2 358 1 161 2 9 1 335 1 116 1 137 1 45 1 118 1 20 1 46 1 48 1 304 1 368 2 207 4 73 2 168 1 97 1 127 2 326 1 82 1 264 1 328 1 237 2 197 1 150 1 373 1 174 1 238 1 153 1 105 2 292 1 34 1 85 1 56 1 201 1 
356 1 160 1 224 1 161 1 9 1 315 1 137 1 116 1 45 1 48 1 207 3 368 1 73 2 168 1 76 1 97 1 213 1 127 2 326 1 79 1 371 1 82 1 237 1 373 1 174 1 105 1 292 1 198 1 201 1 
222 4 159 1 87 1 358 4 161 21 9 3 274 1 41 1 137 3 116 3 15 1 203 1 246 1 230 3 70 1 45 3 300 1 321 1 207 41 74 2 73 6 75 1 194 1 26 1 325 1 78 1 97 5 27 1 127 20 326 4 258 1 215 1 102 1 82 5 83 1 174 4 154 4 292 4 105 8 352 3 201 4 86 1 380 1 
222 4 159 1 87 1 358 4 161 18 9 4 274 1 41 1 137 4 116 4 15 1 203 1 246 1 230 3 70 1 45 4 300 2 321 1 207 38 74 2 73 8 75 1 194 1 26 1 325 1 78 1 97 4 27 1 127 20 326 3 258 1 215 1 102 1 82 5 83 1 174 4 154 4 292 3 105 7 352 3 201 4 86 1 380 1 
222 4 159 1 87 1 358 7 161 25 9 2 274 1 41 1 137 2 116 2 15 1 203 1 246 1 230 2 70 1 45 2 300 1 321 1 207 52 74 1 73 4 194 1 26 2 78 1 97 8 27 1 127 27 326 7 258 1 215 1 102 1 82 8 83 1 174 7 52 2 154 4 292 7 105 14 352 4 201 7 86 1 380 1 
222 2 87 1 358 3 161 10 9 2 41 2 137 2 116 2 117 1 230 1 45 2 321 1 207 19 74 1 73 4 194 1 26 1 325 1 97 3 127 9 326 3 102 1 82 3 174 3 154 2 292 3 105 6 352 1 201 3 380 1 
222 4 87 1 358 2 161 12 9 3 274 1 41 1 137 3 116 3 15 1 203 1 246 1 230 2 70 1 45 3 300 2 321 1 207 26 74 2 73 6 194 1 97 2 78 1 127 14 326 2 102 2 82 3 174 3 154 2 292 2 105 4 352 2 201 3 380 1 
72 1 271 1 242 1 110 1 111 1 257 1 90 1 303 1 272 1 212 1 
36 1 278 1 
72 1 146 1 271 1 242 1 99 1 111 1 90 1 212 1 232 1 
72 1 271 1 242 1 110 1 111 1 90 1 272 1 112 1 212 1 298 1 114 2 290 1 69 1 29 1 303 1 178 1 144 1 23 1 
72 1 271 1 242 1 110 1 111 1 90 1 272 1 112 1 212 1 298 1 114 2 290 1 69 1 29 1 303 1 178 1 144 1 23 1 
72 1 271 1 242 1 110 1 111 1 90 1 272 1 112 1 212 1 298 1 114 2 290 1 69 1 29 1 303 1 178 1 144 1 23 1 
176 1 120 1 8 1 
176 1 120 1 8 1 
145 1 268 1 
145 1 176 1 268 1 
357 1 273 1 
271 1 5 1 36 1 242 1 357 1 160 2 111 1 90 1 112 1 273 1 114 1 361 1 338 1 119 1 366 1 278 1 48 2 23 1 24 1 72 1 212 1 79 2 290 1 373 2 129 1 178 1 198 2 
120 1 8 1 
145 1 176 1 268 1 
356 1 6 1 63 1 161 1 9 1 116 1 137 1 186 2 45 1 118 2 302 1 20 1 46 1 48 2 95 1 207 2 73 2 168 1 76 1 284 1 170 1 127 1 150 1 373 2 153 2 198 2 85 2 377 1 56 1 240 1 241 1 
308 1 206 1 208 1 60 1 109 1 335 1 14 1 202 1 164 1 151 1 138 1 372 1 153 2 118 2 340 1 20 1 85 2 180 2 56 1 
308 1 206 1 208 1 60 1 109 1 225 1 14 1 164 1 151 1 372 1 153 1 118 1 340 1 85 1 20 1 180 2 56 1 
208 1 221 1 216 1 265 1 150 1 138 1 115 1 84 1 153 1 118 1 20 1 46 1 85 1 56 1 
308 1 206 1 208 1 60 1 109 1 14 1 202 1 164 1 151 1 138 1 372 1 153 1 118 1 340 1 85 1 20 1 180 2 56 1 
96 1 
250 1 29 1 319 1 247 1 21 1 191 1 337 1 
112 1 336 1 275 1 247 1 21 1 191 1 342 1 282 1 256 1 147 1 148 1 80 1 29 2 33 1 178 1 376 1 218 1 
62 2 112 5 335 1 113 2 336 4 337 1 12 1 118 3 247 9 20 3 21 2 343 2 342 12 250 1 256 5 171 2 173 2 80 6 82 2 174 2 29 8 84 1 85 3 178 5 218 4 35 1 223 2 184 6 38 2 185 3 314 1 275 4 42 2 140 1 141 6 46 10 280 2 143 2 191 8 322 2 323 1 234 2 97 2 101 1 326 2 147 3 327 2 150 3 197 3 374 1 153 3 376 4 56 4 201 2 
184 5 333 1 112 1 113 1 274 1 336 2 275 2 15 1 246 1 230 1 70 1 141 5 247 8 21 2 342 6 191 5 322 1 256 1 78 1 97 2 101 1 171 2 326 2 147 1 80 3 82 2 174 2 29 5 154 1 352 1 178 1 376 2 219 1 218 2 201 2 
159 1 160 1 112 1 113 1 66 1 336 1 275 1 247 2 48 1 191 2 367 1 252 1 169 1 97 1 235 1 213 1 171 2 215 1 79 1 347 1 82 2 373 1 152 1 178 1 198 1 376 1 218 1 86 1 
250 1 336 1 337 1 275 1 29 1 247 1 376 1 21 1 218 1 191 1 
234 1 184 5 97 2 171 2 326 2 113 1 80 5 82 2 174 2 29 5 141 5 247 5 191 5 342 10 201 2 
29 1 256 1 112 1 178 1 147 1 21 1 
221 1 112 3 314 1 336 2 245 1 275 2 118 4 20 1 46 1 247 2 191 2 322 2 285 1 256 4 101 2 147 2 216 1 150 1 266 1 84 2 374 2 239 1 153 4 85 4 178 3 376 2 56 1 218 1 57 1 
356 1 332 1 160 2 161 1 9 1 66 1 137 1 116 1 338 1 45 1 118 1 20 1 46 1 48 3 304 1 207 1 73 2 168 1 284 1 213 2 79 2 264 1 197 1 150 1 373 3 84 1 153 1 238 1 34 1 85 1 198 2 56 1 
322 1 184 2 101 1 258 1 336 1 80 2 275 1 29 4 141 2 247 1 376 1 21 2 342 4 191 2 218 1 
271 1 242 1 351 1 
271 1 242 1 351 1 
271 1 242 1 351 1 
271 1 242 1 375 1 
271 1 242 1 110 1 357 1 179 1 
271 1 242 1 375 1 
271 1 242 1 375 1 
271 1 242 1 
111 1 90 1 
159 1 161 4 358 2 9 1 137 1 116 1 15 1 230 1 45 1 207 8 73 2 194 1 97 1 127 4 27 1 258 1 215 1 82 1 83 1 154 1 105 2 352 1 86 1 
159 1 331 1 358 2 161 5 9 2 137 2 116 2 15 1 230 1 45 2 207 11 73 4 194 1 26 1 97 1 27 1 127 6 258 1 215 1 82 2 83 1 174 1 154 2 292 1 105 3 352 1 201 1 86 1 
159 1 331 1 161 10 358 3 9 3 274 1 137 3 116 3 15 1 246 1 230 1 45 3 70 1 300 1 207 19 73 6 194 1 78 1 97 3 27 1 127 9 326 2 258 1 215 1 82 3 83 1 174 2 154 1 292 1 105 4 352 1 201 2 86 1 
159 1 331 1 161 7 358 3 9 3 274 1 137 3 116 3 15 1 246 1 230 1 45 3 70 1 300 1 207 17 73 6 194 1 78 1 97 2 27 1 127 10 326 1 258 1 215 1 82 3 83 1 174 2 154 1 292 2 105 5 352 1 201 2 86 1 
159 1 161 4 358 2 9 1 137 1 116 1 15 1 230 1 45 1 207 8 73 2 194 1 97 1 127 4 27 1 258 1 215 1 82 1 83 1 154 1 105 2 352 1 86 1 
161 6 358 1 9 1 274 1 137 1 116 1 15 1 246 1 230 1 45 1 70 1 207 12 73 2 194 1 78 1 97 2 127 6 326 2 82 2 174 2 154 1 292 1 105 2 352 1 201 2 
159 1 331 1 161 8 358 3 9 4 274 1 137 4 116 4 15 1 246 1 230 1 70 1 45 4 300 2 207 18 73 8 194 1 78 1 97 2 27 1 127 10 326 1 258 1 215 1 82 3 83 1 174 2 154 1 292 2 105 5 352 1 201 2 86 1 
161 7 358 3 9 4 274 1 137 4 116 4 15 1 246 1 230 1 70 1 45 4 300 2 207 16 73 8 194 1 325 1 78 1 97 2 127 9 326 2 82 3 174 3 154 1 292 3 105 6 352 1 201 3 
207 7 159 1 97 1 161 4 358 3 27 1 127 3 215 3 82 1 83 2 105 6 292 3 86 3 
159 1 161 8 358 3 9 4 274 1 137 4 116 4 15 1 246 1 230 1 70 1 45 4 300 2 207 18 73 8 194 1 325 1 78 1 97 2 27 1 127 10 326 1 258 1 215 1 82 3 83 1 174 2 154 1 292 1 105 4 352 1 201 2 86 1 
207 8 73 4 159 1 97 1 161 4 358 2 127 4 27 1 9 2 258 1 215 1 82 1 83 1 116 2 137 2 45 2 300 1 292 1 105 3 86 1 
207 6 159 1 97 1 161 3 358 2 27 1 127 3 258 1 215 1 82 1 83 1 319 1 105 2 86 1 
207 4 73 2 331 1 97 1 358 1 161 2 127 2 326 1 9 1 82 1 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
207 7 26 1 97 1 358 1 161 4 127 3 326 1 82 1 174 1 230 1 154 2 292 1 105 2 352 1 201 1 
159 1 161 12 358 5 9 2 116 2 137 2 139 1 45 2 300 2 207 23 73 4 26 1 97 3 27 1 127 11 326 2 258 1 215 2 263 1 82 3 83 1 174 2 154 2 52 1 105 9 292 4 352 2 201 2 86 2 
207 1 154 1 161 1 
207 1 127 1 352 1 
207 6 73 2 331 1 234 1 97 1 161 3 358 2 127 3 9 1 326 1 82 1 137 1 116 1 174 1 45 1 292 1 105 3 201 1 
161 6 358 1 9 1 274 1 137 1 116 1 15 1 246 1 230 1 45 1 70 1 207 12 73 2 194 1 78 1 97 2 127 6 326 2 82 2 174 2 154 1 292 1 105 2 352 1 201 2 
207 6 159 1 97 1 161 3 358 1 127 3 215 1 82 1 105 2 292 1 86 1 
207 3 73 2 358 1 161 2 127 1 27 1 9 1 215 1 83 1 116 1 137 1 139 1 45 1 300 1 292 1 105 2 86 1 
207 10 73 2 159 1 194 1 97 2 358 3 161 5 127 5 9 1 215 2 82 2 137 1 116 1 45 1 105 5 292 2 367 1 86 2 
207 2 73 2 194 1 127 2 9 1 82 1 116 1 137 1 45 1 292 1 105 1 201 1 
207 4 73 2 194 1 97 1 358 1 161 2 127 2 326 1 9 1 82 1 116 1 137 1 174 1 45 1 105 2 292 1 201 1 
207 3 73 6 194 1 325 1 161 2 358 1 127 1 9 3 215 1 116 3 137 3 139 1 45 3 300 1 105 2 292 1 86 1 
159 2 331 1 161 18 358 7 9 5 360 1 137 5 116 5 139 1 230 1 45 5 300 2 207 34 73 10 324 1 194 1 26 1 325 1 97 5 27 1 127 16 326 3 258 1 215 3 82 5 83 1 174 3 154 4 292 5 105 12 352 3 379 1 201 3 86 3 
233 1 373 1 338 1 310 1 93 1 198 1 48 1 
233 1 211 1 310 1 124 1 51 1 373 1 338 1 363 1 317 1 93 1 198 1 48 1 
150 1 221 1 84 1 153 1 118 1 319 1 20 1 46 1 85 1 216 1 56 1 
160 1 195 1 79 1 264 1 150 1 197 1 373 2 338 1 84 1 238 1 153 1 118 1 46 1 198 1 85 1 20 1 48 2 56 1 
169 1 183 1 160 2 195 1 65 1 79 1 173 1 264 1 150 2 197 2 42 1 373 2 338 1 374 1 238 1 153 1 118 1 46 3 198 2 85 1 20 1 48 2 56 1 
169 1 183 1 160 2 195 1 65 1 79 1 173 1 289 1 150 2 197 2 42 1 373 2 338 1 374 1 238 1 153 2 118 2 293 1 46 3 198 2 85 2 20 1 48 2 56 1 
223 1 256 1 89 1 112 2 359 1 185 1 173 1 289 1 150 1 197 1 42 1 29 1 84 1 374 1 153 3 118 3 178 2 85 3 46 4 20 1 21 1 56 1 143 1 
223 1 256 1 112 2 185 1 173 1 289 1 150 1 197 1 42 1 29 1 84 1 374 1 153 3 118 3 178 2 85 3 280 1 46 4 20 1 21 1 56 1 143 1 
153 1 118 1 20 1 85 1 56 1 249 1 
12 1 348 1 197 1 150 1 362 1 84 1 153 1 118 1 85 1 46 1 20 1 248 1 56 2 
159 1 160 1 161 3 9 2 335 1 116 2 338 2 118 1 20 1 304 1 207 6 73 4 76 1 168 2 27 1 127 3 215 1 258 1 79 1 264 1 82 1 83 1 34 1 85 1 86 1 356 2 224 1 358 2 137 2 45 2 46 1 48 2 368 1 195 1 97 1 328 1 197 1 150 1 237 1 373 2 153 1 238 1 105 2 198 1 56 1 241 1 295 1 
223 1 62 1 112 3 38 1 185 1 314 1 336 2 337 1 275 2 118 1 366 1 247 1 280 1 46 2 21 1 191 1 343 1 143 1 250 1 256 2 147 1 29 1 84 1 153 1 85 1 178 3 376 2 218 2 
335 1 12 1 197 1 150 1 140 1 153 2 118 2 85 2 46 2 20 1 143 1 56 2 249 1 
369 1 221 1 335 1 216 1 289 1 150 1 84 1 153 4 118 4 85 4 46 1 20 1 56 1 
150 1 197 1 136 1 362 1 306 1 153 1 118 1 20 1 46 1 85 1 287 1 56 2 348 1 
151 1 84 1 109 1 153 1 118 1 20 1 85 1 180 1 56 1 164 1 
150 1 206 1 153 2 170 1 118 2 20 1 46 1 85 2 335 1 56 1 240 1 
369 1 221 1 170 1 162 1 216 1 335 1 150 2 217 1 84 1 374 1 153 5 118 5 85 4 46 3 20 2 56 2 
369 1 221 1 181 1 170 1 216 1 335 1 150 2 217 1 84 1 374 1 153 5 118 5 85 4 46 3 20 2 56 2 
160 1 195 1 79 1 150 1 197 1 373 2 338 1 84 1 238 1 153 1 118 1 293 1 46 1 198 1 85 1 20 1 48 2 56 1 
12 1 348 1 197 1 150 1 362 1 374 1 153 1 118 1 85 1 46 1 20 1 248 1 56 2 
373 1 276 1 103 1 6 1 302 1 63 1 198 1 48 1 260 1 
1 1 103 1 71 1 
2 1 276 1 338 1 103 1 260 1 
1 1 2 2 223 1 169 1 183 1 112 2 65 1 260 2 276 2 29 1 175 1 338 1 103 1 364 1 366 1 71 1 178 2 47 1 21 1 
122 1 319 1 236 1 55 1 
122 1 270 1 17 1 205 1 236 1 55 1 381 1 
270 1 123 1 188 1 
122 1 193 1 270 3 255 1 7 2 236 1 28 1 17 1 19 1 205 1 55 1 381 3 
158 1 122 1 270 2 165 1 17 1 205 1 236 1 55 1 381 2 
122 1 270 1 193 1 60 1 109 1 104 1 17 1 205 1 180 1 108 1 381 1 
122 1 270 1 193 1 17 1 205 1 236 1 381 1 
270 1 193 1 17 1 205 1 236 2 55 1 381 1 
122 1 193 1 270 2 88 1 64 1 236 1 30 1 17 2 205 2 381 2 
158 2 193 1 270 3 122 2 226 1 236 1 17 1 205 1 353 1 55 1 269 1 108 1 381 3 
308 1 158 1 122 1 193 1 270 2 60 1 109 1 236 1 288 1 151 1 17 1 205 1 55 1 180 2 381 2 
158 2 193 1 270 4 122 2 296 1 226 1 236 1 165 1 17 2 205 2 55 1 108 1 381 4 
122 1 270 1 193 1 17 1 205 1 236 1 55 1 381 1 
158 2 270 4 122 3 255 1 7 1 226 1 236 2 28 1 17 1 204 1 205 1 55 2 108 1 381 4 
158 1 122 1 193 1 270 2 236 1 81 1 17 1 205 1 281 1 55 1 49 1 381 2 
122 1 193 1 270 3 255 1 7 2 244 1 236 1 28 2 17 1 205 1 55 1 381 3 
122 2 312 1 98 2 196 1 
270 1 193 1 17 1 199 1 205 1 381 1 
158 1 122 1 270 2 193 1 17 1 353 1 205 1 236 1 55 1 381 2 
279 1 
122 1 270 1 193 1 17 1 205 1 236 1 55 1 381 1 
158 1 122 1 270 3 193 1 17 1 7 1 353 1 205 1 236 1 55 1 381 3 
122 1 204 1 226 1 108 1 
122 1 236 1 

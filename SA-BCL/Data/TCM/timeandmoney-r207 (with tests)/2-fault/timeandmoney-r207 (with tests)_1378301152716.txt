#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) 223 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V ERROR java.lang.NullPointerException 274 
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 334 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) 223 23 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 255 355 159 (0,217) 188 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V ERROR java.lang.NullPointerException 274 152 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.TimeUnitTest:testComparison()V ERROR java.lang.NullPointerException 293 
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V ERROR java.lang.NullPointerException 255 355 
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V ERROR java.lang.NullPointerException 273 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V ERROR java.lang.NullPointerException 255 
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V ERROR java.lang.NullPointerException 255 355 55 196 
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.NullPointerException 255 198 81 (127,241) (39,261) (39,261) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException 255 198 81 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 334 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) (283,291) (187,202) 359 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 255 198 81 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 255 355 159 (0,217) 188 228 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) (283,291) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 255 362 46 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V ERROR java.lang.NullPointerException 255 198 81 (127,241) (127,241) 
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 255 355 55 298 144 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 255 198 81 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) 223 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V FAILED junit.framework.AssertionFailedError 254 
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 255 355 159 (0,217) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V ERROR java.lang.NullPointerException 293 (0,217) 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V ERROR java.lang.NullPointerException 293 (60,142) 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V ERROR java.lang.NullPointerException 255 355 55 24 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 255 355 159 (60,142) 348 (283,291) (283,291) (187,202) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V ERROR java.lang.NullPointerException 293 (60,142) 309 118 (187,202) 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V ERROR java.lang.NullPointerException 255 355 55 298 
com.domainlanguage.time.DurationTest:testEquals()V ERROR java.lang.NullPointerException 255 198 81 
com.domainlanguage.time.DurationTest:testToString()V ERROR java.lang.NullPointerException 255 355 160 335 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V ERROR java.lang.NullPointerException 255 362 46 
com.domainlanguage.time.DurationTest:testAdd()V ERROR java.lang.NullPointerException 255 362 97 
com.domainlanguage.time.DurationTest:testSubtract()V ERROR java.lang.NullPointerException 255 362 242 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 255 355 159 (0,217) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V ERROR java.lang.NullPointerException 255 355 55 24 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I | ASSIGN | 5953 | = null
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V | STATEMENT | 1917 | stmt -> ;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
340 1 281 1 3 1 132 2 168 2 190 1 286 1 214 1 43 2 6 2 63 1 171 1 199 3 65 1 270 2 66 1 221 4 68 2 328 9 69 1 245 6 330 1 70 1 299 9 19 1 201 2 363 1 231 5 
340 1 281 1 3 1 132 2 168 2 190 1 286 1 214 1 43 2 6 2 63 1 171 1 199 3 65 1 270 2 66 1 221 4 68 2 328 9 69 1 245 6 330 1 70 1 299 9 19 1 201 2 363 1 231 5 
340 1 281 1 3 1 132 2 168 2 190 1 286 1 214 1 43 2 6 2 63 1 171 1 199 4 65 1 270 2 66 1 221 5 68 2 328 10 69 1 245 7 330 1 70 1 299 10 19 1 201 2 363 1 231 6 
340 1 281 1 3 1 132 2 168 2 190 1 286 1 214 1 43 2 6 2 63 1 171 1 199 2 270 2 66 1 221 3 68 2 328 7 69 1 245 4 330 1 70 1 299 7 19 1 201 1 363 1 231 4 
63 1 199 1 65 1 66 1 270 1 221 2 68 1 328 4 281 1 132 1 3 1 168 1 69 1 245 3 299 4 43 1 201 2 231 3 
63 1 171 1 68 1 328 2 3 1 132 1 168 1 69 1 191 1 138 1 299 2 43 1 19 1 6 1 231 1 96 1 
63 1 199 1 221 1 68 2 328 3 3 1 168 2 69 1 245 1 299 3 214 1 6 1 231 2 
340 1 281 1 3 1 132 1 168 2 27 1 214 1 43 1 6 1 63 1 199 3 66 1 270 1 65 1 221 4 68 2 328 9 69 1 245 7 70 1 299 9 302 1 201 2 231 5 
340 1 281 1 3 1 132 1 168 2 27 1 214 1 43 1 6 1 63 1 199 3 66 1 270 1 65 1 221 4 68 2 328 9 69 1 245 7 70 1 299 9 302 1 201 2 231 5 
254 1 327 1 135 1 
327 1 360 2 248 1 
115 1 41 2 306 2 234 2 352 2 229 2 279 2 9 1 
305 1 306 1 255 1 234 1 142 1 352 1 76 2 223 1 355 1 159 1 283 1 33 1 133 2 136 1 41 1 72 1 348 1 321 1 229 1 61 2 279 1 8 1 9 1 
41 1 306 1 247 1 234 1 352 1 229 1 265 1 303 1 279 1 9 1 
140 1 234 1 327 1 352 1 272 1 130 1 208 1 227 1 135 1 90 1 303 1 279 1 289 1 250 1 
306 1 234 1 327 1 130 2 352 1 272 1 227 2 135 1 90 1 41 1 229 1 303 1 279 1 289 1 250 1 
130 1 274 1 119 1 227 1 
243 1 347 1 100 1 327 1 130 2 119 1 227 2 135 1 
100 1 130 1 227 1 
306 1 56 1 234 1 130 1 352 1 119 1 227 1 41 1 247 1 229 1 265 1 303 1 279 1 9 1 
327 1 
347 1 100 1 189 1 327 1 130 2 119 1 227 2 135 1 
100 2 327 1 130 5 341 2 119 2 311 1 178 1 227 5 135 1 213 1 106 1 347 1 162 1 82 2 336 1 35 1 322 1 266 2 156 1 
115 1 254 1 
115 2 306 1 234 2 101 1 352 2 41 1 16 1 229 1 279 2 
216 1 113 1 275 1 
255 1 72 1 334 1 348 1 142 1 321 1 76 1 61 1 355 1 159 1 33 1 133 1 
140 1 115 1 306 4 234 5 101 1 352 5 177 1 41 4 83 2 215 1 229 1 279 5 53 1 11 1 
41 2 306 2 234 2 352 2 265 1 303 1 288 1 279 2 
306 1 255 1 234 1 142 1 352 1 76 1 355 1 159 1 33 1 133 1 41 1 72 1 83 1 348 1 215 1 321 1 61 1 279 1 
115 1 41 3 306 3 83 1 234 3 229 1 352 3 279 3 
41 1 306 1 234 1 352 1 265 1 303 1 279 1 
41 1 306 1 16 1 234 1 101 1 352 1 229 1 303 1 279 1 
306 3 255 1 234 3 101 1 130 1 23 1 76 1 283 1 133 1 41 3 83 1 348 1 215 1 321 1 61 1 289 1 9 1 142 1 272 1 352 3 223 1 355 1 159 1 227 1 33 1 90 1 72 1 229 2 303 1 279 3 250 1 203 1 
115 1 140 1 41 1 306 1 83 1 234 2 352 2 177 1 279 2 
306 3 234 3 101 1 327 1 130 1 352 3 272 1 227 1 90 1 41 3 212 1 83 2 215 1 229 1 303 1 279 3 289 1 250 1 203 1 
306 2 234 2 101 1 352 2 41 2 83 1 229 1 216 1 113 1 279 2 
255 1 72 1 348 1 142 1 321 1 76 1 61 1 355 1 159 1 33 1 133 1 
188 1 255 1 72 1 321 1 76 1 61 1 355 1 217 1 159 1 33 1 133 1 
342 1 57 2 102 1 262 1 80 4 110 2 263 1 319 1 323 1 45 1 216 2 218 1 113 2 62 1 7 1 117 2 67 1 176 1 275 2 294 1 333 1 163 1 164 1 304 1 
41 1 306 1 234 1 352 1 303 1 289 1 279 1 288 1 
165 1 268 1 
165 1 268 1 
186 1 251 1 
186 1 251 1 
186 1 251 1 
165 1 145 1 268 1 
165 1 145 1 268 1 
165 1 88 1 268 1 
181 1 165 2 51 1 186 1 251 1 268 2 
165 1 145 1 268 1 
165 1 5 1 268 1 
165 1 5 1 268 1 
165 1 5 1 268 1 
128 1 306 2 165 1 234 2 257 1 130 1 235 1 259 1 282 1 78 1 192 1 284 1 134 1 41 2 313 1 268 1 115 1 86 1 352 2 15 1 88 1 227 1 329 1 279 2 
99 1 141 1 165 2 86 2 327 1 130 2 235 1 259 2 143 1 227 2 78 3 103 1 192 2 151 1 312 1 284 2 181 1 91 2 268 2 
270 1 43 1 132 1 
138 1 43 1 132 1 
42 1 105 1 138 1 270 2 310 1 132 3 
42 1 105 1 138 1 339 1 270 1 132 2 
42 2 105 1 138 1 270 1 132 2 
256 1 100 1 257 1 341 1 130 5 134 1 135 1 285 1 213 2 262 1 313 1 347 1 82 1 62 1 266 1 114 2 197 1 156 3 269 1 67 1 327 2 30 1 119 4 227 5 121 1 35 1 360 3 230 2 304 1 92 2 248 1 20 1 
71 1 314 1 130 2 274 1 119 2 227 2 152 1 
257 1 341 1 130 3 135 1 285 1 262 1 213 2 82 1 62 1 266 1 197 1 114 2 156 3 67 1 327 3 30 1 119 2 227 3 121 1 162 1 360 4 230 1 304 1 92 2 248 2 20 1 
257 2 341 1 130 4 135 1 285 1 262 2 213 4 82 1 153 1 62 2 266 1 114 4 197 1 156 5 14 1 67 2 327 4 30 1 31 1 119 3 227 4 121 2 162 1 360 7 230 2 304 2 92 4 248 3 20 1 
254 1 280 1 
293 1 
346 1 
255 1 355 1 
273 1 
255 1 
255 1 55 1 196 1 355 1 
205 2 166 1 67 1 117 4 1 1 57 3 354 1 226 1 262 1 80 7 263 2 125 1 111 1 218 3 361 1 36 1 10 1 
205 2 166 1 67 1 117 4 1 1 57 3 354 1 226 1 262 1 80 7 263 2 125 1 111 1 218 3 361 1 36 1 10 1 
205 2 166 1 67 1 117 4 1 1 57 3 354 1 226 1 262 1 104 1 80 7 263 2 125 1 111 1 218 3 361 1 36 1 10 1 
205 3 232 1 166 1 75 1 1 1 57 15 344 1 262 4 80 31 4 1 110 2 263 5 44 1 111 2 45 1 218 10 62 3 7 1 10 2 64 1 117 16 67 4 354 2 226 1 295 1 121 3 333 1 246 4 18 3 125 2 164 1 361 1 304 3 36 5 
98 1 205 2 75 1 1 1 57 4 262 1 80 9 110 4 263 3 111 1 45 2 218 4 7 2 10 1 67 1 117 5 87 1 354 1 226 1 333 2 125 1 164 2 361 1 36 1 
38 1 76 1 149 1 3 1 132 2 310 1 168 1 133 1 138 1 107 1 43 1 59 1 61 1 287 1 6 1 63 1 270 1 244 1 351 1 68 1 353 1 328 2 47 1 69 1 245 1 356 1 33 1 299 2 72 1 231 1 
38 1 76 1 149 1 310 1 167 1 132 2 168 1 133 1 315 1 138 1 43 1 59 1 61 1 287 1 6 1 63 1 270 1 244 1 68 1 353 1 328 3 47 1 69 1 356 1 245 2 33 1 299 3 72 1 231 1 364 1 
38 1 76 1 167 1 132 2 310 1 133 1 138 1 59 1 43 1 61 1 287 1 6 1 63 1 244 1 270 1 353 1 328 2 69 1 356 1 245 2 33 1 299 2 72 1 231 1 364 1 
255 1 244 2 68 1 328 1 76 1 353 2 168 1 261 1 39 1 356 2 133 1 315 1 194 1 81 1 299 1 321 1 61 1 6 2 198 1 241 1 
38 1 76 1 149 1 167 1 3 1 132 2 310 1 168 1 133 1 138 1 43 1 59 1 61 1 287 1 6 1 270 1 244 1 351 1 68 1 353 1 328 1 47 1 356 1 33 1 299 1 72 1 
21 1 
255 1 100 2 130 2 341 1 76 2 89 1 227 2 200 1 133 2 345 1 285 1 213 1 81 1 347 1 82 1 35 1 321 2 61 2 266 1 198 1 156 1 
147 1 308 1 100 2 189 1 234 1 130 3 208 1 210 1 40 1 347 1 289 1 140 1 352 1 272 1 227 3 90 1 357 1 50 2 124 1 303 1 279 1 250 1 
147 1 100 1 308 1 189 1 234 1 130 3 208 1 210 1 135 1 347 1 289 1 140 1 327 1 272 1 352 1 227 3 90 1 357 1 50 3 124 1 278 1 303 1 279 1 250 1 
147 1 189 1 308 1 100 2 234 1 130 3 208 1 210 1 135 1 40 1 347 1 267 1 289 1 140 1 327 1 272 1 352 1 227 3 90 1 357 1 50 3 124 1 278 1 303 1 279 1 250 1 
308 1 130 5 208 1 210 1 135 5 40 4 213 1 82 1 324 1 267 4 266 1 85 2 140 1 12 2 327 5 272 1 224 1 227 5 225 1 90 1 50 6 183 2 146 1 278 4 279 1 147 1 189 1 100 7 234 1 341 1 150 1 347 3 289 1 156 1 352 1 357 1 297 1 124 1 35 1 303 1 248 2 249 1 250 1 204 2 
147 1 100 4 308 1 234 1 341 1 130 4 208 1 58 1 210 1 135 1 40 2 213 1 347 2 82 1 267 2 266 1 289 1 85 2 156 1 12 2 140 1 327 2 352 1 272 1 227 4 225 1 90 1 357 1 50 4 183 2 124 1 35 1 360 2 278 2 303 1 248 2 249 1 279 1 250 1 204 2 
147 1 100 4 308 1 234 1 130 4 341 1 150 1 208 1 210 1 135 1 40 2 213 1 347 2 82 1 324 1 267 2 266 1 289 1 85 2 156 1 12 2 140 1 327 1 272 1 352 1 225 1 227 4 90 1 357 1 297 1 50 4 183 2 124 1 35 1 278 2 303 1 248 2 249 1 279 1 250 1 204 2 
147 1 100 4 308 1 234 1 130 4 341 1 150 1 208 1 210 1 135 1 40 2 213 1 347 2 82 1 324 1 267 2 266 1 289 1 85 2 156 1 12 2 140 1 327 1 272 1 352 1 225 1 227 4 90 1 357 1 297 1 50 4 183 2 124 1 35 1 278 2 303 1 248 2 249 1 279 1 250 1 204 2 
147 1 100 4 308 1 234 1 130 4 341 1 150 1 260 1 208 1 210 1 135 1 40 2 213 1 347 2 82 1 318 1 320 1 267 2 266 1 289 1 156 1 12 2 140 1 29 2 327 1 272 1 352 1 227 4 90 1 357 1 50 4 124 1 35 1 360 2 278 2 303 1 249 1 279 1 54 2 250 1 204 2 
147 1 308 1 100 5 234 1 341 1 130 4 150 1 208 1 210 1 135 1 40 3 213 1 347 2 82 1 324 1 266 1 267 3 289 1 85 2 156 1 12 2 140 1 327 1 272 1 352 1 225 1 227 4 90 1 357 1 297 1 50 5 183 2 124 1 35 1 146 1 278 3 303 1 248 2 249 1 279 1 250 1 204 2 
147 1 308 1 100 5 234 1 341 1 130 4 150 1 208 1 210 1 135 1 40 3 213 1 347 2 82 1 324 1 266 1 267 3 289 1 85 2 156 1 12 2 140 1 327 1 272 1 352 1 225 1 227 4 90 1 357 1 297 1 50 5 183 2 124 1 35 1 146 1 278 3 303 1 248 2 249 1 279 1 250 1 204 2 
147 1 100 4 308 1 234 1 341 1 130 4 208 1 260 1 58 1 210 1 135 1 40 2 213 1 347 2 82 1 267 2 266 1 289 1 156 1 12 2 140 1 29 2 327 1 352 1 272 1 227 4 90 1 357 1 50 4 124 1 35 1 360 2 278 2 303 1 249 1 279 1 54 2 250 1 204 2 
205 1 254 1 1 1 342 1 57 3 102 1 262 1 80 6 110 2 263 2 111 1 216 1 45 1 218 2 113 1 7 1 115 2 117 3 67 1 176 1 275 1 226 1 333 1 125 1 164 1 361 1 
57 6 342 2 262 2 80 14 4 1 263 1 110 4 170 1 218 2 45 2 216 4 349 1 113 11 62 2 7 2 115 1 172 1 117 8 67 1 176 1 275 11 276 1 295 1 121 2 180 1 333 2 246 3 358 1 18 3 126 1 164 2 304 1 36 1 
306 1 255 1 234 1 76 1 342 1 57 1 133 1 41 1 80 2 83 1 348 1 215 1 110 2 321 1 61 1 216 1 45 1 349 1 7 1 350 1 326 1 157 1 117 1 142 1 352 1 355 1 176 1 159 1 33 1 333 1 180 1 72 1 334 1 358 1 164 1 279 1 
306 1 255 1 234 1 342 1 76 1 57 1 283 1 133 1 41 1 80 1 83 1 348 1 215 1 110 2 321 1 61 1 45 1 7 1 291 1 142 1 352 1 355 1 176 1 159 1 33 1 333 1 180 1 72 1 358 1 359 1 164 1 279 1 187 1 
255 1 117 1 57 1 342 1 76 2 176 1 133 2 120 1 136 1 180 1 80 2 122 1 333 1 81 1 110 2 321 1 164 1 61 2 45 1 349 1 198 1 7 1 
306 1 234 1 101 1 342 1 57 2 211 1 41 1 262 1 80 3 263 1 110 2 218 1 216 1 45 1 113 1 62 1 7 1 117 1 67 1 352 1 176 1 275 1 121 1 333 1 358 1 229 1 164 1 304 1 279 1 
117 2 342 1 176 1 275 1 102 1 262 1 80 2 333 1 110 2 319 1 164 1 218 1 216 1 45 1 113 1 62 1 36 1 7 1 
67 1 342 1 57 2 176 1 275 1 102 1 80 2 333 1 263 1 110 2 164 1 323 1 218 1 216 1 45 1 113 1 304 1 7 1 
342 1 57 2 102 1 262 1 80 4 110 2 263 1 45 1 216 2 218 2 62 1 113 2 7 1 117 2 67 1 176 1 275 2 121 1 333 1 164 1 304 1 36 1 
117 2 342 1 176 1 275 1 262 1 80 2 122 1 333 1 110 2 319 1 164 1 218 1 216 1 45 1 113 1 62 1 36 1 7 1 
67 1 342 1 57 2 176 1 275 1 80 2 122 1 333 1 263 1 110 2 164 1 323 1 218 1 216 1 45 1 113 1 304 1 7 1 
342 1 57 2 262 1 80 4 110 2 263 1 45 1 216 2 218 2 62 1 113 2 7 1 117 2 67 1 176 1 275 2 121 1 333 1 122 1 164 1 304 1 36 1 
342 1 57 2 262 1 80 4 110 2 263 1 45 1 216 2 218 2 62 1 113 2 7 1 117 2 67 1 176 1 275 2 121 1 333 1 164 1 304 1 36 1 
255 1 72 1 348 1 142 1 321 1 76 1 61 1 355 1 159 1 283 1 33 1 133 1 
188 1 255 1 72 1 228 1 321 1 76 1 61 1 355 1 217 1 159 1 33 1 133 1 
342 1 57 2 262 1 80 4 110 2 263 1 45 1 216 2 218 2 62 1 113 2 7 1 117 2 67 1 176 1 275 2 121 1 333 1 358 1 164 1 304 1 36 1 
255 1 291 1 142 1 76 1 355 1 159 1 283 1 133 1 33 1 72 1 107 1 348 1 61 1 
306 1 234 1 101 1 57 1 342 1 41 1 262 1 80 3 110 2 218 1 45 1 216 1 62 1 113 1 7 1 67 1 117 2 352 1 176 1 275 1 121 1 333 1 358 1 74 1 229 1 164 1 304 1 279 1 36 1 
98 1 57 10 131 2 25 1 262 3 80 19 4 1 263 3 110 4 264 1 239 1 45 2 218 6 219 1 62 3 7 2 139 1 222 1 117 9 67 3 295 1 121 3 333 2 246 2 18 1 301 2 164 2 304 3 338 1 36 3 
98 1 75 2 22 1 57 12 131 4 262 3 80 26 263 2 110 6 218 4 239 2 45 3 219 1 62 3 7 3 139 1 325 1 13 1 222 1 67 2 117 14 295 2 121 3 333 3 246 2 18 2 301 1 164 3 93 1 304 2 338 2 337 1 94 1 36 2 
205 1 75 1 1 1 131 4 262 5 80 41 4 1 263 4 218 8 45 3 219 1 7 3 139 1 325 1 13 1 222 1 226 1 333 3 179 1 18 3 93 1 338 1 337 1 94 1 98 1 22 1 57 21 25 1 110 6 111 1 239 2 62 4 67 5 117 20 121 4 295 3 246 4 125 1 301 1 164 3 304 4 361 1 36 4 
205 1 98 1 75 2 1 1 22 1 57 18 131 4 25 1 262 5 80 38 4 1 263 4 110 8 111 1 239 2 45 4 218 7 219 1 62 4 7 4 325 1 139 1 13 1 222 1 117 20 67 4 226 1 295 3 121 4 179 1 333 4 246 4 18 3 125 1 301 1 164 4 361 1 93 1 304 3 337 1 338 1 94 1 36 3 
205 1 98 1 75 1 1 1 22 1 57 25 131 4 262 8 80 52 4 2 263 7 110 4 111 1 239 1 45 2 218 14 219 1 62 7 7 2 325 1 139 1 13 1 222 1 117 27 67 8 226 1 276 2 295 2 121 7 333 2 246 4 18 4 125 1 301 1 164 2 361 1 93 1 304 7 337 1 338 1 94 1 36 7 
252 1 181 1 86 1 165 1 259 1 143 1 103 1 192 1 284 1 268 1 
128 1 88 1 
86 1 165 1 195 1 258 1 259 1 95 1 192 1 284 1 268 1 
73 1 145 1 
175 1 5 1 51 1 
99 1 141 1 165 1 86 1 327 1 235 1 130 1 259 1 143 1 227 1 78 2 103 1 192 1 151 1 284 1 181 1 91 1 268 1 
99 1 141 1 165 1 86 1 327 1 235 1 130 1 259 1 143 1 227 1 78 2 103 1 192 1 151 1 284 1 181 1 91 1 268 1 
99 1 141 1 165 1 86 1 327 1 235 1 130 1 259 1 143 1 227 1 78 2 103 1 192 1 151 1 284 1 181 1 91 1 268 1 
73 1 51 1 145 1 
73 1 51 1 145 1 
175 1 5 1 
175 1 5 1 51 1 
282 1 329 1 
128 1 306 2 165 1 234 2 257 1 130 1 259 1 282 1 78 1 151 1 192 1 284 1 134 1 41 2 313 1 268 1 115 1 86 1 352 2 15 1 119 1 88 1 227 1 329 1 161 1 91 1 279 2 
129 1 255 1 234 2 76 2 342 1 57 1 133 2 136 2 80 2 110 2 61 2 154 1 45 1 349 1 7 1 46 1 117 1 352 2 158 1 176 1 331 1 120 1 333 1 180 1 358 1 164 1 362 1 279 2 
270 1 244 1 38 1 76 2 2 1 310 1 132 2 167 1 47 1 33 1 133 2 332 1 138 1 72 1 317 1 107 1 43 1 61 2 287 1 
270 1 244 1 38 1 76 1 310 1 132 2 167 1 47 1 133 1 33 1 138 1 317 1 72 1 123 1 43 1 61 1 287 1 
255 1 244 1 76 1 2 1 133 1 81 1 321 1 61 1 198 1 127 1 241 1 
270 1 244 1 38 1 76 1 2 1 310 1 132 2 167 1 47 1 133 1 33 1 332 1 138 1 72 1 317 1 43 1 61 1 287 1 
316 1 
213 1 254 1 327 1 336 1 311 1 156 1 135 1 
100 1 327 2 130 1 341 1 227 1 225 1 135 1 213 1 347 1 82 1 183 1 35 1 360 1 266 1 248 1 85 1 156 1 
255 1 55 1 341 1 76 1 355 1 133 1 144 1 298 1 82 1 35 1 321 1 61 1 266 1 
206 1 100 1 130 1 341 2 77 1 345 1 285 1 135 2 213 5 262 2 347 1 82 2 62 2 266 2 114 5 156 8 325 1 13 1 327 5 67 2 227 1 48 2 295 1 121 2 246 1 18 1 35 2 360 6 93 1 92 5 304 2 248 3 337 1 94 1 37 1 
306 1 206 1 56 1 234 1 341 1 130 1 262 2 213 2 41 1 237 1 82 1 111 1 265 1 266 1 156 2 9 1 67 1 352 1 227 1 226 1 48 2 297 1 247 1 125 1 35 1 229 1 303 1 279 1 
327 1 341 1 311 1 135 1 213 1 82 1 336 1 35 1 266 1 156 1 
206 1 327 5 67 2 48 2 121 2 262 2 213 5 26 1 360 10 62 2 92 5 304 2 248 5 114 5 156 5 
347 1 100 1 327 1 130 1 227 1 135 1 
255 1 100 2 271 1 130 1 341 1 76 2 89 1 227 1 200 1 133 2 345 1 285 1 213 1 81 1 347 1 82 1 35 1 321 2 61 2 266 1 198 1 156 1 
306 1 255 1 234 1 142 1 352 1 223 1 76 1 355 1 159 1 283 1 33 1 133 1 41 1 72 1 348 1 229 1 321 1 61 1 279 1 9 1 
205 1 327 4 341 1 285 1 135 2 345 1 213 2 82 1 35 1 360 4 92 2 248 2 266 1 114 2 156 1 
86 1 207 1 284 1 
86 1 207 1 284 1 
34 1 86 1 143 1 282 1 284 1 
86 1 207 1 284 1 
86 1 343 1 284 1 
86 1 343 1 284 1 
86 1 343 1 284 1 
86 1 284 1 
165 1 268 1 
205 1 75 1 67 1 117 4 1 1 57 4 226 1 262 1 80 8 333 2 263 2 110 4 125 1 164 2 111 1 218 3 45 2 361 1 36 1 7 2 
205 1 254 1 117 3 67 1 1 1 57 3 226 1 262 1 80 6 125 1 263 2 111 1 218 2 361 1 
67 1 117 2 57 2 121 1 262 1 333 1 80 4 263 1 110 2 164 1 218 2 45 1 304 1 52 1 62 1 7 1 36 1 
67 1 117 3 57 4 295 1 121 1 262 1 80 7 246 2 4 1 18 1 263 1 218 2 304 1 62 1 36 1 
205 1 75 2 1 1 236 1 57 12 262 3 80 23 4 1 263 5 110 4 111 2 218 9 45 2 62 2 7 2 117 11 67 3 226 1 276 1 121 2 333 2 246 2 18 2 125 2 126 1 164 2 361 1 304 2 36 4 
80 1 246 1 57 1 
80 1 18 1 117 1 
117 3 67 1 57 3 121 1 262 1 333 1 80 6 26 1 110 2 263 2 164 1 45 1 218 3 52 1 62 1 304 1 7 1 36 1 
98 1 57 6 262 2 80 12 110 2 263 1 45 1 218 2 62 2 7 1 325 1 13 1 117 6 67 2 295 1 121 2 333 1 246 1 18 1 164 1 304 2 93 1 337 1 94 1 36 1 
117 3 67 1 57 3 226 1 262 1 80 6 125 1 263 1 111 1 218 2 36 1 
75 1 117 1 1 1 236 1 57 2 80 3 333 1 263 1 125 1 110 2 111 1 164 1 218 2 45 1 361 1 36 1 7 1 
98 1 117 5 67 2 57 5 226 1 262 2 333 1 80 10 237 1 110 2 125 2 263 3 164 1 111 2 45 1 218 5 7 1 36 2 
98 1 117 2 262 1 333 1 80 2 110 2 164 1 45 1 218 1 62 1 7 1 36 1 
98 1 67 1 117 2 57 2 121 1 262 1 333 1 80 4 263 1 110 2 164 1 218 2 45 1 304 1 62 1 7 1 36 1 
98 1 75 1 117 1 236 1 57 2 25 1 80 3 333 3 110 6 125 1 263 1 164 3 111 1 45 3 218 2 7 3 36 1 
205 1 232 1 98 1 75 2 1 1 236 1 57 18 25 1 262 5 80 34 4 1 110 10 263 7 44 1 111 3 45 5 218 12 62 3 7 5 64 1 117 16 67 5 226 2 295 1 121 3 333 5 246 4 18 3 125 3 164 5 361 1 52 1 304 3 36 5 
205 1 98 1 1 1 57 4 262 1 80 8 110 2 263 2 111 1 45 1 218 2 7 1 67 1 117 4 226 1 295 1 333 1 246 1 18 1 125 1 164 1 361 1 94 1 
205 1 98 1 1 1 57 5 262 2 80 11 4 1 263 2 110 4 111 1 45 2 218 3 62 1 7 2 67 1 117 6 226 1 295 1 121 1 333 2 246 2 18 1 125 1 164 2 361 1 52 1 94 1 36 1 
205 1 98 1 75 1 1 1 57 10 262 3 80 19 110 6 263 3 111 1 45 3 218 4 62 2 7 3 325 1 13 1 117 9 67 3 226 1 295 1 121 2 333 3 246 1 18 1 125 1 164 3 361 1 52 1 93 1 304 2 337 1 94 1 36 1 
205 1 98 1 75 1 1 1 57 7 262 3 80 17 110 6 263 3 111 1 45 3 218 5 62 2 7 3 325 1 13 1 117 10 67 2 226 1 295 1 121 2 333 3 246 1 18 1 125 1 164 3 361 1 52 1 304 1 93 1 337 1 94 1 36 2 
205 1 98 1 1 1 57 4 262 1 80 8 110 2 263 2 111 1 45 1 218 2 7 1 67 1 117 4 226 1 295 1 333 1 246 1 18 1 125 1 164 1 361 1 94 1 
98 1 57 6 262 2 80 12 110 2 263 1 45 1 218 2 62 2 7 1 325 1 13 1 117 6 67 2 295 1 121 2 333 1 246 1 18 1 164 1 304 2 93 1 337 1 94 1 36 1 
205 1 98 1 75 2 1 1 57 8 262 3 80 18 110 8 263 3 111 1 45 4 218 5 62 2 7 4 325 1 13 1 117 10 67 2 226 1 295 1 121 2 333 4 246 1 18 1 125 1 164 4 361 1 93 1 52 1 304 1 337 1 94 1 36 2 
98 1 75 2 57 7 25 1 262 3 80 16 110 8 263 3 45 4 218 6 62 3 7 4 325 1 13 1 117 9 67 2 295 1 121 3 333 4 246 1 18 1 164 4 93 1 304 2 337 1 94 1 36 3 
67 1 117 3 1 2 57 4 226 1 262 1 80 7 125 3 263 3 111 3 218 6 361 1 36 3 
205 1 98 1 75 2 1 1 57 8 25 1 262 3 80 18 110 8 263 3 111 1 45 4 218 4 62 2 7 4 325 1 13 1 117 10 67 2 226 1 295 1 121 2 333 4 246 1 18 1 125 1 164 4 361 1 93 1 304 1 337 1 94 1 36 1 
115 1 140 1 307 1 234 1 352 1 177 1 279 1 
115 1 140 1 173 1 174 1 307 1 234 1 352 1 177 1 300 1 17 1 112 1 279 1 
254 1 255 1 81 1 321 1 76 1 61 1 198 1 133 1 
306 1 255 1 234 1 352 1 142 1 76 1 355 1 159 1 133 1 33 1 41 1 72 1 83 1 321 1 61 1 279 1 
306 1 255 1 234 1 352 1 142 1 76 1 355 1 159 1 79 1 133 1 33 1 41 1 72 1 83 1 61 1 279 1 
306 1 255 1 234 1 352 1 76 1 355 1 159 1 79 1 133 1 33 1 41 1 72 1 83 1 61 1 217 1 279 1 
0 1 130 1 293 1 76 1 61 1 227 1 133 1 79 1 
60 1 130 1 293 1 76 1 61 1 227 1 133 1 79 1 
72 1 220 1 76 1 61 1 33 1 133 1 
255 1 55 1 321 1 76 1 61 1 355 1 24 1 133 1 
306 1 255 1 234 1 342 1 76 1 283 1 133 1 41 1 83 1 107 1 348 1 110 2 61 1 45 1 7 1 291 1 352 1 142 1 158 1 355 1 176 1 159 1 33 1 333 1 72 1 358 1 164 1 279 1 187 1 
271 1 118 1 130 1 341 1 293 1 76 1 309 1 119 1 227 1 133 1 82 1 60 1 35 1 321 1 61 1 202 1 266 1 
298 1 255 1 55 1 220 1 76 1 61 1 355 1 133 1 
255 1 81 1 107 1 321 1 76 2 61 2 198 1 133 2 
290 1 255 1 335 1 76 1 61 1 355 1 133 1 160 1 
138 1 72 1 38 1 43 1 321 1 76 1 61 1 132 1 33 1 133 1 
255 1 46 1 107 1 76 2 61 2 167 1 362 1 133 2 
97 1 255 1 107 1 321 1 76 2 61 2 362 1 133 2 
242 1 255 1 107 1 321 1 76 2 61 2 362 1 133 2 
306 1 255 1 234 1 352 1 76 1 355 1 159 1 133 1 33 1 41 1 72 1 83 1 321 1 61 1 217 1 279 1 
255 1 55 1 76 1 61 1 355 1 24 1 133 1 79 1 
115 1 169 1 277 1 185 1 32 1 
115 1 233 1 327 1 148 1 130 2 272 1 119 1 227 2 32 2 135 1 90 1 169 2 277 2 303 1 185 1 155 1 289 1 250 1 203 1 
129 1 169 1 234 1 277 1 352 1 154 1 185 1 279 1 331 1 
233 1 148 1 185 1 
63 1 254 1 69 1 231 1 
63 1 299 1 68 1 328 1 168 1 69 1 231 1 
328 1 6 1 356 1 
171 2 63 1 68 1 328 3 3 1 168 1 69 1 182 1 299 3 109 1 240 1 231 1 
63 1 299 2 68 1 328 2 201 1 168 1 69 1 245 1 231 1 
270 1 221 1 68 1 328 1 281 1 3 1 132 1 168 1 299 1 43 1 231 1 
63 1 299 1 68 1 328 1 3 1 168 1 231 1 
63 2 299 1 68 1 328 1 3 1 168 1 69 1 
63 1 68 2 328 2 3 1 168 2 299 2 108 1 28 1 238 1 231 1 
63 1 199 1 221 1 340 1 68 1 328 3 3 1 168 1 69 1 245 2 70 1 299 3 231 2 
63 1 270 1 292 1 68 1 328 2 132 2 3 1 310 1 168 1 69 1 245 1 138 1 299 2 43 1 231 1 
63 1 199 1 65 1 221 1 68 2 328 4 3 1 168 2 69 1 245 2 299 4 201 1 231 2 
63 1 299 1 68 1 328 1 3 1 168 1 69 1 231 1 
171 1 63 2 199 1 221 1 68 1 328 4 168 1 69 2 245 2 299 4 109 1 84 1 240 1 231 3 
63 1 68 1 328 2 3 1 168 1 245 1 69 1 296 1 193 1 27 1 299 2 231 1 
171 2 63 1 68 1 328 3 3 1 168 1 69 1 299 3 109 1 184 1 240 2 231 1 
253 1 137 2 209 1 231 2 
299 1 68 1 328 1 3 1 168 1 49 1 
63 1 299 2 68 1 328 2 3 1 168 1 69 1 245 1 231 1 70 1 
116 1 
63 1 299 1 68 1 328 1 3 1 168 1 69 1 231 1 
171 1 63 1 68 1 328 3 3 1 168 1 245 1 69 1 70 1 299 3 231 1 
199 1 221 1 84 1 231 1 
63 1 231 1 

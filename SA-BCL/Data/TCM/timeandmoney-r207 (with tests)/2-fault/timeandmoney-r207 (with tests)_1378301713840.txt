#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | CONSTANT | 488 | 0 -> 1
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 2 72 2 181 1 140 1 49 1 165 1 304 3 7 2 54 2 336 2 95 9 168 1 364 1 132 1 189 1 270 1 145 6 272 5 84 2 292 1 85 9 369 1 194 1 193 2 295 1 374 4 25 1 154 1 
72 2 26 2 181 1 140 1 49 1 165 1 304 3 7 2 336 2 54 2 95 9 168 1 364 1 132 1 189 1 270 1 145 6 272 5 84 2 292 1 85 9 369 1 194 1 193 2 295 1 374 4 25 1 154 1 
72 2 26 2 181 1 140 1 49 1 165 1 304 4 7 2 336 2 54 2 95 10 168 1 364 1 132 1 189 1 270 1 145 7 272 6 84 2 292 1 85 10 369 1 194 1 193 2 295 1 374 5 25 1 154 1 
72 2 26 2 181 1 140 1 49 1 165 1 304 2 7 2 336 2 54 1 95 7 168 1 364 1 132 1 270 1 145 4 272 4 84 2 292 1 85 7 369 1 194 1 193 2 295 1 374 3 25 1 154 1 
132 1 72 1 189 1 145 3 272 3 49 1 84 1 292 1 85 4 165 1 193 1 304 1 7 1 295 1 336 1 54 2 374 2 95 4 
364 1 26 1 272 1 84 1 292 1 85 2 165 1 193 1 194 1 7 1 295 1 336 1 95 2 268 1 324 1 156 1 
26 1 270 1 145 1 272 2 84 2 292 1 85 3 165 1 193 2 304 1 295 1 374 1 95 3 
26 1 181 1 72 1 49 1 165 1 304 3 7 1 54 2 336 1 95 9 132 1 270 1 145 7 189 1 272 5 84 2 292 1 345 1 85 9 193 2 295 1 249 1 374 4 154 1 
26 1 181 1 72 1 49 1 165 1 304 3 7 1 54 2 336 1 95 9 132 1 270 1 145 7 189 1 272 5 84 2 292 1 345 1 85 9 193 2 295 1 249 1 374 4 154 1 
187 1 266 1 229 1 
266 1 315 1 209 2 
347 2 334 1 344 2 143 2 301 2 40 1 6 2 203 2 
91 1 327 1 301 2 208 1 262 1 120 2 210 1 6 2 334 1 93 2 125 1 9 1 34 1 143 3 55 1 238 1 80 1 311 1 15 1 344 2 146 1 367 1 40 1 107 2 318 1 173 2 274 1 248 1 347 2 373 1 250 1 45 1 353 1 230 1 254 1 46 2 203 3 
347 1 335 1 344 1 143 1 242 1 301 1 40 1 331 1 6 1 203 1 
187 1 81 1 312 1 344 1 256 1 243 1 4 1 331 1 359 1 266 1 143 1 323 1 70 1 203 1 
187 1 81 1 312 1 344 1 256 1 243 2 301 1 4 2 331 1 6 1 347 1 266 1 143 1 70 1 203 1 
275 1 307 1 243 1 4 1 293 1 
275 1 187 1 307 1 266 1 243 2 37 1 4 2 123 1 
307 1 243 1 4 1 
347 1 275 1 335 1 344 1 143 1 242 1 243 1 301 1 40 1 149 1 4 1 331 1 6 1 203 1 
266 1 
275 1 187 1 307 1 266 1 243 2 37 1 4 2 370 1 
187 1 48 2 59 1 243 5 86 2 4 5 224 2 118 1 174 1 275 2 22 1 307 2 266 1 112 1 66 1 253 1 37 1 169 1 218 1 
334 1 229 1 
344 2 301 1 121 1 6 1 306 1 347 1 334 2 143 2 203 2 
240 1 74 1 
327 1 262 1 173 1 210 1 276 1 334 1 93 1 250 1 143 1 34 1 45 1 230 1 238 1 80 1 46 1 203 1 
327 1 344 1 83 1 262 1 210 1 173 1 6 1 74 1 347 1 93 1 250 1 34 1 143 2 351 1 45 1 230 1 80 1 238 1 46 1 203 2 
347 3 334 1 344 3 83 1 143 3 301 1 6 3 203 3 
347 1 335 1 344 1 143 1 331 1 6 1 203 1 
347 1 306 1 344 1 143 1 301 1 121 1 331 1 6 1 203 1 
91 1 327 1 256 1 259 1 301 2 262 1 4 1 120 2 210 1 331 1 6 3 306 1 334 1 93 1 34 1 143 4 55 1 80 1 238 1 311 1 81 1 312 1 15 1 344 3 83 1 243 1 366 1 367 1 40 1 107 1 318 1 173 1 274 1 248 1 347 3 250 1 351 1 45 1 353 1 230 1 70 1 254 1 46 1 203 4 
347 1 334 1 344 2 83 1 143 2 148 1 359 1 6 1 203 2 
312 1 81 1 344 3 256 1 83 2 243 1 301 1 259 1 4 1 331 1 6 3 306 1 347 3 266 1 143 3 351 1 138 1 70 1 203 3 
344 2 83 1 301 1 108 1 6 2 74 1 306 1 347 2 143 2 203 2 
327 1 262 1 173 1 210 1 334 1 93 1 250 1 143 1 34 1 45 1 230 1 238 1 80 1 46 1 203 1 
262 1 173 1 136 1 334 1 93 1 250 1 143 1 34 1 201 1 45 1 230 1 238 1 80 1 46 1 203 1 
298 1 329 1 120 2 74 2 8 1 236 1 130 1 311 1 240 2 15 1 146 2 105 1 318 1 107 4 319 1 274 1 108 2 248 1 280 1 44 1 353 1 254 2 89 1 232 1 
347 1 81 1 344 1 273 1 143 1 331 1 6 1 203 1 
57 1 344 5 83 2 148 1 301 1 359 1 6 4 347 4 306 1 334 1 143 5 113 1 351 1 203 5 
347 2 335 1 344 2 273 1 143 2 331 1 6 2 203 2 
320 1 361 1 
320 1 361 1 
296 1 356 1 
296 1 356 1 
296 1 356 1 
350 1 320 1 361 1 
350 1 320 1 361 1 
111 1 320 1 361 1 
12 1 296 1 320 2 356 1 177 1 361 2 
350 1 320 1 361 1 
257 1 320 1 361 1 
257 1 320 1 361 1 
257 1 320 1 361 1 
12 1 16 1 182 2 160 2 115 2 243 2 164 2 223 1 4 2 135 1 361 2 213 2 142 1 197 3 372 1 266 1 320 2 352 1 178 1 
344 2 182 1 160 1 115 1 243 1 164 1 4 1 361 1 6 2 347 2 334 1 52 1 142 1 197 1 111 1 127 1 143 2 320 1 338 1 36 1 342 1 340 1 179 1 203 2 
7 1 72 1 336 1 
7 1 336 1 324 1 
72 2 76 1 336 3 324 1 90 1 333 1 
72 1 76 1 336 2 152 1 324 1 90 1 
72 1 76 1 336 2 324 1 90 2 
298 1 48 1 302 1 209 3 4 5 52 1 214 1 307 1 127 1 308 1 266 2 339 2 37 1 340 1 169 3 187 1 243 5 315 1 104 1 105 1 86 1 225 2 224 1 319 1 174 2 275 4 349 2 112 1 279 1 43 1 297 1 89 1 
158 1 298 3 48 2 209 9 4 9 51 1 214 2 307 6 266 5 37 1 79 1 340 4 169 8 187 1 59 1 243 9 315 3 171 5 60 1 105 3 86 2 225 6 224 2 20 1 319 3 293 5 174 6 275 7 349 6 279 1 112 1 43 2 297 3 155 1 89 3 
298 1 48 1 302 1 4 3 209 4 214 1 266 3 308 1 339 1 340 1 169 3 187 1 59 1 243 3 315 2 86 1 105 1 224 1 225 2 319 1 174 2 275 2 349 2 43 1 297 1 89 1 
298 2 48 1 302 1 209 7 4 4 51 1 214 1 266 4 308 1 339 2 79 1 340 2 169 5 187 1 59 1 243 4 315 3 86 1 105 2 225 4 224 1 20 1 319 2 174 4 275 3 349 4 43 1 297 2 89 2 
2 1 229 1 45 1 
137 1 45 1 
286 1 
34 1 45 1 
34 1 2 2 45 3 262 1 325 1 71 1 
34 1 45 1 262 1 
110 1 45 1 
139 1 183 1 146 4 82 1 170 1 222 2 246 1 150 1 107 7 319 1 263 1 8 2 321 1 363 1 254 3 89 1 232 3 
139 1 183 1 146 4 82 1 170 1 222 2 246 1 150 1 107 7 319 1 263 1 8 2 321 1 363 1 254 3 89 1 232 3 
139 1 82 1 183 1 146 4 170 1 222 2 246 1 150 1 107 7 319 1 263 1 8 2 277 1 321 1 363 1 254 3 89 1 232 3 
139 1 298 3 183 2 206 1 357 4 30 1 120 2 263 1 8 5 363 1 131 3 311 1 288 1 188 1 15 1 82 1 146 16 170 2 222 3 133 1 105 3 246 5 150 2 107 31 319 4 274 1 248 1 321 2 67 1 297 3 228 1 254 15 89 4 232 10 
255 1 311 2 15 2 82 1 183 1 146 5 170 1 133 1 222 2 246 1 150 1 107 9 120 4 319 1 274 2 263 1 8 3 248 2 126 1 321 1 363 1 254 4 89 1 232 4 
72 1 26 1 28 1 163 1 165 1 122 1 73 1 92 1 333 1 7 1 124 1 93 1 336 2 95 2 80 1 145 1 272 1 221 1 84 1 292 1 172 1 85 2 245 1 173 1 193 1 295 1 250 1 324 1 153 1 46 1 
72 1 26 1 28 1 163 1 207 1 122 1 73 1 92 1 333 1 284 1 7 1 124 1 93 1 336 2 95 3 80 1 145 2 272 1 84 1 292 1 172 1 85 3 173 1 193 1 295 1 198 1 250 1 324 1 153 1 46 1 
26 1 72 1 28 1 122 1 92 1 284 1 333 1 7 1 124 1 93 1 336 2 95 2 80 1 145 2 272 1 292 1 172 1 85 2 173 1 295 1 198 1 250 1 324 1 153 1 46 1 
26 2 28 2 116 1 207 1 260 1 93 1 124 2 34 1 95 1 80 1 98 1 238 1 290 1 38 1 84 1 172 2 85 1 87 1 173 1 193 1 250 1 45 1 46 1 
72 1 26 1 28 1 163 1 165 1 122 1 73 1 92 1 333 1 7 1 124 1 93 1 336 2 95 1 80 1 84 1 172 1 85 1 245 1 173 1 193 1 198 1 250 1 324 1 153 1 46 1 
212 1 
48 1 141 1 4 5 50 1 331 1 285 1 93 2 143 1 96 1 185 1 186 4 238 2 187 1 344 1 243 5 147 2 101 1 102 2 17 2 64 2 250 1 112 1 251 1 69 1 70 1 203 1 27 1 256 1 355 1 116 1 119 2 209 2 359 1 307 6 266 2 267 1 34 1 216 2 37 3 169 2 80 1 81 1 312 1 38 1 365 1 315 2 86 1 224 1 173 2 174 2 41 2 43 1 45 1 323 1 46 2 
256 1 4 3 50 1 119 1 331 1 359 1 307 2 143 1 37 1 185 1 186 2 81 1 312 1 344 1 243 3 101 1 370 1 251 1 323 1 70 1 69 1 203 1 
256 1 4 3 50 1 331 1 359 1 307 1 266 1 143 1 37 1 185 1 186 3 81 1 312 1 187 1 344 1 243 3 101 1 370 1 64 1 251 1 323 1 70 1 69 1 203 1 
256 1 4 3 50 1 119 1 331 1 359 1 307 2 266 1 143 1 37 1 216 1 185 1 186 3 81 1 312 1 187 1 344 1 243 3 101 1 370 1 64 1 251 1 323 1 70 1 69 1 203 1 
48 1 50 1 4 5 331 1 143 1 185 1 186 6 187 5 344 1 243 5 101 1 147 2 102 2 17 2 109 1 64 4 112 1 251 1 70 1 69 1 203 1 27 1 256 1 354 1 300 1 119 4 359 1 211 1 307 7 266 5 267 1 216 4 37 3 169 1 312 1 81 1 271 1 315 2 86 1 224 1 370 1 174 1 41 2 323 1 
48 1 50 1 4 4 141 1 331 1 143 1 185 1 186 4 187 1 344 1 243 4 101 1 147 2 102 2 17 2 64 2 112 1 251 1 70 1 69 1 203 1 27 1 256 1 209 2 119 2 359 1 307 4 266 2 267 1 37 2 216 2 169 1 312 1 81 1 315 2 86 1 224 1 174 1 41 2 323 1 
27 1 48 1 256 1 354 1 300 1 119 2 4 4 50 1 331 1 359 1 307 4 266 1 267 1 143 1 216 2 37 2 185 1 169 1 186 4 187 1 81 1 312 1 271 1 344 1 243 4 147 2 101 1 102 2 315 2 17 2 86 1 224 1 174 1 64 2 41 2 112 1 251 1 323 1 70 1 69 1 203 1 
27 1 48 1 256 1 354 1 300 1 119 2 4 4 50 1 331 1 359 1 307 4 266 1 267 1 143 1 216 2 37 2 185 1 169 1 186 4 187 1 81 1 312 1 271 1 344 1 243 4 147 2 101 1 102 2 315 2 17 2 86 1 224 1 174 1 64 2 41 2 112 1 251 1 323 1 70 1 69 1 203 1 
299 1 48 1 256 1 234 2 119 2 209 2 4 4 50 1 331 1 359 1 265 1 307 4 266 1 237 2 267 1 143 1 216 2 37 2 185 1 169 1 186 4 187 1 81 1 312 1 271 1 344 1 243 4 101 1 17 2 86 1 224 1 174 1 64 2 41 2 112 1 151 1 251 1 323 1 70 1 69 1 203 1 
27 1 48 1 256 1 354 1 300 1 4 4 50 1 119 3 331 1 359 1 307 5 266 1 267 1 143 1 37 2 216 3 185 1 169 1 186 5 187 1 81 1 312 1 271 1 344 1 243 4 147 2 101 1 102 2 315 2 17 2 86 1 224 1 109 1 174 1 41 2 64 3 112 1 251 1 323 1 70 1 69 1 203 1 
27 1 48 1 256 1 354 1 300 1 4 4 50 1 119 3 331 1 359 1 307 5 266 1 267 1 143 1 37 2 216 3 185 1 169 1 186 5 187 1 81 1 312 1 271 1 344 1 243 4 147 2 101 1 102 2 315 2 17 2 86 1 224 1 109 1 174 1 41 2 64 3 112 1 251 1 323 1 70 1 69 1 203 1 
48 1 234 2 50 1 4 4 141 1 331 1 143 1 237 2 185 1 186 4 187 1 344 1 243 4 101 1 17 2 64 2 112 1 251 1 70 1 69 1 203 1 299 1 256 1 209 2 119 2 359 1 307 4 266 1 267 1 37 2 216 2 169 1 312 1 81 1 86 1 224 1 174 1 41 2 323 1 
120 2 74 1 263 1 8 2 334 2 363 1 130 1 311 1 240 1 15 1 82 1 146 3 222 1 150 1 318 1 107 6 319 1 274 1 108 1 248 1 321 1 229 1 353 1 254 3 89 1 232 2 
326 1 298 1 91 1 357 2 120 4 331 1 74 8 8 1 334 1 287 1 131 2 311 2 288 1 240 8 15 2 191 1 146 6 105 2 246 1 346 1 318 1 107 11 319 1 274 2 108 3 195 1 248 2 297 2 353 2 254 5 89 2 114 1 232 2 
327 1 91 1 262 1 208 1 210 1 120 2 6 1 334 1 93 1 34 1 143 2 80 1 238 1 311 1 289 1 15 1 344 1 83 1 146 1 346 1 173 1 318 1 107 2 274 1 108 1 226 1 276 1 248 1 347 1 250 1 252 1 351 1 45 1 230 1 353 1 254 1 46 1 203 2 
233 2 91 1 327 2 0 1 5 2 6 1 8 4 334 2 93 1 143 3 238 1 240 7 344 1 15 3 146 10 105 2 346 1 246 2 150 1 107 20 108 7 347 1 248 3 196 1 250 2 351 1 297 2 353 3 254 10 203 3 298 2 208 1 262 2 120 6 210 2 263 1 74 7 34 2 363 1 80 2 311 3 82 1 83 1 222 1 39 2 367 2 173 1 318 3 319 3 274 3 227 2 321 1 45 2 230 2 46 1 89 3 232 6 
91 1 116 1 208 1 120 4 282 1 6 1 75 1 93 7 125 2 143 1 34 2 94 1 362 1 97 1 130 1 80 2 238 2 311 2 221 1 344 1 15 2 83 1 146 1 38 1 19 1 173 8 318 2 107 2 274 2 347 1 248 2 198 1 250 2 65 1 45 3 353 2 254 1 46 8 203 1 
298 1 301 1 120 2 6 1 74 1 8 1 306 1 143 1 78 1 311 1 240 1 15 1 344 1 146 1 105 1 346 1 318 1 107 3 319 1 274 1 108 1 347 1 248 1 297 1 353 1 254 2 89 1 232 1 203 1 
311 1 240 1 15 1 329 1 146 2 105 1 246 1 107 2 318 1 120 2 274 1 108 1 74 1 248 1 130 1 353 1 89 1 232 1 
311 1 298 1 240 1 15 1 107 2 318 1 120 2 319 1 274 1 108 1 74 1 8 1 248 1 236 1 130 1 353 1 254 2 232 1 
298 1 120 2 74 2 8 1 130 1 311 1 240 2 15 1 146 2 105 1 246 1 318 1 107 4 319 1 274 1 108 2 248 1 297 1 353 1 254 2 89 1 232 2 
311 1 240 1 15 1 329 1 146 2 105 1 246 1 107 2 318 1 120 2 282 1 274 1 108 1 74 1 248 1 353 1 89 1 232 1 
311 1 298 1 240 1 15 1 107 2 318 1 120 2 282 1 319 1 274 1 108 1 74 1 8 1 248 1 236 1 353 1 254 2 232 1 
298 1 120 2 282 1 74 2 8 1 311 1 240 2 15 1 146 2 105 1 318 1 107 4 319 1 274 1 108 2 248 1 297 1 353 1 254 2 89 1 232 1 
298 1 120 2 74 2 8 1 311 1 240 2 15 1 146 2 105 1 246 1 107 4 318 1 319 1 274 1 108 2 248 1 297 1 353 1 254 2 89 1 232 2 
327 1 91 1 208 1 262 1 210 1 120 2 334 1 93 1 34 1 143 1 80 1 238 1 311 1 15 1 146 1 367 1 107 2 173 1 318 1 274 1 248 1 250 1 45 1 230 1 353 1 254 1 46 1 203 1 
91 1 208 1 262 1 120 2 334 1 93 1 34 1 143 1 80 1 238 1 311 1 343 1 15 1 146 1 107 2 136 1 173 1 318 1 274 1 248 1 250 1 201 1 45 1 230 1 353 1 254 1 46 1 203 1 
298 1 120 2 74 2 8 1 311 1 240 2 15 1 146 2 105 1 346 1 246 1 318 1 107 4 319 1 274 1 108 2 248 1 297 1 353 1 254 2 89 1 232 2 
298 1 327 1 262 1 210 1 120 2 74 2 8 1 93 1 34 1 143 1 80 1 311 1 240 2 221 1 15 1 146 2 367 1 105 1 246 1 107 4 173 1 318 1 319 1 274 1 108 2 248 1 250 1 227 1 297 1 45 1 230 1 353 1 254 2 89 1 46 1 232 2 203 1 
298 1 301 1 120 2 6 1 74 1 306 1 215 1 143 1 311 1 240 1 15 1 344 1 146 2 105 1 246 1 346 1 318 1 107 3 319 1 274 1 108 1 347 1 248 1 297 1 353 1 254 1 89 1 232 1 203 1 
255 1 298 3 206 1 357 2 358 1 120 4 305 2 235 1 8 3 167 1 219 1 131 1 56 1 311 2 288 1 15 2 146 9 134 2 105 3 63 1 246 3 107 19 319 3 274 2 371 1 248 2 297 3 254 10 89 3 232 6 
255 1 298 2 328 1 205 1 206 2 357 2 358 1 120 6 305 1 166 1 235 2 8 2 167 1 77 1 219 2 131 2 311 3 13 1 15 3 241 1 146 14 133 2 134 4 105 3 63 1 246 2 107 26 319 2 274 3 248 3 297 3 254 12 89 3 232 4 
328 1 235 2 8 4 53 1 288 1 13 1 15 3 241 1 146 20 105 4 246 4 63 1 107 41 150 1 248 3 297 4 254 21 255 1 298 4 205 1 206 3 357 4 358 1 120 6 166 1 305 1 263 1 167 1 77 1 363 1 131 3 219 1 311 3 82 1 133 1 222 1 134 4 319 5 274 3 371 1 321 1 89 5 232 8 
255 1 298 3 328 1 205 1 206 3 357 4 358 1 120 8 305 1 166 1 263 1 235 2 8 4 53 1 167 1 77 1 363 1 219 1 131 3 311 4 288 1 13 1 241 1 15 4 82 1 146 20 222 1 133 2 134 4 105 4 63 1 246 3 150 1 107 38 319 4 274 4 371 1 248 4 321 1 297 4 254 18 89 5 232 7 
326 2 255 1 298 7 328 1 205 1 206 2 357 4 358 1 120 4 305 1 166 1 263 1 235 1 8 7 167 1 77 1 363 1 219 1 131 4 311 2 288 2 13 1 241 1 15 2 82 1 146 27 222 1 133 1 134 4 105 7 63 1 246 7 150 1 107 52 319 8 274 2 248 2 321 1 297 7 254 25 89 8 232 14 
91 1 208 1 120 2 93 2 125 2 34 1 143 2 94 1 80 1 311 1 58 1 15 1 344 2 146 1 368 1 346 1 192 1 173 2 318 1 107 2 274 1 248 1 250 1 65 1 45 1 68 1 202 1 353 1 254 1 46 2 203 2 
159 1 72 1 221 1 291 1 173 2 122 1 73 1 333 1 7 1 93 2 124 1 250 1 198 1 336 2 35 1 324 1 153 1 80 1 46 2 
72 1 291 1 173 1 122 1 73 1 333 1 7 1 93 1 124 1 198 1 250 1 336 2 324 1 153 1 80 1 46 1 99 1 
38 1 116 1 260 1 173 1 31 1 93 1 124 1 250 1 34 1 35 1 45 1 80 1 238 1 46 1 
159 1 72 1 291 1 173 1 122 1 73 1 333 1 7 1 93 1 124 1 198 1 250 1 336 2 35 1 324 1 153 1 80 1 46 1 
157 1 
187 1 22 1 266 1 253 1 229 1 169 1 174 1 
187 1 48 1 27 1 243 1 147 1 102 1 315 1 86 1 4 1 209 1 224 1 174 1 307 1 266 2 112 1 37 1 169 1 
48 4 2 2 4 5 5 2 93 3 10 2 238 1 187 2 239 2 243 5 103 2 18 1 105 2 21 2 349 6 22 1 110 2 23 2 250 3 200 2 112 4 253 1 297 2 298 2 355 1 29 2 262 3 209 12 32 1 307 5 266 8 34 3 309 2 37 3 169 9 80 4 312 2 221 1 314 1 315 6 86 4 224 4 225 6 173 3 319 2 174 8 137 3 43 2 45 10 231 1 46 3 89 2 47 1 325 1 
298 2 48 2 205 1 355 1 206 1 357 1 4 1 209 6 303 1 166 1 307 1 266 5 77 1 309 1 37 1 169 8 131 1 187 2 13 1 241 1 243 1 103 2 315 3 86 2 105 2 225 5 224 2 319 2 174 5 349 5 42 1 112 2 43 1 297 2 89 2 
48 1 300 1 301 1 4 1 331 1 6 1 335 1 143 1 337 1 309 1 363 1 169 2 344 1 243 1 242 1 103 2 86 1 40 1 224 1 149 1 150 1 319 1 174 2 347 1 112 1 321 1 89 2 203 1 
187 1 48 1 22 1 266 1 112 1 253 1 86 1 224 1 169 1 174 1 
298 2 103 2 315 5 105 2 225 5 209 10 319 2 5 1 174 5 349 5 266 5 309 1 297 2 169 5 89 2 
187 1 307 1 266 1 243 1 37 1 4 1 
48 2 355 2 116 1 4 3 93 4 307 4 34 1 96 1 37 2 169 2 80 1 238 2 59 1 38 1 365 1 243 3 18 2 86 2 224 2 106 1 173 4 174 2 250 1 112 1 43 2 45 1 281 1 46 4 47 1 
91 1 327 1 301 2 262 1 120 2 210 1 6 2 334 1 93 1 143 3 34 1 55 1 238 1 80 1 311 1 344 2 15 1 367 1 40 1 107 1 173 1 318 1 274 1 248 1 347 2 250 1 45 1 230 1 353 1 254 1 46 1 203 3 
187 2 48 1 355 1 222 1 315 2 86 1 225 2 209 4 224 1 174 2 349 2 266 4 112 1 43 1 169 1 
14 1 115 1 164 1 
14 1 115 1 164 1 
115 1 164 1 342 1 135 1 217 1 
14 1 115 1 164 1 
115 1 316 1 164 1 
115 1 316 1 164 1 
115 1 316 1 164 1 
115 1 164 1 
320 1 361 1 
311 2 15 2 146 4 82 1 222 1 133 1 246 1 107 8 120 4 150 1 319 1 274 2 263 1 8 2 248 2 321 1 363 1 254 4 89 1 232 3 
82 1 146 3 222 1 150 1 107 6 319 1 263 1 8 2 321 1 229 1 363 1 254 3 89 1 232 2 
311 1 298 1 15 1 146 2 117 1 105 1 246 1 120 2 107 4 319 1 274 1 8 1 248 1 297 1 254 2 89 1 232 2 
298 1 288 1 146 3 206 1 357 2 105 1 246 1 107 7 319 1 8 1 297 1 254 4 131 1 89 1 232 2 
326 1 298 2 357 2 120 4 263 1 8 5 363 1 131 2 311 2 288 1 144 1 15 2 82 1 146 11 191 1 222 1 133 2 105 2 246 4 150 2 107 23 319 3 274 2 248 2 321 2 297 2 254 12 89 3 232 9 
357 1 107 1 254 1 
146 1 107 1 131 1 
311 1 298 1 15 1 146 3 117 1 105 1 246 1 120 2 107 6 319 1 274 1 5 1 248 1 8 2 297 1 254 3 89 1 232 3 
255 1 298 2 205 1 206 1 357 1 120 2 166 1 8 1 77 1 131 1 311 1 13 1 15 1 241 1 146 6 105 2 246 1 107 12 319 2 274 1 248 1 297 2 254 6 89 2 232 2 
146 3 246 1 107 6 150 1 319 1 8 1 321 1 363 1 254 3 89 1 232 2 
311 1 144 1 15 1 146 1 82 1 133 1 246 1 150 1 107 3 120 2 274 1 263 1 8 1 248 1 321 1 254 2 232 2 
311 1 255 1 15 1 146 5 246 2 120 2 150 2 107 10 319 2 274 1 248 1 8 3 337 1 321 2 363 1 254 5 89 2 232 5 
255 1 311 1 15 1 146 2 105 1 246 1 120 2 107 2 274 1 248 1 89 1 232 1 
255 1 311 1 298 1 15 1 146 2 105 1 246 1 120 2 107 4 319 1 274 1 8 1 248 1 297 1 254 2 89 1 232 2 
255 1 311 3 144 1 15 3 146 1 133 1 246 1 107 3 120 6 150 1 274 3 371 1 248 3 8 1 321 1 254 2 232 2 
255 1 298 3 206 1 357 4 30 1 117 1 120 10 263 1 8 7 363 2 131 3 311 5 144 1 288 1 15 5 82 1 146 16 222 1 133 2 105 3 246 5 150 3 107 34 319 5 274 5 371 1 248 5 321 3 67 1 228 1 297 3 254 18 89 5 232 12 
255 1 206 1 357 1 120 2 263 1 8 2 77 1 363 1 131 1 311 1 15 1 146 4 82 1 222 1 107 8 150 1 319 1 274 1 248 1 321 1 254 4 89 1 232 2 
255 1 206 1 357 2 117 1 120 4 263 1 8 2 77 1 363 1 131 1 311 2 288 1 15 2 82 1 146 6 222 1 105 1 246 1 150 1 107 11 319 1 274 2 248 2 321 1 297 1 254 5 89 2 232 3 
255 1 298 2 205 1 206 1 117 1 357 1 120 6 166 1 263 1 8 3 77 1 363 1 131 1 311 3 13 1 15 3 241 1 82 1 146 9 222 1 133 1 105 2 246 1 150 1 107 19 319 3 274 3 248 3 321 1 297 2 254 10 89 3 232 4 
255 1 298 1 205 1 206 1 117 1 357 1 120 6 166 1 263 1 8 3 77 1 363 1 131 1 311 3 13 1 15 3 241 1 82 1 146 10 222 1 133 1 105 2 246 2 150 1 107 17 319 2 274 3 248 3 321 1 297 2 254 7 89 3 232 5 
255 1 206 1 357 1 120 2 263 1 8 2 77 1 363 1 131 1 311 1 15 1 146 4 82 1 222 1 107 8 150 1 319 1 274 1 248 1 321 1 254 4 89 1 232 2 
255 1 298 2 205 1 206 1 357 1 120 2 166 1 8 1 77 1 131 1 311 1 13 1 15 1 241 1 146 6 105 2 246 1 107 12 319 2 274 1 248 1 297 2 254 6 89 2 232 2 
255 1 298 1 205 1 206 1 357 1 117 1 120 8 166 1 263 1 8 3 77 1 363 1 131 1 311 4 13 1 15 4 241 1 82 1 146 10 222 1 133 2 105 2 246 2 150 1 107 18 319 2 274 4 248 4 321 1 297 2 254 8 89 3 232 5 
255 1 298 2 205 1 206 1 357 1 120 8 166 1 8 3 77 1 131 1 311 4 13 1 15 4 241 1 146 9 133 2 105 3 246 3 107 16 319 2 274 4 371 1 248 4 297 3 254 7 89 3 232 6 
82 2 146 3 246 3 107 7 150 3 319 1 263 1 8 3 321 3 363 1 254 4 89 1 232 6 
255 1 298 1 205 1 206 1 357 1 120 8 166 1 263 1 8 3 77 1 363 1 131 1 311 4 13 1 15 4 241 1 82 1 146 10 222 1 133 2 105 2 246 1 150 1 107 18 319 2 274 4 371 1 248 4 321 1 297 2 254 8 89 3 232 4 
334 1 344 1 143 1 148 1 247 1 359 1 203 1 
344 1 148 1 261 1 3 1 184 1 247 1 359 1 283 1 334 1 176 1 143 1 203 1 
93 1 250 1 38 1 34 1 116 1 229 1 45 1 173 1 80 1 238 1 46 1 
344 1 83 1 262 1 173 1 210 1 6 1 347 1 334 1 93 1 250 1 34 1 143 2 45 1 230 1 80 1 238 1 46 1 203 2 
81 1 256 1 344 2 83 1 18 1 262 2 173 1 210 1 331 1 21 1 6 2 347 1 334 1 110 1 93 1 250 1 34 2 143 2 45 3 230 1 80 1 46 1 203 2 
81 1 204 1 256 1 344 2 83 1 18 1 262 2 173 2 136 1 331 1 21 1 6 2 347 1 334 1 110 1 93 2 250 1 34 2 143 2 45 3 230 1 80 1 46 2 203 2 
187 1 312 1 204 1 243 2 1 1 2 1 18 1 262 1 4 2 173 3 21 1 137 1 110 1 93 3 307 1 266 1 250 1 34 1 11 1 45 4 238 1 80 1 46 3 
187 1 312 1 204 1 243 2 2 1 29 1 18 1 262 1 4 2 173 3 21 1 137 1 110 1 93 3 307 1 266 1 250 1 34 1 45 4 238 1 80 1 46 3 
93 1 250 1 19 1 173 1 80 1 46 1 
221 1 19 1 262 1 173 7 348 1 75 1 93 6 125 1 198 1 278 1 250 2 65 1 34 2 362 1 322 1 45 3 97 1 238 2 80 3 46 7 325 1 
327 1 262 1 120 4 210 1 6 1 74 1 263 1 8 2 334 2 93 1 34 1 143 2 363 1 80 1 311 2 58 1 240 1 15 2 344 1 221 1 146 3 82 1 83 1 222 1 39 1 367 1 346 1 107 6 150 1 318 2 173 1 319 1 274 2 108 1 248 2 347 1 250 1 227 1 321 1 45 1 230 1 353 2 254 3 89 1 46 1 232 2 203 2 
48 2 2 1 29 1 4 3 93 1 307 2 266 1 10 1 37 1 169 1 238 1 187 1 239 1 312 1 243 3 86 2 224 2 173 1 174 1 275 1 137 1 22 1 112 2 200 1 253 1 45 2 46 1 47 1 
221 1 2 1 19 1 262 1 173 2 93 2 250 1 34 1 45 2 231 1 80 2 46 2 325 1 
204 1 221 1 38 1 258 1 116 1 173 4 93 4 250 1 34 1 45 1 80 1 238 1 46 4 
161 1 18 1 262 1 173 2 332 1 348 1 93 2 278 1 199 1 250 1 34 1 45 1 80 2 46 2 
7 1 93 1 250 1 336 1 324 1 173 1 80 1 122 1 238 1 46 1 
221 1 368 1 173 2 93 2 198 1 250 1 65 1 34 1 45 1 80 1 46 2 
221 1 38 1 258 1 116 1 18 1 173 5 93 4 75 1 250 2 65 1 34 2 362 1 45 3 238 1 80 2 46 5 
221 1 38 1 258 1 116 1 18 1 62 1 173 5 93 4 75 1 250 2 65 1 34 2 45 3 238 1 80 2 46 5 
344 1 83 1 262 1 173 1 136 1 6 1 347 1 334 1 93 1 250 1 34 1 143 2 45 1 230 1 80 1 238 1 46 1 203 2 
18 1 262 1 173 1 348 1 93 1 278 1 250 1 34 1 322 1 45 1 80 2 46 1 325 1 
175 1 294 1 334 1 341 1 310 1 
220 1 187 1 312 1 81 1 256 1 313 1 243 2 259 1 317 1 4 2 331 1 275 1 294 2 175 2 334 1 266 1 341 1 70 1 310 2 
344 1 192 1 294 1 175 1 143 1 341 1 202 1 68 1 203 1 
220 1 313 1 341 1 
272 1 295 1 292 1 229 1 
272 1 295 1 95 1 84 1 292 1 85 1 193 1 
26 1 28 1 85 1 
364 2 190 1 272 1 162 1 84 1 292 1 85 3 165 1 193 1 330 1 295 1 95 3 
145 1 272 1 295 1 54 1 95 2 84 1 292 1 85 2 193 1 
132 1 72 1 272 1 84 1 85 1 165 1 193 1 7 1 374 1 336 1 95 1 
272 1 295 1 95 1 84 1 85 1 193 1 165 1 
295 2 95 1 84 1 292 1 85 1 193 1 165 1 
180 1 272 1 84 2 85 2 165 1 193 2 295 1 95 2 375 1 269 1 
181 1 145 2 272 2 84 1 292 1 85 3 165 1 193 1 304 1 295 1 374 1 95 3 154 1 
72 1 145 1 272 1 84 1 292 1 85 2 165 1 193 1 333 1 7 1 295 1 336 2 95 2 128 1 324 1 
189 1 145 2 272 2 84 2 292 1 85 4 165 1 193 2 304 1 295 1 54 1 374 1 95 4 
272 1 295 1 95 1 84 1 292 1 85 1 193 1 165 1 
364 1 145 2 272 3 162 1 84 1 292 2 85 4 330 1 193 1 304 1 295 2 374 1 95 4 129 1 
145 1 272 1 84 1 292 1 85 2 165 1 193 1 88 1 264 1 295 1 249 1 95 2 
364 2 272 1 162 1 84 1 292 1 85 3 165 1 193 1 330 2 360 1 295 1 95 3 
33 1 272 2 24 1 100 2 
95 1 84 1 61 1 85 1 193 1 165 1 
181 1 145 1 272 1 295 1 95 2 84 1 292 1 85 2 193 1 165 1 
244 1 
272 1 295 1 95 1 84 1 292 1 85 1 193 1 165 1 
364 1 181 1 145 1 272 1 295 1 95 3 84 1 292 1 85 3 193 1 165 1 
272 1 374 1 129 1 304 1 
272 1 295 1 

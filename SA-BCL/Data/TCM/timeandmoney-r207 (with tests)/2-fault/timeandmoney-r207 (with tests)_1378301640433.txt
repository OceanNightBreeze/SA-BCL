#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | CONSTANT | 2907 | 1 -> 0
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V | STATEMENT | 1711 | stmt -> ;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
225 2 166 1 300 2 273 5 357 2 204 9 275 1 335 2 168 1 307 1 207 1 146 1 337 1 125 1 347 1 283 1 193 1 373 9 217 1 196 4 375 1 97 1 101 6 223 1 104 2 18 2 19 2 244 3 
225 2 166 1 300 2 273 5 357 2 204 9 275 1 335 2 168 1 307 1 207 1 146 1 337 1 125 1 347 1 283 1 193 1 373 9 217 1 196 4 375 1 97 1 101 6 223 1 104 2 18 2 244 3 19 2 
225 2 166 1 300 2 273 6 357 2 204 10 275 1 335 2 168 1 307 1 207 1 146 1 337 1 125 1 347 1 283 1 193 1 373 10 217 1 196 5 375 1 97 1 101 7 223 1 104 2 18 2 244 4 19 2 
225 2 166 1 300 2 273 4 357 2 204 7 275 1 335 2 168 1 207 1 146 1 337 1 125 1 347 1 283 1 193 1 373 7 217 1 196 3 375 1 97 1 101 4 223 1 104 2 18 2 244 2 19 1 
225 1 300 1 273 3 193 1 357 1 373 4 204 4 217 1 196 2 275 1 335 1 307 1 207 1 337 1 101 3 18 1 244 1 19 2 
283 1 273 1 300 1 193 1 357 1 157 1 373 2 204 2 217 1 275 1 335 1 86 1 146 1 177 1 104 1 18 1 
300 2 273 2 193 1 373 3 204 3 217 1 196 1 275 1 168 1 101 1 104 1 18 2 244 1 
225 1 300 2 273 5 357 1 204 9 275 1 359 1 168 1 335 1 207 1 307 1 169 1 337 1 347 1 193 1 373 9 217 1 196 4 375 1 101 7 104 1 18 2 244 3 19 2 
225 1 300 2 273 5 357 1 204 9 275 1 359 1 168 1 335 1 207 1 307 1 169 1 337 1 347 1 193 1 373 9 217 1 196 4 375 1 101 7 104 1 18 2 244 3 19 2 
150 1 122 1 208 1 
324 2 122 1 102 1 
281 2 183 2 80 2 77 1 70 1 338 2 15 2 21 2 
202 1 110 1 165 1 182 1 303 2 116 1 45 1 67 1 276 1 183 2 4 1 304 1 231 1 49 1 70 1 338 3 51 2 212 1 281 2 188 2 348 1 261 1 77 1 191 1 15 2 55 2 319 1 374 1 57 1 376 1 80 3 59 1 132 2 100 1 353 1 354 1 21 2 
281 1 183 1 80 1 87 1 297 1 77 1 338 1 124 1 15 1 21 1 
281 1 11 1 42 1 80 1 308 1 87 1 310 1 122 1 362 1 338 1 208 1 159 1 211 1 280 1 
281 1 11 1 42 1 15 1 183 1 80 1 308 2 87 1 310 1 122 1 338 1 208 1 280 2 211 1 21 1 
35 1 308 1 280 1 344 1 382 1 
35 1 66 1 308 2 122 1 208 1 280 2 162 1 382 1 
308 1 280 1 382 1 
281 1 297 1 77 1 15 1 183 1 35 1 80 1 308 1 69 1 87 1 124 1 338 1 280 1 21 1 
122 1 
64 1 35 1 66 1 308 2 122 1 208 1 280 2 382 1 
367 1 66 1 54 2 44 1 218 1 144 1 35 2 184 2 308 5 17 1 122 1 158 2 208 1 340 1 178 1 342 1 135 1 280 5 382 2 
150 1 70 1 
281 2 330 1 239 1 15 1 183 1 80 2 338 2 70 2 21 1 
198 1 209 1 2 1 
202 1 188 1 110 1 190 1 261 1 191 1 303 1 45 1 276 1 376 1 80 1 132 1 49 1 70 1 338 1 212 1 
245 1 281 1 202 1 188 1 110 1 261 1 191 1 15 1 303 1 45 1 276 1 376 1 183 1 80 2 133 1 132 1 49 1 198 1 338 2 212 1 
245 2 281 5 126 1 239 1 15 4 333 1 183 4 80 5 133 1 362 1 338 5 70 1 381 1 21 1 
281 2 183 2 80 2 87 1 297 1 338 2 234 1 15 2 
245 1 281 3 183 3 80 3 70 1 338 3 15 3 21 1 
281 1 183 1 80 1 87 1 297 1 338 1 15 1 
281 1 183 1 80 1 87 1 330 1 338 1 239 1 15 1 21 1 
245 1 202 1 110 1 42 1 303 1 116 1 45 1 276 1 183 3 308 1 231 1 49 1 87 1 310 1 70 1 338 4 51 1 211 1 280 1 212 1 281 3 11 1 188 1 348 1 261 1 77 1 191 1 239 1 15 3 55 2 319 1 374 1 57 1 376 1 80 4 59 1 133 1 132 1 100 1 379 1 353 1 354 1 161 1 21 2 
333 1 281 2 245 1 183 1 80 2 362 1 70 1 338 2 15 1 
245 2 281 3 11 1 239 1 42 1 15 3 183 3 80 3 308 1 133 1 87 1 310 1 122 1 338 3 89 1 280 1 161 1 211 1 21 1 
245 1 281 2 239 1 15 2 183 2 80 2 338 2 198 1 209 1 21 1 
188 1 202 1 110 1 261 1 191 1 303 1 45 1 276 1 376 1 80 1 132 1 49 1 70 1 338 1 212 1 
188 1 202 1 110 1 261 1 111 1 191 1 303 1 376 1 377 1 80 1 251 1 132 1 87 1 49 1 70 1 338 1 212 1 
139 1 228 1 247 1 43 1 2 2 116 1 46 1 304 2 231 1 254 1 209 2 343 1 51 4 92 1 149 1 348 2 154 1 318 1 55 2 319 1 374 1 59 1 198 2 354 1 
281 1 183 1 11 1 80 1 87 1 338 1 234 1 15 1 
136 1 325 1 
136 1 325 1 
236 1 50 1 
236 1 50 1 
236 1 50 1 
136 1 325 1 72 1 
136 1 325 1 72 1 
136 1 213 1 325 1 
136 2 108 1 236 1 50 1 325 2 90 1 
136 1 325 1 72 1 
136 1 325 1 192 1 
136 1 325 1 192 1 
136 1 325 1 192 1 
136 1 83 1 272 1 141 1 183 2 360 1 308 1 70 1 338 2 341 1 363 1 280 1 364 1 281 2 213 1 28 1 152 1 127 1 95 1 14 1 15 2 320 1 80 2 325 1 
136 2 108 1 138 1 152 3 83 2 127 2 272 2 95 1 372 1 84 1 216 2 34 1 308 2 380 1 122 1 325 2 220 1 341 2 280 2 
335 1 225 1 357 1 
335 1 86 1 357 1 
225 2 86 1 331 1 286 1 53 1 357 3 
225 1 86 1 331 1 286 1 371 1 357 2 
225 1 86 1 331 1 286 2 357 2 
65 1 66 1 139 1 227 1 41 2 228 1 206 1 184 1 308 5 309 1 122 2 208 1 363 1 342 1 280 5 364 1 54 1 14 1 154 1 318 1 156 2 350 2 33 1 35 4 323 1 324 3 158 1 102 1 294 1 178 2 135 3 382 1 
66 1 139 3 25 1 41 6 44 1 228 3 358 1 118 1 206 2 184 2 308 9 309 1 122 5 208 1 342 1 280 9 364 4 344 5 349 1 54 2 154 3 318 3 350 6 130 5 33 2 35 7 324 9 158 2 102 3 294 3 178 6 355 1 135 8 267 1 382 6 
139 1 227 1 41 2 44 1 228 1 206 1 184 1 308 3 122 3 208 1 280 3 364 1 54 1 154 1 318 1 156 1 350 2 33 1 35 2 323 1 324 4 158 1 102 2 294 1 178 2 135 3 
139 2 25 1 227 1 41 4 44 1 228 2 206 1 184 1 308 4 122 4 208 1 280 4 364 2 349 1 54 1 154 2 318 2 156 2 350 4 33 1 35 3 323 1 324 7 158 1 102 3 294 2 178 4 135 5 267 1 
202 1 150 1 194 1 
202 1 368 1 
13 1 
202 1 110 1 49 1 
119 1 202 1 
202 1 49 1 
202 3 110 1 49 1 327 1 210 1 194 2 
149 2 40 1 348 3 226 1 154 1 228 1 195 1 56 1 174 1 32 2 304 4 48 1 38 1 352 1 254 3 51 7 345 1 
149 2 40 1 348 3 226 1 154 1 228 1 195 1 56 1 174 1 32 2 304 4 48 1 38 1 352 1 254 3 51 7 345 1 
149 2 40 1 348 3 226 1 154 1 228 1 195 1 56 1 174 1 32 2 304 4 48 1 352 1 38 1 254 3 105 1 51 7 345 1 
40 2 271 3 139 3 226 1 228 4 304 16 48 2 230 1 231 1 254 10 51 31 345 1 149 5 75 1 315 1 10 4 348 15 318 3 154 4 55 2 56 2 319 1 174 2 195 5 374 1 32 3 79 1 352 1 38 1 221 1 294 3 199 1 354 1 328 1 
149 3 40 1 226 1 348 4 154 1 228 1 55 4 56 1 195 1 174 1 374 2 319 2 129 1 32 2 79 1 304 5 48 1 231 2 352 1 61 1 254 4 354 2 51 9 345 1 
225 1 299 1 140 1 273 1 300 1 357 2 303 1 204 2 275 1 335 1 86 1 258 1 74 1 171 1 212 1 314 1 313 1 188 1 53 1 29 1 193 1 31 1 373 2 242 1 217 1 376 1 132 1 101 1 104 1 18 1 
225 1 299 1 140 1 273 1 300 1 357 2 303 1 204 3 335 1 86 1 121 1 258 1 74 1 171 1 212 1 366 1 313 1 188 1 53 1 29 1 288 1 193 1 31 1 373 3 217 1 376 1 132 1 101 2 104 1 18 1 
225 1 299 1 273 1 357 2 303 1 204 2 335 1 86 1 258 1 74 1 212 1 366 1 313 1 188 1 53 1 29 1 288 1 193 1 31 1 373 2 217 1 376 1 132 1 101 2 104 1 
202 1 188 1 203 1 299 2 180 1 191 1 300 1 302 1 373 1 31 2 204 1 303 1 376 1 6 1 351 1 132 1 49 1 121 1 252 1 104 2 18 1 74 2 212 1 
225 1 299 1 140 1 300 1 357 2 303 1 204 1 275 1 335 1 86 1 258 1 74 1 171 1 212 1 366 1 314 1 313 1 188 1 53 1 29 1 31 1 373 1 376 1 132 1 104 1 18 1 
131 1 
224 2 329 1 42 1 143 1 47 2 6 1 184 1 49 1 87 1 147 1 338 1 148 1 342 1 186 1 280 5 281 1 188 2 11 1 54 1 191 2 289 2 290 4 291 2 158 1 102 2 159 1 106 1 22 1 202 1 66 3 356 1 302 1 303 2 206 1 308 5 310 1 122 2 362 1 208 1 71 1 256 1 211 1 212 1 260 1 316 1 264 2 321 2 376 1 378 2 80 1 132 2 324 2 178 2 135 2 382 6 
224 1 281 1 64 1 11 1 66 1 356 1 42 1 143 1 290 2 80 1 308 3 87 1 147 1 310 1 362 1 338 1 148 1 159 1 186 1 280 3 211 1 382 2 
281 1 64 1 11 1 66 1 356 1 42 1 264 1 143 1 290 3 80 1 308 3 87 1 147 1 310 1 122 1 362 1 338 1 208 1 148 1 159 1 186 1 280 3 211 1 382 1 
224 1 64 1 66 1 356 1 42 1 143 1 308 3 87 1 310 1 147 1 362 1 122 1 338 1 148 1 208 1 186 1 211 1 280 3 281 1 11 1 264 1 290 3 378 1 80 1 159 1 382 2 
224 4 329 1 42 1 143 1 47 2 184 1 87 1 147 1 338 1 148 1 342 1 186 1 280 5 281 1 11 1 54 1 240 1 289 2 290 6 291 2 158 1 159 1 102 2 62 1 64 1 66 3 356 1 308 5 310 1 362 1 122 5 253 1 208 5 211 1 316 1 264 4 321 2 378 4 80 1 81 1 178 1 135 1 268 1 382 7 
224 2 329 1 22 1 66 2 356 1 42 1 143 1 47 2 184 1 308 4 87 1 310 1 147 1 122 2 362 1 338 1 208 1 148 1 342 1 186 1 280 4 211 1 281 1 11 1 316 1 54 1 264 2 289 2 321 2 290 4 378 2 291 2 80 1 324 2 158 1 102 2 159 1 178 1 135 1 382 4 
224 2 329 1 66 2 356 1 42 1 143 1 47 2 184 1 308 4 87 1 310 1 147 1 122 1 362 1 338 1 253 1 208 1 148 1 342 1 186 1 211 1 280 4 281 1 11 1 316 1 54 1 264 2 289 2 321 2 290 4 378 2 291 2 80 1 81 1 158 1 102 2 159 1 178 1 135 1 268 1 382 4 
224 2 329 1 66 2 356 1 42 1 143 1 47 2 184 1 308 4 87 1 310 1 147 1 122 1 362 1 338 1 253 1 208 1 148 1 342 1 186 1 211 1 280 4 281 1 11 1 316 1 54 1 264 2 289 2 321 2 290 4 378 2 291 2 80 1 81 1 158 1 102 2 159 1 178 1 135 1 268 1 382 4 
224 2 329 1 137 1 66 2 356 1 42 1 143 1 184 1 308 4 87 1 310 1 147 1 122 1 362 1 338 1 208 1 148 1 342 1 186 1 211 1 280 4 172 1 281 1 11 1 173 2 54 1 264 2 241 2 321 2 290 4 378 2 291 2 80 1 36 1 324 2 158 1 159 1 178 1 135 1 268 1 382 4 
224 3 329 1 66 2 356 1 42 1 143 1 47 2 184 1 308 4 87 1 310 1 147 1 122 1 362 1 253 1 338 1 208 1 148 1 342 1 186 1 211 1 280 4 281 1 11 1 316 1 54 1 264 3 289 2 321 2 290 5 291 2 378 3 80 1 81 1 158 1 102 2 159 1 178 1 135 1 62 1 268 1 382 5 
224 3 329 1 66 2 356 1 42 1 143 1 47 2 184 1 308 4 87 1 310 1 147 1 122 1 362 1 253 1 338 1 208 1 148 1 342 1 186 1 211 1 280 4 281 1 11 1 316 1 54 1 264 3 289 2 321 2 290 5 291 2 378 3 80 1 81 1 158 1 102 2 159 1 178 1 135 1 62 1 268 1 382 5 
224 2 329 1 22 1 66 2 356 1 42 1 143 1 184 1 308 4 87 1 310 1 147 1 122 1 362 1 338 1 208 1 148 1 342 1 186 1 280 4 211 1 172 1 281 1 11 1 173 2 54 1 264 2 241 2 321 2 290 4 378 2 291 2 80 1 324 2 158 1 159 1 178 1 135 1 382 4 
226 1 228 1 2 1 116 1 46 1 304 3 48 1 231 1 254 2 70 2 209 1 51 6 345 1 149 2 348 3 150 1 154 1 55 2 56 1 319 1 374 1 32 1 59 1 352 1 198 1 354 1 
164 1 271 3 139 2 1 1 228 2 2 11 116 1 67 1 334 1 304 8 231 2 70 1 254 2 209 4 51 14 149 1 10 3 348 6 155 1 318 1 154 1 55 4 195 1 319 2 374 2 243 1 59 2 100 1 198 11 221 1 294 2 354 2 328 1 
245 1 202 1 110 1 303 1 45 1 116 1 276 1 334 1 67 1 183 1 304 1 231 1 49 1 88 1 70 1 338 2 209 1 51 2 212 1 281 1 188 1 261 1 190 1 348 1 78 1 191 1 15 1 55 2 374 1 319 1 376 1 80 2 132 1 59 1 133 1 100 1 354 1 266 1 
139 2 226 1 228 3 2 7 45 2 334 1 276 2 183 1 48 1 231 3 7 2 49 2 338 3 51 20 345 1 149 4 281 1 188 3 348 10 191 1 154 3 15 1 55 6 56 1 195 4 57 2 96 2 59 3 100 1 352 1 198 7 103 2 294 2 354 3 245 1 202 2 24 1 110 2 113 1 303 3 116 3 67 1 304 10 70 2 254 8 209 7 212 2 366 1 365 1 261 2 318 2 30 2 319 3 374 3 32 1 376 2 80 3 132 3 133 1 
245 1 202 3 82 1 182 2 302 1 229 1 303 8 46 1 116 2 277 1 67 1 183 1 304 1 6 1 231 2 49 2 338 1 51 2 27 1 212 2 281 1 366 1 188 7 285 1 348 1 191 2 15 1 55 4 242 1 319 2 374 2 376 2 219 1 80 1 132 8 59 2 100 1 354 2 63 1 
139 1 228 1 2 1 116 1 334 1 183 1 304 1 231 1 254 1 338 1 209 1 51 3 149 1 281 1 348 2 239 1 318 1 154 1 15 1 55 2 319 1 374 1 80 1 59 1 198 1 294 1 354 1 20 1 21 1 
139 1 43 1 228 1 2 1 55 2 195 1 374 1 319 1 46 1 116 1 304 2 59 1 231 1 254 1 198 1 209 1 354 1 51 2 
149 1 348 2 318 1 154 1 2 1 55 2 374 1 319 1 46 1 116 1 59 1 231 1 254 1 198 1 209 1 354 1 343 1 51 2 
139 1 228 1 2 2 116 1 46 1 304 2 231 1 254 2 209 2 51 4 149 1 348 2 318 1 154 1 55 2 319 1 374 1 195 1 59 1 198 2 294 1 354 1 
139 1 285 1 43 1 228 1 2 1 55 2 195 1 374 1 319 1 116 1 304 2 59 1 231 1 254 1 198 1 209 1 354 1 51 2 
149 1 285 1 348 2 318 1 154 1 2 1 55 2 374 1 319 1 116 1 59 1 231 1 254 1 198 1 209 1 354 1 343 1 51 2 
139 1 228 1 2 2 116 1 304 2 231 1 254 2 209 2 51 4 149 1 285 1 348 2 318 1 154 1 55 2 319 1 374 1 195 1 59 1 198 2 294 1 354 1 
139 1 228 1 2 2 116 1 304 2 231 1 254 2 209 2 51 4 149 1 348 2 318 1 154 1 55 2 319 1 374 1 195 1 59 1 198 2 294 1 354 1 
202 1 110 1 303 1 45 1 116 1 67 1 276 1 304 1 231 1 49 1 70 1 338 1 51 2 212 1 188 1 261 1 348 1 191 1 55 2 374 1 319 1 57 1 376 1 80 1 132 1 59 1 100 1 354 1 
202 1 110 1 111 1 303 1 116 1 251 1 231 1 87 1 49 1 70 1 338 1 51 1 212 1 188 1 261 1 262 1 348 1 191 1 55 2 374 1 319 1 376 1 377 1 80 1 132 1 59 1 100 1 354 1 
139 1 228 1 2 2 116 1 334 1 304 2 231 1 254 2 209 2 51 4 149 1 348 2 318 1 154 1 55 2 319 1 374 1 195 1 59 1 198 2 294 1 354 1 
202 1 110 1 139 1 228 1 2 2 303 1 45 1 116 1 276 1 304 2 231 1 7 1 49 1 254 2 338 1 209 2 51 4 212 1 149 1 188 1 348 2 261 1 154 1 318 1 55 2 195 1 242 1 374 1 319 1 57 1 376 1 80 1 132 1 59 1 198 2 294 1 354 1 
139 1 228 1 2 1 116 1 334 1 183 1 304 2 231 1 254 1 338 1 209 1 51 3 281 1 348 1 154 1 318 1 239 1 15 1 55 2 195 1 319 1 374 1 58 1 80 1 59 1 198 1 294 1 354 1 21 1 
109 1 271 1 139 3 112 1 228 3 114 1 304 9 306 2 231 2 339 1 254 6 51 19 149 3 10 2 348 10 318 3 154 3 55 4 175 2 319 2 374 2 195 3 98 1 265 1 61 1 221 1 294 3 354 2 39 1 328 1 
163 1 109 1 23 1 271 2 139 3 112 2 228 3 304 14 306 4 231 3 254 4 339 1 73 1 51 26 76 1 149 2 10 2 235 1 348 12 370 1 154 2 318 2 55 6 175 1 195 2 319 3 374 3 79 2 265 2 61 1 221 2 294 3 354 3 39 1 
139 4 271 3 226 1 228 5 48 1 231 3 339 1 51 41 345 1 149 4 10 4 235 1 348 21 154 5 55 6 195 4 56 1 98 1 61 1 352 1 294 4 354 3 163 1 23 1 109 1 112 1 304 20 306 4 254 8 73 1 76 1 370 1 318 4 374 3 319 3 175 1 32 1 79 1 265 2 221 3 326 1 39 1 328 1 
163 1 109 1 23 1 271 3 139 4 226 1 112 1 228 5 304 20 48 1 306 4 231 4 339 1 254 7 73 1 51 38 345 1 76 1 149 4 235 1 10 4 348 18 370 1 318 3 154 4 55 8 175 1 56 1 319 4 374 4 195 3 32 1 79 2 98 1 265 2 352 1 61 1 221 3 294 4 326 1 354 4 39 1 328 1 
163 1 164 2 109 1 23 1 271 4 139 7 226 1 112 1 228 8 304 27 48 1 306 4 231 2 339 1 254 14 73 1 51 52 345 1 76 1 149 7 235 1 10 4 348 25 370 1 318 7 154 8 55 4 175 1 56 1 319 2 374 2 195 7 32 1 79 1 265 1 352 1 61 1 221 2 294 7 354 2 39 1 328 2 
136 1 108 1 138 1 325 1 127 1 83 1 185 1 341 1 272 1 372 1 
213 1 360 1 
136 1 0 1 134 1 176 1 325 1 127 1 83 1 341 1 272 1 
153 1 72 1 
287 1 192 1 90 1 
136 1 108 1 138 1 152 2 83 1 127 1 272 1 95 1 372 1 84 1 216 1 34 1 308 1 380 1 122 1 325 1 341 1 280 1 
136 1 108 1 138 1 152 2 83 1 127 1 272 1 95 1 372 1 84 1 216 1 34 1 308 1 380 1 122 1 325 1 341 1 280 1 
136 1 108 1 138 1 152 2 83 1 127 1 272 1 95 1 372 1 84 1 216 1 34 1 308 1 380 1 122 1 325 1 341 1 280 1 
153 1 72 1 90 1 
153 1 72 1 90 1 
287 1 192 1 
287 1 192 1 90 1 
28 1 141 1 
136 1 83 1 272 1 141 1 183 2 360 1 308 1 70 1 338 2 341 1 363 1 280 1 364 1 281 2 213 1 28 1 152 1 127 1 14 1 15 2 216 1 320 1 80 2 35 1 380 1 37 1 325 1 
202 1 82 1 182 2 303 2 116 1 334 1 67 1 304 1 361 1 336 1 231 1 49 1 338 2 51 2 212 1 281 2 346 1 188 2 348 1 94 1 55 2 374 1 319 1 376 1 219 1 80 2 132 2 59 1 100 1 201 1 354 1 
366 1 225 1 188 2 53 1 29 1 167 1 140 1 357 2 274 1 303 2 242 1 376 1 335 1 86 1 132 2 279 1 258 1 74 1 212 1 
366 1 225 1 188 1 53 1 29 1 140 1 357 2 303 1 376 1 335 1 68 1 86 1 132 1 279 1 258 1 74 1 212 1 
202 1 188 1 203 1 12 1 191 1 302 1 274 1 303 1 376 1 6 1 132 1 49 1 74 1 212 1 
366 1 225 1 188 1 53 1 29 1 167 1 140 1 357 2 274 1 303 1 376 1 335 1 86 1 132 1 279 1 258 1 74 1 212 1 
332 1 
367 1 144 1 150 1 122 1 208 1 178 1 135 1 
66 1 316 1 54 1 289 1 47 1 184 1 308 1 324 1 122 2 158 1 208 1 102 1 342 1 178 1 135 1 280 1 382 1 
139 2 41 6 42 2 228 2 144 1 184 4 49 3 233 1 8 2 342 4 280 5 91 1 284 1 188 3 238 2 54 4 191 1 154 2 350 6 194 2 242 1 96 2 158 4 200 1 102 6 294 2 296 2 202 10 110 3 66 3 303 3 248 1 249 2 119 2 206 2 26 2 308 5 122 8 208 2 71 1 212 4 367 1 214 2 368 3 128 2 318 2 376 3 322 2 132 3 324 12 178 8 135 9 327 1 382 5 
163 1 23 1 66 1 271 1 139 2 41 5 301 1 228 2 206 1 184 2 308 1 122 5 71 1 208 2 342 2 170 1 280 1 76 1 10 1 235 1 214 2 370 1 54 2 128 1 318 2 154 2 350 5 324 6 158 2 221 1 102 3 294 2 178 5 135 8 382 1 
297 1 228 2 183 1 48 1 184 1 308 1 69 1 87 1 338 1 253 1 124 1 342 1 280 1 345 1 281 1 214 2 54 1 77 1 128 1 154 1 15 1 56 1 80 1 158 1 293 1 178 2 135 2 21 1 
367 1 54 1 144 1 184 1 158 1 122 1 208 1 342 1 178 1 135 1 
139 2 214 2 41 5 128 1 318 2 154 2 228 2 350 5 96 1 324 10 122 5 294 2 102 5 178 5 135 5 
308 1 66 1 122 1 208 1 280 1 382 1 
202 1 66 2 44 1 302 1 303 4 248 2 5 1 206 2 6 1 184 2 308 3 49 1 71 2 256 1 342 1 280 3 212 1 284 1 188 4 260 1 54 2 191 2 376 1 132 4 16 1 158 2 178 2 135 2 382 4 
202 1 110 1 303 1 45 1 116 1 276 1 183 2 231 1 49 1 70 1 338 3 51 1 212 1 281 2 188 1 348 1 261 1 77 1 191 1 15 2 55 2 319 1 374 1 57 1 376 1 80 3 132 1 59 1 100 1 353 1 354 1 21 2 
54 1 41 2 350 2 32 1 206 1 184 1 324 4 158 1 122 4 102 2 208 2 71 1 178 2 342 1 135 1 
197 1 341 1 272 1 
197 1 341 1 272 1 
278 1 138 1 141 1 341 1 272 1 
197 1 341 1 272 1 
187 1 341 1 272 1 
187 1 341 1 272 1 
187 1 341 1 272 1 
341 1 272 1 
136 1 325 1 
149 2 348 4 226 1 154 1 228 1 55 4 195 1 374 2 319 2 56 1 32 1 79 1 304 4 48 1 231 2 352 1 254 3 354 2 51 8 345 1 
149 2 348 3 226 1 150 1 154 1 228 1 56 1 32 1 304 3 48 1 352 1 254 2 51 6 345 1 
149 1 139 1 348 2 52 1 154 1 318 1 228 1 55 2 374 1 319 1 195 1 304 2 231 1 254 2 294 1 354 1 51 4 
149 1 10 2 271 1 139 1 348 4 154 1 318 1 228 1 195 1 304 3 254 2 221 1 294 1 51 7 328 1 
164 1 139 2 271 2 226 1 228 3 304 11 85 1 48 2 231 2 254 9 51 23 345 1 149 5 10 2 348 12 155 1 318 2 154 3 55 4 56 2 195 4 374 2 319 2 32 1 79 2 352 1 294 2 354 2 328 1 
10 1 348 1 51 1 
304 1 271 1 51 1 
149 2 139 1 52 1 348 3 318 1 154 1 228 1 55 2 319 1 374 1 195 1 96 1 304 3 231 1 254 3 294 1 354 1 51 6 
163 1 23 1 271 1 139 2 228 2 304 6 231 1 254 2 51 12 149 1 76 1 10 1 235 1 348 6 370 1 318 2 154 2 55 2 195 1 319 1 374 1 61 1 221 1 294 2 354 1 
149 1 348 3 154 1 228 1 56 1 195 1 304 3 48 1 254 2 51 6 345 1 
149 1 348 2 226 1 55 2 195 1 56 1 374 1 319 1 79 1 304 1 85 1 48 1 231 1 352 1 254 2 354 1 51 3 
149 3 348 5 154 2 228 2 55 2 319 1 374 1 56 2 195 2 304 5 48 2 231 1 61 1 293 1 254 5 354 1 51 10 345 1 
139 1 228 1 55 2 374 1 319 1 195 1 304 2 231 1 61 1 254 1 354 1 51 2 
149 1 139 1 348 2 154 1 318 1 228 1 55 2 374 1 319 1 195 1 304 2 231 1 61 1 254 2 294 1 354 1 51 4 
149 1 348 2 55 6 374 3 319 3 56 1 195 1 79 1 85 1 98 1 304 1 48 1 231 3 61 1 254 2 354 3 51 3 
271 3 139 3 226 1 228 5 85 1 304 16 48 3 230 1 231 5 254 12 51 34 345 2 75 1 149 7 10 4 348 18 52 1 318 3 154 5 55 10 56 3 319 5 374 5 195 5 32 1 79 2 98 1 352 1 61 1 199 1 221 1 294 3 354 5 328 1 
149 2 235 1 10 1 271 1 226 1 348 4 154 1 228 1 55 2 56 1 374 1 319 1 32 1 304 4 48 1 231 1 352 1 61 1 254 2 221 1 354 1 51 8 345 1 
271 1 139 1 226 1 228 2 304 6 48 1 231 2 254 3 51 11 345 1 149 2 10 2 235 1 348 5 52 1 154 1 55 4 56 1 319 2 374 2 195 1 32 1 352 1 61 1 221 1 294 1 354 2 328 1 
163 1 23 1 271 1 139 2 226 1 228 3 304 9 48 1 231 3 254 4 51 19 345 1 149 3 76 1 10 1 235 1 52 1 348 10 370 1 318 2 154 3 55 6 56 1 195 1 319 3 374 3 32 1 79 1 352 1 61 1 221 1 294 2 354 3 
163 1 23 1 271 1 139 2 226 1 228 3 304 10 48 1 231 3 254 5 51 17 345 1 149 3 76 1 10 1 235 1 52 1 348 7 370 1 318 1 154 2 55 6 56 1 195 2 319 3 374 3 32 1 79 1 352 1 61 1 221 1 294 2 354 3 
149 2 235 1 10 1 271 1 226 1 348 4 154 1 228 1 55 2 56 1 374 1 319 1 32 1 304 4 48 1 231 1 352 1 61 1 254 2 221 1 354 1 51 8 345 1 
163 1 23 1 271 1 139 2 228 2 304 6 231 1 254 2 51 12 149 1 76 1 10 1 235 1 348 6 370 1 318 2 154 2 55 2 195 1 319 1 374 1 61 1 221 1 294 2 354 1 
163 1 23 1 271 1 139 2 226 1 228 3 304 10 48 1 231 4 254 5 51 18 345 1 76 1 149 3 10 1 235 1 348 8 52 1 370 1 318 1 154 2 55 8 56 1 195 2 319 4 374 4 32 1 79 2 352 1 61 1 221 1 294 2 354 4 
163 1 23 1 271 1 139 3 228 3 304 9 231 4 254 6 51 16 76 1 149 3 10 1 235 1 348 7 370 1 318 2 154 2 55 8 195 3 319 4 374 4 79 2 98 1 61 1 221 1 294 3 354 4 
149 3 348 4 226 1 154 1 228 1 56 3 195 3 304 3 48 3 352 2 254 6 51 7 345 1 
163 1 23 1 271 1 139 2 226 1 228 3 304 10 48 1 231 4 254 4 51 18 345 1 76 1 149 3 10 1 235 1 348 8 370 1 318 1 154 2 55 8 56 1 195 1 319 4 374 4 32 1 79 2 98 1 352 1 61 1 221 1 294 2 354 4 
281 1 333 1 80 1 362 1 70 1 338 1 257 1 
281 1 369 1 115 1 333 1 80 1 362 1 70 1 338 1 255 1 295 1 257 1 312 1 
376 1 6 1 202 1 188 1 132 1 49 1 150 1 191 1 302 1 303 1 212 1 
245 1 281 1 202 1 188 1 110 1 261 1 191 1 15 1 303 1 276 1 183 1 376 1 80 2 132 1 49 1 70 1 338 2 212 1 
245 1 202 3 110 2 303 1 276 1 248 1 183 1 119 1 49 2 87 1 310 1 8 1 70 1 338 2 212 1 281 2 188 1 11 1 261 1 15 2 376 1 80 2 132 1 
245 1 202 3 110 2 111 1 303 1 248 1 183 1 119 1 49 2 87 2 310 1 8 1 70 1 338 2 212 1 281 2 188 1 11 1 261 1 15 2 376 1 377 1 80 2 132 1 
202 4 110 1 42 1 205 1 303 3 248 1 119 1 305 1 308 2 49 1 8 1 122 1 208 1 280 2 212 1 188 3 368 1 263 1 191 1 194 1 376 1 132 3 382 1 
188 3 202 4 110 1 368 1 191 1 42 1 194 1 205 1 303 3 248 1 119 1 376 1 308 2 26 1 132 3 49 1 122 1 8 1 208 1 280 2 212 1 382 1 
277 1 376 1 188 1 132 1 303 1 212 1 
366 1 259 1 188 6 202 3 110 1 191 2 182 1 229 1 242 1 303 7 277 1 376 2 250 1 219 1 132 7 49 2 222 1 327 1 63 1 27 1 212 3 
245 1 202 1 110 1 226 1 228 1 2 1 303 1 116 2 45 1 334 1 276 1 183 1 304 3 48 1 336 1 231 2 49 1 7 1 70 2 254 2 338 2 209 1 51 6 345 1 212 1 149 2 281 1 188 1 348 3 261 1 154 1 15 1 55 4 56 1 374 2 319 2 242 1 32 1 57 1 376 1 80 2 59 2 132 1 352 1 198 1 103 1 354 2 
296 1 202 2 66 1 42 1 303 1 144 1 184 2 308 3 26 1 122 1 208 1 342 2 280 3 367 1 188 1 284 1 238 1 368 1 54 2 191 1 194 1 35 1 322 1 132 1 158 2 178 1 135 1 382 2 
188 2 202 2 110 1 194 1 242 1 303 2 277 1 376 1 132 2 49 1 200 1 327 1 212 2 
188 4 202 1 151 1 191 1 302 1 205 1 303 4 242 1 376 1 6 1 132 4 49 1 212 1 
269 1 259 1 188 2 202 1 24 1 110 1 303 2 248 1 117 1 376 1 250 1 132 2 49 1 212 2 
376 1 335 1 188 1 86 1 132 1 191 1 357 1 258 1 303 1 212 1 
376 1 366 1 202 1 219 1 361 1 188 2 132 2 49 1 303 2 242 1 212 1 
248 1 376 2 6 1 202 3 219 1 188 4 132 5 49 2 151 1 191 1 302 1 229 1 242 1 303 5 27 1 212 2 
248 1 376 2 6 1 202 3 219 1 188 4 132 5 49 2 237 1 151 1 191 1 302 1 242 1 303 5 27 1 212 2 
245 1 202 1 110 1 111 1 303 1 183 1 49 1 87 1 338 2 70 1 212 1 281 1 188 1 261 1 191 1 15 1 376 1 377 1 80 2 132 1 
259 1 188 1 202 1 110 1 303 1 248 1 376 1 250 1 132 1 49 1 222 1 327 1 212 2 
282 1 99 1 246 1 232 1 70 1 
282 1 11 1 246 2 181 1 42 1 142 1 3 1 35 1 99 2 308 2 87 1 232 2 310 1 122 1 70 1 208 1 280 2 161 1 211 1 
346 1 282 1 281 1 246 1 94 1 80 1 232 1 338 1 201 1 
3 1 282 1 181 1 
150 1 273 1 193 1 217 1 
273 1 300 1 193 1 18 1 373 1 204 1 217 1 
299 1 104 1 373 1 
270 1 273 1 300 1 193 1 373 3 204 3 217 1 275 1 292 1 60 1 146 2 18 1 
101 1 273 1 300 1 193 1 18 1 19 1 373 2 204 2 217 1 
275 1 335 1 225 1 207 1 273 1 300 1 357 1 18 1 373 1 204 1 196 1 
275 1 273 1 300 1 193 1 18 1 373 1 204 1 
275 1 300 1 193 2 18 1 373 1 204 1 217 1 
107 1 317 1 273 1 300 2 193 1 373 2 204 2 275 1 145 1 18 2 
347 1 300 1 273 2 193 1 373 3 204 3 217 1 375 1 196 1 275 1 101 2 18 1 244 1 
225 1 93 1 53 1 273 1 300 1 193 1 357 2 373 2 204 2 217 1 275 1 335 1 86 1 101 1 18 1 
300 2 273 2 193 1 373 4 204 4 217 1 196 1 275 1 307 1 101 2 18 2 19 1 244 1 
275 1 273 1 300 1 193 1 18 1 373 1 204 1 217 1 
300 1 273 3 193 2 373 4 204 4 217 2 196 1 292 1 146 1 60 1 101 2 160 1 18 1 244 1 
179 1 273 1 300 1 193 1 373 2 204 2 217 1 275 1 169 1 101 1 123 1 18 1 
273 1 300 1 193 1 373 3 204 3 217 1 275 1 120 1 292 2 60 1 146 2 18 1 
189 1 298 1 273 2 311 2 
275 1 300 1 215 1 18 1 373 1 204 1 
275 1 347 1 101 1 273 1 300 1 193 1 18 1 373 2 204 2 217 1 
9 1 
275 1 273 1 300 1 193 1 18 1 373 1 204 1 217 1 
347 1 300 1 273 1 193 1 373 3 204 3 217 1 275 1 101 1 146 1 18 1 
273 1 160 1 244 1 196 1 
273 1 193 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V ERROR java.lang.NullPointerException 346 134 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 346 134 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 346 134 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 346 134 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 346 134 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | CONSTANT | 2573 | 0 -> 1
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | RETURN | 2431 | return null
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
351 1 268 4 145 9 239 2 25 6 179 1 335 2 107 1 54 1 275 2 205 1 150 1 359 2 82 1 135 1 118 1 119 2 258 2 306 2 259 1 93 9 42 1 124 1 215 1 162 1 235 1 263 5 349 3 
351 1 268 4 145 9 239 2 25 6 179 1 335 2 107 1 54 1 275 2 205 1 150 1 359 2 82 1 135 1 118 1 119 2 258 2 306 2 259 1 93 9 42 1 124 1 215 1 162 1 235 1 263 5 349 3 
351 1 268 5 145 10 239 2 25 7 179 1 335 2 107 1 54 1 275 2 205 1 150 1 359 2 82 1 135 1 118 1 119 2 258 2 306 2 259 1 93 10 42 1 124 1 215 1 162 1 235 1 263 6 349 4 
351 1 268 3 145 7 239 2 25 4 335 2 107 1 54 1 275 2 205 1 150 1 359 2 82 1 135 1 118 1 119 2 258 2 306 1 259 1 93 7 42 1 124 1 215 1 162 1 235 1 263 4 349 2 
268 2 145 4 119 1 239 1 258 1 306 2 25 3 179 1 335 1 107 1 93 4 54 1 124 1 215 1 162 1 359 1 263 3 349 1 
145 2 119 1 118 1 239 1 365 1 75 1 335 1 107 1 93 2 124 1 275 1 215 1 359 1 263 1 135 1 172 1 
268 1 145 3 119 2 25 1 107 1 93 3 124 1 275 1 215 1 359 2 82 1 263 2 349 1 
268 4 145 9 239 1 25 7 335 1 179 1 107 1 54 1 243 1 275 1 82 1 359 2 114 1 119 2 258 1 306 2 259 1 93 9 124 1 215 1 162 1 235 1 263 5 349 3 
268 4 145 9 239 1 25 7 335 1 179 1 107 1 54 1 243 1 275 1 82 1 359 2 114 1 119 2 258 1 306 2 259 1 93 9 124 1 215 1 162 1 235 1 263 5 349 3 
218 1 102 1 110 1 
348 1 293 2 102 1 
187 1 269 2 14 2 285 2 100 2 94 1 78 2 116 2 
269 3 51 1 355 2 222 1 26 1 129 1 78 3 245 1 58 1 248 1 34 1 87 1 362 1 227 2 116 2 187 1 188 2 91 2 190 1 137 1 157 1 329 1 307 1 192 1 14 2 285 2 65 2 94 1 331 1 262 1 143 1 165 1 46 1 265 1 173 1 100 2 174 1 
187 1 269 1 167 1 14 1 285 1 69 1 100 1 181 1 78 1 116 1 
269 1 189 1 12 1 257 1 284 1 308 1 110 1 321 1 78 1 152 1 84 1 102 1 69 1 116 1 
189 2 269 1 12 2 257 1 14 1 285 1 308 1 110 1 78 1 152 1 84 1 102 1 100 1 69 1 116 1 
189 1 12 1 326 1 224 1 56 1 
238 1 189 2 12 2 326 1 102 1 311 1 110 1 56 1 
189 1 12 1 56 1 
187 1 189 1 269 1 12 1 270 1 14 1 285 1 181 1 78 1 167 1 326 1 69 1 100 1 116 1 
102 1 
238 1 189 2 12 2 97 1 326 1 102 1 110 1 56 1 
238 1 314 1 189 5 12 5 191 2 74 1 319 2 41 2 241 1 140 1 330 1 110 1 56 2 206 1 333 1 296 1 48 1 326 2 102 1 
218 1 94 1 
269 2 155 1 14 1 285 1 78 2 94 2 198 1 100 1 116 2 
50 1 217 1 7 1 
188 1 269 1 51 1 91 1 190 1 137 1 157 1 307 1 28 1 129 1 94 1 78 1 262 1 46 1 87 1 227 1 
269 3 14 1 285 3 274 1 100 3 94 1 78 3 116 3 
269 1 167 1 285 1 69 1 100 1 78 1 116 1 
269 1 155 1 14 1 285 1 198 1 69 1 100 1 78 1 116 1 
269 4 51 1 355 2 222 1 274 1 26 1 129 1 127 1 78 4 245 1 149 1 248 1 152 1 84 1 87 1 227 1 116 3 187 1 188 1 189 1 190 1 12 1 91 1 137 1 257 1 157 1 329 1 307 1 14 2 285 3 308 1 65 1 94 1 331 1 262 1 143 1 46 1 198 1 265 1 173 1 100 3 69 1 174 1 73 1 
269 2 39 1 284 1 285 1 100 1 274 1 94 1 78 2 116 2 
189 1 269 3 12 1 257 1 14 1 285 3 308 1 274 2 127 1 78 3 152 1 198 1 84 1 102 1 69 1 100 3 254 1 73 1 116 3 
269 2 50 1 14 1 285 2 274 1 78 2 217 1 198 1 100 2 116 2 
188 1 269 1 51 1 91 1 190 1 137 1 157 1 307 1 129 1 94 1 78 1 262 1 46 1 87 1 227 1 
188 1 269 1 51 1 91 1 190 1 157 1 307 1 129 1 94 1 78 1 262 1 57 1 44 1 87 1 227 1 
50 2 355 2 222 1 203 1 245 1 58 2 7 2 360 1 340 1 302 1 62 1 329 1 158 1 92 1 65 4 331 1 143 1 217 2 166 1 98 1 264 1 173 1 174 2 312 1 
269 1 152 1 15 1 285 1 69 1 100 1 78 1 116 1 
188 1 50 1 269 2 190 1 51 1 91 1 137 1 157 1 307 1 285 1 274 1 129 1 78 2 262 1 46 1 87 1 100 1 227 1 73 1 116 1 
269 5 39 1 284 1 14 1 285 4 274 2 78 5 94 1 225 1 96 1 198 1 100 4 116 5 73 1 
269 2 167 1 15 1 285 2 69 1 100 2 78 2 116 2 
343 1 55 1 
343 1 55 1 
170 1 231 1 
170 1 231 1 
170 1 231 1 
52 1 343 1 55 1 
52 1 343 1 55 1 
232 1 343 1 55 1 
323 1 170 1 361 1 231 1 343 2 55 2 
52 1 343 1 55 1 
16 1 343 1 55 1 
16 1 343 1 55 1 
16 1 343 1 55 1 
189 2 12 2 23 1 159 1 343 2 55 2 242 2 160 2 309 1 323 1 130 2 151 1 19 1 132 2 9 2 350 3 102 1 334 1 88 1 
269 2 242 1 55 1 78 2 130 1 59 1 132 1 9 1 116 2 189 1 12 1 228 1 285 2 343 1 194 1 94 1 369 1 232 1 216 1 19 1 371 1 350 1 100 2 72 1 
239 1 258 1 335 1 
239 1 335 1 75 1 
258 2 240 1 178 1 335 3 75 1 356 1 
6 1 258 1 240 1 335 2 75 1 356 1 
258 1 240 1 335 2 75 1 356 2 
238 1 292 1 74 2 319 1 273 1 293 3 241 3 110 1 80 1 56 1 8 2 326 4 342 1 117 1 189 5 228 1 12 5 191 1 229 2 41 1 158 1 92 1 140 1 369 1 216 1 163 1 348 1 98 1 67 1 20 2 102 2 312 1 
238 1 176 1 74 6 319 2 273 2 76 1 293 9 241 8 224 5 110 1 79 1 56 6 204 1 246 1 206 1 8 6 326 7 301 5 342 1 117 3 189 9 12 9 191 2 13 1 41 2 158 3 92 3 140 1 216 4 348 3 98 3 67 2 20 6 102 5 312 3 
292 1 74 2 319 1 273 1 241 3 293 4 110 1 80 1 206 1 8 2 326 2 189 3 117 1 12 3 191 1 229 1 41 1 158 1 92 1 216 1 348 2 67 1 98 1 20 2 102 3 312 1 
292 1 74 4 319 1 273 1 76 1 293 7 241 5 110 1 80 1 246 1 206 1 8 4 326 3 189 4 117 2 12 4 191 1 229 2 13 1 41 1 158 2 92 2 216 2 348 3 67 1 98 2 20 4 102 4 312 2 
218 1 307 1 339 1 
307 1 320 1 
352 1 
307 1 87 1 
262 1 131 1 307 3 338 1 339 2 87 1 
262 1 307 1 87 1 
186 1 307 1 
318 1 147 1 272 2 106 1 158 1 65 7 5 1 111 1 58 4 142 1 166 3 360 2 61 1 208 1 174 3 312 1 267 1 
318 1 147 1 272 2 106 1 158 1 65 7 5 1 111 1 58 4 142 1 166 3 360 2 61 1 208 1 174 3 312 1 267 1 
281 1 318 1 147 1 272 2 106 1 158 1 65 7 5 1 111 1 58 4 142 1 166 3 360 2 61 1 208 1 174 3 312 1 267 1 
1 1 147 1 318 2 272 3 106 2 355 2 222 1 5 1 244 4 111 2 58 16 360 5 61 1 208 2 209 1 210 1 117 3 120 1 329 1 158 4 92 3 65 31 212 1 193 1 261 3 331 1 142 1 98 3 166 10 237 1 173 1 174 15 312 4 267 5 
318 1 272 2 106 1 355 4 222 2 5 1 29 1 111 1 58 5 278 1 360 3 61 1 208 1 329 2 158 1 65 9 212 1 331 2 142 1 166 4 173 2 174 4 312 1 267 1 
145 2 239 1 178 1 25 1 202 1 75 1 335 2 107 1 109 1 182 1 275 1 359 1 249 1 227 1 188 1 91 1 119 1 190 1 258 1 157 1 93 2 124 1 141 1 215 1 168 1 263 1 47 1 372 1 374 1 266 1 
145 3 239 1 178 1 25 2 202 1 75 1 335 2 107 1 109 1 4 1 128 1 275 1 359 1 249 1 227 1 364 1 188 1 91 1 119 1 190 1 258 1 157 1 93 3 141 1 215 1 263 1 47 1 372 1 374 1 266 1 
188 1 145 2 190 1 91 1 239 1 258 1 178 1 157 1 202 1 25 2 335 2 75 1 107 1 93 2 109 1 128 1 4 1 141 1 275 1 215 1 263 1 372 1 227 1 374 1 266 1 
188 1 145 1 0 1 190 1 119 1 51 1 91 1 317 1 157 1 307 1 221 1 93 1 3 1 109 2 275 2 295 1 196 1 359 1 87 1 227 1 374 2 364 1 266 2 
188 1 145 1 190 1 119 1 91 1 239 1 258 1 178 1 157 1 202 1 335 2 75 1 93 1 109 1 4 1 141 1 275 1 124 1 359 1 249 1 168 1 372 1 47 1 227 1 374 1 266 1 
24 1 
238 3 51 2 146 1 293 2 241 2 108 1 53 2 294 2 110 1 56 6 337 2 152 1 153 1 116 1 12 5 257 1 157 1 307 1 308 1 213 1 66 1 164 1 348 2 67 1 70 1 69 1 175 2 269 1 317 1 74 2 219 1 319 1 354 1 321 1 78 1 81 2 33 4 279 1 84 1 87 1 227 2 188 2 189 5 91 2 190 1 191 1 41 1 284 1 230 1 140 1 288 1 196 1 370 2 102 2 290 2 
238 1 189 3 269 1 12 3 219 1 257 1 284 1 354 1 308 1 108 1 321 1 78 1 56 2 288 1 97 1 33 2 152 1 84 1 69 1 153 1 175 1 116 1 
238 1 189 3 269 1 12 3 219 1 257 1 284 1 354 1 308 1 108 1 110 1 321 1 78 1 56 1 288 1 97 1 33 3 337 1 152 1 84 1 102 1 69 1 153 1 116 1 
238 1 269 1 219 1 354 1 108 1 110 1 78 1 321 1 56 2 33 3 152 1 337 1 84 1 153 1 116 1 189 3 12 3 257 1 284 1 308 1 288 1 97 1 370 1 69 1 102 1 175 1 
238 3 146 1 108 1 241 1 294 2 53 2 110 5 56 7 152 1 337 4 153 1 303 1 116 1 12 5 257 1 308 1 164 1 348 2 69 1 175 4 313 1 269 1 219 1 74 1 319 1 354 1 357 1 78 1 321 1 81 2 33 6 84 1 189 5 191 1 367 1 284 1 41 1 140 1 288 1 370 4 97 1 236 1 102 5 290 2 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 293 2 241 1 108 1 53 2 294 2 110 1 321 1 78 1 56 4 81 2 33 4 337 2 152 1 84 1 153 1 116 1 189 4 12 4 191 1 257 1 41 1 284 1 308 1 140 1 288 1 66 1 370 2 164 1 348 2 102 2 69 1 290 2 175 2 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 241 1 108 1 53 2 294 2 110 1 78 1 321 1 56 4 81 2 33 4 337 2 152 1 84 1 153 1 303 1 116 1 189 4 12 4 191 1 257 1 367 1 284 1 41 1 308 1 140 1 288 1 370 2 164 1 348 2 102 1 69 1 290 2 175 2 313 1 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 241 1 108 1 53 2 294 2 110 1 78 1 321 1 56 4 81 2 33 4 337 2 152 1 84 1 153 1 303 1 116 1 189 4 12 4 191 1 257 1 367 1 284 1 41 1 308 1 140 1 288 1 370 2 164 1 348 2 102 1 69 1 290 2 175 2 313 1 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 293 2 241 1 108 1 294 2 110 1 30 1 78 1 321 1 56 4 81 2 33 4 337 2 152 1 133 2 84 1 153 1 116 1 136 2 189 4 12 4 191 1 257 1 284 1 41 1 308 1 140 1 95 1 214 1 288 1 370 2 102 1 69 1 175 2 313 1 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 241 1 108 1 53 2 294 2 357 1 110 1 78 1 321 1 56 5 81 2 33 5 152 1 337 3 84 1 153 1 303 1 116 1 189 4 12 4 191 1 257 1 367 1 41 1 284 1 308 1 140 1 288 1 164 1 370 3 348 2 102 1 69 1 290 2 175 3 313 1 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 241 1 108 1 53 2 294 2 357 1 110 1 78 1 321 1 56 5 81 2 33 5 152 1 337 3 84 1 153 1 303 1 116 1 189 4 12 4 191 1 257 1 367 1 41 1 284 1 308 1 140 1 288 1 164 1 370 3 348 2 102 1 69 1 290 2 175 3 313 1 
238 2 269 1 146 1 74 1 219 1 319 1 354 1 293 2 241 1 108 1 294 2 110 1 321 1 78 1 30 1 56 4 81 2 33 4 337 2 152 1 133 2 84 1 153 1 116 1 136 2 189 4 12 4 191 1 257 1 41 1 284 1 308 1 140 1 288 1 66 1 370 2 102 1 69 1 175 2 
50 1 218 1 272 1 106 1 355 2 222 1 5 1 111 1 245 1 58 3 7 1 360 2 61 1 62 1 329 1 158 1 65 6 94 2 331 1 142 1 143 1 217 1 166 2 173 1 174 3 312 1 
50 11 355 4 222 2 244 3 245 2 58 8 7 11 360 1 34 1 117 2 120 1 154 1 329 2 158 2 92 1 65 14 193 1 260 1 344 1 261 3 94 1 331 2 143 1 166 2 98 2 217 4 68 1 125 1 265 1 173 2 174 6 312 1 267 1 
269 2 51 1 355 2 222 1 274 1 129 1 28 1 78 2 245 1 58 1 34 1 87 1 227 1 116 1 188 1 38 1 190 1 91 1 137 1 366 1 157 1 307 1 329 1 139 1 285 1 65 2 344 1 94 1 262 1 331 1 143 1 46 1 217 1 100 1 173 1 265 1 174 1 73 1 
50 7 51 1 106 1 4 1 5 1 111 1 245 3 58 10 248 2 113 1 7 7 61 1 116 1 117 2 157 2 307 2 158 3 121 1 65 20 344 1 262 2 217 7 166 8 265 1 173 3 174 10 312 3 71 2 73 1 267 4 269 3 272 1 355 6 222 3 274 1 358 1 129 2 78 3 32 2 360 4 34 1 226 2 87 2 227 3 188 3 91 3 328 2 190 2 137 2 329 3 285 1 92 2 94 2 331 3 142 1 143 3 46 2 98 2 100 1 
126 1 269 1 51 2 316 1 22 1 317 1 2 1 355 4 222 2 274 1 4 1 182 1 27 1 78 1 245 2 58 1 34 1 87 2 227 7 35 1 116 1 62 1 188 8 190 2 91 8 157 2 307 3 329 2 192 2 285 1 65 2 331 2 196 1 143 2 99 1 100 1 173 2 265 1 174 1 
50 1 269 1 355 2 222 1 78 1 245 1 58 1 7 1 360 1 116 1 117 1 14 1 329 1 285 1 158 1 92 1 65 3 344 1 331 1 143 1 166 1 217 1 98 1 198 1 173 1 171 1 100 1 174 2 312 1 
62 1 50 1 329 1 355 2 158 1 222 1 65 2 245 1 331 1 58 2 143 1 166 1 217 1 7 1 98 1 173 1 302 1 267 1 
62 1 50 1 329 1 355 2 222 1 92 1 65 2 203 1 245 1 331 1 143 1 166 1 217 1 7 1 360 1 173 1 174 2 312 1 
50 2 355 2 222 1 245 1 58 2 7 2 360 1 62 1 117 1 329 1 158 1 92 1 65 4 331 1 143 1 98 1 217 2 166 2 173 1 174 2 312 1 267 1 
50 1 316 1 329 1 355 2 158 1 222 1 65 2 245 1 331 1 58 2 143 1 166 1 217 1 7 1 98 1 173 1 302 1 267 1 
50 1 316 1 329 1 355 2 222 1 92 1 65 2 203 1 245 1 331 1 143 1 166 1 217 1 7 1 360 1 173 1 174 2 312 1 
50 2 316 1 355 2 222 1 245 1 58 2 7 2 360 1 117 1 329 1 158 1 92 1 65 4 331 1 143 1 98 1 217 2 166 2 173 1 174 2 312 1 267 1 
50 2 355 2 222 1 245 1 58 2 7 2 360 1 117 1 329 1 158 1 92 1 65 4 331 1 143 1 98 1 217 2 166 2 173 1 174 2 312 1 267 1 
269 1 51 1 355 2 222 1 129 1 78 1 245 1 58 1 248 1 34 1 87 1 227 1 188 1 190 1 91 1 137 1 157 1 307 1 329 1 65 2 94 1 262 1 331 1 143 1 46 1 173 1 265 1 174 1 
269 1 51 1 355 2 222 1 129 1 78 1 245 1 57 1 58 1 34 1 87 1 227 1 188 1 190 1 91 1 157 1 307 1 329 1 65 2 17 1 94 1 262 1 331 1 44 1 143 1 173 1 265 1 174 1 
50 2 355 2 222 1 245 1 58 2 7 2 360 1 117 1 329 1 158 1 92 1 65 4 344 1 331 1 143 1 98 1 217 2 166 2 173 1 174 2 312 1 267 1 
50 2 269 1 355 2 222 1 129 1 182 1 78 1 245 1 58 2 248 1 7 2 360 1 87 1 227 1 188 1 117 1 190 1 328 1 91 1 137 1 157 1 307 1 329 1 158 1 92 1 65 4 262 1 331 1 143 1 166 2 217 2 98 1 46 1 173 1 174 2 312 1 267 1 
269 1 50 1 355 2 222 1 78 1 245 1 58 2 7 1 298 1 116 1 117 1 14 1 329 1 285 1 158 1 92 1 65 3 344 1 331 1 143 1 166 1 98 1 217 1 198 1 173 1 100 1 174 1 312 1 267 1 
331 1 346 1 329 1 355 2 85 1 134 1 222 1 173 1 29 1 90 1 
331 1 346 1 329 1 355 2 85 1 134 1 222 1 173 1 29 1 90 1 
331 1 346 1 329 1 355 2 85 1 134 1 222 1 173 1 29 1 90 1 
331 1 346 1 329 1 355 2 85 1 134 1 222 1 173 1 29 1 90 1 
331 1 346 1 329 1 355 2 85 1 134 1 222 1 173 1 29 1 90 1 
315 1 323 1 130 1 23 1 132 1 9 1 343 1 88 1 242 1 55 1 
232 1 194 1 
353 1 130 1 201 1 132 1 105 1 9 1 343 1 242 1 55 1 
189 1 12 1 23 1 343 1 55 1 242 1 160 1 309 1 323 1 130 1 151 1 19 1 132 1 9 1 350 2 102 1 334 1 88 1 
189 1 12 1 23 1 343 1 55 1 242 1 160 1 309 1 323 1 130 1 151 1 19 1 132 1 9 1 350 2 102 1 334 1 88 1 
189 1 12 1 23 1 343 1 55 1 242 1 160 1 309 1 323 1 130 1 151 1 19 1 132 1 9 1 350 2 102 1 334 1 88 1 
361 1 52 1 148 1 
361 1 52 1 148 1 
16 1 286 1 
361 1 16 1 286 1 
59 1 72 1 
269 2 242 1 55 1 78 2 130 1 59 1 132 1 326 1 9 1 116 2 189 1 12 1 228 1 285 2 368 1 343 1 160 1 194 1 94 1 369 1 232 1 216 1 371 1 350 1 334 1 100 2 72 1 
52 1 148 1 
361 1 16 1 286 1 
269 2 104 1 355 2 222 1 27 1 78 2 245 1 276 1 58 1 299 1 34 1 251 1 87 1 115 1 227 2 116 2 188 2 190 1 91 2 157 1 307 1 329 1 192 2 65 2 344 1 331 1 143 1 99 1 173 1 265 1 174 1 
188 2 255 1 190 1 91 2 239 1 282 1 258 1 178 1 157 1 202 1 335 2 75 1 4 1 182 1 322 1 141 1 47 1 227 2 374 1 
188 1 255 1 91 1 190 1 239 1 258 1 178 1 202 1 157 1 335 2 75 1 4 1 141 1 47 1 227 1 374 1 375 1 
188 1 200 1 190 1 51 1 91 1 282 1 317 1 157 1 307 1 221 1 196 1 87 1 227 1 374 1 
188 1 255 1 91 1 190 1 239 1 282 1 258 1 178 1 157 1 202 1 335 2 75 1 4 1 322 1 141 1 47 1 227 1 374 1 
89 1 
218 1 74 1 241 1 48 1 102 1 330 1 110 1 
238 1 74 1 319 1 241 1 293 1 53 1 110 1 56 1 189 1 12 1 191 1 41 1 140 1 164 1 348 1 102 2 290 1 
238 3 51 1 241 9 293 12 110 2 56 5 60 2 338 1 297 2 339 2 8 6 300 2 304 2 117 2 12 5 63 2 257 2 157 4 307 10 158 2 122 1 262 3 123 1 67 2 348 6 20 6 312 2 74 8 319 4 180 2 320 3 182 1 183 1 185 2 186 2 32 2 87 3 227 3 188 3 37 1 189 5 190 3 91 3 191 4 283 1 41 4 230 1 140 4 92 2 330 1 98 2 48 1 101 2 102 8 
238 1 74 5 319 2 293 6 241 8 110 2 244 1 56 1 184 1 8 5 304 1 36 1 189 1 256 1 117 2 12 1 191 2 63 2 138 1 41 2 230 1 158 2 140 2 92 2 193 1 261 1 195 1 18 1 67 1 348 3 98 2 20 5 102 5 199 1 312 2 
269 1 74 2 270 1 319 1 106 1 241 2 181 1 78 1 111 1 112 1 304 1 116 1 187 1 189 1 12 1 191 1 63 2 367 1 41 1 14 1 158 2 285 1 140 1 142 1 167 1 69 1 100 1 312 1 
191 1 74 1 319 1 41 1 241 1 140 1 330 1 110 1 48 1 102 1 
117 2 63 2 74 5 158 2 293 10 241 5 92 2 32 1 98 2 348 5 20 5 8 5 102 5 304 1 312 2 
238 1 189 1 12 1 102 1 110 1 56 1 
238 2 51 2 317 1 74 2 319 2 241 2 183 2 56 4 206 1 87 1 227 4 341 1 188 4 189 3 190 1 91 4 12 3 211 1 191 2 157 1 283 1 307 1 41 2 230 2 140 1 213 1 196 1 67 2 70 1 
269 3 51 1 355 2 222 1 26 1 129 1 78 3 245 1 248 1 87 1 227 1 116 2 188 1 187 1 91 1 190 1 137 1 157 1 329 1 14 2 307 1 285 2 65 1 94 1 331 1 262 1 143 1 46 1 265 1 173 1 100 2 174 1 
191 1 74 2 272 1 319 1 41 1 293 4 241 1 230 1 140 1 110 2 348 2 67 1 20 2 8 2 102 4 
130 1 250 1 242 1 
130 1 250 1 242 1 
59 1 130 1 23 1 156 1 242 1 
130 1 250 1 242 1 
130 1 242 1 31 1 
130 1 242 1 31 1 
130 1 242 1 31 1 
130 1 242 1 
343 1 55 1 
272 1 329 2 106 1 158 1 355 4 222 2 65 8 212 1 5 1 111 1 331 2 58 4 142 1 166 3 360 2 61 1 173 2 174 4 312 1 267 1 
218 1 272 1 106 1 158 1 65 6 5 1 111 1 58 3 142 1 166 2 360 2 61 1 174 3 312 1 
117 1 329 1 355 2 158 1 92 1 222 1 65 4 331 1 58 2 166 2 98 1 360 1 83 1 173 1 174 2 312 1 267 1 
117 1 120 1 158 1 92 1 65 7 193 1 261 1 244 2 58 3 98 1 166 2 360 1 174 4 312 1 267 1 
272 1 106 2 355 4 222 2 5 1 244 2 111 2 58 11 360 5 61 1 117 2 120 1 154 1 329 2 158 3 92 2 65 23 212 2 260 1 261 2 331 2 142 1 166 9 98 2 310 1 173 2 174 12 312 3 267 4 
65 1 174 1 244 1 
58 1 65 1 261 1 
117 1 329 1 355 2 158 1 222 1 92 1 65 6 331 1 58 3 32 1 98 1 166 3 360 2 83 1 173 1 174 3 312 1 267 1 
355 2 222 1 244 1 29 1 58 6 184 1 360 1 36 1 117 2 138 1 329 1 158 2 92 2 65 12 193 1 261 1 195 1 331 1 98 2 166 2 173 1 174 6 199 1 312 2 267 1 
106 1 158 1 65 6 111 1 58 3 142 1 166 2 360 1 174 3 312 1 267 1 
329 1 106 1 355 2 222 1 65 3 212 1 5 1 111 1 331 1 58 1 166 2 360 1 310 1 61 1 173 1 174 2 267 1 
329 1 106 2 355 2 158 2 222 1 65 10 29 1 111 2 331 1 58 5 142 1 112 1 166 5 360 3 173 1 174 5 312 2 267 2 
329 1 355 2 158 1 222 1 65 2 29 1 331 1 58 2 98 1 166 1 173 1 267 1 
117 1 329 1 355 2 158 1 92 1 222 1 65 4 29 1 331 1 58 2 166 2 98 1 360 1 173 1 174 2 312 1 267 1 
329 3 106 1 355 6 222 3 212 1 65 3 287 1 29 1 111 1 331 3 58 1 166 2 310 1 360 1 173 3 174 2 267 1 
1 1 272 1 106 3 355 10 222 5 5 1 244 4 29 1 111 3 58 16 360 7 83 1 61 1 209 1 210 1 117 3 120 1 329 5 158 5 92 3 212 2 65 34 193 1 287 1 261 3 331 5 142 2 98 3 166 12 310 1 173 5 174 18 312 5 267 5 
272 1 106 1 355 2 222 1 5 1 244 1 29 1 111 1 58 4 360 2 61 1 329 1 158 1 65 8 193 1 261 1 195 1 331 1 142 1 166 2 173 1 174 4 312 1 
272 1 106 1 355 4 222 2 5 1 244 2 29 1 111 1 58 6 360 2 83 1 61 1 117 1 120 1 329 2 158 2 65 11 193 1 261 1 195 1 331 2 142 1 98 1 166 3 173 2 174 5 312 1 267 1 
272 1 106 1 355 6 222 3 5 1 244 1 29 1 111 1 58 9 184 1 360 3 83 1 61 1 36 1 117 2 138 1 329 3 158 3 92 2 65 19 212 1 193 1 261 1 195 1 331 3 142 1 98 2 166 4 173 3 174 10 199 1 312 3 267 1 
272 1 106 1 355 6 222 3 5 1 244 1 29 1 111 1 58 10 184 1 360 3 83 1 61 1 36 1 117 2 138 1 329 3 158 3 92 1 212 1 65 17 193 1 261 1 195 1 331 3 142 1 98 2 166 5 173 3 174 7 199 1 312 2 267 2 
272 1 106 1 355 2 222 1 5 1 244 1 29 1 111 1 58 4 360 2 61 1 329 1 158 1 65 8 193 1 261 1 195 1 331 1 142 1 166 2 173 1 174 4 312 1 
355 2 222 1 244 1 29 1 58 6 184 1 360 1 36 1 117 2 138 1 329 1 158 2 92 2 65 12 193 1 261 1 195 1 331 1 98 2 166 2 173 1 174 6 199 1 312 2 267 1 
272 1 106 1 355 8 222 4 5 1 244 1 29 1 111 1 58 10 184 1 360 3 83 1 61 1 36 1 117 2 138 1 329 4 158 3 92 1 65 18 212 2 193 1 261 1 195 1 331 4 142 1 98 2 166 5 173 4 199 1 174 8 312 2 267 2 
355 8 222 4 244 1 29 1 58 9 184 1 360 3 36 1 117 3 138 1 329 4 158 3 92 2 65 16 212 2 193 1 287 1 261 1 195 1 331 4 98 3 166 6 173 4 199 1 174 7 312 2 267 3 
106 3 158 1 65 7 5 2 111 3 58 3 142 1 166 6 360 3 61 1 174 4 312 1 267 3 
272 1 106 1 355 8 222 4 5 1 244 1 29 1 111 1 58 10 184 1 360 3 61 1 36 1 117 2 138 1 329 4 158 3 92 1 65 18 212 2 193 1 287 1 261 1 195 1 331 4 142 1 98 2 166 4 173 4 199 1 174 8 312 2 267 1 
269 1 39 1 284 1 373 1 94 1 78 1 116 1 
21 1 49 1 269 1 39 1 284 1 94 1 78 1 45 1 207 1 86 1 373 1 116 1 
188 1 190 1 91 1 51 1 196 1 317 1 218 1 157 1 307 1 87 1 227 1 
188 1 269 2 51 1 91 1 190 1 157 1 307 1 285 1 274 1 129 1 94 1 78 2 262 1 46 1 87 1 100 1 227 1 116 1 
269 2 274 1 129 1 183 1 78 2 186 1 152 1 300 1 87 2 227 1 116 2 188 1 190 1 91 1 157 1 307 3 285 1 308 1 94 1 262 2 46 1 100 2 69 1 
269 2 274 1 129 1 183 1 78 2 57 1 186 1 152 1 300 1 252 1 87 2 227 2 116 2 188 2 190 1 91 2 157 1 307 3 285 1 308 1 94 1 262 2 100 2 69 1 
51 1 320 1 110 1 183 1 56 1 186 1 339 1 300 1 252 1 87 1 227 3 188 3 189 2 190 1 91 3 12 2 257 1 157 1 307 4 262 1 345 1 144 1 102 1 
188 3 189 2 51 1 12 2 91 3 190 1 257 1 157 1 307 4 320 1 110 1 183 1 56 1 262 1 186 1 185 1 339 1 300 1 252 1 102 1 87 1 227 3 
188 1 126 1 190 1 91 1 157 1 227 1 
188 7 126 1 51 2 91 7 190 2 22 1 157 3 192 1 307 3 2 1 4 1 182 1 262 1 277 1 338 1 99 1 289 1 87 2 227 6 35 1 11 1 
50 1 106 1 5 1 111 1 245 2 58 3 248 1 7 1 299 1 61 1 116 1 157 1 307 1 158 1 65 6 344 1 262 1 217 1 166 2 173 2 174 3 312 1 269 2 272 1 355 4 222 2 274 1 182 1 129 1 78 2 360 2 226 1 87 1 227 1 188 1 328 1 91 1 190 1 137 1 329 2 285 1 94 2 331 2 142 1 143 2 46 1 100 1 
238 1 51 1 74 1 319 2 241 1 180 1 320 1 110 1 56 2 185 1 60 1 339 1 326 1 227 1 188 1 189 3 12 3 91 1 191 2 257 1 283 1 41 2 307 2 140 2 330 1 48 1 102 1 101 1 
188 2 126 1 91 2 190 1 157 2 307 2 182 1 123 1 262 1 338 1 339 1 87 1 227 2 
188 4 51 1 91 4 190 1 317 1 157 1 307 1 182 1 196 1 347 1 252 1 87 1 227 4 
188 2 305 1 91 2 190 1 157 2 307 1 121 1 183 1 262 1 324 1 277 1 289 1 87 1 227 2 
141 1 188 1 190 1 91 1 51 1 239 1 157 1 335 1 75 1 227 1 
188 2 190 1 276 1 91 2 157 1 307 1 99 1 87 1 227 2 4 1 182 1 
188 5 51 1 91 5 190 2 317 1 157 2 307 3 2 1 182 1 183 1 196 1 347 1 99 1 87 2 227 4 35 1 
188 5 51 1 91 5 190 2 317 1 157 2 307 3 182 1 183 1 43 1 196 1 347 1 99 1 87 2 227 4 35 1 
188 1 269 2 51 1 91 1 190 1 157 1 307 1 285 1 274 1 129 1 94 1 78 2 262 1 57 1 87 1 100 1 227 1 116 1 
188 1 91 1 190 1 157 2 307 1 183 1 262 1 277 1 338 1 289 1 87 1 227 1 11 1 
169 1 10 1 223 1 94 1 291 1 
189 2 12 2 257 1 308 1 223 1 110 1 127 1 94 1 336 1 234 1 152 1 169 2 84 1 326 1 102 1 69 1 10 2 253 1 291 2 
269 1 104 1 251 1 223 1 10 1 115 1 78 1 116 1 291 1 
336 1 223 1 253 1 
215 1 218 1 263 1 107 1 
145 1 215 1 119 1 359 1 263 1 107 1 93 1 
275 1 93 1 109 1 
145 3 119 1 103 1 64 1 107 1 93 3 124 1 332 1 215 1 359 1 263 1 135 2 
145 2 215 1 119 1 359 1 306 1 25 1 263 1 107 1 93 2 
268 1 145 1 119 1 239 1 258 1 335 1 93 1 54 1 124 1 359 1 263 1 
124 1 145 1 119 1 359 1 263 1 107 1 93 1 
124 1 145 1 215 1 119 1 359 1 107 2 93 1 
145 2 119 2 107 1 93 2 124 1 359 2 325 1 263 1 280 1 363 1 
268 1 145 3 119 1 25 2 107 1 259 1 93 3 124 1 215 1 359 1 235 1 263 2 349 1 
145 2 119 1 239 1 258 1 178 1 271 1 25 1 75 1 335 2 107 1 93 2 124 1 215 1 359 1 263 1 
268 1 145 4 119 2 306 1 25 2 179 1 107 1 93 4 124 1 215 1 359 2 263 2 349 1 
124 1 145 1 215 1 119 1 359 1 263 1 107 1 93 1 
268 1 145 4 119 1 103 1 25 2 64 1 107 2 77 1 93 4 215 2 359 1 263 3 349 1 135 1 
145 2 119 1 177 1 25 1 107 1 93 2 243 1 124 1 215 1 359 1 197 1 263 1 
145 3 119 1 103 1 64 2 107 1 93 3 124 1 215 1 359 1 263 1 135 2 327 1 
247 1 233 1 40 2 263 2 
124 1 145 1 119 1 359 1 220 1 93 1 
124 1 145 2 215 1 119 1 359 1 235 1 25 1 263 1 107 1 93 2 
161 1 
124 1 145 1 215 1 119 1 359 1 263 1 107 1 93 1 
124 1 145 3 215 1 119 1 359 1 235 1 25 1 263 1 107 1 93 3 135 1 
268 1 263 1 77 1 349 1 
263 1 107 1 

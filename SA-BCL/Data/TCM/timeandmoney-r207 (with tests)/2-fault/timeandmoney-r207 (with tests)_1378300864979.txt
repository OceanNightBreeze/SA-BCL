#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 54 188 195 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 54 188 195 332 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 54 188 195 332 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List; | STATEMENT | 2215 | stmt -> ;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
123 1 296 2 363 1 78 2 125 2 38 1 101 1 186 5 143 1 339 1 85 9 158 1 234 6 13 2 260 1 344 3 218 1 114 1 66 1 314 1 151 1 353 2 201 2 178 4 76 9 136 2 359 1 122 1 
123 1 363 1 296 2 78 2 125 2 38 1 101 1 186 5 143 1 339 1 85 9 158 1 234 6 13 2 260 1 344 3 218 1 114 1 66 1 314 1 151 1 353 2 201 2 178 4 76 9 136 2 359 1 122 1 
123 1 363 1 296 2 78 2 125 2 38 1 101 1 186 6 143 1 339 1 85 10 158 1 234 7 13 2 260 1 344 4 218 1 114 1 66 1 314 1 151 1 353 2 201 2 178 5 76 10 136 2 359 1 122 1 
123 1 363 1 296 1 78 2 125 2 38 1 101 1 186 4 143 1 339 1 85 7 158 1 234 4 13 2 260 1 344 2 218 1 114 1 66 1 314 1 353 2 201 2 178 3 76 7 136 2 359 1 122 1 
344 1 123 1 363 1 296 2 78 1 125 1 101 1 186 3 151 1 353 1 143 1 201 1 85 4 178 2 76 4 234 3 13 1 359 1 
218 1 363 1 78 1 125 1 100 1 38 1 101 1 186 1 5 1 143 1 85 2 201 1 76 2 136 1 13 1 366 1 
344 1 114 1 363 1 78 2 101 1 186 2 143 1 85 3 178 1 76 3 136 1 234 1 13 2 
344 3 114 1 123 1 296 2 363 1 78 2 125 1 19 1 118 1 101 1 186 5 151 1 353 1 143 1 201 1 85 9 178 4 76 9 158 1 234 7 136 1 13 2 260 1 359 1 
344 3 114 1 123 1 296 2 363 1 78 2 125 1 19 1 118 1 101 1 186 5 151 1 353 1 143 1 201 1 85 9 178 4 76 9 158 1 234 7 136 1 13 2 260 1 359 1 
362 1 73 1 367 1 
362 1 77 1 356 2 
279 2 6 2 375 2 9 2 300 1 285 2 226 2 227 1 
182 1 272 1 364 1 82 1 300 1 102 1 84 1 6 2 41 2 60 1 9 2 190 1 15 1 239 1 279 2 129 1 245 1 169 1 311 2 312 2 285 3 316 1 318 1 221 1 373 1 177 1 375 3 291 1 322 1 153 1 376 1 357 2 225 1 205 1 206 2 226 2 227 1 
279 1 6 1 375 1 8 1 9 1 300 1 26 1 285 1 226 1 212 1 
17 1 346 1 362 1 168 1 372 1 285 1 232 1 215 1 6 1 73 1 216 1 375 1 26 1 14 1 
279 1 346 1 362 1 168 1 372 1 285 1 215 1 6 1 73 1 216 2 375 1 9 1 26 1 14 2 226 1 
302 1 216 1 276 1 80 1 14 1 
362 1 73 1 216 2 276 1 80 1 14 2 3 1 93 1 
216 1 80 1 14 1 
279 1 300 1 285 1 212 1 67 1 6 1 216 1 276 1 375 1 8 1 9 1 26 1 14 1 226 1 
362 1 
362 1 73 1 216 2 276 1 80 1 331 1 14 2 93 1 
362 1 295 2 88 1 90 1 194 1 80 2 313 1 149 1 83 1 93 1 103 1 73 1 216 5 276 2 10 1 203 1 235 2 14 5 111 2 
367 1 227 1 
279 1 369 1 285 2 6 2 375 2 189 1 9 1 226 1 227 2 
42 1 247 1 351 1 
272 1 169 1 311 1 364 1 312 1 285 1 49 1 84 1 41 1 373 1 375 1 153 1 205 1 15 1 190 1 227 1 
272 1 18 1 169 1 311 1 364 1 312 1 285 2 211 1 84 1 373 1 6 1 41 1 375 2 42 1 9 1 153 1 205 1 190 1 15 1 226 1 
279 1 6 3 18 1 375 3 9 3 285 3 226 3 227 1 
6 1 375 1 8 1 9 1 26 1 285 1 226 1 
279 1 6 1 375 1 369 1 9 1 189 1 26 1 285 1 226 1 
182 1 272 1 364 1 299 1 82 1 300 1 211 1 84 1 215 1 6 3 41 1 216 1 60 1 189 1 9 3 14 1 190 1 15 1 239 1 279 2 346 1 18 1 168 1 245 1 169 1 311 1 372 1 312 1 285 4 91 1 318 1 221 1 373 1 177 1 375 4 291 1 322 1 153 1 357 2 26 1 205 1 206 1 226 3 227 1 
130 1 17 1 6 2 18 1 375 2 9 1 285 2 226 1 227 1 
279 1 346 1 362 1 18 2 168 1 299 1 372 1 285 3 211 1 215 1 6 3 216 1 375 3 23 1 189 1 9 3 14 1 26 1 226 3 
279 1 18 1 351 1 285 2 6 2 375 2 42 1 189 1 9 2 226 2 
272 1 311 1 169 1 364 1 312 1 285 1 84 1 41 1 373 1 375 1 153 1 205 1 15 1 190 1 227 1 
361 1 311 1 169 1 364 1 312 1 285 1 84 1 41 1 373 1 321 1 375 1 205 1 15 1 190 1 227 1 
182 1 54 1 82 2 335 1 258 1 42 2 60 1 161 1 165 1 345 1 247 2 65 1 172 1 351 2 316 2 221 1 196 1 177 1 291 1 322 1 292 1 357 2 270 1 206 4 
346 1 6 1 375 1 9 1 26 1 285 1 46 1 226 1 
130 1 279 1 17 1 18 2 44 1 285 5 211 1 6 5 375 5 9 4 189 1 226 4 327 1 227 1 
6 2 375 2 8 1 9 2 26 1 285 2 46 1 226 2 
108 1 131 1 
108 1 131 1 
265 1 147 1 
265 1 147 1 
265 1 147 1 
108 1 249 1 131 1 
108 1 249 1 131 1 
108 1 252 1 131 1 
222 1 108 2 242 1 265 1 147 1 131 2 
108 1 249 1 131 1 
220 1 108 1 131 1 
220 1 108 1 131 1 
220 1 108 1 131 1 
362 1 139 2 328 2 140 1 229 1 131 2 287 2 275 2 319 1 222 1 108 2 290 2 216 2 152 3 14 2 378 1 164 1 360 1 166 1 
328 1 139 1 140 1 184 1 39 1 108 1 6 2 216 1 9 2 162 1 14 1 263 1 131 1 285 2 287 1 219 1 120 1 290 1 134 1 152 1 375 2 252 1 226 2 227 1 
353 1 201 1 125 1 
5 1 201 1 125 1 
21 1 264 1 353 2 5 1 201 3 142 1 
21 1 353 1 5 1 246 1 201 2 142 1 
21 2 353 1 5 1 201 2 142 1 
77 1 362 2 295 1 54 1 80 1 184 1 39 1 335 1 216 5 156 1 188 1 276 4 162 1 161 1 10 3 235 1 111 1 14 5 236 2 217 1 86 1 64 2 194 1 284 1 93 1 133 1 73 1 356 3 203 2 292 1 325 2 254 1 
77 3 362 5 295 2 54 3 80 6 39 4 335 3 302 5 109 5 216 9 188 3 276 7 144 1 161 3 10 8 235 2 14 9 111 2 86 2 240 1 64 6 347 1 194 1 313 1 93 1 73 1 133 1 223 1 251 1 356 9 180 1 203 6 292 3 325 6 254 2 
362 3 77 2 295 1 54 1 39 1 335 1 216 3 276 2 188 1 10 3 161 1 235 1 111 1 14 3 236 1 217 1 86 1 64 2 284 1 313 1 73 1 356 4 203 2 292 1 254 1 325 2 
362 4 77 3 295 1 54 2 39 2 335 2 216 4 276 3 188 2 10 5 161 2 235 1 111 1 14 4 236 2 217 1 86 1 240 1 64 4 284 1 313 1 73 1 223 1 356 7 180 1 203 4 292 2 325 4 254 1 
208 1 367 1 169 1 
169 1 224 1 
288 1 
169 1 190 1 
208 2 169 3 1 1 185 1 190 1 15 1 
169 1 190 1 15 1 
169 1 267 1 
241 1 243 1 36 1 82 3 171 1 365 1 172 2 316 4 196 3 304 1 214 2 57 1 374 1 161 1 292 1 52 1 206 7 
241 1 243 1 36 1 82 3 171 1 365 1 172 2 316 4 196 3 304 1 214 2 57 1 374 1 161 1 292 1 52 1 206 7 
241 1 36 1 243 1 82 3 171 1 365 1 172 2 316 4 196 3 304 1 126 1 214 2 57 1 374 1 161 1 292 1 52 1 206 7 
182 1 36 1 54 3 82 15 365 5 334 1 213 1 335 3 304 2 214 3 57 2 188 3 157 3 161 4 160 1 278 4 241 1 243 2 171 1 172 5 316 16 94 1 221 1 196 10 22 1 374 2 177 1 291 1 355 1 357 2 292 4 52 1 271 1 206 31 
182 2 36 1 82 4 365 1 304 1 214 2 57 1 161 1 160 1 243 1 171 1 172 3 315 1 316 5 221 2 196 4 135 1 374 1 177 2 291 2 292 1 357 4 52 1 206 9 
53 1 363 1 329 1 78 1 364 1 125 1 101 1 186 1 107 1 41 1 5 1 143 1 85 2 234 1 13 1 145 1 191 1 310 1 264 1 311 1 117 1 312 1 286 1 48 1 353 1 201 2 76 2 136 1 377 1 205 1 
53 1 78 1 183 1 364 1 125 1 101 1 186 1 107 1 41 1 5 1 143 1 85 3 159 1 234 2 13 1 145 1 264 1 310 1 311 1 117 1 312 1 371 1 286 1 48 1 353 1 201 2 76 3 136 1 377 1 205 1 
53 1 183 1 364 1 125 1 101 1 186 1 107 1 41 1 5 1 143 1 85 2 159 1 234 2 145 1 264 1 311 1 117 1 312 1 48 1 353 1 201 2 76 2 136 1 377 1 205 1 
192 1 53 2 169 1 78 1 311 1 364 1 37 1 371 1 312 1 250 1 317 1 150 1 84 1 41 1 85 1 76 1 136 2 13 1 340 1 377 2 205 1 190 1 145 2 
53 1 363 1 78 1 364 1 125 1 107 1 41 1 5 1 85 1 159 1 13 1 145 1 191 1 310 1 264 1 311 1 117 1 312 1 286 1 48 1 353 1 201 2 76 1 136 1 377 1 205 1 
0 1 
228 4 230 2 232 1 6 1 10 2 235 1 14 5 111 1 190 1 192 1 17 1 346 1 62 1 194 1 285 1 70 1 121 1 73 1 72 1 75 2 356 2 203 2 26 1 205 1 254 1 362 2 77 2 295 1 154 1 35 1 364 1 80 6 298 1 40 2 84 2 215 1 41 2 256 2 257 1 216 5 307 1 309 2 87 1 168 1 89 2 311 2 169 1 368 2 312 2 372 1 317 1 93 3 132 1 375 1 98 1 
309 1 346 1 17 1 168 1 154 1 62 1 35 1 228 2 331 1 80 2 372 1 285 1 93 1 232 1 215 1 121 1 6 1 216 3 375 1 26 1 14 3 98 1 
362 1 154 1 228 3 35 1 80 1 331 1 215 1 232 1 6 1 256 1 216 3 14 3 17 1 346 1 62 1 168 1 372 1 285 1 93 1 121 1 73 1 375 1 26 1 98 1 
362 1 154 1 228 3 35 1 331 1 80 2 215 1 232 1 6 1 256 1 216 3 14 3 17 1 346 1 309 1 62 1 168 1 372 1 285 1 93 1 121 1 73 1 75 1 375 1 26 1 98 1 
77 2 362 5 295 1 154 1 228 6 35 1 297 1 298 1 80 7 331 1 330 1 230 2 40 2 232 1 215 1 6 1 256 4 216 5 10 1 235 1 111 1 14 5 43 1 87 1 17 1 346 1 309 4 62 1 168 1 89 2 368 2 170 1 194 1 372 1 285 1 93 3 121 1 73 5 75 4 375 1 203 1 26 1 181 1 98 1 
362 2 77 2 295 1 154 1 228 4 35 1 80 4 298 1 230 2 40 2 232 1 215 1 6 1 256 2 216 4 10 1 235 1 111 1 14 4 309 2 87 1 17 1 346 1 62 1 168 1 89 2 368 2 194 1 372 1 285 1 93 2 121 1 73 1 72 1 75 2 375 1 356 2 203 1 26 1 98 1 
362 1 77 2 295 1 154 1 228 4 35 1 80 4 298 1 230 2 40 2 215 1 232 1 6 1 256 2 216 4 10 1 235 1 111 1 14 4 43 1 309 2 87 1 17 1 346 1 62 1 168 1 89 2 368 2 170 1 194 1 372 1 285 1 93 2 121 1 73 1 75 2 375 1 203 1 26 1 181 1 98 1 
362 1 77 2 295 1 154 1 228 4 35 1 80 4 298 1 230 2 40 2 215 1 232 1 6 1 256 2 216 4 10 1 235 1 111 1 14 4 43 1 309 2 87 1 17 1 346 1 62 1 168 1 89 2 368 2 170 1 194 1 372 1 285 1 93 2 121 1 73 1 75 2 375 1 203 1 26 1 181 1 98 1 
362 1 295 1 154 1 228 4 35 1 80 4 255 2 2 1 104 1 40 2 231 1 215 1 232 1 6 1 256 2 216 4 10 1 235 1 111 1 14 4 43 1 309 2 87 1 17 1 346 1 62 1 168 1 368 2 194 1 248 2 372 1 285 1 93 2 121 1 73 1 75 2 375 1 356 2 203 1 26 1 98 1 
362 1 77 2 295 1 154 1 228 5 35 1 297 1 298 1 80 5 230 2 40 2 215 1 232 1 6 1 256 3 216 4 10 1 235 1 111 1 14 4 43 1 87 1 17 1 346 1 309 3 62 1 168 1 89 2 368 2 170 1 194 1 372 1 285 1 93 2 121 1 73 1 75 3 375 1 203 1 26 1 181 1 98 1 
362 1 77 2 295 1 154 1 228 5 35 1 297 1 298 1 80 5 230 2 40 2 215 1 232 1 6 1 256 3 216 4 10 1 235 1 111 1 14 4 43 1 87 1 17 1 346 1 309 3 62 1 168 1 89 2 368 2 170 1 194 1 372 1 285 1 93 2 121 1 73 1 75 3 375 1 203 1 26 1 181 1 98 1 
362 1 295 1 154 1 228 4 35 1 80 4 255 2 40 2 231 1 232 1 215 1 6 1 256 2 216 4 10 1 235 1 111 1 14 4 309 2 87 1 17 1 346 1 62 1 168 1 368 2 194 1 248 2 372 1 285 1 93 2 121 1 73 1 72 1 75 2 375 1 356 2 203 1 26 1 98 1 
182 1 36 1 82 3 304 1 214 1 57 1 42 1 60 1 161 1 367 1 247 1 171 1 172 2 351 1 316 3 221 1 196 2 177 1 291 1 322 1 357 2 270 1 292 1 52 1 206 6 227 2 
182 2 54 2 82 6 365 1 213 1 335 1 127 1 188 2 42 11 60 2 157 3 161 2 278 3 163 1 341 1 262 1 245 1 244 1 247 11 172 1 351 4 316 8 196 2 221 2 22 1 177 2 291 2 322 1 376 1 357 4 292 1 206 14 227 1 
182 1 272 1 364 1 82 1 211 1 84 1 41 1 6 1 7 1 60 1 9 1 163 1 190 1 15 1 18 1 169 1 311 1 245 1 312 1 351 1 285 2 20 1 316 1 49 1 50 1 221 1 373 1 177 1 375 2 291 1 153 1 322 1 357 2 376 1 205 1 226 1 206 2 227 1 
182 3 272 2 54 2 335 2 57 1 6 1 337 1 188 2 9 1 60 3 238 2 15 2 190 2 239 2 113 2 18 1 245 1 247 7 285 3 351 7 196 8 291 3 153 2 292 3 357 6 205 2 206 20 124 2 36 1 364 2 82 10 365 4 211 1 304 1 84 1 214 1 41 3 128 2 42 7 159 1 161 3 163 1 311 3 169 2 171 1 172 4 312 3 316 10 175 1 221 3 320 1 373 2 375 3 177 3 322 3 376 1 52 1 226 1 227 2 
182 2 34 1 329 1 364 2 81 1 82 1 84 2 6 1 41 7 159 1 9 1 60 2 190 2 192 1 18 1 63 1 169 3 311 8 245 1 266 1 312 8 285 1 268 1 316 1 317 1 221 2 375 1 177 2 291 2 322 2 97 1 24 1 270 1 357 4 376 1 225 2 205 2 226 1 206 2 
182 1 54 1 82 2 335 1 6 1 188 1 42 1 189 1 60 1 9 1 161 1 163 1 279 1 247 1 172 1 351 1 285 1 316 1 196 1 221 1 177 1 375 1 291 1 322 1 357 2 292 1 28 1 226 1 206 3 
182 1 345 1 54 1 247 1 365 1 351 1 316 2 196 1 221 1 177 1 42 1 291 1 322 1 60 1 161 1 270 1 357 2 206 2 
182 1 247 1 82 2 172 1 65 1 351 1 335 1 196 1 221 1 177 1 42 1 291 1 322 1 60 1 270 1 357 2 292 1 206 2 
182 1 54 1 82 2 365 1 335 1 188 1 42 2 60 1 161 1 247 2 172 1 351 2 316 2 221 1 196 2 177 1 291 1 322 1 357 2 270 1 292 1 206 4 
182 1 345 1 34 1 54 1 247 1 365 1 351 1 316 2 196 1 221 1 177 1 42 1 291 1 322 1 60 1 161 1 357 2 206 2 
182 1 34 1 247 1 82 2 172 1 65 1 351 1 335 1 196 1 221 1 177 1 42 1 291 1 322 1 60 1 357 2 292 1 206 2 
182 1 34 1 54 1 82 2 365 1 335 1 188 1 42 2 60 1 161 1 247 2 172 1 351 2 316 2 221 1 196 2 177 1 291 1 322 1 357 2 292 1 206 4 
182 1 54 1 82 2 365 1 335 1 188 1 42 2 60 1 161 1 247 2 172 1 351 2 316 2 221 1 196 2 177 1 291 1 322 1 357 2 292 1 206 4 
182 1 272 1 364 1 82 1 84 1 41 1 60 1 190 1 15 1 239 1 311 1 169 1 245 1 312 1 285 1 316 1 221 1 373 1 375 1 177 1 291 1 153 1 322 1 376 1 357 2 205 1 206 2 227 1 
182 1 361 1 364 1 82 1 84 1 41 1 60 1 190 1 15 1 311 1 169 1 245 1 116 1 312 1 285 1 316 1 221 1 373 1 321 1 375 1 177 1 291 1 322 1 376 1 357 2 205 1 206 2 227 1 
182 1 54 1 82 2 365 1 335 1 188 1 42 2 60 1 161 1 163 1 247 2 172 1 351 2 316 2 221 1 196 2 177 1 291 1 322 1 357 2 292 1 206 4 
182 1 272 1 124 1 54 1 329 1 364 1 82 2 365 1 335 1 41 1 188 1 42 2 60 1 161 1 15 1 190 1 239 1 311 1 169 1 247 2 172 1 312 1 351 2 285 1 316 2 196 2 221 1 373 1 375 1 177 1 291 1 153 1 322 1 292 1 357 2 205 1 206 4 
182 1 54 1 82 1 365 1 335 1 6 1 188 1 42 1 189 1 60 1 9 1 161 1 163 1 279 1 247 1 148 1 285 1 351 1 316 2 196 1 221 1 177 1 375 1 291 1 322 1 292 1 357 2 226 1 206 3 
182 2 273 1 54 2 82 6 365 2 155 2 105 1 335 2 188 2 161 2 193 2 115 1 349 1 172 2 316 6 221 2 196 4 96 1 354 1 135 1 177 2 291 2 179 1 357 4 292 2 206 12 
182 1 273 1 54 1 82 4 155 1 335 1 188 1 161 1 193 2 115 1 349 2 316 4 221 1 96 2 135 1 177 1 291 1 179 1 357 2 292 1 206 8 
182 2 273 1 54 1 82 4 365 1 155 1 105 1 335 1 4 1 188 1 161 1 193 2 115 1 349 2 316 4 221 2 196 1 96 1 135 1 177 2 291 2 179 1 357 4 292 1 206 8 
182 2 273 1 54 1 82 4 365 1 155 1 105 1 335 1 4 1 188 1 161 1 193 2 115 1 349 2 172 1 316 4 221 2 196 2 96 1 135 1 177 2 291 2 179 1 357 4 292 1 206 8 
182 1 273 1 54 1 36 2 82 8 365 1 155 1 335 1 304 2 214 2 57 2 188 1 161 3 193 2 115 1 349 1 171 2 172 3 316 10 221 1 196 4 96 1 135 1 177 1 291 1 179 1 357 2 292 3 52 2 206 18 
30 1 222 1 108 1 328 1 139 1 290 1 229 1 131 1 287 1 166 1 
120 1 252 1 
32 1 108 1 328 1 139 1 290 1 301 1 131 1 287 1 308 1 
362 1 139 1 328 1 140 1 229 1 131 1 287 1 275 1 222 1 108 1 216 1 290 1 152 2 14 1 378 1 164 1 360 1 166 1 
362 1 139 1 328 1 140 1 229 1 131 1 287 1 275 1 222 1 108 1 216 1 290 1 152 2 14 1 378 1 164 1 360 1 166 1 
362 1 139 1 328 1 140 1 229 1 131 1 287 1 275 1 222 1 108 1 216 1 290 1 152 2 14 1 378 1 164 1 360 1 166 1 
242 1 249 1 55 1 
242 1 249 1 55 1 
220 1 274 1 
220 1 242 1 274 1 
134 1 219 1 
328 1 139 1 99 1 184 1 39 1 275 1 108 1 6 2 216 1 276 1 9 2 162 1 14 1 263 1 285 2 131 1 287 1 219 1 120 1 290 1 134 1 375 2 152 1 252 1 360 1 226 2 227 1 
249 1 55 1 
220 1 242 1 274 1 
182 1 294 1 138 1 364 1 82 1 303 1 6 2 41 2 60 1 277 1 163 1 190 1 63 1 169 1 311 2 245 1 348 1 312 2 285 2 316 1 221 1 177 1 375 2 291 1 322 1 97 1 357 2 376 1 225 2 205 1 206 2 
264 1 53 1 311 2 329 1 364 1 125 1 117 1 312 2 286 1 107 1 95 1 353 1 5 1 41 2 201 2 159 1 205 1 261 1 137 1 
264 1 53 1 311 1 364 1 125 1 117 1 312 1 286 1 333 1 107 1 95 1 353 1 5 1 41 1 201 2 159 1 205 1 
192 1 53 1 169 1 311 1 364 1 312 1 317 1 84 1 41 1 340 1 205 1 358 1 190 1 137 1 
264 1 53 1 311 1 364 1 125 1 117 1 312 1 286 1 107 1 95 1 353 1 5 1 41 1 201 2 159 1 205 1 261 1 137 1 
68 1 
362 1 73 1 367 1 90 1 10 1 203 1 83 1 
77 1 362 2 295 1 298 1 80 1 230 1 216 1 10 1 235 1 111 1 14 1 89 1 194 1 93 1 73 1 356 1 203 1 
329 1 54 2 1 1 56 2 335 2 187 2 110 2 58 2 233 1 188 2 10 9 235 4 111 4 14 5 112 2 343 1 190 3 15 3 146 1 64 6 194 4 197 2 73 2 356 12 203 8 25 1 292 2 205 4 27 2 254 2 208 2 77 6 362 8 295 4 364 3 80 5 83 1 84 1 41 3 257 1 216 5 128 2 161 2 169 10 311 3 90 1 267 2 312 3 372 2 93 3 176 2 224 3 326 1 325 6 
77 2 362 2 295 1 54 2 332 1 335 2 338 1 188 2 157 1 10 6 306 1 161 2 235 1 111 1 278 1 64 5 194 1 195 1 22 1 356 4 203 4 292 2 325 5 29 1 
295 1 209 1 300 1 212 1 304 1 187 2 57 1 6 1 216 1 8 1 9 1 161 2 10 2 235 1 111 1 14 1 279 1 170 1 194 1 171 1 285 1 67 1 176 1 375 1 203 2 292 1 26 1 226 1 
362 1 295 1 194 1 90 1 83 1 73 1 203 1 10 1 235 1 111 1 
77 5 362 5 54 2 64 5 335 2 176 1 187 2 128 1 188 2 356 10 161 2 203 5 10 5 292 2 325 5 
362 1 73 1 216 1 80 1 14 1 93 1 
295 2 79 1 364 1 80 4 84 2 41 4 257 2 216 3 305 1 10 2 235 2 111 2 14 3 307 1 190 1 343 1 192 1 169 1 311 4 194 1 312 4 313 1 93 2 317 1 132 1 203 2 205 1 326 2 254 2 
182 1 272 1 364 1 82 1 300 1 84 1 41 1 6 2 9 2 60 1 15 1 190 1 239 1 279 2 245 1 311 1 169 1 312 1 285 3 318 1 221 1 373 1 375 3 177 1 291 1 153 1 322 1 357 2 205 1 206 1 226 2 227 1 
77 2 362 4 295 1 64 2 194 1 214 1 73 2 257 1 356 4 203 2 10 1 235 1 111 1 325 2 254 1 
328 1 287 1 352 1 
328 1 287 1 352 1 
328 1 134 1 229 1 204 1 287 1 
328 1 287 1 352 1 
328 1 259 1 287 1 
328 1 259 1 287 1 
328 1 259 1 287 1 
328 1 287 1 
108 1 131 1 
182 2 36 1 171 1 82 4 365 1 172 2 316 4 196 3 221 2 304 1 214 1 57 1 177 2 291 2 161 1 160 1 292 1 357 4 52 1 206 8 
367 1 36 1 82 3 171 1 172 2 316 3 304 1 196 2 214 1 57 1 161 1 292 1 52 1 206 6 
33 1 182 1 54 1 82 2 365 1 172 1 316 2 335 1 196 2 221 1 177 1 188 1 291 1 161 1 292 1 357 2 206 4 
54 1 82 4 365 1 172 1 316 3 335 1 213 1 196 2 22 1 188 1 157 1 161 1 292 1 278 2 206 7 
182 2 36 1 54 2 82 12 365 4 213 1 335 2 304 2 214 1 57 2 188 2 157 2 161 3 160 2 278 2 341 1 244 1 171 1 172 5 316 11 196 9 221 2 74 1 177 2 291 2 292 3 357 4 52 1 206 23 
82 1 278 1 206 1 
157 1 206 1 316 1 
182 1 33 1 54 1 82 3 365 1 172 2 316 3 335 1 221 1 196 3 128 1 177 1 188 1 291 1 161 1 357 2 292 1 206 6 
182 1 54 2 82 6 365 1 332 1 335 2 338 1 188 2 157 1 306 1 161 2 278 1 172 1 316 6 195 1 221 1 196 2 22 1 135 1 177 1 291 1 357 2 292 2 206 12 29 1 
171 1 82 3 365 1 172 1 316 3 304 1 196 2 57 1 161 1 292 1 206 6 
182 1 36 1 82 2 365 1 172 1 316 1 196 2 304 1 221 1 57 1 74 1 177 1 291 1 160 1 357 2 52 1 206 3 
182 1 209 1 82 5 171 1 365 2 172 3 316 5 221 1 304 2 196 5 57 2 135 1 177 1 291 1 161 2 357 2 292 2 206 10 
182 1 54 1 365 1 316 2 221 1 196 1 135 1 177 1 291 1 161 1 357 2 206 2 
182 1 54 1 82 2 365 1 172 1 316 2 335 1 196 2 221 1 135 1 177 1 188 1 291 1 161 1 292 1 357 2 206 4 
182 3 82 2 365 1 172 1 316 1 105 1 221 3 304 1 196 2 57 1 74 1 135 1 177 3 291 3 160 1 357 6 206 3 
33 1 182 5 36 1 54 3 82 18 365 5 334 1 105 1 213 1 335 3 304 3 214 1 57 3 188 3 157 3 160 2 161 5 278 4 171 2 172 7 316 16 221 5 196 12 74 1 22 1 135 1 177 5 355 1 291 5 357 10 292 5 52 1 271 1 206 34 
182 1 36 1 82 4 332 1 304 1 214 1 57 1 157 1 161 1 278 1 171 1 172 2 316 4 221 1 196 2 22 1 135 1 177 1 291 1 292 1 357 2 52 1 206 8 
182 2 33 1 36 1 54 1 82 5 332 1 365 1 213 1 304 1 214 1 57 1 188 1 157 1 161 2 278 2 171 1 172 2 316 6 221 2 196 3 22 1 135 1 177 2 291 2 292 1 357 4 52 1 206 11 
182 1 54 1 82 2 332 1 316 3 195 1 221 1 135 1 22 1 188 1 177 1 291 1 157 1 161 1 306 1 357 2 278 1 206 5 
33 1 182 3 36 1 54 2 82 7 365 2 332 1 335 1 304 1 214 1 57 1 338 1 188 2 157 1 160 1 306 1 161 3 278 1 171 1 172 3 316 10 195 1 221 3 196 5 22 1 135 1 177 3 291 3 357 6 292 2 52 1 206 17 29 1 
182 1 36 1 82 4 332 1 304 1 214 1 57 1 157 1 161 1 278 1 171 1 172 2 316 4 221 1 196 2 22 1 135 1 177 1 291 1 292 1 357 2 52 1 206 8 
182 1 54 2 82 6 365 1 332 1 335 2 338 1 188 2 157 1 306 1 161 2 278 1 172 1 316 6 195 1 221 1 196 2 22 1 135 1 177 1 291 1 357 2 292 2 206 12 29 1 
182 2 33 1 54 1 82 2 332 1 316 3 195 1 221 2 135 1 22 1 188 1 177 2 291 2 157 1 161 1 306 1 357 4 278 1 206 5 
182 4 54 3 82 7 365 3 332 1 105 1 335 2 338 1 188 3 157 1 306 1 161 3 160 2 278 1 172 3 316 9 195 1 221 4 196 6 22 1 135 1 177 4 291 4 357 8 292 2 29 1 206 16 
36 2 82 4 171 1 365 3 172 3 316 3 304 3 196 6 57 3 161 1 292 1 52 1 206 7 
182 2 54 1 82 2 332 1 316 3 105 1 195 1 221 2 135 1 22 1 188 1 177 2 291 2 157 1 161 1 306 1 357 4 278 1 206 5 
130 1 17 1 119 1 6 1 375 1 285 1 227 1 
130 1 17 1 370 1 350 1 285 1 47 1 119 1 6 1 200 1 375 1 11 1 227 1 
192 1 84 1 41 1 367 1 169 1 311 1 364 1 312 1 205 1 190 1 317 1 
272 1 18 1 169 1 311 1 364 1 312 1 285 2 84 1 373 1 6 1 41 1 375 2 9 1 205 1 190 1 15 1 226 1 227 1 
346 1 272 1 168 1 18 1 169 3 311 1 364 1 267 1 312 1 285 2 373 1 6 2 41 1 375 2 9 2 26 1 27 1 205 1 326 1 190 2 15 2 226 1 227 1 
364 1 41 2 6 2 9 2 15 2 190 2 16 1 346 1 18 1 168 1 311 2 169 3 267 1 312 2 285 2 373 1 321 1 375 2 26 1 205 1 27 1 326 1 226 1 227 1 
207 1 208 1 362 1 364 1 80 1 84 1 41 3 216 2 14 2 15 1 190 1 16 1 169 4 311 3 267 1 312 3 372 1 269 1 73 1 224 1 205 1 27 1 326 1 
16 1 208 1 362 1 311 3 169 4 364 1 80 1 267 1 372 1 312 3 56 1 84 1 41 3 73 1 216 2 224 1 14 2 27 1 205 1 326 1 190 1 15 1 
41 1 311 1 364 1 312 1 205 1 268 1 
329 1 311 7 169 3 266 1 364 2 81 1 1 1 312 7 268 1 92 1 84 2 199 1 41 6 159 1 97 1 24 1 225 1 293 1 205 3 15 1 190 2 
182 2 272 1 329 1 6 1 57 1 9 1 60 2 238 1 15 1 190 1 239 1 18 1 247 1 351 1 285 2 196 2 291 2 153 1 357 4 292 1 205 1 206 6 124 1 36 1 364 1 82 3 303 1 304 1 214 1 41 1 42 1 161 1 163 1 311 1 169 1 171 1 312 1 172 2 316 3 221 2 373 1 375 2 177 2 322 2 52 1 226 1 227 2 
208 1 362 1 295 2 80 2 83 1 56 1 84 1 41 1 110 1 216 3 58 1 276 1 10 1 235 2 111 2 14 3 112 1 343 1 311 1 169 2 90 1 194 2 312 1 372 1 93 1 73 1 224 1 203 1 
208 1 329 1 311 2 169 2 364 1 1 1 312 2 268 1 41 2 233 1 205 2 15 1 190 1 
192 1 16 1 280 1 311 4 329 1 169 1 364 1 312 4 317 1 84 1 41 4 205 1 190 1 
311 2 169 1 364 1 312 2 92 1 199 1 41 2 198 1 337 1 59 1 205 2 326 1 15 1 190 1 
84 1 5 1 41 1 311 1 201 1 364 1 125 1 117 1 312 1 205 1 
329 1 311 2 169 1 364 1 312 2 41 2 159 1 97 1 277 1 205 1 190 1 
192 1 280 1 311 5 329 1 169 3 266 1 364 2 81 1 312 5 317 1 84 1 41 4 97 1 205 2 326 1 190 2 
192 1 280 1 311 5 329 1 169 3 364 2 81 1 312 5 317 1 174 1 84 1 41 4 97 1 205 2 326 1 190 2 
18 1 169 1 311 1 364 1 312 1 285 2 84 1 373 1 6 1 41 1 321 1 375 2 9 1 205 1 190 1 15 1 226 1 227 1 
311 1 169 1 364 1 1 1 312 1 92 1 199 1 41 1 293 1 205 2 326 1 15 1 190 1 
51 1 12 1 324 1 173 1 227 1 
346 1 362 1 168 1 210 1 299 1 281 1 372 1 173 2 69 1 215 1 73 1 51 2 216 2 276 1 12 2 26 1 324 1 14 2 227 1 
294 1 138 1 6 1 375 1 348 1 12 1 285 1 324 1 173 1 
210 1 281 1 324 1 
143 1 367 1 101 1 186 1 
143 1 78 1 85 1 76 1 13 1 101 1 186 1 
85 1 136 1 145 1 
363 1 78 1 282 1 38 2 101 1 186 1 143 1 85 3 76 3 202 1 13 1 342 1 
143 1 296 1 78 1 85 2 76 2 234 1 13 1 101 1 186 1 
353 1 363 1 78 1 201 1 178 1 85 1 76 1 125 1 13 1 359 1 186 1 
363 1 78 1 85 1 76 1 13 1 101 1 186 1 
143 1 363 1 78 1 85 1 76 1 13 1 101 2 
31 1 106 1 363 1 78 2 85 2 76 2 13 2 101 1 237 1 186 1 
344 1 363 1 78 1 101 1 186 2 143 1 85 3 178 1 76 3 158 1 234 2 13 1 260 1 
264 1 363 1 78 1 125 1 101 1 186 1 5 1 353 1 143 1 201 2 85 2 76 2 234 1 13 1 323 1 
344 1 363 1 296 1 78 2 101 1 186 2 151 1 143 1 85 4 178 1 76 4 234 2 13 2 
143 1 363 1 78 1 85 1 76 1 13 1 101 1 186 1 
344 1 78 1 282 1 38 1 101 2 186 3 336 1 143 2 85 4 178 1 76 4 234 2 13 1 342 1 
363 1 78 1 283 1 118 1 101 1 186 1 71 1 143 1 85 2 76 2 234 1 13 1 
61 1 363 1 78 1 282 2 38 2 101 1 186 1 143 1 85 3 76 3 13 1 342 1 
289 1 253 2 45 1 186 2 
167 1 363 1 78 1 85 1 76 1 13 1 
143 1 363 1 78 1 85 2 76 2 158 1 234 1 13 1 101 1 186 1 
141 1 
143 1 363 1 78 1 85 1 76 1 13 1 101 1 186 1 
143 1 363 1 78 1 85 3 76 3 158 1 234 1 38 1 13 1 101 1 186 1 
336 1 344 1 178 1 186 1 
101 1 186 1 

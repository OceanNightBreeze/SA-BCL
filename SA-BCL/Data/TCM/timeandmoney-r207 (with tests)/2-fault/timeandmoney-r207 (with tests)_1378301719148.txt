#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V | OPERATOR | 5972 | <= -> !=
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4642 | = null
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
14 1 172 3 264 2 302 1 275 2 351 1 324 1 115 3 90 1 258 2 148 1 21 1 34 1 
172 9 264 2 84 1 127 1 156 1 367 1 31 1 90 1 12 1 184 1 34 2 14 4 212 2 273 2 35 2 108 1 302 1 215 1 275 2 351 6 324 3 115 9 70 2 304 1 193 1 258 5 148 1 21 1 
172 9 264 2 84 1 127 1 156 1 367 1 31 1 90 1 12 1 184 1 34 2 14 4 212 2 273 2 35 2 108 1 302 1 215 1 275 2 351 6 324 3 115 9 70 2 304 1 193 1 258 5 148 1 21 1 
172 10 264 2 84 1 127 1 156 1 367 1 31 1 90 1 12 1 184 1 34 2 14 5 212 2 273 2 35 2 108 1 302 1 215 1 275 2 351 7 324 4 115 10 70 2 304 1 193 1 258 6 148 1 21 1 
172 7 264 2 84 1 127 1 156 1 31 1 90 1 12 1 184 1 34 2 14 3 212 2 273 2 35 2 108 1 302 1 215 1 275 2 351 4 324 2 115 7 70 1 304 1 193 1 258 4 148 1 21 1 
14 2 172 4 212 1 273 1 35 1 264 1 302 1 275 1 351 3 324 1 115 4 70 2 156 1 367 1 31 1 90 1 258 3 148 1 
172 2 212 1 273 1 264 1 108 1 362 1 302 1 275 1 201 1 115 2 166 1 127 1 258 1 90 1 148 1 34 1 
172 9 264 2 52 1 84 1 156 1 31 1 367 1 340 1 90 1 12 1 34 1 14 4 212 1 273 1 35 1 302 1 351 7 275 2 324 3 115 9 70 2 258 5 148 1 21 1 
172 9 264 2 52 1 84 1 156 1 31 1 367 1 340 1 90 1 12 1 34 1 14 4 212 1 273 1 35 1 302 1 351 7 275 2 324 3 115 9 70 2 258 5 148 1 21 1 
136 1 186 1 252 1 165 1 218 1 126 1 241 1 191 1 117 1 102 1 11 1 73 1 231 1 313 1 
41 1 
41 1 95 1 186 2 236 1 110 1 183 1 165 2 218 1 
75 1 263 2 171 1 186 5 110 2 199 2 224 1 165 5 277 1 375 1 303 1 218 2 228 2 41 1 236 1 183 1 170 1 122 1 345 1 
41 1 183 1 123 1 
41 1 260 1 114 2 
241 2 136 2 117 2 73 2 11 1 252 2 83 1 313 2 
195 1 24 1 223 2 53 1 266 1 5 1 83 1 6 2 60 1 241 2 366 1 368 1 319 2 321 2 11 1 230 1 161 1 322 1 133 1 245 1 136 2 66 1 36 1 250 1 252 3 112 1 234 1 168 1 117 2 376 2 73 3 257 1 311 1 355 1 313 2 48 1 330 1 
126 1 241 1 191 1 136 1 117 1 102 1 73 1 11 1 252 1 313 1 
262 1 186 1 359 1 222 1 252 1 323 1 165 1 202 1 241 1 41 1 256 1 102 1 73 1 183 1 
262 1 136 1 186 2 359 1 222 1 252 1 165 2 241 1 41 1 117 1 256 1 102 1 73 1 183 1 313 1 
186 1 110 1 162 1 165 1 218 1 
27 1 41 1 186 2 236 1 110 1 183 1 165 2 218 1 
186 1 110 1 165 1 
211 1 247 1 136 1 252 2 83 2 241 2 117 1 73 2 313 1 
326 1 154 1 103 1 
66 1 24 1 223 1 252 1 5 1 83 1 60 1 168 1 376 1 321 1 73 1 257 1 230 1 161 1 208 1 330 1 
123 1 83 1 
66 1 136 1 24 1 298 1 223 1 252 2 5 1 58 1 168 1 60 1 241 1 376 1 321 1 257 1 73 2 230 1 161 1 103 1 313 1 330 1 
241 3 117 1 136 3 298 1 73 3 252 3 83 1 313 3 
241 1 191 1 136 1 102 1 73 1 252 1 313 1 
211 1 241 1 247 1 136 1 117 1 102 1 73 1 252 1 313 1 
262 1 195 1 24 1 359 1 222 1 223 1 53 1 2 1 5 1 363 1 58 1 83 1 6 2 60 1 241 3 366 1 102 1 319 1 321 1 11 1 230 1 161 1 322 1 133 1 245 1 247 1 66 1 136 3 186 1 298 1 36 1 250 1 252 4 165 1 234 1 168 1 117 2 256 1 376 1 257 1 73 4 311 1 313 3 330 1 
241 2 19 1 136 1 298 1 73 2 252 2 83 1 202 1 313 1 
262 1 247 1 136 3 186 1 298 2 359 1 222 1 252 3 165 1 58 1 363 1 241 3 117 1 41 1 256 1 42 1 102 1 73 3 313 3 
247 1 136 2 298 1 252 2 154 1 241 2 117 1 73 2 103 1 313 2 
66 1 24 1 223 1 252 1 5 1 83 1 60 1 168 1 376 1 321 1 73 1 257 1 230 1 161 1 330 1 
66 1 223 1 337 1 252 1 5 1 83 1 153 1 168 1 376 1 321 1 73 1 257 1 230 1 161 1 330 1 
195 1 53 1 56 1 269 1 154 2 6 2 366 1 368 2 319 4 129 1 272 1 103 2 349 1 36 1 250 1 188 1 350 1 299 1 300 1 234 2 326 2 308 1 311 1 380 1 
241 1 136 1 102 1 192 1 222 1 73 1 252 1 313 1 
247 1 136 4 298 2 252 5 216 1 58 1 202 1 83 1 203 1 241 5 19 1 117 1 73 5 313 4 
241 2 191 1 136 2 192 1 102 1 73 2 252 2 313 2 
16 1 7 1 74 1 
104 1 71 1 16 2 7 2 1 1 285 1 
16 1 7 1 
16 1 7 1 
71 1 285 1 
71 1 285 1 
71 1 285 1 
16 1 7 1 109 1 
16 1 7 1 109 1 
16 1 7 1 109 1 
331 1 16 1 7 1 
331 1 16 1 7 1 
331 1 16 1 7 1 
104 1 134 2 332 1 296 1 186 2 16 2 374 2 152 1 165 2 227 2 276 3 233 1 41 1 7 2 8 2 128 2 206 1 194 1 33 1 
316 1 83 1 227 1 241 2 8 1 7 1 32 1 128 1 296 1 136 2 135 1 186 1 16 1 374 1 252 2 67 1 165 1 276 1 39 1 144 1 73 2 310 1 74 1 313 2 
273 2 35 1 142 2 362 1 254 1 
212 1 273 1 35 1 
212 1 273 1 362 1 
273 3 142 1 35 2 362 1 113 1 254 1 
354 1 273 2 142 1 35 1 362 1 254 1 
49 1 263 1 199 1 269 1 82 1 228 1 183 1 345 3 347 2 186 5 349 1 110 1 111 2 251 1 300 1 114 3 67 1 352 1 165 5 277 1 218 4 39 1 41 2 377 1 144 1 236 1 308 1 146 1 259 1 260 1 122 2 219 2 
49 3 263 2 361 5 199 2 4 1 269 3 82 1 228 2 87 1 88 1 289 1 183 1 162 5 345 8 347 6 186 9 349 3 110 6 251 2 300 3 114 9 67 4 352 2 165 9 375 1 277 1 218 7 41 5 236 1 308 3 121 1 260 3 122 6 219 6 220 1 
49 1 263 1 199 1 269 1 228 1 183 1 345 3 186 3 347 2 349 1 251 1 111 1 300 1 67 1 114 4 352 1 165 3 375 1 218 2 41 3 377 1 308 1 146 1 260 2 122 2 219 2 
49 2 263 1 199 1 4 1 269 2 228 1 87 1 88 1 183 1 345 5 347 4 186 4 349 2 251 1 111 2 300 2 114 7 67 2 352 1 165 4 375 1 218 3 41 4 377 1 308 2 146 1 260 3 122 4 219 4 
284 1 
342 1 161 1 123 1 
101 1 161 1 
161 1 5 1 
168 1 342 2 341 1 161 3 5 1 293 1 
168 1 161 1 5 1 
72 1 161 1 
124 1 349 1 187 2 350 3 139 1 269 1 232 1 190 1 234 3 255 1 305 1 368 4 319 7 307 1 205 1 380 2 132 1 281 1 
49 3 333 1 124 2 53 1 286 1 269 4 57 1 6 2 155 1 339 4 366 1 178 3 319 31 368 16 205 1 132 1 137 1 187 3 349 4 36 1 350 10 300 3 139 2 232 1 190 2 68 1 234 15 255 5 119 1 307 1 308 3 311 1 380 5 281 2 
333 1 124 1 53 2 269 1 6 4 366 2 319 9 368 5 205 1 132 1 349 1 187 2 36 2 17 1 350 4 139 1 190 1 232 1 234 4 255 1 96 1 311 2 380 3 281 1 
124 1 349 1 187 2 350 3 139 1 269 1 232 1 190 1 234 3 255 1 368 4 319 7 307 1 205 1 380 2 281 1 132 1 
124 1 349 1 187 2 350 3 139 1 269 1 232 1 190 1 234 3 255 1 368 4 319 7 307 1 205 1 380 2 281 1 132 1 
172 1 264 1 223 1 275 1 3 1 5 1 115 1 217 2 169 1 94 1 116 2 376 1 325 1 320 2 321 1 145 1 257 1 230 1 161 1 34 2 64 1 22 1 330 1 
373 1 172 1 212 1 273 2 77 1 35 1 264 1 223 1 362 1 79 1 175 1 113 1 275 1 115 1 217 1 116 1 376 1 44 1 321 1 320 1 257 1 90 1 370 1 230 1 34 1 294 1 
172 2 334 1 77 1 264 1 223 1 362 1 175 1 320 1 321 1 90 1 370 1 230 1 34 1 294 1 373 1 212 1 273 2 35 1 302 1 351 1 275 1 113 1 115 2 217 1 116 1 376 1 44 1 257 1 258 1 148 1 
172 3 77 1 264 1 223 1 79 1 362 1 175 1 320 1 321 1 370 1 230 1 34 1 294 1 212 1 273 2 35 1 302 1 113 1 275 1 351 2 115 3 217 1 94 1 116 1 376 1 327 1 44 1 257 1 258 1 148 1 
172 2 77 1 223 1 79 1 362 1 175 1 320 1 321 1 370 1 230 1 34 1 212 1 273 2 35 1 302 1 351 2 113 1 115 2 217 1 116 1 376 1 327 1 257 1 258 1 148 1 
210 1 
51 2 150 1 0 2 199 1 3 1 5 1 287 2 202 1 241 1 242 1 102 1 160 2 161 1 64 1 344 1 345 2 295 1 164 1 110 6 252 1 114 2 352 1 165 5 256 1 118 2 120 2 257 1 73 1 309 2 260 2 122 2 221 1 262 1 263 1 359 1 222 1 78 1 223 2 176 1 228 1 318 1 177 1 321 2 229 1 183 1 371 4 230 1 186 5 323 1 277 1 41 2 376 2 236 3 279 1 330 2 
262 1 295 1 186 3 164 1 78 1 222 1 359 1 110 2 252 1 323 1 165 3 202 1 241 1 256 1 95 1 118 1 102 1 236 1 73 1 371 2 344 1 221 1 
262 1 295 1 51 1 186 3 164 1 78 1 222 1 359 1 110 1 252 1 323 1 165 3 202 1 241 1 41 1 256 1 95 1 102 1 236 1 73 1 183 1 371 3 344 1 221 1 
262 1 51 1 359 1 222 1 78 1 202 1 241 1 102 1 183 1 371 3 344 1 295 1 164 1 186 3 110 2 252 1 323 1 165 3 256 1 41 1 95 1 118 1 236 1 73 1 309 1 221 1 
262 1 23 1 263 1 51 4 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 318 1 102 1 369 1 243 1 183 5 371 6 160 2 344 1 345 1 295 1 164 1 186 5 110 7 252 1 323 1 165 5 277 1 69 1 140 1 41 5 256 1 95 1 118 4 120 2 236 3 73 1 279 1 309 4 260 2 122 1 221 1 
51 2 0 2 199 1 202 1 287 2 241 1 102 1 160 2 344 1 345 1 295 1 164 1 110 4 252 1 114 2 165 4 256 1 118 2 120 2 73 1 309 2 122 1 260 2 221 1 262 1 263 1 78 1 222 1 359 1 228 1 318 1 177 1 183 1 371 4 186 4 323 1 277 1 41 2 236 2 279 1 
262 1 23 1 263 1 51 2 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 318 1 102 1 369 1 183 1 371 4 160 2 344 1 345 1 295 1 164 1 186 4 110 4 252 1 323 1 165 4 277 1 69 1 41 1 256 1 118 2 120 2 236 2 73 1 309 2 279 1 260 2 122 1 221 1 
262 1 23 1 263 1 51 2 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 318 1 102 1 369 1 183 1 371 4 160 2 344 1 345 1 295 1 164 1 186 4 110 4 252 1 323 1 165 4 277 1 69 1 41 1 256 1 118 2 120 2 236 2 73 1 309 2 279 1 260 2 122 1 221 1 
262 1 263 1 51 2 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 102 1 89 2 369 1 183 1 371 4 292 1 344 1 345 1 295 1 164 1 186 4 110 4 252 1 114 2 323 1 165 4 277 1 41 1 256 1 118 2 236 2 143 1 73 1 309 2 47 2 279 1 122 1 280 1 221 1 
262 1 23 1 263 1 51 3 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 318 1 102 1 369 1 243 1 183 1 371 5 160 2 344 1 345 1 295 1 164 1 186 4 110 5 252 1 323 1 165 4 277 1 69 1 41 1 256 1 118 3 120 2 236 2 73 1 279 1 309 3 260 2 122 1 221 1 
262 1 23 1 263 1 51 3 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 318 1 102 1 369 1 243 1 183 1 371 5 160 2 344 1 345 1 295 1 164 1 186 4 110 5 252 1 323 1 165 4 277 1 69 1 41 1 256 1 118 3 120 2 236 2 73 1 279 1 309 3 260 2 122 1 221 1 
262 1 263 1 51 2 0 2 359 1 222 1 78 1 199 1 287 2 202 1 228 1 241 1 177 1 102 1 89 2 183 1 371 4 344 1 345 1 295 1 164 1 186 4 110 4 252 1 114 2 323 1 165 4 277 1 41 1 256 1 118 2 236 2 143 1 73 1 309 2 47 2 279 1 122 1 221 1 
195 2 173 1 334 1 223 8 79 1 53 2 266 2 3 1 5 2 6 4 157 1 241 1 366 2 29 1 204 1 179 1 321 7 368 1 319 2 180 1 129 1 230 2 161 3 64 1 133 1 136 1 298 1 36 2 250 2 252 1 234 1 376 8 45 1 73 1 257 2 311 2 355 1 313 1 330 2 
49 1 195 1 53 1 200 1 269 1 154 1 6 2 241 1 366 1 368 1 319 3 9 1 103 1 247 1 136 1 349 1 36 1 250 1 350 1 252 1 300 1 234 2 117 1 326 1 308 1 73 1 380 1 311 1 313 1 
195 1 124 1 53 1 269 1 154 1 83 2 6 2 366 1 368 3 319 6 129 1 205 1 103 1 132 1 349 1 187 1 36 1 250 1 350 2 190 1 232 1 234 3 326 1 311 1 380 2 123 1 
49 2 195 2 315 1 174 1 53 2 269 1 83 1 154 4 6 4 339 3 366 2 178 3 319 14 368 8 9 1 10 1 103 11 133 1 137 1 249 1 349 2 36 2 250 1 350 2 300 1 68 1 234 6 255 1 326 11 308 2 380 1 311 2 355 1 
195 1 24 1 223 1 53 1 5 1 58 1 83 1 154 1 26 1 6 2 60 1 241 1 366 1 321 1 319 2 368 1 9 1 290 1 230 1 161 1 208 1 133 1 66 1 136 1 298 1 250 1 36 1 252 2 18 1 234 1 168 1 376 1 257 1 73 2 311 1 355 1 330 1 313 1 
49 2 195 3 151 1 53 3 58 1 5 2 154 7 6 6 60 2 241 1 9 1 159 2 205 1 63 2 161 2 103 7 245 2 66 2 298 1 349 3 250 3 350 8 252 3 300 2 253 1 168 2 255 4 308 2 73 3 257 2 311 3 355 1 313 1 124 1 24 2 223 3 79 1 269 3 83 2 366 3 321 3 319 20 368 10 181 2 271 2 230 2 132 1 133 1 136 1 187 1 36 3 232 1 190 1 278 1 234 10 376 3 326 7 380 4 330 1 
195 1 349 1 250 1 36 1 350 1 53 1 299 1 154 1 6 2 255 1 366 1 326 1 319 2 368 2 308 1 129 1 311 1 103 1 
195 1 250 1 36 1 350 1 53 1 300 1 269 1 154 1 6 2 234 2 366 1 326 1 319 2 129 1 380 1 311 1 272 1 103 1 
49 1 195 1 349 1 250 1 36 1 350 2 53 1 300 1 269 1 154 2 234 2 6 2 255 1 366 1 326 2 319 4 368 2 308 1 129 1 380 1 311 1 103 2 
195 1 349 1 250 1 36 1 350 1 53 1 299 1 154 1 6 2 255 1 366 1 326 1 319 2 368 2 180 1 308 1 311 1 103 1 
195 1 250 1 36 1 350 1 53 1 300 1 269 1 154 1 6 2 234 2 366 1 326 1 319 2 180 1 380 1 311 1 272 1 103 1 
49 1 195 1 349 1 250 1 36 1 350 2 53 1 300 1 269 1 154 2 234 2 6 2 255 1 366 1 326 2 319 4 368 2 180 1 308 1 380 1 311 1 103 2 
49 1 195 1 349 1 250 1 36 1 350 2 53 1 300 1 269 1 154 2 234 2 6 2 255 1 366 1 326 2 368 2 319 4 308 1 380 1 311 1 103 2 
195 1 24 1 223 1 53 1 5 1 83 1 6 2 60 1 366 1 368 1 319 2 321 1 230 1 161 1 245 1 133 1 66 1 250 1 36 1 252 1 234 1 168 1 376 1 257 1 73 1 311 1 355 1 330 1 
195 1 335 1 223 1 337 1 53 1 5 1 83 1 153 1 6 2 366 1 368 1 319 2 321 1 230 1 161 1 133 1 66 1 250 1 36 1 252 1 234 1 168 1 376 1 257 1 73 1 311 1 355 1 330 1 
49 1 195 1 349 1 250 1 36 1 350 2 53 1 300 1 269 1 154 2 234 2 6 2 255 1 366 1 326 2 319 4 368 2 308 1 9 1 380 1 311 1 103 2 
49 1 195 1 334 1 24 1 223 1 53 1 269 1 5 1 154 2 6 2 60 1 366 1 319 4 368 2 321 1 159 1 230 1 161 1 103 2 245 1 66 1 349 1 250 1 36 1 350 2 300 1 252 1 234 2 168 1 255 1 376 1 326 2 308 1 257 1 73 1 380 1 311 1 
49 1 195 1 53 1 269 1 154 1 6 2 241 1 270 1 366 1 368 2 319 3 9 1 103 1 247 1 136 1 349 1 36 1 250 1 350 1 300 1 252 1 234 1 255 1 117 1 326 1 308 1 73 1 311 1 313 1 
49 3 282 1 336 1 360 1 53 2 269 3 6 4 364 2 339 2 366 2 178 1 319 19 368 9 106 1 137 1 349 3 36 2 17 1 350 6 300 3 68 1 234 10 255 3 40 2 141 1 308 3 329 1 147 1 380 3 311 2 
49 3 282 1 333 2 50 1 360 1 53 3 240 1 81 1 269 2 267 1 6 6 364 4 339 2 366 3 178 2 319 26 368 14 15 1 349 3 36 3 213 1 350 4 17 1 300 2 68 2 234 12 255 2 40 1 141 2 308 3 329 1 147 2 380 2 311 3 
49 4 282 1 333 1 50 1 53 3 240 1 6 6 339 4 205 1 15 1 106 1 349 5 213 1 350 8 17 1 300 4 68 3 255 4 308 4 311 3 124 1 360 1 269 5 267 1 81 1 364 4 366 3 178 3 368 20 319 41 132 1 137 1 187 1 36 3 190 1 232 1 234 21 40 1 141 2 329 1 147 1 379 1 380 4 
49 4 282 1 333 2 50 1 124 1 360 1 240 1 53 4 81 1 267 1 269 4 6 8 364 4 339 4 366 4 178 3 319 38 368 20 205 1 132 1 106 1 15 1 137 1 187 1 349 5 36 4 213 1 17 1 350 7 300 3 232 1 190 1 68 3 234 18 255 3 40 1 141 2 308 4 329 1 379 1 147 1 380 4 311 4 
49 7 282 1 333 1 50 1 124 1 360 1 240 1 53 2 81 1 267 1 269 8 6 4 364 4 339 4 366 2 178 4 319 52 368 27 205 1 10 2 132 1 15 1 137 2 187 1 349 8 36 2 213 1 17 1 350 14 300 7 232 1 190 1 68 2 234 25 255 7 40 1 141 1 308 7 329 1 147 1 380 7 311 2 
104 1 62 1 8 1 16 1 7 1 128 1 374 1 206 1 194 1 227 1 
316 1 74 1 
8 1 16 1 7 1 128 1 374 1 80 1 138 1 227 1 209 1 
104 1 134 1 332 1 296 1 186 1 16 1 374 1 165 1 227 1 276 2 233 1 41 1 7 1 8 1 128 1 206 1 194 1 33 1 
104 1 134 1 332 1 296 1 186 1 16 1 374 1 165 1 227 1 276 2 233 1 41 1 7 1 8 1 128 1 206 1 194 1 33 1 
104 1 134 1 332 1 296 1 186 1 16 1 374 1 165 1 227 1 276 2 233 1 41 1 7 1 8 1 128 1 206 1 194 1 33 1 
1 1 109 1 372 1 
1 1 109 1 372 1 
331 1 301 1 
331 1 1 1 301 1 
135 1 32 1 
316 1 225 1 83 1 227 1 241 2 8 1 7 1 32 1 128 1 134 1 135 1 136 2 186 1 16 1 374 1 252 2 67 1 165 1 276 1 233 1 218 1 39 1 144 1 73 2 310 1 74 1 313 2 
109 1 372 1 
331 1 1 1 301 1 
314 1 195 1 173 1 223 2 53 1 266 2 226 1 5 1 6 2 241 2 366 1 204 1 368 1 319 2 321 2 9 1 230 1 161 1 343 1 133 1 163 1 250 1 274 1 36 1 252 2 234 1 376 2 257 1 73 2 311 1 355 1 
76 1 223 1 3 1 5 1 235 1 376 1 325 1 321 1 320 1 257 1 230 1 161 1 64 1 330 1 
212 1 273 2 35 1 239 1 223 1 362 1 79 1 175 1 113 1 353 1 235 1 376 1 321 1 320 1 257 1 370 1 230 1 294 1 
212 1 273 2 334 1 35 1 239 1 223 2 362 1 79 1 175 1 113 1 353 1 235 1 376 2 321 2 320 1 257 1 370 1 230 1 294 1 
212 1 273 2 35 1 223 1 362 1 79 1 175 1 113 1 353 1 376 1 321 1 320 1 257 1 370 1 291 1 230 1 294 1 
61 1 
75 1 263 1 199 1 277 1 228 1 41 1 170 1 183 1 122 1 345 1 
49 2 346 2 347 5 349 2 300 2 114 10 269 2 41 5 308 2 237 1 181 1 122 5 260 5 219 5 345 5 
41 1 186 1 236 1 110 1 183 1 165 1 
263 2 223 4 199 2 98 1 3 1 5 1 288 1 176 1 228 2 242 1 321 4 229 2 182 1 230 1 161 1 64 1 345 2 185 2 186 3 110 4 352 2 165 3 375 1 277 1 376 4 236 2 257 1 122 2 330 2 
75 1 41 1 183 1 170 1 122 1 123 1 345 1 
263 1 186 1 110 1 199 1 114 1 165 1 277 1 228 1 41 2 318 1 120 1 236 1 183 1 122 1 260 1 160 1 345 1 
262 1 263 2 149 1 223 1 199 2 55 1 5 1 228 2 101 2 321 1 342 1 341 1 230 1 161 4 345 1 246 1 91 1 186 2 110 2 352 1 165 2 37 1 277 2 168 1 376 1 236 1 46 1 257 2 357 1 330 1 
49 2 263 2 50 1 240 1 199 2 81 1 267 1 269 2 125 1 339 1 228 2 178 1 229 1 183 2 345 8 297 1 15 1 186 1 346 2 347 5 349 2 110 1 300 2 114 6 352 1 165 1 68 1 277 2 41 5 236 1 308 2 237 1 260 3 122 5 219 5 
263 1 124 1 199 1 268 1 269 1 126 1 228 1 241 1 102 1 11 1 345 2 231 1 136 1 346 2 186 1 349 2 252 1 190 1 165 1 232 1 277 1 69 1 191 1 117 1 237 1 73 1 122 2 313 1 
195 1 24 1 223 1 53 1 5 1 83 1 6 2 60 1 241 2 366 1 319 1 321 1 11 1 230 1 161 1 322 1 133 1 245 1 136 2 66 1 36 1 250 1 252 3 234 1 168 1 117 2 376 1 73 3 257 1 311 1 330 1 313 2 
263 1 347 2 187 1 199 1 114 4 352 1 277 1 228 1 41 4 229 1 183 2 260 2 122 2 219 2 345 1 
135 1 8 1 128 1 206 1 38 1 
378 1 8 1 128 1 
378 1 8 1 128 1 
378 1 8 1 128 1 
8 1 128 1 317 1 
8 1 128 1 317 1 
8 1 128 1 317 1 
8 1 128 1 
16 1 7 1 
124 2 349 2 36 1 53 1 17 1 350 5 268 1 190 2 232 1 269 2 6 2 234 5 255 2 366 1 368 5 319 10 311 1 380 3 
349 1 36 1 17 1 53 1 350 1 6 2 255 1 366 1 368 2 319 2 308 1 311 1 
49 1 349 1 36 1 350 2 17 1 53 1 300 1 269 1 234 2 6 2 255 1 366 1 368 2 319 4 308 1 380 1 311 1 
333 1 106 1 124 1 36 3 17 1 53 3 350 2 190 1 234 2 6 6 255 1 366 3 319 3 368 1 238 1 311 3 380 1 
49 3 333 2 124 3 53 5 286 1 57 1 99 1 269 5 6 10 339 4 366 5 178 3 319 34 368 16 205 1 132 1 106 1 137 1 187 1 349 5 36 5 17 1 350 12 300 3 232 2 190 3 68 1 234 18 255 5 119 1 308 3 238 1 311 5 380 7 
124 1 240 1 53 1 269 1 6 2 339 1 366 1 178 1 319 8 368 4 205 1 132 1 187 1 349 1 36 1 17 1 350 2 190 1 232 1 68 1 234 4 311 1 380 2 
49 1 124 1 240 1 53 2 269 1 99 1 6 4 339 2 366 2 178 1 319 11 368 6 205 1 132 1 137 1 187 1 349 2 36 2 17 1 350 3 232 1 190 1 68 1 234 5 255 1 308 1 380 2 311 2 
49 2 333 1 50 1 124 1 240 1 53 3 99 1 81 1 267 1 269 3 6 6 339 1 366 3 178 1 319 19 368 9 205 1 132 1 15 1 187 1 349 3 36 3 17 1 350 4 300 2 232 1 190 1 68 1 234 10 255 1 308 2 311 3 380 3 
49 2 333 1 50 1 124 1 240 1 53 3 99 1 267 1 269 2 81 1 6 6 339 1 366 3 178 1 319 17 368 10 205 1 132 1 15 1 187 1 349 3 36 3 17 1 350 5 300 1 232 1 190 1 68 1 234 7 255 2 308 2 311 3 380 3 
124 1 240 1 53 1 269 1 6 2 339 1 366 1 178 1 319 8 368 4 205 1 132 1 187 1 349 1 36 1 17 1 350 2 190 1 232 1 68 1 234 4 311 1 380 2 
49 2 50 1 240 1 53 1 267 1 269 2 81 1 6 2 339 1 366 1 178 1 319 12 368 6 15 1 349 2 36 1 17 1 350 2 300 2 68 1 234 6 255 1 308 2 311 1 380 1 
49 2 333 2 50 1 124 1 240 1 53 4 81 1 99 1 267 1 269 2 6 8 339 1 366 4 178 1 319 18 368 10 205 1 132 1 15 1 187 1 349 3 36 4 17 1 350 5 300 1 232 1 190 1 68 1 234 8 255 2 308 2 311 4 380 3 
49 3 333 2 50 1 240 1 53 4 81 1 267 1 269 2 6 8 339 1 366 4 178 1 319 16 368 9 15 1 106 1 349 3 36 4 17 1 350 6 300 2 68 1 234 7 255 3 308 3 311 4 380 3 
124 3 349 1 350 6 269 1 190 3 232 1 234 4 255 3 319 7 368 3 205 1 380 3 132 2 
49 2 333 2 50 1 124 1 240 1 53 4 81 1 267 1 269 2 6 8 339 1 366 4 178 1 319 18 368 10 205 1 132 1 15 1 106 1 187 1 349 3 36 4 17 1 350 4 300 1 232 1 190 1 68 1 234 8 255 1 308 2 311 4 380 3 
333 1 124 1 187 1 349 1 36 2 350 3 53 2 269 1 232 1 190 1 234 4 6 4 255 1 366 2 319 8 368 4 205 1 380 2 311 2 132 1 
124 1 187 1 349 1 350 2 190 1 232 1 269 1 234 3 368 3 319 6 205 1 380 2 123 1 132 1 
49 1 349 1 36 1 350 2 53 1 300 1 269 1 99 1 234 2 6 2 255 1 366 1 368 2 319 4 308 1 380 1 311 1 
49 1 137 1 349 1 350 2 300 1 269 1 68 1 234 4 339 2 255 1 178 1 319 7 368 3 308 1 380 1 
49 2 333 2 124 2 53 2 269 3 6 4 339 2 366 2 178 2 368 11 319 23 205 1 10 1 132 1 137 1 187 1 349 3 249 1 36 2 350 9 300 2 232 1 190 2 234 12 255 4 308 2 238 1 380 5 311 2 
339 1 319 1 234 1 
178 1 319 1 368 1 
49 1 349 1 36 1 53 1 350 3 300 1 99 1 269 1 6 2 234 3 255 1 366 1 319 6 368 3 308 1 181 1 311 1 380 2 
49 2 50 1 240 1 53 1 267 1 269 2 81 1 6 2 339 1 366 1 178 1 319 12 368 6 15 1 349 2 36 1 17 1 350 2 300 2 68 1 234 6 255 1 308 2 311 1 380 1 
124 1 349 1 350 2 232 1 269 1 190 1 234 3 255 1 368 3 319 6 380 1 
333 1 124 1 36 1 350 2 53 1 190 1 234 2 6 2 255 1 366 1 368 1 319 3 205 1 238 1 380 1 311 1 132 1 
241 1 19 1 197 1 73 1 252 1 83 1 202 1 
197 1 252 1 83 1 202 1 241 1 28 1 19 1 20 1 328 1 73 1 207 1 356 1 
334 1 348 1 223 4 3 1 338 1 5 1 376 4 321 4 257 1 230 1 161 1 64 1 330 1 
185 1 198 1 223 2 214 1 5 1 278 1 85 1 168 1 158 1 376 2 321 2 257 2 230 1 161 1 
212 1 273 1 376 1 321 1 223 1 362 1 257 1 175 1 230 1 330 1 
163 1 334 1 223 2 79 1 5 1 376 2 204 1 321 2 257 1 230 1 161 1 
185 1 334 1 223 5 3 1 338 1 5 2 157 1 376 5 29 1 204 1 321 4 257 2 230 2 161 3 64 1 330 1 
185 1 334 1 107 1 223 5 3 1 338 1 5 2 157 1 376 5 204 1 321 4 257 2 230 2 161 3 64 1 330 1 
376 1 321 1 223 1 257 1 230 1 3 1 161 1 5 1 123 1 64 1 330 1 
66 1 136 1 298 1 223 1 252 2 5 1 83 1 168 1 60 1 241 1 376 1 321 1 257 1 73 2 230 1 161 1 313 1 330 1 
222 1 223 1 5 2 83 1 60 1 241 2 102 1 321 1 230 1 161 3 185 1 136 2 66 1 298 1 252 2 93 1 168 2 256 1 376 1 72 1 73 2 257 1 313 1 
222 1 223 2 337 1 5 2 83 1 241 2 102 1 321 2 230 1 161 3 185 1 136 2 66 1 348 1 298 1 252 2 93 1 168 2 256 1 376 2 72 1 73 2 257 1 313 1 
262 1 223 3 5 1 365 1 101 1 321 3 30 1 342 1 183 1 230 1 161 4 185 1 348 1 186 2 110 1 165 2 93 1 168 1 41 1 376 3 72 1 257 1 330 1 
262 1 185 1 91 1 348 1 186 2 223 3 110 1 5 1 165 2 93 1 168 1 41 1 376 3 101 1 321 3 72 1 257 1 342 1 183 1 230 1 161 4 330 1 
376 1 321 1 179 1 223 1 257 1 230 1 
105 1 334 1 223 7 79 1 214 1 266 1 5 2 168 1 157 1 158 1 29 1 376 7 204 1 179 1 321 6 45 1 341 1 257 3 230 2 161 3 330 2 
195 2 334 1 53 2 5 1 154 1 6 4 60 1 241 1 159 1 9 1 205 1 161 1 103 1 245 1 66 1 298 1 349 1 250 2 350 2 252 2 168 1 73 2 257 1 311 2 313 1 24 1 124 1 223 1 269 1 83 2 366 2 321 1 368 3 319 6 271 1 230 1 132 1 136 1 187 1 36 2 274 1 190 1 232 1 234 3 376 1 326 1 380 2 
75 1 262 1 263 2 223 1 199 2 98 1 55 1 228 2 101 1 321 1 342 1 183 1 161 2 345 1 91 1 186 3 110 2 165 3 37 1 277 2 218 1 41 1 376 1 236 1 46 1 170 1 122 1 330 1 
149 1 334 1 223 2 5 1 168 1 376 2 179 1 321 2 342 1 341 1 257 2 230 1 161 2 
66 1 136 1 298 1 223 1 337 1 252 2 5 1 83 1 168 1 241 1 376 1 321 1 257 1 73 2 230 1 161 1 313 1 330 1 
185 1 105 1 223 1 214 1 5 1 168 1 158 1 376 1 321 1 341 1 257 2 230 1 161 1 
189 1 312 1 83 1 131 1 167 1 
262 1 186 2 222 1 359 1 189 2 165 2 363 1 83 1 100 1 218 1 167 2 41 1 256 1 306 1 102 1 43 1 183 1 312 2 131 1 
314 1 241 1 73 1 252 1 189 1 226 1 343 1 131 1 167 1 
43 1 100 1 131 1 
172 1 264 1 258 1 302 1 90 1 148 1 275 1 115 1 
14 1 248 1 172 4 264 1 302 2 351 2 275 1 324 1 115 4 127 1 258 3 13 1 148 2 65 1 
172 2 264 1 52 1 302 1 54 1 275 1 351 1 115 2 59 1 258 1 90 1 148 1 
172 3 248 2 264 1 302 1 275 1 115 3 127 2 258 1 90 1 13 1 148 1 97 1 
196 2 283 1 258 2 92 1 
172 1 264 1 244 1 90 1 275 1 115 1 
172 2 264 1 258 1 302 1 90 1 148 1 351 1 275 1 84 1 115 2 
265 1 
172 1 264 1 258 1 302 1 90 1 148 1 275 1 115 1 
258 1 302 1 148 1 123 1 
172 1 264 1 258 1 302 1 148 1 275 1 115 1 
172 1 116 1 34 1 
172 3 248 1 264 1 302 1 275 1 115 3 127 2 258 1 90 1 130 1 13 1 148 1 
172 2 264 1 258 1 302 1 148 1 351 1 275 1 115 2 70 1 
14 1 172 1 212 1 273 1 35 1 264 1 275 1 115 1 31 1 90 1 258 1 
172 1 264 1 258 1 302 1 90 1 275 1 115 1 
172 1 264 1 302 2 90 1 148 1 275 1 115 1 
172 2 358 1 264 2 302 1 275 2 115 2 86 1 258 1 90 1 261 1 
14 1 172 3 264 1 302 1 275 1 351 2 324 1 115 3 84 1 90 1 258 2 148 1 12 1 
172 2 212 1 273 2 35 1 264 1 25 1 362 1 302 1 275 1 113 1 351 1 115 2 258 1 90 1 148 1 
14 1 172 4 264 2 302 1 275 2 351 2 324 1 115 4 70 1 367 1 90 1 258 2 148 1 
172 3 264 1 302 1 351 1 275 1 115 3 84 1 127 1 90 1 258 1 148 1 
14 1 258 1 324 1 65 1 
258 1 302 1 

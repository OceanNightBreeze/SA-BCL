#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEqualsNull()V ERROR java.lang.NullPointerException 59 (295,316) (295,316) 
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V FAILED junit.framework.AssertionFailedError 

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z | STATEMENT | 2407 | stmt -> ;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z | OPERATOR | 8368 | && -> ||
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 39 2 45 2 220 9 46 9 118 1 21 1 293 1 295 1 344 1 7 1 316 1 200 1 270 1 170 1 26 1 74 1 299 2 373 2 13 3 59 4 278 1 233 2 177 6 354 1 89 2 141 2 255 4 
1 1 39 2 45 2 220 9 46 9 118 1 21 1 293 1 295 1 344 1 7 1 316 1 200 1 270 1 170 1 26 1 74 1 299 2 373 2 13 3 59 4 278 1 233 2 177 6 354 1 89 2 141 2 255 4 
1 1 39 2 45 2 220 10 46 10 118 1 21 1 293 1 295 1 344 1 7 1 316 1 200 1 270 1 170 1 26 1 74 1 299 2 373 2 13 4 59 5 278 1 233 2 177 7 354 1 89 2 141 2 255 5 
39 2 45 2 220 7 46 7 118 1 21 1 293 1 295 1 344 1 7 1 316 1 200 1 270 1 170 1 26 1 74 1 299 1 373 2 13 2 59 3 278 1 233 2 177 4 354 1 89 2 141 2 255 3 
1 1 373 1 39 1 13 1 59 2 46 4 220 4 233 1 177 3 293 1 295 1 316 1 89 1 270 1 170 1 141 1 255 2 299 2 
373 1 39 1 259 1 45 1 46 2 220 2 233 1 354 1 293 1 295 1 316 1 224 1 89 1 26 1 142 1 
373 2 39 2 13 1 59 1 45 1 46 3 220 3 177 1 293 1 295 1 316 1 74 1 255 1 
1 1 39 2 45 1 220 9 46 9 118 1 121 1 293 1 295 1 316 1 265 1 270 1 170 1 74 1 299 2 373 2 13 3 59 4 278 1 177 7 233 1 89 1 141 1 255 4 
1 1 39 2 45 1 220 9 46 9 118 1 121 1 293 1 295 1 316 1 265 1 270 1 170 1 74 1 299 2 373 2 13 3 59 4 278 1 177 7 233 1 89 1 141 1 255 4 
53 1 154 1 307 1 
315 1 
64 2 379 2 349 2 212 2 271 1 135 2 126 2 201 1 
287 1 64 2 365 1 336 1 69 1 20 1 3 2 290 1 5 2 262 1 6 2 317 1 102 1 271 1 54 1 323 1 126 2 201 1 273 1 127 1 11 1 349 2 134 1 304 1 204 2 109 1 135 2 231 1 137 1 83 1 355 1 327 1 379 3 251 1 235 2 212 3 256 1 
160 1 64 1 379 1 349 1 357 1 347 1 212 1 135 1 126 1 201 1 
300 1 229 1 68 1 241 1 154 1 379 1 50 1 101 1 53 1 268 1 212 1 347 1 126 1 172 1 
300 1 64 1 349 1 68 1 241 1 154 1 135 1 379 1 50 2 53 1 268 2 212 1 347 1 126 1 172 1 
129 1 294 1 50 1 268 1 35 1 
82 1 294 1 50 2 53 1 268 2 154 1 35 1 152 1 
50 1 268 1 35 1 
160 1 64 1 349 1 375 1 135 1 294 1 50 1 357 1 379 1 268 1 347 1 212 1 201 1 126 1 
154 1 
294 1 50 2 138 1 53 1 268 2 154 1 35 1 152 1 
161 1 78 1 301 1 143 2 66 1 288 2 313 1 190 2 154 1 166 1 294 2 50 5 24 1 53 1 268 5 35 2 322 1 214 1 152 1 
307 1 271 1 
64 1 349 1 303 1 135 1 379 2 51 1 212 2 271 2 126 2 
25 1 289 1 169 1 
134 1 175 1 69 1 365 1 204 1 3 1 262 1 355 1 327 1 379 1 235 1 212 1 271 1 54 1 273 1 11 1 
257 1 349 1 134 1 365 1 69 1 289 1 204 1 135 1 3 1 262 1 355 1 327 1 379 2 235 1 151 1 212 2 54 1 273 1 126 1 11 1 
64 1 379 3 349 3 151 1 212 3 271 1 135 3 126 3 
160 1 379 1 349 1 347 1 212 1 135 1 126 1 
64 1 379 1 349 1 303 1 51 1 347 1 212 1 135 1 126 1 
257 1 64 2 68 1 241 1 365 1 69 1 20 1 290 1 3 1 5 2 262 1 6 1 244 1 50 1 317 1 268 1 151 1 347 1 271 1 54 1 323 1 273 1 126 3 201 1 127 1 11 1 172 1 300 1 349 3 134 1 303 1 304 1 204 1 109 1 135 3 231 1 137 1 355 1 327 1 379 4 235 1 186 1 212 4 256 1 
221 1 379 2 349 1 229 1 212 2 151 1 271 1 135 1 126 2 
257 1 300 1 64 1 349 3 303 1 68 1 241 1 154 1 135 3 244 1 146 1 50 1 379 3 268 1 347 1 151 2 212 3 126 3 172 1 
64 1 349 2 303 1 289 1 135 2 379 2 151 1 25 1 212 2 126 2 
134 1 69 1 365 1 204 1 3 1 262 1 355 1 327 1 379 1 235 1 212 1 271 1 54 1 273 1 11 1 
69 1 365 1 204 1 3 1 22 1 262 1 355 1 327 1 379 1 235 1 212 1 271 1 359 1 54 1 273 1 
47 1 289 2 20 1 5 2 367 1 6 4 122 1 223 1 49 1 317 1 25 2 169 2 323 1 56 1 55 1 275 1 350 1 304 2 109 1 14 1 231 1 137 1 251 2 87 1 
379 1 349 1 68 1 347 1 212 1 30 1 135 1 126 1 
257 1 64 1 349 4 303 1 229 1 364 1 135 4 221 1 379 5 151 2 212 5 271 1 360 1 126 5 
160 1 379 2 349 2 30 1 347 1 212 2 135 2 126 2 
107 1 119 1 
107 1 119 1 
94 1 333 1 
94 1 333 1 
94 1 333 1 
107 1 191 1 119 1 
107 1 191 1 119 1 
107 1 60 1 119 1 
65 1 107 2 88 1 94 1 119 2 333 1 
107 1 191 1 119 1 
334 1 107 1 119 1 
334 1 107 1 119 1 
334 1 107 1 119 1 
310 3 107 2 153 1 154 1 119 2 15 1 291 1 81 1 245 1 98 2 356 2 112 1 50 2 236 1 88 1 148 2 268 2 272 2 90 2 
310 1 132 1 348 1 107 1 349 2 60 1 119 1 135 2 32 1 243 1 98 1 356 1 343 1 112 1 379 2 50 1 329 1 268 1 148 1 212 2 271 1 308 1 90 1 126 2 
89 1 141 1 233 1 
89 1 142 1 233 1 
173 1 9 1 298 1 141 2 142 1 233 3 
173 1 9 1 141 1 142 1 233 2 97 1 
173 1 9 2 141 1 142 1 233 2 
258 1 143 1 288 1 188 1 190 1 313 1 2 1 47 1 193 1 263 1 294 4 343 1 223 1 315 3 50 5 268 5 53 1 322 3 152 1 132 1 275 1 301 2 154 2 248 1 14 1 232 2 209 2 329 1 332 1 285 1 35 1 361 2 
161 1 240 1 143 2 288 2 188 2 313 1 190 2 2 3 47 3 48 1 263 3 195 5 294 7 223 3 315 9 50 9 268 9 53 1 103 1 322 8 152 1 129 5 131 1 275 3 302 1 301 6 154 5 248 1 14 3 232 6 209 6 329 4 332 2 35 6 37 1 
258 1 161 1 143 1 288 1 188 1 190 1 2 2 47 1 263 1 294 2 223 1 315 4 50 3 53 1 268 3 322 3 275 1 301 2 154 3 14 1 232 2 209 2 329 1 332 1 285 1 361 1 
258 1 161 1 240 1 143 1 288 1 188 1 190 1 2 3 47 2 263 2 294 3 223 2 315 7 50 4 53 1 268 4 103 1 322 5 275 2 302 1 301 4 154 4 14 2 232 4 209 4 329 2 332 1 285 1 361 2 
327 1 8 1 307 1 
327 1 345 1 
362 1 
327 1 365 1 
327 3 99 1 8 2 365 1 72 1 262 1 
327 1 365 1 262 1 
327 1 158 1 
350 3 363 1 304 3 47 1 29 1 62 2 339 1 6 7 122 2 223 1 123 1 251 4 181 1 139 1 199 1 104 1 309 1 
350 3 363 1 304 3 47 1 29 1 62 2 339 1 6 7 122 2 223 1 123 1 251 4 181 1 139 1 199 1 104 1 309 1 
350 3 363 1 304 3 47 1 29 1 62 2 339 1 6 7 122 2 223 1 328 1 123 1 181 1 251 4 139 1 199 1 104 1 309 1 
363 2 117 4 260 1 47 4 20 1 5 2 6 31 339 2 263 3 122 5 223 4 123 2 124 1 317 1 199 1 104 1 275 3 350 10 304 15 29 5 109 1 176 1 14 3 111 1 62 3 326 1 137 1 179 1 181 1 251 16 139 2 331 1 309 1 238 3 
165 1 363 1 47 1 20 2 5 4 6 9 339 1 122 3 223 1 123 1 317 2 104 1 350 4 304 4 29 1 109 2 111 1 62 2 137 2 251 5 181 1 139 1 36 1 309 1 
39 1 19 1 45 1 220 2 46 2 3 1 242 1 71 1 292 1 293 1 295 1 316 1 298 1 54 1 27 1 273 1 73 1 373 1 204 1 177 1 233 2 282 1 184 1 235 1 86 1 89 1 141 1 142 1 215 1 
39 1 19 1 45 1 220 3 46 3 3 1 242 1 71 1 292 1 295 1 316 1 298 1 54 1 106 1 27 1 273 1 73 1 225 1 373 1 204 1 177 2 233 2 281 1 282 1 184 1 235 1 89 1 141 1 142 1 
45 1 46 2 220 2 204 1 3 1 242 1 71 1 233 2 177 2 292 1 281 1 295 1 235 1 184 1 316 1 89 1 298 1 54 1 106 1 141 1 142 1 273 1 27 1 73 1 
39 1 69 1 45 2 365 1 220 1 46 1 3 1 346 1 54 1 273 1 27 2 73 2 225 1 226 1 373 1 374 1 204 1 279 1 327 1 182 1 235 1 184 2 237 1 
39 1 19 1 45 1 220 1 46 1 3 1 242 1 71 1 292 1 293 1 298 1 54 1 27 1 273 1 73 1 373 1 204 1 233 2 281 1 282 1 184 1 235 1 89 1 141 1 142 1 215 1 
113 1 
143 1 42 1 188 1 288 1 44 2 190 1 192 1 241 1 2 2 3 2 100 2 50 5 147 2 346 1 101 1 53 1 347 1 54 1 152 3 300 1 57 1 301 2 154 2 204 2 110 2 352 1 157 2 253 1 212 1 116 1 68 1 313 1 365 1 69 2 222 4 315 2 268 5 319 1 322 2 273 1 126 1 172 1 130 2 274 1 229 1 80 2 84 1 327 1 283 1 377 1 379 1 235 2 35 6 34 1 237 1 
116 1 68 1 241 1 222 2 50 3 100 1 101 1 319 1 268 3 347 1 126 1 172 1 152 1 300 1 274 1 229 1 283 1 379 1 138 1 212 1 253 1 35 2 
116 1 68 1 241 1 44 1 222 3 50 3 101 1 319 1 268 3 53 1 347 1 126 1 172 1 152 1 300 1 274 1 229 1 154 1 283 1 379 1 138 1 35 1 212 1 253 1 
116 1 68 1 241 1 44 1 222 3 50 3 100 1 101 1 319 1 268 3 53 1 347 1 126 1 152 1 172 1 300 1 274 1 229 1 154 1 80 1 283 1 379 1 138 1 212 1 253 1 35 2 
143 1 288 1 241 1 44 4 190 1 2 2 100 4 50 5 147 2 101 1 198 1 53 5 347 1 152 3 300 1 57 1 301 1 154 5 352 1 110 2 249 1 157 2 212 1 253 1 116 1 219 1 68 1 313 1 222 6 125 1 268 5 319 1 322 1 126 1 172 1 274 1 130 2 229 1 80 4 283 1 379 1 138 1 140 1 35 7 
143 1 288 1 241 1 190 1 44 2 2 2 50 4 100 2 147 2 101 1 53 1 347 1 152 2 300 1 57 1 301 1 154 2 352 1 110 2 157 2 212 1 253 1 116 1 68 1 313 1 222 4 315 2 268 4 319 1 322 1 126 1 172 1 274 1 130 2 229 1 80 2 283 1 84 1 379 1 35 4 
116 1 143 1 219 1 288 1 68 1 44 2 241 1 313 1 190 1 2 2 222 4 100 2 50 4 147 2 101 1 198 1 53 1 319 1 268 4 347 1 322 1 126 1 152 2 172 1 130 2 300 1 274 1 57 1 301 1 229 1 154 1 110 2 352 1 80 2 249 1 157 2 283 1 379 1 35 4 212 1 253 1 
116 1 143 1 219 1 288 1 68 1 44 2 241 1 313 1 190 1 2 2 222 4 100 2 50 4 147 2 101 1 198 1 53 1 319 1 268 4 347 1 322 1 126 1 152 2 172 1 130 2 300 1 274 1 57 1 301 1 229 1 154 1 110 2 352 1 80 2 249 1 157 2 283 1 379 1 35 4 212 1 253 1 
116 1 143 1 288 1 68 1 44 2 93 2 241 1 314 1 313 1 190 1 222 4 167 1 315 2 100 2 50 4 147 2 101 1 53 1 319 1 268 4 347 1 322 1 126 1 152 2 172 1 300 1 274 1 57 1 301 1 229 1 154 1 247 2 110 2 80 2 249 1 283 1 180 1 379 1 35 4 212 1 253 1 
116 1 143 1 219 1 288 1 68 1 190 1 313 1 241 1 44 3 2 2 222 5 50 4 100 3 147 2 101 1 198 1 53 1 319 1 268 4 347 1 322 1 126 1 152 2 172 1 130 2 300 1 274 1 57 1 301 1 229 1 154 1 110 2 352 1 249 1 80 3 157 2 283 1 379 1 140 1 212 1 253 1 35 5 
116 1 143 1 219 1 288 1 68 1 190 1 313 1 241 1 44 3 2 2 222 5 50 4 100 3 147 2 101 1 198 1 53 1 319 1 268 4 347 1 322 1 126 1 152 2 172 1 130 2 300 1 274 1 57 1 301 1 229 1 154 1 110 2 352 1 249 1 80 3 157 2 283 1 379 1 140 1 212 1 253 1 35 5 
143 1 288 1 241 1 190 1 93 2 44 2 50 4 100 2 147 2 101 1 53 1 347 1 152 2 300 1 57 1 301 1 247 2 154 1 110 2 212 1 253 1 116 1 68 1 313 1 222 4 315 2 268 4 319 1 322 1 126 1 172 1 274 1 229 1 80 2 283 1 84 1 180 1 379 1 35 4 
363 1 289 1 47 1 20 1 5 2 6 6 122 2 223 1 123 1 317 1 25 1 104 1 271 2 169 1 323 1 56 1 350 2 304 3 109 1 231 1 62 1 137 1 181 1 251 3 307 1 309 1 
117 3 260 1 261 1 289 11 47 2 20 2 5 4 6 14 263 2 122 1 223 1 317 2 102 1 150 1 25 4 271 1 169 11 323 1 127 1 227 1 12 1 275 1 350 2 304 6 29 1 109 2 14 2 231 2 137 2 179 1 251 8 91 1 238 3 
257 1 365 1 69 1 261 1 3 1 20 1 5 2 262 1 6 2 317 1 102 1 25 1 151 1 271 1 54 1 273 1 323 1 126 1 127 1 11 1 349 1 134 1 175 1 304 1 204 1 135 1 109 1 231 1 136 1 137 1 355 1 327 1 85 1 379 2 235 1 251 1 212 2 115 1 
289 7 47 3 3 3 290 2 5 6 338 2 6 20 102 1 104 1 151 1 105 1 54 2 11 2 349 1 350 8 304 10 204 3 305 2 109 3 351 2 14 2 62 1 210 1 156 2 355 2 251 10 212 3 309 1 257 1 162 1 363 1 69 1 365 2 261 1 20 3 262 2 263 2 122 4 223 3 123 1 317 3 25 7 271 2 169 7 126 1 323 3 273 2 127 1 275 2 134 2 29 4 135 1 231 3 281 1 137 3 327 2 379 3 181 1 235 3 
40 1 69 2 336 2 365 2 3 7 20 2 5 4 6 2 341 1 196 1 346 1 317 2 102 1 151 1 54 2 126 1 273 2 323 2 56 1 127 1 28 1 349 1 304 1 204 8 135 1 109 2 231 2 234 1 281 1 137 2 16 1 327 3 379 1 235 8 251 1 86 1 380 1 212 1 237 1 
64 1 289 1 261 1 47 1 20 1 5 2 263 1 6 3 122 1 223 1 370 1 317 1 25 1 169 1 323 1 126 1 275 1 350 1 349 1 303 1 304 2 135 1 109 1 14 1 231 1 137 1 379 1 251 1 212 1 
350 1 29 1 289 1 47 1 109 1 20 1 14 1 231 1 5 2 6 2 137 1 251 2 317 1 25 1 169 1 323 1 56 1 55 1 
275 1 350 1 304 2 289 1 109 1 20 1 231 1 5 2 6 2 137 1 122 1 223 1 317 1 87 1 25 1 169 1 323 1 56 1 
47 1 289 2 20 1 5 2 263 1 6 4 122 1 223 1 317 1 25 2 169 2 323 1 56 1 275 1 350 2 304 2 29 1 14 1 109 1 231 1 137 1 251 2 
350 1 29 1 289 1 47 1 109 1 20 1 14 1 231 1 5 2 234 1 6 2 137 1 251 2 317 1 25 1 169 1 323 1 55 1 
275 1 350 1 304 2 289 1 109 1 20 1 231 1 5 2 234 1 6 2 137 1 122 1 223 1 317 1 87 1 25 1 169 1 323 1 
47 1 289 2 20 1 5 2 263 1 6 4 122 1 223 1 317 1 25 2 169 2 323 1 275 1 350 2 304 2 29 1 14 1 109 1 231 1 234 1 137 1 251 2 
47 1 289 2 20 1 5 2 6 4 263 1 122 1 223 1 317 1 25 2 169 2 323 1 275 1 350 2 304 2 29 1 14 1 109 1 231 1 137 1 251 2 
365 1 69 1 290 1 3 1 20 1 5 2 262 1 6 2 317 1 102 1 271 1 54 1 273 1 323 1 127 1 11 1 134 1 304 1 204 1 109 1 231 1 137 1 355 1 327 1 379 1 251 1 235 1 212 1 
365 1 69 1 4 1 3 1 20 1 5 2 262 1 22 1 6 2 317 1 102 1 271 1 54 1 273 1 323 1 127 1 304 1 204 1 109 1 231 1 137 1 355 1 327 1 379 1 251 1 235 1 212 1 359 1 
47 1 261 1 289 2 20 1 5 2 263 1 6 4 122 1 223 1 317 1 25 2 169 2 323 1 275 1 350 2 304 2 29 1 14 1 109 1 231 1 137 1 251 2 
365 1 289 2 47 1 290 1 3 1 20 1 5 2 262 1 6 4 263 1 122 1 223 1 317 1 25 2 54 1 169 2 273 1 323 1 11 1 275 1 350 2 134 1 304 2 29 1 305 1 204 1 14 1 109 1 231 1 137 1 355 1 327 1 379 1 251 2 235 1 86 1 212 1 
64 1 261 1 47 1 289 1 20 1 5 2 263 1 6 3 223 1 317 1 25 1 169 1 323 1 126 1 275 1 350 1 349 1 303 1 304 1 29 1 135 1 109 1 280 1 14 1 231 1 137 1 379 1 251 2 212 1 
311 1 117 2 260 1 47 3 20 2 5 4 340 1 6 19 263 3 342 1 122 3 223 3 317 2 197 1 320 2 275 3 350 6 108 1 304 10 29 3 206 2 109 2 14 3 137 2 33 1 179 1 183 1 251 9 36 1 238 1 
311 2 164 1 117 2 260 2 47 3 20 3 5 6 340 1 6 26 263 3 342 2 122 2 223 2 317 3 197 1 320 4 133 1 275 2 350 4 304 12 29 2 206 1 155 1 109 3 14 3 111 2 137 3 17 1 183 1 306 1 251 14 18 1 36 1 238 2 
47 5 5 6 6 41 340 1 342 2 197 1 52 1 104 1 350 8 304 21 14 4 109 3 155 1 206 1 111 1 62 1 17 1 251 20 18 1 306 1 309 1 311 1 164 1 363 1 117 4 260 3 20 3 263 4 122 4 223 5 123 1 317 3 320 4 133 1 275 4 29 4 137 3 33 1 179 1 181 1 183 1 36 1 238 3 
311 1 363 1 164 1 117 4 260 3 47 5 20 4 5 8 340 1 6 38 263 4 342 2 122 4 223 4 123 1 52 1 317 4 197 1 320 4 104 1 133 1 275 3 350 7 304 18 29 3 206 1 155 1 109 4 14 4 111 2 62 1 137 4 33 1 17 1 179 1 183 1 181 1 306 1 18 1 251 20 36 1 309 1 238 3 
311 1 363 1 164 1 117 4 260 2 47 8 20 2 5 4 340 1 6 52 263 7 342 1 122 7 223 8 123 1 317 2 197 1 320 4 150 2 104 1 133 1 275 7 350 14 304 25 29 7 206 1 155 1 109 2 14 7 111 1 62 1 137 2 17 1 179 2 183 1 181 1 306 1 18 1 251 27 36 1 309 1 238 4 
245 1 356 1 98 1 107 1 185 1 88 1 148 1 119 1 90 1 291 1 
348 1 60 1 
23 1 356 1 98 1 107 1 148 1 119 1 90 1 171 1 381 1 
310 2 107 1 153 1 154 1 119 1 15 1 291 1 81 1 245 1 98 1 356 1 112 1 50 1 88 1 268 1 148 1 272 1 90 1 
310 2 107 1 153 1 154 1 119 1 15 1 291 1 81 1 245 1 98 1 356 1 112 1 50 1 88 1 268 1 148 1 272 1 90 1 
310 2 107 1 153 1 154 1 119 1 15 1 291 1 81 1 245 1 98 1 356 1 112 1 50 1 88 1 268 1 148 1 272 1 90 1 
65 1 252 1 191 1 
65 1 252 1 191 1 
334 1 38 1 
65 1 334 1 38 1 
308 1 32 1 
310 1 119 1 243 1 294 1 98 1 343 1 50 1 268 1 148 1 271 1 272 1 126 2 132 1 107 1 348 1 349 2 153 1 60 1 61 1 135 2 32 1 356 1 379 2 329 1 212 2 90 1 308 1 
252 1 191 1 
65 1 334 1 38 1 
40 1 365 1 336 2 261 1 20 1 3 2 5 2 96 1 6 2 246 1 317 1 102 1 54 1 273 1 323 1 126 2 127 1 28 1 304 1 204 2 205 1 109 1 231 1 137 1 327 1 378 1 379 2 235 2 251 1 187 1 212 2 
204 2 3 2 376 1 242 1 71 1 233 2 281 1 282 1 264 1 235 2 184 1 86 1 89 1 321 1 298 1 54 1 141 1 142 1 273 1 
204 1 3 1 242 1 71 1 233 2 281 1 282 1 368 1 235 1 184 1 89 1 321 1 298 1 54 1 141 1 142 1 273 1 
365 1 69 1 204 1 3 1 279 1 376 1 327 1 235 1 184 1 346 1 54 1 237 1 273 1 159 1 
204 1 3 1 376 1 242 1 71 1 233 2 281 1 282 1 264 1 235 1 184 1 89 1 321 1 298 1 54 1 141 1 142 1 273 1 
70 1 
301 1 24 1 66 1 53 1 154 1 307 1 322 1 
143 1 288 1 190 1 313 1 2 1 315 1 50 1 268 1 53 1 322 1 152 1 130 1 301 1 154 2 352 1 157 1 35 1 
239 2 143 4 42 1 188 2 288 4 92 1 335 1 190 4 241 2 2 6 47 2 3 3 50 5 345 3 8 2 53 2 54 2 152 3 58 2 301 8 203 2 154 8 204 3 351 2 14 2 208 2 209 6 158 1 114 2 67 1 66 1 313 4 365 2 69 1 262 2 263 2 315 12 223 2 24 1 371 2 268 5 322 9 72 1 273 3 76 1 275 2 174 1 232 6 178 2 327 8 284 1 235 3 86 1 35 5 
239 2 143 2 42 1 188 1 164 1 288 2 189 1 117 1 190 2 313 2 144 1 260 1 2 3 47 2 263 2 315 6 223 2 50 1 268 1 53 2 322 8 152 1 133 1 275 2 301 5 154 5 14 2 232 5 209 5 178 1 17 1 306 1 18 1 35 1 238 1 
160 1 239 2 64 1 143 1 363 1 288 1 190 1 313 1 47 2 223 1 50 1 123 1 198 1 268 1 347 1 322 2 201 1 126 1 301 2 349 1 276 1 375 1 135 1 178 1 379 1 357 1 212 1 309 1 
301 1 143 1 66 1 288 1 313 1 190 1 154 1 24 1 53 1 322 1 
239 2 275 2 301 5 154 5 47 2 2 5 351 1 14 2 232 5 209 5 263 2 178 1 315 10 223 2 322 5 
50 1 53 1 268 1 154 1 35 1 152 1 
161 1 143 2 67 2 288 2 188 2 42 2 192 1 190 2 313 1 365 1 69 2 3 4 369 1 50 3 346 1 268 3 54 1 322 2 273 1 152 2 301 2 204 4 327 1 284 1 235 4 34 1 35 4 254 1 237 1 
64 2 69 1 365 1 20 1 3 1 290 1 5 2 262 1 6 1 317 1 271 1 54 1 126 2 201 1 273 1 323 1 127 1 11 1 349 2 134 1 304 1 204 1 109 1 135 2 231 1 137 1 355 1 327 1 379 3 235 1 212 3 256 1 
301 2 143 1 288 1 188 1 42 1 313 1 190 1 154 4 2 2 232 2 62 1 209 2 315 4 53 2 322 1 
356 1 148 1 286 1 
356 1 148 1 286 1 
245 1 356 1 148 1 324 1 32 1 
356 1 148 1 286 1 
356 1 148 1 168 1 
356 1 148 1 168 1 
356 1 148 1 168 1 
356 1 148 1 
107 1 119 1 
350 3 363 1 304 4 47 1 29 1 109 2 20 2 5 4 111 1 62 1 6 8 137 2 122 2 223 1 251 4 181 1 123 1 317 2 104 1 309 1 
350 2 363 1 304 3 47 1 62 1 6 6 122 2 223 1 181 1 123 1 251 3 307 1 104 1 309 1 
275 1 350 2 41 1 304 2 47 1 29 1 109 1 20 1 14 1 5 2 263 1 6 4 137 1 122 1 223 1 251 2 317 1 
275 1 350 2 117 2 304 4 260 1 47 1 29 1 14 1 6 7 263 1 122 1 223 1 179 1 251 3 238 1 
312 1 363 2 117 2 47 3 20 2 5 4 263 2 6 23 122 5 223 3 123 2 317 2 150 1 104 1 227 1 275 2 350 9 304 12 29 4 14 2 109 2 111 2 62 1 137 2 179 1 181 1 251 11 309 1 238 2 
6 1 117 1 304 1 
6 1 251 1 238 1 
275 1 41 1 350 3 304 3 47 1 29 1 20 1 109 1 351 1 14 1 5 2 6 6 263 1 137 1 122 2 223 1 251 3 317 1 
164 1 117 1 260 1 47 2 20 1 5 2 6 12 263 2 122 1 223 2 317 1 133 1 275 2 350 2 304 6 29 1 109 1 14 2 137 1 17 1 18 1 251 6 306 1 36 1 238 1 
350 2 363 1 304 3 47 1 29 1 6 6 122 1 223 1 251 3 123 1 309 1 
350 2 312 1 363 1 304 2 29 1 109 1 20 1 111 1 5 2 6 3 137 1 122 1 251 1 123 1 181 1 317 1 104 1 
350 5 276 1 363 2 304 5 29 2 47 2 20 1 109 1 5 2 6 10 137 1 122 3 223 2 123 2 251 5 317 1 36 1 309 1 
350 1 47 1 29 1 109 1 20 1 14 1 5 2 6 2 137 1 251 2 317 1 36 1 
275 1 350 2 304 2 47 1 29 1 109 1 20 1 14 1 5 2 263 1 6 4 137 1 122 1 223 1 251 2 317 1 36 1 
350 2 312 1 363 1 304 2 29 1 109 3 20 3 111 1 5 6 6 3 137 3 122 1 33 1 123 1 251 1 317 3 36 1 
41 1 312 1 363 3 117 4 260 1 47 5 20 5 5 10 6 34 263 3 122 7 223 5 123 3 124 1 317 5 104 1 275 3 350 12 304 18 29 5 176 1 109 5 14 3 111 2 62 1 326 1 137 5 33 1 179 1 181 1 251 16 36 1 309 2 238 3 
363 1 117 1 47 1 260 1 20 1 5 2 6 8 122 2 223 1 123 1 317 1 104 1 350 2 304 4 109 1 62 1 137 1 18 1 251 4 181 1 36 1 238 1 309 1 
41 1 363 1 117 2 260 1 47 2 20 2 5 4 6 11 263 1 122 2 223 1 123 1 317 2 104 1 350 3 304 5 29 1 109 2 14 1 62 1 137 2 179 1 181 1 18 1 251 6 36 1 309 1 238 1 
41 1 363 1 164 1 117 1 260 1 47 3 20 3 5 6 6 19 263 2 122 3 223 3 123 1 317 3 104 1 133 1 275 2 350 4 304 10 29 1 109 3 14 2 111 1 62 1 137 3 17 1 181 1 306 1 18 1 251 9 36 1 309 1 238 1 
41 1 363 1 164 1 117 1 260 1 47 3 20 3 5 6 6 17 263 2 122 3 223 2 123 1 317 3 104 1 133 1 275 1 350 5 304 7 29 2 109 3 14 2 111 1 62 1 137 3 17 1 181 1 18 1 251 10 306 1 36 1 309 1 238 1 
363 1 117 1 47 1 260 1 20 1 5 2 6 8 122 2 223 1 123 1 317 1 104 1 350 2 304 4 109 1 62 1 137 1 18 1 251 4 181 1 36 1 238 1 309 1 
164 1 117 1 260 1 47 2 20 1 5 2 6 12 263 2 122 1 223 2 317 1 133 1 275 2 350 2 304 6 29 1 109 1 14 2 137 1 17 1 18 1 251 6 306 1 36 1 238 1 
41 1 363 1 164 1 117 1 260 1 47 3 20 4 5 8 6 18 263 2 122 3 223 2 123 1 317 4 104 1 133 1 275 1 350 5 304 8 29 2 109 4 14 2 111 2 62 1 137 4 17 1 181 1 306 1 18 1 251 10 36 1 309 1 238 1 
164 1 117 1 260 1 47 3 20 4 5 8 6 16 263 3 122 3 223 2 317 4 133 1 275 2 350 6 304 7 29 3 109 4 14 3 111 2 137 4 33 1 17 1 306 1 18 1 251 9 36 1 238 1 
350 6 363 3 304 4 29 3 47 1 6 7 122 3 223 1 181 2 123 3 251 3 104 1 309 1 
363 1 164 1 117 1 260 1 47 3 20 4 5 8 6 18 263 2 122 3 223 2 123 1 317 4 104 1 133 1 275 1 350 4 304 8 29 1 109 4 14 2 111 2 62 1 137 4 33 1 17 1 181 1 306 1 18 1 251 10 36 1 309 1 238 1 
221 1 379 1 229 1 43 1 212 1 271 1 126 1 
202 1 43 1 229 1 277 1 95 1 221 1 296 1 379 1 358 1 212 1 271 1 126 1 
327 1 235 1 346 1 365 1 307 1 69 1 204 1 54 1 237 1 3 1 273 1 
349 1 134 1 365 1 69 1 204 1 135 1 3 1 262 1 355 1 327 1 379 2 235 1 151 1 212 2 271 1 54 1 273 1 126 1 
67 1 92 1 68 1 365 2 3 1 262 2 151 1 347 1 271 1 54 1 126 2 273 1 172 1 349 2 134 1 204 1 135 1 355 1 327 3 379 2 235 1 158 1 212 2 
67 1 92 1 68 1 365 2 3 2 22 1 262 2 267 1 151 1 347 1 271 1 54 1 126 2 273 1 172 1 349 2 204 2 135 1 355 1 327 3 379 2 235 2 158 1 212 2 
67 1 92 1 241 1 365 1 69 1 3 3 262 1 50 2 345 1 267 1 8 1 268 2 53 1 54 1 273 1 154 1 204 3 230 1 327 4 330 1 235 3 158 1 35 1 
92 1 67 1 241 1 69 1 154 1 365 1 204 3 3 3 262 1 327 4 50 2 158 1 235 3 345 1 267 1 371 1 8 1 53 1 268 2 35 1 54 1 273 1 
16 1 235 1 204 1 54 1 3 1 273 1 
0 1 40 1 336 1 69 2 365 2 204 7 3 6 262 1 281 1 194 1 341 1 16 1 327 3 196 1 235 7 86 1 380 1 149 1 72 1 54 2 273 3 
47 1 289 1 290 1 3 1 5 4 6 6 151 1 104 1 54 1 11 1 349 1 350 2 304 3 305 1 204 1 109 2 156 1 62 1 355 1 251 3 212 2 309 1 363 1 365 1 261 1 20 2 262 1 122 2 223 1 123 1 317 2 25 1 271 2 169 1 126 1 323 2 273 1 134 1 135 1 231 2 137 2 327 1 379 2 378 1 235 1 181 1 86 1 
143 2 66 1 288 2 190 2 313 2 241 1 69 1 3 1 294 1 50 3 24 1 345 1 371 1 8 1 53 1 268 3 322 1 152 1 301 1 58 1 203 1 154 1 204 1 208 1 327 2 284 1 235 1 35 2 
174 1 365 1 204 2 3 2 262 1 16 1 327 2 235 2 86 1 8 1 72 1 54 1 273 2 
327 1 235 4 346 1 86 1 267 1 365 1 69 1 204 4 54 1 237 1 3 4 273 1 10 1 
0 1 162 1 67 1 365 1 204 2 3 2 31 1 262 1 194 1 63 1 327 1 235 2 54 1 273 2 
235 1 89 1 69 1 204 1 54 1 3 1 242 1 142 1 273 1 233 1 
40 1 365 1 204 2 3 2 281 1 327 1 235 2 86 1 187 1 54 1 273 1 
40 1 67 1 69 1 365 2 204 5 3 4 341 1 327 3 235 5 346 1 86 1 380 1 237 1 54 2 273 2 10 1 
40 1 67 1 69 1 365 2 204 5 3 4 337 1 341 1 327 3 235 5 346 1 86 1 237 1 54 2 273 2 10 1 
349 1 365 1 69 1 204 1 135 1 3 1 262 1 22 1 355 1 327 1 379 2 235 1 151 1 212 2 271 1 54 1 273 1 126 1 
0 1 67 1 365 1 204 1 3 1 262 1 194 1 327 1 235 1 149 1 72 1 54 1 273 2 
217 1 77 1 79 1 271 1 75 1 
77 1 217 2 300 1 79 2 68 1 241 1 154 1 120 1 366 1 244 1 294 1 50 2 318 1 53 1 268 2 347 1 271 1 172 1 75 2 
217 1 77 1 205 1 96 1 246 1 379 1 212 1 126 1 75 1 
77 1 318 1 120 1 
295 1 316 1 307 1 
295 1 39 1 373 1 316 1 220 1 46 1 
45 1 220 1 27 1 
373 1 39 1 228 1 46 3 220 3 353 1 354 2 293 1 295 1 316 1 213 1 
295 1 39 1 373 1 316 1 220 2 46 2 177 1 299 1 
373 1 39 1 59 1 46 1 220 1 233 1 293 1 89 1 170 1 141 1 255 1 
293 1 39 1 373 1 316 1 220 1 46 1 
293 1 295 1 39 1 373 1 59 1 316 1 220 1 46 1 
128 1 250 1 293 1 39 2 373 2 163 1 316 1 220 2 46 2 
373 1 39 1 13 1 59 1 278 1 46 3 220 3 118 1 177 2 293 1 295 1 316 1 255 1 
373 1 39 1 218 1 46 2 220 2 233 2 177 1 293 1 295 1 316 1 89 1 298 1 142 1 141 1 
1 1 373 2 39 2 13 1 59 1 46 4 220 4 177 2 293 1 295 1 316 1 255 1 299 1 
293 1 295 1 39 1 373 1 316 1 220 1 46 1 
228 1 373 1 39 1 13 1 59 1 46 4 220 4 177 2 354 1 295 2 297 1 316 2 213 1 255 1 
216 1 372 1 293 1 295 1 39 1 373 1 316 1 220 2 46 2 177 1 121 1 
293 1 295 1 228 2 211 1 39 1 373 1 316 1 220 3 46 3 213 1 354 2 
59 2 266 2 269 1 145 1 
293 1 39 1 373 1 325 1 220 1 46 1 
293 1 295 1 39 1 373 1 316 1 220 2 46 2 118 1 177 1 
207 1 
293 1 295 1 39 1 373 1 316 1 220 1 46 1 
293 1 295 1 39 1 373 1 316 1 220 3 46 3 118 1 177 1 354 1 
297 1 59 1 13 1 255 1 
316 1 

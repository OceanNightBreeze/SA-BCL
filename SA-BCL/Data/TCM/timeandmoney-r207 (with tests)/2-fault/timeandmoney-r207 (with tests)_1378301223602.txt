#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | STATEMENT | 647 | stmt -> ;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z | CONSTANT | 5792 | 0 -> -1
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
204 1 362 2 319 2 14 1 305 1 104 1 213 2 42 1 186 1 95 1 96 1 159 3 87 3 
204 3 362 2 319 2 225 1 101 1 25 1 104 1 183 1 135 1 186 1 159 9 87 9 191 1 14 7 305 1 213 5 42 4 167 1 166 1 95 1 216 1 96 1 125 2 312 1 
204 3 362 2 319 2 225 1 101 1 25 1 104 1 183 1 135 1 186 1 159 9 87 9 191 1 14 7 305 1 213 5 42 4 167 1 166 1 95 1 216 1 96 1 125 2 312 1 
204 3 291 1 290 1 362 2 225 1 319 2 101 2 25 2 320 1 79 1 104 2 183 1 135 1 186 1 114 1 9 1 159 9 87 9 14 6 305 1 213 5 42 4 166 1 95 1 216 2 96 1 125 2 312 1 
204 3 291 1 290 1 362 2 225 1 319 2 101 2 25 2 320 1 79 1 104 2 183 1 135 1 186 1 114 1 9 1 159 9 87 9 14 6 305 1 213 5 42 4 166 1 95 1 216 2 96 1 125 2 312 1 
204 4 291 1 290 1 362 2 225 1 319 2 101 2 25 2 320 1 79 1 104 2 183 1 135 1 186 1 114 1 9 1 159 10 87 10 14 7 305 1 213 6 42 5 166 1 95 1 216 2 96 1 125 2 312 1 
204 2 291 1 290 1 362 2 319 2 101 2 25 2 320 1 79 1 104 2 183 1 135 1 186 1 114 1 9 1 159 7 87 7 14 4 305 1 213 4 42 3 166 1 95 1 216 2 96 1 125 1 312 1 
204 1 362 1 225 1 319 1 14 3 101 1 25 1 183 1 213 3 42 2 186 1 95 1 216 1 96 1 125 2 159 4 312 1 87 4 
290 1 362 1 319 1 25 1 238 1 320 1 104 1 213 1 113 1 186 1 95 1 216 1 96 1 159 2 87 2 162 1 
40 1 317 1 253 1 263 1 241 1 272 1 206 1 85 1 147 1 207 1 78 1 68 1 314 1 287 1 
261 1 
203 1 157 1 263 2 261 1 147 2 207 1 155 1 229 1 
203 1 99 1 326 1 263 5 23 2 128 1 356 1 306 1 229 2 91 2 28 1 157 1 41 1 169 1 379 1 261 1 147 5 207 2 97 2 
275 1 263 1 147 1 207 1 229 1 
203 1 157 1 263 2 261 1 147 2 171 1 207 1 229 1 
263 1 147 1 229 1 
157 1 311 1 261 1 
21 2 261 1 246 1 
40 2 317 1 253 2 272 2 85 2 78 2 68 2 198 1 
74 1 338 1 317 1 264 1 224 2 292 2 294 1 342 1 295 1 78 2 180 1 106 1 272 2 85 2 158 1 189 1 253 2 371 1 117 2 119 1 210 1 59 1 329 1 373 2 330 1 375 1 142 1 198 1 376 1 40 3 64 1 122 1 283 1 145 1 170 2 67 1 68 3 
40 1 317 1 253 1 241 1 272 1 85 1 78 1 68 1 314 1 287 1 
253 1 263 1 141 1 331 1 40 1 157 1 358 1 241 1 299 1 261 1 147 1 68 1 187 1 284 1 
263 2 253 1 78 1 141 1 331 1 40 1 157 1 358 1 241 1 272 1 261 1 85 1 147 2 68 1 187 1 
253 2 78 1 198 2 51 1 40 2 272 1 85 1 68 2 98 1 
193 1 234 1 35 1 
371 1 224 1 117 1 329 1 372 1 180 1 375 1 198 1 376 1 40 1 283 1 145 1 170 1 67 1 158 1 68 1 
311 1 198 1 
276 1 253 1 371 1 224 1 193 1 117 1 329 1 375 1 180 1 78 1 132 1 376 1 40 2 283 1 272 1 145 1 67 1 170 1 158 1 68 2 
276 1 40 3 253 3 272 3 85 1 78 3 68 3 198 1 
40 1 253 1 241 1 272 1 78 1 68 1 314 1 
40 1 253 1 241 1 272 1 85 1 78 1 68 1 98 1 51 1 
74 1 317 1 264 1 263 1 224 1 292 1 127 1 342 1 295 1 180 1 78 3 132 1 272 3 85 2 158 1 187 1 189 1 301 1 276 1 253 3 371 1 117 1 210 1 59 1 329 1 373 2 375 1 142 1 141 1 198 1 331 1 376 1 40 4 64 1 358 1 241 1 122 1 283 1 145 1 67 1 147 1 170 1 68 4 98 1 
40 2 276 1 253 2 77 1 272 1 299 1 78 1 68 2 198 1 
276 2 301 1 263 1 253 3 15 1 78 3 141 1 331 1 132 1 40 3 241 1 358 1 272 3 85 1 261 1 147 1 68 3 187 1 98 1 
276 1 253 2 193 1 35 1 78 2 40 2 272 2 85 1 68 2 98 1 
371 1 224 1 117 1 329 1 180 1 375 1 198 1 376 1 40 1 283 1 145 1 170 1 67 1 158 1 68 1 
371 1 224 1 117 1 180 1 375 1 198 1 376 1 40 1 260 1 145 1 170 1 67 1 158 1 68 1 163 1 
74 1 223 1 264 1 177 1 292 4 318 1 266 1 47 1 342 2 154 1 133 1 234 2 370 1 30 1 193 2 119 2 210 1 59 1 373 2 35 2 64 1 122 1 66 1 378 1 
40 1 253 1 241 1 272 1 78 1 141 1 68 1 70 1 
276 2 253 5 126 1 77 1 78 4 198 1 132 1 40 5 272 4 299 1 85 1 68 5 98 1 313 1 
40 2 253 2 241 1 272 2 78 2 68 2 314 1 70 1 
289 1 265 1 148 1 
265 2 258 1 89 1 254 1 148 2 281 1 
265 1 148 1 
265 1 148 1 
89 1 254 1 
89 1 254 1 
89 1 254 1 
265 1 1 1 148 1 
265 1 1 1 148 1 
265 1 1 1 148 1 
22 1 265 1 148 1 
22 1 265 1 148 1 
22 1 265 1 148 1 
263 2 265 2 192 2 149 2 303 1 150 2 211 2 343 2 321 1 50 1 281 1 92 3 309 1 53 1 261 1 147 2 115 1 20 1 148 2 
289 1 263 1 149 1 265 1 226 1 343 1 78 2 297 1 53 1 185 1 272 2 86 1 253 2 57 1 192 1 139 1 211 1 37 1 279 1 198 1 40 2 92 1 241 1 147 1 68 2 148 1 
101 1 216 1 25 1 
113 1 216 1 25 1 
101 2 113 1 25 3 359 1 72 1 39 1 
248 1 101 1 113 1 25 2 359 1 72 1 
101 1 113 1 25 2 359 1 72 2 
223 1 203 1 21 3 263 5 23 1 48 1 226 1 49 1 154 1 229 1 246 1 157 1 233 1 86 1 370 1 207 4 11 2 326 1 164 1 33 1 306 2 278 1 279 1 91 1 280 1 378 1 379 3 147 5 261 2 146 1 262 2 242 2 97 1 
223 3 203 1 21 9 263 9 23 2 226 4 364 1 49 3 153 5 154 3 229 6 246 3 157 1 233 3 54 1 370 3 207 7 208 1 116 1 209 1 275 5 326 1 31 1 306 6 278 1 91 2 280 2 378 3 169 1 379 8 147 9 261 5 146 2 262 6 242 6 97 2 
223 1 263 3 21 4 23 1 48 1 226 1 49 1 154 1 246 2 157 1 233 1 207 2 370 1 11 1 164 1 306 2 91 1 280 1 378 1 169 1 379 3 261 3 147 3 146 1 262 2 242 2 97 1 
223 2 21 7 263 4 23 1 48 1 226 2 364 1 49 2 154 2 246 3 157 1 233 2 54 1 207 3 370 2 208 1 11 2 164 1 306 4 91 1 280 1 378 2 169 1 379 5 261 4 147 4 146 1 262 4 242 4 97 1 
201 1 
311 1 145 1 105 1 
145 1 376 1 
252 1 76 1 145 3 375 1 105 2 376 1 
134 1 145 1 
145 1 375 1 376 1 
145 1 365 1 
292 7 318 3 243 1 267 1 119 4 342 3 182 1 307 2 3 1 103 1 156 1 199 1 66 2 378 1 370 1 249 1 18 1 44 1 
74 2 223 4 264 2 292 46 243 1 318 15 342 22 182 2 49 4 3 3 154 4 347 2 103 2 156 7 368 1 351 1 271 1 83 1 8 1 249 3 370 7 88 1 274 1 56 4 210 2 119 24 373 4 307 3 64 2 332 1 199 2 66 8 378 7 168 1 335 4 18 1 44 1 
74 2 264 2 292 9 318 4 342 4 182 1 347 1 3 1 103 1 156 1 108 1 370 1 249 1 210 2 119 5 373 4 307 2 64 2 199 1 66 3 378 1 124 1 18 1 44 1 
292 7 318 3 243 1 119 4 342 3 182 1 307 2 3 1 103 1 156 1 199 1 66 2 378 1 370 1 249 1 18 1 44 1 
292 7 318 3 243 1 119 4 342 3 182 1 307 2 3 1 103 1 156 1 199 1 66 2 378 1 370 1 249 1 18 1 44 1 
224 1 75 2 362 1 319 1 348 1 104 2 184 1 111 1 158 1 236 1 159 1 87 1 354 1 137 2 371 1 190 1 117 1 357 2 143 1 376 1 145 1 170 1 67 1 
137 1 224 1 75 1 362 1 319 1 117 1 101 1 357 1 25 2 24 1 194 1 181 1 39 1 52 1 104 1 230 1 113 1 93 1 95 1 216 1 67 1 29 1 170 1 158 1 159 1 87 1 
75 1 224 1 362 1 319 1 101 1 24 1 25 2 181 1 130 1 104 1 52 1 230 1 113 1 186 1 29 1 158 1 159 2 87 2 137 1 14 1 117 1 357 1 39 1 213 1 93 1 95 1 216 1 170 1 67 1 96 1 
75 1 224 1 362 1 319 1 101 1 24 1 25 2 104 1 52 1 230 1 111 1 113 1 186 1 29 1 158 1 159 3 87 3 137 1 117 1 14 2 357 1 194 1 39 1 213 1 215 1 93 1 216 1 170 1 67 1 96 1 
75 1 224 1 101 1 24 1 25 2 104 1 230 1 113 1 186 1 158 1 159 2 87 2 137 1 117 1 14 2 357 1 194 1 39 1 213 1 215 1 93 1 216 1 170 1 67 1 96 1 
296 1 
203 2 244 1 4 1 5 3 246 2 157 1 298 2 299 1 160 2 161 1 253 1 165 2 60 5 62 1 306 1 17 3 358 1 310 1 261 1 68 1 71 1 263 4 176 1 23 1 229 5 231 1 187 1 325 1 326 1 277 1 90 1 374 2 141 1 331 1 91 1 40 1 241 1 379 1 147 4 284 1 97 1 285 3 
203 2 176 1 263 4 244 1 23 1 4 1 229 5 246 2 5 3 157 1 231 1 298 2 299 1 160 2 187 1 325 1 161 1 326 1 253 1 277 1 165 2 62 1 60 5 306 1 374 2 90 1 141 1 91 1 331 1 17 3 40 1 358 1 241 1 310 1 379 1 261 1 147 4 68 1 97 1 284 1 285 3 71 1 
203 2 100 2 244 1 5 2 157 1 298 2 299 1 161 1 253 1 165 2 60 4 306 1 16 2 17 2 358 1 310 1 219 1 261 1 68 1 71 1 263 4 21 2 23 1 229 4 231 1 187 1 325 1 326 1 140 1 141 1 331 1 91 1 40 1 241 1 379 1 147 4 97 1 284 1 285 2 
203 3 244 1 5 2 246 2 157 1 109 1 298 2 299 1 158 1 160 2 161 1 253 1 117 2 165 2 60 4 306 2 17 2 358 1 310 1 261 2 170 2 67 1 68 1 71 1 73 1 21 2 263 5 224 2 176 1 23 1 229 6 269 1 184 1 231 1 187 1 325 1 326 1 371 2 140 1 374 2 141 1 143 1 91 1 331 1 376 1 40 1 241 1 379 2 145 1 146 1 147 5 97 1 284 1 285 2 286 1 
203 1 263 3 244 1 155 1 229 2 5 1 231 1 299 1 187 1 161 1 253 1 60 2 141 1 331 1 40 1 358 1 241 1 310 1 147 3 68 1 284 1 71 1 
203 1 263 3 244 1 155 1 229 1 157 1 231 1 299 1 187 1 161 1 253 1 60 3 141 1 331 1 40 1 358 1 241 1 310 1 147 3 261 1 68 1 284 1 285 1 71 1 
203 1 263 3 244 1 155 1 229 2 5 1 157 1 231 1 299 1 187 1 161 1 253 1 60 3 141 1 331 1 17 1 40 1 358 1 241 1 310 1 147 3 261 1 68 1 284 1 285 1 71 1 
203 3 244 1 155 1 4 1 5 4 246 2 157 5 298 2 353 1 299 1 160 2 161 1 253 1 165 2 60 6 62 1 306 1 17 4 358 1 310 1 261 5 68 1 71 1 263 5 176 1 23 1 229 7 231 1 187 1 325 1 326 1 277 1 90 1 374 2 141 1 331 1 91 1 40 1 241 1 379 1 147 5 284 1 97 1 285 4 
203 2 244 1 246 2 5 2 157 1 298 2 299 1 160 2 161 1 253 1 165 2 60 4 306 1 17 2 358 1 310 1 261 2 68 1 71 1 176 1 263 4 21 2 23 1 229 4 231 1 187 1 325 1 326 1 140 1 374 2 141 1 331 1 91 1 40 1 241 1 379 1 147 4 97 1 284 1 285 2 
203 2 176 1 263 4 244 1 23 1 4 1 229 4 5 2 246 2 157 1 231 1 298 2 299 1 160 2 187 1 325 1 161 1 253 1 326 1 277 1 165 2 62 1 60 4 306 1 374 2 141 1 17 2 91 1 331 1 40 1 358 1 241 1 310 1 379 1 261 1 147 4 68 1 284 1 97 1 285 2 71 1 
203 2 176 1 263 4 244 1 23 1 4 1 229 4 5 2 246 2 157 1 231 1 298 2 299 1 160 2 187 1 325 1 161 1 253 1 326 1 277 1 165 2 62 1 60 4 306 1 374 2 141 1 17 2 91 1 331 1 40 1 358 1 241 1 310 1 379 1 261 1 147 4 68 1 284 1 97 1 285 2 71 1 
203 2 21 2 263 4 100 2 244 1 23 1 227 1 229 4 5 2 157 1 231 1 298 2 299 1 187 1 325 1 161 1 253 1 326 1 165 2 62 1 60 4 306 1 141 1 16 2 17 2 91 1 331 1 40 1 358 1 241 1 65 1 310 1 379 1 261 1 219 1 147 4 68 1 284 1 97 1 285 2 71 1 
74 2 338 2 224 8 264 2 45 1 178 1 177 1 292 2 341 1 342 1 295 1 78 1 344 1 130 1 184 1 110 1 272 1 235 1 158 2 276 1 253 1 371 2 117 8 210 2 119 1 59 2 194 1 373 4 330 1 143 1 240 1 376 2 40 1 64 2 122 2 145 3 67 2 170 7 68 1 
74 1 223 1 264 1 292 3 318 1 342 2 78 1 49 1 154 1 107 1 272 1 234 1 85 1 370 1 253 1 193 1 327 1 210 1 119 1 59 1 373 2 35 1 40 1 64 1 122 1 66 1 378 1 68 1 98 1 
74 1 223 1 264 1 292 2 177 1 318 1 193 1 210 1 119 2 59 1 373 2 35 1 133 1 156 1 64 1 122 1 234 1 370 1 
74 1 264 1 292 2 177 1 30 1 318 1 193 1 210 1 59 1 373 2 342 2 35 1 154 1 64 1 122 1 66 1 378 1 234 1 
223 1 74 1 264 1 177 1 292 4 318 2 342 2 49 1 154 1 156 1 234 2 370 1 193 2 119 2 210 1 59 1 373 2 35 2 64 1 122 1 66 1 378 1 
74 1 223 1 264 1 292 2 318 1 193 1 210 1 119 2 59 1 373 2 35 1 344 1 133 1 156 1 64 1 122 1 234 1 370 1 
74 1 264 1 292 2 30 1 193 1 210 1 59 1 373 2 342 2 35 1 344 1 154 1 64 1 122 1 378 1 234 1 
74 1 223 1 264 1 292 4 193 2 210 1 119 2 59 1 342 2 373 2 35 2 49 1 344 1 154 1 64 1 122 1 378 1 234 2 370 1 
223 1 74 1 264 1 292 4 318 2 342 2 49 1 154 1 156 1 234 2 370 1 193 2 119 2 210 1 59 1 373 2 35 2 64 1 122 1 66 1 378 1 
74 1 224 1 264 1 292 2 342 1 295 1 180 1 158 1 371 1 117 1 119 1 210 1 329 1 59 1 373 2 330 1 375 1 142 1 198 1 376 1 40 1 64 1 283 1 122 1 145 1 67 1 170 1 68 1 
74 1 224 1 264 1 292 2 342 1 295 1 180 1 346 1 158 1 163 1 371 1 117 1 119 1 210 1 59 1 373 2 330 1 375 1 198 1 376 1 40 1 64 1 122 1 260 1 145 1 67 1 170 1 68 1 
223 1 74 1 264 1 292 4 318 2 342 2 49 1 154 1 156 1 234 2 370 1 327 1 193 2 119 2 210 1 59 1 373 2 35 2 64 1 122 1 66 1 378 1 
223 1 74 1 224 1 264 1 292 4 318 2 342 2 180 1 49 1 154 1 130 1 156 1 234 2 370 1 158 1 193 2 117 1 119 2 210 1 329 1 59 1 373 2 35 2 375 1 142 1 376 1 40 1 64 1 283 1 122 1 66 1 378 1 145 1 67 1 170 1 68 1 174 1 
74 1 223 1 264 1 292 3 318 1 342 1 78 1 49 1 154 1 156 1 272 1 234 1 85 1 370 1 253 1 327 1 193 1 210 1 119 2 59 1 373 2 35 1 40 1 64 1 144 1 122 1 378 1 68 1 98 1 
74 1 224 1 361 1 264 1 292 2 0 1 342 1 295 1 180 1 78 1 132 1 272 1 158 1 276 1 371 1 253 1 327 1 117 1 58 1 210 1 119 1 329 1 59 1 372 1 373 2 35 1 375 1 330 1 198 1 376 1 40 2 64 1 283 1 122 1 145 1 67 1 170 1 68 2 
292 20 342 10 295 1 49 2 3 1 154 2 156 4 249 1 158 2 253 1 117 3 210 3 119 10 59 3 307 1 64 3 122 3 66 4 170 3 67 2 18 1 68 3 173 1 174 2 74 3 223 2 224 3 264 3 318 8 182 1 78 1 180 2 132 1 27 2 84 1 272 1 234 7 370 3 273 2 276 1 371 1 327 1 193 7 329 2 194 1 373 6 35 7 330 1 375 2 142 2 38 2 198 2 376 2 40 3 283 2 378 3 145 2 44 1 202 1 
74 1 264 1 177 1 292 6 318 2 342 3 182 1 3 1 234 1 249 1 370 1 193 1 210 1 119 3 59 1 373 2 35 1 307 1 198 2 64 1 122 1 66 2 311 1 378 1 18 1 44 1 
74 2 223 2 264 2 292 14 318 2 342 6 295 1 49 2 154 1 349 1 156 1 351 1 82 1 234 11 370 2 274 1 251 1 88 1 56 3 327 1 193 11 210 2 119 8 59 2 373 4 35 4 330 1 198 1 64 2 122 1 66 1 378 1 335 3 
339 1 292 51 46 1 342 24 49 7 154 6 347 2 3 1 350 1 156 8 351 2 249 1 56 4 12 3 355 1 302 1 119 27 210 4 307 1 64 4 66 7 214 1 124 1 18 1 315 1 316 1 223 7 74 4 264 4 318 15 182 1 322 1 136 1 370 8 88 2 274 2 34 1 373 8 239 1 378 7 94 1 335 4 44 1 
74 3 223 3 339 1 264 3 46 1 292 26 318 4 342 12 49 3 347 2 154 2 322 2 350 1 156 2 136 1 370 3 274 2 12 4 56 2 355 2 302 1 210 3 119 14 304 1 34 1 373 6 239 1 64 3 214 1 66 2 378 2 124 1 335 2 315 1 
339 1 292 51 46 1 342 24 49 7 154 6 347 2 3 1 350 1 156 7 351 2 249 1 56 4 12 3 355 1 302 1 119 27 210 4 304 1 307 1 64 4 66 7 214 1 124 1 18 1 315 1 316 1 223 7 74 4 264 4 318 14 182 1 322 1 136 1 370 8 88 2 274 2 34 1 373 8 239 1 378 7 335 4 44 1 
339 1 292 53 46 1 342 25 49 7 154 6 347 2 3 1 350 1 156 7 351 2 249 1 56 4 12 4 355 1 302 1 119 28 210 4 304 1 307 1 64 4 66 7 214 1 124 1 18 1 315 1 316 1 223 7 74 4 264 4 318 14 182 1 322 1 136 1 370 8 88 2 274 2 34 1 373 8 239 1 378 7 335 4 44 1 
74 2 223 7 339 1 264 2 46 1 292 52 318 14 342 25 182 1 49 7 3 1 347 1 154 7 322 1 350 1 156 7 351 2 136 1 249 1 370 8 274 2 88 2 12 4 56 4 302 1 355 1 210 2 119 27 304 1 34 1 373 4 307 1 239 1 64 2 214 1 66 7 378 8 124 1 335 4 18 1 315 1 44 1 
309 1 149 1 192 1 265 1 352 1 211 1 343 1 50 1 148 1 281 1 
289 1 185 1 
247 1 149 1 192 1 265 1 282 1 211 1 343 1 345 1 148 1 
263 1 265 1 192 1 149 1 303 1 150 1 211 1 343 1 321 1 50 1 281 1 92 2 309 1 53 1 261 1 147 1 20 1 148 1 
263 1 265 1 192 1 149 1 303 1 150 1 211 1 343 1 321 1 50 1 281 1 92 2 309 1 53 1 261 1 147 1 20 1 148 1 
263 1 265 1 192 1 149 1 303 1 150 1 211 1 343 1 321 1 50 1 281 1 92 2 309 1 53 1 261 1 147 1 20 1 148 1 
258 1 112 1 1 1 
258 1 112 1 1 1 
22 1 220 1 
22 1 258 1 220 1 
57 1 37 1 
289 1 263 1 149 1 265 1 150 1 226 1 343 1 321 1 78 2 297 1 185 1 272 2 86 1 207 1 57 1 253 2 192 1 139 1 211 1 37 1 279 1 198 1 40 2 92 1 241 1 147 1 43 1 68 2 148 1 
112 1 1 1 
22 1 258 1 220 1 
74 1 338 2 224 2 264 1 292 2 342 1 295 1 245 1 110 1 235 1 158 1 253 2 327 1 117 2 210 1 119 1 59 1 32 1 373 2 120 1 330 1 121 1 376 1 377 1 40 2 64 1 122 1 145 1 67 1 170 2 68 2 
175 1 371 1 224 1 75 1 190 1 117 1 196 1 143 1 376 1 184 1 145 1 67 1 170 1 158 1 
175 1 300 1 224 1 75 1 117 1 101 1 25 2 194 1 151 1 24 1 39 1 113 1 93 1 216 1 170 1 29 1 67 1 158 1 
175 1 300 1 224 2 75 1 117 2 101 1 25 2 194 1 151 1 24 1 130 1 39 1 113 1 93 1 216 1 67 1 170 2 29 1 158 1 
300 1 224 1 75 1 117 1 101 1 25 2 194 1 24 1 39 1 113 1 93 1 323 1 216 1 170 1 29 1 67 1 158 1 
19 1 
157 1 99 1 326 1 41 1 23 1 379 1 261 1 306 1 97 1 91 1 
223 2 21 10 118 1 306 5 49 2 154 2 246 5 378 2 233 2 379 5 261 5 370 2 262 5 242 5 273 1 
203 1 157 1 263 1 261 1 147 1 229 1 
203 2 224 4 263 3 23 2 269 1 229 4 184 1 158 1 188 1 326 1 371 2 117 4 306 2 212 2 143 1 91 2 376 1 169 1 334 1 145 1 379 2 67 1 170 4 146 2 147 3 97 2 221 1 286 1 73 2 
74 1 317 1 264 1 224 1 292 1 342 1 295 1 78 2 180 1 272 2 85 2 158 1 189 1 371 1 253 2 117 1 210 1 329 1 59 1 373 2 375 1 142 1 198 1 376 1 40 3 64 1 283 1 122 1 145 1 170 1 67 1 68 3 
21 4 326 1 23 1 306 2 307 1 91 1 246 2 157 2 379 1 146 1 261 4 262 2 242 2 97 1 73 1 
203 1 263 1 21 1 326 1 176 1 23 1 306 1 374 1 229 1 91 1 246 1 157 1 379 1 147 1 261 2 160 1 97 1 
203 3 99 1 49 2 154 2 105 2 246 6 157 2 158 4 250 2 55 2 13 2 117 3 118 2 306 8 212 1 67 3 170 3 261 8 262 6 73 1 223 2 224 3 263 5 21 12 76 1 23 4 365 2 179 1 130 1 229 5 80 2 270 2 134 3 233 2 370 2 273 2 188 1 326 4 371 1 138 2 36 1 375 3 91 4 331 2 376 3 41 1 378 2 379 9 145 10 146 2 147 5 242 6 97 4 337 1 
203 1 223 2 263 1 21 6 46 1 23 2 49 2 154 2 229 1 246 3 157 2 136 1 233 3 370 2 274 1 56 1 326 2 302 1 118 1 34 1 195 1 306 5 256 1 91 2 239 1 378 2 379 8 146 1 147 1 335 1 261 5 262 5 242 5 97 2 73 1 
317 1 263 1 23 1 182 1 78 1 3 1 368 1 206 1 272 1 233 2 85 1 249 1 370 2 326 1 253 1 277 1 118 1 306 2 91 1 40 1 241 1 378 1 379 2 147 1 68 1 314 1 97 1 287 1 
157 1 99 1 41 1 311 1 379 1 261 1 306 1 
57 1 149 1 192 1 
149 1 192 1 380 1 
149 1 192 1 380 1 
149 1 192 1 380 1 
149 1 192 1 222 1 
149 1 192 1 222 1 
149 1 192 1 222 1 
149 1 192 1 
265 1 148 1 
74 1 264 1 292 10 318 5 210 1 119 5 373 2 342 5 182 1 3 2 156 2 64 1 368 1 66 3 378 2 124 1 249 2 370 2 
74 1 223 1 264 1 292 2 318 1 210 1 119 2 373 2 156 1 64 1 124 1 370 1 
74 1 223 1 264 1 292 4 318 2 210 1 119 2 342 2 373 2 49 1 154 1 156 1 64 1 66 1 378 1 124 1 370 1 
74 3 264 3 292 3 318 2 210 3 119 1 342 2 373 6 347 1 3 1 156 1 271 1 64 3 66 1 124 1 249 1 316 1 
74 5 223 4 264 5 292 41 318 14 342 21 182 2 49 4 3 3 347 2 154 4 131 1 156 7 271 1 351 1 83 1 8 1 249 3 370 6 274 1 88 1 56 4 210 5 119 20 373 10 307 1 64 5 66 7 378 6 168 1 124 1 335 4 18 1 44 1 316 1 
74 1 264 1 292 8 318 2 342 4 182 1 3 1 136 1 370 1 249 1 274 1 56 1 210 1 119 4 373 2 307 1 64 1 66 2 378 1 124 1 335 1 18 1 44 1 
74 2 223 1 264 2 292 11 318 3 342 5 182 1 49 1 3 1 131 1 156 1 136 1 249 1 370 2 274 1 88 1 56 1 210 2 119 6 373 4 307 1 64 2 66 2 378 1 124 1 335 2 18 1 44 1 
74 3 223 2 264 3 46 1 292 19 318 5 342 10 182 1 49 2 3 1 154 2 347 1 131 1 156 1 136 1 249 1 370 3 274 1 56 1 302 1 210 3 119 9 34 1 373 6 307 1 239 1 64 3 66 4 378 3 124 1 335 1 18 1 44 1 
74 3 223 2 264 3 292 17 46 1 318 4 342 7 182 1 49 2 3 1 347 1 154 1 131 1 156 2 136 1 249 1 370 3 274 1 56 1 302 1 210 3 119 10 34 1 373 6 307 1 239 1 64 3 66 2 378 2 124 1 335 1 18 1 44 1 
74 1 264 1 292 8 318 2 342 4 182 1 3 1 136 1 370 1 249 1 274 1 56 1 210 1 119 4 373 2 307 1 64 1 66 2 378 1 124 1 335 1 18 1 44 1 
74 1 223 2 264 1 292 12 46 1 318 2 342 6 49 2 154 2 156 1 136 1 370 2 274 1 56 1 302 1 210 1 119 6 34 1 373 2 239 1 64 1 66 1 378 2 124 1 335 1 
74 4 223 2 264 4 46 1 292 18 318 5 342 8 182 1 49 2 3 1 154 1 347 2 131 1 156 2 136 1 249 1 370 3 274 1 56 1 302 1 210 4 119 10 34 1 373 8 307 1 239 1 64 4 66 3 378 2 124 1 335 1 18 1 44 1 
74 3 223 2 264 3 292 11 46 1 318 2 342 4 49 2 347 1 154 1 156 2 136 1 370 2 274 1 56 1 302 1 210 3 119 7 34 1 373 6 239 1 64 3 378 1 124 1 335 1 316 1 
292 7 318 6 119 3 342 4 182 1 3 3 156 3 66 3 378 1 249 3 370 1 18 2 44 1 
74 4 223 2 264 4 46 1 292 18 318 4 342 8 182 1 49 2 3 1 154 1 347 2 156 1 136 1 249 1 370 3 274 1 56 1 302 1 210 4 119 10 34 1 373 8 307 1 239 1 64 4 66 3 378 2 124 1 335 1 18 1 44 1 316 1 
74 2 264 2 292 8 318 3 119 4 210 2 342 4 373 4 307 1 182 1 347 1 3 1 156 1 64 2 66 2 378 1 370 1 249 1 18 1 44 1 
292 6 318 2 119 3 342 3 307 1 182 1 3 1 66 2 311 1 378 1 249 1 370 1 18 1 44 1 
74 1 223 1 264 1 292 4 318 1 210 1 119 2 342 2 373 2 49 1 154 1 131 1 64 1 66 1 378 1 370 1 
223 2 292 12 318 4 119 6 342 6 49 2 154 2 156 2 351 1 66 2 378 2 335 2 370 2 274 1 88 1 56 2 
223 2 74 2 264 2 292 30 318 12 342 16 182 2 49 2 3 4 154 2 347 2 349 1 156 5 368 1 351 1 271 1 249 4 370 4 88 1 56 2 119 14 210 2 373 4 307 1 64 2 66 7 378 4 335 2 18 1 44 1 
292 1 342 1 335 1 
292 1 119 1 56 1 
74 1 223 1 264 1 292 6 318 3 210 1 119 3 373 2 342 3 49 1 154 1 131 1 156 2 64 1 66 1 378 1 370 1 273 1 
74 1 223 2 264 1 292 12 46 1 318 2 342 6 49 2 154 2 156 1 136 1 370 2 274 1 56 1 302 1 210 1 119 6 34 1 373 2 239 1 64 1 66 1 378 2 124 1 335 1 
292 6 318 2 119 3 342 3 182 1 3 1 156 1 66 1 378 1 370 1 249 1 
74 1 264 1 292 3 318 2 119 1 210 1 342 2 373 2 3 1 347 1 156 1 271 1 64 1 66 1 249 1 18 1 44 1 
40 1 253 1 77 1 123 1 299 1 68 1 198 1 
253 1 77 1 61 1 366 1 198 1 40 1 123 1 299 1 218 1 324 1 172 1 68 1 
371 1 224 4 117 4 130 1 143 1 184 1 376 1 232 1 145 1 170 4 67 1 158 1 288 1 
224 2 117 2 152 1 197 1 212 1 375 1 228 1 367 1 376 1 84 1 145 1 170 2 67 1 158 2 
224 1 371 1 117 1 113 1 216 1 25 1 24 1 67 1 170 1 158 1 
224 2 117 2 110 1 145 1 194 1 67 1 170 2 158 1 120 1 130 1 376 1 
371 1 224 5 45 1 117 5 341 1 212 1 143 1 130 1 184 1 376 2 110 1 145 3 170 4 67 2 158 2 288 1 
371 1 224 5 45 1 117 5 212 1 143 1 130 1 184 1 376 2 110 1 145 3 170 4 217 1 67 2 158 2 288 1 
276 1 253 1 371 1 224 1 117 1 375 1 180 1 78 1 198 1 376 1 40 2 283 1 272 1 145 1 170 1 67 1 158 1 68 2 
276 1 13 1 253 2 224 1 117 1 365 1 375 2 180 1 78 2 212 1 141 1 198 1 376 2 40 2 241 1 358 1 283 1 272 1 145 3 170 1 67 1 158 1 68 2 
276 1 13 1 253 2 224 2 117 2 365 1 375 2 180 1 78 2 212 1 141 1 198 1 376 2 40 2 241 1 358 1 232 1 272 1 145 3 260 1 170 2 67 1 158 1 68 2 
371 1 13 1 263 2 224 3 117 3 2 1 365 1 375 1 102 1 212 1 229 1 331 1 376 1 105 1 157 1 134 1 232 1 145 4 261 1 147 2 170 3 67 1 158 1 
371 1 13 1 263 2 224 3 117 3 365 1 375 1 212 1 229 1 331 1 376 1 80 1 105 1 157 1 134 1 232 1 145 4 261 1 147 2 170 3 67 1 158 1 
224 1 117 1 67 1 170 1 158 1 240 1 
338 1 371 2 224 7 45 1 178 1 76 1 341 1 117 7 194 1 197 1 375 1 130 1 240 1 367 1 376 2 333 1 110 1 145 3 170 6 67 2 158 3 
74 2 264 2 224 1 292 6 318 2 342 3 182 1 180 1 78 1 3 1 130 1 27 1 272 1 234 1 370 1 249 1 158 1 276 1 253 1 193 1 327 1 117 1 119 3 210 2 59 2 32 1 329 1 373 4 35 1 307 1 375 1 142 1 198 2 376 1 40 2 64 2 122 2 283 1 66 2 378 1 145 1 67 1 170 1 18 1 68 2 174 1 44 1 
203 1 99 1 263 3 224 1 23 2 229 2 80 1 105 1 157 1 134 1 207 1 250 1 188 1 55 1 371 1 326 2 138 1 117 1 306 1 91 2 331 1 41 1 379 1 145 2 261 1 170 1 147 3 97 2 
224 2 76 1 117 2 179 1 375 1 130 1 240 1 105 1 376 1 145 2 170 2 67 1 158 2 
224 1 371 1 117 1 311 1 145 1 67 1 170 1 158 1 143 1 376 1 184 1 
276 1 253 1 371 1 224 1 117 1 375 1 180 1 78 1 198 1 376 1 40 2 272 1 145 1 260 1 170 1 67 1 158 1 68 2 
224 1 76 1 333 1 117 1 145 1 67 1 170 1 158 2 197 1 375 1 212 1 367 1 376 1 
293 1 328 1 259 1 198 1 237 1 
301 1 263 2 293 2 328 2 26 1 255 1 141 1 198 1 331 1 7 1 157 1 241 1 358 1 259 2 261 1 147 2 207 1 187 1 237 1 
40 1 377 1 253 1 328 1 259 1 245 1 68 1 237 1 121 1 
26 1 255 1 237 1 
213 1 362 1 319 1 186 1 95 1 96 1 159 1 87 1 
204 1 290 1 362 1 14 2 319 1 268 1 205 1 213 3 42 1 186 2 200 1 96 2 159 4 87 4 
362 1 191 1 319 1 363 1 14 1 213 1 95 1 186 1 336 1 96 1 159 2 87 2 
290 2 362 1 319 1 268 2 205 1 213 1 95 1 186 1 96 1 159 3 69 1 87 3 
213 2 257 1 369 2 129 1 
6 1 362 1 319 1 95 1 159 1 87 1 
213 1 362 1 14 1 166 1 319 1 186 1 95 1 96 1 159 2 87 2 
308 1 
213 1 362 1 319 1 186 1 95 1 96 1 159 1 87 1 
290 1 362 1 14 1 319 1 213 1 166 1 95 1 186 1 96 1 159 3 87 3 
213 1 204 1 42 1 200 1 
213 1 96 1 
213 1 311 1 186 1 96 1 
213 1 362 1 319 1 186 1 96 1 159 1 87 1 
137 1 87 1 104 1 
290 2 362 1 319 1 268 1 205 1 213 1 95 1 186 1 96 1 159 3 360 1 87 3 
213 1 362 1 14 1 319 1 186 1 96 1 125 1 159 2 87 2 
362 1 319 1 101 1 25 1 213 1 42 1 95 1 216 1 159 1 312 1 87 1 
213 1 362 1 319 1 95 1 96 1 159 1 87 1 
362 1 319 1 186 1 95 1 96 2 159 1 87 1 
213 1 362 2 81 1 319 2 95 1 96 1 10 1 159 2 87 2 63 1 
204 1 362 1 319 1 14 2 213 2 135 1 166 1 42 1 186 1 95 1 96 1 159 3 87 3 
362 1 340 1 319 1 14 1 101 1 25 2 39 1 213 1 113 1 186 1 95 1 216 1 96 1 159 2 87 2 
204 1 362 2 319 2 225 1 14 2 213 2 42 1 186 1 95 1 96 1 125 1 159 4 87 4 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.ArithmeticException 262 104 (35,226) (35,226) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.ArithmeticException 262 104 (35,226) (35,226) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.ArithmeticException 262 104 333 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.ArithmeticException 262 104 333 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V ERROR java.lang.NullPointerException (97,347) 56 
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (69,159) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (49,58,154) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (69,159) (69,159) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V FAILED junit.framework.AssertionFailedError 223 
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testFromString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testIncrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testDecrementDuration()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 223 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V ERROR java.lang.NullPointerException 233 358 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException (97,347) (97,347) (161,247) 324 
com.domainlanguage.time.TimeIntervalTest:testLength()V ERROR java.lang.NullPointerException 227 
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V ERROR java.lang.NullPointerException (97,347) 
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 186 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V ERROR java.lang.NullPointerException (97,347) (97,347) 
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (69,159) (69,159) 152 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V ERROR java.lang.NullPointerException (97,347) 56 
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V ERROR java.lang.NullPointerException 173 (68,254) 
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 173 (68,254) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 173 (115,132) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V ERROR java.lang.NullPointerException 173 (115,132) 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException 133 
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | RETURN | 2440 | return null
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money; | CONSTANT | 4705 | 1 -> 2
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:isPositive()Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
61 1 317 4 346 1 117 3 174 3 253 2 280 7 27 2 28 1 180 1 226 1 143 1 304 2 228 2 356 1 262 2 82 2 104 1 188 1 35 1 15 1 313 1 86 7 131 2 38 1 
61 1 317 4 346 1 117 3 174 3 253 2 280 7 27 2 28 1 226 1 180 1 304 2 143 1 228 2 356 1 262 2 82 2 104 1 188 1 35 1 15 1 313 1 86 7 131 2 38 1 
61 1 317 6 346 1 4 1 117 4 174 5 253 2 280 9 27 2 28 1 178 1 226 1 180 2 304 2 143 1 228 2 356 1 184 1 262 2 82 3 104 1 188 1 35 1 334 1 15 1 313 1 86 9 131 2 38 1 
61 1 317 4 346 1 117 3 174 4 253 2 280 7 27 2 28 1 226 1 180 1 304 2 143 1 228 2 356 1 184 1 262 2 82 2 104 1 188 1 35 1 334 1 15 1 313 1 86 7 131 2 38 1 
180 2 228 1 317 3 304 1 184 1 262 1 346 1 4 1 82 1 104 1 117 2 174 3 334 1 27 1 280 4 131 1 86 4 28 1 178 1 
228 1 17 1 184 1 262 1 346 1 174 1 188 1 253 1 334 1 15 1 27 1 280 2 131 1 86 2 225 1 50 1 
317 1 184 1 346 1 82 1 117 1 174 2 253 1 334 1 27 2 280 3 131 2 86 3 38 1 
180 1 228 1 304 1 317 5 356 1 262 1 346 1 333 1 82 2 104 1 174 3 117 3 253 1 313 1 27 2 280 7 131 2 86 7 28 1 38 1 214 1 
180 1 228 1 304 1 317 5 356 1 262 1 346 1 333 1 82 2 104 1 174 3 117 3 253 1 313 1 27 2 280 7 131 2 86 7 28 1 38 1 214 1 
223 1 14 1 98 1 
62 2 158 1 98 1 
111 2 41 2 21 1 
258 1 99 2 41 1 111 1 1 1 21 1 204 1 13 2 197 2 97 1 56 1 108 1 
111 1 41 1 69 1 21 1 
215 1 40 1 100 1 154 1 3 1 135 1 83 1 116 1 26 1 14 1 98 1 49 1 58 1 121 1 
111 1 41 1 49 1 
46 1 89 1 285 1 26 1 58 1 
89 1 297 1 285 1 26 2 14 1 98 1 58 2 16 1 
285 1 26 1 58 1 
89 1 111 1 41 1 69 1 26 1 159 1 58 1 21 1 
98 1 
89 1 309 1 285 1 26 2 14 1 98 1 58 2 16 1 
302 1 89 2 123 1 275 2 231 1 286 1 285 2 218 2 22 1 325 1 24 2 150 1 26 5 14 1 98 1 58 5 16 1 199 1 339 1 
223 1 
40 1 41 1 111 1 100 1 353 1 331 1 3 1 23 1 8 1 121 1 
41 1 111 3 209 1 
111 1 
111 1 41 1 353 1 23 1 
41 1 111 2 353 1 209 1 241 1 
215 1 40 1 111 1 100 1 3 1 209 1 72 1 8 1 121 1 
111 1 209 1 241 1 
111 1 41 1 353 1 
99 1 13 1 197 1 204 1 
99 1 13 1 197 1 204 1 
194 1 103 2 10 1 296 1 312 1 256 1 57 1 160 1 
111 1 25 1 
99 1 111 1 13 1 209 1 197 1 204 1 241 1 
215 1 40 1 111 4 41 1 100 1 340 1 353 1 3 1 235 1 209 2 72 1 8 1 121 1 241 1 
111 1 
74 1 70 1 
74 1 70 1 
250 1 101 1 
250 1 101 1 
250 1 101 1 
74 1 70 1 124 1 
74 1 70 1 124 1 
9 1 74 1 70 1 
74 2 250 1 101 1 70 2 239 1 33 1 
74 1 70 1 124 1 
276 1 74 1 70 1 
276 1 74 1 70 1 
276 1 74 1 70 1 
74 2 283 3 113 2 183 1 33 1 80 1 205 2 361 1 36 2 362 1 157 1 70 2 26 2 128 2 238 1 98 1 58 2 338 2 282 1 
9 1 74 1 283 1 111 2 191 1 113 1 134 1 92 1 52 1 287 1 205 1 252 1 26 1 70 1 128 1 293 1 58 1 338 1 282 1 
228 1 304 1 262 1 
228 1 262 1 225 1 
304 2 30 1 228 3 301 1 225 1 294 1 
304 1 228 2 270 1 301 1 225 1 294 1 
304 1 228 2 301 2 225 1 294 1 
89 4 216 1 275 1 62 3 170 1 191 1 218 1 342 1 92 1 67 1 24 1 252 1 326 2 158 1 26 5 327 2 98 2 351 1 199 2 302 3 260 1 231 1 285 1 145 1 311 1 149 1 85 2 14 1 106 1 58 5 168 1 16 1 
89 7 216 1 275 2 189 1 62 9 170 3 0 5 218 2 342 3 92 4 67 2 24 2 46 5 326 6 158 3 26 9 327 6 98 5 199 6 302 8 260 3 330 1 231 1 285 6 265 1 310 1 311 3 291 1 150 1 14 1 106 3 58 9 168 2 16 1 60 1 
89 2 275 1 62 4 170 1 218 1 342 1 92 1 67 1 24 1 326 2 158 2 26 3 98 3 327 2 351 1 199 2 302 3 260 1 145 1 311 1 150 1 14 1 85 1 106 1 58 3 168 1 
89 3 275 1 62 7 170 2 218 1 342 2 92 2 67 1 24 1 326 4 158 3 26 4 98 4 327 4 351 1 199 4 302 5 260 2 145 1 310 1 311 2 291 1 150 1 14 1 85 2 106 2 58 4 168 1 60 1 
11 1 223 1 308 1 
11 1 147 1 
31 1 
11 1 343 1 
11 3 224 1 343 1 107 1 308 2 345 1 
11 1 224 1 343 1 
11 1 259 1 
352 3 109 7 75 1 244 1 320 3 44 1 263 1 357 1 219 4 193 1 222 1 266 2 311 1 7 1 106 1 105 1 271 2 
352 3 109 7 75 1 244 1 320 3 44 1 263 1 357 1 219 4 193 1 222 1 266 2 311 1 7 1 106 1 105 1 271 2 
352 3 109 7 244 1 75 1 320 3 44 1 263 1 357 1 219 4 193 1 222 1 171 1 266 2 311 1 7 1 106 1 105 1 271 2 
109 31 244 1 296 1 170 3 320 10 44 2 342 3 219 16 193 1 222 2 94 1 194 1 249 4 196 1 96 1 7 1 256 1 352 15 29 3 260 3 75 1 263 2 357 2 164 1 266 3 103 2 311 4 127 1 292 1 106 4 105 5 57 1 271 5 315 1 
110 1 109 9 244 1 296 2 320 4 44 1 219 5 193 1 222 1 194 2 7 1 256 2 352 4 263 1 357 1 266 2 311 1 103 4 127 1 106 1 105 1 57 2 271 3 87 1 
317 1 190 1 64 1 322 1 43 1 45 1 346 1 299 1 195 1 174 1 253 1 197 1 280 2 27 1 225 1 99 1 304 1 228 2 30 1 162 1 77 1 184 1 262 1 13 1 268 1 334 1 130 1 37 1 86 2 131 1 
317 2 190 1 64 1 322 1 43 1 299 1 195 1 174 1 253 1 139 1 197 1 280 3 27 1 225 1 99 1 304 1 30 1 228 2 77 1 232 1 184 1 262 1 13 1 236 1 268 1 334 1 130 1 37 1 86 3 131 1 
317 2 190 1 64 1 322 1 299 1 195 1 174 1 253 1 197 1 280 2 225 1 99 1 228 2 30 1 304 1 77 1 232 1 184 1 262 1 13 1 236 1 334 1 130 1 37 1 86 2 
217 1 39 1 190 2 322 1 64 2 19 1 343 1 299 1 253 2 118 1 139 1 197 1 280 1 27 1 99 1 355 1 204 1 11 1 13 1 130 2 86 1 131 1 364 1 
190 1 64 1 322 1 43 1 346 1 299 1 195 1 253 1 197 1 280 1 27 1 225 1 99 1 304 1 228 2 30 1 162 1 77 1 262 1 13 1 236 1 268 1 130 1 37 1 86 1 131 1 
182 1 
39 1 215 1 275 1 40 1 322 1 2 2 218 1 221 1 3 1 135 1 138 2 98 2 49 1 281 2 99 2 229 1 284 1 100 1 231 1 285 6 11 1 289 2 13 2 187 1 14 1 58 5 336 1 59 2 240 1 16 3 242 1 62 2 343 1 154 1 67 1 24 1 299 1 116 1 118 1 349 1 156 4 158 2 26 5 197 2 199 2 121 1 257 2 302 2 76 1 305 1 79 1 125 1 204 2 83 1 269 2 
215 1 40 1 154 1 221 1 3 1 135 1 116 1 156 2 26 3 49 1 121 1 257 1 100 1 284 1 229 1 285 2 79 1 83 1 309 1 58 3 336 1 16 1 
215 1 40 1 154 1 221 1 3 1 135 1 116 1 156 3 26 3 49 1 98 1 121 1 100 1 284 1 229 1 285 1 79 1 289 1 83 1 309 1 14 1 58 3 336 1 16 1 
215 1 40 1 154 1 221 1 3 1 135 1 116 1 156 3 26 3 49 1 98 1 281 1 121 1 257 1 100 1 284 1 229 1 285 2 79 1 289 1 83 1 309 1 14 1 58 3 336 1 16 1 
242 1 215 1 275 1 40 1 153 1 192 1 2 2 218 1 154 1 221 1 3 1 135 1 24 1 172 1 116 1 138 2 156 6 158 2 26 5 98 5 49 1 281 4 199 1 121 1 257 4 302 1 100 1 284 1 229 1 231 1 285 7 79 1 81 1 289 4 165 1 83 1 309 1 14 5 269 2 58 5 336 1 59 2 240 1 16 3 
242 1 215 1 275 1 40 1 62 2 2 2 218 1 154 1 221 1 3 1 135 1 24 1 116 1 138 2 156 4 158 2 26 4 98 2 49 1 281 2 199 1 121 1 257 2 302 1 284 1 229 1 100 1 231 1 285 4 79 1 289 2 83 1 187 1 14 1 269 2 58 4 336 1 16 2 59 2 240 1 
242 1 215 1 275 1 40 1 153 1 2 2 218 1 154 1 221 1 3 1 135 1 24 1 172 1 116 1 138 2 156 4 158 2 26 4 98 1 49 1 281 2 199 1 121 1 257 2 302 1 100 1 284 1 229 1 231 1 285 4 79 1 289 2 165 1 83 1 14 1 269 2 58 4 336 1 16 2 59 2 240 1 
242 1 215 1 275 1 40 1 153 1 2 2 218 1 154 1 221 1 3 1 135 1 24 1 172 1 116 1 138 2 156 4 158 2 26 4 98 1 49 1 281 2 199 1 121 1 257 2 302 1 100 1 284 1 229 1 231 1 285 4 79 1 289 2 165 1 83 1 14 1 269 2 58 4 336 1 16 2 59 2 240 1 
215 1 275 1 40 1 62 2 169 1 218 1 154 1 221 1 3 1 135 1 24 1 251 2 116 1 138 2 156 4 177 1 26 4 98 1 49 1 281 2 199 1 121 1 257 2 302 1 100 1 284 1 229 1 231 1 285 4 79 1 289 2 165 1 83 1 84 1 14 1 269 2 211 2 58 4 336 1 16 2 240 1 
242 1 215 1 275 1 40 1 153 1 192 1 2 2 218 1 154 1 221 1 3 1 135 1 24 1 172 1 116 1 138 2 156 5 158 2 26 4 98 1 49 1 281 3 199 1 121 1 257 3 302 1 100 1 284 1 229 1 231 1 285 5 79 1 289 3 165 1 83 1 14 1 269 2 58 4 336 1 16 2 59 2 240 1 
242 1 215 1 275 1 40 1 153 1 192 1 2 2 218 1 154 1 221 1 3 1 135 1 24 1 172 1 116 1 138 2 156 5 158 2 26 4 98 1 49 1 281 3 199 1 121 1 257 3 302 1 100 1 284 1 229 1 231 1 285 5 79 1 289 3 165 1 83 1 14 1 269 2 58 4 336 1 16 2 59 2 240 1 
215 1 275 1 40 1 62 2 218 1 154 1 221 1 3 1 135 1 24 1 251 2 116 1 138 2 156 4 26 4 177 1 98 1 49 1 281 2 199 1 121 1 257 2 302 1 284 1 229 1 100 1 231 1 285 4 79 1 289 2 83 1 187 1 14 1 269 2 211 2 58 4 336 1 16 2 240 1 
109 2 10 1 244 1 296 1 320 1 44 1 357 1 219 2 193 1 194 1 266 1 103 2 223 1 312 1 7 1 106 1 57 1 256 1 271 1 160 1 
352 1 194 1 29 1 249 1 109 2 103 2 296 1 312 1 233 1 256 1 57 1 20 1 219 1 358 1 160 1 
352 1 109 2 111 1 296 1 20 1 219 1 248 1 194 1 103 2 237 1 209 1 119 1 312 1 71 1 57 1 256 1 160 1 241 1 
352 1 161 1 99 1 109 1 111 1 296 1 20 1 324 1 347 1 204 1 194 1 13 1 103 2 209 1 197 1 312 1 97 1 71 1 57 1 256 1 160 1 241 1 
227 1 99 1 109 1 296 1 246 1 219 1 204 1 194 1 103 2 13 1 237 1 312 1 197 1 57 1 256 1 160 1 
352 1 201 1 260 1 109 2 41 1 111 1 353 1 170 1 296 1 342 1 20 1 219 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
260 1 109 1 10 1 296 1 219 1 194 1 146 1 103 2 312 1 106 1 57 1 256 1 160 1 
352 1 109 1 10 1 296 1 342 1 194 1 103 2 311 1 176 1 312 1 57 1 256 1 160 1 
352 1 260 1 109 2 10 1 296 1 170 1 342 1 219 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
260 1 109 1 296 1 246 1 219 1 194 1 146 1 103 2 312 1 106 1 57 1 256 1 160 1 
352 1 109 1 296 1 246 1 342 1 194 1 103 2 311 1 176 1 312 1 57 1 256 1 160 1 
352 1 260 1 109 2 296 1 170 1 246 1 342 1 219 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
352 1 260 1 109 2 296 1 170 1 342 1 219 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
99 1 13 1 197 1 97 1 204 1 
99 1 186 1 13 1 197 1 204 1 
352 1 260 1 109 2 296 1 170 1 342 1 20 1 219 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
99 1 13 1 197 1 97 1 45 1 347 1 
352 1 260 1 109 2 41 1 111 1 353 1 170 1 296 1 342 1 20 1 219 1 332 1 194 1 311 1 103 2 312 1 106 1 57 1 256 1 160 1 
110 1 109 19 296 2 170 3 320 6 342 3 219 9 194 2 47 1 249 2 348 2 175 1 350 1 196 1 256 2 120 1 352 10 303 2 29 1 260 3 288 1 164 1 166 1 103 4 311 3 106 3 105 3 314 1 57 2 271 3 
110 1 109 26 296 3 170 3 320 4 342 2 219 14 194 3 136 1 249 2 348 4 175 1 350 1 196 2 256 3 120 2 329 1 352 12 303 1 29 2 73 1 260 3 53 1 55 1 166 2 311 2 103 6 127 2 267 1 105 2 106 3 314 1 57 3 271 2 
110 1 109 41 244 1 296 3 170 4 320 8 44 1 342 4 219 20 193 1 194 3 136 1 249 4 348 4 175 1 350 1 196 3 7 1 256 3 120 2 329 1 352 21 303 1 73 1 29 3 260 4 357 1 53 1 126 1 288 1 266 1 164 1 55 1 166 1 103 6 311 5 127 1 267 1 106 5 105 4 314 1 57 3 271 4 
110 1 109 38 244 1 296 4 170 4 320 7 44 1 342 3 219 20 193 1 194 4 136 1 249 4 348 4 175 1 350 1 196 3 7 1 256 4 120 2 329 1 352 18 303 1 73 1 29 3 260 4 357 1 53 1 126 1 288 1 266 1 164 1 55 1 166 1 103 8 311 4 127 2 267 1 106 5 105 3 314 1 57 4 271 4 
110 1 109 52 244 1 296 2 170 7 320 14 44 1 342 7 219 27 193 1 194 2 136 1 249 4 348 4 175 1 350 1 140 2 196 2 7 1 256 2 120 1 329 1 352 25 303 1 73 1 29 4 260 7 357 1 53 1 266 1 164 2 55 1 166 1 103 4 311 8 127 1 267 1 106 8 105 7 314 1 57 2 271 7 
74 1 181 1 362 1 157 1 70 1 113 1 128 1 33 1 338 1 205 1 
9 1 134 1 
74 1 70 1 113 1 128 1 65 1 255 1 338 1 213 1 205 1 
74 1 283 2 113 1 183 1 33 1 80 1 205 1 361 1 36 1 362 1 157 1 26 1 70 1 128 1 98 1 58 1 338 1 282 1 
74 1 283 2 113 1 183 1 33 1 80 1 205 1 361 1 36 1 362 1 157 1 26 1 70 1 128 1 98 1 58 1 338 1 282 1 
74 1 283 2 113 1 183 1 33 1 80 1 205 1 361 1 36 1 362 1 157 1 26 1 70 1 128 1 98 1 58 1 338 1 282 1 
341 1 124 1 239 1 
341 1 124 1 239 1 
276 1 141 1 
276 1 141 1 239 1 
293 1 287 1 
9 1 89 1 74 1 111 2 283 1 191 1 113 1 183 1 134 1 92 1 52 1 287 1 205 1 279 1 252 1 36 1 70 1 26 1 128 1 293 1 58 1 338 1 
341 1 124 1 
276 1 141 1 239 1 
40 2 109 2 112 1 296 1 1 2 322 1 20 1 343 1 219 1 194 1 299 1 5 1 142 1 197 2 198 1 71 1 256 1 160 1 121 2 352 1 227 1 99 2 100 2 354 1 11 1 13 2 103 2 237 1 335 1 312 1 57 1 
99 2 304 1 30 1 228 2 77 1 322 1 64 1 262 1 163 1 45 1 299 1 195 1 236 1 13 2 300 1 268 1 197 2 225 1 122 1 
99 1 304 1 30 1 228 2 77 1 64 1 322 1 262 1 163 1 54 1 299 1 195 1 236 1 13 1 268 1 197 1 225 1 
39 1 99 1 355 1 322 1 64 1 343 1 204 1 11 1 299 1 13 1 118 1 197 1 212 1 122 1 
99 1 304 1 30 1 228 2 77 1 322 1 64 1 262 1 163 1 299 1 195 1 236 1 13 1 300 1 268 1 197 1 225 1 122 1 
129 1 
302 1 123 1 223 1 14 1 98 1 199 1 339 1 
242 1 275 1 62 1 2 1 218 1 24 1 158 1 26 1 98 2 199 1 302 1 231 1 285 1 14 1 58 1 59 1 16 1 
275 4 170 2 322 4 218 4 323 2 220 1 45 1 326 6 6 1 224 3 327 6 98 8 99 3 231 4 285 5 102 2 11 10 147 3 185 1 13 3 290 2 14 2 106 2 58 5 107 1 16 3 339 1 62 12 245 2 114 1 247 2 342 2 343 3 67 2 24 4 68 2 299 3 26 5 158 6 197 3 199 8 302 9 259 2 123 1 260 2 78 2 305 1 204 1 308 2 206 1 83 2 208 2 311 2 363 2 
275 2 62 6 245 1 170 2 218 2 342 2 67 1 24 2 136 1 249 1 326 5 26 1 158 3 196 1 327 5 98 5 199 5 302 8 73 1 29 1 260 2 231 2 285 1 305 1 53 1 234 1 55 1 311 2 290 2 267 1 14 2 106 2 58 1 16 1 272 1 
302 2 275 1 111 1 41 1 152 1 231 1 218 1 44 1 357 1 21 1 193 1 24 1 172 1 69 1 311 1 290 2 26 1 106 1 159 1 58 1 199 1 
302 1 123 1 275 1 231 1 218 1 24 1 14 1 98 1 199 1 339 1 
302 5 260 2 62 10 245 1 170 2 323 1 342 2 326 5 311 2 290 2 158 5 106 2 327 5 98 5 199 5 
26 1 285 1 14 1 98 1 58 1 16 1 
39 1 275 2 322 1 114 1 218 2 343 1 220 2 67 2 24 2 299 1 118 1 26 3 197 4 199 2 302 2 99 4 231 1 76 1 285 4 203 1 306 1 305 2 125 1 204 2 11 1 13 4 150 1 58 3 16 2 
99 1 111 1 41 1 13 1 197 1 97 1 56 1 21 1 204 1 
302 1 275 1 62 4 231 1 218 1 305 1 67 1 24 1 266 1 326 2 158 2 14 2 327 2 98 4 199 2 
113 1 66 1 338 1 
113 1 66 1 338 1 
278 1 362 1 113 1 338 1 287 1 
113 1 66 1 338 1 
202 1 113 1 338 1 
202 1 113 1 338 1 
202 1 113 1 338 1 
113 1 338 1 
74 1 70 1 
352 4 109 8 244 1 296 2 320 3 44 1 357 1 219 4 193 1 194 2 266 1 311 1 103 4 127 1 7 1 106 1 105 1 57 2 256 2 271 2 
352 3 266 1 109 6 311 1 244 1 223 1 320 2 7 1 106 1 44 1 357 1 219 3 271 2 193 1 
352 2 260 1 109 4 296 1 170 1 91 1 320 2 342 1 219 2 194 1 311 1 103 2 106 1 105 1 57 1 256 1 271 1 
352 4 29 1 260 1 109 7 170 1 320 2 342 1 219 3 249 2 164 1 311 1 196 1 106 1 105 1 271 1 
109 23 244 1 170 2 296 2 320 9 44 2 342 2 219 11 193 1 194 2 249 2 140 1 7 1 256 2 352 12 29 2 260 2 357 2 233 1 359 1 266 1 164 1 311 3 103 4 127 2 105 4 106 3 57 2 271 5 
352 1 249 1 109 1 
29 1 109 1 219 1 
352 3 260 1 109 6 296 1 170 1 91 1 320 3 323 1 342 1 219 3 194 1 103 2 311 1 106 1 105 1 256 1 57 1 271 2 
109 12 110 1 296 1 170 2 320 2 342 2 219 6 194 1 136 1 249 1 196 1 256 1 352 6 29 1 73 1 260 2 53 1 55 1 103 2 311 2 267 1 105 1 106 2 57 1 271 1 
352 3 109 6 320 2 44 1 357 1 219 3 193 1 311 1 106 1 105 1 271 1 
352 2 109 3 244 1 296 1 320 2 44 1 357 1 219 1 359 1 194 1 103 2 127 1 7 1 105 1 57 1 256 1 271 1 
352 5 110 1 152 1 109 10 296 1 320 5 44 2 357 2 219 5 193 1 194 1 103 2 311 2 105 2 106 2 256 1 57 1 271 3 
260 1 110 1 109 2 296 1 320 1 219 2 194 1 103 2 106 1 105 1 57 1 256 1 
352 2 260 1 110 1 109 4 296 1 170 1 320 2 342 1 219 2 194 1 311 1 103 2 106 1 105 1 57 1 256 1 271 1 
352 2 109 3 110 1 296 3 320 2 44 1 357 1 219 1 359 1 194 3 288 1 103 6 127 1 105 1 57 3 256 3 271 1 
110 1 109 34 244 1 296 5 170 3 91 1 320 12 44 3 342 3 219 16 193 2 94 1 194 5 249 4 196 1 7 1 256 5 352 18 29 3 260 3 357 3 359 1 266 1 288 1 164 1 103 10 311 5 127 2 292 1 106 5 105 5 57 5 271 7 315 1 
109 8 110 1 244 1 296 1 320 2 44 1 219 4 193 1 194 1 249 1 196 1 7 1 256 1 352 4 29 1 73 1 357 1 266 1 311 1 103 2 106 1 57 1 271 2 
109 11 110 1 244 1 296 2 170 1 91 1 320 3 44 1 219 6 193 1 194 2 249 2 196 1 7 1 256 2 352 5 73 1 29 1 260 1 357 1 266 1 164 1 311 1 103 4 106 2 105 1 57 2 271 2 
109 19 110 1 244 1 296 3 170 2 91 1 320 4 44 1 342 2 219 9 193 1 194 3 136 1 249 1 196 1 7 1 256 3 352 10 29 1 73 1 260 2 357 1 53 1 266 1 55 1 103 6 311 3 267 1 127 1 105 1 106 3 57 3 271 3 
109 17 110 1 244 1 296 3 170 2 91 1 320 5 44 1 342 1 219 10 193 1 194 3 136 1 249 1 196 1 7 1 256 3 352 7 29 1 73 1 260 2 357 1 53 1 266 1 55 1 103 6 311 2 127 1 267 1 105 2 106 3 57 3 271 3 
109 8 110 1 244 1 296 1 320 2 44 1 219 4 193 1 194 1 249 1 196 1 7 1 256 1 352 4 29 1 73 1 357 1 266 1 311 1 103 2 106 1 57 1 271 2 
109 12 110 1 296 1 170 2 320 2 342 2 219 6 194 1 136 1 249 1 196 1 256 1 352 6 29 1 73 1 260 2 53 1 55 1 103 2 311 2 267 1 105 1 106 2 57 1 271 1 
109 18 110 1 244 1 296 4 170 2 91 1 320 5 44 1 342 1 219 10 193 1 194 4 136 1 249 1 196 1 7 1 256 4 352 8 73 1 29 1 260 2 357 1 53 1 266 1 55 1 103 8 311 2 267 1 127 2 105 2 106 3 57 4 271 3 
109 16 110 1 296 4 170 3 320 6 342 2 219 9 194 4 136 1 249 1 196 1 256 4 352 7 73 1 29 1 260 3 53 1 288 1 55 1 103 8 311 2 267 1 127 2 105 3 106 3 57 4 271 3 
352 4 109 7 244 2 320 6 44 3 357 3 219 3 193 1 311 1 7 1 105 3 106 1 271 3 
109 18 110 1 244 1 296 4 170 2 320 4 44 1 342 1 219 10 193 1 194 4 136 1 249 1 196 1 7 1 256 4 352 8 73 1 29 1 260 2 357 1 53 1 266 1 288 1 55 1 103 8 311 2 267 1 127 2 105 1 106 3 57 4 271 3 
215 1 40 1 316 1 100 1 331 1 72 1 121 1 
273 1 215 1 316 1 40 1 100 1 51 1 331 1 63 1 321 1 277 1 72 1 121 1 
11 1 39 1 299 1 99 1 13 1 118 1 223 1 322 1 197 1 343 1 204 1 
11 1 173 1 299 1 99 1 111 1 13 1 209 1 224 1 254 1 322 1 197 1 343 1 204 1 
11 1 173 1 299 1 99 1 111 1 13 1 209 1 224 1 254 1 322 1 197 1 343 1 220 1 
11 1 173 1 299 1 99 1 111 1 13 1 209 1 224 1 322 1 197 1 115 1 343 1 220 1 
132 1 322 1 343 1 220 1 299 1 137 1 26 2 48 1 224 1 197 3 98 1 259 1 99 3 285 1 78 1 308 1 204 1 11 4 147 1 83 1 13 3 14 1 58 2 
259 1 99 3 285 1 78 1 322 1 343 1 220 1 204 1 308 1 11 4 68 1 147 1 299 1 83 1 13 3 26 2 48 1 14 1 224 1 197 3 98 1 58 2 
299 1 99 1 13 1 322 1 197 1 200 1 
99 7 1 1 319 1 354 1 322 3 264 1 344 1 343 2 45 1 204 2 11 3 299 2 148 1 236 1 13 7 155 1 224 1 197 6 210 1 107 1 200 1 
111 1 209 1 
89 1 275 2 114 1 247 1 218 2 24 2 68 1 26 3 197 1 98 1 199 1 302 1 123 1 99 1 231 2 285 2 102 1 204 1 308 1 11 2 147 1 83 1 13 1 208 1 14 1 58 3 16 1 339 1 
99 2 322 2 343 1 45 1 308 1 11 2 185 1 299 1 13 2 224 1 197 2 107 1 200 1 
39 1 99 4 322 1 343 1 45 1 204 1 11 1 299 1 13 4 118 1 48 1 197 4 337 1 
99 2 319 1 42 1 322 2 343 1 220 1 95 1 11 1 12 1 299 1 13 2 155 1 224 1 197 2 
299 1 99 1 228 1 195 1 13 1 322 1 197 1 262 1 225 1 204 1 
99 2 112 1 354 1 322 1 343 1 45 1 11 1 299 1 13 2 236 1 197 2 
39 1 99 5 354 1 322 2 344 1 343 2 220 1 45 1 204 1 11 3 299 2 148 1 13 5 118 1 197 4 337 1 
39 1 99 5 274 1 354 1 322 2 343 2 220 1 45 1 204 1 11 3 299 2 148 1 13 5 118 1 197 4 337 1 
11 1 173 1 299 1 99 1 111 1 13 1 209 1 224 1 322 1 197 1 115 1 343 1 204 1 
99 1 319 1 322 2 343 1 220 1 11 1 299 1 13 1 155 1 224 1 197 1 210 1 107 1 
179 1 40 1 100 1 318 1 5 1 142 1 198 1 121 1 88 1 
179 1 261 1 133 1 
179 1 318 1 295 1 88 1 
89 1 179 1 261 1 318 1 26 1 133 1 18 1 58 1 295 1 88 1 
174 1 223 1 334 1 184 1 
174 1 334 1 184 1 280 1 27 1 86 1 131 1 
253 1 130 1 86 1 
298 1 184 1 346 1 174 1 207 1 151 1 334 1 27 1 280 3 15 2 131 1 86 3 
180 1 317 1 184 1 174 1 334 1 27 1 280 2 131 1 86 2 178 1 
228 1 304 1 174 1 117 1 262 1 280 1 27 1 86 1 131 1 28 1 346 1 
174 1 184 1 280 1 27 1 86 1 131 1 346 1 
334 1 184 2 280 1 27 1 86 1 131 1 346 1 
184 1 346 1 360 1 174 1 27 2 280 2 131 2 86 2 328 1 365 1 
317 2 356 1 184 1 346 1 82 1 117 1 174 2 334 1 27 1 280 3 313 1 131 1 86 3 
228 2 30 1 304 1 317 1 184 1 262 1 346 1 34 1 174 1 334 1 27 1 280 2 131 1 86 2 225 1 
180 1 317 2 184 1 346 1 4 1 82 1 117 1 174 2 334 1 27 1 280 3 131 1 86 3 178 1 
174 1 334 1 184 1 280 1 27 1 86 1 131 1 346 1 
317 2 184 2 82 1 207 1 117 1 174 3 151 1 334 2 15 1 280 4 27 1 86 4 131 1 178 1 
317 1 90 1 184 1 346 1 93 1 174 1 334 1 27 1 280 2 131 1 86 2 214 1 
32 1 184 1 346 1 174 1 207 2 151 1 334 1 27 1 280 3 15 2 131 1 86 3 
243 2 174 2 167 1 307 1 
144 1 280 1 27 1 86 1 131 1 346 1 
317 1 174 1 334 1 356 1 184 1 280 2 27 1 86 2 131 1 346 1 
230 1 
174 1 334 1 184 1 280 1 27 1 86 1 131 1 346 1 
317 1 174 1 334 1 356 1 184 1 15 1 280 3 27 1 86 3 131 1 346 1 
82 1 174 1 117 1 178 1 
174 1 184 1 

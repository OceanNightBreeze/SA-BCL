#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.NullPointerException (15,111) 61 (0,216) (0,216) 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.NullPointerException (15,111) 61 (0,216) (0,216) 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.NullPointerException (15,111) 61 (0,216) (0,216) 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.NullPointerException (15,111) 61 (0,216) (0,216) 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal; | ASSIGN | 629 | = null
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1553 | 0 -> 1
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
9 1 243 1 61 1 11 1 0 1 1 1 235 1 155 1 15 1 216 1 202 1 
9 1 243 1 61 1 11 1 0 1 1 1 235 1 155 1 15 1 216 1 202 1 
9 1 243 1 61 1 11 1 0 1 1 1 235 1 155 1 15 1 216 1 202 1 
9 1 243 1 61 1 11 1 0 1 1 1 235 1 155 1 15 1 216 1 202 1 
9 1 261 2 243 4 315 1 1 4 76 1 45 1 107 1 360 1 46 1 127 3 194 3 155 1 274 1 7 2 341 1 202 1 313 1 
9 1 72 1 243 2 11 1 1 2 235 1 107 1 46 1 180 1 194 1 365 1 155 1 274 1 60 1 202 1 313 1 
9 2 261 1 243 3 11 1 1 3 76 1 107 1 127 1 194 2 111 1 155 1 274 1 202 2 
9 2 261 4 315 1 243 9 233 1 11 1 1 9 45 1 76 3 107 1 360 1 46 1 127 7 194 5 163 1 129 1 111 1 155 1 274 1 7 2 341 1 202 2 313 1 146 1 
9 2 261 4 315 1 243 9 233 1 11 1 1 9 45 1 76 3 107 1 360 1 46 1 127 7 194 5 163 1 129 1 111 1 155 1 274 1 7 2 341 1 202 2 313 1 146 1 
137 1 327 1 150 1 
327 1 275 2 311 1 
27 2 159 2 89 2 364 1 331 2 366 1 172 2 176 2 
353 1 159 3 176 2 116 1 301 1 48 2 179 2 270 1 27 3 210 2 212 1 89 2 67 1 364 1 214 1 366 1 143 1 242 1 145 1 343 1 218 1 369 1 321 1 165 1 371 1 322 1 350 1 131 1 329 1 293 1 256 2 154 1 331 2 172 2 232 1 258 2 296 1 
34 1 27 1 159 1 89 1 331 1 366 1 172 1 176 1 276 1 192 1 
137 1 156 1 354 1 159 1 44 1 283 1 28 1 27 1 184 1 327 1 294 1 331 1 69 1 276 1 
137 1 156 2 354 2 159 1 44 1 283 1 176 1 27 1 184 1 327 1 89 1 294 1 331 1 172 1 276 1 
5 1 156 1 354 1 56 1 62 1 
137 1 156 2 354 2 327 1 100 1 56 1 8 1 62 1 
156 1 354 1 56 1 
34 1 27 1 156 1 297 1 354 1 159 1 89 1 331 1 366 1 172 1 176 1 276 1 192 1 62 1 
327 1 
137 1 156 2 354 2 327 1 56 1 54 1 8 1 62 1 
137 1 156 5 354 5 35 1 357 2 323 1 62 2 190 2 3 2 37 1 327 1 253 1 99 1 56 2 8 1 50 1 230 1 123 1 368 1 
364 1 150 1 
263 1 159 2 176 1 130 1 27 2 89 1 364 2 331 2 172 1 
221 1 302 1 206 1 
369 1 159 1 165 1 371 1 322 1 374 1 48 1 27 1 210 1 329 1 67 1 364 1 293 1 256 1 242 1 343 1 
369 1 159 2 165 1 222 1 371 1 322 1 48 1 206 1 27 2 210 1 38 1 67 1 89 1 329 1 293 1 256 1 331 1 172 1 242 1 343 1 
27 3 159 3 89 3 364 1 222 1 331 3 176 1 172 3 
34 1 27 1 159 1 89 1 331 1 172 1 276 1 
130 1 27 1 263 1 159 1 89 1 331 1 172 1 176 1 276 1 
353 1 263 1 156 1 354 1 159 4 44 1 176 2 116 1 48 1 179 2 27 4 210 1 212 1 184 1 67 1 89 3 364 1 214 1 308 1 366 1 276 1 143 1 242 1 343 1 218 1 369 1 321 1 165 1 283 1 222 1 371 1 224 1 322 1 38 1 350 1 131 1 329 1 293 1 256 1 294 1 331 3 172 3 258 1 296 1 
27 2 159 2 89 1 364 1 222 1 188 1 331 2 69 1 172 1 
263 1 156 1 354 1 159 3 44 1 222 2 283 1 176 1 348 1 27 3 38 1 184 1 327 1 89 3 308 1 294 1 331 3 172 3 276 1 
263 1 159 2 222 1 221 1 176 1 206 1 27 2 89 2 331 2 172 2 
369 1 159 1 165 1 371 1 322 1 48 1 27 1 210 1 329 1 67 1 364 1 293 1 256 1 242 1 343 1 
159 1 165 1 322 1 48 1 63 1 27 1 210 1 329 1 67 1 364 1 293 1 256 1 84 1 242 1 343 1 
353 1 138 1 116 1 302 2 25 1 206 2 179 2 362 1 182 1 4 1 212 1 121 1 214 1 237 1 273 1 143 1 145 2 71 1 249 1 321 2 221 2 291 1 296 1 258 4 
27 1 44 1 159 1 89 1 254 1 331 1 172 1 276 1 
263 1 159 5 222 2 188 1 86 1 176 1 27 5 38 1 89 4 364 1 331 5 69 1 172 4 144 1 
34 1 27 2 159 2 89 2 254 1 331 2 172 2 276 1 
197 1 31 1 
197 1 31 1 
124 1 250 1 
124 1 250 1 
124 1 250 1 
197 1 157 1 31 1 
197 1 157 1 31 1 
197 1 31 1 201 1 
197 2 31 2 106 1 124 1 250 1 310 1 
197 1 157 1 31 1 
197 1 31 1 24 1 
197 1 31 1 24 1 
197 1 31 1 24 1 
314 3 187 1 156 2 354 2 372 1 14 2 289 2 36 1 140 2 197 2 49 1 327 1 90 1 31 2 257 1 310 1 278 2 312 1 70 2 
314 1 317 1 156 1 354 1 159 2 105 1 288 1 289 1 140 1 290 1 27 2 197 1 168 1 89 2 364 1 331 2 31 1 172 2 257 1 201 1 18 1 278 1 381 1 70 1 
45 1 46 1 313 1 
180 1 46 1 313 1 
180 1 128 1 45 2 379 1 333 1 313 3 
180 1 128 1 211 1 45 1 379 1 313 2 
180 1 128 1 45 1 379 2 313 2 
137 1 156 5 354 5 357 1 358 2 359 1 62 4 2 1 117 1 3 1 98 2 4 1 237 1 275 3 185 1 8 1 311 1 71 1 317 1 35 3 13 1 190 1 193 2 37 2 168 1 291 1 327 2 255 1 56 1 229 1 230 1 381 1 
137 1 156 9 354 9 158 1 357 2 21 1 358 6 62 7 2 3 117 1 3 2 304 1 4 3 5 5 237 3 275 9 50 1 8 1 311 3 342 1 279 1 71 3 317 4 35 8 13 2 190 2 148 1 193 6 37 6 291 3 327 5 255 2 56 6 132 5 230 1 
137 1 156 3 354 3 357 1 358 2 62 2 2 1 3 1 98 1 4 1 237 1 185 1 275 4 50 1 311 2 71 1 317 1 35 3 13 1 190 1 193 2 37 2 291 1 327 3 255 1 229 1 
137 1 156 4 354 4 357 1 21 1 358 4 62 3 2 2 3 1 98 2 4 2 237 2 275 7 185 1 50 1 311 3 279 1 71 2 317 2 35 5 13 1 190 1 148 1 193 4 37 4 291 2 327 4 255 1 229 1 
293 1 306 1 150 1 
293 1 41 1 
355 1 
293 1 165 1 
306 2 293 3 165 1 178 1 242 1 225 1 
293 1 165 1 242 1 
293 1 303 1 
71 1 234 1 97 1 266 1 248 2 321 3 125 1 25 3 151 1 252 1 272 1 237 1 273 2 231 1 258 7 51 1 145 4 
71 1 234 1 97 1 266 1 248 2 321 3 125 1 25 3 151 1 252 1 272 1 237 1 273 2 231 1 258 7 51 1 145 4 
71 1 234 1 97 1 266 1 248 2 321 3 125 1 25 3 151 1 252 1 272 1 237 1 273 2 231 1 134 1 258 7 51 1 145 4 
353 1 234 2 97 2 266 2 116 1 268 1 2 3 25 10 269 1 179 2 208 1 339 4 4 3 272 5 102 1 214 1 68 1 237 4 273 5 145 16 51 2 71 4 248 3 321 15 166 3 223 1 125 1 151 1 252 1 152 1 291 3 231 1 296 1 258 31 
353 2 97 1 234 2 266 2 116 2 25 9 179 4 272 4 214 2 237 3 273 5 145 9 51 1 71 3 248 2 321 7 223 1 125 1 16 1 151 2 377 1 351 1 231 1 296 2 258 16 
1 2 298 1 45 1 160 1 299 1 46 1 48 1 180 1 209 1 88 1 210 1 67 1 274 1 343 1 313 2 9 1 243 2 52 1 11 1 73 1 107 1 324 1 149 1 127 1 194 1 79 1 256 1 155 1 333 1 202 1 
1 3 20 1 298 1 45 1 299 1 46 1 48 1 180 1 209 1 88 1 210 1 65 1 67 1 274 1 343 1 313 2 9 1 243 3 52 1 11 1 73 1 107 1 373 1 324 1 149 1 127 2 194 1 256 1 333 1 202 1 
1 2 45 1 299 1 48 1 46 1 180 1 209 1 88 1 210 1 65 1 67 1 274 1 343 1 313 2 243 2 52 1 11 1 107 1 373 1 324 1 149 1 127 2 194 1 256 1 333 1 
186 1 9 1 243 1 43 1 52 2 11 2 165 1 114 1 20 1 1 1 324 2 48 1 119 1 209 2 210 1 67 1 329 1 293 1 256 1 367 1 40 1 202 1 343 1 
1 1 298 1 45 1 160 1 299 1 46 1 48 1 180 1 209 1 88 1 210 1 65 1 67 1 343 1 313 2 9 1 243 1 52 1 11 1 73 1 324 1 149 1 256 1 155 1 333 1 202 1 
175 1 
85 2 156 5 265 1 113 1 159 1 44 1 114 1 162 1 338 1 48 2 3 1 207 1 119 1 210 2 340 1 275 2 8 3 276 1 343 1 344 1 165 1 283 1 349 2 293 1 226 1 56 6 294 1 58 1 230 1 137 1 354 5 357 1 28 1 27 1 184 1 67 1 69 1 32 1 311 2 33 4 35 2 190 1 37 2 198 2 326 1 327 2 329 2 109 1 255 1 200 2 256 2 331 1 82 2 332 2 204 2 
156 3 265 1 354 3 44 1 159 1 283 1 54 1 338 1 28 1 27 1 326 1 184 1 226 1 200 1 56 2 294 1 331 1 69 1 8 1 276 1 32 1 33 2 
137 1 265 1 156 3 354 3 159 1 44 1 338 1 27 1 28 1 184 1 69 1 276 1 8 1 32 1 33 3 283 1 54 1 326 1 327 1 226 1 56 1 294 1 331 1 204 1 
137 1 265 1 156 3 354 3 159 1 44 1 338 1 27 1 28 1 184 1 69 1 8 1 276 1 32 1 33 3 283 1 54 1 326 1 198 1 327 1 226 1 200 1 294 1 56 2 331 1 204 1 
260 1 85 2 156 5 265 1 113 1 44 1 159 1 338 1 3 1 207 1 276 1 8 3 283 1 285 1 286 1 54 1 349 2 226 1 294 1 56 7 230 1 137 5 354 5 357 1 27 1 28 1 66 1 184 1 69 1 32 1 240 1 311 2 33 6 35 1 190 1 37 1 198 4 326 1 327 5 200 4 331 1 82 2 332 2 204 4 
85 2 137 1 265 1 156 4 113 1 354 4 159 1 44 1 357 1 338 1 3 1 207 1 28 1 27 1 184 1 275 2 69 1 8 2 276 1 32 1 311 2 33 4 35 1 283 1 190 1 349 2 37 1 198 2 326 1 327 2 226 1 200 2 56 4 294 1 331 1 82 2 58 1 332 2 230 1 204 2 
85 2 137 1 113 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 27 1 28 1 66 1 184 1 69 1 8 2 276 1 32 1 311 2 33 4 35 1 283 1 285 1 286 1 190 1 349 2 37 1 198 2 326 1 327 1 226 1 200 2 56 4 294 1 331 1 82 2 332 2 230 1 204 2 
85 2 137 1 113 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 27 1 28 1 66 1 184 1 69 1 8 2 276 1 32 1 311 2 33 4 35 1 283 1 285 1 286 1 190 1 349 2 37 1 198 2 326 1 327 1 226 1 200 2 56 4 294 1 331 1 82 2 332 2 230 1 204 2 
85 2 137 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 27 1 28 1 184 1 275 2 69 1 8 2 276 1 32 1 33 4 35 1 283 1 286 1 190 1 287 1 37 1 195 1 198 2 78 2 326 1 327 1 226 1 200 2 112 2 56 4 294 1 331 1 352 1 82 2 230 1 204 2 
85 2 137 1 113 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 66 1 27 1 28 1 184 1 69 1 8 2 276 1 32 1 311 2 240 1 33 5 35 1 283 1 285 1 286 1 190 1 349 2 37 1 326 1 198 3 327 1 226 1 200 3 294 1 56 5 331 1 82 2 332 2 230 1 204 3 
85 2 137 1 113 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 66 1 27 1 28 1 184 1 69 1 8 2 276 1 32 1 311 2 240 1 33 5 35 1 283 1 285 1 286 1 190 1 349 2 37 1 326 1 198 3 327 1 226 1 200 3 294 1 56 5 331 1 82 2 332 2 230 1 204 3 
85 2 137 1 265 1 156 4 354 4 159 1 44 1 357 1 338 1 3 1 207 1 28 1 27 1 184 1 275 2 69 1 8 2 276 1 32 1 33 4 35 1 283 1 190 1 37 1 195 1 198 2 78 2 326 1 327 1 226 1 200 2 112 2 56 4 294 1 331 1 82 2 58 1 230 1 204 2 
353 1 234 1 266 1 116 1 302 1 25 2 206 1 179 2 182 1 212 1 364 2 214 1 237 1 273 2 143 1 145 3 71 1 248 1 221 1 321 3 125 1 150 1 151 1 231 1 296 1 258 6 
95 1 353 2 116 2 302 11 25 2 2 2 206 11 179 4 339 3 4 2 212 1 272 1 364 1 102 1 214 2 68 1 237 1 273 1 143 2 145 8 71 2 345 1 321 6 221 4 166 3 93 1 350 1 291 1 227 1 232 1 295 1 296 2 258 14 
353 1 264 1 159 2 116 1 48 1 179 2 210 1 27 2 212 1 67 1 89 1 364 1 214 1 143 1 242 1 343 1 145 1 369 1 165 1 221 1 222 1 321 1 371 1 370 1 322 1 374 1 38 1 350 1 329 1 293 1 256 1 227 1 331 1 172 1 296 1 258 2 232 1 135 1 
266 1 159 3 116 3 2 2 48 3 206 7 210 3 4 2 212 3 213 1 89 1 272 4 214 3 273 4 215 2 343 2 281 1 222 1 165 2 221 7 125 1 350 1 131 2 291 2 293 2 227 1 172 1 231 1 232 1 296 3 353 3 234 1 236 2 302 7 25 8 361 2 179 6 65 1 27 3 67 2 364 2 30 2 237 3 143 3 242 2 145 10 71 3 369 2 248 1 321 10 371 2 322 2 251 1 151 1 38 1 329 1 256 3 331 1 258 20 
353 2 159 1 335 1 114 1 116 2 48 8 179 4 119 1 65 1 27 1 210 8 182 1 212 2 89 1 67 2 101 1 214 2 143 2 343 2 145 1 244 1 222 1 321 1 165 2 346 1 196 1 94 1 79 1 153 1 350 1 329 2 293 3 256 7 154 2 331 1 172 1 296 2 232 1 258 2 
353 1 263 1 159 1 176 1 302 1 116 1 25 1 2 1 206 1 179 2 27 1 4 1 212 1 89 1 214 1 237 1 273 1 143 1 145 1 71 1 221 1 321 2 55 1 291 1 227 1 331 1 172 1 296 1 258 3 
71 1 353 1 249 1 221 1 302 1 116 1 25 1 206 1 179 2 182 1 4 1 212 1 272 1 214 1 143 1 258 2 296 1 145 2 
353 1 221 1 321 2 302 1 116 1 25 1 206 1 179 2 362 1 182 1 212 1 291 1 214 1 237 1 273 1 143 1 258 2 296 1 
353 1 116 1 302 2 2 1 25 2 206 2 179 2 4 1 182 1 212 1 272 1 214 1 237 1 273 1 143 1 145 2 71 1 221 2 321 2 291 1 296 1 258 4 
71 1 353 1 249 1 221 1 302 1 116 1 25 1 206 1 179 2 4 1 212 1 272 1 101 1 214 1 143 1 258 2 296 1 145 2 
353 1 221 1 321 2 302 1 116 1 25 1 206 1 179 2 362 1 212 1 291 1 101 1 214 1 237 1 273 1 143 1 258 2 296 1 
353 1 116 1 302 2 2 1 25 2 206 2 179 2 4 1 212 1 272 1 101 1 214 1 237 1 273 1 143 1 145 2 71 1 221 2 321 2 291 1 296 1 258 4 
71 1 353 1 321 2 221 2 302 2 116 1 25 2 2 1 206 2 179 2 4 1 291 1 212 1 272 1 214 1 237 1 273 1 143 1 296 1 258 4 145 2 
353 1 159 1 116 1 48 1 179 2 210 1 27 1 212 1 67 1 364 1 214 1 143 1 242 1 145 1 343 1 369 1 165 1 321 1 371 1 322 1 131 1 350 1 329 1 293 1 256 1 232 1 258 2 296 1 
353 1 159 1 116 1 48 1 63 1 179 2 210 1 27 1 212 1 67 1 364 1 214 1 143 1 242 1 145 1 343 1 217 1 165 1 321 1 322 1 350 1 329 1 293 1 256 1 84 1 232 1 258 2 296 1 
353 1 116 1 302 2 2 1 25 2 206 2 179 2 4 1 212 1 272 1 214 1 237 1 273 1 143 1 145 2 71 1 221 2 321 2 291 1 227 1 296 1 258 4 
353 1 159 1 302 2 116 1 25 2 2 1 48 1 206 2 179 2 210 1 27 1 4 1 212 1 272 1 67 1 214 1 237 1 273 1 215 1 143 1 242 1 145 2 343 1 71 1 369 1 321 2 221 2 165 1 371 1 322 1 79 1 291 1 131 1 293 1 256 1 258 4 296 1 
353 1 263 1 159 1 176 1 116 1 302 1 25 1 2 1 206 1 179 2 27 1 4 1 212 1 272 1 89 1 214 1 237 1 143 1 145 2 71 1 321 1 221 1 291 1 227 1 331 1 172 1 173 1 296 1 258 3 
136 1 353 3 234 1 266 1 115 1 356 1 116 3 2 4 25 8 179 6 139 1 339 4 4 4 29 1 272 4 102 1 214 3 68 3 237 5 142 1 273 4 145 20 71 5 246 1 248 1 319 1 321 21 223 1 53 1 166 3 125 1 347 4 375 1 108 1 151 1 199 2 291 4 351 1 133 1 380 1 231 1 296 3 258 41 
136 1 353 4 234 1 266 1 115 1 356 1 116 4 2 4 25 7 179 8 139 1 339 4 4 4 29 1 272 3 102 1 214 4 68 3 237 4 142 1 273 4 145 20 71 5 246 1 248 1 319 1 321 18 223 2 53 1 166 3 125 1 347 4 375 1 108 1 151 1 199 2 291 3 351 1 133 1 380 1 231 1 296 4 258 38 
136 1 353 2 234 1 266 1 115 1 356 1 116 2 2 7 25 14 179 4 139 1 339 4 4 7 29 1 272 7 102 2 214 2 68 2 237 8 142 1 273 7 145 27 71 8 246 1 248 1 319 1 321 25 223 1 53 1 166 4 125 1 347 4 93 2 151 1 199 1 291 7 351 1 133 1 380 1 231 1 296 2 258 52 
136 1 353 2 116 2 2 3 25 6 179 4 139 1 339 2 4 3 29 2 272 3 102 1 214 2 68 1 237 3 142 1 273 3 145 9 71 3 321 10 53 1 166 1 347 2 108 1 199 1 39 1 291 3 351 1 296 2 258 19 
136 1 353 3 115 1 356 1 116 3 25 4 2 3 179 6 139 1 339 2 4 3 29 1 272 2 214 3 237 2 68 2 142 1 273 2 145 14 71 3 246 1 321 12 319 1 223 2 53 2 166 2 347 4 199 2 291 2 351 1 133 1 380 1 296 3 258 26 
140 1 197 1 90 1 372 1 31 1 337 1 310 1 278 1 289 1 70 1 
201 1 18 1 
140 1 316 1 197 1 74 1 31 1 177 1 278 1 289 1 70 1 
314 2 187 1 156 1 354 1 372 1 14 1 289 1 36 1 140 1 197 1 49 1 327 1 90 1 31 1 257 1 310 1 278 1 70 1 
314 2 187 1 156 1 354 1 372 1 14 1 289 1 36 1 140 1 197 1 49 1 327 1 90 1 31 1 257 1 310 1 278 1 70 1 
314 2 187 1 156 1 354 1 372 1 14 1 289 1 36 1 140 1 197 1 49 1 327 1 90 1 31 1 257 1 310 1 278 1 70 1 
157 1 106 1 104 1 
157 1 106 1 104 1 
238 1 24 1 
106 1 238 1 24 1 
290 1 105 1 
96 1 156 1 354 1 159 2 62 1 140 1 27 2 49 1 89 2 364 1 31 1 278 1 70 1 314 1 317 1 105 1 14 1 289 1 288 1 290 1 197 1 168 1 331 2 172 2 18 1 201 1 381 1 
157 1 104 1 
106 1 238 1 24 1 
353 1 159 2 335 1 116 1 48 2 179 2 210 2 27 2 212 1 164 1 67 1 91 1 214 1 143 1 343 1 145 1 282 1 165 1 321 1 284 1 94 1 350 1 293 1 227 1 256 2 154 2 331 2 203 1 296 1 232 1 258 2 
298 1 45 1 299 1 46 1 48 2 47 1 180 1 209 1 88 1 65 1 210 2 79 1 67 1 256 2 57 1 333 1 259 1 313 2 343 1 
219 1 298 1 45 1 299 1 46 1 48 1 180 1 209 1 88 1 65 1 210 1 67 1 256 1 333 1 259 1 313 2 343 1 
186 1 165 1 114 1 48 1 209 1 119 1 210 1 67 1 329 1 293 1 256 1 57 1 81 1 343 1 
298 1 45 1 299 1 46 1 48 1 47 1 180 1 209 1 88 1 65 1 210 1 67 1 256 1 57 1 333 1 259 1 313 2 343 1 
245 1 
37 1 137 1 327 1 35 1 123 1 368 1 150 1 
137 1 156 1 113 1 354 1 35 1 357 1 190 1 3 1 349 1 37 1 327 2 56 1 275 1 8 1 332 1 230 1 311 1 
156 5 267 1 162 1 87 2 2 2 48 3 3 4 210 3 4 2 275 12 8 3 123 1 343 4 280 2 165 3 225 1 17 2 291 2 293 10 56 5 294 2 230 4 19 1 137 2 354 5 357 4 22 1 358 6 26 1 303 2 361 2 64 2 67 3 306 2 237 2 309 1 368 1 241 2 311 6 242 3 71 2 318 2 35 9 189 2 190 4 193 6 37 8 79 1 110 2 329 1 327 8 255 2 256 3 41 3 
137 2 156 1 354 1 115 1 356 1 357 2 358 5 162 1 2 2 3 2 339 1 4 2 307 1 68 1 237 2 275 6 8 1 311 3 71 2 246 1 10 1 35 8 319 1 166 1 190 2 193 5 37 5 17 1 291 2 110 2 327 5 255 1 56 1 230 2 380 1 
234 1 156 1 266 1 354 1 297 1 159 1 357 1 176 1 3 1 27 1 66 1 89 1 237 1 366 1 276 1 71 2 34 1 35 2 190 1 192 1 16 1 37 2 17 1 151 1 110 2 331 1 172 1 230 1 
137 1 35 1 357 1 190 1 3 1 37 1 327 1 230 1 368 1 123 1 
71 2 35 5 358 5 2 2 361 1 193 5 37 5 17 1 4 2 291 2 110 2 327 5 237 2 275 10 311 5 
137 1 156 1 354 1 327 1 56 1 8 1 
156 3 354 3 114 1 357 2 162 2 48 4 3 2 119 1 210 4 67 1 103 1 340 1 309 2 50 1 8 2 343 1 344 1 165 1 35 2 190 2 37 2 169 1 329 2 293 1 255 2 256 4 56 4 230 1 19 1 
353 1 159 3 176 2 116 1 48 1 179 2 210 1 27 3 212 1 89 2 67 1 364 1 214 1 366 1 143 1 242 1 343 1 218 1 369 1 321 1 165 1 371 1 322 1 350 1 131 1 329 1 293 1 256 1 331 2 172 2 258 1 296 1 
137 2 248 1 35 1 357 1 358 2 190 1 162 1 193 2 3 1 37 2 327 4 255 1 275 4 230 1 311 2 
140 1 92 1 278 1 
140 1 92 1 278 1 
140 1 290 1 292 1 90 1 278 1 
140 1 92 1 278 1 
140 1 147 1 278 1 
140 1 147 1 278 1 
140 1 147 1 278 1 
140 1 278 1 
197 1 31 1 
353 1 234 1 266 1 115 1 116 1 25 2 179 2 339 1 214 1 237 1 68 1 273 2 145 4 71 1 248 1 321 4 166 1 125 1 151 1 351 1 231 1 258 8 296 1 
353 2 234 1 266 1 115 1 116 2 2 1 25 3 179 4 339 2 4 1 363 1 272 1 102 1 214 2 237 1 68 1 273 2 145 6 71 2 248 1 321 5 166 1 125 1 151 1 351 1 231 1 258 11 296 2 
353 3 234 1 266 1 115 1 356 1 116 3 2 2 25 4 179 6 339 1 4 2 363 1 272 1 214 3 68 1 237 3 273 3 145 9 71 3 246 1 248 1 321 10 319 1 166 1 223 1 125 1 151 1 291 2 351 1 380 1 231 1 258 19 296 3 
353 3 234 1 266 1 115 1 356 1 116 3 2 2 25 5 179 6 339 1 4 2 363 1 272 2 214 3 68 1 237 2 273 3 145 10 71 3 246 1 248 1 321 7 319 1 223 1 166 1 125 1 151 1 291 1 351 1 380 1 231 1 258 17 296 3 
353 1 234 1 266 1 115 1 116 1 25 2 179 2 339 1 214 1 237 1 68 1 273 2 145 4 71 1 248 1 321 4 166 1 125 1 151 1 351 1 231 1 258 8 296 1 
353 1 115 1 356 1 116 1 2 2 25 2 179 2 339 1 4 2 272 1 214 1 68 1 237 2 273 1 145 6 71 2 246 1 321 6 319 1 166 1 291 2 351 1 380 1 258 12 296 1 
353 4 234 1 266 1 115 1 356 1 116 4 2 2 25 5 179 8 339 1 4 2 272 2 363 1 214 4 68 1 237 2 273 3 145 10 71 3 246 1 248 1 321 8 319 1 166 1 223 2 125 1 151 1 291 1 351 1 380 1 231 1 258 18 296 4 
353 4 115 1 356 1 116 4 2 3 25 6 179 8 339 1 4 3 272 3 214 4 68 1 237 2 273 3 145 9 71 3 246 1 321 7 319 1 166 1 223 2 108 1 291 2 351 1 380 1 258 16 296 4 
71 1 234 3 266 3 321 4 125 1 25 6 151 1 272 3 237 1 273 3 231 2 258 7 145 3 
353 4 234 1 266 1 115 1 356 1 116 4 2 2 25 4 179 8 339 1 4 2 272 1 214 4 68 1 237 2 273 3 145 10 71 3 246 1 248 1 321 8 319 1 166 1 223 2 125 1 151 1 108 1 291 1 351 1 380 1 231 1 258 18 296 4 
71 1 353 2 234 1 248 1 266 1 321 4 223 1 116 2 125 1 25 3 179 4 151 1 272 1 214 2 237 1 273 2 231 1 258 8 296 2 145 4 
71 1 234 1 248 1 266 1 321 3 125 1 25 2 150 1 151 1 237 1 273 2 231 1 258 6 145 3 
71 1 353 1 321 2 116 1 25 2 2 1 179 2 4 1 291 1 363 1 272 1 214 1 237 1 273 1 296 1 258 4 145 2 
71 1 321 4 166 1 2 1 25 2 339 2 4 1 291 1 272 1 102 1 237 1 68 1 273 1 258 7 145 3 
95 1 353 2 234 2 266 2 116 2 25 9 2 2 179 4 4 2 339 2 272 4 102 1 214 2 237 3 273 5 145 11 71 3 248 1 247 1 321 12 166 2 223 2 125 1 93 1 151 1 291 2 231 1 258 23 296 2 
339 1 321 1 258 1 
166 1 258 1 145 1 
71 1 353 1 321 3 116 1 2 1 25 3 361 1 179 2 4 1 291 1 363 1 272 1 214 1 237 1 273 2 296 1 258 6 145 3 
353 1 115 1 356 1 116 1 2 2 25 2 179 2 339 1 4 2 272 1 214 1 68 1 237 2 273 1 145 6 71 2 246 1 321 6 319 1 166 1 291 2 351 1 380 1 258 12 296 1 
71 1 234 1 266 1 321 3 25 2 151 1 272 1 237 1 273 1 258 6 145 3 
353 1 234 1 266 1 247 1 321 2 223 1 116 1 125 1 25 2 179 2 272 1 214 1 273 1 231 1 258 3 296 1 145 1 
71 2 353 1 234 2 266 2 321 5 116 1 25 5 16 1 179 2 151 1 272 2 214 1 237 2 351 1 273 3 296 1 258 10 145 5 
71 1 353 1 116 1 25 1 179 2 4 1 272 1 214 1 351 1 296 1 258 2 145 2 
71 1 353 1 321 2 116 1 25 2 2 1 179 2 4 1 291 1 272 1 214 1 237 1 273 1 351 1 296 1 258 4 145 2 
353 3 234 1 247 1 266 1 321 2 223 1 116 3 25 2 179 6 108 1 272 1 214 3 351 1 273 1 258 3 296 3 145 1 
353 5 234 3 266 3 116 5 268 1 2 3 25 12 269 1 179 10 339 4 4 3 363 1 272 5 102 1 214 5 68 1 237 5 273 7 145 16 71 5 248 1 247 1 321 18 223 2 166 3 125 1 151 2 108 1 152 1 291 3 351 1 231 1 296 5 258 34 
27 1 159 1 364 1 188 1 331 1 69 1 59 1 
159 1 188 1 27 1 271 1 6 1 305 1 378 1 364 1 331 1 69 1 277 1 59 1 
119 1 210 1 67 1 329 1 293 1 165 1 114 1 256 1 150 1 48 1 343 1 
369 1 159 2 165 1 222 1 322 1 48 1 27 2 210 1 89 1 329 1 67 1 364 1 293 1 256 1 331 1 172 1 242 1 343 1 
159 2 44 1 303 1 48 1 64 1 210 1 27 2 184 1 67 1 89 1 364 1 309 1 276 1 242 2 343 1 369 1 222 1 165 2 322 1 293 3 256 1 331 2 172 2 
159 2 44 1 303 1 48 2 64 1 210 2 27 2 184 1 67 1 89 1 364 1 309 1 276 1 242 2 343 1 222 1 165 2 322 1 325 1 293 3 256 2 331 2 172 2 84 1 
137 1 156 2 354 2 303 1 48 3 64 1 210 3 67 1 306 1 309 1 242 1 343 1 220 1 165 1 325 1 327 1 329 1 293 4 256 3 56 1 294 1 228 1 41 1 
280 1 137 1 156 2 354 2 165 1 325 1 303 1 48 3 64 1 210 3 329 1 327 1 67 1 293 4 306 1 256 3 294 1 56 1 309 1 41 1 242 1 343 1 
244 1 210 1 67 1 256 1 48 1 343 1 
244 1 165 2 336 1 346 1 48 7 225 1 196 1 65 1 94 1 210 7 79 1 183 1 153 1 329 2 67 2 293 3 256 6 154 1 122 1 242 1 343 3 
266 1 159 2 116 2 48 1 206 1 210 1 212 2 89 1 214 2 91 1 273 2 215 1 343 1 221 1 222 1 165 1 125 1 131 1 293 1 227 1 172 1 231 1 296 2 353 2 234 1 236 1 302 1 25 2 179 4 27 2 67 1 364 2 237 1 143 2 242 1 145 3 71 1 369 1 248 1 321 3 371 1 322 1 151 1 79 1 256 1 331 1 258 6 
137 1 156 3 354 3 357 2 62 1 87 1 48 1 3 2 210 1 306 1 8 1 123 1 368 1 241 1 280 1 35 1 189 1 190 2 37 1 327 1 329 1 293 2 256 1 56 2 294 1 230 2 41 1 19 1 
244 1 267 1 165 1 48 2 225 1 210 2 79 1 67 1 306 1 293 2 256 2 242 1 343 2 
119 1 210 4 79 1 67 1 329 1 293 1 165 1 114 1 256 4 23 1 325 1 48 4 343 1 
75 1 12 1 165 1 336 1 251 1 48 2 210 2 67 1 293 1 256 2 122 1 309 1 242 1 343 2 
180 1 210 1 67 1 329 1 256 1 299 1 46 1 48 1 313 1 343 1 
165 1 48 2 210 2 65 1 94 1 79 1 67 1 293 1 256 2 203 1 343 1 
114 1 165 2 23 1 346 1 48 5 119 1 210 5 94 1 79 1 153 1 329 1 67 2 293 3 256 4 309 1 343 2 
114 1 165 2 23 1 346 1 48 5 119 1 210 5 94 1 79 1 329 1 67 2 293 3 256 4 170 1 309 1 343 2 
159 2 165 1 222 1 322 1 48 1 27 2 210 1 89 1 329 1 67 1 364 1 293 1 256 1 331 1 172 1 84 1 242 1 343 1 
165 1 336 1 48 1 225 1 210 1 183 1 67 1 293 1 256 1 122 1 309 1 242 1 343 2 
282 1 159 1 320 1 284 1 161 1 376 1 27 1 164 1 331 1 
141 1 320 1 167 1 
364 1 320 1 161 1 239 1 376 1 
42 1 137 1 156 2 354 2 44 1 320 1 283 1 161 2 62 1 167 1 376 2 141 1 184 1 327 1 364 1 308 1 294 1 276 1 239 2 
194 1 274 1 107 1 150 1 
9 1 194 1 243 1 1 1 274 1 107 1 202 1 
52 1 11 1 1 1 
9 1 243 3 1 3 107 1 191 1 126 1 194 1 171 1 155 1 365 2 274 1 202 1 
9 1 194 1 243 2 1 2 274 1 107 1 7 1 202 1 127 1 
9 1 261 1 243 1 315 1 1 1 45 1 46 1 194 1 155 1 202 1 313 1 
9 1 194 1 243 1 1 1 155 1 274 1 202 1 
9 1 243 1 1 1 155 1 274 2 107 1 202 1 
9 2 243 2 1 2 205 1 181 1 194 1 328 1 155 1 274 1 202 2 
9 1 261 1 243 3 1 3 76 1 107 1 127 2 194 2 163 1 155 1 274 1 202 1 146 1 
9 1 243 2 1 2 45 1 107 1 46 1 127 1 180 1 194 1 155 1 274 1 333 1 202 1 334 1 313 2 
9 2 261 1 243 4 1 4 76 1 107 1 127 2 194 2 155 1 274 1 7 1 341 1 202 2 
9 1 194 1 243 1 1 1 155 1 274 1 107 1 202 1 
9 1 261 1 243 4 1 4 76 1 107 2 191 1 127 2 194 3 80 1 171 1 365 1 274 2 202 1 
9 1 243 2 262 1 174 1 233 1 1 2 107 1 127 1 194 1 155 1 274 1 202 1 
9 1 243 3 1 3 107 1 191 1 194 1 120 1 171 2 155 1 365 2 274 1 202 1 
194 2 83 1 300 1 118 2 
9 1 243 1 1 1 330 1 155 1 202 1 
9 1 194 1 243 2 163 1 1 2 155 1 274 1 107 1 202 1 127 1 
77 1 
9 1 194 1 243 1 1 1 155 1 274 1 107 1 202 1 
9 1 194 1 243 3 163 1 1 3 365 1 155 1 274 1 107 1 202 1 127 1 
261 1 194 1 80 1 76 1 
194 1 274 1 

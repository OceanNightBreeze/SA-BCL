#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String; | CONDITION | 7182 | if (x) -> if (!x)
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set; | STATEMENT | 2468 | stmt -> ;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
26 2 137 1 184 2 140 2 144 2 146 1 125 1 244 1 194 1 35 1 247 1 15 1 153 2 372 2 228 6 318 1 275 3 229 2 375 1 230 9 278 1 102 4 347 5 377 1 157 1 301 1 324 9 48 1 
26 2 137 1 184 2 140 2 144 2 146 1 125 1 244 1 194 1 35 1 247 1 15 1 372 2 153 2 228 6 318 1 275 3 229 2 375 1 230 9 278 1 102 4 347 5 377 1 157 1 301 1 324 9 48 1 
26 2 137 1 184 2 140 2 144 2 146 1 125 1 244 1 194 1 35 1 247 1 15 1 372 2 153 2 228 7 318 1 275 4 229 2 375 1 230 10 278 1 102 5 347 6 377 1 157 1 301 1 324 10 48 1 
26 2 137 1 184 2 140 1 144 2 146 1 125 1 244 1 194 1 35 1 247 1 15 1 372 2 153 2 228 4 318 1 275 2 229 2 375 1 230 7 102 3 347 4 377 1 157 1 301 1 324 7 48 1 
26 1 372 1 184 1 140 2 228 3 275 1 229 1 230 4 375 1 278 1 102 2 347 3 157 1 144 1 146 1 324 4 244 1 48 1 
26 1 153 1 184 1 155 1 318 1 229 1 230 2 347 1 133 1 144 1 301 1 146 1 324 2 115 1 244 1 48 1 
153 1 228 1 275 1 229 2 230 3 102 1 347 2 144 2 146 1 324 3 244 1 48 1 247 1 
26 1 15 1 372 1 153 1 117 1 184 1 140 2 228 7 275 3 229 2 375 1 230 9 278 1 347 5 102 4 157 1 144 2 146 1 324 9 244 1 95 1 48 1 35 1 247 1 
26 1 15 1 372 1 153 1 117 1 184 1 140 2 228 7 275 3 229 2 375 1 230 9 278 1 347 5 102 4 157 1 144 2 146 1 324 9 244 1 95 1 48 1 35 1 247 1 
207 1 142 1 42 1 
292 1 232 2 142 1 
279 1 176 2 201 1 16 2 373 2 78 2 188 2 97 2 
164 1 138 1 266 1 107 2 330 1 108 1 188 2 189 1 31 1 7 1 91 1 221 2 148 1 193 1 33 1 224 1 64 1 34 1 271 1 97 2 14 2 16 2 373 2 296 2 71 1 344 1 279 1 176 3 201 1 302 2 203 1 257 1 76 1 22 1 208 1 78 3 307 1 
176 1 201 1 16 1 373 1 265 1 183 1 260 1 78 1 188 1 97 1 
0 1 265 1 139 1 188 1 363 1 142 1 29 1 4 1 176 1 204 1 167 1 207 1 243 1 78 1 
373 1 16 1 265 1 139 1 188 1 363 1 142 1 29 1 176 1 204 2 167 1 207 1 243 2 78 1 97 1 
287 1 289 1 204 1 243 1 55 1 
289 1 204 2 207 1 243 2 174 1 55 1 151 1 142 1 
204 1 243 1 55 1 
373 1 16 1 265 1 183 1 188 1 111 1 201 1 176 1 289 1 204 1 243 1 260 1 78 1 97 1 
142 1 
289 1 204 2 207 1 38 1 243 2 55 1 151 1 142 1 
371 2 288 1 163 2 186 1 132 2 101 1 55 2 142 1 289 2 45 1 204 5 219 1 60 1 207 1 243 5 179 1 270 1 151 1 195 1 
69 1 373 1 16 1 296 1 71 1 330 1 107 1 108 1 188 1 189 1 110 1 176 2 302 1 257 1 148 1 193 1 21 1 78 2 64 1 34 1 
279 1 42 1 
279 2 176 2 158 1 16 1 373 1 118 1 78 2 188 2 97 1 
187 1 178 1 21 1 
296 1 211 1 107 1 330 1 71 1 108 1 189 1 279 1 176 1 302 1 257 1 148 1 193 1 78 1 64 1 34 1 
279 1 176 3 16 3 373 3 78 3 188 3 110 1 97 1 
176 1 16 1 373 1 265 1 260 1 78 1 188 1 
158 1 176 1 16 1 373 1 265 1 118 1 78 1 188 1 97 1 
265 1 164 1 138 1 139 1 266 1 330 1 107 1 108 1 188 3 189 1 363 1 110 1 29 1 31 1 7 1 91 1 221 2 148 1 167 1 33 1 243 1 193 1 224 1 64 1 34 1 97 2 14 1 250 1 16 3 373 3 69 1 296 1 71 1 344 1 118 1 279 1 176 4 201 1 44 1 302 1 257 1 204 1 22 1 78 4 
279 1 0 1 176 2 16 1 373 1 104 1 78 2 188 2 110 1 
69 1 373 3 16 3 265 1 139 1 118 1 188 3 240 1 363 1 110 2 142 1 29 1 176 3 44 1 204 1 167 1 243 1 78 3 97 1 
373 2 16 2 118 1 188 2 110 1 176 2 178 1 21 1 78 2 97 1 
296 1 107 1 330 1 71 1 108 1 189 1 279 1 176 1 302 1 257 1 148 1 193 1 78 1 64 1 34 1 
296 1 107 1 330 1 71 1 108 1 279 1 176 1 302 1 257 1 114 1 193 1 353 1 78 1 64 1 34 1 
359 1 164 1 138 1 266 2 187 2 143 1 30 1 7 1 91 1 221 2 149 1 224 1 14 4 72 1 41 1 376 1 203 2 258 1 178 2 22 1 21 2 77 1 83 1 308 1 
176 1 16 1 373 1 265 1 78 1 188 1 89 1 29 1 
0 1 373 4 16 4 69 1 331 1 118 1 188 5 110 2 176 5 279 1 104 1 62 1 78 5 97 1 
176 2 16 2 373 2 265 1 260 1 78 2 188 2 89 1 
304 1 105 1 
304 1 105 1 
86 1 319 1 
86 1 319 1 
86 1 319 1 
297 1 304 1 105 1 
304 1 231 1 105 1 
86 1 304 2 311 1 319 1 105 2 268 1 
297 1 304 1 105 1 
297 1 304 1 105 1 
304 1 276 1 105 1 
304 1 276 1 105 1 
304 1 276 1 105 1 
162 2 181 1 130 1 90 2 365 1 109 3 268 1 142 1 135 2 123 1 103 1 269 2 204 2 304 2 243 2 13 1 105 2 223 1 262 2 
162 1 181 1 188 2 90 1 109 1 368 1 269 1 243 1 150 1 248 1 16 2 373 2 98 1 227 1 231 1 279 1 176 2 136 1 204 1 304 1 105 1 78 2 262 1 25 1 
26 1 372 1 184 1 
26 1 184 1 115 1 
372 2 154 1 184 3 115 1 237 1 367 1 
372 1 184 2 115 1 10 1 237 1 367 1 
372 1 184 2 115 1 237 2 367 1 
356 2 288 2 163 1 359 1 54 2 55 1 142 2 289 4 368 1 8 2 243 5 292 1 151 1 96 1 316 1 371 1 98 1 252 1 227 1 253 1 72 1 132 1 232 3 41 1 45 3 204 5 205 1 258 1 207 1 179 1 79 1 381 1 
356 6 287 5 288 6 163 2 359 3 186 1 55 6 312 1 142 5 121 5 289 7 8 6 243 9 292 3 151 1 96 3 371 2 342 1 227 4 253 2 72 3 132 2 40 1 233 1 232 9 41 3 45 8 204 9 205 2 258 3 207 1 20 1 179 1 79 1 24 1 
356 2 288 2 163 1 359 1 186 1 54 1 142 3 289 2 243 3 8 2 292 2 96 1 316 1 371 1 227 1 253 1 72 1 132 1 232 4 41 1 45 3 204 3 205 1 258 1 207 1 381 1 
356 4 288 4 163 1 359 2 186 1 54 2 142 4 289 3 8 4 243 4 292 3 96 2 371 1 316 1 227 2 253 1 72 2 132 1 40 1 232 7 41 2 45 5 204 4 205 1 258 2 207 1 20 1 24 1 381 1 
257 1 160 1 42 1 
257 1 177 1 
175 1 
257 1 108 1 
120 1 257 3 160 2 108 1 57 1 64 1 
257 1 108 1 64 1 
257 1 339 1 
14 7 359 1 85 1 52 1 329 1 266 3 72 1 345 2 349 1 119 1 254 1 30 3 241 1 203 4 149 2 293 1 49 1 
14 7 359 1 85 1 52 1 329 1 266 3 72 1 345 2 349 1 119 1 254 1 30 3 241 1 203 4 149 2 293 1 49 1 
14 7 359 1 85 1 52 1 329 1 266 3 72 1 345 2 349 1 119 1 254 1 30 3 241 1 203 4 149 2 293 1 49 1 82 1 
1 1 85 2 52 2 359 4 138 1 329 5 213 1 266 15 366 1 216 1 30 10 241 1 7 1 91 1 221 2 149 5 293 2 65 1 67 1 96 3 14 31 72 4 299 4 345 3 349 1 41 3 119 1 254 1 255 1 203 16 258 3 22 1 49 2 81 3 
84 1 359 1 52 1 85 1 138 2 329 1 213 1 266 4 30 4 241 1 7 2 91 2 221 4 149 3 293 1 246 1 14 9 72 1 345 2 349 1 119 1 203 5 22 2 49 1 
26 1 209 1 27 1 184 2 212 1 107 1 330 1 267 1 144 1 146 1 124 1 6 1 115 1 244 1 192 1 369 1 34 1 372 1 153 1 296 1 154 1 273 1 228 1 229 1 230 2 347 1 302 1 324 2 354 1 48 1 
26 1 209 1 27 1 184 2 212 1 107 1 330 1 267 1 144 1 146 1 6 1 115 1 192 1 369 1 116 1 34 1 372 1 153 1 296 1 128 1 154 1 273 1 228 2 229 1 230 3 347 1 302 1 75 1 324 3 48 1 
26 1 209 1 372 1 153 1 296 1 154 1 184 2 27 1 273 1 212 1 330 1 228 2 107 1 230 2 347 1 267 1 302 1 146 1 75 1 324 2 115 1 369 1 116 1 48 1 34 1 
209 2 153 2 128 1 296 1 210 1 27 2 330 1 107 1 108 1 229 1 230 1 364 1 267 2 144 1 302 1 257 1 324 1 193 1 305 1 34 1 225 1 36 1 169 1 
26 1 209 1 27 1 184 2 212 1 107 1 330 1 267 1 144 1 6 1 115 1 244 1 192 1 369 1 116 1 34 1 372 1 153 1 296 1 154 1 273 1 229 1 230 1 302 1 324 1 354 1 
166 1 
288 2 107 2 330 1 108 1 55 6 142 1 243 4 193 2 292 2 151 3 295 2 296 2 156 1 302 2 205 1 204 4 257 1 303 1 305 1 23 1 309 1 163 1 165 1 313 1 370 2 222 2 34 1 127 2 225 1 371 1 272 1 170 2 129 1 132 1 277 2 374 2 232 2 320 1 378 2 45 2 379 1 47 1 325 1 179 1 
272 1 38 1 165 1 55 2 374 1 313 1 204 2 303 1 243 2 325 1 151 1 
272 1 204 1 303 1 243 1 325 1 370 1 222 1 165 1 313 1 
272 1 170 1 38 1 165 1 55 2 374 1 313 1 204 2 303 1 243 2 325 1 222 1 370 1 151 1 
288 1 183 1 55 7 188 1 111 1 142 2 243 4 292 2 151 3 295 2 16 1 298 1 156 1 201 1 204 4 303 1 207 2 260 1 78 1 265 1 163 1 310 1 165 1 313 1 370 3 222 3 127 2 97 1 371 1 272 1 170 4 373 1 38 1 132 1 374 4 277 2 176 1 43 1 378 2 45 1 47 1 325 1 179 1 50 1 180 1 
288 1 163 1 55 4 165 1 142 2 313 1 243 3 370 2 222 2 292 2 151 2 127 2 295 2 170 2 272 1 371 1 132 1 156 1 374 2 277 2 232 2 378 2 45 1 204 3 303 1 47 1 207 1 325 1 179 1 23 1 
288 1 163 1 55 4 165 1 142 1 313 1 243 3 370 2 222 2 292 2 151 2 127 2 295 2 170 2 371 1 272 1 132 1 156 1 374 2 277 2 43 1 378 2 45 1 204 3 303 1 47 1 207 1 325 1 179 1 50 1 180 1 
288 1 163 1 55 4 165 1 142 1 313 1 243 3 370 2 222 2 292 2 151 2 127 2 295 2 170 2 371 1 272 1 132 1 156 1 374 2 277 2 43 1 378 2 45 1 204 3 303 1 47 1 207 1 325 1 179 1 50 1 180 1 
182 1 288 1 163 1 55 4 165 1 142 1 313 1 122 2 243 3 370 2 222 2 151 2 127 2 199 2 170 2 371 1 272 1 132 1 374 2 232 2 18 1 235 1 378 2 45 1 204 3 303 1 47 1 207 1 325 1 179 1 50 1 
288 1 163 1 310 1 55 5 165 1 142 1 313 1 243 3 292 2 222 3 370 3 151 2 127 2 295 2 170 3 272 1 371 1 132 1 156 1 277 2 374 3 43 1 378 2 45 1 204 3 47 1 303 1 207 1 325 1 179 1 50 1 180 1 
288 1 163 1 310 1 55 5 165 1 142 1 313 1 243 3 292 2 222 3 370 3 151 2 127 2 295 2 170 3 272 1 371 1 132 1 156 1 277 2 374 3 43 1 378 2 45 1 204 3 47 1 303 1 207 1 325 1 179 1 50 1 180 1 
182 1 288 1 163 1 55 4 165 1 142 1 313 1 122 2 243 3 370 2 222 2 151 2 127 2 199 2 170 2 272 1 371 1 132 1 374 2 232 2 378 2 45 1 204 3 303 1 47 1 207 1 325 1 179 1 23 1 
85 1 164 1 359 1 138 1 266 3 187 1 30 2 241 1 7 1 91 1 221 2 149 2 224 1 293 1 14 6 72 1 345 1 349 1 42 1 119 1 279 2 203 3 178 1 21 1 22 1 308 1 
164 2 359 2 329 1 138 2 238 1 266 6 187 11 366 1 112 1 30 2 242 1 7 2 91 2 221 4 149 1 224 1 271 1 96 2 14 14 249 1 37 1 344 1 72 1 299 3 41 2 255 1 279 1 203 8 258 1 178 4 22 2 21 11 81 3 
164 1 211 1 138 1 238 1 330 1 107 1 266 1 362 1 108 1 188 1 189 1 110 1 7 1 148 1 221 2 91 1 193 1 337 1 64 1 224 1 34 1 271 1 14 2 296 1 16 1 373 1 69 1 274 1 71 1 344 1 279 1 176 2 302 1 203 1 257 1 178 1 22 1 78 2 
238 1 138 3 329 4 107 3 330 2 187 7 108 2 188 1 189 2 110 1 241 1 7 3 148 2 193 1 116 1 149 4 293 1 64 2 197 2 14 20 341 1 296 3 69 1 16 1 71 2 344 1 72 3 345 1 349 1 119 1 351 2 302 3 203 10 257 2 352 2 258 2 22 3 21 7 78 3 263 1 85 1 164 3 359 3 266 10 314 1 30 8 91 3 221 6 92 2 33 2 224 3 34 2 271 1 96 2 373 1 41 2 279 2 176 3 178 7 
164 2 138 2 330 2 107 8 266 1 108 2 188 1 110 1 28 1 2 1 217 1 332 1 218 1 124 1 7 2 91 2 221 4 193 2 291 1 116 1 224 2 34 2 294 1 271 1 225 1 14 2 16 1 373 1 296 8 344 1 176 1 302 7 203 1 257 3 305 1 22 2 208 2 78 1 308 1 
164 1 359 1 138 1 238 1 187 1 266 2 188 1 30 1 334 1 7 1 91 1 221 2 149 1 224 1 97 1 96 1 14 3 373 1 16 1 118 1 72 1 41 1 176 1 203 1 258 1 178 1 21 1 22 1 78 1 
14 2 164 1 359 1 329 1 138 1 187 1 41 1 143 1 30 1 203 2 7 1 221 2 91 1 178 1 21 1 22 1 224 1 308 1 
14 2 164 1 138 1 187 1 266 2 72 1 30 1 7 1 258 1 221 2 91 1 178 1 21 1 22 1 149 1 224 1 308 1 83 1 
14 4 164 1 359 1 329 1 138 1 266 2 187 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 178 2 21 2 22 1 149 1 224 1 308 1 96 1 
14 2 164 1 359 1 329 1 138 1 187 1 41 1 143 1 30 1 203 2 7 1 221 2 91 1 178 1 21 1 22 1 224 1 294 1 
14 2 164 1 138 1 187 1 266 2 72 1 30 1 7 1 258 1 221 2 91 1 178 1 21 1 22 1 149 1 224 1 294 1 83 1 
14 4 164 1 359 1 329 1 138 1 266 2 187 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 178 2 21 2 22 1 149 1 224 1 294 1 96 1 
14 4 164 1 359 1 329 1 138 1 266 2 187 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 178 2 21 2 22 1 149 1 224 1 96 1 
164 1 138 1 330 1 107 1 266 1 108 1 189 1 7 1 148 1 221 2 91 1 33 1 193 1 64 1 224 1 34 1 271 1 14 2 296 1 71 1 344 1 279 1 176 1 302 1 203 1 257 1 22 1 78 1 
164 1 138 1 330 1 107 1 266 1 108 1 7 1 114 1 221 2 91 1 193 1 64 1 224 1 34 1 271 1 14 2 296 1 71 1 173 1 344 1 279 1 176 1 302 1 203 1 257 1 353 1 22 1 78 1 
14 4 164 1 359 1 329 1 238 1 138 1 266 2 187 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 178 2 21 2 22 1 149 1 224 1 96 1 
359 1 164 1 329 1 138 1 266 2 187 2 330 1 107 1 108 1 189 1 30 2 124 1 7 1 148 1 221 2 91 1 33 1 149 1 64 1 224 1 34 1 197 1 96 1 14 4 296 1 71 1 72 1 41 1 176 1 302 1 203 2 257 1 258 1 178 2 21 2 22 1 78 1 
164 1 359 1 329 1 138 1 238 1 266 1 187 1 188 1 30 1 7 1 91 1 221 2 224 1 97 1 168 1 96 1 14 3 373 1 16 1 118 1 72 1 41 1 176 1 203 2 258 1 178 1 22 1 21 1 78 1 
359 3 138 2 329 3 266 10 214 1 366 1 333 2 58 1 30 6 7 2 91 2 221 4 94 1 93 1 149 3 246 1 96 3 14 19 251 1 39 2 72 3 299 2 41 3 255 1 203 9 258 3 326 1 22 2 285 1 81 1 
359 3 329 2 213 2 138 3 266 12 366 2 190 1 30 4 333 4 58 2 113 1 7 3 91 3 221 6 94 2 93 1 336 1 149 2 246 1 96 3 14 26 226 1 251 1 39 1 72 2 299 2 41 3 321 1 203 14 46 1 258 2 326 1 22 3 81 2 
85 1 359 5 213 1 138 3 329 4 266 21 214 1 190 1 366 3 333 4 58 1 30 8 241 1 113 1 7 3 91 3 221 6 94 2 93 1 336 1 149 4 293 1 246 1 96 4 14 41 171 1 226 1 251 1 39 1 72 5 345 1 299 4 349 1 41 4 119 1 321 1 255 1 203 20 46 1 258 4 326 1 22 3 81 3 
85 1 359 5 213 2 138 4 329 3 266 18 214 1 190 1 366 3 333 4 58 1 30 7 241 1 113 1 7 4 91 4 221 8 94 2 93 1 336 1 149 4 293 1 246 1 96 4 14 38 171 1 226 1 251 1 39 1 72 4 345 1 299 4 349 1 41 4 119 1 321 1 255 1 203 20 46 1 258 3 326 1 22 4 81 3 
85 1 359 8 213 1 138 2 329 7 266 25 190 1 366 2 112 2 333 4 58 1 30 14 241 1 113 1 7 2 91 2 221 4 94 1 93 1 336 1 149 7 293 1 246 1 96 7 14 52 226 1 251 1 39 1 72 8 345 1 299 4 349 1 41 7 119 1 321 1 255 2 203 27 46 1 258 7 326 1 22 2 81 4 
162 1 123 1 103 1 269 1 304 1 105 1 90 1 262 1 328 1 268 1 
136 1 231 1 
162 1 202 1 269 1 304 1 105 1 348 1 90 1 262 1 152 1 
162 1 181 1 90 1 365 1 109 2 268 1 142 1 135 1 123 1 103 1 204 1 269 1 243 1 304 1 13 1 105 1 223 1 262 1 
162 1 181 1 90 1 365 1 109 2 268 1 142 1 135 1 123 1 103 1 204 1 269 1 243 1 304 1 13 1 105 1 223 1 262 1 
162 1 181 1 90 1 365 1 109 2 268 1 142 1 135 1 123 1 103 1 204 1 269 1 243 1 304 1 13 1 105 1 223 1 262 1 
297 1 61 1 311 1 
297 1 61 1 311 1 
276 1 315 1 
311 1 276 1 315 1 
248 1 150 1 
162 1 188 2 90 1 109 1 289 1 5 1 368 1 269 1 243 1 223 1 150 1 248 1 98 1 373 2 16 2 227 1 231 1 279 1 176 2 135 1 136 1 204 1 304 1 78 2 105 1 262 1 25 1 
297 1 61 1 
311 1 276 1 315 1 
164 1 53 1 238 1 138 1 330 1 107 2 266 1 108 1 188 2 28 1 7 1 290 1 221 2 91 1 291 1 224 1 34 1 271 1 14 2 296 2 344 1 176 2 322 1 280 1 302 2 203 1 257 1 282 1 22 1 208 2 78 2 
26 1 372 1 296 2 154 1 184 2 27 1 212 1 273 1 330 1 107 2 234 1 302 2 124 1 115 1 259 1 192 1 116 1 34 1 355 1 
26 1 372 1 296 1 154 1 184 2 27 1 212 1 273 1 107 1 330 1 302 1 115 1 259 1 192 1 116 1 306 1 34 1 
296 1 27 1 330 1 107 1 108 1 234 1 302 1 323 1 257 1 193 1 305 1 34 1 36 1 225 1 
26 1 372 1 296 1 154 1 184 2 27 1 212 1 273 1 107 1 330 1 234 1 302 1 115 1 259 1 192 1 116 1 34 1 355 1 
327 1 
288 1 45 1 207 1 270 1 195 1 142 1 42 1 
288 1 163 1 55 1 142 2 243 1 292 1 151 1 295 1 371 1 156 1 132 1 277 1 232 1 45 1 204 1 207 1 179 1 
286 1 288 8 139 2 330 3 107 3 108 3 55 5 142 8 191 1 193 1 243 5 8 6 292 6 64 3 151 3 195 1 198 2 339 2 68 2 296 3 72 2 73 1 350 2 351 2 300 1 302 3 205 2 257 10 204 5 206 1 19 2 258 2 160 2 207 2 356 6 120 1 163 4 359 2 88 2 215 2 124 1 270 1 34 4 96 2 371 4 317 2 132 4 232 12 41 2 45 9 379 1 177 3 284 2 179 4 
356 5 288 5 163 2 359 2 215 1 55 1 366 1 190 1 142 5 113 1 243 1 8 5 336 1 292 3 151 1 96 2 371 2 131 1 132 2 72 2 299 1 232 6 41 2 350 2 321 1 45 8 379 1 205 1 46 1 204 1 258 2 207 2 179 2 81 1 380 1 
288 2 265 1 163 1 183 1 85 1 359 2 215 1 188 1 111 1 243 1 293 1 97 1 371 1 373 1 16 1 99 1 132 1 72 1 350 2 119 1 176 1 43 1 201 1 45 2 204 1 179 1 260 1 78 1 
371 1 288 1 163 1 132 1 142 1 45 1 207 1 179 1 270 1 195 1 
356 5 288 5 359 2 215 1 72 2 232 10 41 2 142 5 350 2 351 1 45 5 258 2 8 5 292 5 96 2 
204 1 207 1 243 1 55 1 151 1 142 1 
51 1 286 1 288 2 163 2 186 1 330 1 107 4 108 1 55 4 59 1 193 2 243 3 151 2 34 1 225 1 371 2 296 4 129 1 132 2 320 1 302 4 45 2 257 1 205 2 379 2 204 3 206 2 305 1 179 1 
164 1 138 1 266 1 107 1 330 1 108 1 188 2 189 1 31 1 7 1 91 1 221 2 148 1 193 1 33 1 64 1 224 1 34 1 97 2 14 1 296 1 16 2 373 2 71 1 344 1 279 1 176 3 201 1 302 1 257 1 22 1 78 3 
356 2 371 1 288 2 163 1 132 1 345 1 232 4 142 4 45 1 205 1 379 1 8 2 207 2 292 2 179 1 
269 1 90 1 196 1 
123 1 248 1 269 1 90 1 340 1 
269 1 90 1 196 1 
269 1 90 1 196 1 
269 1 236 1 90 1 
269 1 236 1 90 1 
269 1 236 1 90 1 
269 1 90 1 
304 1 105 1 
14 8 359 1 85 1 329 1 138 2 213 1 266 4 72 1 345 1 349 1 119 1 30 3 241 1 203 4 7 2 221 4 91 2 22 2 149 2 293 1 
14 6 85 1 359 1 266 3 72 1 345 1 349 1 42 1 119 1 30 2 241 1 203 3 149 2 293 1 
14 4 359 1 138 1 329 1 266 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 22 1 149 1 80 1 96 1 
14 7 359 1 329 1 266 4 72 1 299 2 366 1 41 1 255 1 30 2 203 3 258 1 149 1 81 1 96 1 
85 2 359 3 329 4 213 2 138 2 266 12 112 1 30 9 241 1 242 1 7 2 220 1 221 4 91 2 149 5 293 2 96 2 14 23 72 3 345 1 299 2 349 1 41 2 119 1 255 1 203 11 258 2 22 2 81 2 
14 1 266 1 299 1 
14 1 203 1 81 1 
14 6 359 1 138 1 329 1 266 3 72 1 41 1 351 1 30 3 203 3 7 1 258 1 91 1 221 2 22 1 149 2 80 1 96 1 
359 2 329 1 138 1 266 6 366 1 190 1 30 2 113 1 7 1 91 1 221 2 336 1 149 1 246 1 96 2 14 12 72 2 299 1 41 2 321 1 203 6 46 1 258 2 22 1 81 1 
14 6 359 1 85 1 329 1 266 3 72 1 119 1 30 2 203 3 149 1 293 1 
14 3 85 1 329 1 213 1 138 1 266 2 349 1 30 2 241 1 203 1 220 1 7 1 221 2 91 1 22 1 149 1 293 1 
14 10 99 1 85 2 359 2 138 1 329 2 266 5 72 2 119 1 30 5 203 5 7 1 91 1 221 2 22 1 149 3 293 2 246 1 
14 2 359 1 138 1 329 1 41 1 30 1 203 2 7 1 221 2 91 1 22 1 246 1 
14 4 359 1 138 1 329 1 266 2 72 1 41 1 30 2 203 2 258 1 7 1 221 2 91 1 22 1 149 1 246 1 96 1 
14 3 85 1 213 1 138 3 329 1 266 2 214 1 30 2 203 1 220 1 7 3 221 6 91 3 22 3 149 1 293 1 246 1 
1 1 85 3 359 5 213 2 138 5 329 5 266 18 214 1 366 1 30 12 241 1 220 1 7 5 91 5 221 10 149 7 293 3 65 1 246 1 67 1 96 3 14 34 72 5 345 1 299 4 349 1 41 3 119 2 255 1 203 16 258 3 22 5 80 1 81 3 
359 1 85 1 138 1 266 4 366 1 30 2 241 1 113 1 7 1 91 1 221 2 149 2 293 1 246 1 14 8 72 1 345 1 299 1 349 1 119 1 203 4 22 1 81 1 
85 1 359 2 138 2 329 1 266 5 366 1 30 3 241 1 113 1 7 2 91 2 221 4 149 2 293 1 246 1 96 1 14 11 72 1 345 1 299 2 349 1 41 1 119 1 255 1 203 6 22 2 80 1 81 1 
85 1 359 3 329 1 138 3 213 1 266 10 366 1 190 1 30 4 241 1 113 1 7 3 91 3 221 6 336 1 149 3 293 1 246 1 96 2 14 19 72 3 345 1 299 1 349 1 41 2 119 1 321 1 203 9 46 1 258 2 22 3 80 1 81 1 
85 1 359 3 213 1 329 2 138 3 266 7 366 1 190 1 30 5 241 1 113 1 7 3 91 3 221 6 336 1 149 3 293 1 246 1 96 2 14 17 72 2 345 1 299 1 349 1 41 2 119 1 321 1 203 10 46 1 258 1 22 3 80 1 81 1 
359 1 85 1 138 1 266 4 366 1 30 2 241 1 113 1 7 1 91 1 221 2 149 2 293 1 246 1 14 8 72 1 345 1 299 1 349 1 119 1 203 4 22 1 81 1 
359 2 329 1 138 1 266 6 366 1 190 1 30 2 113 1 7 1 91 1 221 2 336 1 149 1 246 1 96 2 14 12 72 2 299 1 41 2 321 1 203 6 46 1 258 2 22 1 81 1 
85 1 359 3 329 2 138 4 213 2 266 8 366 1 190 1 30 5 241 1 113 1 7 4 91 4 221 8 336 1 149 3 293 1 246 1 96 2 14 18 72 2 345 1 299 1 349 1 41 2 119 1 321 1 203 10 46 1 258 1 22 4 80 1 81 1 
359 3 329 3 138 4 213 2 266 7 214 1 366 1 190 1 30 6 113 1 7 4 91 4 221 8 336 1 149 3 246 1 96 3 14 16 72 2 299 1 41 3 321 1 203 9 46 1 258 2 22 4 81 1 
14 7 85 3 359 1 329 3 266 4 72 1 349 2 119 1 30 6 241 1 203 3 149 3 293 3 
85 1 359 3 329 1 138 4 213 2 266 8 214 1 366 1 190 1 30 4 241 1 113 1 7 4 91 4 221 8 336 1 149 3 293 1 246 1 96 2 14 18 72 2 345 1 299 1 349 1 41 2 119 1 321 1 203 10 46 1 258 1 22 4 81 1 
279 1 176 1 0 1 104 1 78 1 188 1 134 1 
0 1 264 1 106 1 17 1 188 1 134 1 279 1 176 1 104 1 159 1 78 1 338 1 
296 1 302 1 257 1 330 1 107 1 193 1 305 1 108 1 34 1 42 1 225 1 
373 1 16 1 296 1 71 1 107 1 330 1 108 1 188 1 110 1 279 1 176 2 302 1 257 1 148 1 193 1 78 2 64 1 34 1 
265 1 330 1 107 1 108 2 188 2 110 1 29 1 148 1 167 1 64 2 34 1 198 1 339 1 296 1 16 2 373 1 71 1 279 1 176 2 302 1 257 3 206 1 78 2 
265 1 330 1 107 2 108 2 239 1 188 2 110 1 29 1 114 1 167 1 64 2 34 1 198 1 339 1 296 2 16 2 373 1 71 1 279 1 176 2 302 2 257 3 206 1 78 2 
296 3 70 1 139 1 107 3 330 1 87 1 108 1 55 1 239 1 142 1 302 3 204 2 257 4 206 1 177 1 160 1 193 1 207 1 243 2 64 1 34 1 198 1 339 1 
296 3 139 1 107 3 330 1 108 1 55 1 239 1 142 1 302 3 204 2 257 4 206 1 19 1 177 1 160 1 193 1 207 1 243 2 64 1 34 1 198 1 339 1 
217 1 296 1 302 1 330 1 107 1 34 1 
296 1 120 1 107 1 330 1 108 1 56 1 302 1 257 1 283 1 193 1 64 1 34 2 66 1 
359 1 85 1 164 2 53 1 138 2 238 1 187 1 266 3 330 1 107 1 108 1 188 1 189 1 110 1 30 2 241 1 124 1 7 2 221 4 91 2 148 1 33 1 149 2 293 1 64 1 224 2 34 1 197 1 14 6 16 1 373 1 296 1 71 1 72 1 345 1 349 1 119 1 279 2 176 2 302 1 203 3 257 1 352 1 178 1 21 1 22 2 78 2 
286 1 288 1 163 2 139 1 107 1 55 2 142 1 289 1 193 1 243 3 270 1 151 1 195 1 371 2 68 1 296 1 317 1 132 2 302 1 45 1 204 3 257 2 19 1 177 1 160 1 207 1 179 2 284 1 
296 2 120 1 107 2 330 1 108 1 217 1 300 1 302 2 124 1 257 2 160 1 64 1 34 2 
296 4 107 4 330 1 100 1 108 1 239 1 302 4 124 1 257 1 193 1 305 1 34 1 225 1 
341 1 296 1 107 1 330 1 108 1 56 1 346 1 302 1 257 1 63 1 64 1 34 2 66 1 
26 1 296 1 302 1 184 1 273 1 115 1 330 1 107 1 193 1 34 1 
280 1 296 2 302 2 124 1 257 1 330 1 107 2 108 1 116 1 34 1 28 1 
296 5 107 5 330 2 100 1 108 2 28 1 2 1 332 1 302 4 124 1 257 3 206 1 193 1 305 1 34 2 225 1 
296 5 107 5 330 2 100 1 108 2 28 1 3 1 332 1 302 4 124 1 257 3 206 1 193 1 305 1 34 2 225 1 
373 1 16 1 296 1 71 1 107 1 330 1 108 1 188 1 110 1 279 1 176 2 302 1 257 1 114 1 193 1 78 2 64 1 34 1 
296 1 120 1 107 1 330 1 108 1 56 1 302 1 257 1 206 1 283 1 64 1 34 2 66 1 
279 1 145 1 357 1 172 1 343 1 
357 1 200 1 265 1 139 1 172 2 343 2 363 1 142 1 29 1 279 1 145 2 289 1 256 1 74 1 44 1 204 2 167 1 207 1 243 2 
176 1 322 1 145 1 357 1 282 1 290 1 343 1 78 1 188 1 
256 1 200 1 357 1 
146 1 347 1 48 1 42 1 
144 1 146 1 324 1 229 1 230 1 347 1 48 1 
209 1 153 1 324 1 
141 1 229 1 230 3 347 1 144 1 301 2 32 1 146 1 324 3 244 1 126 1 48 1 
144 1 146 1 324 2 228 1 140 1 229 1 230 2 347 1 48 1 
26 1 372 1 184 1 229 1 230 1 375 1 102 1 347 1 144 1 324 1 244 1 
144 1 324 1 244 1 229 1 230 1 347 1 48 1 
144 1 146 1 324 1 244 1 229 1 230 1 48 2 
360 1 229 2 230 2 347 1 144 2 281 1 324 2 244 1 261 1 48 1 
15 1 228 2 275 1 229 1 230 3 102 1 347 2 144 1 146 1 324 3 244 1 48 1 35 1 
26 1 372 1 358 1 184 2 154 1 228 1 229 1 230 2 347 1 144 1 146 1 324 2 115 1 244 1 48 1 
140 1 228 2 275 1 229 2 230 4 278 1 102 1 347 2 144 2 146 1 324 4 244 1 48 1 
144 1 146 1 324 1 244 1 229 1 230 1 347 1 48 1 
228 2 141 1 275 1 229 1 230 4 102 1 347 3 144 1 301 1 146 2 324 4 126 1 48 2 245 1 
185 1 228 1 229 1 230 2 347 1 144 1 146 1 324 2 244 1 95 1 12 1 48 1 
361 1 141 2 229 1 230 3 347 1 144 1 301 2 146 1 324 3 244 1 126 1 48 1 
9 1 11 1 161 2 347 2 
144 1 335 1 324 1 244 1 229 1 230 1 
144 1 146 1 324 2 228 1 244 1 229 1 230 2 347 1 48 1 35 1 
147 1 
144 1 146 1 324 1 244 1 229 1 230 1 347 1 48 1 
228 1 229 1 230 3 347 1 144 1 301 1 146 1 324 3 244 1 48 1 35 1 
275 1 347 1 102 1 245 1 
347 1 48 1 

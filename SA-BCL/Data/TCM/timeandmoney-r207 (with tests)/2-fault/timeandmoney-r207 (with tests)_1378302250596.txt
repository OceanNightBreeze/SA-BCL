#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 283 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | CONDITION | 1506 | if (x) -> if (!x)
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | OPERATOR | 6134 | && -> ||
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
217 1 298 6 64 2 46 2 365 1 300 2 191 1 344 1 279 9 254 2 179 1 308 1 106 2 75 1 76 1 13 1 78 1 201 1 289 1 41 2 376 1 377 1 332 4 88 5 186 2 18 9 245 1 215 3 
217 1 298 6 64 2 46 2 365 1 300 2 191 1 344 1 279 9 254 2 179 1 308 1 106 2 75 1 76 1 13 1 78 1 201 1 289 1 41 2 376 1 377 1 332 4 88 5 186 2 18 9 245 1 215 3 
217 1 298 7 64 2 46 2 365 1 300 2 191 1 344 1 279 10 254 2 179 1 308 1 106 2 75 1 76 1 13 1 78 1 201 1 289 1 41 2 376 1 377 1 332 5 88 6 186 2 18 10 245 1 215 4 
217 1 298 4 64 2 46 2 365 1 300 2 191 1 344 1 279 7 254 2 179 1 308 1 106 1 75 1 76 1 13 1 78 1 201 1 41 2 376 1 377 1 332 3 88 4 186 2 18 7 245 1 215 2 
75 1 76 1 217 1 298 3 64 1 46 1 289 1 41 1 344 1 377 1 254 1 279 4 332 2 88 3 186 1 18 4 215 1 106 2 
75 1 13 1 201 1 64 1 46 1 137 1 252 1 300 1 41 1 344 1 377 1 254 1 279 2 88 1 230 1 18 2 
75 1 298 1 300 1 41 2 344 1 377 1 254 2 279 3 332 1 88 2 18 3 179 1 215 1 
75 1 76 1 217 1 0 1 298 7 64 1 152 1 46 1 191 1 300 1 289 1 41 2 344 1 377 1 254 2 279 9 88 5 332 4 186 1 18 9 179 1 308 1 215 3 106 2 
75 1 76 1 217 1 0 1 298 7 64 1 152 1 46 1 191 1 300 1 289 1 41 2 344 1 377 1 254 2 279 9 88 5 332 4 186 1 18 9 179 1 308 1 215 3 106 2 
216 1 328 1 283 1 
143 1 328 1 69 2 
346 2 211 2 313 1 333 2 381 2 342 1 288 2 121 2 
168 2 296 1 317 1 366 1 222 1 25 1 342 1 154 2 321 2 346 2 227 1 178 2 104 1 105 2 10 1 372 1 108 1 110 1 261 1 264 1 263 1 288 2 85 1 141 1 210 1 211 3 313 1 242 1 333 3 335 1 381 2 268 1 20 1 270 1 214 1 121 2 60 1 
346 1 220 1 211 1 228 1 313 1 66 1 333 1 381 1 288 1 121 1 
216 1 251 1 328 1 220 1 2 1 205 1 288 1 27 1 226 1 211 1 358 1 333 1 47 1 61 1 
216 1 251 2 328 1 220 1 205 1 288 1 27 1 346 1 226 2 211 1 333 1 47 1 381 1 121 1 61 1 
226 1 251 1 102 1 244 1 309 1 
216 1 159 1 226 2 251 2 328 1 244 1 369 1 309 1 
226 1 251 1 244 1 
219 1 251 1 220 1 66 1 288 1 346 1 226 1 211 1 228 1 313 1 333 1 381 1 121 1 309 1 
328 1 
216 1 35 1 226 2 251 2 328 1 244 1 369 1 309 1 
216 1 338 1 272 1 251 5 328 1 82 2 310 1 369 1 28 1 226 5 195 2 306 1 323 2 72 1 324 1 244 2 187 1 49 1 309 2 
363 1 346 3 211 3 333 3 381 1 342 1 288 3 121 3 
346 1 220 1 211 1 228 1 333 1 288 1 121 1 
346 1 220 1 211 1 333 1 336 1 381 1 92 1 288 1 121 1 
168 2 363 1 296 1 251 1 317 1 220 1 25 1 342 1 154 1 321 1 27 1 346 3 226 1 227 1 178 1 104 1 47 1 105 1 10 1 372 1 108 1 261 1 263 1 205 1 288 3 140 1 85 1 141 1 210 1 211 4 147 1 242 1 313 1 333 4 335 1 381 2 92 1 268 1 270 1 20 1 60 1 120 1 121 3 61 1 
346 1 363 1 211 2 358 1 333 2 67 1 342 1 288 2 121 1 
363 2 251 1 328 1 220 1 205 1 288 3 140 1 27 1 346 3 100 1 226 1 211 3 333 3 47 1 381 1 92 1 121 3 120 1 61 1 
363 1 288 2 346 2 211 2 333 2 131 1 307 1 92 1 381 1 121 2 
342 1 85 1 154 1 141 1 210 1 211 1 178 1 242 1 333 1 335 1 105 1 268 1 20 1 270 1 60 1 
45 1 342 1 85 1 154 1 141 1 210 1 211 1 178 1 164 1 242 1 333 1 335 1 105 1 270 1 60 1 
337 1 168 2 296 1 123 1 317 1 222 2 25 1 320 1 321 4 322 1 194 1 227 1 196 1 104 2 131 2 307 2 135 1 108 1 353 2 161 1 261 1 360 1 119 1 293 1 
346 1 220 1 211 1 333 1 288 1 21 1 61 1 121 1 
363 1 288 1 140 1 85 1 154 1 141 1 210 1 346 1 211 2 178 1 242 1 131 1 333 2 335 1 105 1 268 1 270 1 20 1 60 1 121 1 
283 1 342 1 
346 1 211 2 333 2 381 1 92 1 336 1 342 2 288 2 121 1 
353 1 131 1 307 1 
342 1 85 1 154 1 356 1 141 1 210 1 211 1 178 1 242 1 333 1 335 1 105 1 268 1 20 1 270 1 60 1 
193 1 346 4 363 2 211 5 358 1 333 5 232 1 381 1 92 1 67 1 342 1 288 5 140 1 121 4 
346 2 220 1 211 2 228 1 333 2 288 2 21 1 121 2 
42 1 22 1 361 1 
42 1 22 1 361 1 
22 1 71 1 361 1 
22 1 71 1 361 1 
22 1 71 1 361 1 
22 1 361 1 
22 1 361 1 
303 1 130 1 
303 1 130 1 
303 1 130 1 
42 1 22 1 361 1 
22 1 281 1 361 1 
303 1 22 2 130 1 171 1 343 1 361 2 
188 2 22 2 203 2 251 2 328 1 14 2 99 1 274 1 171 1 39 2 239 3 7 1 224 1 226 2 157 2 315 1 48 1 361 2 12 1 
188 1 22 1 251 1 342 1 346 2 226 1 157 1 281 1 133 1 134 1 203 1 235 1 286 1 39 1 288 2 239 1 211 2 212 1 333 2 334 1 380 1 315 1 121 2 361 1 
64 1 186 1 46 1 
64 1 46 1 230 1 
150 1 186 2 64 3 238 1 230 1 162 1 
190 1 150 1 186 1 64 2 238 1 230 1 
150 2 186 1 64 2 238 1 230 1 
216 1 338 1 94 1 149 1 251 5 23 1 98 2 369 1 192 1 69 3 322 1 28 2 8 1 226 5 255 2 195 1 323 1 133 1 135 1 326 2 309 4 235 1 352 1 328 2 161 1 82 1 143 1 86 1 360 1 244 1 334 1 187 3 
216 1 338 1 94 2 149 2 251 9 369 1 192 3 128 1 69 9 322 3 28 6 70 1 226 9 255 6 102 5 195 2 103 1 306 1 323 2 135 3 326 6 309 7 109 1 328 5 352 1 161 3 82 2 142 1 143 3 146 5 360 3 334 4 244 6 165 1 187 8 
216 1 94 1 149 1 251 3 98 1 192 1 69 4 322 1 8 1 28 2 226 3 255 2 195 1 306 1 323 1 135 1 326 2 309 2 328 3 161 1 82 1 143 2 86 1 334 1 360 1 187 3 
216 1 94 1 149 1 251 4 98 2 192 2 128 1 69 7 322 2 8 1 28 4 226 4 255 4 195 1 103 1 306 1 323 1 135 2 326 4 309 3 328 4 161 2 82 1 142 1 143 3 86 1 334 2 360 2 187 5 
210 1 335 1 
210 1 305 1 335 3 382 2 141 1 107 1 
335 1 283 1 382 1 
90 1 335 1 
204 1 
210 1 335 1 141 1 
287 1 335 1 
250 1 123 4 1 1 273 1 222 8 341 2 301 1 321 14 322 3 104 6 355 1 40 2 209 1 359 2 360 3 293 5 44 2 93 1 
250 3 123 4 1 1 273 1 222 8 341 2 301 1 321 14 322 3 104 6 355 1 40 2 209 1 359 2 360 3 293 7 44 2 93 1 
250 1 123 4 1 1 273 1 222 8 341 2 321 14 301 1 322 3 129 1 104 6 355 1 40 2 209 1 359 2 360 3 293 5 44 2 93 1 
168 2 250 7 1 1 123 7 317 1 299 1 65 1 273 2 3 3 222 21 341 3 25 1 192 3 301 1 321 40 322 6 29 1 104 19 256 4 198 1 135 3 199 1 108 1 260 1 161 3 261 1 355 1 40 2 209 2 292 1 359 3 360 6 293 14 44 3 93 1 
168 4 250 2 1 1 123 5 317 2 273 1 275 1 25 2 222 9 341 2 321 16 301 1 322 3 104 7 198 1 108 2 261 2 355 1 40 2 208 1 209 1 359 2 360 3 293 7 44 2 
298 1 64 2 46 1 300 1 154 1 344 1 279 2 254 1 178 1 230 1 370 1 105 1 371 1 75 1 202 1 259 1 162 1 113 1 41 1 184 1 377 1 241 1 55 1 88 1 186 1 18 2 269 1 166 1 270 1 60 1 
297 1 298 2 64 2 46 1 300 1 154 1 344 1 279 3 254 1 178 1 230 1 370 1 105 1 75 1 202 1 259 1 162 1 41 1 184 1 379 1 241 1 55 1 88 1 186 1 58 1 18 3 269 1 166 1 270 1 60 1 
75 1 202 1 259 1 298 2 297 1 64 2 46 1 162 1 300 1 154 1 344 1 279 2 241 1 88 1 186 1 58 1 178 1 230 1 18 2 370 1 105 1 269 1 270 1 166 1 60 1 
300 2 154 1 279 1 254 1 178 1 370 2 105 1 11 1 237 1 83 1 163 1 85 1 41 1 240 1 210 1 379 1 241 2 18 1 335 1 269 2 248 1 270 1 60 1 
297 1 64 2 46 1 300 1 154 1 279 1 254 1 178 1 230 1 370 1 105 1 371 1 202 1 259 1 162 1 41 1 184 1 377 1 241 1 55 1 186 1 18 1 269 1 166 1 270 1 60 1 
225 1 
338 1 149 1 251 5 2 1 153 4 97 1 154 2 6 1 155 1 101 1 195 1 47 1 105 2 158 2 262 2 205 1 52 2 267 1 357 2 53 2 210 1 211 1 358 1 270 1 60 1 61 1 122 1 216 1 220 1 369 3 26 1 276 2 69 2 27 1 28 2 177 1 226 5 178 2 323 1 77 1 79 1 328 2 38 1 82 1 83 1 288 1 85 2 240 1 144 2 143 2 333 1 244 6 335 1 246 1 187 2 
251 3 220 1 2 1 153 2 369 1 155 1 27 1 101 1 226 3 47 1 35 1 205 1 288 1 267 1 53 1 211 1 358 1 333 1 244 2 246 1 61 1 122 1 
216 1 251 3 220 1 2 1 153 3 369 1 155 1 27 1 101 1 226 3 47 1 35 1 328 1 262 1 205 1 288 1 267 1 211 1 358 1 333 1 244 1 246 1 61 1 122 1 
216 1 251 3 220 1 2 1 153 3 369 1 155 1 27 1 101 1 226 3 47 1 35 1 328 1 262 1 205 1 288 1 267 1 53 1 144 1 211 1 358 1 333 1 244 2 246 1 61 1 122 1 
189 1 338 1 251 5 2 1 153 6 97 1 155 1 101 1 195 1 47 1 158 2 262 4 205 1 52 2 267 1 357 2 53 4 211 1 358 1 61 1 122 1 216 5 220 1 369 3 276 2 27 1 28 1 226 5 278 1 280 1 30 1 323 1 35 1 77 1 328 5 182 1 82 1 288 1 144 4 143 2 333 1 244 7 246 1 187 1 
338 1 251 4 2 1 153 4 97 1 155 1 101 1 195 1 47 1 158 2 262 2 205 1 52 2 267 1 357 2 53 2 211 1 358 1 61 1 122 1 216 1 220 1 369 2 276 2 27 1 69 2 28 1 226 4 323 1 77 1 328 2 82 1 38 1 288 1 143 2 144 2 333 1 244 4 246 1 187 1 
189 1 216 1 338 1 251 4 220 1 2 1 153 4 97 1 369 2 276 2 155 1 27 1 28 1 280 1 101 1 226 4 195 1 323 1 47 1 158 2 77 1 328 1 182 1 82 1 262 2 205 1 52 2 288 1 267 1 357 2 53 2 144 2 143 2 211 1 358 1 333 1 244 4 246 1 187 1 61 1 122 1 
189 1 216 1 338 1 251 4 220 1 2 1 153 4 97 1 369 2 276 2 155 1 27 1 28 1 280 1 101 1 226 4 195 1 323 1 47 1 158 2 77 1 328 1 182 1 82 1 262 2 205 1 52 2 288 1 267 1 357 2 53 2 144 2 143 2 211 1 358 1 333 1 244 4 246 1 187 1 61 1 122 1 
216 1 338 1 251 4 151 1 220 1 2 1 153 4 340 1 369 2 276 2 155 1 69 2 27 1 28 1 280 1 101 1 226 4 195 1 229 2 323 1 47 1 158 2 33 2 77 1 328 1 82 1 262 2 139 1 205 1 288 1 267 1 53 2 144 2 211 1 358 1 333 1 244 4 246 1 187 1 61 1 122 1 
189 1 216 1 338 1 251 4 220 1 2 1 153 5 97 1 369 2 276 2 155 1 27 1 28 1 280 1 101 1 226 4 278 1 195 1 323 1 47 1 158 2 77 1 328 1 82 1 182 1 262 3 205 1 52 2 288 1 267 1 357 2 53 3 143 2 144 3 211 1 358 1 333 1 244 5 246 1 187 1 61 1 122 1 
189 1 216 1 338 1 251 4 220 1 2 1 153 5 97 1 369 2 276 2 155 1 27 1 28 1 280 1 101 1 226 4 278 1 195 1 323 1 47 1 158 2 77 1 328 1 82 1 182 1 262 3 205 1 52 2 288 1 267 1 357 2 53 3 143 2 144 3 211 1 358 1 333 1 244 5 246 1 187 1 61 1 122 1 
216 1 338 1 251 4 220 1 2 1 153 4 340 1 369 2 276 2 155 1 69 2 27 1 28 1 101 1 226 4 195 1 229 2 323 1 47 1 158 2 33 2 77 1 328 1 38 1 82 1 262 2 205 1 288 1 267 1 53 2 144 2 211 1 358 1 333 1 244 4 246 1 187 1 61 1 122 1 
168 2 108 1 250 1 296 1 317 1 353 1 161 1 261 1 25 1 222 2 321 2 194 1 227 1 196 1 131 1 307 1 360 1 293 1 
168 2 108 1 296 1 123 1 317 1 353 1 261 1 25 1 320 1 321 2 322 1 227 1 196 1 131 1 104 2 307 1 293 1 135 1 
168 2 250 1 296 1 123 1 317 1 222 2 25 1 192 1 321 4 322 1 227 1 196 1 131 2 104 2 307 2 135 1 108 1 353 2 161 1 261 1 360 1 293 2 
168 2 108 1 250 1 296 1 317 1 353 1 161 1 261 1 84 1 25 1 222 2 321 2 194 1 227 1 131 1 307 1 360 1 293 1 
168 2 108 1 296 1 123 1 317 1 353 1 261 1 84 1 25 1 320 1 321 2 322 1 227 1 131 1 104 2 307 1 293 1 135 1 
168 2 250 1 296 1 123 1 317 1 222 2 25 1 192 1 321 4 322 1 227 1 131 2 104 2 307 2 135 1 108 1 353 2 161 1 261 1 84 1 360 1 293 2 
168 2 108 1 250 1 296 1 123 1 317 1 353 2 161 1 261 1 25 1 222 2 192 1 321 4 322 1 227 1 104 2 131 2 307 2 360 1 135 1 293 2 
168 2 296 1 317 1 222 1 25 1 342 1 154 1 321 2 178 1 227 1 104 1 105 1 10 1 108 1 372 1 261 1 85 1 141 1 210 1 211 1 242 1 333 1 335 1 268 1 270 1 20 1 214 1 60 1 
168 2 296 1 317 1 45 1 222 1 25 1 342 1 154 1 321 2 178 1 227 1 104 1 105 1 108 1 372 1 261 1 85 1 141 1 210 1 116 1 211 1 242 1 164 1 333 1 335 1 270 1 214 1 60 1 
168 2 250 1 296 1 123 1 317 1 222 2 25 1 192 1 321 4 322 1 227 1 131 2 104 2 307 2 135 1 108 1 80 1 353 2 161 1 261 1 360 1 293 2 
168 2 250 1 296 1 123 1 317 1 222 2 25 1 154 1 192 1 321 4 322 1 178 1 227 1 104 2 131 2 307 2 325 1 105 1 135 1 10 1 108 1 353 2 161 1 261 1 113 1 141 1 210 1 211 1 242 1 333 1 360 1 335 1 293 2 268 1 270 1 20 1 60 1 
168 2 250 1 296 1 317 1 25 1 222 2 192 1 302 1 321 3 322 1 346 1 227 1 104 1 131 1 307 1 135 1 108 1 80 1 353 1 161 1 261 1 288 1 211 1 333 1 360 1 381 1 92 1 293 1 121 1 
168 2 108 1 296 1 123 2 317 1 261 1 341 1 222 3 25 1 342 2 355 1 321 5 40 1 301 1 322 1 227 1 196 1 104 2 359 1 360 1 283 1 293 2 44 1 
168 4 250 1 296 2 123 1 317 2 299 1 127 1 3 3 25 2 222 8 342 1 192 2 321 14 322 1 227 1 104 6 131 11 256 3 307 4 135 1 372 1 108 2 36 1 351 1 80 1 353 11 161 2 261 2 114 1 292 1 360 2 293 2 214 1 
168 2 363 1 296 1 317 1 4 1 25 1 222 1 342 1 154 1 321 2 346 1 178 1 227 1 104 1 307 1 105 1 349 1 108 1 372 1 80 1 261 1 288 1 85 1 140 1 141 1 356 1 210 1 54 1 211 2 242 1 333 2 335 1 268 1 270 1 20 1 214 1 60 1 121 1 
250 1 296 3 1 1 341 1 342 3 154 1 192 2 301 1 346 1 104 13 307 6 105 1 10 2 108 3 350 1 353 6 160 1 161 2 261 3 355 1 51 2 210 2 211 3 359 2 360 5 268 2 20 2 270 2 214 1 121 1 60 2 168 6 363 1 123 6 220 1 317 3 124 2 368 1 25 3 222 14 321 27 322 5 178 1 227 3 131 6 325 2 135 2 74 2 372 1 80 1 288 1 85 1 140 1 141 2 40 2 242 2 333 3 335 2 293 7 44 2 
168 4 363 1 297 1 296 2 317 2 319 1 25 2 222 1 154 7 321 2 346 1 178 8 227 2 196 1 104 1 132 1 282 1 105 8 108 2 372 1 261 2 264 2 83 1 84 1 113 1 288 1 85 2 240 1 210 2 185 1 211 1 333 1 335 3 117 1 270 2 295 1 214 1 121 1 60 2 
168 2 296 1 123 1 317 1 25 1 222 1 192 1 321 3 322 1 346 1 227 1 131 1 104 2 307 1 135 1 108 1 200 1 80 1 353 1 161 1 261 1 288 1 211 1 333 1 360 1 381 1 92 1 293 1 121 1 
168 4 250 3 123 3 317 2 299 1 318 1 3 1 275 1 25 2 222 9 192 3 253 1 321 19 322 3 304 1 31 1 104 10 256 2 135 3 108 2 285 2 236 1 161 3 261 2 183 2 331 1 292 1 87 1 360 3 293 6 
168 6 250 2 123 2 317 3 3 2 275 1 25 3 222 14 192 3 253 1 321 26 322 2 304 2 31 1 104 12 256 2 198 2 135 2 234 1 108 3 285 1 236 1 161 3 81 1 261 3 354 1 375 1 183 4 291 1 292 2 87 2 59 1 360 3 293 4 
168 6 250 4 123 4 317 3 299 1 3 3 275 1 341 1 25 3 222 20 192 4 253 1 301 1 321 41 322 5 9 1 304 2 31 1 104 21 256 4 198 1 135 4 234 1 108 3 285 1 236 1 161 4 81 1 354 1 261 3 375 1 183 4 331 1 355 1 40 1 291 1 292 3 87 1 359 1 59 1 360 5 293 8 44 1 
168 8 250 3 123 4 317 4 299 1 3 3 275 1 341 1 25 4 222 20 192 4 253 1 301 1 321 38 322 4 9 1 304 2 31 1 104 18 256 4 198 2 135 3 234 1 108 4 285 1 236 1 161 4 81 1 354 1 261 4 375 1 183 4 331 1 355 1 40 1 291 1 292 3 87 1 359 1 59 1 360 5 293 7 44 1 
168 4 250 7 123 7 317 2 299 2 3 4 275 1 341 1 25 2 222 27 192 7 253 1 301 1 321 52 322 8 304 1 31 1 104 25 256 4 198 1 135 7 234 1 108 2 285 1 351 2 236 1 161 7 81 1 354 1 261 2 375 1 183 4 355 1 40 1 291 1 292 2 87 1 359 1 59 1 360 8 293 14 44 1 
188 1 22 1 203 1 251 1 328 1 14 1 99 1 171 1 39 1 239 2 7 1 224 1 226 1 157 1 315 1 48 1 361 1 12 1 
188 1 22 1 203 1 251 1 328 1 14 1 99 1 171 1 39 1 239 2 7 1 224 1 226 1 157 1 315 1 48 1 361 1 12 1 
188 1 22 1 203 1 251 1 328 1 14 1 99 1 171 1 39 1 239 2 7 1 224 1 226 1 157 1 315 1 48 1 361 1 12 1 
42 1 266 1 343 1 
42 1 266 1 343 1 
71 1 172 1 
71 1 172 1 343 1 
212 1 134 1 
188 1 22 1 251 1 342 1 346 2 226 1 157 1 281 1 133 1 134 1 12 1 309 1 203 1 235 1 329 1 14 1 286 1 39 1 288 2 239 1 211 2 212 1 333 2 334 1 380 1 121 2 361 1 
7 1 188 1 203 1 157 1 22 1 330 1 99 1 171 1 39 1 361 1 
281 1 380 1 
188 1 203 1 157 1 22 1 37 1 5 1 39 1 176 1 361 1 
42 1 266 1 
71 1 172 1 343 1 
168 2 218 1 296 1 364 1 317 1 319 1 25 1 222 1 154 2 321 2 178 2 227 1 104 1 105 2 233 1 180 1 108 1 372 1 80 1 261 1 264 2 288 2 210 1 211 2 333 2 335 1 117 1 270 1 316 1 214 1 60 1 
202 1 297 1 64 2 46 1 162 1 113 1 154 2 115 1 223 1 290 1 241 1 55 1 186 1 178 2 230 1 105 2 270 1 166 1 60 1 
202 1 297 1 64 2 46 1 162 1 138 1 154 1 223 1 241 1 55 1 186 1 178 1 230 1 105 1 166 1 270 1 60 1 
83 1 85 1 154 1 311 1 115 1 210 1 240 1 241 1 178 1 335 1 105 1 270 1 60 1 11 1 
202 1 297 1 64 2 46 1 162 1 154 1 115 1 223 1 290 1 241 1 55 1 186 1 178 1 230 1 105 1 166 1 270 1 60 1 
362 1 
216 1 28 1 328 1 72 1 310 1 283 1 187 1 
216 1 338 1 251 1 97 1 369 1 69 1 28 1 226 1 195 1 323 1 328 2 82 1 52 1 357 1 143 1 244 1 187 1 
338 4 149 2 251 5 339 2 154 3 192 2 156 2 255 6 195 4 305 1 197 2 47 2 105 3 258 1 161 2 112 2 310 1 113 1 16 1 210 3 360 2 19 1 270 3 271 2 60 4 216 2 367 1 369 3 26 1 277 2 69 12 322 2 28 8 226 5 178 3 323 4 72 1 135 2 74 2 326 6 181 2 328 8 82 4 287 2 85 1 141 3 378 2 143 6 90 3 335 10 244 5 382 2 187 9 249 1 
216 2 338 2 149 1 251 1 339 2 3 1 369 1 26 1 192 2 69 6 322 2 28 5 226 1 255 5 195 2 323 2 256 1 135 2 234 1 326 5 328 5 161 2 112 1 81 1 82 2 354 1 375 1 291 1 292 1 143 3 243 1 244 1 360 2 213 1 187 8 
338 1 219 1 1 1 251 1 220 1 339 2 66 1 322 1 28 2 346 1 226 1 195 1 228 1 323 1 112 1 82 1 182 1 288 1 40 1 211 1 313 1 333 1 359 1 360 2 381 1 44 1 187 2 121 1 
216 1 338 1 328 1 82 1 310 1 28 1 195 1 323 1 72 1 187 1 
328 5 339 2 161 2 112 1 192 2 69 10 322 2 28 5 143 5 255 5 360 2 135 2 74 1 326 5 187 5 
216 1 226 1 251 1 328 1 244 1 369 1 
338 1 149 2 251 3 369 2 154 4 26 2 6 1 175 1 28 2 226 3 195 2 178 4 306 1 323 2 105 4 258 1 373 1 79 1 82 2 83 1 85 2 210 1 240 1 335 1 244 4 19 2 270 1 187 2 60 1 
168 2 296 1 317 1 25 1 342 1 154 1 321 1 346 2 178 1 227 1 104 1 105 1 10 1 372 1 108 1 261 1 263 1 288 2 85 1 141 1 210 1 211 3 313 1 242 1 333 3 335 1 381 2 268 1 20 1 270 1 121 2 60 1 
216 2 338 1 149 1 328 4 82 1 341 1 26 1 69 4 28 2 143 2 255 2 195 1 323 1 326 2 187 1 
203 1 157 1 148 1 
203 1 157 1 148 1 
34 1 203 1 157 1 
34 1 203 1 157 1 
34 1 203 1 157 1 
203 1 157 1 
22 1 361 1 
203 1 157 1 148 1 
7 1 203 1 157 1 212 1 167 1 
168 4 250 3 1 1 123 4 317 2 25 2 222 9 341 1 301 1 321 17 322 3 104 8 198 1 108 2 261 2 355 1 40 2 359 2 360 3 293 7 44 2 
123 2 341 1 222 3 355 1 301 1 40 1 321 5 322 1 104 2 359 1 360 1 283 1 293 2 44 1 
168 2 108 1 250 1 123 1 317 1 161 1 261 1 25 1 222 2 192 1 321 4 322 1 347 1 104 2 360 1 135 1 293 2 
250 1 123 1 299 1 3 1 161 1 222 3 192 1 321 7 322 1 292 1 104 4 256 2 360 1 135 1 293 2 
168 2 250 2 1 1 123 5 317 1 299 1 3 2 127 1 341 1 222 13 25 1 192 2 301 1 321 25 322 5 104 12 256 2 198 1 135 2 108 1 351 1 161 2 261 1 355 1 40 2 359 2 360 5 293 7 44 2 
104 1 256 1 321 1 
3 1 222 1 321 1 
108 1 168 2 250 1 123 2 317 1 161 1 261 1 25 1 222 3 192 1 321 6 322 1 347 1 104 3 360 1 293 3 135 1 74 1 
168 2 250 1 123 1 317 1 3 1 275 1 25 1 222 6 192 2 321 12 322 2 104 6 256 1 135 2 234 1 108 1 161 2 261 1 354 1 81 1 375 1 291 1 292 1 360 2 293 2 
250 1 123 1 222 3 40 1 321 6 322 1 104 3 359 1 360 1 293 2 44 1 
168 2 108 1 250 1 123 1 317 1 261 1 222 1 25 1 355 1 301 1 321 3 359 1 104 2 198 1 293 2 32 1 44 1 
108 1 168 2 250 2 1 1 123 3 317 1 261 1 275 1 25 1 222 5 321 10 40 1 322 2 359 2 104 5 360 2 293 5 44 2 
168 2 108 1 250 1 317 1 161 1 261 1 275 1 25 1 222 2 321 2 360 1 293 1 
168 2 108 1 250 1 123 1 317 1 161 1 261 1 275 1 25 1 222 2 192 1 321 4 322 1 104 2 360 1 135 1 293 2 
168 6 108 3 250 1 123 1 317 3 261 3 275 1 25 3 222 1 331 1 321 3 104 2 359 1 198 1 293 2 32 1 44 1 
168 8 250 4 1 1 123 5 317 4 65 1 3 3 275 1 341 1 25 4 222 16 192 2 301 1 321 31 322 5 347 1 104 15 256 3 198 1 199 1 135 2 108 4 260 1 161 2 261 4 355 1 331 1 40 2 292 1 359 2 360 5 293 9 44 2 
168 2 250 1 1 1 123 4 317 1 3 1 275 1 341 1 25 1 222 8 321 15 301 1 322 3 104 7 256 1 108 1 261 1 355 1 40 2 291 1 292 1 359 2 360 3 293 5 44 2 
168 4 250 2 1 1 123 4 317 2 299 1 3 1 275 1 341 1 25 2 222 10 192 1 301 1 321 18 322 3 347 1 104 8 256 2 108 2 161 1 261 2 355 1 40 2 291 1 292 1 359 2 360 4 293 6 44 2 
168 6 250 2 1 1 123 5 317 3 3 1 275 1 341 1 25 3 222 13 192 2 301 1 321 26 322 5 347 1 104 13 256 1 198 1 135 2 234 1 108 3 161 2 81 1 261 3 354 1 375 1 355 1 40 2 291 1 292 1 359 2 360 5 293 7 44 2 
168 6 250 4 1 1 123 5 317 3 3 1 275 1 341 1 25 3 222 14 192 2 301 1 321 24 322 4 347 1 104 10 256 1 198 1 135 1 234 1 108 3 161 2 261 3 354 1 81 1 375 1 355 1 40 2 291 1 292 1 359 2 360 5 293 9 44 2 
168 2 250 1 1 1 123 4 317 1 3 1 275 1 341 1 25 1 222 8 321 15 301 1 322 3 104 7 256 1 108 1 261 1 355 1 40 2 291 1 292 1 359 2 360 3 293 5 44 2 
168 2 250 1 123 1 317 1 3 1 275 1 25 1 222 6 192 2 321 12 322 2 104 6 256 1 135 2 234 1 108 1 161 2 261 1 354 1 81 1 375 1 291 1 292 1 360 2 293 2 
168 8 250 2 1 1 123 5 317 4 3 1 275 1 341 1 25 4 222 14 192 2 301 1 321 25 322 4 347 1 104 11 256 1 198 2 135 1 234 1 108 4 161 2 81 1 261 4 354 1 375 1 355 1 40 2 291 1 292 1 359 2 360 5 293 7 44 2 
168 8 250 3 123 3 317 4 3 1 275 1 25 4 222 9 192 3 321 16 322 2 104 7 256 1 198 2 135 2 234 1 108 4 161 3 81 1 261 4 354 1 375 1 331 1 291 1 292 1 360 3 293 6 
250 3 123 3 222 3 355 1 321 7 301 2 40 1 322 1 104 4 359 3 360 1 293 6 44 3 
168 8 250 2 1 1 123 5 317 4 3 1 275 1 341 1 25 4 222 14 192 2 301 1 321 25 322 4 104 11 256 1 198 2 135 1 234 1 108 4 161 2 81 1 261 4 354 1 375 1 355 1 331 1 40 2 291 1 292 1 359 2 360 5 293 7 44 2 
211 1 348 1 358 1 333 1 67 1 342 1 288 1 
136 1 170 1 173 1 67 1 342 1 288 1 206 1 57 1 348 1 211 1 358 1 333 1 
210 1 240 1 178 1 335 1 83 1 283 1 105 1 270 1 154 1 85 1 60 1 
363 1 342 1 288 1 85 1 154 1 141 1 210 1 346 1 211 2 178 1 242 1 333 2 335 1 105 1 268 1 270 1 60 1 121 1 
363 1 220 1 342 1 154 1 346 2 178 1 197 1 105 1 287 1 205 1 288 2 141 2 210 2 211 2 242 1 333 2 335 3 268 1 19 1 270 1 121 1 60 1 61 1 
363 1 220 1 45 1 342 1 154 2 346 2 178 2 197 1 105 2 287 1 205 1 288 2 141 2 210 2 89 1 211 2 242 1 333 2 335 3 19 1 270 1 121 1 60 1 61 1 
216 1 251 2 221 1 154 3 226 2 178 3 197 1 47 1 105 3 328 1 287 1 85 1 312 1 141 1 210 1 89 1 90 1 244 1 335 4 19 1 270 1 382 1 60 1 
216 1 251 2 328 1 287 1 85 1 154 3 141 1 210 1 226 2 156 1 89 1 178 3 197 1 90 1 47 1 335 4 244 1 105 3 19 1 382 1 270 1 60 1 
178 1 132 1 105 1 270 1 154 1 60 1 
297 1 264 1 319 1 113 1 85 2 154 6 207 1 141 1 210 2 185 1 178 7 305 1 132 1 282 1 335 3 73 1 43 1 105 7 270 2 295 1 60 3 
250 1 296 2 1 1 341 1 342 3 154 1 301 1 346 1 104 6 105 1 10 1 108 2 160 1 261 2 51 1 113 1 355 1 210 1 211 2 359 2 360 3 268 1 20 1 270 1 121 1 60 1 168 4 363 1 123 4 220 1 317 2 25 2 222 7 321 13 322 3 178 1 227 2 325 1 233 1 80 1 288 1 141 1 40 2 242 1 333 2 335 1 293 5 44 2 
216 1 338 2 251 3 369 1 154 1 277 1 28 1 226 3 156 1 178 1 195 2 323 2 72 1 47 1 105 1 258 1 309 1 181 1 328 1 82 2 310 1 85 1 378 1 90 1 335 2 244 2 382 1 187 1 
113 1 154 2 141 1 210 1 178 2 305 1 132 1 335 2 105 2 382 1 270 1 249 1 60 2 
169 1 83 1 113 1 85 1 154 4 240 1 210 1 89 1 178 4 335 1 105 4 270 1 60 1 
154 2 141 1 345 1 210 1 178 2 335 1 73 1 43 1 105 2 118 1 19 1 294 1 270 1 60 2 
64 1 178 1 46 1 230 1 105 1 270 1 166 1 154 1 85 1 60 1 
297 1 319 1 113 1 154 2 210 1 178 2 335 1 105 2 270 1 316 1 60 1 
169 1 83 1 319 1 113 1 85 1 154 4 240 1 210 2 185 1 178 5 335 3 282 1 105 5 19 1 270 2 60 2 
169 1 83 1 319 1 113 1 85 1 154 4 240 1 210 2 56 1 178 5 335 3 282 1 105 5 19 1 270 2 60 2 
363 1 45 1 342 1 288 1 85 1 154 1 141 1 210 1 346 1 211 2 178 1 242 1 333 2 335 1 105 1 270 1 60 1 121 1 
154 1 207 1 141 1 210 1 178 1 305 1 335 1 73 1 43 1 105 1 19 1 270 1 60 2 
218 1 211 1 364 1 95 1 333 1 257 1 15 1 288 1 180 1 
62 1 265 1 257 1 
95 1 91 1 15 1 257 1 342 1 
216 1 62 1 251 2 328 1 220 1 95 2 265 1 15 2 205 1 342 1 27 1 226 2 91 2 47 1 231 1 257 1 61 1 120 1 309 1 
75 1 344 1 88 1 283 1 
75 1 344 1 279 1 254 1 88 1 18 1 41 1 
18 1 300 1 269 1 
327 1 75 1 201 2 125 1 126 1 41 1 344 1 377 1 254 1 279 3 88 1 18 3 
75 1 344 1 279 2 254 1 298 1 88 1 18 2 106 1 41 1 
76 1 377 1 279 1 254 1 88 1 332 1 64 1 186 1 46 1 18 1 41 1 
75 1 377 1 279 1 254 1 88 1 18 1 41 1 
75 2 344 1 377 1 279 1 254 1 18 1 41 1 
75 1 377 1 279 2 254 2 88 1 111 1 96 1 18 2 247 1 41 2 
75 1 298 2 191 1 41 1 344 1 377 1 254 1 279 3 332 1 88 2 18 3 308 1 215 1 
75 1 298 1 50 1 64 2 46 1 162 1 41 1 344 1 377 1 254 1 279 2 88 1 186 1 230 1 18 2 
75 1 298 2 289 1 41 2 344 1 377 1 254 2 279 4 332 1 88 2 18 4 215 1 106 1 
75 1 344 1 377 1 279 1 254 1 88 1 18 1 41 1 
75 2 201 1 298 2 125 1 24 1 126 1 41 1 344 2 279 4 254 1 332 1 88 3 18 4 215 1 
75 1 0 1 298 1 41 1 68 1 344 1 377 1 254 1 279 2 88 1 17 1 18 2 
75 1 344 1 377 1 201 2 279 3 254 1 88 1 125 2 126 1 18 3 174 1 41 1 
63 1 88 2 314 1 284 2 
377 1 279 1 254 1 374 1 18 1 41 1 
75 1 344 1 377 1 279 2 254 1 298 1 88 1 18 2 308 1 41 1 
145 1 
75 1 344 1 377 1 279 1 254 1 88 1 18 1 41 1 
75 1 344 1 377 1 201 1 279 3 254 1 298 1 88 1 18 3 308 1 41 1 
88 1 332 1 24 1 215 1 
75 1 88 1 

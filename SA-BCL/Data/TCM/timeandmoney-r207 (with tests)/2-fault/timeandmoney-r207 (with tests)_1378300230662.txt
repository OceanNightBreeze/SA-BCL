#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCompare()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date; | STATEMENT | 3685 | stmt -> ;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I | CONSTANT | 4778 | 1 -> 0
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
234 1 335 2 285 1 266 1 311 5 268 1 312 1 64 2 196 1 42 2 270 1 84 6 248 1 86 2 349 1 20 1 21 9 273 4 352 2 137 1 301 2 50 1 90 3 377 9 229 1 304 2 206 1 305 1 
234 1 335 2 285 1 266 1 311 5 268 1 312 1 64 2 196 1 42 2 270 1 84 6 248 1 86 2 349 1 20 1 21 9 273 4 352 2 137 1 301 2 50 1 90 3 377 9 229 1 304 2 206 1 305 1 
234 1 335 2 285 1 266 1 311 6 268 1 312 1 64 2 196 1 42 2 270 1 84 7 248 1 86 2 349 1 20 1 21 10 273 5 352 2 137 1 301 2 50 1 90 4 377 10 229 1 304 2 206 1 305 1 
234 1 335 2 285 1 266 1 311 4 312 1 64 2 196 1 42 1 270 1 84 4 248 1 86 2 349 1 20 1 21 7 273 3 352 2 137 1 301 2 50 1 90 2 377 7 229 1 304 2 206 1 305 1 
86 1 234 1 349 1 21 4 273 2 352 1 285 1 311 3 268 1 301 1 90 1 64 1 377 4 304 1 305 1 42 2 84 3 270 1 
248 1 234 1 362 1 21 2 335 1 352 1 310 1 285 1 311 1 301 1 64 1 377 2 196 1 304 1 305 1 16 1 
234 1 21 3 335 1 273 1 352 2 285 1 137 1 311 2 90 1 64 2 377 3 305 1 84 1 
234 1 4 1 335 1 285 1 311 5 268 1 64 2 42 2 84 7 270 1 86 1 349 1 21 9 48 1 273 4 352 2 137 1 50 1 301 1 90 3 377 9 206 1 304 1 305 1 
234 1 4 1 335 1 285 1 311 5 268 1 64 2 42 2 84 7 270 1 86 1 349 1 21 9 48 1 273 4 352 2 137 1 50 1 301 1 90 3 377 9 206 1 304 1 305 1 
58 1 66 1 213 1 
51 1 213 1 155 2 
120 1 132 2 73 2 197 2 171 1 60 2 381 2 331 2 
144 1 235 1 307 1 73 2 236 1 188 1 334 1 309 2 190 1 60 3 102 1 132 2 244 1 289 2 194 1 197 2 343 1 83 1 171 1 219 1 67 1 350 1 87 1 154 1 324 1 201 2 120 1 157 1 158 2 182 1 260 2 142 1 26 1 381 3 232 1 330 1 331 2 
23 1 132 1 376 1 73 1 197 1 171 1 60 1 381 1 320 1 331 1 
249 1 333 1 367 1 213 1 60 1 299 1 177 1 138 1 107 1 376 1 314 1 197 1 66 1 381 1 
249 2 73 1 367 2 213 1 60 1 299 1 138 1 132 1 107 1 376 1 314 1 197 1 66 1 381 1 331 1 
249 1 374 1 367 1 369 1 61 1 
249 2 205 1 66 1 367 2 213 1 369 1 61 1 220 1 
249 1 367 1 61 1 
249 1 73 1 367 1 369 1 60 1 23 1 132 1 376 1 13 1 197 1 171 1 381 1 320 1 331 1 
213 1 
249 2 205 1 66 1 367 2 213 1 369 1 147 1 61 1 
249 5 221 1 45 1 128 1 367 5 213 1 33 1 369 2 240 2 61 2 339 2 156 1 354 1 108 1 92 1 205 1 66 1 96 2 382 1 
120 1 58 1 
174 1 29 1 73 1 60 2 79 1 120 1 132 1 376 1 197 2 381 2 331 1 
318 1 224 1 
67 1 307 1 236 1 334 1 309 1 190 1 60 1 120 1 158 1 289 1 182 1 194 1 261 1 83 1 381 1 219 1 
67 1 307 1 236 1 73 1 334 1 309 1 190 1 60 2 224 1 256 1 24 1 158 1 289 1 194 1 182 1 197 1 83 1 219 1 381 2 331 1 
120 1 132 1 256 1 73 3 197 3 60 3 381 3 331 3 
376 1 73 1 197 1 60 1 381 1 320 1 331 1 
29 1 73 1 60 1 79 1 132 1 376 1 197 1 381 1 331 1 
307 1 235 1 236 1 73 3 187 1 361 1 188 1 334 1 367 1 309 1 190 1 60 4 79 1 132 2 107 1 289 1 194 1 314 1 197 3 83 1 171 1 219 1 249 1 67 1 350 1 87 1 299 1 324 1 201 1 138 1 120 1 157 1 256 1 24 1 376 1 158 1 182 1 260 2 142 1 26 1 381 4 232 1 330 1 331 3 
120 1 256 1 73 1 333 1 197 2 292 1 60 2 381 2 331 1 
249 1 282 1 73 3 187 1 367 1 213 1 60 3 299 1 79 1 138 1 132 1 256 2 107 1 376 1 24 1 314 1 197 3 381 3 331 3 
73 2 60 2 37 1 79 1 224 1 256 1 132 1 197 2 381 2 331 2 
67 1 307 1 236 1 334 1 309 1 190 1 60 1 120 1 158 1 289 1 182 1 194 1 83 1 381 1 219 1 
67 1 236 1 334 1 309 1 60 1 120 1 106 1 158 1 289 1 182 1 194 1 151 1 83 1 381 1 219 1 
188 2 363 1 101 1 102 2 37 2 192 1 342 1 316 1 14 1 318 2 250 1 350 1 114 1 324 1 201 4 224 2 157 1 257 1 260 2 142 1 233 1 232 1 330 1 360 1 
125 1 376 1 73 1 197 1 299 1 60 1 381 1 331 1 
73 4 272 1 333 1 365 1 60 5 79 1 120 1 256 2 132 1 24 1 197 5 292 1 381 5 331 4 
125 1 376 1 73 2 197 2 60 2 381 2 320 1 331 2 
180 1 237 1 
180 1 237 1 
52 1 337 1 
52 1 337 1 
52 1 337 1 
373 1 180 1 237 1 
373 1 180 1 237 1 
180 1 237 1 55 1 
325 1 180 2 52 1 364 1 237 2 337 1 
373 1 180 1 237 1 
180 1 237 1 110 1 
180 1 237 1 110 1 
180 1 237 1 110 1 
199 1 249 2 263 1 44 1 222 2 237 2 367 2 213 1 167 1 241 1 338 3 255 2 325 1 12 2 180 2 326 2 228 1 328 2 262 1 
73 2 237 1 367 1 7 1 60 2 241 1 338 1 370 1 12 1 39 1 197 2 43 1 249 1 222 1 255 1 120 1 180 1 259 1 225 1 139 1 328 1 55 1 381 2 331 2 
301 1 86 1 304 1 
301 1 362 1 304 1 
86 2 301 3 1 1 362 1 176 1 212 1 
86 1 301 2 1 1 113 1 362 1 176 1 
86 1 301 2 1 2 362 1 176 1 
59 1 367 5 101 1 213 2 265 1 284 1 369 4 240 1 61 1 370 1 339 1 39 1 342 1 66 1 249 5 221 1 155 3 276 1 51 1 203 2 181 1 92 3 225 1 205 1 378 2 141 1 207 2 96 1 27 1 233 1 382 2 360 1 
128 1 367 9 101 3 213 5 265 2 284 1 369 7 61 6 240 2 339 2 342 3 66 1 148 1 293 1 19 1 249 9 221 1 374 5 116 1 323 5 155 9 89 1 276 3 51 3 203 6 181 2 225 4 92 8 205 1 207 6 96 2 359 1 233 3 382 6 360 3 
128 1 367 3 101 1 213 3 265 1 369 2 240 1 339 1 342 1 66 1 249 3 155 4 276 1 51 2 181 1 203 2 92 3 225 1 378 1 141 1 207 2 96 1 27 1 233 1 360 1 382 2 
128 1 367 4 101 2 213 4 265 1 369 3 240 1 339 1 342 2 66 1 293 1 19 1 249 4 155 7 276 2 51 3 203 4 181 1 92 5 225 2 378 2 141 1 207 4 96 1 27 1 359 1 233 2 360 2 382 4 
67 1 38 1 58 1 
67 1 223 1 
243 1 
67 1 194 1 
67 3 38 2 194 1 327 1 117 1 83 1 
67 1 194 1 83 1 
67 1 184 1 
30 1 297 1 75 1 188 3 114 3 363 2 251 1 164 1 101 1 119 1 102 4 201 7 121 1 342 1 269 1 173 2 123 1 
30 1 297 1 75 1 188 3 114 3 363 2 251 1 164 1 101 1 119 1 102 4 201 7 121 1 342 1 269 1 173 2 123 1 
30 1 297 1 75 1 188 3 114 3 363 2 251 1 164 1 101 1 119 1 102 4 201 7 121 1 342 1 269 1 356 1 173 2 123 1 
30 1 75 2 188 15 363 5 164 2 283 1 101 4 238 1 102 16 269 2 342 4 172 3 173 3 133 1 297 1 251 1 350 1 114 10 47 1 119 5 201 31 121 2 276 3 278 1 260 2 357 4 279 1 142 1 231 1 233 3 232 1 123 1 330 1 360 3 
75 1 188 4 363 3 164 1 101 1 102 5 342 1 269 1 371 1 41 1 173 2 297 1 350 2 114 4 251 1 119 1 201 9 121 1 260 4 279 1 142 2 232 2 330 2 123 1 
234 1 236 1 362 1 309 1 8 1 335 1 166 1 285 1 36 1 311 1 105 1 289 1 64 1 216 1 40 1 82 1 84 1 219 1 319 1 86 1 21 2 352 1 301 2 158 1 375 1 377 2 304 1 53 1 305 1 212 1 
234 1 236 1 362 1 309 1 8 1 335 1 166 1 285 1 311 1 289 1 64 1 216 1 40 1 82 1 317 1 84 2 219 1 319 1 86 1 135 1 21 3 352 1 301 2 158 1 375 1 377 3 304 1 53 1 209 1 212 1 
86 1 234 1 236 1 362 1 21 2 309 1 8 1 335 1 285 1 311 1 301 2 158 1 289 1 377 2 216 1 40 1 304 1 82 1 53 1 317 1 84 2 219 1 209 1 319 1 212 1 
72 1 67 1 135 1 236 1 334 1 21 1 309 1 335 2 352 1 336 1 158 1 289 1 194 1 183 1 64 1 377 1 216 2 65 1 53 2 82 2 230 1 219 1 306 1 
236 1 362 1 309 1 8 1 335 1 166 1 105 1 289 1 64 1 216 1 40 1 82 1 219 1 319 1 86 1 21 1 352 1 301 2 158 1 375 1 377 1 304 1 53 1 305 1 209 1 212 1 
252 1 
236 1 333 1 334 2 60 1 239 2 61 6 240 1 191 2 339 1 107 1 289 2 193 1 194 1 197 1 66 1 149 2 345 2 17 1 247 1 346 1 347 1 249 5 67 1 299 1 155 2 303 1 158 2 205 3 124 1 28 2 367 5 309 2 264 1 213 2 77 1 78 1 215 2 314 1 219 1 221 1 46 2 49 1 177 1 138 1 376 1 51 2 181 1 183 1 92 2 94 1 230 1 185 4 96 1 381 1 382 2 
333 1 264 1 367 3 60 1 147 1 61 2 191 1 107 1 193 1 314 1 197 1 346 1 247 1 249 3 299 1 138 1 177 1 376 1 205 1 94 1 185 2 381 1 
28 1 333 1 264 1 367 3 213 1 60 1 147 1 61 1 107 1 193 1 314 1 197 1 66 1 346 1 247 1 249 3 299 1 138 1 177 1 376 1 205 1 94 1 185 3 381 1 
28 1 333 1 264 1 367 3 213 1 60 1 147 1 61 2 191 1 107 1 193 1 314 1 197 1 66 1 346 1 247 1 249 3 46 1 299 1 138 1 177 1 376 1 205 1 94 1 185 3 381 1 
333 1 60 1 147 1 61 7 240 1 239 2 191 4 339 1 107 1 193 1 341 1 197 1 66 5 149 2 345 2 294 1 247 1 346 1 249 5 299 1 205 3 208 1 161 1 28 4 162 1 367 5 264 1 213 5 77 1 215 2 314 1 221 1 46 4 49 1 138 1 177 1 376 1 51 2 92 1 94 1 185 6 96 1 381 1 382 1 
333 1 60 1 240 1 239 2 61 4 191 2 339 1 107 1 193 1 197 1 66 1 149 2 345 2 247 1 346 1 249 4 299 1 155 2 205 2 124 1 28 2 367 4 264 1 77 1 213 2 215 2 314 1 221 1 46 2 49 1 138 1 177 1 376 1 51 2 92 1 94 1 185 4 96 1 381 1 382 1 
28 2 162 1 333 1 264 1 367 4 213 1 77 1 60 1 61 4 239 2 240 1 191 2 339 1 215 2 107 1 193 1 341 1 314 1 197 1 66 1 149 2 345 2 294 1 346 1 247 1 249 4 221 1 46 2 299 1 49 1 138 1 177 1 376 1 51 2 92 1 205 2 94 1 185 4 96 1 381 1 382 1 
28 2 162 1 333 1 264 1 367 4 213 1 77 1 60 1 61 4 239 2 240 1 191 2 339 1 215 2 107 1 193 1 341 1 314 1 197 1 66 1 149 2 345 2 294 1 346 1 247 1 249 4 221 1 46 2 299 1 49 1 138 1 177 1 376 1 51 2 92 1 205 2 94 1 185 4 96 1 381 1 382 1 
56 2 28 2 333 1 264 1 367 4 213 1 60 1 61 4 239 2 240 1 191 2 339 1 107 1 193 1 314 1 197 1 66 1 149 2 15 1 294 1 346 1 247 1 249 4 221 1 46 2 136 1 299 1 155 2 49 1 138 1 177 1 376 1 92 1 140 1 205 2 94 1 185 4 96 1 381 1 211 2 382 1 
28 3 162 1 333 1 264 1 367 4 213 1 77 1 60 1 239 2 240 1 61 5 191 3 339 1 215 2 107 1 341 1 193 1 314 1 197 1 66 1 149 2 345 2 294 1 346 1 247 1 249 4 221 1 46 3 299 1 49 1 138 1 177 1 376 1 51 2 92 1 205 2 94 1 185 5 161 1 96 1 381 1 382 1 
28 3 162 1 333 1 264 1 367 4 213 1 77 1 60 1 239 2 240 1 61 5 191 3 339 1 215 2 107 1 341 1 193 1 314 1 197 1 66 1 149 2 345 2 294 1 346 1 247 1 249 4 221 1 46 3 299 1 49 1 138 1 177 1 376 1 51 2 92 1 205 2 94 1 185 5 161 1 96 1 381 1 382 1 
56 2 333 1 60 1 240 1 239 2 61 4 191 2 339 1 107 1 193 1 197 1 66 1 149 2 15 1 247 1 346 1 249 4 299 1 155 2 205 2 211 2 124 1 28 2 367 4 264 1 213 1 314 1 221 1 46 2 49 1 138 1 177 1 376 1 92 1 94 1 185 4 96 1 381 1 382 1 
363 2 188 3 58 1 164 1 101 1 102 3 37 1 269 1 342 1 14 1 318 1 173 1 297 1 251 1 350 1 114 2 324 1 224 1 201 6 157 1 120 2 260 2 142 1 232 1 123 1 330 1 
363 1 188 5 129 1 101 1 102 6 9 1 37 3 342 2 172 2 318 8 133 1 271 1 174 1 114 2 350 2 119 1 324 2 201 11 224 8 120 1 157 1 276 2 376 1 260 4 357 2 142 2 160 1 26 1 232 2 233 1 330 2 186 1 360 2 
144 1 307 1 236 1 57 1 73 1 188 1 334 1 309 1 190 1 60 2 102 1 37 1 289 1 194 1 197 1 83 1 219 1 18 1 67 1 296 1 350 1 324 1 201 2 120 1 157 1 256 1 158 1 24 1 182 1 261 1 260 2 142 1 26 1 381 2 232 1 186 1 331 1 330 1 
144 1 236 2 188 10 334 1 6 2 101 3 190 2 60 3 102 10 288 1 289 1 194 2 197 1 342 3 67 2 297 1 251 1 350 3 114 6 118 2 119 2 201 20 120 2 157 3 256 1 158 1 24 1 260 6 70 2 26 1 123 1 360 2 307 2 73 1 363 4 164 1 309 1 37 7 269 1 170 2 83 2 219 2 318 7 173 1 87 2 324 3 224 7 276 2 182 2 142 3 381 3 281 1 232 3 233 2 330 3 331 1 186 1 
144 1 73 1 236 2 188 1 334 2 309 8 145 1 60 1 102 1 36 1 289 8 194 2 197 1 14 1 219 2 111 1 67 3 351 1 350 2 154 2 200 1 324 2 201 2 157 2 256 1 158 7 183 1 260 4 142 2 230 1 380 1 26 1 209 1 98 1 381 1 232 2 99 1 331 1 330 2 
73 1 363 1 188 2 101 1 34 1 60 1 102 1 37 1 79 1 132 1 197 1 342 1 318 1 114 1 350 1 324 1 224 1 201 3 157 1 276 1 260 2 142 1 381 1 232 1 233 1 330 1 186 1 331 1 360 1 
250 1 114 1 350 1 119 1 102 2 37 1 324 1 224 1 201 2 157 1 260 2 342 1 142 1 14 1 318 1 232 1 330 1 360 1 
114 1 363 1 350 1 188 2 101 1 37 1 324 1 224 1 201 2 157 1 260 2 142 1 14 1 316 1 318 1 232 1 233 1 330 1 
188 2 363 1 101 1 102 2 37 2 342 1 14 1 318 2 350 1 114 2 119 1 324 1 201 4 224 2 157 1 276 1 260 2 142 1 232 1 233 1 360 1 330 1 
250 1 114 1 350 1 119 1 102 2 37 1 324 1 224 1 201 2 157 1 260 2 342 1 142 1 318 1 111 1 232 1 330 1 360 1 
114 1 363 1 350 1 188 2 101 1 37 1 324 1 224 1 201 2 157 1 260 2 142 1 316 1 318 1 111 1 232 1 233 1 330 1 
188 2 363 1 101 1 102 2 37 2 342 1 111 1 318 2 350 1 114 1 324 1 201 4 224 2 157 1 276 1 260 2 142 1 232 1 233 1 360 1 330 1 
188 2 363 1 101 1 102 2 37 2 342 1 318 2 350 1 114 2 119 1 324 1 201 4 224 2 157 1 276 1 260 2 142 1 232 1 233 1 360 1 330 1 
144 1 307 1 236 1 188 1 334 1 309 1 190 1 60 1 102 1 289 1 194 1 83 1 219 1 67 1 350 1 87 1 324 1 201 2 120 1 157 1 158 1 182 1 260 2 142 1 26 1 381 1 232 1 330 1 
144 1 236 1 188 1 334 1 309 1 60 1 102 1 106 1 289 1 194 1 83 1 151 1 219 1 67 1 350 1 274 1 324 1 201 2 120 1 157 1 158 1 182 1 260 2 142 1 26 1 381 1 232 1 330 1 
188 2 363 1 101 1 102 2 37 2 342 1 318 2 350 1 114 2 119 1 324 1 201 4 224 2 157 1 276 1 260 2 142 1 232 1 233 1 360 1 330 1 186 1 
307 1 236 1 363 1 188 2 309 1 101 1 190 1 60 1 102 2 37 2 36 1 289 1 194 1 342 1 83 1 318 2 219 1 67 1 114 2 350 1 87 1 119 1 324 1 224 2 201 4 157 1 276 1 158 1 182 1 260 2 70 1 142 1 381 1 233 1 232 1 360 1 330 1 
73 1 188 1 101 1 60 1 102 2 37 1 79 1 132 1 197 1 342 1 318 1 114 1 350 1 119 1 324 1 201 3 224 1 157 1 276 1 260 2 142 1 97 1 381 1 233 1 232 1 330 1 186 1 331 1 360 1 
0 1 363 3 188 10 189 1 101 3 102 9 80 1 63 1 342 3 291 1 41 1 172 1 133 1 115 1 350 2 114 6 298 2 47 1 119 3 201 19 202 1 276 3 260 4 357 2 142 2 232 2 233 3 71 2 330 2 360 3 
363 2 188 12 189 1 101 2 102 14 80 2 63 2 290 1 195 1 342 3 291 1 81 1 41 1 172 2 114 4 350 3 322 1 298 4 47 2 68 1 119 2 201 26 202 1 276 3 355 1 260 6 279 2 357 2 142 3 232 3 233 2 71 1 330 3 360 3 
0 1 143 1 363 4 188 21 189 1 164 1 101 5 102 20 80 1 63 2 290 1 269 1 195 1 342 5 81 1 291 1 41 1 172 3 173 1 133 1 297 1 251 1 350 3 114 8 322 1 298 4 47 3 68 1 119 4 201 41 202 1 276 4 355 1 260 6 279 1 357 4 142 3 232 3 233 4 71 1 123 1 330 3 360 4 
0 1 143 1 363 4 188 18 189 1 164 1 101 4 102 20 80 1 63 2 290 1 269 1 195 1 342 5 81 1 291 1 41 1 172 3 173 1 133 1 297 1 251 1 350 4 114 7 322 1 298 4 47 3 68 1 119 3 201 38 202 1 276 4 355 1 260 8 279 2 357 4 142 4 232 4 233 3 71 1 123 1 330 4 360 4 
363 7 188 25 129 2 189 1 164 1 101 8 102 27 80 1 63 1 290 1 269 1 195 1 342 8 81 1 291 1 41 1 172 4 173 1 133 2 297 1 251 1 350 2 114 14 322 1 298 4 47 2 68 1 119 7 201 52 202 1 276 7 355 1 260 4 279 1 357 4 142 2 232 2 233 7 71 1 123 1 330 2 360 7 
325 1 180 1 12 1 44 1 222 1 237 1 228 1 95 1 328 1 255 1 
55 1 43 1 
180 1 12 1 3 1 222 1 237 1 328 1 210 1 131 1 255 1 
199 1 249 1 44 1 222 1 237 1 367 1 213 1 167 1 241 1 338 2 255 1 325 1 12 1 180 1 326 1 228 1 328 1 262 1 
199 1 249 1 44 1 222 1 237 1 367 1 213 1 167 1 241 1 338 2 255 1 325 1 12 1 180 1 326 1 228 1 328 1 262 1 
199 1 249 1 44 1 222 1 237 1 367 1 213 1 167 1 241 1 338 2 255 1 325 1 12 1 180 1 326 1 228 1 328 1 262 1 
373 1 364 1 267 1 
373 1 364 1 267 1 
332 1 110 1 
332 1 364 1 110 1 
139 1 7 1 
73 2 237 1 367 1 7 1 60 2 167 1 369 1 338 1 370 1 12 1 62 1 39 1 197 2 43 1 249 1 222 1 255 1 120 1 180 1 326 1 259 1 225 1 139 1 328 1 55 1 381 2 331 2 
373 1 267 1 
332 1 364 1 110 1 
144 1 236 1 163 1 188 1 309 2 60 2 102 1 130 1 289 2 194 1 197 2 245 1 219 1 67 1 350 1 154 2 200 1 324 1 201 2 157 1 158 2 204 1 227 1 260 2 142 1 380 1 26 1 381 2 232 1 186 1 330 1 
86 1 236 1 31 1 362 1 309 2 321 1 8 1 146 1 166 1 36 1 301 2 158 2 289 2 40 1 304 1 53 1 219 1 209 1 212 1 
86 1 236 1 31 1 362 1 5 1 309 1 8 1 166 1 301 2 158 1 289 1 40 1 304 1 53 1 209 1 219 1 212 1 
67 1 236 1 334 1 309 1 321 1 300 1 158 1 289 1 194 1 183 1 65 1 53 1 230 1 219 1 
86 1 236 1 31 1 362 1 309 1 321 1 8 1 146 1 166 1 301 2 158 1 289 1 40 1 304 1 53 1 219 1 209 1 212 1 
150 1 
354 1 45 1 92 1 58 1 66 1 213 1 382 1 
367 1 77 1 213 2 240 1 61 1 339 1 215 1 66 1 345 1 249 1 221 1 155 1 51 1 92 1 205 1 96 1 382 1 
236 3 334 1 6 2 101 2 104 2 240 4 61 5 339 4 340 1 107 2 289 3 194 3 342 2 66 2 249 5 67 10 153 1 155 12 303 1 354 1 258 1 158 3 203 6 205 3 207 6 358 2 360 2 126 2 308 2 309 3 367 5 213 8 35 2 36 1 38 2 313 2 83 3 219 4 134 1 221 4 45 1 223 3 179 2 276 2 181 2 51 6 92 9 327 1 93 1 54 2 184 2 96 4 233 2 382 8 
367 1 213 5 101 2 35 2 103 1 61 1 240 2 339 2 313 1 290 1 195 1 342 2 81 1 66 2 344 1 172 1 249 1 221 2 322 1 47 1 68 1 155 6 303 1 276 2 181 1 203 5 51 3 92 8 205 1 357 1 207 5 96 2 233 2 382 5 360 2 
73 1 164 1 367 1 101 1 60 1 35 2 240 1 339 1 132 1 13 1 341 1 313 1 269 1 342 2 197 1 217 1 171 1 320 1 249 1 221 1 297 1 23 1 376 1 92 2 96 1 381 1 382 2 331 1 
221 1 45 1 213 1 240 1 339 1 354 1 92 1 66 1 96 1 382 1 
6 1 213 5 101 2 35 2 155 10 276 2 203 5 51 5 313 1 92 5 342 2 207 5 233 2 360 2 382 5 
249 1 205 1 66 1 367 1 213 1 61 1 
236 1 128 1 334 2 309 4 367 3 240 2 61 4 339 2 340 2 289 4 194 1 246 1 219 1 17 1 347 1 249 3 67 1 221 1 178 1 303 2 258 1 158 4 181 2 92 2 183 1 205 2 230 1 96 2 382 2 
235 1 307 1 73 2 236 1 188 1 334 1 309 1 190 1 60 3 132 2 289 1 194 1 197 2 171 1 83 1 219 1 67 1 350 1 87 1 324 1 201 1 120 1 157 1 158 1 182 1 260 2 142 1 26 1 381 3 232 1 330 1 331 2 
221 1 213 4 240 1 155 4 339 1 303 1 51 2 203 2 181 1 92 1 66 2 207 2 96 1 173 1 382 2 
328 1 88 1 255 1 
328 1 88 1 255 1 
44 1 139 1 76 1 328 1 255 1 
328 1 88 1 255 1 
169 1 328 1 255 1 
169 1 328 1 255 1 
169 1 328 1 255 1 
328 1 255 1 
180 1 237 1 
297 1 188 4 114 3 363 2 350 2 251 1 164 1 101 1 102 4 119 1 201 8 342 1 260 4 269 1 279 1 142 2 173 1 232 2 330 2 123 1 
297 1 188 3 251 1 363 2 114 2 58 1 164 1 101 1 102 3 201 6 269 1 342 1 173 1 123 1 
363 1 188 2 114 2 350 1 101 1 102 2 119 1 242 1 201 4 276 1 260 2 342 1 142 1 233 1 232 1 330 1 360 1 
363 1 188 4 114 2 47 1 101 1 102 3 119 1 201 7 276 1 342 1 357 2 172 1 233 1 133 1 360 1 
100 1 188 12 363 5 129 1 164 2 101 3 102 11 269 2 342 3 172 2 173 1 133 1 271 1 297 1 251 1 114 9 350 2 119 4 201 23 276 2 260 4 357 2 279 2 142 2 233 2 232 2 123 1 360 2 330 2 
188 1 357 1 201 1 
172 1 102 1 201 1 
350 1 188 3 114 3 363 2 6 1 101 1 102 3 119 1 242 1 201 6 276 1 260 2 342 1 142 1 232 1 233 1 330 1 360 1 
188 6 363 1 101 2 102 6 290 1 195 1 342 2 81 1 172 1 41 1 350 1 114 2 47 1 322 1 68 1 119 1 201 12 276 2 260 2 357 1 142 1 232 1 233 2 330 1 360 2 
297 1 188 3 363 1 114 2 164 1 101 1 102 3 119 1 201 6 342 1 269 1 
100 1 114 2 363 1 251 1 188 2 350 1 164 1 102 1 119 1 201 3 269 1 260 2 279 1 142 1 232 1 330 1 123 1 
297 1 350 1 363 3 114 5 188 5 164 2 101 2 119 2 102 5 201 10 260 2 269 2 342 2 217 1 142 1 41 1 232 1 330 1 
350 1 114 1 102 2 119 1 201 2 260 2 342 1 142 1 41 1 232 1 330 1 360 1 
363 1 188 2 114 2 350 1 101 1 102 2 119 1 201 4 276 1 260 2 342 1 142 1 41 1 233 1 232 1 330 1 360 1 
0 1 100 1 188 2 350 3 363 1 114 2 164 1 119 1 102 1 201 3 260 6 269 1 279 1 142 3 41 1 232 3 330 3 
0 1 100 1 188 18 363 7 164 3 283 1 101 5 238 1 102 16 242 1 269 3 342 5 41 1 172 3 173 1 133 1 297 2 251 1 350 5 114 12 47 1 119 5 201 34 276 3 278 1 260 10 279 2 357 4 142 5 232 5 233 3 123 1 330 5 360 3 
188 4 363 2 164 1 101 1 102 4 342 1 269 1 81 1 172 1 41 1 173 1 297 1 350 1 251 1 114 2 47 1 201 8 260 2 357 1 142 1 232 1 330 1 123 1 
363 2 188 5 164 1 101 1 102 6 242 1 269 1 342 2 81 1 41 1 172 1 173 1 133 1 297 1 251 1 350 2 114 3 47 1 119 1 201 11 276 1 260 4 357 2 142 2 232 2 123 1 330 2 360 1 
188 10 363 3 164 1 101 3 102 9 242 1 290 1 269 1 195 1 342 3 81 1 172 1 41 1 173 1 297 1 251 1 350 3 114 4 47 1 322 1 68 1 119 1 201 19 276 2 260 6 357 1 279 1 142 3 232 3 233 2 123 1 330 3 360 2 
188 7 363 3 164 1 101 2 102 10 242 1 290 1 269 1 195 1 342 3 81 1 172 1 41 1 173 1 297 1 251 1 350 3 114 5 47 1 322 1 68 1 119 2 201 17 276 2 260 6 279 1 357 1 142 3 232 3 233 1 123 1 330 3 360 2 
188 4 363 2 164 1 101 1 102 4 342 1 269 1 81 1 172 1 41 1 173 1 297 1 350 1 251 1 114 2 47 1 201 8 260 2 357 1 142 1 232 1 330 1 123 1 
188 6 363 1 101 2 102 6 290 1 195 1 342 2 81 1 172 1 41 1 350 1 114 2 47 1 322 1 68 1 119 1 201 12 276 2 260 2 357 1 142 1 232 1 233 2 330 1 360 2 
188 8 363 3 164 1 101 2 102 10 242 1 290 1 269 1 195 1 342 3 81 1 41 1 172 1 173 1 297 1 251 1 350 4 114 5 322 1 47 1 68 1 119 2 201 18 276 2 260 8 357 1 279 2 142 4 232 4 233 1 123 1 330 4 360 2 
0 1 188 7 363 3 101 2 102 9 290 1 195 1 342 3 81 1 41 1 172 1 350 4 114 6 322 1 47 1 68 1 119 3 201 16 276 3 260 8 357 1 279 2 142 4 232 4 233 2 330 4 360 3 
297 1 188 4 251 2 363 3 114 6 164 3 101 1 119 3 102 3 201 7 269 3 342 1 123 1 
0 1 188 8 363 3 164 1 101 2 102 10 290 1 269 1 195 1 342 3 81 1 41 1 172 1 173 1 297 1 251 1 350 4 114 4 322 1 47 1 68 1 119 1 201 18 276 2 260 8 357 1 279 2 142 4 232 4 233 1 123 1 330 4 360 2 
120 1 333 1 197 1 292 1 60 1 381 1 254 1 
152 1 2 1 127 1 333 1 60 1 254 1 120 1 197 1 198 1 292 1 280 1 381 1 
67 1 236 1 289 1 158 1 194 1 183 1 58 1 334 1 309 1 230 1 219 1 
67 1 307 1 73 1 236 1 334 1 309 1 60 2 120 1 256 1 158 1 289 1 194 1 182 1 197 1 83 1 219 1 381 2 331 1 
67 3 307 1 126 1 73 1 236 1 309 1 299 1 60 2 340 1 120 1 256 1 376 1 158 1 289 1 314 1 194 2 182 1 197 2 184 1 83 2 219 1 381 2 331 2 
236 1 73 1 126 1 309 2 60 2 340 1 106 1 289 2 194 2 314 1 197 2 83 2 219 1 67 3 299 1 120 1 256 1 91 1 158 2 376 1 182 1 184 1 381 2 331 2 
236 1 126 1 334 1 309 3 367 2 213 1 61 1 340 1 107 1 289 3 38 1 194 1 66 1 83 1 219 1 249 2 67 4 223 1 175 1 353 1 91 1 158 3 184 1 
249 2 67 4 126 1 236 1 334 1 223 1 367 2 309 3 213 1 61 1 340 1 107 1 91 1 158 3 289 3 38 1 194 1 66 1 54 1 184 1 83 1 219 1 
236 1 289 1 158 1 351 1 309 1 219 1 
67 3 236 2 351 1 334 2 154 1 309 7 200 1 145 1 36 1 302 1 158 6 289 7 109 1 327 1 194 2 83 1 209 1 98 1 219 3 99 1 329 1 
236 1 188 3 190 1 101 1 60 2 102 3 289 1 194 1 197 1 342 1 67 1 297 1 350 2 251 1 114 2 118 1 201 6 157 2 120 2 256 1 158 1 260 4 70 1 123 1 307 1 73 1 163 1 363 2 309 1 164 1 37 1 36 1 269 1 83 1 219 1 318 1 173 1 87 1 324 2 224 1 182 1 142 2 381 2 232 2 330 2 331 1 186 1 
334 1 308 1 309 1 367 3 213 1 369 1 240 2 104 1 61 2 339 2 107 1 289 1 38 1 66 1 249 3 221 2 67 2 45 1 223 1 179 1 354 1 158 1 258 1 92 1 205 1 54 1 96 2 382 1 
134 1 67 2 236 1 351 1 309 2 36 1 158 2 289 2 38 1 327 1 194 1 83 1 219 2 
67 1 348 1 236 1 334 1 309 4 36 1 91 1 158 4 289 4 183 1 194 1 230 1 219 1 
67 1 236 1 309 2 69 1 340 1 158 2 289 2 109 1 194 1 122 1 83 1 219 2 295 1 329 1 
301 1 236 1 289 1 158 1 362 1 334 1 40 1 309 1 304 1 219 1 
67 1 236 1 289 2 158 2 194 1 204 1 309 2 200 1 219 1 209 1 36 1 
67 3 348 1 236 2 334 1 309 5 200 1 36 1 340 1 158 4 289 5 183 1 194 2 230 1 219 2 98 1 99 1 
67 3 348 1 236 2 334 1 309 5 200 1 36 1 340 1 158 4 289 5 183 1 194 2 159 1 230 1 219 2 98 1 
67 1 73 1 236 1 334 1 309 1 60 2 120 1 106 1 256 1 158 1 289 1 194 1 182 1 197 1 83 1 219 1 381 2 331 1 
67 1 236 1 309 1 340 1 302 1 158 1 289 1 109 1 327 1 194 1 83 1 219 2 329 1 
287 1 120 1 11 1 218 1 22 1 
249 2 187 1 367 2 213 1 299 1 369 1 22 2 10 1 138 1 287 2 120 1 11 2 107 1 376 1 314 1 66 1 379 1 218 1 372 1 
60 1 22 1 130 1 287 1 227 1 197 1 218 1 245 1 381 1 
379 1 218 1 10 1 
234 1 58 1 285 1 311 1 
234 1 377 1 64 1 21 1 352 1 285 1 311 1 
21 1 82 1 335 1 
234 1 112 1 377 3 64 1 196 2 32 1 21 3 214 1 352 1 305 1 285 1 311 1 
234 1 377 2 64 1 21 2 42 1 352 1 285 1 84 1 311 1 
301 1 86 1 377 1 64 1 21 1 304 1 273 1 352 1 305 1 270 1 311 1 
234 1 377 1 64 1 21 1 352 1 305 1 311 1 
234 2 377 1 64 1 21 1 352 1 305 1 285 1 
234 1 21 2 165 1 352 2 311 1 64 2 377 2 226 1 305 1 85 1 
234 1 21 3 273 1 352 1 285 1 311 2 50 1 90 1 64 1 377 3 206 1 305 1 84 2 
86 1 234 1 362 1 21 2 352 1 168 1 285 1 311 1 301 2 64 1 377 2 304 1 305 1 84 1 212 1 
234 1 21 4 273 1 352 2 285 1 311 2 268 1 90 1 64 2 377 4 305 1 42 1 84 2 
234 1 377 1 64 1 21 1 352 1 305 1 285 1 311 1 
112 1 234 2 32 1 21 4 368 1 273 1 352 1 285 2 311 3 90 1 377 4 64 1 196 1 84 2 
234 1 377 2 64 1 366 1 21 2 48 1 253 1 352 1 305 1 285 1 84 1 311 1 
112 1 234 1 32 2 21 3 352 1 285 1 275 1 311 1 64 1 377 3 196 2 305 1 
74 1 25 2 315 1 311 2 
377 1 64 1 21 1 352 1 305 1 286 1 
50 1 234 1 377 2 64 1 21 2 352 1 305 1 285 1 84 1 311 1 
277 1 
234 1 377 1 64 1 21 1 352 1 305 1 285 1 311 1 
234 1 21 3 352 1 285 1 311 1 50 1 64 1 377 3 196 1 305 1 84 1 
90 1 368 1 273 1 311 1 
234 1 311 1 

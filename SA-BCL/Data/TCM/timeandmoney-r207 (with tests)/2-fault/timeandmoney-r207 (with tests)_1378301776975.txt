#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 338 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval; | RETURN | 5180 | return null
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator; | STATEMENT | 2293 | stmt -> ;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
53 1 308 2 28 2 108 1 126 2 259 5 33 1 328 1 260 2 244 1 311 9 352 1 312 2 265 2 333 1 42 1 94 1 95 6 68 1 269 1 270 1 72 4 100 9 321 2 101 1 171 1 221 3 323 1 
53 1 308 2 28 2 108 1 126 2 259 5 33 1 328 1 260 2 244 1 311 9 352 1 312 2 265 2 333 1 42 1 94 1 95 6 68 1 269 1 270 1 72 4 100 9 101 1 321 2 171 1 221 3 323 1 
53 1 308 2 28 2 108 1 126 2 259 6 33 1 328 1 260 2 244 1 311 10 352 1 312 2 265 2 333 1 42 1 94 1 95 7 68 1 269 1 270 1 72 5 100 10 101 1 321 2 171 1 221 4 323 1 
53 1 308 2 28 2 108 1 126 2 259 4 33 1 328 1 260 2 244 1 311 7 352 1 312 2 265 2 333 1 94 1 95 4 68 1 269 1 270 1 72 3 100 7 101 1 321 1 171 1 221 2 323 1 
308 1 28 1 108 1 126 1 259 3 72 2 33 1 260 1 244 1 311 4 100 4 101 1 321 2 265 1 333 1 221 1 42 1 95 3 
308 1 269 1 270 1 259 1 108 1 126 1 30 1 73 1 347 1 33 1 260 1 311 2 100 2 101 1 265 1 312 1 
68 1 308 2 108 1 259 2 72 1 33 1 311 3 100 3 101 1 265 2 312 1 221 1 95 1 
53 1 308 2 28 1 108 1 259 5 126 1 33 1 260 1 244 1 311 9 312 1 265 2 333 1 95 7 42 1 68 1 116 1 72 4 100 9 101 1 321 2 221 3 323 1 223 1 
53 1 308 2 28 1 108 1 259 5 126 1 33 1 260 1 244 1 311 9 312 1 265 2 333 1 95 7 42 1 68 1 116 1 72 4 100 9 101 1 321 2 221 3 323 1 223 1 
373 1 217 1 179 1 
249 2 24 1 373 1 
329 2 277 2 342 1 290 2 113 2 348 2 351 1 257 2 
342 1 125 1 225 1 226 1 288 2 3 1 227 1 349 1 348 3 35 1 351 1 159 1 329 3 290 2 113 2 161 1 354 2 247 2 360 1 188 1 271 1 192 1 43 1 367 1 299 1 251 1 233 2 320 1 234 1 195 2 277 2 143 1 282 1 174 1 198 1 199 1 257 2 
329 1 22 1 96 1 277 1 342 1 290 1 113 1 155 1 348 1 257 1 
238 1 294 1 54 1 20 1 317 1 348 1 179 1 329 1 131 1 89 1 22 1 330 1 290 1 373 1 
294 2 54 1 317 1 348 1 179 1 329 1 131 1 89 1 22 1 330 2 277 1 290 1 113 1 373 1 257 1 
187 1 294 1 201 1 330 1 235 1 
187 1 294 2 201 1 197 1 330 2 373 1 289 1 179 1 
187 1 294 1 330 1 
201 1 294 1 96 1 342 1 155 1 348 1 329 1 22 1 330 1 277 1 290 1 113 1 374 1 257 1 
373 1 
115 1 187 1 294 2 201 1 197 1 330 2 373 1 179 1 
210 1 187 2 201 2 294 5 11 2 298 1 98 1 366 1 139 2 245 1 179 1 47 1 252 1 197 1 330 5 264 2 39 1 373 1 27 1 
217 1 351 1 
211 1 29 1 348 2 351 2 329 2 277 1 290 2 113 1 257 1 
185 1 353 1 66 1 
226 1 3 1 288 1 299 1 348 1 35 1 351 1 329 1 159 1 195 1 143 1 161 1 174 1 199 1 67 1 247 1 
226 1 3 1 288 1 299 1 35 1 348 2 159 1 329 2 195 1 277 1 143 1 290 1 113 1 161 1 38 1 66 1 174 1 26 1 199 1 247 1 
329 3 277 3 290 3 113 3 26 1 348 3 351 1 257 1 
329 1 22 1 96 1 277 1 290 1 113 1 348 1 
329 1 211 1 22 1 277 1 290 1 113 1 29 1 348 1 257 1 
342 1 54 1 29 1 226 1 3 1 288 1 227 1 349 1 35 1 348 4 351 1 159 1 329 4 131 1 89 1 91 1 330 1 290 3 113 3 161 1 38 1 354 1 247 1 360 1 294 1 271 1 192 1 43 1 367 1 299 1 317 1 233 2 320 1 195 1 22 1 277 3 143 1 282 1 174 1 26 1 198 1 284 1 199 1 257 2 
329 2 238 1 267 1 277 1 290 2 113 1 26 1 348 2 351 1 
294 1 54 1 29 1 317 1 348 3 131 1 329 3 89 1 22 1 330 1 277 3 290 3 48 1 113 3 38 1 373 1 26 2 284 1 257 1 
329 2 277 2 290 2 113 2 29 1 353 1 66 1 26 1 348 2 257 1 
226 1 3 1 288 1 299 1 348 1 35 1 351 1 329 1 159 1 195 1 143 1 161 1 174 1 199 1 247 1 
18 1 226 1 3 1 288 1 299 1 348 1 35 1 351 1 329 1 159 1 195 1 161 1 174 1 307 1 247 1 
285 1 152 1 57 1 31 1 243 1 227 1 349 1 134 1 353 2 354 4 66 2 359 1 185 2 360 1 271 2 13 1 250 1 367 1 251 2 233 2 76 1 320 1 302 1 198 1 
329 1 89 1 22 1 277 1 290 1 113 1 97 1 348 1 
238 1 267 1 29 1 17 1 32 1 348 5 351 1 329 5 277 4 290 5 113 4 38 1 26 2 257 1 
329 2 22 1 96 1 277 2 290 2 113 2 97 1 348 2 
206 1 79 1 
206 1 79 1 
314 1 361 1 
314 1 361 1 
314 1 361 1 
206 1 79 1 273 1 
206 1 79 1 273 1 
206 1 79 1 273 1 
206 1 79 1 200 1 
78 1 314 1 361 1 206 2 79 2 183 1 
206 1 79 1 256 1 
206 1 79 1 256 1 
206 1 79 1 256 1 
294 2 362 1 287 1 191 2 130 3 61 1 62 2 168 1 206 2 79 2 330 2 135 2 65 1 163 2 372 1 373 1 283 1 183 1 357 2 
55 1 177 1 130 1 348 2 351 1 329 2 62 1 206 1 181 1 330 1 290 2 113 2 207 1 135 1 163 1 208 1 357 1 186 1 294 1 12 1 168 1 277 2 79 1 200 1 
28 1 126 1 260 1 
126 1 347 1 260 1 
28 2 246 1 126 3 49 1 347 1 51 1 
28 1 126 2 49 1 347 1 129 1 51 1 
28 1 126 2 49 2 347 1 51 1 
201 4 55 1 286 1 57 1 309 2 87 1 241 1 243 1 203 2 179 1 181 1 330 5 207 1 264 1 134 1 184 1 334 1 187 1 249 3 294 5 11 1 138 2 298 3 250 1 98 1 139 1 47 2 197 1 24 1 146 1 373 2 150 1 
82 1 201 7 57 3 1 1 87 2 243 3 261 1 245 1 203 6 179 1 181 4 330 9 264 2 266 1 134 3 229 5 231 1 334 3 187 6 249 9 294 9 11 2 138 6 298 8 250 3 98 1 139 2 47 6 197 1 235 5 24 3 146 2 373 5 255 1 150 1 
201 2 286 1 57 1 87 1 309 1 243 1 245 1 203 2 179 1 181 1 330 3 264 1 134 1 184 1 334 1 294 3 249 4 11 1 138 2 298 3 250 1 139 1 47 2 24 2 146 1 373 3 
82 1 201 3 286 1 57 2 87 1 309 2 243 2 261 1 203 4 245 1 179 1 181 2 330 4 264 1 266 1 134 2 184 1 334 2 249 7 294 4 11 1 138 4 298 5 250 2 139 1 47 4 24 3 146 1 373 4 
346 1 217 1 299 1 
299 1 376 1 
71 1 
159 1 299 1 
159 1 77 1 346 2 174 1 299 3 74 1 
159 1 174 1 299 1 
80 1 299 1 
341 1 296 2 271 3 13 3 274 1 243 1 158 1 178 1 251 4 75 1 193 1 102 1 302 2 280 1 134 1 354 7 106 1 
341 1 296 2 271 3 13 3 274 1 243 1 158 1 178 1 251 4 75 1 193 1 102 1 302 2 280 1 134 1 354 7 106 1 
341 1 296 2 271 3 13 3 274 1 243 1 158 1 178 1 251 4 75 1 193 1 102 1 278 1 302 2 280 1 134 1 354 7 106 1 
341 1 156 3 57 3 86 4 227 1 158 2 243 4 178 5 111 1 134 4 354 31 114 1 334 3 360 1 296 3 271 15 13 10 274 2 215 1 250 3 367 1 233 2 251 16 193 1 75 2 320 1 219 1 102 2 302 5 280 1 103 1 340 1 106 1 237 1 
341 1 84 1 243 1 227 2 158 1 178 1 180 1 134 1 354 9 360 2 296 2 271 4 13 4 274 1 367 2 233 4 251 5 75 1 320 2 102 1 302 3 280 1 103 1 106 1 
308 1 28 1 259 1 108 1 126 2 288 1 157 1 347 1 33 1 260 1 35 1 36 1 311 2 246 1 265 1 312 1 161 1 95 1 209 1 247 1 190 1 318 1 300 1 100 2 195 1 169 1 101 1 120 1 50 1 122 1 
308 1 28 1 259 1 108 1 126 2 288 1 347 1 33 1 260 1 35 1 36 1 311 3 246 1 265 1 312 1 161 1 95 2 209 1 247 1 69 1 190 1 300 1 21 1 100 3 195 1 169 1 120 1 50 1 122 1 305 1 
28 1 259 1 108 1 126 2 288 1 347 1 33 1 260 1 35 1 36 1 311 2 246 1 312 1 161 1 95 2 209 1 247 1 69 1 190 1 100 2 195 1 120 1 50 1 122 1 305 1 
308 1 2 1 3 1 288 1 327 1 299 1 35 1 21 1 311 1 36 2 159 1 100 1 195 1 23 1 161 1 312 2 120 2 265 1 145 1 172 1 324 1 247 1 209 2 
308 1 28 1 126 2 190 1 347 1 157 1 288 1 260 1 35 1 300 1 311 1 36 1 100 1 195 1 169 1 101 1 246 1 161 1 312 1 265 1 120 1 50 1 122 1 305 1 247 1 209 1 
128 1 
238 1 54 1 0 1 2 1 3 2 288 2 110 1 159 1 329 1 160 1 330 3 290 1 161 1 9 1 247 2 10 1 294 3 11 1 298 2 20 1 218 1 299 1 22 1 23 1 87 1 34 1 35 1 88 1 348 1 131 1 132 1 89 1 264 1 313 1 187 2 44 1 98 1 316 1 139 1 317 1 369 1 47 2 195 2 197 1 322 1 52 2 
115 1 187 2 238 1 294 3 54 1 44 1 20 1 34 1 317 1 88 1 348 1 131 1 329 1 89 1 197 1 22 1 330 3 290 1 322 1 355 1 9 1 52 2 
238 1 54 1 34 1 348 1 88 1 179 1 329 1 131 1 89 1 330 3 290 1 9 1 115 1 187 1 294 3 20 1 44 1 317 1 22 1 197 1 322 1 373 1 306 1 52 3 
238 1 54 1 325 1 34 1 348 1 88 1 179 1 329 1 131 1 89 1 330 3 290 1 9 1 355 1 115 1 187 2 294 3 20 1 44 1 317 1 197 1 22 1 322 1 373 1 306 1 52 3 
238 1 54 1 155 1 325 2 326 1 58 1 110 2 329 2 330 3 290 2 113 1 9 1 292 1 115 1 294 3 11 1 20 1 298 1 22 2 173 1 257 1 342 1 34 1 348 2 88 1 179 1 131 1 89 1 132 2 264 1 355 2 187 3 96 1 364 1 44 1 98 1 317 1 139 1 316 1 369 1 47 1 197 1 277 1 322 1 373 1 374 1 52 2 
238 1 54 1 34 1 88 1 348 1 110 1 329 1 131 1 132 1 89 1 330 2 290 1 264 1 9 1 313 1 294 2 11 1 298 1 20 1 44 1 98 1 316 1 139 1 317 1 369 1 47 1 22 1 322 1 52 2 
238 1 54 1 155 1 326 1 110 2 329 2 330 2 290 2 113 1 9 1 294 2 11 1 20 1 298 1 22 2 173 1 257 1 342 1 34 1 88 1 348 2 179 1 131 1 89 1 132 2 264 1 96 1 364 1 44 1 98 1 139 1 317 1 316 1 369 1 47 1 277 1 322 1 373 1 374 1 52 2 
238 1 54 1 155 1 326 1 110 2 329 2 330 2 290 2 113 1 9 1 294 2 11 1 20 1 298 1 22 2 173 1 257 1 342 1 34 1 88 1 348 2 179 1 131 1 89 1 132 2 264 1 96 1 364 1 44 1 98 1 139 1 317 1 316 1 369 1 47 1 277 1 322 1 373 1 374 1 52 2 
238 1 153 1 54 1 155 1 326 1 110 2 329 2 330 2 290 2 113 1 9 1 294 2 11 1 70 1 20 1 298 1 167 1 22 2 257 1 342 1 34 1 88 1 348 2 179 1 131 1 89 1 132 2 264 1 96 1 44 1 98 1 139 1 317 1 316 1 47 1 277 1 322 1 373 1 374 1 52 2 
238 1 54 1 155 1 325 1 326 1 58 1 110 2 329 2 330 2 290 2 113 1 9 1 294 2 11 1 20 1 298 1 22 2 173 1 306 1 257 1 342 1 34 1 88 1 348 2 179 1 131 1 89 1 132 2 264 1 355 1 187 1 96 1 364 1 44 1 98 1 317 1 139 1 316 1 369 1 47 1 277 1 322 1 373 1 374 1 52 3 
238 1 54 1 155 1 325 1 326 1 58 1 110 2 329 2 330 2 290 2 113 1 9 1 294 2 11 1 20 1 298 1 22 2 173 1 306 1 257 1 342 1 34 1 88 1 348 2 179 1 131 1 89 1 132 2 264 1 355 1 187 1 96 1 364 1 44 1 98 1 317 1 139 1 316 1 369 1 47 1 277 1 322 1 373 1 374 1 52 3 
238 1 54 1 34 1 88 1 348 1 110 1 329 1 131 1 132 1 89 1 330 2 290 1 264 1 9 1 313 1 294 2 11 1 70 1 298 1 20 1 44 1 98 1 316 1 139 1 317 1 47 1 22 1 322 1 52 2 
341 1 227 1 243 1 349 1 351 2 134 1 353 1 66 1 354 6 359 1 185 1 360 1 296 1 13 2 271 3 274 1 217 1 367 1 233 2 251 3 75 1 320 1 302 2 280 1 106 1 198 1 
225 1 156 3 57 1 86 3 227 2 243 1 349 2 351 1 178 1 7 1 134 2 353 4 354 14 66 11 230 1 185 11 360 2 334 2 295 1 13 2 271 6 336 1 192 1 250 2 367 2 233 4 251 8 320 2 302 1 303 1 340 1 198 1 237 1 
226 1 225 1 288 1 3 1 227 1 35 1 349 1 348 2 351 1 159 1 329 2 290 1 113 1 161 1 38 1 353 1 354 2 230 1 247 1 67 1 360 1 248 1 271 1 192 1 299 1 367 1 233 2 251 1 320 1 195 1 277 1 143 1 81 1 174 1 25 1 26 1 198 1 199 1 
57 2 288 3 3 1 243 3 59 2 329 3 159 2 63 1 290 1 113 1 161 2 8 1 66 7 247 3 334 2 296 1 13 8 297 2 250 2 299 2 251 10 75 1 338 2 302 4 305 1 26 1 174 2 124 2 341 1 225 1 226 2 227 3 348 3 349 3 35 2 351 2 178 4 38 1 134 3 353 7 354 20 230 1 185 7 360 3 271 10 274 1 192 1 367 3 233 6 320 3 195 3 277 1 143 2 280 1 282 2 106 1 198 3 107 1 199 2 
154 1 225 1 288 8 3 2 2 1 227 2 348 1 35 2 349 2 60 1 329 1 159 2 5 1 290 1 113 1 161 2 354 2 40 1 359 1 247 7 360 2 188 2 271 1 192 1 276 1 299 3 367 2 318 1 233 4 251 1 119 1 320 2 195 8 277 1 23 1 170 1 305 1 26 1 198 2 
29 1 57 1 227 1 243 1 349 1 348 1 329 1 204 1 290 1 113 1 134 1 353 1 66 1 354 3 230 1 185 1 360 1 334 1 13 1 271 2 250 1 367 1 233 2 251 1 320 1 277 1 302 1 198 1 257 1 
185 1 360 1 13 1 250 1 367 1 227 1 349 1 178 1 233 2 251 2 76 1 320 1 134 1 353 1 66 1 354 2 198 1 359 1 
185 1 360 1 285 1 13 1 271 2 57 1 367 1 227 1 243 1 349 1 233 2 320 1 302 1 353 1 66 1 354 2 198 1 359 1 
57 1 227 1 243 1 349 1 178 1 134 1 353 2 354 4 66 2 359 1 185 2 334 1 360 1 13 2 271 2 250 1 367 1 251 2 233 2 320 1 302 1 198 1 
185 1 360 1 13 1 250 1 367 1 227 1 60 1 349 1 178 1 233 2 251 2 76 1 320 1 134 1 353 1 66 1 354 2 198 1 
185 1 360 1 285 1 13 1 271 2 57 1 367 1 227 1 243 1 60 1 349 1 233 2 320 1 302 1 353 1 66 1 354 2 198 1 
57 1 227 1 243 1 349 1 60 1 178 1 134 1 353 2 354 4 66 2 185 2 334 1 360 1 13 2 271 2 250 1 367 1 251 2 233 2 320 1 302 1 198 1 
185 2 360 1 334 1 271 2 13 2 57 1 250 1 243 1 367 1 227 1 349 1 178 1 233 2 251 2 320 1 302 1 134 1 353 2 66 2 354 4 198 1 
225 1 226 1 288 1 3 1 227 1 35 1 348 1 349 1 351 1 159 1 329 1 161 1 354 2 247 1 360 1 271 1 192 1 299 1 367 1 251 1 233 2 320 1 195 1 143 1 282 1 174 1 198 1 199 1 
225 1 226 1 288 1 3 1 227 1 35 1 348 1 349 1 351 1 159 1 329 1 161 1 354 2 247 1 360 1 271 1 18 1 192 1 299 1 367 1 251 1 233 2 320 1 195 1 104 1 174 1 198 1 307 1 
57 1 227 1 243 1 349 1 178 1 134 1 353 2 354 4 66 2 230 1 185 2 334 1 360 1 13 2 271 2 250 1 367 1 251 2 233 2 320 1 302 1 198 1 
57 1 226 1 288 1 243 1 227 1 35 1 59 1 348 1 349 1 178 1 159 1 329 1 134 1 161 1 353 2 66 2 354 4 247 1 185 2 360 1 334 1 271 2 13 2 250 1 299 1 367 1 318 1 251 2 233 2 320 1 195 1 302 1 143 1 282 1 174 1 198 1 199 1 
29 1 57 1 243 1 227 1 349 1 348 1 178 1 329 1 182 1 290 1 113 1 134 1 353 1 354 3 66 1 230 1 185 1 360 1 334 1 271 1 13 1 250 1 367 1 233 2 251 2 320 1 277 1 198 1 257 1 
344 1 84 1 156 1 57 3 86 2 227 2 243 3 350 1 178 3 134 3 354 19 360 2 334 3 271 10 13 6 189 2 16 1 117 1 19 1 250 3 367 2 233 4 251 9 166 1 320 2 302 3 236 1 220 2 340 1 237 1 
84 1 156 2 57 2 85 1 86 2 243 2 227 3 350 1 178 2 134 3 354 26 360 3 334 3 13 4 271 12 189 1 117 2 19 1 118 1 232 1 250 3 367 3 233 6 251 14 45 1 301 1 166 1 320 3 302 2 236 2 281 1 103 2 220 4 237 2 
57 4 156 3 4 1 243 5 334 4 296 1 13 8 117 1 16 1 19 1 118 1 250 4 251 20 166 1 301 1 75 1 302 4 340 1 220 4 341 1 84 1 85 1 86 4 227 3 178 4 350 1 134 5 354 41 360 3 271 21 189 1 274 1 232 1 367 3 233 6 45 1 320 3 236 2 280 1 281 1 103 1 106 1 237 3 
341 1 84 1 156 3 57 3 85 1 4 1 86 4 227 4 243 4 350 1 178 3 134 5 354 38 360 4 334 4 296 1 271 18 13 7 189 1 16 1 117 1 274 1 19 1 118 1 232 1 250 4 367 4 45 1 233 8 251 20 75 1 301 1 166 1 320 4 302 4 280 1 236 2 281 1 103 2 220 4 340 1 106 1 237 3 
341 1 84 1 156 4 57 7 85 1 86 4 227 2 243 8 350 1 178 7 134 8 354 52 360 2 334 7 296 1 295 2 271 25 13 14 189 1 117 1 274 1 19 1 118 1 232 1 250 7 367 2 45 1 233 4 251 27 75 1 301 1 166 1 320 2 302 7 280 1 236 1 281 1 103 1 220 4 340 2 106 1 237 2 
62 1 165 1 206 1 79 1 135 1 65 1 163 1 183 1 61 1 357 1 
177 1 200 1 
62 1 164 1 206 1 79 1 263 1 135 1 163 1 357 1 141 1 
294 1 362 1 191 1 130 2 61 1 62 1 168 1 206 1 330 1 79 1 135 1 65 1 163 1 372 1 373 1 283 1 183 1 357 1 
294 1 362 1 191 1 130 2 61 1 62 1 168 1 206 1 330 1 79 1 135 1 65 1 163 1 372 1 373 1 283 1 183 1 357 1 
294 1 362 1 191 1 130 2 61 1 62 1 168 1 206 1 330 1 79 1 135 1 65 1 163 1 372 1 373 1 283 1 183 1 357 1 
78 1 205 1 273 1 
78 1 205 1 273 1 
216 1 256 1 
78 1 216 1 256 1 
12 1 208 1 
201 1 55 1 177 1 348 2 130 1 351 1 329 2 62 1 206 1 181 1 330 1 290 2 207 1 113 2 135 1 163 1 208 1 357 1 186 1 294 1 12 1 191 1 365 1 79 1 277 2 372 1 200 1 
205 1 273 1 
78 1 216 1 256 1 
154 1 240 1 225 1 288 2 227 1 35 1 349 1 348 2 159 1 329 2 6 1 290 2 161 1 354 2 230 1 356 1 247 2 360 1 188 2 271 1 15 1 192 1 276 1 299 1 367 1 233 2 251 1 320 1 195 2 196 1 198 1 
224 1 28 1 126 2 190 1 347 1 288 2 260 1 35 1 318 1 300 1 195 2 112 1 246 1 161 1 120 1 50 1 93 1 305 1 247 2 
28 1 126 2 190 1 347 1 288 1 260 1 300 1 35 1 195 1 246 1 120 1 161 1 50 1 93 1 305 1 147 1 247 1 
224 1 3 1 288 1 2 1 327 1 299 1 35 1 159 1 195 1 23 1 291 1 161 1 120 1 247 1 
224 1 28 1 126 2 190 1 347 1 288 1 260 1 35 1 300 1 195 1 112 1 246 1 120 1 161 1 50 1 93 1 305 1 247 1 
202 1 
47 1 39 1 373 1 298 1 217 1 366 1 179 1 
242 1 179 1 330 1 264 1 187 1 249 1 294 1 11 1 298 1 98 1 139 1 368 1 369 1 47 1 197 1 24 1 373 2 
288 1 3 1 87 1 35 2 159 1 90 1 264 1 161 1 247 1 358 1 11 1 298 2 98 1 139 1 299 2 77 1 195 1 338 1 142 1 253 1 174 1 376 1 
156 1 57 2 85 1 87 1 86 1 243 2 203 5 179 2 330 1 37 2 264 2 134 2 187 1 334 2 294 1 249 6 11 2 335 1 14 1 138 5 118 1 298 8 232 1 218 1 98 2 250 2 139 2 45 1 47 5 197 1 281 1 24 3 373 5 151 1 237 1 
341 1 342 1 155 1 243 1 348 1 329 1 330 1 290 1 37 2 264 1 113 1 134 2 294 1 11 1 96 1 274 1 298 2 98 1 139 1 75 1 47 2 22 1 277 1 144 1 173 1 374 1 151 1 257 1 
11 1 298 1 98 1 139 1 366 1 179 1 47 1 264 1 39 1 373 1 
334 2 249 10 138 5 57 2 298 5 250 2 243 2 203 5 47 5 338 1 37 2 134 2 24 5 373 5 151 1 
187 1 294 1 197 1 330 1 373 1 179 1 
0 1 288 4 3 2 87 2 2 1 245 1 35 1 159 1 330 3 264 2 161 1 92 2 247 4 187 4 10 1 294 3 11 2 213 1 298 2 98 1 218 2 299 1 139 2 47 2 195 4 197 2 23 1 254 1 148 1 
342 1 226 1 288 1 3 1 227 1 348 3 35 1 349 1 351 1 329 3 159 1 290 2 113 2 161 1 354 1 247 1 360 1 271 1 192 1 43 1 367 1 299 1 233 2 320 1 195 1 277 2 143 1 282 1 174 1 198 1 199 1 257 2 
249 4 296 1 11 1 138 2 87 1 298 1 98 1 218 1 139 1 203 2 179 2 47 2 264 1 24 2 373 4 
135 1 310 1 357 1 
135 1 310 1 357 1 
135 1 310 1 357 1 
135 1 121 1 208 1 61 1 357 1 
135 1 357 1 46 1 
135 1 357 1 46 1 
135 1 357 1 46 1 
135 1 357 1 
206 1 79 1 
360 2 341 1 296 1 271 4 13 3 274 1 243 1 367 2 227 2 251 4 178 1 233 4 75 1 320 2 302 2 280 1 134 1 103 1 354 8 106 1 
341 1 296 1 271 3 13 2 274 1 217 1 243 1 251 3 75 1 302 2 280 1 134 1 354 6 106 1 
360 1 334 1 175 1 271 2 13 2 57 1 250 1 243 1 367 1 227 1 233 2 251 2 178 1 320 1 302 1 134 1 354 4 
334 1 271 4 13 2 57 1 156 1 86 2 250 1 243 1 251 3 178 1 302 1 134 1 354 7 340 1 237 1 
341 1 156 2 57 2 86 2 243 3 227 2 178 4 134 3 354 23 334 2 360 2 296 1 295 1 13 9 271 12 336 1 274 2 250 2 367 2 251 11 233 4 75 2 320 2 370 1 302 5 280 1 103 2 340 1 106 1 
271 1 354 1 86 1 
156 1 354 1 251 1 
360 1 334 1 175 1 271 3 13 3 57 1 250 1 227 1 367 1 243 1 233 2 251 3 178 1 320 1 338 1 302 2 134 1 354 6 
84 1 156 1 57 2 85 1 86 1 227 1 243 2 178 1 134 2 354 12 360 1 334 2 271 6 13 2 232 1 118 1 250 2 367 1 45 1 233 2 251 6 320 1 302 1 281 1 237 1 
341 1 271 3 13 2 274 1 243 1 251 3 178 1 75 1 302 1 134 1 354 6 
360 1 13 2 271 2 274 1 367 1 227 1 251 1 178 1 233 2 75 1 320 1 370 1 302 1 280 1 103 1 354 3 106 1 
360 1 341 1 13 5 271 5 84 1 274 2 227 1 367 1 243 2 233 2 178 2 251 5 75 2 320 1 302 3 144 1 134 2 354 10 
360 1 13 1 84 1 250 1 367 1 227 1 233 2 251 2 178 1 320 1 134 1 354 2 
360 1 334 1 271 2 13 2 84 1 57 1 250 1 243 1 367 1 227 1 233 2 251 2 178 1 320 1 302 1 134 1 354 4 
360 3 271 2 13 2 16 1 84 1 274 1 367 3 227 3 233 6 178 1 251 1 75 1 320 3 370 1 302 1 103 1 354 3 
341 2 175 1 84 1 156 3 57 3 86 4 227 5 243 5 178 5 111 1 134 5 354 34 114 1 360 5 334 3 296 1 271 18 13 12 16 1 274 3 250 3 367 5 233 10 251 16 75 3 320 5 370 1 219 1 302 7 280 1 103 2 340 1 106 1 237 1 
341 1 84 1 156 1 86 1 243 1 227 1 134 1 354 8 360 1 296 1 271 4 13 2 274 1 367 1 45 1 233 2 251 4 75 1 320 1 302 2 280 1 106 1 237 1 
341 1 175 1 84 1 156 1 86 2 243 1 227 2 178 1 134 2 354 11 360 2 334 1 296 1 271 5 13 3 274 1 250 1 367 2 45 1 233 4 251 6 75 1 320 2 302 2 280 1 340 1 106 1 237 1 
341 1 175 1 84 1 156 1 57 2 85 1 86 1 227 3 243 3 178 1 134 3 354 19 360 3 334 2 296 1 271 10 13 4 274 1 118 1 232 1 250 2 367 3 45 1 233 6 251 9 75 1 320 3 302 3 280 1 281 1 103 1 106 1 237 1 
341 1 175 1 84 1 156 1 57 1 85 1 86 1 227 3 243 2 178 2 134 3 354 17 360 3 334 2 296 1 271 7 13 5 274 1 232 1 118 1 250 2 367 3 45 1 233 6 251 10 75 1 320 3 302 3 280 1 281 1 103 1 106 1 237 1 
341 1 84 1 156 1 86 1 243 1 227 1 134 1 354 8 360 1 296 1 271 4 13 2 274 1 367 1 45 1 233 2 251 4 75 1 320 1 302 2 280 1 106 1 237 1 
84 1 156 1 57 2 85 1 86 1 227 1 243 2 178 1 134 2 354 12 360 1 334 2 271 6 13 2 232 1 118 1 250 2 367 1 45 1 233 2 251 6 320 1 302 1 281 1 237 1 
341 1 175 1 84 1 156 1 57 1 85 1 86 1 227 4 243 2 178 2 134 3 354 18 360 4 334 2 296 1 271 8 13 5 274 1 118 1 232 1 250 2 367 4 45 1 233 8 251 10 75 1 320 4 302 3 280 1 281 1 103 2 106 1 237 1 
84 1 156 1 57 2 85 1 86 1 227 4 243 2 178 3 134 3 354 16 360 4 334 3 271 7 13 6 16 1 118 1 232 1 250 3 367 4 45 1 233 8 251 9 320 4 302 3 281 1 103 2 237 1 
341 1 271 4 13 6 274 3 243 1 178 3 251 3 75 3 302 3 280 2 134 1 354 7 106 1 
341 1 84 1 156 1 57 1 85 1 86 1 227 4 243 2 178 1 134 3 354 18 360 4 334 2 296 1 271 8 13 4 16 1 274 1 118 1 232 1 250 2 367 4 45 1 233 8 251 10 75 1 320 4 302 3 280 1 281 1 103 2 106 1 237 1 
329 1 238 1 267 1 290 1 348 1 351 1 228 1 
267 1 238 1 268 1 258 1 363 1 275 1 348 1 351 1 228 1 329 1 290 1 123 1 
159 1 195 1 23 1 161 1 2 1 288 1 3 1 217 1 299 1 35 1 247 1 
226 1 3 1 288 1 299 1 35 1 348 2 351 1 159 1 329 2 195 1 277 1 290 1 143 1 113 1 161 1 174 1 26 1 247 1 
226 1 288 1 317 1 299 3 109 1 35 1 348 2 351 1 159 2 329 2 89 1 195 1 22 1 277 2 290 2 143 1 113 1 161 1 80 1 92 1 174 2 26 1 247 1 
212 1 226 1 18 1 288 2 317 1 299 3 109 1 35 1 348 2 351 1 159 2 329 2 89 1 195 2 22 1 277 2 290 2 113 1 161 1 80 1 92 1 174 2 26 1 247 2 
239 1 346 1 288 3 3 1 35 1 109 1 179 1 159 1 131 1 330 2 161 1 162 1 92 1 247 3 187 1 212 1 294 2 299 4 195 3 80 1 373 1 174 1 376 1 
187 1 212 1 294 2 346 1 3 1 288 3 299 4 109 1 35 1 179 1 131 1 159 1 195 3 330 2 161 1 373 1 80 1 92 1 174 1 247 3 149 1 376 1 
119 1 195 1 161 1 288 1 35 1 247 1 
188 1 214 1 3 2 288 7 276 1 176 1 299 3 318 1 35 3 77 1 159 2 119 1 195 7 5 1 170 1 332 1 161 2 40 1 305 1 174 1 247 6 
124 1 341 1 226 1 288 1 243 1 227 2 35 1 349 2 348 2 59 1 351 2 159 1 329 2 290 1 113 1 134 1 161 1 353 1 66 1 354 6 230 1 247 1 185 1 360 2 296 1 271 3 13 2 274 1 299 1 367 2 318 1 251 3 233 4 75 1 320 2 196 1 195 1 277 1 302 2 143 1 280 1 282 1 106 1 174 1 26 1 198 2 199 1 
341 1 201 1 342 1 155 1 288 1 3 1 243 2 348 1 179 1 329 1 330 1 290 1 113 1 264 1 37 2 134 2 39 1 247 1 294 1 11 1 96 1 274 1 213 1 298 4 98 1 139 1 366 1 75 1 47 4 195 1 22 1 142 1 277 1 144 1 373 1 374 1 151 1 257 1 
346 1 288 2 299 2 318 1 35 2 77 1 159 1 119 1 195 2 90 1 161 1 174 1 247 2 
212 1 3 1 288 4 2 1 299 1 35 1 318 1 159 1 195 4 23 1 161 1 304 1 247 4 
137 1 56 1 288 2 176 1 299 1 35 2 159 1 195 2 63 1 332 1 161 1 92 1 174 1 247 2 
195 1 126 1 161 1 50 1 347 1 288 1 3 1 260 1 35 1 247 1 
159 1 195 2 6 1 161 1 288 2 276 1 305 1 299 1 35 1 318 1 247 2 
2 1 3 1 288 5 276 1 299 3 318 1 35 2 159 2 195 5 5 1 23 1 161 2 304 1 92 1 40 1 247 4 
2 1 3 1 288 5 276 1 299 3 318 1 35 2 159 2 195 5 23 1 161 2 304 1 92 1 40 1 247 4 293 1 
226 1 18 1 3 1 288 1 299 1 35 1 348 2 351 1 159 1 329 2 195 1 277 1 290 1 113 1 161 1 174 1 26 1 247 1 
214 1 288 1 176 1 299 1 35 2 77 1 159 1 195 1 332 1 161 1 92 1 174 1 247 1 
331 1 272 1 345 1 136 1 351 1 
201 1 294 2 54 1 272 1 127 1 345 2 317 1 351 1 140 1 179 1 131 1 89 1 22 1 330 2 331 2 373 1 136 2 284 1 222 1 
329 1 290 1 15 1 331 1 272 1 240 1 345 1 356 1 348 1 
272 1 127 1 140 1 
259 1 108 1 33 1 217 1 
100 1 308 1 259 1 108 1 265 1 33 1 311 1 
100 1 312 1 36 1 
308 1 270 2 259 1 108 1 33 1 311 3 319 1 100 3 64 1 371 1 101 1 265 1 
100 2 308 1 321 1 259 1 108 1 265 1 33 1 95 1 311 2 
308 1 28 1 259 1 126 1 72 1 260 1 244 1 311 1 100 1 101 1 265 1 
100 1 308 1 101 1 259 1 265 1 33 1 311 1 
100 1 308 1 101 1 108 1 265 1 33 2 311 1 
308 2 259 1 343 1 83 1 33 1 311 2 337 1 100 2 101 1 265 2 
53 1 308 1 108 1 259 2 72 1 33 1 311 3 100 3 101 1 265 1 221 1 95 2 323 1 
308 1 28 1 259 1 108 1 126 2 347 1 33 1 260 1 311 2 100 2 101 1 339 1 246 1 265 1 95 1 
308 2 108 1 259 2 72 1 33 1 311 4 100 4 101 1 321 1 265 2 221 1 42 1 95 2 
100 1 308 1 101 1 259 1 108 1 265 1 33 1 311 1 
308 1 270 1 108 2 259 3 72 1 33 2 311 4 319 1 99 1 100 4 371 1 265 1 221 1 95 2 
308 1 259 1 108 1 33 1 315 1 311 2 100 2 101 1 133 1 265 1 95 1 223 1 
308 1 270 2 259 1 108 1 33 1 311 3 319 2 100 3 371 1 101 1 279 1 265 1 
259 2 105 1 375 1 41 2 
100 1 308 1 101 1 265 1 311 1 194 1 
100 2 308 1 101 1 259 1 108 1 265 1 33 1 95 1 323 1 311 2 
262 1 
100 1 308 1 101 1 259 1 108 1 265 1 33 1 311 1 
100 3 308 1 270 1 101 1 259 1 108 1 265 1 33 1 95 1 323 1 311 3 
99 1 259 1 72 1 221 1 
259 1 33 1 

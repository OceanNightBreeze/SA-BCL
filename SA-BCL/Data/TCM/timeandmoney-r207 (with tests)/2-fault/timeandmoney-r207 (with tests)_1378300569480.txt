#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) (35,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (35,293) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) (35,293) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (160,204,262,282) (160,204,262,282) (160,204,262,282) 201 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> >=
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 282 1 201 1 
116 1 173 1 288 1 
250 1 196 2 173 1 
245 2 248 2 328 1 102 2 265 2 19 2 323 1 260 2 
245 2 248 2 3 1 299 1 252 1 302 1 46 1 256 1 170 1 260 2 219 2 310 1 88 1 311 2 265 3 183 2 268 1 127 1 19 3 129 1 97 1 317 1 135 1 133 1 102 2 141 1 280 1 284 1 145 1 323 1 110 2 68 1 235 1 150 1 30 2 328 1 242 1 
245 1 199 1 248 1 251 1 102 1 265 1 19 1 323 1 96 1 260 1 
245 1 41 1 104 1 321 1 173 1 124 1 291 1 224 1 265 1 116 1 19 1 316 1 271 1 96 1 
245 1 41 2 248 1 102 1 321 1 173 1 260 1 124 1 291 2 224 1 265 1 116 1 19 1 271 1 96 1 
41 1 238 1 291 1 65 1 306 1 
41 2 238 1 291 2 44 1 65 1 36 1 116 1 173 1 
41 1 238 1 291 1 
41 1 40 1 245 1 248 1 251 1 102 1 65 1 323 1 260 1 199 1 291 1 265 1 19 1 96 1 
173 1 
276 1 41 2 238 1 291 2 44 1 65 1 116 1 173 1 
41 5 246 1 121 2 62 1 195 1 44 1 65 2 82 1 324 2 173 1 261 1 292 1 70 1 291 5 238 2 90 2 240 1 116 1 331 1 
328 1 288 1 
245 2 248 1 102 1 45 1 260 1 151 1 328 2 265 2 19 2 
99 1 174 1 278 1 
3 1 252 1 141 1 284 1 256 1 170 1 68 1 310 1 88 1 311 1 30 1 328 1 265 1 157 1 183 1 19 1 
99 1 296 1 245 1 248 1 3 1 252 1 102 1 141 1 284 1 256 1 170 1 68 1 88 1 310 1 311 1 30 1 265 2 183 1 314 1 19 2 
245 3 248 3 328 1 102 3 265 3 314 1 19 3 260 1 
245 1 248 1 251 1 102 1 265 1 19 1 96 1 
245 1 151 1 248 1 102 1 265 1 45 1 19 1 96 1 260 1 
296 1 205 1 245 3 41 1 248 3 3 1 299 1 252 1 302 1 46 1 256 1 170 1 260 2 219 2 88 1 310 1 124 1 311 1 312 1 224 1 265 4 183 1 268 1 314 1 127 1 19 4 271 1 96 1 97 1 135 1 133 1 102 3 141 1 321 1 280 1 284 1 323 1 110 1 68 1 150 1 151 1 30 1 291 1 328 1 
245 2 248 1 328 1 102 1 104 1 265 2 314 1 19 2 333 1 
296 1 41 1 245 3 248 3 102 3 321 1 173 1 260 1 151 1 124 1 291 1 312 1 224 1 265 3 15 1 314 2 19 3 271 1 96 1 
99 1 245 2 278 1 248 2 102 2 260 1 151 1 265 2 314 1 19 2 
3 1 252 1 141 1 284 1 256 1 170 1 68 1 310 1 88 1 311 1 30 1 328 1 265 1 183 1 19 1 
3 1 140 1 252 1 141 1 284 1 170 1 68 1 88 1 311 1 30 1 328 1 126 1 265 1 183 1 19 1 
298 1 208 1 299 1 5 1 302 1 46 1 169 1 258 1 307 1 219 2 174 2 87 1 268 1 127 1 128 1 99 2 317 2 278 2 133 1 110 4 150 2 241 1 117 1 158 1 
245 1 248 1 102 1 321 1 265 1 19 1 96 1 231 1 
296 1 245 5 248 4 102 4 104 1 109 1 260 1 151 1 71 1 328 1 265 5 314 2 19 5 333 1 
245 2 248 2 251 1 102 2 265 2 19 2 96 1 231 1 
10 1 91 1 
10 1 91 1 
313 1 48 1 
313 1 48 1 
313 1 48 1 
69 1 10 1 91 1 
69 1 10 1 91 1 
10 1 91 1 185 1 
10 2 313 1 91 2 54 1 48 1 273 1 
69 1 10 1 91 1 
10 1 91 1 7 1 
10 1 91 1 7 1 
10 1 91 1 7 1 
41 2 59 1 255 1 304 1 215 1 173 1 216 3 10 2 152 2 291 2 89 1 34 1 91 2 225 2 14 2 92 2 54 1 189 1 118 2 
41 1 245 2 248 2 207 1 255 1 216 1 214 1 10 1 91 1 14 1 265 2 92 1 185 1 19 2 20 1 277 1 102 2 63 1 325 1 152 1 291 1 328 1 294 1 118 1 
115 1 143 1 56 1 
115 1 130 1 56 1 
79 1 212 1 143 2 305 1 130 1 56 3 
319 1 79 1 212 1 143 1 130 1 56 2 
79 2 212 1 143 1 130 1 56 2 
41 5 121 1 207 1 250 1 208 1 44 1 257 1 169 1 214 1 173 2 308 1 261 3 90 1 131 1 22 1 100 2 139 2 65 4 64 1 196 3 324 1 67 2 292 2 238 1 291 5 153 1 241 1 116 1 294 1 331 1 158 1 159 1 
246 1 41 9 207 4 121 2 250 3 208 3 211 1 44 1 169 3 306 5 173 5 309 5 261 8 222 1 90 2 13 1 226 1 266 1 131 2 230 1 22 1 139 6 65 7 64 2 196 9 324 2 67 6 292 6 238 6 291 9 241 3 116 1 331 1 158 3 159 3 
41 3 246 1 121 1 207 1 250 2 208 1 169 1 173 3 308 1 261 3 90 1 131 1 100 1 139 2 65 2 64 1 196 4 324 1 67 2 153 1 291 3 292 2 241 1 116 1 158 1 159 1 
41 4 246 1 121 1 207 2 250 3 208 2 211 1 169 2 173 4 308 1 261 5 90 1 266 1 131 1 230 1 100 2 139 4 64 1 65 3 196 7 324 1 67 4 291 4 153 1 292 4 241 2 116 1 158 2 159 2 
1 1 252 1 288 1 
252 1 73 1 
234 1 
252 1 170 1 
1 2 162 1 252 3 141 1 264 1 170 1 
252 1 141 1 170 1 
78 1 252 1 
120 1 317 4 132 1 208 1 279 1 5 3 258 2 259 1 172 1 28 1 110 7 220 1 150 3 125 1 177 2 329 1 158 1 
120 1 317 4 132 1 208 1 279 1 5 3 258 2 259 1 172 1 28 1 110 7 220 1 150 3 125 1 177 2 329 1 158 1 
120 1 317 4 132 1 208 1 279 1 5 3 258 2 259 1 172 1 28 1 110 7 220 1 150 3 125 1 177 2 329 1 158 1 229 1 
120 5 208 4 299 1 5 10 169 3 258 5 49 1 259 2 172 2 220 1 219 2 125 1 177 3 268 1 186 1 127 1 57 3 275 1 317 16 132 2 194 4 133 1 136 1 279 2 28 1 110 31 236 1 150 15 241 3 329 1 156 1 158 4 244 1 159 3 
76 1 120 1 208 3 299 1 5 4 258 3 172 1 259 2 219 2 220 1 177 2 93 1 182 1 268 1 127 1 317 8 132 1 133 1 279 2 28 2 110 14 150 6 329 1 158 3 
160 1 262 1 138 1 282 1 201 1 
160 1 262 1 138 1 293 1 282 1 
204 1 138 1 35 1 282 1 
160 1 262 1 138 1 293 1 282 1 
160 1 262 1 138 1 282 1 201 1 
61 1 
245 1 163 1 250 2 3 1 252 1 167 2 170 1 173 2 84 2 85 2 88 1 175 1 261 2 90 1 265 1 16 1 183 2 19 1 271 1 21 2 192 1 96 1 104 1 197 2 196 2 284 2 108 1 289 1 30 2 292 2 291 5 116 1 37 1 41 5 121 1 42 1 44 3 303 4 311 2 124 1 51 1 223 1 224 1 52 1 316 1 131 1 321 1 66 1 324 1 148 2 149 1 238 6 154 1 331 1 334 2 
245 1 41 3 44 1 303 2 167 1 124 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 96 1 276 1 104 1 321 1 108 1 289 1 149 1 291 3 238 2 
245 1 41 3 44 1 303 3 173 1 85 1 124 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 96 1 276 1 104 1 321 1 108 1 289 1 149 1 238 1 291 3 116 1 
245 1 41 3 44 1 303 3 167 1 173 1 85 1 124 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 96 1 276 1 104 1 321 1 197 1 108 1 289 1 149 1 291 3 238 2 116 1 
245 1 250 2 167 4 173 5 84 2 85 4 261 1 90 1 179 1 265 1 16 1 19 1 271 1 96 1 21 2 276 1 104 1 197 4 108 1 289 1 291 5 292 1 116 5 41 5 121 1 44 3 303 6 217 1 221 1 124 1 51 1 224 1 52 1 316 1 60 1 321 1 324 1 148 2 149 1 238 7 154 1 155 1 331 1 334 2 
245 1 250 2 167 2 84 2 173 2 85 2 261 1 175 1 90 1 265 1 16 1 19 1 271 1 96 1 21 2 104 1 196 2 197 2 108 1 289 1 291 4 292 1 116 1 41 4 121 1 44 2 303 4 51 1 124 1 224 1 52 1 316 1 321 1 324 1 148 2 149 1 238 4 154 1 331 1 334 2 
245 1 41 4 121 1 250 2 44 2 167 2 303 4 173 1 84 2 85 2 221 1 261 1 51 1 124 1 90 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 21 2 96 1 60 1 104 1 321 1 197 2 108 1 324 1 289 1 148 2 149 1 238 4 292 1 291 4 154 1 155 1 116 1 331 1 334 2 
245 1 41 4 121 1 250 2 44 2 167 2 303 4 173 1 84 2 85 2 221 1 261 1 51 1 124 1 90 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 21 2 96 1 60 1 104 1 321 1 197 2 108 1 324 1 289 1 148 2 149 1 238 4 292 1 291 4 154 1 155 1 116 1 331 1 334 2 
77 1 245 1 41 4 121 1 297 1 44 2 167 2 303 4 173 1 85 2 221 1 261 1 124 1 11 1 90 1 224 1 265 1 16 1 52 1 315 2 19 1 316 1 271 1 96 1 104 1 321 1 197 2 196 2 108 1 324 1 147 2 289 1 148 2 149 1 238 4 292 1 291 4 154 1 116 1 331 1 334 2 
245 1 41 4 121 1 250 2 44 2 303 5 167 3 173 1 84 2 217 1 85 3 221 1 261 1 51 1 124 1 90 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 21 2 96 1 60 1 104 1 321 1 197 3 324 1 108 1 289 1 148 2 149 1 292 1 291 4 238 5 154 1 155 1 116 1 331 1 334 2 
245 1 41 4 121 1 250 2 44 2 303 5 167 3 173 1 84 2 217 1 85 3 221 1 261 1 51 1 124 1 90 1 224 1 265 1 16 1 52 1 19 1 316 1 271 1 21 2 96 1 60 1 104 1 321 1 197 3 324 1 108 1 289 1 148 2 149 1 292 1 291 4 238 5 154 1 155 1 116 1 331 1 334 2 
77 1 245 1 167 2 173 1 85 2 261 1 175 1 90 1 265 1 16 1 19 1 271 1 96 1 104 1 196 2 197 2 108 1 289 1 291 4 292 1 116 1 41 4 121 1 44 2 303 4 124 1 224 1 52 1 315 2 316 1 321 1 324 1 147 2 148 2 149 1 238 4 154 1 331 1 334 2 
99 1 317 3 278 1 208 1 133 1 299 1 279 1 5 2 302 1 46 1 258 2 259 1 28 1 288 1 110 6 307 1 174 1 219 2 220 1 150 3 328 2 177 1 329 1 268 1 158 1 127 1 
120 1 208 2 299 2 5 2 302 1 46 2 169 2 258 1 219 4 174 11 268 2 186 1 127 2 188 1 99 11 57 3 58 1 317 8 278 4 135 1 194 3 133 2 137 1 285 1 110 14 150 6 327 1 328 1 241 1 242 1 158 1 244 1 159 2 
296 1 245 1 247 1 248 1 3 1 299 1 252 1 80 1 302 1 46 1 256 1 170 1 219 2 88 1 310 1 311 1 265 2 183 1 314 1 268 1 188 1 19 2 127 1 317 1 278 1 133 1 135 1 102 1 141 1 284 1 68 1 110 2 150 1 30 1 328 1 330 1 157 1 242 1 
245 1 248 1 3 2 252 2 5 8 256 2 81 1 171 2 170 2 169 2 258 4 259 1 174 7 88 2 12 1 177 1 265 3 183 3 268 3 19 3 188 1 97 2 25 1 99 7 278 7 279 1 102 1 284 1 28 1 110 20 30 3 114 2 296 1 120 4 208 3 299 3 300 2 302 3 46 3 220 1 219 6 310 2 311 3 314 1 127 3 317 10 135 1 133 3 141 2 322 1 68 2 150 10 328 2 239 2 241 2 329 1 242 1 158 3 159 2 
245 1 248 1 163 1 3 2 299 2 252 3 302 2 46 2 170 2 307 1 219 4 88 2 311 7 12 1 265 1 267 1 183 8 314 1 268 2 19 1 127 2 187 1 192 1 317 1 133 2 135 1 102 1 106 1 284 2 144 1 145 2 29 1 110 2 150 1 30 8 290 1 242 1 202 1 243 1 
245 1 248 1 208 1 299 1 5 1 302 1 46 1 169 1 258 1 260 1 174 1 219 2 265 1 17 1 268 1 127 1 188 1 19 1 99 1 317 1 278 1 133 1 102 1 110 3 151 1 150 2 241 1 158 1 159 1 
99 1 120 1 317 2 278 1 133 1 208 1 299 1 5 1 302 1 46 1 169 1 110 2 307 1 174 1 219 2 87 1 268 1 127 1 
99 1 278 1 133 1 299 1 5 1 302 1 46 1 258 1 110 2 307 1 174 1 219 2 150 2 241 1 268 1 127 1 158 1 128 1 
99 2 120 1 317 2 278 2 133 1 208 1 299 1 5 2 302 1 46 1 169 1 258 1 110 4 307 1 174 2 219 2 150 2 241 1 268 1 158 1 127 1 159 1 
99 1 120 1 317 2 278 1 133 1 208 1 299 1 5 1 302 1 46 1 169 1 110 2 174 1 219 2 87 1 268 1 127 1 243 1 
99 1 278 1 133 1 299 1 5 1 302 1 46 1 258 1 110 2 174 1 219 2 150 2 241 1 268 1 127 1 158 1 128 1 243 1 
99 2 120 1 317 2 278 2 133 1 208 1 299 1 5 2 302 1 46 1 169 1 258 1 110 4 174 2 219 2 150 2 241 1 268 1 158 1 127 1 243 1 159 1 
99 2 120 1 317 2 278 2 133 1 208 1 299 1 5 2 302 1 46 1 169 1 258 1 110 4 174 2 219 2 150 2 241 1 268 1 158 1 127 1 159 1 
3 1 299 1 252 1 302 1 46 1 256 1 170 1 219 2 88 1 310 1 311 1 265 1 183 1 268 1 19 1 127 1 97 1 317 1 133 1 135 1 141 1 284 1 110 2 68 1 150 1 30 1 328 1 242 1 
3 1 299 1 252 1 302 1 46 1 170 1 219 2 88 1 311 1 126 1 265 1 183 1 268 1 19 1 127 1 193 1 317 1 133 1 135 1 140 1 141 1 284 1 110 2 68 1 150 1 30 1 328 1 242 1 
99 2 120 1 317 2 278 2 133 1 208 1 299 1 5 2 302 1 46 1 169 1 258 1 110 4 174 2 219 2 150 2 241 1 268 1 158 1 188 1 127 1 159 1 
120 1 208 1 3 1 299 1 252 1 5 2 302 1 46 1 256 1 169 1 171 1 170 1 258 1 174 2 219 2 88 1 310 1 311 1 265 1 183 1 268 1 19 1 127 1 97 1 99 2 317 2 278 2 133 1 141 1 106 1 110 4 68 1 150 2 30 1 241 1 158 1 159 1 
120 1 245 1 248 1 208 1 299 1 5 1 302 1 46 1 169 1 83 1 260 1 219 2 174 1 265 1 268 1 127 1 188 1 19 1 99 1 317 2 278 1 133 1 102 1 110 3 150 1 151 1 241 1 158 1 159 1 
0 2 120 3 43 1 208 3 299 2 5 6 169 3 258 3 219 4 176 1 182 1 268 2 186 1 228 1 127 2 55 1 57 1 317 9 194 2 133 2 110 19 150 10 31 1 241 3 200 1 158 3 38 2 244 1 119 1 159 3 
0 1 120 2 43 2 208 3 299 3 5 4 169 3 258 2 50 1 219 6 176 1 53 1 182 1 268 3 228 2 127 3 55 1 23 1 275 2 57 2 317 14 133 3 194 2 233 1 110 26 150 12 112 1 241 2 158 2 38 4 203 1 119 1 244 2 159 3 
0 1 5 8 169 4 258 4 259 1 176 1 177 1 182 1 186 1 268 3 23 1 275 1 194 4 279 1 28 1 110 41 112 1 200 1 38 4 203 1 119 1 120 4 208 5 43 1 122 1 299 3 50 1 219 6 220 1 53 1 127 3 228 2 55 1 57 3 317 20 133 3 233 1 150 21 241 4 329 1 158 5 159 4 244 3 
0 1 120 3 122 1 43 1 208 5 299 4 5 7 169 4 258 4 259 1 50 1 220 1 219 8 176 1 177 1 53 1 182 1 268 4 186 1 228 2 127 4 55 1 23 1 275 2 57 3 317 20 194 4 133 4 279 1 233 1 28 1 110 38 150 18 112 1 241 3 329 1 200 1 158 4 38 4 203 1 244 3 119 1 159 4 
0 1 120 7 43 1 208 8 299 2 5 14 169 7 258 7 259 1 50 1 220 1 219 4 176 1 177 1 53 1 182 1 268 2 186 2 228 1 127 2 55 1 23 1 275 1 57 4 317 27 194 4 133 2 137 2 279 1 233 1 28 1 110 52 150 25 112 1 241 7 329 1 158 8 38 4 203 1 244 2 119 1 159 7 
152 1 10 1 34 1 91 1 14 1 92 1 54 1 227 1 118 1 215 1 
63 1 185 1 
152 1 10 1 210 1 91 1 14 1 92 1 95 1 118 1 39 1 
41 1 255 1 304 1 215 1 173 1 216 2 10 1 152 1 291 1 89 1 34 1 91 1 225 1 14 1 92 1 54 1 189 1 118 1 
41 1 255 1 304 1 215 1 173 1 216 2 10 1 152 1 291 1 89 1 34 1 91 1 225 1 14 1 92 1 54 1 189 1 118 1 
41 1 255 1 304 1 215 1 173 1 216 2 10 1 152 1 291 1 89 1 34 1 91 1 225 1 14 1 92 1 54 1 189 1 118 1 
69 1 164 1 273 1 
69 1 164 1 273 1 
161 1 7 1 
161 1 7 1 273 1 
277 1 20 1 
41 1 245 2 207 1 248 2 304 1 216 1 214 1 10 1 225 1 91 1 265 2 14 1 92 1 185 1 19 2 20 1 277 1 318 1 63 1 102 2 65 1 325 1 152 1 291 1 328 1 294 1 118 1 
69 1 164 1 
161 1 7 1 273 1 
245 2 3 1 299 1 252 1 253 1 302 1 46 1 170 1 219 2 88 1 311 2 265 2 183 2 268 1 188 1 19 2 127 1 187 1 317 1 133 1 135 1 281 1 145 2 29 1 287 1 146 1 110 2 150 1 30 2 32 1 242 1 
274 1 3 1 209 1 105 1 106 1 143 1 305 1 326 1 88 1 311 2 30 2 237 1 12 1 115 1 183 2 18 1 130 1 270 1 56 2 
274 1 134 1 3 1 209 1 105 1 143 1 305 1 88 1 311 1 30 1 237 1 12 1 115 1 183 1 18 1 130 1 56 2 
249 1 163 1 3 1 252 1 105 1 284 1 170 1 326 1 88 1 311 1 30 1 183 1 94 1 192 1 
274 1 3 1 209 1 105 1 143 1 305 1 326 1 88 1 311 1 30 1 237 1 12 1 115 1 183 1 18 1 130 1 270 1 56 2 
33 1 
261 1 292 1 70 1 116 1 82 1 173 1 288 1 
41 1 121 1 250 1 44 1 84 1 173 2 261 1 51 1 90 1 21 1 196 1 324 1 292 1 238 1 291 1 116 1 331 1 
1 2 78 2 3 4 2 2 250 6 165 2 252 10 4 2 166 2 6 2 170 3 168 1 169 2 82 1 173 8 9 2 88 3 261 9 90 4 264 1 183 3 271 2 106 1 283 2 196 12 284 1 286 1 198 2 30 3 291 5 292 8 116 2 37 1 206 1 41 5 121 4 208 2 300 2 44 3 311 3 131 2 320 1 139 6 141 3 232 1 324 4 67 6 70 1 238 5 73 3 241 2 331 4 158 2 159 2 
41 1 121 2 250 3 208 2 4 1 165 2 44 1 169 2 50 1 173 5 261 8 90 2 53 1 131 1 57 1 194 1 139 5 196 6 233 1 324 2 67 5 112 1 291 1 238 1 292 5 113 1 241 2 116 2 331 2 158 2 37 1 332 1 203 1 244 1 159 2 
41 1 40 1 245 1 121 1 248 1 208 2 4 1 251 1 165 2 259 1 260 1 261 2 90 1 265 1 93 1 19 1 96 1 279 1 102 1 323 1 324 1 28 1 199 1 291 1 292 2 155 1 331 1 158 1 
121 1 82 1 324 1 173 1 261 1 70 1 292 1 90 1 116 1 331 1 
208 2 250 5 4 1 300 1 165 2 139 5 196 10 169 2 173 5 67 5 261 5 292 5 241 2 158 2 159 2 
41 1 291 1 238 1 44 1 116 1 173 1 
246 1 41 3 121 2 163 1 3 1 252 1 44 2 170 1 88 1 311 4 261 2 223 1 90 2 178 1 183 4 131 2 192 1 320 1 66 1 284 2 324 2 286 2 30 4 238 4 292 2 291 3 74 1 331 1 37 2 
245 2 248 2 3 1 299 1 252 1 302 1 46 1 256 1 170 1 260 2 219 2 310 1 88 1 311 1 265 3 183 1 268 1 127 1 19 3 97 1 135 1 133 1 102 2 141 1 280 1 284 1 323 1 110 1 68 1 150 1 30 1 328 1 
121 1 250 2 139 2 196 4 324 1 173 4 67 2 261 1 292 2 90 1 177 1 116 2 331 1 37 1 131 1 
152 1 92 1 191 1 
152 1 92 1 191 1 
152 1 34 1 72 1 92 1 20 1 
152 1 92 1 191 1 
152 1 92 1 295 1 
152 1 92 1 295 1 
152 1 92 1 295 1 
152 1 92 1 
10 1 91 1 
275 1 317 4 120 1 208 1 133 2 299 2 279 1 5 3 258 2 259 1 28 1 110 8 219 4 220 1 150 4 177 1 329 1 268 2 158 1 127 2 
317 3 208 1 279 1 5 2 258 2 259 1 28 1 288 1 110 6 220 1 150 3 177 1 329 1 158 1 
317 2 120 1 133 1 208 1 299 1 5 2 26 1 169 1 258 1 110 4 219 2 150 2 241 1 268 1 158 1 127 1 159 1 
57 1 317 3 120 1 194 2 208 1 5 2 169 1 258 1 110 7 150 4 241 1 186 1 158 1 244 1 159 1 
120 4 208 3 299 2 5 9 169 2 258 5 259 2 220 1 219 4 177 1 186 1 268 2 127 2 269 1 57 2 275 2 317 11 194 2 133 2 137 1 279 2 285 1 28 1 110 23 150 12 241 2 329 1 158 3 159 2 
150 1 194 1 110 1 
57 1 317 1 110 1 
317 3 120 1 133 1 208 1 299 1 300 1 26 1 5 3 169 1 258 2 110 6 219 2 150 3 241 1 268 1 127 1 158 1 159 1 
120 1 208 2 299 1 5 2 169 2 258 1 50 1 219 2 182 1 53 1 268 1 127 1 57 1 317 6 194 1 133 1 233 1 110 12 150 6 112 1 241 2 158 2 203 1 244 1 159 2 
317 3 120 1 208 1 279 1 5 2 258 1 259 1 28 1 110 6 150 3 158 1 
275 1 317 1 120 1 133 1 299 1 279 1 5 2 258 1 259 1 110 3 219 2 220 1 150 2 329 1 268 1 127 1 269 1 
120 2 317 5 133 1 208 2 299 1 279 2 5 5 258 3 259 2 28 1 110 10 219 2 150 5 93 1 182 1 268 1 127 1 158 2 
317 2 120 1 133 1 208 1 299 1 5 1 169 1 110 2 219 2 182 1 268 1 127 1 
317 2 120 1 133 1 208 1 299 1 5 2 169 1 258 1 110 4 219 2 150 2 241 1 182 1 268 1 158 1 127 1 159 1 
275 1 120 1 317 1 133 3 299 3 279 1 5 2 258 1 259 1 110 3 219 6 150 2 200 1 182 1 268 3 127 3 269 1 
120 5 208 5 299 5 5 12 169 3 49 1 258 7 259 3 220 1 219 10 177 1 182 1 268 5 186 1 127 5 269 1 275 2 57 3 317 16 194 4 133 5 279 3 26 1 28 2 110 34 236 1 150 18 241 3 329 1 156 1 200 1 158 5 244 1 159 3 
208 1 299 1 5 2 258 2 50 1 259 1 219 2 220 1 177 1 182 1 268 1 127 1 57 1 317 4 194 1 133 1 279 1 28 1 110 8 150 4 329 1 158 1 244 1 
120 1 208 2 299 2 5 3 169 1 258 2 259 1 50 1 220 1 219 4 177 1 182 1 268 2 186 1 127 2 57 1 317 6 194 2 133 2 279 1 26 1 28 1 110 11 150 5 329 1 158 1 244 1 159 1 
120 1 208 3 299 3 5 4 169 2 258 3 259 1 50 1 220 1 219 6 177 1 182 1 53 1 268 3 127 3 57 1 275 1 317 9 194 1 133 3 279 1 26 1 233 1 28 1 110 19 150 10 112 1 241 2 329 1 158 3 203 1 244 1 159 2 
120 2 208 3 299 3 5 5 169 2 258 3 259 1 50 1 220 1 219 6 177 1 182 1 53 1 268 3 127 3 275 1 57 1 317 10 194 1 133 3 279 1 26 1 233 1 28 1 110 17 150 7 112 1 241 1 329 1 158 2 203 1 244 1 159 2 
208 1 299 1 5 2 258 2 50 1 259 1 219 2 220 1 177 1 182 1 268 1 127 1 57 1 317 4 194 1 133 1 279 1 28 1 110 8 150 4 329 1 158 1 244 1 
120 1 208 2 299 1 5 2 169 2 258 1 50 1 219 2 182 1 53 1 268 1 127 1 57 1 317 6 194 1 133 1 233 1 110 12 150 6 112 1 241 2 158 2 203 1 244 1 159 2 
120 2 208 3 299 4 5 5 169 2 258 3 259 1 50 1 220 1 219 8 177 1 53 1 182 1 268 4 127 4 57 1 275 2 317 10 194 1 133 4 279 1 26 1 233 1 28 1 110 18 150 8 112 1 241 1 329 1 158 2 203 1 244 1 159 2 
120 3 208 3 299 4 5 6 169 3 258 3 50 1 219 8 53 1 182 1 268 4 127 4 57 1 275 2 317 9 194 1 133 4 233 1 110 16 150 7 112 1 241 2 200 1 158 2 203 1 244 1 159 3 
120 3 317 3 208 1 279 3 5 6 258 3 259 3 28 1 110 7 220 1 150 4 329 2 158 1 
120 1 208 3 299 4 5 4 169 2 258 3 259 1 50 1 220 1 219 8 177 1 53 1 182 1 268 4 127 4 57 1 275 2 317 10 194 1 133 4 279 1 233 1 28 1 110 18 150 8 112 1 241 1 329 1 200 1 158 2 203 1 244 1 159 2 
245 1 328 1 265 1 104 1 184 1 19 1 333 1 
245 1 103 1 104 1 47 1 27 1 218 1 328 1 265 1 184 1 19 1 190 1 333 1 
88 1 163 1 30 1 311 1 3 1 252 1 183 1 284 1 170 1 192 1 288 1 
245 1 248 1 3 1 252 1 102 1 141 1 284 1 170 1 68 1 310 1 88 1 311 1 30 1 328 1 265 2 183 1 314 1 19 2 
78 1 245 2 248 1 3 1 252 3 102 2 141 2 321 1 170 2 286 1 9 1 68 1 310 1 88 1 311 1 30 1 328 1 224 1 265 2 183 1 314 1 19 2 96 1 
245 2 78 1 248 1 3 1 252 3 170 2 9 1 88 1 311 2 126 1 224 1 265 2 183 2 314 1 19 2 96 1 102 2 141 2 321 1 286 1 68 1 30 2 328 1 75 1 
1 1 41 2 78 1 3 1 252 4 170 1 173 1 9 1 88 1 311 3 180 1 183 3 271 1 272 1 141 1 284 1 286 1 30 3 238 1 291 2 73 1 116 1 75 1 
78 1 41 2 1 1 3 1 252 4 141 1 283 1 284 1 170 1 173 1 286 1 9 1 88 1 311 3 30 3 291 2 238 1 73 1 116 1 183 3 271 1 75 1 
88 1 30 1 311 1 3 1 183 1 144 1 
3 3 252 3 301 1 141 1 106 1 284 2 145 1 144 1 170 2 213 1 29 1 88 2 311 6 30 7 290 1 12 1 264 1 181 1 267 1 183 7 202 1 
245 1 248 1 208 1 3 1 299 2 252 1 5 2 302 2 46 2 256 1 170 1 171 1 258 2 259 1 174 1 220 1 219 4 88 1 310 1 311 1 177 1 265 2 183 1 314 1 268 2 188 1 19 2 127 2 97 1 99 1 317 3 278 1 133 2 279 1 102 1 141 1 106 1 28 1 287 1 110 6 68 1 150 3 30 1 328 2 239 1 329 1 158 1 
41 3 1 1 121 2 252 2 44 1 166 1 6 1 82 1 173 1 261 1 311 1 90 2 183 1 271 1 320 1 65 1 283 1 284 1 324 2 198 1 30 1 292 1 70 1 291 3 238 2 73 1 116 1 331 2 
1 1 206 1 3 2 252 2 141 1 106 1 144 1 170 1 88 1 311 2 30 2 264 1 183 2 
163 1 3 1 252 1 106 1 284 1 170 1 8 1 88 1 311 4 30 4 183 4 75 1 192 1 
25 1 3 2 252 1 123 1 141 1 170 1 213 1 286 1 86 1 88 1 311 2 30 2 181 1 183 2 
88 1 237 1 30 1 311 1 3 1 115 1 183 1 284 1 130 1 56 1 
3 1 253 1 252 1 106 1 170 1 29 1 88 1 311 2 30 2 12 1 183 2 
163 1 3 2 252 3 106 1 284 1 170 2 8 1 286 1 29 1 88 2 311 4 30 5 183 5 267 1 202 1 192 1 
163 1 3 2 252 3 106 1 284 1 170 2 8 1 286 1 29 1 88 2 311 4 30 5 263 1 183 5 267 1 192 1 
245 1 248 1 3 1 252 1 102 1 141 1 284 1 170 1 68 1 88 1 311 1 30 1 328 1 126 1 265 2 183 1 314 1 19 2 
3 2 252 1 301 1 141 1 170 1 213 1 286 1 88 1 311 1 30 1 264 1 181 1 183 1 
24 1 328 1 254 1 101 1 111 1 
98 1 24 2 41 2 101 2 254 2 142 1 321 1 65 1 107 1 173 1 111 1 124 1 291 2 312 1 328 1 224 1 116 1 271 1 96 1 
24 1 245 1 32 1 101 1 265 1 281 1 19 1 146 1 111 1 
142 1 107 1 111 1 

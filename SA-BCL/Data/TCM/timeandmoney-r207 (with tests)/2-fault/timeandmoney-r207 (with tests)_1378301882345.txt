#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V ERROR java.lang.NullPointerException (166,339) 
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint; | RETURN | 4885 | return null
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
1 1 47 5 2 1 257 1 216 6 195 2 5 1 52 9 152 1 32 1 109 1 352 9 181 2 113 1 265 1 65 2 88 2 133 1 38 4 376 1 234 1 299 2 68 2 248 1 277 1 73 1 209 3 122 2 
1 1 47 5 2 1 257 1 216 6 195 2 5 1 52 9 152 1 32 1 109 1 352 9 181 2 113 1 265 1 88 2 65 2 133 1 38 4 376 1 234 1 299 2 68 2 248 1 277 1 73 1 209 3 122 2 
1 1 47 6 2 1 257 1 216 7 195 2 5 1 52 10 152 1 32 1 109 1 352 10 181 2 113 1 265 1 88 2 65 2 133 1 38 5 376 1 234 1 299 2 68 2 248 1 277 1 73 1 209 4 122 2 
1 1 47 4 257 1 216 4 195 2 5 1 52 7 152 1 32 1 109 1 352 7 181 2 113 1 265 1 88 2 65 1 133 1 38 3 376 1 234 1 299 2 68 2 248 1 277 1 73 1 209 2 122 2 
65 2 88 1 47 3 2 1 257 1 38 2 216 3 299 1 195 1 5 1 68 1 52 4 248 1 277 1 32 1 209 1 122 1 352 4 
47 1 1 1 257 1 299 1 195 1 206 1 118 1 5 1 68 1 69 1 52 2 277 1 122 1 109 1 352 2 181 1 
277 1 47 2 133 1 38 1 257 1 209 1 216 1 299 2 352 3 195 2 5 1 181 1 52 3 
47 5 257 1 2 1 216 7 195 2 5 1 286 1 52 9 32 1 352 9 181 1 113 1 265 1 65 2 88 1 133 1 38 4 299 2 68 1 248 1 277 1 209 3 122 1 103 1 
47 5 257 1 2 1 216 7 195 2 5 1 286 1 52 9 32 1 352 9 181 1 113 1 265 1 65 2 88 1 133 1 38 4 299 2 68 1 248 1 277 1 209 3 122 1 103 1 
350 1 217 1 380 1 
369 1 332 2 350 1 
204 2 215 2 270 2 132 1 158 2 172 2 355 2 86 1 
337 1 125 2 256 1 215 3 340 1 26 1 285 1 172 3 56 1 220 1 221 1 262 1 31 1 82 2 177 1 83 1 291 1 132 1 321 1 179 1 157 2 374 1 158 2 355 2 266 2 86 1 87 1 357 1 204 2 226 2 270 2 250 1 327 1 99 1 238 1 43 1 364 1 
204 1 318 1 215 1 270 1 158 1 45 1 201 1 172 1 355 1 86 1 
310 1 215 1 297 1 298 1 217 1 246 1 172 1 107 1 97 1 350 1 111 1 158 1 45 1 183 1 
204 1 297 2 215 1 270 1 217 1 246 1 172 1 107 1 97 1 350 1 111 1 158 1 45 1 355 1 183 2 
328 1 297 1 233 1 371 1 183 1 
297 2 350 1 233 1 371 1 217 1 205 1 373 1 183 2 
297 1 233 1 183 1 
213 1 204 1 297 1 215 1 270 1 172 1 318 1 371 1 158 1 45 1 201 1 355 1 183 1 86 1 
350 1 
297 2 350 1 233 1 371 1 217 1 205 1 94 1 183 2 
242 1 230 1 297 5 3 2 231 1 233 2 170 2 217 1 205 1 28 1 301 1 326 1 108 1 350 1 371 2 211 1 354 1 335 2 183 5 
357 1 256 1 296 1 311 1 204 1 215 2 270 1 172 2 56 1 250 1 175 1 262 1 82 1 238 1 83 1 291 1 157 1 158 1 364 1 266 1 
132 1 380 1 
204 1 215 2 270 1 284 1 272 1 172 2 132 2 158 2 355 1 
311 1 339 1 146 1 
132 1 45 1 194 1 241 1 
255 1 296 2 204 4 215 5 298 1 312 1 270 4 272 1 172 5 175 1 132 1 169 1 158 5 355 1 
204 2 215 2 92 1 270 2 158 2 45 1 201 1 172 2 
296 1 204 3 215 3 270 3 132 1 158 3 355 1 172 3 
204 1 215 1 270 1 158 1 45 1 201 1 172 1 
204 1 215 1 270 1 284 1 272 1 158 1 45 1 172 1 355 1 
337 1 125 2 256 1 215 4 26 1 27 1 285 1 246 1 172 4 56 1 175 1 262 1 107 1 82 1 177 1 83 1 291 1 132 1 321 1 179 1 111 1 157 1 374 1 158 3 355 2 266 1 183 1 86 1 87 1 357 1 296 1 204 3 226 1 325 1 297 1 270 3 272 1 250 1 327 1 97 1 238 1 43 1 364 1 45 1 
296 1 204 1 215 2 298 1 270 1 132 1 169 1 158 2 172 2 
296 2 204 3 297 1 215 3 325 1 270 3 272 1 246 1 172 3 175 1 30 1 97 1 107 1 350 1 111 1 158 3 45 1 355 1 183 1 
296 1 204 2 311 1 339 1 215 2 270 2 272 1 172 2 158 2 355 1 
256 1 357 1 215 1 172 1 250 1 56 1 262 1 82 1 238 1 83 1 291 1 132 1 157 1 364 1 266 1 
256 1 357 1 358 1 215 1 172 1 56 1 262 1 82 1 238 1 291 1 132 1 157 1 364 1 266 1 203 1 
337 1 125 2 311 2 339 2 26 1 342 1 176 1 177 2 156 1 321 1 179 1 374 1 64 1 324 1 226 4 117 1 273 1 39 1 166 1 99 2 43 1 307 1 254 1 146 2 
107 1 204 1 215 1 92 1 270 1 158 1 45 1 172 1 
130 1 36 1 
130 1 36 1 
10 1 366 1 
10 1 366 1 
10 1 366 1 
141 1 130 1 36 1 
141 1 130 1 36 1 
329 1 130 1 36 1 
10 1 130 2 4 1 9 1 366 1 36 2 
141 1 130 1 36 1 
93 1 130 1 36 1 
93 1 130 1 36 1 
93 1 130 1 36 1 
22 1 214 1 215 2 6 1 7 1 172 2 368 1 130 1 132 1 294 1 158 2 36 1 183 1 66 1 204 2 227 1 297 1 270 2 16 1 377 1 163 1 329 1 363 1 192 1 
160 1 22 2 227 1 297 2 282 2 136 1 343 1 16 3 235 1 6 2 330 1 130 2 350 1 9 1 363 2 34 1 294 2 36 2 183 2 
88 1 122 1 68 1 
122 1 68 1 69 1 
88 2 96 1 122 3 197 1 69 1 173 1 
88 1 96 1 122 2 197 1 69 1 379 1 
88 1 96 2 122 2 197 1 69 1 
336 1 244 1 214 1 3 1 283 1 170 1 217 1 7 1 108 1 368 1 369 1 371 4 350 2 159 1 183 5 64 1 324 1 91 2 297 5 230 3 233 1 273 1 39 1 205 1 301 2 252 1 332 3 74 2 75 1 335 1 145 1 149 2 
23 1 3 2 245 5 283 3 170 2 217 1 53 1 367 1 108 1 368 4 369 3 371 7 290 1 350 5 131 1 354 1 159 2 267 1 183 9 64 3 324 3 297 9 230 8 233 6 273 3 39 3 205 1 301 6 328 5 332 9 74 6 75 2 145 1 335 2 149 6 
336 1 244 1 3 1 283 1 170 1 217 1 368 1 369 2 350 3 371 2 354 1 159 1 183 3 64 1 91 1 324 1 297 3 230 3 273 1 39 1 301 2 332 4 74 2 75 1 335 1 149 2 
336 1 244 1 3 1 283 2 170 1 217 1 53 1 367 1 368 2 369 3 350 4 371 3 354 1 159 1 267 1 183 4 64 2 91 2 324 2 297 4 230 5 273 2 39 2 301 4 332 7 74 4 75 1 335 1 149 4 
238 1 199 1 380 1 
305 1 238 1 
116 1 
357 1 262 1 238 1 
90 1 238 1 
357 1 238 1 
357 1 262 1 280 1 238 3 199 2 20 1 
324 1 67 2 226 7 359 1 342 2 273 1 345 1 302 1 95 1 55 1 58 1 99 4 177 3 307 3 264 1 292 1 382 1 
324 1 67 2 226 7 359 1 342 2 273 1 345 1 302 1 95 1 55 1 58 1 99 4 177 3 307 3 264 1 292 1 382 1 
324 1 67 2 226 7 359 1 342 2 273 1 345 1 302 1 95 1 55 1 71 1 58 1 99 4 177 3 307 3 264 1 292 1 382 1 
337 1 125 2 26 1 283 3 342 5 313 3 345 5 55 1 196 1 58 2 177 15 351 1 264 1 292 2 179 1 35 4 374 1 114 1 202 1 64 3 67 3 324 4 226 31 359 2 39 3 273 4 162 1 302 1 95 2 99 16 307 10 334 1 382 1 124 1 
337 2 125 4 243 1 26 2 342 3 345 1 55 1 58 1 370 1 177 4 179 2 292 1 264 1 374 2 324 1 67 2 226 9 359 1 273 1 302 1 95 1 99 5 307 4 334 1 
47 1 256 1 257 1 281 1 216 1 195 1 5 1 52 2 56 1 173 1 82 1 223 1 352 2 157 1 293 1 181 1 266 1 88 1 89 1 375 1 299 1 271 1 68 1 69 1 277 1 190 1 122 2 240 1 78 1 381 1 
47 1 256 1 258 1 281 1 216 2 195 1 5 1 52 3 173 1 56 1 82 1 223 1 352 3 157 1 293 1 181 1 266 1 88 1 89 1 375 1 299 1 271 1 68 1 69 1 188 1 277 1 190 1 122 2 19 1 240 1 
47 1 256 1 281 1 216 2 5 1 52 2 56 1 173 1 82 1 223 1 352 2 157 1 181 1 293 1 266 1 88 1 375 1 271 1 68 1 69 1 188 1 277 1 122 2 19 1 240 1 
256 1 258 1 127 1 195 1 52 1 218 1 56 1 349 1 82 1 352 1 157 1 293 2 181 2 266 1 357 1 375 2 299 1 238 1 362 1 253 1 44 1 364 1 240 2 
88 1 256 1 89 1 257 1 375 1 281 1 271 1 299 1 195 1 68 1 69 1 52 1 188 1 173 1 56 1 190 1 82 1 223 1 122 2 352 1 157 1 181 1 293 1 381 1 266 1 240 1 
185 1 
49 1 50 1 3 1 341 1 246 1 56 1 347 1 108 1 107 1 350 2 157 2 111 1 200 2 158 1 159 1 356 1 357 1 297 5 298 1 161 2 205 3 301 2 119 1 72 1 253 1 364 2 256 1 310 1 24 1 215 1 170 1 217 1 172 1 315 2 82 2 263 2 369 2 84 2 266 2 183 5 225 1 186 2 228 4 230 2 135 1 187 2 233 6 137 1 276 1 97 1 332 2 238 1 44 1 335 1 45 1 
356 1 225 1 310 1 228 2 297 3 24 1 215 1 298 1 233 2 187 1 341 1 205 1 94 1 276 1 246 1 172 1 97 1 107 1 111 1 158 1 45 1 183 3 
310 1 215 1 24 1 341 1 217 1 246 1 172 1 107 1 350 1 111 1 158 1 183 3 356 1 225 1 228 3 186 1 297 3 298 1 233 1 205 1 94 1 276 1 97 1 45 1 
310 1 215 1 24 1 341 1 217 1 246 1 172 1 107 1 350 1 84 1 111 1 158 1 183 3 356 1 225 1 228 3 186 1 297 3 298 1 187 1 233 2 205 1 94 1 276 1 97 1 45 1 
0 1 49 1 3 1 341 1 246 1 347 1 107 1 108 1 350 5 111 1 158 1 200 2 356 1 297 5 298 1 205 3 161 2 301 1 21 1 310 1 215 1 24 1 170 1 217 5 172 1 80 1 315 2 263 2 222 1 369 2 84 4 85 1 183 5 225 1 228 6 186 4 230 1 187 4 233 7 94 1 276 1 97 1 45 1 335 1 
49 1 310 1 24 1 3 1 215 1 341 1 170 1 217 1 246 1 172 1 315 2 347 1 108 1 107 1 263 2 369 2 350 2 84 2 111 1 200 2 158 1 183 4 356 1 225 1 186 2 228 4 230 1 297 4 298 1 135 1 187 2 233 4 205 2 161 2 276 1 301 1 97 1 332 2 335 1 45 1 
0 1 49 1 310 1 3 1 215 1 24 1 341 1 170 1 217 1 246 1 80 1 172 1 315 2 347 1 107 1 108 1 263 2 369 2 350 1 84 2 111 1 200 2 158 1 183 4 356 1 225 1 186 2 228 4 230 1 297 4 298 1 187 2 233 4 205 2 161 2 276 1 301 1 97 1 45 1 335 1 21 1 
0 1 49 1 310 1 3 1 215 1 24 1 341 1 170 1 217 1 246 1 80 1 172 1 315 2 347 1 107 1 108 1 263 2 369 2 350 1 84 2 111 1 200 2 158 1 183 4 356 1 225 1 186 2 228 4 230 1 297 4 298 1 187 2 233 4 205 2 161 2 276 1 301 1 97 1 45 1 335 1 21 1 
49 1 310 1 3 1 215 1 24 1 341 1 170 1 217 1 260 2 246 1 80 1 172 1 54 1 8 1 107 1 108 1 263 2 288 2 350 1 84 2 111 1 200 2 158 1 183 4 356 1 225 1 186 2 228 4 230 1 297 4 298 1 187 2 233 4 205 2 276 1 301 1 97 1 332 2 102 1 45 1 335 1 
0 1 49 1 310 1 3 1 215 1 24 1 341 1 170 1 217 1 246 1 80 1 172 1 315 2 347 1 108 1 107 1 263 2 369 2 222 1 350 1 84 3 111 1 200 2 158 1 183 4 356 1 225 1 228 5 186 3 230 1 297 4 298 1 187 3 233 5 205 2 161 2 276 1 301 1 97 1 335 1 45 1 21 1 
0 1 49 1 310 1 3 1 215 1 24 1 341 1 170 1 217 1 246 1 80 1 172 1 315 2 347 1 108 1 107 1 263 2 369 2 222 1 350 1 84 3 111 1 200 2 158 1 183 4 356 1 225 1 228 5 186 3 230 1 297 4 298 1 187 3 233 5 205 2 161 2 276 1 301 1 97 1 335 1 45 1 21 1 
49 1 310 1 24 1 3 1 215 1 341 1 170 1 217 1 260 2 246 1 172 1 8 1 108 1 107 1 263 2 288 2 350 1 84 2 111 1 200 2 158 1 183 4 356 1 225 1 186 2 228 4 230 1 297 4 298 1 135 1 187 2 233 4 205 2 276 1 301 1 97 1 332 2 335 1 45 1 
337 1 125 2 311 1 339 1 26 1 342 2 55 1 176 1 177 3 321 1 132 2 179 1 292 1 264 1 374 1 324 1 67 1 226 6 359 1 273 1 302 1 99 3 380 1 43 1 307 2 146 1 
337 2 125 4 48 1 311 11 339 4 51 1 340 1 342 1 26 2 283 2 345 1 313 3 196 1 177 6 320 1 132 1 321 2 179 2 35 3 374 2 87 1 64 1 324 2 226 14 39 2 273 1 360 1 99 8 307 2 43 1 365 1 146 11 124 1 
125 2 337 1 339 1 51 1 215 1 340 1 26 1 129 1 172 1 175 1 177 1 132 1 321 1 179 1 353 1 374 1 158 1 87 1 296 1 204 1 226 2 270 1 189 1 99 1 43 1 194 1 
337 3 339 7 51 1 340 1 342 4 283 2 285 2 345 4 55 1 56 2 291 2 110 2 292 1 157 3 158 1 64 2 67 1 296 1 357 2 204 1 359 1 300 1 302 1 250 2 307 8 364 1 308 1 125 6 256 2 311 7 215 3 26 3 172 3 175 1 262 2 82 3 177 10 83 2 132 2 321 3 264 1 179 3 374 3 266 3 87 1 37 2 324 3 134 1 226 20 270 1 273 3 39 2 188 1 41 2 236 2 99 10 238 2 43 3 146 7 
337 2 125 4 256 2 106 1 215 1 340 1 128 1 26 2 172 1 56 2 31 2 82 7 154 1 176 1 177 1 372 1 321 2 157 8 179 2 158 1 374 2 266 8 87 1 296 1 357 2 204 1 226 2 270 1 207 1 188 1 99 1 238 3 253 1 43 2 44 1 105 1 364 2 46 1 78 1 
337 1 125 2 311 1 339 1 51 1 215 1 342 1 26 1 283 1 29 1 172 1 177 2 321 1 179 1 374 1 158 1 355 1 64 1 324 1 204 1 226 3 270 1 272 1 39 1 273 1 99 1 307 1 43 1 146 1 
125 2 337 1 324 1 311 1 339 1 226 2 26 1 117 1 39 1 345 1 99 2 176 1 307 1 43 1 321 1 179 1 374 1 146 1 
125 2 337 1 64 1 311 1 339 1 226 2 342 1 26 1 273 1 176 1 177 2 307 1 43 1 321 1 156 1 179 1 374 1 146 1 
337 1 125 2 311 2 339 2 283 1 26 1 342 1 345 1 176 1 177 2 321 1 179 1 374 1 64 1 324 1 226 4 39 1 273 1 99 2 43 1 307 2 146 2 
125 2 337 1 324 1 311 1 339 1 226 2 26 1 117 1 39 1 345 1 99 2 154 1 307 1 43 1 321 1 179 1 374 1 146 1 
125 2 337 1 64 1 311 1 339 1 226 2 342 1 26 1 273 1 154 1 177 2 307 1 43 1 321 1 156 1 179 1 374 1 146 1 
337 1 125 2 311 2 339 2 283 1 26 1 342 1 345 1 154 1 177 2 321 1 179 1 374 1 64 1 324 1 226 4 39 1 273 1 99 2 43 1 307 2 146 2 
337 1 125 2 311 2 339 2 283 1 26 1 342 1 345 1 177 2 321 1 179 1 374 1 64 1 324 1 226 4 39 1 273 1 99 2 43 1 307 2 146 2 
125 2 337 1 256 1 215 1 340 1 26 1 285 1 172 1 56 1 262 1 82 1 83 1 177 1 291 1 132 1 321 1 157 1 179 1 374 1 266 1 87 1 357 1 226 2 250 1 99 1 238 1 43 1 364 1 
125 2 337 1 256 1 215 1 340 1 26 1 172 1 56 1 262 1 82 1 177 1 291 1 132 1 321 1 157 1 179 1 374 1 266 1 203 1 87 1 357 1 226 2 358 1 17 1 99 1 238 1 43 1 364 1 
337 1 125 2 311 2 339 2 51 1 283 1 26 1 342 1 345 1 177 2 321 1 179 1 374 1 64 1 324 1 226 4 39 1 273 1 99 2 43 1 307 2 146 2 
125 2 337 1 256 1 311 2 339 2 215 1 342 1 26 1 283 1 285 1 345 1 172 1 56 1 262 1 82 1 177 2 83 1 291 1 321 1 157 1 179 1 374 1 266 1 64 1 324 1 357 1 226 4 273 1 39 1 41 1 250 1 99 2 238 1 307 2 43 1 146 2 78 1 
337 1 125 2 311 1 339 1 51 1 215 1 26 1 283 1 345 1 172 1 177 1 62 1 321 1 179 1 374 1 158 1 355 1 64 1 324 1 204 1 226 3 270 1 273 1 272 1 39 1 99 2 307 1 43 1 146 1 
337 2 125 4 243 1 126 1 342 3 26 2 283 3 313 1 345 3 196 1 317 1 33 1 177 10 179 2 35 2 374 2 295 2 64 3 324 3 226 19 229 1 39 3 273 3 303 1 120 1 99 9 100 2 307 6 333 1 124 1 
337 3 125 6 243 1 342 2 26 3 283 3 345 2 313 2 196 2 33 1 177 12 179 3 374 3 35 2 295 1 64 2 324 3 226 26 229 2 12 1 273 2 39 3 249 1 303 1 208 1 120 1 99 14 361 1 100 4 331 1 191 1 307 4 333 2 334 2 
243 1 337 3 283 4 342 4 345 4 55 1 196 3 348 1 292 1 64 4 295 1 67 1 359 1 12 1 302 1 303 1 249 1 208 1 120 1 361 1 307 8 124 1 125 6 126 1 26 3 313 3 33 1 177 21 179 3 264 1 374 3 35 4 324 5 226 41 229 2 273 5 39 4 99 20 100 4 331 1 191 1 333 1 334 1 
337 4 125 8 243 1 126 1 342 4 26 4 283 4 313 3 345 3 55 1 196 3 348 1 33 1 177 18 264 1 292 1 179 4 35 4 374 4 295 1 64 3 67 1 324 5 226 38 229 2 359 1 12 1 39 4 273 4 302 1 249 1 303 1 208 1 361 1 120 1 99 20 100 4 331 1 191 1 307 7 333 1 334 2 124 1 
337 2 125 4 243 1 342 7 26 2 283 7 313 4 345 7 55 1 196 2 33 1 177 25 264 1 292 1 179 2 35 4 374 2 295 1 64 7 67 1 324 8 226 52 229 1 359 1 12 1 39 7 273 8 302 1 360 2 249 1 303 1 208 1 361 1 120 1 99 27 100 4 331 1 191 1 307 14 333 1 334 1 124 2 
165 1 22 1 130 1 9 1 363 1 343 1 235 1 294 1 6 1 36 1 
329 1 192 1 
346 1 261 1 22 1 268 1 130 1 363 1 294 1 6 1 36 1 
141 1 143 1 
93 1 4 1 219 1 
22 1 227 1 297 1 282 1 136 1 343 1 16 2 235 1 6 1 330 1 130 1 350 1 9 1 363 1 34 1 294 1 36 1 183 1 
22 1 227 1 297 1 282 1 136 1 343 1 16 2 235 1 6 1 330 1 130 1 350 1 9 1 363 1 34 1 294 1 36 1 183 1 
22 1 227 1 297 1 282 1 136 1 343 1 16 2 235 1 6 1 330 1 130 1 350 1 9 1 363 1 34 1 294 1 36 1 183 1 
141 1 4 1 143 1 
141 1 4 1 143 1 
93 1 219 1 
93 1 4 1 219 1 
377 1 163 1 
22 1 214 1 215 2 282 1 6 1 7 1 172 2 368 1 130 1 371 1 132 1 294 1 158 2 36 1 183 1 66 1 204 2 297 1 136 1 270 2 16 1 377 1 163 1 142 1 329 1 363 1 192 1 
125 2 337 1 256 1 51 1 215 2 25 1 340 1 26 1 172 2 56 1 31 2 82 2 177 1 372 1 321 1 157 2 179 1 374 1 158 2 266 2 63 1 87 1 357 1 115 1 226 2 207 1 99 1 238 1 43 1 123 1 148 1 
88 1 256 1 338 1 281 1 68 1 69 1 188 1 171 1 173 1 56 1 82 2 210 1 190 1 223 1 122 2 157 2 266 2 240 1 78 1 
88 1 256 1 281 1 68 1 138 1 69 1 188 1 171 1 173 1 56 1 82 1 190 1 223 1 122 2 157 1 266 1 240 1 
256 1 357 1 247 1 56 1 82 1 210 1 238 1 362 1 253 1 157 1 44 1 364 1 266 1 240 1 
88 1 256 1 338 1 281 1 68 1 69 1 188 1 171 1 173 1 56 1 82 1 210 1 190 1 223 1 122 2 157 1 266 1 240 1 
144 1 
230 1 231 1 350 1 217 1 380 1 211 1 301 1 
297 1 3 1 230 1 233 1 170 1 217 1 205 1 161 1 301 1 315 1 347 1 108 1 332 1 369 1 350 2 335 1 183 1 
3 4 280 1 283 2 56 3 108 4 350 8 110 2 198 1 199 2 157 3 159 2 64 2 357 3 297 5 205 3 301 8 72 1 305 3 18 2 74 6 211 1 364 1 76 2 78 1 79 1 309 1 256 4 170 4 217 2 174 1 262 3 82 3 369 6 178 2 322 2 266 3 184 2 183 5 90 2 324 2 230 9 231 1 233 5 39 2 273 2 275 2 97 2 278 2 238 10 332 12 335 4 193 1 147 2 149 6 
3 2 283 2 170 2 217 2 313 1 196 1 108 2 59 1 60 1 369 3 350 5 35 1 159 1 183 1 64 2 324 2 297 1 230 8 12 1 233 1 39 2 273 2 205 1 301 5 249 1 72 1 361 1 332 6 331 1 74 5 191 1 76 1 335 2 147 2 149 5 
213 1 215 1 3 1 170 1 172 1 108 1 318 1 292 1 264 1 158 1 201 1 355 1 183 1 86 1 324 2 204 1 297 1 230 2 359 1 270 1 273 1 301 2 164 1 76 1 45 1 335 1 147 2 21 1 
3 1 230 1 231 1 170 1 217 1 301 1 108 1 350 1 211 1 335 1 
64 2 324 2 230 5 283 2 39 2 273 2 301 5 332 10 369 5 74 5 350 5 110 1 76 1 147 2 149 5 
297 1 350 1 233 1 217 1 205 1 183 1 
256 1 3 2 170 2 56 1 108 1 82 4 198 1 157 4 354 1 266 4 159 2 183 3 357 1 230 2 297 3 233 4 137 1 205 2 301 2 119 1 72 2 167 1 238 1 253 1 104 1 44 1 364 2 335 2 193 2 
337 1 125 2 256 1 215 3 26 1 285 1 172 3 56 1 262 1 82 1 177 1 83 1 291 1 132 1 321 1 179 1 157 1 158 2 374 1 266 1 355 2 86 1 87 1 357 1 204 2 226 1 270 2 250 1 327 1 238 1 43 1 364 1 
67 1 3 1 230 1 170 1 217 2 301 2 108 1 72 1 369 2 332 4 74 2 350 4 335 1 159 1 149 2 
314 1 363 1 6 1 
314 1 363 1 6 1 
232 1 363 1 377 1 235 1 6 1 
314 1 363 1 6 1 
279 1 363 1 6 1 
279 1 363 1 6 1 
279 1 363 1 6 1 
363 1 6 1 
130 1 36 1 
125 4 337 2 67 1 324 1 226 8 359 1 342 2 26 2 273 1 345 1 302 1 55 1 99 4 177 4 307 3 264 1 179 2 292 1 374 2 334 1 
67 1 324 1 226 6 359 1 342 2 273 1 302 1 55 1 99 3 177 3 380 1 307 2 292 1 264 1 
125 2 337 1 64 1 324 1 226 4 342 1 26 1 283 1 273 1 39 1 345 1 57 1 99 2 177 2 307 2 179 1 374 1 
64 1 324 1 226 7 342 1 283 1 273 1 39 1 313 1 345 1 196 1 99 3 177 4 307 2 35 2 124 1 
125 4 337 2 283 2 342 5 26 2 345 4 313 2 55 1 177 12 320 1 264 1 292 2 179 2 35 2 374 2 112 1 64 2 67 1 324 3 226 23 359 2 39 2 273 3 302 1 360 1 99 11 307 9 334 2 124 1 
226 1 177 1 35 1 
226 1 99 1 313 1 
337 1 125 2 64 1 324 1 226 6 26 1 283 1 342 2 39 1 273 1 345 1 57 1 99 3 177 3 110 1 307 3 179 1 374 1 
337 1 125 2 243 1 26 1 283 2 342 1 345 1 313 1 196 1 177 6 179 1 35 1 374 1 64 2 324 2 226 12 12 1 39 2 273 2 249 1 361 1 99 6 331 1 191 1 307 2 
324 1 226 6 359 1 342 1 273 1 345 1 99 3 177 3 307 2 264 1 292 1 
125 2 337 1 226 3 359 1 342 1 26 1 345 1 302 1 55 1 99 1 177 2 307 2 292 1 179 1 112 1 374 1 334 1 
337 1 125 2 243 1 324 2 226 10 359 2 26 1 342 3 273 2 345 2 164 1 99 5 177 5 307 5 179 1 292 2 264 1 374 1 
243 1 125 2 337 1 324 1 226 2 26 1 39 1 345 1 99 2 307 1 179 1 374 1 
243 1 125 2 337 1 64 1 324 1 226 4 342 1 26 1 283 1 273 1 39 1 345 1 99 2 177 2 307 2 179 1 374 1 
243 1 125 6 337 3 126 1 226 3 359 1 26 3 342 1 345 1 99 1 177 2 307 2 179 3 292 1 112 1 374 3 334 1 
337 5 125 10 243 1 126 1 26 5 283 3 342 7 313 3 345 5 55 1 196 1 57 1 351 1 177 18 264 2 292 3 179 5 112 1 35 4 374 5 202 1 64 3 67 1 324 5 226 34 359 3 39 3 273 5 162 1 302 1 99 16 307 12 334 2 124 1 
337 1 125 2 243 1 26 1 342 2 313 1 55 1 196 1 177 4 179 1 292 1 264 1 35 1 374 1 67 1 324 1 226 8 359 1 273 1 302 1 361 1 99 4 307 2 
243 1 337 2 125 4 342 2 26 2 283 1 313 1 345 1 55 1 196 1 57 1 177 5 264 1 292 1 179 2 35 2 374 2 67 1 324 2 226 11 359 1 273 1 39 1 302 1 361 1 99 6 307 3 124 1 
337 3 125 6 243 1 26 3 283 2 342 3 345 1 313 1 55 1 196 1 57 1 177 10 264 1 292 1 179 3 35 1 374 3 64 2 67 1 324 3 226 19 359 1 12 1 39 2 273 3 302 1 249 1 361 1 99 9 331 1 191 1 307 4 334 1 
337 3 125 6 243 1 26 3 283 2 342 3 345 2 313 1 55 1 196 1 57 1 177 7 264 1 292 1 179 3 35 1 374 3 64 1 67 1 324 3 226 17 359 1 12 1 39 2 273 2 302 1 249 1 361 1 99 10 331 1 191 1 307 5 334 1 
337 1 125 2 243 1 26 1 342 2 313 1 55 1 196 1 177 4 179 1 292 1 264 1 35 1 374 1 67 1 324 1 226 8 359 1 273 1 302 1 361 1 99 4 307 2 
337 1 125 2 243 1 26 1 283 2 342 1 345 1 313 1 196 1 177 6 179 1 35 1 374 1 64 2 324 2 226 12 12 1 39 2 273 2 249 1 361 1 99 6 331 1 191 1 307 2 
337 4 125 8 243 1 26 4 283 2 342 3 345 2 313 1 55 1 196 1 57 1 177 8 264 1 292 1 179 4 35 1 374 4 64 1 67 1 324 3 226 18 359 1 12 1 39 2 273 2 302 1 249 1 361 1 99 10 331 1 191 1 307 5 334 2 
243 1 337 4 125 8 126 1 26 4 283 3 342 3 345 3 313 1 196 1 177 7 179 4 35 1 374 4 64 2 324 3 226 16 12 1 39 3 273 2 249 1 361 1 99 9 331 1 191 1 307 6 334 2 
324 1 226 7 359 3 342 3 273 1 302 1 345 3 55 2 99 3 177 4 307 6 292 3 264 1 
243 1 337 4 125 8 126 1 26 4 283 2 342 3 345 1 313 1 55 1 196 1 177 8 264 1 292 1 179 4 35 1 374 4 64 1 67 1 324 3 226 18 359 1 12 1 39 2 273 2 302 1 249 1 361 1 99 10 331 1 191 1 307 4 334 2 
215 1 298 1 132 1 158 1 169 1 378 1 172 1 
323 1 215 1 298 1 13 1 378 1 172 1 153 1 289 1 132 1 180 1 169 1 158 1 
256 1 357 1 82 1 238 1 253 1 380 1 44 1 157 1 364 1 266 1 56 1 
357 1 256 1 296 1 204 1 215 2 270 1 172 2 56 1 262 1 82 1 238 1 83 1 291 1 132 1 157 1 158 1 364 1 266 1 
256 1 215 2 172 2 56 1 262 2 107 1 82 1 83 1 291 1 132 1 157 1 111 1 158 2 266 1 296 1 357 2 90 1 204 1 270 2 238 3 18 1 45 1 193 1 
256 1 215 2 172 2 56 1 262 2 107 1 82 2 291 1 132 1 157 2 111 1 158 2 266 2 203 1 296 1 357 2 90 1 204 1 270 2 306 1 238 3 18 1 45 1 193 1 
90 1 357 1 256 1 297 2 233 1 217 1 56 1 97 1 262 1 305 1 82 3 306 1 238 4 350 1 18 1 224 1 199 1 157 3 364 1 193 1 266 3 212 1 183 2 
90 1 357 1 256 1 297 2 233 1 217 1 275 1 56 1 97 1 262 1 305 1 82 3 306 1 238 4 350 1 18 1 199 1 157 3 364 1 193 1 266 3 183 2 
256 1 82 1 128 1 157 1 266 1 56 1 
357 2 256 3 106 1 280 1 269 1 128 1 188 1 56 2 31 1 262 1 98 1 82 6 168 1 238 3 372 1 157 7 105 1 364 2 46 1 78 1 266 7 
337 2 339 1 51 1 342 2 285 1 56 1 55 1 291 1 157 1 292 1 158 1 296 1 357 1 67 1 204 1 359 1 302 1 250 1 307 2 78 1 125 4 256 1 311 1 215 2 25 1 26 2 172 2 262 1 82 1 83 1 177 3 321 2 132 2 179 2 264 1 374 2 266 1 324 1 226 6 270 1 273 1 41 1 236 1 99 3 238 1 43 2 146 1 
3 2 170 2 217 1 108 2 82 1 350 1 371 1 198 1 178 1 199 1 157 1 322 1 266 1 183 3 184 1 230 1 297 3 231 1 233 2 205 1 275 1 301 1 97 1 305 1 238 2 211 1 364 1 335 2 
309 1 357 1 256 2 280 1 128 1 56 1 262 1 82 2 238 2 199 1 157 2 78 1 266 2 
256 1 357 1 287 1 56 1 82 4 306 1 238 1 253 1 157 4 44 1 364 1 266 4 78 1 
357 1 256 2 134 1 269 1 56 1 316 1 262 1 98 1 82 2 238 1 157 2 193 1 266 2 77 1 
256 1 82 1 223 1 122 1 68 1 157 1 69 1 364 1 266 1 56 1 
63 1 357 1 256 1 188 1 56 1 82 2 238 1 372 1 157 2 78 1 266 2 
357 2 256 2 287 1 56 2 82 4 238 3 253 1 372 1 44 1 157 5 364 1 105 1 193 1 266 5 78 1 46 1 
357 2 256 3 269 1 56 2 316 1 98 1 262 1 82 2 101 1 238 2 253 1 372 1 157 2 364 1 77 1 266 2 78 1 
357 1 256 1 296 1 204 1 215 2 270 1 172 2 56 1 262 1 82 1 238 1 291 1 132 1 157 1 158 1 364 1 266 1 203 1 
357 1 256 2 280 1 269 1 56 1 262 1 98 1 82 1 168 1 238 1 157 1 193 1 266 1 
151 1 121 1 259 1 132 1 237 1 
11 1 297 2 325 1 259 2 217 1 246 1 237 2 70 1 151 2 97 1 107 1 61 1 121 1 350 1 371 1 132 1 111 1 45 1 183 2 
115 1 215 1 259 1 172 1 151 1 121 1 123 1 158 1 148 1 
70 1 61 1 121 1 
277 1 47 1 380 1 5 1 
277 1 47 1 299 1 352 1 195 1 5 1 52 1 
375 1 181 1 52 1 
47 1 1 2 257 1 299 1 195 1 40 1 5 1 52 3 150 1 277 1 251 1 352 3 
277 1 65 1 47 1 216 1 299 1 352 2 195 1 5 1 52 2 
88 1 47 1 38 1 32 1 257 1 122 1 299 1 352 1 195 1 68 1 52 1 
277 1 47 1 257 1 299 1 352 1 195 1 52 1 
277 2 257 1 299 1 352 1 195 1 5 1 52 1 
47 1 257 1 299 2 195 2 274 1 52 2 139 1 277 1 140 1 352 2 
277 1 47 2 38 1 257 1 209 1 216 2 299 1 352 3 195 1 5 1 113 1 52 3 265 1 
88 1 47 1 257 1 216 1 299 1 195 1 15 1 5 1 68 1 69 1 52 2 173 1 277 1 122 2 352 2 
277 1 65 1 47 2 38 1 2 1 257 1 209 1 216 2 299 2 352 4 195 2 5 1 52 4 
277 1 47 1 257 1 299 1 352 1 195 1 5 1 52 1 
1 1 47 3 38 1 216 2 299 1 195 1 40 1 5 2 52 4 81 1 277 2 251 1 209 1 352 4 
277 1 47 1 257 1 216 1 319 1 299 1 352 2 195 1 5 1 286 1 52 2 182 1 
47 1 1 2 257 1 299 1 195 1 344 1 40 2 5 1 52 3 277 1 251 1 352 3 
47 2 155 1 14 1 42 2 
257 1 299 1 352 1 195 1 52 1 304 1 
277 1 47 1 257 1 216 1 299 1 352 2 195 1 5 1 113 1 52 2 
239 1 
277 1 47 1 257 1 299 1 352 1 195 1 5 1 52 1 
277 1 47 1 1 1 257 1 216 1 299 1 352 3 195 1 5 1 113 1 52 3 
47 1 38 1 209 1 81 1 
277 1 47 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V ERROR java.lang.NullPointerException 128 91 329 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | STATEMENT | 7926 | stmt -> ;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator; | OPERATOR | 1435 | += -> ^=
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
159 2 358 2 0 1 312 1 133 2 106 1 273 1 7 1 338 6 190 2 193 1 234 1 191 2 18 4 235 1 344 2 178 5 120 1 347 1 151 1 241 1 309 3 264 2 28 1 78 1 126 9 244 9 30 1 
159 2 358 2 0 1 312 1 133 2 106 1 273 1 7 1 338 6 190 2 193 1 234 1 191 2 18 4 235 1 344 2 178 5 120 1 347 1 151 1 241 1 309 3 264 2 28 1 78 1 126 9 244 9 30 1 
159 2 358 2 0 1 312 1 133 2 106 1 273 1 7 1 338 7 190 2 193 1 234 1 191 2 18 5 235 1 344 2 178 6 120 1 347 1 151 1 241 1 309 4 264 2 28 1 78 1 126 10 244 10 30 1 
159 2 358 2 0 1 312 1 133 2 273 1 7 1 338 4 190 2 193 1 234 1 191 2 18 3 235 1 344 2 178 4 120 1 347 1 151 1 241 1 309 2 264 1 28 1 78 1 126 7 244 7 30 1 
18 2 159 1 358 1 344 1 178 3 347 1 133 1 106 1 151 1 338 3 241 1 309 1 191 1 264 2 28 1 126 4 244 4 30 1 
235 1 358 1 344 1 178 1 120 1 133 1 107 1 241 1 190 1 191 1 28 1 222 1 126 2 244 2 30 1 277 1 
18 1 338 1 358 2 241 1 309 1 312 1 178 2 190 1 191 2 28 1 126 3 244 3 30 1 
159 1 18 4 224 1 358 2 344 1 312 1 178 5 347 1 133 1 106 1 7 1 316 1 151 1 338 7 241 1 309 3 190 1 191 2 264 2 78 1 28 1 126 9 244 9 30 1 
159 1 18 4 224 1 358 2 344 1 312 1 178 5 347 1 133 1 106 1 7 1 316 1 151 1 338 7 241 1 309 3 190 1 191 2 264 2 78 1 28 1 126 9 244 9 30 1 
233 1 37 1 348 1 
183 2 152 1 348 1 
81 2 276 2 57 1 13 2 77 1 256 2 127 2 80 2 
81 2 57 1 130 1 313 1 271 1 272 1 135 1 207 1 109 1 10 2 209 1 12 1 276 2 138 1 13 3 194 1 14 1 343 1 236 1 145 1 280 1 48 2 23 1 196 2 256 3 100 1 260 1 243 1 77 1 379 2 29 1 331 1 204 1 245 1 53 2 127 2 80 2 
32 1 81 1 55 1 276 1 290 1 57 1 13 1 256 1 127 1 80 1 
269 1 32 1 37 1 247 1 348 1 256 1 180 1 50 1 62 1 308 1 13 1 265 1 299 1 127 1 
269 1 32 1 81 1 37 1 247 2 348 1 256 1 180 1 62 2 308 1 276 1 13 1 299 1 80 1 127 1 
62 1 74 1 4 1 247 1 59 1 
254 1 62 2 74 1 37 1 149 1 247 2 348 1 59 1 
62 1 74 1 247 1 
32 1 81 1 55 1 290 1 57 1 247 1 59 1 256 1 62 1 276 1 13 1 172 1 80 1 127 1 
348 1 
254 1 62 2 307 1 74 1 37 1 247 2 348 1 59 1 
17 1 254 1 66 2 21 1 146 1 84 2 118 1 37 1 247 5 348 1 59 2 8 2 136 1 88 1 62 5 218 1 74 2 263 1 286 1 
233 1 77 1 
81 1 256 2 365 1 89 1 276 1 13 2 77 2 127 2 80 1 
208 1 112 1 157 1 
280 1 48 1 23 1 375 1 256 1 207 1 109 1 260 1 138 1 13 1 77 1 379 1 29 1 331 1 245 1 53 1 
280 1 58 1 23 1 48 1 68 1 256 2 207 1 109 1 260 1 276 1 138 1 13 2 379 1 331 1 29 1 112 1 245 1 53 1 80 1 127 1 
81 1 276 3 68 1 13 3 77 1 256 3 127 3 80 3 
32 1 276 1 290 1 13 1 256 1 127 1 80 1 
32 1 365 1 81 1 89 1 276 1 13 1 256 1 127 1 80 1 
269 1 32 1 81 2 130 1 58 1 57 1 313 1 247 1 272 1 134 1 135 1 207 1 109 1 365 1 10 1 62 1 276 3 138 1 13 4 194 1 14 1 299 1 343 1 236 1 145 1 280 1 23 1 48 1 68 1 196 2 258 1 256 4 180 1 260 1 308 1 77 1 379 1 331 1 29 1 204 1 245 1 53 1 127 3 80 3 
50 1 311 1 276 1 13 2 68 1 77 1 256 2 127 2 80 1 
32 1 269 1 81 1 58 1 68 2 247 1 348 1 256 3 258 1 180 1 365 1 62 1 308 1 276 3 13 3 299 1 16 1 80 3 127 3 
81 1 68 1 256 2 365 1 276 2 13 2 112 1 157 1 80 2 127 2 
280 1 48 1 23 1 256 1 207 1 109 1 260 1 138 1 13 1 77 1 379 1 29 1 331 1 53 1 245 1 
289 1 280 1 48 1 23 1 256 1 207 1 260 1 138 1 13 1 77 1 379 1 331 1 53 1 253 1 245 1 
335 1 313 1 36 1 272 1 166 1 135 2 296 1 10 4 208 2 9 1 368 1 64 1 194 1 14 1 112 2 115 1 236 1 45 1 196 2 100 2 284 1 52 1 204 1 157 2 
32 1 269 1 276 1 117 1 13 1 256 1 127 1 80 1 
81 1 311 1 58 1 148 1 68 2 345 1 256 5 365 1 50 1 276 4 13 5 77 1 80 4 127 5 
32 1 276 2 117 1 290 1 13 2 256 2 127 2 80 2 
174 1 371 1 
174 1 371 1 
19 1 352 1 
19 1 352 1 
19 1 352 1 
174 1 371 1 230 1 
174 1 371 1 230 1 
150 1 174 1 371 1 
19 1 352 1 174 2 220 1 202 1 371 2 
174 1 371 1 230 1 
354 1 174 1 371 1 
354 1 174 1 371 1 
354 1 174 1 371 1 
323 2 174 2 360 1 215 2 336 2 131 1 96 3 247 2 348 1 239 1 337 1 62 2 27 2 210 2 111 1 219 1 202 1 371 2 101 1 
336 1 247 1 364 1 294 1 337 1 366 1 62 1 11 1 210 1 276 2 371 1 13 2 323 1 174 1 94 1 215 1 96 1 97 1 256 2 150 1 77 1 357 1 80 2 127 2 
159 1 344 1 133 1 
344 1 133 1 107 1 
159 2 99 1 334 1 133 3 65 1 107 1 
159 1 334 1 186 1 133 2 65 1 107 1 
159 1 334 2 133 2 65 1 107 1 
102 1 225 2 226 1 335 1 84 1 247 5 37 1 59 4 295 1 296 1 8 1 366 1 62 5 254 1 374 1 94 1 66 1 177 2 21 3 327 2 348 2 183 3 152 1 153 1 284 1 218 2 74 1 285 1 263 1 380 1 52 1 357 1 
55 1 335 3 57 1 290 1 247 9 4 5 59 7 296 3 8 2 62 9 13 1 172 1 254 1 66 2 177 6 21 8 122 1 348 5 256 1 71 1 183 9 74 6 218 6 263 1 127 1 80 1 32 1 81 1 225 6 359 1 226 3 84 2 314 1 188 1 37 1 276 1 324 1 374 2 94 4 237 5 146 1 153 2 152 3 284 3 285 1 52 3 
225 2 226 1 335 1 84 1 37 1 247 3 59 2 295 1 296 1 8 1 62 3 374 1 94 1 66 1 177 2 21 3 146 1 348 3 327 1 183 4 152 2 153 1 284 1 218 2 380 1 52 1 
225 4 359 1 226 2 335 2 84 1 37 1 247 4 59 3 295 1 296 2 8 1 62 4 324 1 374 1 94 2 66 1 177 4 21 5 146 1 348 5 327 2 71 1 183 8 152 4 153 1 284 2 218 4 380 1 52 2 
233 1 229 1 245 1 
304 1 245 1 
350 1 
245 1 207 1 
138 1 238 1 229 2 86 1 245 3 207 1 
138 1 245 1 207 1 
189 1 245 1 
310 1 33 1 279 1 119 1 36 2 363 1 6 1 135 3 40 1 9 3 100 4 10 7 154 2 155 1 284 1 221 1 52 1 
310 1 33 1 279 1 119 1 36 2 363 1 6 1 135 3 40 1 9 3 100 4 10 7 154 2 155 1 284 1 221 1 52 1 
310 1 303 1 33 1 279 1 119 1 36 2 363 1 6 1 135 3 40 1 9 3 100 4 10 7 154 2 155 1 284 1 221 1 52 1 
310 1 160 1 33 1 161 1 361 3 226 3 335 3 313 1 363 2 36 5 6 5 272 1 135 15 296 3 40 2 10 31 9 10 194 1 15 1 300 1 236 1 279 1 119 2 196 2 100 16 26 1 51 4 154 3 155 1 356 1 284 4 221 2 156 1 52 4 
310 1 161 1 103 1 236 2 279 1 119 1 313 2 363 1 36 3 196 4 6 1 272 2 135 4 40 1 9 4 100 5 10 9 154 2 155 1 284 1 221 1 194 2 52 1 113 1 
159 1 358 1 133 2 107 1 338 1 42 1 168 1 169 1 190 1 191 1 171 1 140 1 176 1 344 1 144 1 178 1 280 1 48 1 49 1 376 1 99 1 241 1 200 1 379 1 28 1 126 2 331 1 244 2 30 1 53 1 
159 1 358 1 133 2 107 1 338 2 168 1 169 1 190 1 191 1 171 1 176 1 344 1 144 1 178 1 280 1 48 1 346 1 98 1 49 1 376 1 99 1 355 1 241 1 200 1 379 1 126 3 331 1 244 3 30 1 53 1 
159 1 133 2 107 1 338 2 168 1 169 1 190 1 176 1 344 1 144 1 178 1 280 1 48 1 98 1 376 1 99 1 355 1 241 1 200 1 379 1 126 2 331 1 244 2 30 1 53 1 
20 1 288 1 358 1 104 1 144 2 280 1 48 1 346 1 207 1 376 2 275 1 260 1 169 2 190 2 191 1 139 1 379 1 331 1 126 1 244 1 321 1 245 1 53 1 
159 1 176 1 358 1 344 1 144 1 280 1 48 1 133 2 49 1 376 1 107 1 99 1 168 1 42 1 355 1 169 1 200 1 190 1 171 1 191 1 28 1 379 1 331 1 126 1 244 1 53 1 
76 1 
1 1 247 5 5 1 207 1 8 1 339 2 62 5 250 2 13 1 299 1 254 3 66 1 255 1 21 2 348 2 123 1 256 1 180 1 259 1 183 2 260 2 308 1 218 2 74 6 184 1 263 1 265 1 266 4 127 1 269 1 32 1 268 1 84 1 37 1 315 2 275 1 232 2 137 1 92 1 139 1 43 1 195 2 278 2 374 1 280 1 48 2 197 1 282 1 50 1 152 2 240 2 379 2 331 1 53 2 245 1 
195 1 268 1 32 1 269 1 254 1 1 1 247 3 5 1 197 1 123 1 256 1 180 1 62 3 50 1 307 1 308 1 74 2 13 1 266 2 265 1 299 1 127 1 
268 1 32 1 269 1 254 1 1 1 37 1 247 3 348 1 5 1 197 1 123 1 256 1 180 1 62 3 50 1 307 1 308 1 232 1 74 1 13 1 266 3 265 1 299 1 127 1 
269 1 32 1 268 1 1 1 247 3 37 1 5 1 62 3 339 1 232 1 13 1 299 1 195 1 254 1 197 1 348 1 123 1 256 1 180 1 50 1 307 1 308 1 74 2 265 1 266 3 127 1 
1 1 247 5 165 1 5 1 8 1 339 4 62 5 251 1 250 2 110 1 13 1 299 1 254 3 66 1 21 1 348 5 123 1 256 1 180 1 308 1 307 1 74 7 218 1 184 1 263 1 266 6 265 1 127 1 268 1 32 1 269 1 84 1 37 5 315 2 231 1 232 4 195 4 278 2 147 1 197 1 282 1 50 1 152 2 240 2 
1 1 247 4 5 1 8 1 62 4 339 2 250 2 13 1 299 1 254 2 66 1 21 1 348 2 123 1 256 1 180 1 183 2 308 1 218 1 74 4 184 1 263 1 266 4 265 1 127 1 268 1 32 1 269 1 84 1 37 1 315 2 232 2 92 1 278 2 195 2 197 1 282 1 50 1 152 2 240 2 
269 1 32 1 268 1 84 1 1 1 37 1 247 4 165 1 5 1 315 2 8 1 339 2 62 4 232 2 250 2 251 1 110 1 13 1 299 1 195 2 278 2 254 2 66 1 21 1 348 1 197 1 123 1 256 1 180 1 282 1 50 1 152 2 308 1 240 2 74 4 218 1 184 1 263 1 265 1 266 4 127 1 
269 1 32 1 268 1 84 1 1 1 37 1 247 4 165 1 5 1 315 2 8 1 339 2 62 4 232 2 250 2 251 1 110 1 13 1 299 1 195 2 278 2 254 2 66 1 21 1 348 1 197 1 123 1 256 1 180 1 282 1 50 1 152 2 308 1 240 2 74 4 218 1 184 1 263 1 265 1 266 4 127 1 
269 1 32 1 268 1 129 1 84 1 1 1 37 1 247 4 5 1 315 2 8 1 339 2 62 4 232 2 250 2 251 1 369 1 13 1 299 1 195 2 254 2 66 1 21 1 47 2 348 1 197 1 198 2 123 1 256 1 180 1 282 1 183 2 50 1 199 1 308 1 74 4 218 1 263 1 265 1 266 4 127 1 
269 1 32 1 268 1 84 1 1 1 37 1 165 1 247 4 5 1 315 2 8 1 231 1 62 4 339 3 250 2 251 1 232 3 110 1 13 1 299 1 278 2 195 3 254 2 66 1 21 1 348 1 197 1 123 1 256 1 180 1 282 1 50 1 152 2 308 1 240 2 218 1 74 5 184 1 263 1 265 1 266 5 127 1 
269 1 32 1 268 1 84 1 1 1 37 1 165 1 247 4 5 1 315 2 8 1 231 1 62 4 339 3 250 2 251 1 232 3 110 1 13 1 299 1 278 2 195 3 254 2 66 1 21 1 348 1 197 1 123 1 256 1 180 1 282 1 50 1 152 2 308 1 240 2 218 1 74 5 184 1 263 1 265 1 266 5 127 1 
269 1 32 1 268 1 84 1 1 1 37 1 247 4 5 1 315 2 8 1 339 2 62 4 232 2 250 2 92 1 13 1 299 1 195 2 254 2 66 1 21 1 47 2 348 1 197 1 198 2 123 1 256 1 180 1 282 1 183 2 50 1 308 1 199 1 74 4 218 1 263 1 265 1 266 4 127 1 
310 1 236 1 279 1 313 1 36 2 363 1 196 2 272 1 135 3 40 1 208 1 10 6 100 3 9 2 368 1 154 1 155 1 284 1 233 1 77 2 14 1 194 1 52 1 204 1 112 1 157 1 
160 1 362 1 361 3 226 2 35 1 335 1 313 2 36 1 6 1 272 2 135 6 296 2 9 2 10 14 208 11 340 1 194 2 14 1 300 1 112 11 343 1 236 2 196 4 100 8 51 3 284 1 243 1 77 1 203 1 204 2 52 2 205 1 157 4 
58 1 313 1 39 1 272 1 207 1 135 1 109 1 10 2 276 1 138 1 13 2 194 1 14 1 175 1 236 1 343 1 280 1 23 1 48 1 68 1 196 2 375 1 256 2 100 1 260 1 201 1 243 1 77 1 379 1 331 1 29 1 203 1 204 1 245 1 53 1 157 1 127 1 80 1 
163 1 58 1 335 2 2 2 292 1 6 4 207 2 296 2 109 2 10 20 208 7 9 8 13 3 14 3 112 7 343 1 216 1 23 2 68 1 256 3 260 1 124 2 355 1 75 2 77 2 29 2 80 1 127 1 310 1 226 2 130 2 313 3 363 1 36 4 272 3 135 10 40 1 276 1 138 2 372 2 194 3 236 3 279 1 280 2 48 3 196 6 100 10 154 1 155 1 284 3 243 1 379 3 203 1 331 2 204 3 52 3 53 3 245 2 157 7 
313 2 38 1 272 2 293 1 135 1 207 2 249 1 10 2 275 1 368 1 209 2 170 1 276 1 13 1 139 1 194 2 14 2 252 1 140 1 236 2 343 1 280 2 48 7 68 1 196 4 328 1 256 1 100 1 260 2 355 1 378 1 243 1 379 8 331 2 204 2 245 3 53 8 127 1 80 1 
81 1 226 1 335 1 313 1 36 1 272 1 296 1 135 2 365 1 9 1 208 1 317 1 10 3 276 1 13 1 194 1 14 1 112 1 236 1 196 2 256 1 100 1 284 1 203 1 204 1 52 1 157 1 80 1 127 1 
115 1 236 1 313 1 196 2 6 1 272 1 296 1 9 1 208 1 10 2 100 2 368 1 14 1 194 1 204 1 52 1 112 1 157 1 
236 1 335 1 313 1 36 1 196 2 272 1 166 1 135 2 9 1 208 1 10 2 368 1 284 1 14 1 194 1 204 1 112 1 157 1 
226 1 335 1 313 1 36 1 272 1 6 1 296 1 135 2 10 4 208 2 9 2 368 1 194 1 14 1 112 2 236 1 196 2 100 2 284 1 52 1 204 1 157 2 
115 1 236 1 313 1 196 2 6 1 272 1 296 1 249 1 9 1 208 1 10 2 100 2 14 1 194 1 204 1 52 1 112 1 157 1 
236 1 335 1 313 1 36 1 196 2 272 1 166 1 135 2 249 1 9 1 208 1 10 2 284 1 14 1 194 1 204 1 112 1 157 1 
226 1 335 1 313 1 36 1 272 1 6 1 296 1 135 2 249 1 10 4 208 2 9 2 194 1 14 1 112 2 236 1 196 2 100 2 284 1 52 1 204 1 157 2 
226 1 335 1 313 1 36 1 272 1 6 1 296 1 135 2 10 4 208 2 9 2 194 1 14 1 112 2 236 1 196 2 100 2 284 1 52 1 204 1 157 2 
130 1 313 1 272 1 207 1 135 1 109 1 10 2 138 1 13 1 14 1 194 1 236 1 343 1 280 1 23 1 48 1 196 2 256 1 100 1 260 1 243 1 77 1 379 1 331 1 29 1 204 1 53 1 245 1 
289 1 313 1 272 1 207 1 135 1 10 2 138 1 13 1 14 1 194 1 253 1 142 1 236 1 343 1 280 1 23 1 48 1 196 2 256 1 100 1 260 1 243 1 77 1 379 1 331 1 204 1 53 1 245 1 
226 1 335 1 313 1 36 1 272 1 6 1 296 1 135 2 10 4 208 2 9 2 194 1 14 1 112 2 236 1 196 2 100 2 284 1 203 1 52 1 204 1 157 2 
226 1 335 1 130 1 313 1 36 1 6 1 272 1 135 2 296 1 207 1 109 1 9 2 208 2 10 4 138 1 13 1 14 1 194 1 112 2 140 1 236 1 280 1 23 1 48 1 196 2 256 1 100 2 284 1 75 1 379 1 331 1 29 1 52 1 204 1 53 1 245 1 157 2 
81 1 226 1 335 1 291 1 313 1 6 1 272 1 135 1 296 1 365 1 9 1 10 3 208 1 276 1 13 1 194 1 14 1 112 1 236 1 196 2 256 1 100 2 284 1 203 1 204 1 52 1 80 1 127 1 157 1 
310 1 160 1 128 1 161 1 54 1 103 1 361 3 226 4 335 4 227 1 313 3 363 1 36 4 272 3 6 4 135 21 296 4 40 1 61 1 10 41 9 8 91 1 211 1 212 2 194 3 300 3 341 1 143 1 114 4 236 3 279 1 325 1 69 1 196 6 329 1 179 1 100 20 51 4 154 1 155 1 284 5 52 5 332 1 
310 1 160 1 128 1 161 2 54 1 103 1 361 3 226 4 335 3 227 1 313 4 363 1 36 4 272 4 6 3 135 18 296 4 40 1 61 1 10 38 9 7 91 1 211 1 212 2 194 4 300 3 341 1 143 1 114 4 236 4 279 1 325 1 69 1 196 8 329 1 179 1 100 20 51 4 154 1 155 1 284 4 52 5 332 1 
310 1 160 2 161 1 128 1 54 1 103 1 361 4 226 7 35 2 335 7 227 1 313 2 363 1 36 7 272 2 6 7 135 25 296 7 40 1 61 1 10 52 9 14 91 1 212 1 194 2 300 2 341 1 143 1 114 4 236 2 279 1 325 1 69 1 196 4 329 1 100 27 51 4 154 1 155 1 284 8 52 8 332 1 
160 1 103 1 361 1 226 3 335 3 227 1 313 2 36 3 272 2 6 3 135 10 296 3 61 1 10 19 9 6 211 1 212 1 194 2 300 1 341 1 114 2 236 2 69 2 196 4 181 1 100 9 51 2 284 3 52 3 332 1 
128 1 161 2 54 1 103 1 361 2 226 3 335 2 227 1 313 3 36 2 6 2 272 3 135 12 296 3 61 1 9 4 10 26 91 1 212 2 194 3 300 2 341 1 114 4 143 1 236 3 325 1 69 1 196 6 329 1 100 14 51 2 284 2 52 3 332 2 
323 1 174 1 90 1 215 1 210 1 336 1 202 1 131 1 371 1 239 1 
150 1 364 1 
323 1 174 1 215 1 210 1 46 1 336 1 371 1 93 1 79 1 
323 1 174 1 360 1 215 1 336 1 131 1 96 2 247 1 348 1 239 1 337 1 62 1 27 1 210 1 111 1 219 1 202 1 371 1 
323 1 174 1 360 1 215 1 336 1 131 1 96 2 247 1 348 1 239 1 337 1 62 1 27 1 210 1 111 1 219 1 202 1 371 1 
323 1 174 1 360 1 215 1 336 1 131 1 96 2 247 1 348 1 239 1 337 1 62 1 27 1 210 1 111 1 219 1 202 1 371 1 
353 1 220 1 230 1 
353 1 220 1 230 1 
354 1 105 1 
354 1 220 1 105 1 
11 1 294 1 
56 1 336 1 247 1 59 1 364 1 294 1 366 1 62 1 11 1 210 1 276 2 111 1 13 2 371 1 323 1 174 1 94 1 215 1 96 1 97 1 256 2 150 1 27 1 77 1 357 1 80 2 127 2 
353 1 230 1 
354 1 220 1 105 1 
313 1 85 1 38 1 272 1 207 1 135 1 10 2 209 2 13 2 14 1 213 1 194 1 252 1 373 1 236 1 343 1 280 1 48 2 196 2 70 1 256 2 100 1 73 1 243 1 379 2 331 1 203 1 204 1 245 1 53 2 127 2 
159 1 162 1 176 1 344 1 280 1 48 2 228 1 133 2 107 1 99 1 168 1 355 1 169 1 171 1 330 1 379 2 331 1 140 1 53 2 
159 1 176 1 344 1 67 1 280 1 48 1 228 1 133 2 107 1 99 1 168 1 355 1 169 1 171 1 379 1 331 1 53 1 
162 1 246 1 280 1 48 1 207 1 260 1 275 1 169 1 139 1 379 1 331 1 321 1 245 1 53 1 
159 1 99 1 176 1 168 1 162 1 169 1 355 1 344 1 280 1 171 1 48 1 330 1 379 1 331 1 228 1 133 2 53 1 107 1 
262 1 
17 1 88 1 21 1 218 1 233 1 37 1 348 1 
84 1 247 1 37 1 8 1 62 1 278 1 254 1 66 1 21 1 348 2 183 1 152 1 240 1 218 1 74 1 184 1 263 1 
164 2 335 2 247 5 207 3 248 1 296 2 297 2 8 4 62 5 299 2 301 2 302 2 17 1 254 3 304 3 66 4 177 6 255 1 21 9 348 8 182 2 25 2 260 1 183 12 124 2 74 5 218 8 263 4 185 1 225 6 270 2 82 1 226 2 84 4 37 2 189 2 229 2 86 1 88 1 138 3 370 2 192 1 140 1 374 2 280 4 48 3 281 1 152 6 284 2 379 3 331 3 52 2 245 10 53 3 
128 1 54 1 225 4 361 1 226 1 84 2 335 1 247 1 37 1 132 1 296 1 297 1 8 2 62 1 91 1 300 1 143 1 254 1 66 2 177 4 21 5 348 4 329 1 183 6 51 1 152 3 74 1 218 3 284 1 263 2 52 1 
32 1 81 1 55 1 290 1 84 1 57 1 363 1 165 1 247 1 297 2 8 1 40 1 62 1 276 1 13 1 320 1 301 1 172 1 66 1 21 2 256 1 155 1 218 2 284 1 263 1 52 2 80 1 127 1 
17 1 66 1 21 1 84 1 37 1 348 1 8 1 88 1 218 1 263 1 
225 5 177 5 21 5 226 2 335 2 348 5 296 2 297 2 183 10 124 1 152 5 218 5 284 2 52 2 301 1 
62 1 254 1 74 1 37 1 247 1 348 1 
84 2 247 3 207 1 8 2 274 1 62 3 275 1 318 1 137 1 192 1 139 1 374 2 254 2 66 2 21 2 255 2 146 1 280 1 48 4 281 2 259 1 260 2 74 4 218 2 263 1 379 4 331 1 245 1 53 4 
81 2 57 1 130 1 313 1 272 1 135 1 207 1 109 1 10 1 276 2 138 1 13 3 194 1 14 1 343 1 236 1 145 1 280 1 48 1 23 1 196 2 256 3 260 1 77 1 379 1 29 1 331 1 204 1 53 1 245 1 127 2 80 2 
225 2 374 1 66 1 177 2 21 1 255 1 84 1 37 2 348 4 8 1 183 4 152 2 154 1 218 2 263 1 
323 1 215 1 377 1 
323 1 215 1 377 1 
323 1 11 1 215 1 261 1 239 1 
323 1 215 1 377 1 
323 1 215 1 83 1 
323 1 215 1 83 1 
323 1 215 1 83 1 
323 1 215 1 
174 1 371 1 
310 1 103 1 236 1 279 1 361 1 313 1 36 2 363 1 196 2 272 1 329 1 135 4 40 1 9 2 100 4 10 8 51 1 154 1 155 1 284 1 194 1 52 1 300 1 
310 1 160 1 103 1 361 1 226 1 313 2 36 2 363 1 272 2 6 1 135 5 296 1 40 1 10 11 9 3 194 2 300 1 236 2 279 1 196 4 329 1 100 6 51 2 154 1 155 1 284 1 287 1 52 2 
310 1 128 1 54 1 161 1 103 1 361 1 226 2 335 2 313 3 363 1 36 3 6 1 272 3 135 10 296 2 40 1 10 19 9 4 91 1 194 3 300 1 143 1 236 3 279 1 196 6 329 1 100 9 51 1 154 1 155 1 284 3 287 1 52 3 
310 1 161 1 54 1 128 1 103 1 361 1 226 2 335 1 313 3 363 1 36 3 6 2 272 3 135 7 296 2 40 1 10 17 9 5 91 1 194 3 300 1 143 1 236 3 279 1 196 6 329 1 100 10 51 1 154 1 155 1 284 2 287 1 52 3 
310 1 103 1 236 1 279 1 361 1 313 1 36 2 363 1 196 2 272 1 329 1 135 4 40 1 9 2 100 4 10 8 51 1 154 1 155 1 284 1 194 1 52 1 300 1 
54 1 128 1 103 1 361 1 226 2 335 2 313 1 36 1 6 1 272 1 135 6 296 2 10 12 9 2 91 1 194 1 300 1 143 1 236 1 196 2 329 1 100 6 51 1 284 2 52 2 
310 1 128 1 54 1 161 2 103 1 361 1 226 2 335 1 313 4 363 1 36 3 6 2 272 4 135 8 296 2 40 1 10 18 9 5 91 1 194 4 300 1 143 1 236 4 279 1 196 8 329 1 100 10 51 1 154 1 155 1 284 2 287 1 52 3 
128 1 54 1 161 2 103 1 361 1 226 3 335 2 313 4 36 3 6 3 272 4 135 7 296 3 10 16 9 6 91 1 211 1 194 4 300 1 143 1 236 4 196 8 329 1 100 9 51 1 284 2 52 3 
310 1 279 2 363 3 36 3 6 3 135 4 40 3 10 7 9 6 100 3 155 1 284 1 52 1 
310 1 128 1 54 1 161 2 103 1 361 1 226 2 335 1 313 4 363 1 36 3 6 1 272 4 135 8 296 2 40 1 10 18 9 4 91 1 211 1 194 4 300 1 143 1 236 4 279 1 196 8 329 1 100 10 51 1 154 1 155 1 284 2 52 3 
310 1 161 1 236 2 279 1 313 2 36 2 363 1 196 4 6 1 272 2 135 4 40 1 10 8 100 4 9 3 154 1 155 1 284 1 194 2 52 1 
40 1 310 1 10 6 100 3 9 2 154 1 155 1 279 1 284 1 233 1 36 2 363 1 52 1 135 3 
236 1 226 1 335 1 313 1 36 1 196 2 272 1 6 1 135 2 296 1 9 2 100 2 10 4 284 1 287 1 194 1 52 1 
160 1 361 1 226 1 335 1 36 1 6 1 135 4 296 1 10 7 100 3 9 2 51 2 284 1 52 1 300 1 
310 1 160 1 161 2 226 2 361 2 335 2 35 1 313 2 363 2 36 5 6 4 272 2 296 2 135 12 40 2 9 9 10 23 340 1 319 1 194 2 236 2 279 1 196 4 100 11 51 2 154 1 155 1 284 3 52 3 
10 1 51 1 135 1 
10 1 100 1 361 1 
236 1 226 1 335 1 313 1 36 2 196 2 272 1 6 1 135 3 296 1 10 6 100 3 9 3 124 1 284 1 194 1 287 1 52 1 
54 1 128 1 103 1 361 1 226 2 335 2 313 1 36 1 6 1 272 1 135 6 296 2 10 12 9 2 91 1 194 1 300 1 143 1 236 1 196 2 329 1 100 6 51 1 284 2 52 2 
363 1 36 1 6 1 135 3 40 1 100 3 10 6 9 2 155 1 284 1 52 1 
310 1 161 1 236 1 279 1 313 1 36 1 363 1 196 2 6 1 272 1 135 2 40 1 100 1 9 2 10 3 319 1 194 1 
236 1 103 1 313 1 363 2 36 3 196 2 272 1 6 2 135 5 40 2 9 5 100 5 10 10 155 1 284 2 194 1 320 1 52 2 
103 1 236 1 313 1 196 2 272 1 6 1 296 1 100 2 10 2 9 1 194 1 52 1 
103 1 236 1 226 1 335 1 313 1 36 1 196 2 272 1 6 1 135 2 296 1 9 2 100 2 10 4 284 1 194 1 52 1 
161 1 103 1 236 3 313 3 363 1 36 1 196 6 272 3 6 1 135 2 40 1 10 3 9 2 100 1 211 1 319 1 194 3 
310 1 160 1 161 2 103 1 361 3 226 3 335 3 313 5 363 3 36 7 272 5 6 5 135 18 296 3 40 3 10 34 9 12 211 1 319 1 15 1 194 5 300 1 236 5 279 1 196 10 100 16 26 1 51 4 154 1 155 2 356 1 284 5 287 1 52 5 
50 1 311 1 217 1 13 1 77 1 256 1 127 1 
322 1 217 1 311 1 3 1 256 1 41 1 283 1 50 1 13 1 77 1 267 1 127 1 
275 1 260 1 280 1 233 1 48 1 139 1 379 1 331 1 245 1 207 1 53 1 
280 1 23 1 48 1 68 1 256 2 207 1 260 1 276 1 138 1 13 2 77 1 379 1 29 1 331 1 245 1 53 1 80 1 127 1 
269 1 32 1 164 1 189 1 207 2 276 1 138 2 13 2 280 1 48 1 23 1 68 1 256 2 281 1 180 1 77 1 379 1 331 1 29 1 53 1 245 3 127 2 80 2 
269 1 32 1 164 1 189 1 207 2 87 1 276 1 138 2 13 2 253 1 280 1 48 2 23 1 68 1 256 2 281 1 180 1 77 1 379 2 331 1 53 2 245 3 127 2 80 2 
164 1 247 2 189 1 37 1 229 1 207 1 87 1 62 2 138 1 299 1 214 1 304 1 280 1 48 3 348 1 281 1 351 1 260 1 74 1 379 3 331 1 245 4 53 3 
304 1 270 1 164 1 280 1 48 3 37 1 189 1 247 2 348 1 229 1 207 1 281 1 87 1 260 1 62 2 74 1 138 1 379 3 299 1 331 1 53 3 245 4 
280 1 48 1 379 1 331 1 328 1 53 1 
280 3 48 6 306 1 328 1 38 1 293 1 86 1 207 2 167 1 260 2 209 1 367 1 355 1 170 1 378 1 138 1 379 7 331 2 140 1 53 7 245 3 
207 1 109 1 9 2 10 6 208 1 13 2 14 2 112 1 23 1 68 1 70 1 256 2 75 1 77 2 29 1 80 1 127 1 310 1 130 1 313 2 363 1 36 2 272 2 135 3 40 1 276 1 138 1 372 1 194 2 140 1 236 2 279 1 280 1 48 1 196 4 100 3 154 1 155 1 284 1 379 1 203 1 331 1 204 2 52 1 53 1 245 1 157 1 
270 1 84 2 37 1 247 3 59 1 229 1 8 2 88 1 62 3 192 1 299 1 302 1 17 1 254 1 66 2 304 1 21 1 48 1 348 1 182 1 260 1 25 1 218 1 74 2 263 2 379 1 53 1 245 2 
280 2 48 2 328 1 229 1 86 1 207 1 138 1 185 1 379 2 331 1 140 1 53 2 245 2 
206 1 280 1 48 4 207 1 87 1 260 1 275 1 139 1 379 4 331 1 140 1 53 4 245 1 
173 1 216 1 280 2 48 2 306 1 281 1 207 1 108 1 167 1 138 1 379 2 331 1 53 2 245 1 
260 1 176 1 344 1 280 1 48 1 379 1 331 1 133 1 53 1 107 1 
280 1 48 2 85 1 38 1 207 1 355 1 379 2 331 1 140 1 53 2 245 1 
206 1 280 2 48 4 38 1 293 1 281 1 207 2 275 1 260 1 170 1 139 1 379 5 331 2 140 1 53 5 245 3 
206 1 34 1 280 2 48 4 38 1 293 1 281 1 207 2 275 1 260 1 139 1 379 5 331 2 140 1 53 5 245 3 
280 1 23 1 48 1 68 1 256 2 207 1 260 1 276 1 138 1 13 2 77 1 379 1 331 1 245 1 53 1 253 1 80 1 127 1 
280 2 48 1 306 1 86 1 281 1 207 1 167 1 367 1 138 1 379 1 331 1 53 1 245 1 
116 1 121 1 63 1 77 1 158 1 
32 1 269 1 116 2 121 2 37 1 247 2 348 1 59 1 258 1 180 1 349 1 72 1 62 2 308 1 63 1 77 1 299 1 31 1 158 2 
116 1 256 1 73 1 63 1 13 1 213 1 158 1 373 1 127 1 
72 1 63 1 349 1 
241 1 178 1 233 1 30 1 
358 1 241 1 178 1 191 1 126 1 244 1 30 1 
144 1 190 1 126 1 
223 1 187 1 358 1 241 1 178 1 191 1 120 2 28 1 126 3 244 3 30 1 333 1 
338 1 358 1 241 1 178 1 191 1 264 1 126 2 244 2 30 1 
159 1 18 1 358 1 344 1 178 1 191 1 347 1 28 1 126 1 133 1 244 1 
358 1 241 1 178 1 191 1 28 1 126 1 244 1 
358 1 241 2 191 1 28 1 126 1 244 1 30 1 
358 2 178 1 326 1 257 1 241 1 242 1 191 2 28 1 126 2 244 2 
18 1 338 2 358 1 241 1 309 1 178 2 191 1 78 1 28 1 126 3 244 3 30 1 7 1 
159 1 358 1 344 1 178 1 133 2 107 1 99 1 338 1 298 1 241 1 191 1 28 1 126 2 244 2 30 1 
18 1 358 2 178 2 106 1 338 2 241 1 309 1 191 2 264 1 28 1 126 4 244 4 30 1 
358 1 241 1 178 1 191 1 28 1 126 1 244 1 30 1 
223 1 141 1 18 1 358 1 178 3 120 1 338 2 241 2 309 1 191 1 126 4 244 4 30 2 333 1 
338 1 358 1 241 1 178 1 22 1 191 1 28 1 126 2 244 2 30 1 316 1 24 1 
223 2 358 1 178 1 120 2 241 1 191 1 28 1 126 3 244 3 30 1 333 1 342 1 
95 2 305 1 178 2 125 1 
358 1 191 1 28 1 126 1 244 1 60 1 
338 1 358 1 241 1 178 1 191 1 28 1 126 2 244 2 30 1 7 1 
44 1 
358 1 241 1 178 1 191 1 28 1 126 1 244 1 30 1 
338 1 358 1 241 1 178 1 191 1 120 1 28 1 126 3 244 3 30 1 7 1 
141 1 18 1 309 1 178 1 
241 1 178 1 

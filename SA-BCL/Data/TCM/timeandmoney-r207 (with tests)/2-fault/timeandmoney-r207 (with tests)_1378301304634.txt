#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V ERROR java.lang.NullPointerException (186,322) 
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V ERROR java.lang.NullPointerException (186,322) (186,322) 
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.IndexOutOfBoundsException 369 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V ERROR java.lang.NullPointerException (186,322) (186,322) 301 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String; | ASSIGN | 2132 | = null
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | CONSTANT | 1627 | 1 -> 0
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.util.ImmutableIterator:remove()V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
362 2 44 1 184 1 7 1 118 1 71 2 192 2 98 1 121 1 147 1 243 1 217 1 346 5 193 6 349 1 171 1 129 1 221 9 222 2 330 2 154 1 156 2 227 1 338 2 230 1 138 9 206 4 303 3 
362 2 44 1 184 1 7 1 118 1 71 2 192 2 98 1 121 1 147 1 243 1 217 1 346 5 193 6 349 1 171 1 129 1 221 9 222 2 154 1 330 2 156 2 227 1 338 2 230 1 138 9 206 4 303 3 
362 2 44 1 184 1 7 1 118 1 71 2 192 2 98 1 121 1 147 1 243 1 217 1 346 6 193 7 349 1 171 1 129 1 221 10 222 2 154 1 330 2 156 2 227 1 338 2 230 1 138 10 206 5 303 4 
362 2 44 1 184 1 118 1 71 2 192 2 98 1 121 1 147 1 243 1 217 1 346 4 193 4 349 1 171 1 129 1 221 7 222 2 154 1 330 1 156 2 227 1 338 2 230 1 138 7 206 3 303 2 
362 1 193 3 129 1 221 4 222 1 330 2 7 1 156 1 227 1 338 1 192 1 98 1 230 1 138 4 206 2 147 1 303 1 346 3 
153 1 221 2 222 1 154 1 156 1 263 1 71 1 227 1 192 1 85 1 338 1 230 1 138 2 147 1 217 1 346 1 
193 1 221 3 222 2 71 1 227 1 192 2 230 1 138 3 206 1 147 1 243 1 303 1 346 2 
362 1 208 1 44 1 184 1 7 1 71 1 167 1 192 2 98 1 243 1 147 1 346 5 193 7 129 1 221 9 222 2 330 2 156 1 227 1 338 1 230 1 206 4 138 9 303 3 
362 1 208 1 44 1 184 1 7 1 71 1 167 1 192 2 98 1 243 1 147 1 346 5 193 7 129 1 221 9 222 2 330 2 156 1 227 1 338 1 230 1 206 4 138 9 303 3 
339 1 337 1 261 1 
333 2 337 1 68 1 
268 2 96 2 195 1 35 1 356 2 11 2 231 2 76 2 
363 1 262 1 311 2 282 1 191 1 145 1 96 3 166 2 264 1 73 1 8 1 342 1 343 2 287 1 100 1 11 2 76 3 51 1 78 1 268 2 195 1 325 1 152 1 170 2 35 1 172 1 294 2 295 1 296 1 273 1 228 1 178 1 377 1 356 2 87 1 380 1 231 2 
322 1 
268 1 150 1 276 1 339 1 200 1 94 1 95 1 6 1 373 1 96 1 337 1 214 1 360 1 76 1 
268 1 150 2 339 1 200 1 94 2 6 1 373 1 96 1 337 1 214 1 356 1 11 1 360 1 231 1 76 1 
150 1 285 1 94 1 104 1 89 1 
150 2 339 1 337 1 366 1 285 1 94 2 247 1 104 1 
150 1 285 1 94 1 
150 1 94 1 104 1 322 1 186 1 
337 1 
150 2 339 1 337 1 285 1 94 2 201 1 247 1 104 1 
139 1 181 1 150 5 218 2 127 1 339 1 94 5 247 1 189 1 60 2 337 1 375 1 341 1 25 2 285 2 266 1 104 2 358 1 12 1 
35 1 261 1 
268 2 35 2 58 1 96 2 42 1 356 1 11 1 231 1 76 2 
347 1 275 1 112 1 
325 1 170 1 35 1 172 1 294 1 295 1 296 1 311 1 282 1 273 1 191 1 96 1 251 1 8 1 287 1 76 1 
268 1 325 1 170 1 162 1 172 1 294 1 163 1 295 1 296 1 311 1 273 1 282 1 191 1 96 2 8 1 287 1 356 1 112 1 231 1 76 2 
268 3 96 3 35 1 162 1 356 3 11 1 231 3 76 3 
133 1 268 1 96 1 356 1 231 1 6 1 76 1 
58 1 268 1 96 1 42 1 356 1 11 1 231 1 6 1 76 1 
304 1 162 1 94 1 163 1 262 1 311 1 6 1 282 1 191 1 145 1 96 4 166 1 73 1 8 1 214 1 343 2 287 1 100 1 11 2 76 4 78 1 268 3 325 1 150 1 195 1 350 1 170 1 35 1 172 1 200 1 294 1 295 1 296 1 58 1 273 1 373 1 228 1 178 1 377 1 356 3 87 1 380 1 360 1 231 3 
268 2 96 2 276 1 299 1 35 1 162 1 356 1 231 1 76 2 
268 3 150 1 350 1 94 1 162 2 200 1 55 1 163 1 6 1 58 1 373 1 96 3 337 1 214 1 356 3 11 1 360 1 231 3 76 3 
347 1 268 2 162 1 58 1 96 2 356 2 112 1 11 1 231 2 76 2 
325 1 170 1 35 1 172 1 294 1 295 1 311 1 296 1 282 1 273 1 191 1 96 1 8 1 287 1 76 1 
325 1 170 1 35 1 294 1 295 1 311 1 296 1 282 1 273 1 191 1 96 1 135 1 240 1 287 1 76 1 
161 1 237 1 262 2 145 1 166 4 318 1 73 1 343 2 77 1 51 2 347 2 16 1 151 1 173 1 110 1 203 1 250 1 275 2 228 1 178 1 357 1 87 1 112 2 380 1 
268 1 119 1 96 1 356 1 360 1 231 1 6 1 76 1 
289 1 268 5 276 1 35 1 162 2 163 1 155 1 58 1 96 5 299 1 356 4 11 1 231 4 76 5 
133 1 119 1 268 2 96 2 356 2 231 2 6 1 76 2 
306 1 116 1 
306 1 116 1 
314 1 378 1 
314 1 378 1 
314 1 378 1 
31 1 306 1 116 1 
31 1 306 1 116 1 
54 1 306 1 116 1 
314 1 306 2 376 1 378 1 116 2 370 1 
31 1 306 1 116 1 
0 1 306 1 116 1 
0 1 306 1 116 1 
0 1 306 1 116 1 
257 1 149 2 150 2 3 1 306 2 277 1 130 2 37 2 94 2 116 2 260 2 370 1 41 3 143 2 61 1 337 1 207 1 75 1 244 1 
246 1 268 2 149 1 150 1 3 1 54 1 306 1 35 1 94 1 130 1 37 1 328 1 116 1 41 1 143 1 176 1 96 2 47 1 9 1 252 1 356 2 254 1 231 2 76 2 
156 1 362 1 338 1 
156 1 338 1 85 1 
362 2 156 3 92 1 319 1 205 1 85 1 
362 1 156 2 319 1 205 1 85 1 67 1 
362 1 156 2 319 2 205 1 85 1 
339 1 161 1 94 5 340 1 237 1 68 1 278 1 9 1 286 2 341 2 285 1 266 1 104 4 49 2 106 2 16 1 150 5 218 1 127 3 220 1 247 1 202 1 333 3 203 1 176 1 223 1 60 1 337 2 62 1 25 1 254 1 379 1 
160 1 339 1 161 3 94 9 237 3 68 3 189 1 286 6 341 6 285 6 120 1 266 1 103 1 104 7 345 1 106 6 16 3 150 9 218 2 127 8 199 1 247 1 297 5 202 2 333 9 203 3 223 3 60 2 224 1 337 5 62 2 25 2 254 4 89 5 379 1 
339 1 161 1 94 3 340 1 237 1 68 2 278 1 189 1 341 2 286 2 104 2 49 1 106 2 16 1 150 3 218 1 127 3 202 1 333 4 203 1 223 1 60 1 337 3 62 1 25 1 254 1 
339 1 161 2 94 4 340 1 237 2 68 3 278 1 189 1 286 4 341 4 120 1 103 1 49 2 104 3 106 4 16 2 150 4 218 1 127 5 199 1 202 1 333 7 203 2 223 2 60 1 337 4 62 1 25 1 254 2 
102 1 296 1 261 1 
59 1 296 1 
351 1 
295 1 296 1 
93 1 287 1 102 2 295 1 296 3 321 1 
287 1 295 1 296 1 
320 1 296 1 
51 4 114 1 151 3 53 1 128 1 30 1 210 1 237 1 262 3 81 2 110 2 313 1 70 1 203 1 166 7 23 1 265 1 
51 4 114 1 151 3 53 1 128 1 30 1 210 1 237 1 262 3 81 2 110 2 313 1 70 1 203 1 166 7 23 1 265 1 
114 1 51 4 151 3 53 1 128 1 30 1 210 1 237 1 262 3 81 2 110 2 313 1 70 1 203 1 166 7 177 1 23 1 265 1 
114 1 161 3 30 1 66 4 210 2 237 4 262 15 313 2 164 1 70 1 239 1 166 31 73 1 265 2 343 2 51 16 16 3 107 1 323 1 151 10 53 2 128 1 81 3 132 3 40 1 110 5 203 4 223 3 228 1 23 5 179 1 87 1 380 1 361 1 
51 1 369 1 166 1 73 1 53 1 228 1 293 1 265 1 343 2 87 1 380 1 81 1 
362 1 92 1 115 1 311 1 71 1 213 1 192 1 99 1 344 1 147 1 346 1 193 1 325 1 170 1 352 1 294 1 221 2 222 1 248 1 353 1 156 2 273 1 227 1 338 1 111 1 85 1 230 1 138 2 359 1 88 1 
362 1 113 1 92 1 115 1 311 1 71 1 192 1 99 1 344 1 346 1 14 1 193 2 326 1 325 1 170 1 352 1 294 1 221 3 222 1 248 1 353 1 156 2 273 1 227 1 338 1 85 1 230 1 138 3 359 1 88 1 
113 1 362 1 92 1 311 1 71 1 99 1 344 1 346 1 14 1 193 2 325 1 170 1 294 1 221 2 248 1 353 1 156 2 273 1 227 1 85 1 338 1 230 1 138 2 359 1 88 1 
2 1 5 1 311 1 282 1 71 2 192 1 99 2 344 2 15 1 326 1 196 1 325 1 170 1 294 1 221 1 222 1 295 1 296 1 353 2 273 1 138 1 27 1 43 1 
362 1 92 1 115 1 311 1 71 1 213 1 192 1 99 1 344 1 147 1 14 1 325 1 170 1 352 1 294 1 221 1 222 1 248 1 353 1 156 2 273 1 338 1 85 1 138 1 359 1 88 1 
381 1 
276 1 339 1 5 1 94 5 95 1 6 1 279 1 282 2 96 1 341 2 285 6 150 5 19 2 200 1 294 2 247 3 295 1 202 1 296 1 60 1 158 1 25 1 64 1 360 1 310 4 68 2 311 2 312 1 211 1 74 2 168 1 214 1 33 1 368 2 32 1 266 1 76 1 124 2 268 1 34 1 325 1 218 1 327 1 127 2 170 2 36 2 333 2 372 1 273 1 373 1 335 2 337 2 229 2 43 1 232 1 
276 1 94 3 310 2 95 1 312 1 6 1 96 1 168 1 214 1 74 1 285 2 76 1 268 1 34 1 150 3 200 1 201 1 247 1 373 1 158 1 360 1 232 1 
276 1 339 1 94 3 310 3 95 1 312 1 6 1 96 1 168 1 214 1 285 1 368 1 76 1 268 1 34 1 150 3 200 1 201 1 247 1 373 1 158 1 337 1 360 1 232 1 
276 1 339 1 94 3 310 3 95 1 312 1 6 1 96 1 168 1 214 1 74 1 285 2 368 1 76 1 268 1 34 1 150 3 36 1 200 1 201 1 247 1 373 1 158 1 337 1 360 1 232 1 
276 1 339 5 94 5 95 1 6 1 144 1 96 1 285 7 341 1 242 1 150 5 200 1 19 2 201 1 247 3 60 1 158 1 25 1 64 1 360 1 310 6 68 2 312 1 74 4 214 1 168 1 368 4 266 1 169 1 267 1 76 1 124 2 268 1 34 1 218 1 127 1 36 4 82 1 372 1 373 1 335 2 337 5 229 2 232 1 
276 1 339 1 94 4 95 1 6 1 96 1 341 1 285 4 150 4 200 1 19 2 247 2 60 1 158 1 25 1 64 1 360 1 310 4 68 2 312 1 214 1 168 1 74 2 266 1 368 2 33 1 76 1 124 2 268 1 34 1 218 1 127 1 36 2 372 1 333 2 373 1 335 2 337 2 229 2 232 1 
276 1 339 1 94 4 310 4 68 2 95 1 312 1 6 1 96 1 74 2 168 1 214 1 285 4 341 1 368 2 266 1 242 1 267 1 76 1 124 2 268 1 34 1 150 4 218 1 127 1 36 2 19 2 200 1 247 2 82 1 372 1 373 1 60 1 335 2 158 1 337 1 25 1 64 1 229 2 360 1 232 1 
276 1 339 1 94 4 310 4 68 2 95 1 312 1 6 1 96 1 74 2 168 1 214 1 285 4 341 1 368 2 266 1 242 1 267 1 76 1 124 2 268 1 34 1 150 4 218 1 127 1 36 2 19 2 200 1 247 2 82 1 372 1 373 1 60 1 335 2 158 1 337 1 25 1 64 1 229 2 360 1 232 1 
276 1 339 1 94 4 310 4 95 1 312 1 6 1 96 1 74 2 168 1 214 1 285 4 341 1 368 2 266 1 267 1 76 1 125 2 194 2 268 1 34 1 150 4 218 1 127 1 36 2 19 2 200 1 247 2 333 2 372 1 22 1 373 1 60 1 374 1 158 1 226 1 337 1 25 1 229 2 360 1 232 1 
276 1 339 1 94 4 310 5 68 2 95 1 312 1 6 1 96 1 168 1 214 1 74 3 341 1 285 5 266 1 368 3 169 1 242 1 267 1 76 1 124 2 268 1 34 1 150 4 218 1 127 1 36 3 19 2 200 1 247 2 82 1 372 1 373 1 60 1 335 2 158 1 337 1 25 1 64 1 229 2 360 1 232 1 
276 1 339 1 94 4 310 5 68 2 95 1 312 1 6 1 96 1 168 1 214 1 74 3 341 1 285 5 266 1 368 3 169 1 242 1 267 1 76 1 124 2 268 1 34 1 150 4 218 1 127 1 36 3 19 2 200 1 247 2 82 1 372 1 373 1 60 1 335 2 158 1 337 1 25 1 64 1 229 2 360 1 232 1 
276 1 339 1 94 4 95 1 6 1 96 1 341 1 285 4 194 2 150 4 200 1 19 2 247 2 60 1 158 1 25 1 360 1 310 4 312 1 214 1 168 1 74 2 266 1 368 2 33 1 76 1 125 2 268 1 34 1 218 1 127 1 36 2 372 1 333 2 373 1 374 1 337 1 229 2 232 1 
51 3 114 1 347 1 151 2 35 2 128 1 210 1 237 1 81 1 262 3 261 1 110 2 313 1 70 1 203 1 145 1 166 6 275 1 73 1 228 1 178 1 357 1 343 2 87 1 112 1 380 1 
209 1 161 1 308 1 259 1 66 3 237 2 262 6 315 1 145 1 239 1 166 14 73 2 342 1 343 4 51 8 78 1 16 2 347 4 151 2 35 1 132 3 110 1 203 1 223 2 275 11 23 1 228 2 178 2 179 1 86 1 87 2 112 11 380 2 
209 1 162 1 163 1 311 1 262 1 282 1 191 1 145 1 96 2 166 2 8 1 73 1 342 1 287 1 343 2 76 2 288 1 51 1 347 1 268 1 78 1 325 1 170 1 35 1 172 1 80 1 294 1 295 1 296 1 174 1 273 1 251 1 228 1 178 1 356 1 87 1 380 1 231 1 
235 2 237 3 282 1 191 2 96 3 145 3 8 2 342 1 343 6 287 2 14 1 148 1 51 10 347 7 16 2 151 8 294 3 295 2 296 2 110 4 203 3 204 1 23 4 356 1 253 2 112 7 114 1 209 1 161 2 162 1 210 1 163 1 262 10 311 3 313 1 70 1 166 20 73 3 76 3 78 1 268 1 325 2 170 3 35 2 128 1 172 2 131 2 81 1 332 1 83 2 273 2 223 2 275 7 228 3 178 3 377 2 87 3 380 3 231 1 
162 1 5 1 236 1 45 1 311 7 262 1 188 1 282 2 96 1 145 2 166 2 73 2 342 1 343 4 76 1 14 1 51 1 268 1 78 1 290 1 325 2 219 1 170 8 152 2 21 1 294 8 295 2 296 3 273 2 111 1 228 2 178 2 357 1 356 1 302 1 87 2 380 2 231 1 43 1 
209 1 161 1 237 1 262 2 145 1 96 1 166 3 73 1 343 2 11 1 76 1 51 1 347 1 268 1 16 1 151 1 110 1 58 1 203 1 223 1 275 1 228 1 24 1 178 1 356 1 87 1 112 1 380 1 231 1 
51 2 347 1 16 1 151 1 237 1 145 1 166 2 318 1 275 1 73 1 23 1 228 1 178 1 357 1 343 2 87 1 112 1 380 1 
77 1 347 1 151 1 161 1 262 2 110 1 203 1 145 1 166 2 275 1 73 1 228 1 178 1 357 1 343 2 87 1 112 1 380 1 
161 1 237 1 262 2 145 1 166 4 73 1 343 2 51 2 16 1 347 2 151 2 110 1 203 1 223 1 275 2 228 1 23 1 178 1 357 1 87 1 112 2 380 1 
51 2 347 1 16 1 151 1 219 1 237 1 145 1 166 2 318 1 275 1 73 1 23 1 228 1 178 1 343 2 87 1 112 1 380 1 
77 1 347 1 151 1 219 1 161 1 262 2 110 1 203 1 145 1 166 2 275 1 73 1 228 1 178 1 343 2 87 1 112 1 380 1 
161 1 237 1 262 2 145 1 166 4 73 1 343 2 51 2 16 1 347 2 219 1 151 2 110 1 203 1 223 1 275 2 228 1 23 1 178 1 87 1 112 2 380 1 
161 1 237 1 262 2 145 1 166 4 73 1 343 2 51 2 16 1 347 2 151 2 110 1 203 1 223 1 275 2 228 1 23 1 178 1 87 1 112 2 380 1 
311 1 262 1 282 1 191 1 96 1 145 1 166 2 8 1 73 1 342 1 287 1 343 2 76 1 51 1 78 1 325 1 170 1 35 1 172 1 294 1 295 1 296 1 273 1 228 1 377 1 178 1 87 1 380 1 
311 1 262 1 187 1 282 1 191 1 96 1 145 1 166 2 73 1 342 1 240 1 287 1 343 2 76 1 51 1 78 1 325 1 170 1 35 1 294 1 295 1 296 1 273 1 228 1 135 1 178 1 87 1 380 1 
209 1 161 1 237 1 262 2 145 1 166 4 73 1 343 2 51 2 16 1 347 2 151 2 110 1 203 1 223 1 275 2 228 1 23 1 178 1 87 1 112 2 380 1 
161 1 237 1 262 2 311 1 191 1 96 1 145 1 166 4 8 1 73 1 287 1 343 2 76 1 51 2 347 2 16 1 325 1 151 2 170 1 172 1 294 1 295 1 296 1 110 1 83 1 203 1 273 1 223 1 275 2 23 1 111 1 228 1 377 1 178 1 87 1 112 2 380 1 
209 1 161 1 237 1 262 1 145 1 96 1 166 3 73 1 343 2 11 1 76 1 51 2 268 1 16 1 347 1 151 1 249 1 58 1 203 1 223 1 275 1 23 1 228 1 178 1 356 1 87 1 112 1 380 1 231 1 
161 3 66 2 237 3 262 10 117 1 280 2 283 1 239 1 367 1 166 19 73 2 343 4 51 9 16 3 291 1 151 6 293 1 56 2 132 1 110 3 57 1 203 3 223 3 228 2 23 3 179 1 87 2 65 1 380 2 90 1 
305 1 161 2 66 2 237 3 262 12 117 1 46 1 280 1 283 1 367 1 166 26 239 2 73 3 343 6 51 14 16 3 151 4 293 1 20 1 56 4 108 1 175 1 132 2 110 2 57 2 203 2 223 3 23 2 228 3 87 3 180 1 380 3 361 2 90 2 
237 5 46 1 280 1 283 1 239 3 343 6 105 1 51 20 16 4 291 1 151 8 293 1 20 1 56 4 108 1 57 1 110 4 203 5 23 4 361 1 114 1 305 1 161 4 66 4 210 1 262 21 117 1 313 1 70 1 166 41 367 1 73 3 128 1 81 1 132 3 175 1 223 4 228 3 179 1 87 3 180 1 380 3 90 2 
114 1 305 1 161 3 66 4 210 1 237 5 262 18 117 1 313 1 46 1 280 1 70 1 283 1 239 3 367 1 166 38 73 4 343 8 105 1 51 20 16 4 291 1 151 7 128 1 293 1 20 1 81 1 56 4 108 1 175 1 132 3 110 4 57 1 203 4 223 4 228 4 23 3 179 1 87 4 180 1 380 4 361 2 90 2 
114 1 305 1 161 7 66 4 210 1 237 8 262 25 117 1 313 1 46 1 280 1 70 1 315 2 283 1 239 2 367 1 166 52 73 2 343 4 51 27 16 7 151 14 128 1 293 1 20 1 81 1 56 4 108 1 175 1 132 4 110 7 57 1 203 8 223 7 228 2 23 7 179 2 87 2 180 1 380 2 361 1 90 1 
143 1 149 1 61 1 306 1 277 1 48 1 37 1 130 1 116 1 370 1 
54 1 328 1 
143 1 324 1 149 1 17 1 306 1 37 1 130 1 116 1 371 1 
257 1 149 1 150 1 3 1 306 1 277 1 94 1 130 1 37 1 116 1 260 1 370 1 41 2 143 1 61 1 337 1 207 1 244 1 
257 1 149 1 150 1 3 1 306 1 277 1 94 1 130 1 37 1 116 1 260 1 370 1 41 2 143 1 61 1 337 1 207 1 244 1 
257 1 149 1 150 1 3 1 306 1 277 1 94 1 130 1 37 1 116 1 260 1 370 1 41 2 143 1 61 1 337 1 207 1 244 1 
31 1 300 1 376 1 
31 1 300 1 376 1 
0 1 142 1 
0 1 376 1 142 1 
246 1 252 1 
246 1 268 2 149 1 150 1 54 1 306 1 35 1 130 1 37 1 94 1 328 1 116 1 260 1 41 1 143 1 176 1 96 2 47 1 9 1 356 2 252 1 137 1 207 1 254 1 104 1 231 2 76 2 
31 1 300 1 
0 1 376 1 142 1 
209 1 262 1 311 2 145 1 96 2 166 2 73 1 342 1 343 2 146 1 76 2 51 1 268 2 78 1 348 1 290 1 325 1 170 2 152 2 294 2 295 1 296 1 39 1 84 1 273 1 334 1 228 1 178 1 302 1 87 1 380 1 
362 1 14 1 92 1 115 1 325 1 197 1 170 2 294 2 311 2 38 1 156 2 353 1 273 1 338 1 85 1 111 1 63 1 359 1 88 1 
362 1 14 1 92 1 1 1 115 1 325 1 170 1 294 1 311 1 38 1 156 2 353 1 273 1 338 1 85 1 359 1 88 1 
325 1 2 1 197 1 170 1 5 1 294 1 295 1 296 1 311 1 353 1 273 1 282 1 225 1 43 1 
362 1 14 1 92 1 115 1 325 1 197 1 170 1 294 1 311 1 38 1 156 2 353 1 273 1 338 1 85 1 63 1 359 1 88 1 
72 1 
127 1 339 1 337 1 375 1 341 1 12 1 261 1 
339 1 94 1 68 1 341 1 285 1 266 1 124 1 150 1 218 1 127 1 247 1 333 1 60 1 335 1 337 2 25 1 64 1 
91 1 234 1 339 2 140 2 93 1 94 5 235 2 237 2 282 1 190 2 285 5 286 6 341 8 287 3 10 2 102 2 12 1 106 6 16 2 150 5 294 3 247 3 295 3 202 2 296 10 203 2 59 3 60 4 111 1 25 4 255 2 256 1 258 2 161 2 311 3 68 6 211 1 214 2 266 4 320 2 122 2 126 2 325 3 218 4 127 9 170 3 79 1 272 2 333 12 273 4 223 2 134 1 375 1 337 8 
305 1 339 2 161 2 94 1 66 1 237 2 68 3 46 1 211 1 97 1 239 1 285 1 286 5 341 5 266 2 106 5 16 2 150 1 218 2 127 8 20 1 247 1 272 2 202 1 175 1 132 1 331 1 333 6 203 2 223 2 60 2 337 5 25 2 180 1 255 1 
150 1 218 1 127 2 94 1 210 1 237 1 272 2 186 1 313 1 70 1 203 1 60 1 341 1 25 1 301 1 266 1 242 1 322 1 
218 1 339 1 127 1 60 1 375 1 337 1 25 1 341 1 266 1 12 1 
106 5 16 2 127 5 161 2 235 1 272 2 237 2 68 5 333 10 203 2 223 2 337 5 341 5 286 5 255 1 
150 1 339 1 337 1 285 1 94 1 247 1 
364 1 234 1 94 3 5 1 311 4 279 1 211 2 189 1 282 2 284 1 285 4 341 2 32 1 266 1 325 1 150 3 218 2 170 4 127 2 294 4 247 2 295 1 296 1 202 2 273 1 134 2 60 2 25 2 43 1 
262 1 311 1 282 1 191 1 96 3 145 1 166 1 8 1 73 1 343 2 100 1 287 1 11 2 76 3 78 1 268 2 195 1 325 1 170 1 35 1 172 1 294 1 295 1 296 1 273 1 228 1 377 1 178 1 356 2 87 1 380 1 231 2 
106 2 218 1 127 1 339 2 81 1 68 2 202 1 333 4 211 1 60 1 337 4 286 2 341 2 25 1 266 1 
143 1 37 1 238 1 
143 1 37 1 238 1 
143 1 281 1 61 1 37 1 252 1 
143 1 37 1 238 1 
143 1 28 1 37 1 
143 1 28 1 37 1 
143 1 28 1 37 1 
143 1 37 1 
306 1 116 1 
51 4 114 1 151 3 128 1 210 1 237 1 81 1 262 4 110 2 313 1 70 1 203 1 166 8 73 2 23 1 228 2 343 4 87 2 380 2 361 1 
114 1 51 3 151 2 128 1 210 1 237 1 81 1 262 3 261 1 313 1 110 2 70 1 203 1 166 6 
51 2 16 1 151 2 29 1 161 1 237 1 262 2 110 1 203 1 223 1 166 4 73 1 228 1 23 1 343 2 87 1 380 1 
51 3 16 1 151 2 161 1 66 2 237 1 262 4 132 1 110 1 203 1 223 1 239 1 166 7 23 1 179 1 
114 1 161 2 259 1 66 2 210 2 237 3 262 12 313 2 70 1 315 1 166 23 73 2 343 4 245 1 51 11 16 2 151 9 128 1 81 1 132 2 110 5 203 3 223 2 23 4 228 2 179 1 87 2 380 2 361 2 
166 1 66 1 262 1 
51 1 166 1 132 1 
51 3 16 1 151 3 29 1 161 1 235 1 237 1 262 3 110 2 203 1 223 1 166 6 73 1 228 1 23 1 343 2 87 1 380 1 
305 1 161 2 66 1 237 2 262 6 46 1 166 12 239 1 73 1 343 2 51 6 16 2 151 2 293 1 20 1 132 1 175 1 110 1 203 2 223 2 23 1 228 1 87 1 180 1 380 1 
51 3 151 2 210 1 237 1 262 3 313 1 110 1 70 1 203 1 166 6 23 1 
51 1 114 1 151 2 128 1 210 1 262 2 110 1 313 1 166 3 73 1 23 1 228 1 343 2 87 1 380 1 361 1 245 1 
51 5 151 5 293 1 210 2 237 2 262 5 313 2 110 3 70 1 203 2 166 10 73 1 228 1 23 2 301 1 343 2 87 1 380 1 
51 2 16 1 151 1 293 1 237 1 166 2 73 1 228 1 23 1 343 2 87 1 380 1 
51 2 16 1 151 2 161 1 293 1 237 1 262 2 110 1 203 1 223 1 166 4 73 1 228 1 23 1 343 2 87 1 380 1 
51 1 291 1 151 2 293 1 210 1 262 2 313 1 110 1 166 3 73 3 228 3 23 1 343 6 87 3 380 3 361 1 245 1 
114 1 29 1 161 3 66 4 210 3 237 5 262 18 313 3 164 1 70 2 239 1 166 34 73 5 343 10 245 1 51 16 107 1 16 3 291 1 151 12 128 1 293 1 81 1 40 1 132 3 110 7 203 5 223 3 228 5 23 5 179 1 87 5 380 5 361 2 
114 1 66 1 210 1 237 1 262 4 46 1 313 1 70 1 166 8 239 1 73 1 343 2 51 4 151 2 293 1 128 1 81 1 132 1 110 2 203 1 228 1 87 1 380 1 
114 1 29 1 66 2 210 1 237 2 262 5 313 1 46 1 70 1 166 11 239 1 73 2 343 4 51 6 16 1 151 3 128 1 293 1 81 1 132 1 110 2 203 1 223 1 228 2 23 1 179 1 87 2 380 2 
114 1 305 1 29 1 161 2 66 1 210 1 237 3 262 10 313 1 46 1 70 1 166 19 239 1 73 3 343 6 51 9 16 2 151 4 128 1 293 1 20 1 81 1 175 1 132 1 110 3 203 3 223 2 23 1 228 3 87 3 180 1 380 3 361 1 
114 1 305 1 29 1 161 1 66 1 210 1 237 3 262 7 313 1 46 1 70 1 166 17 239 1 73 3 343 6 51 10 16 2 151 5 128 1 293 1 20 1 81 1 132 1 175 1 110 3 203 2 223 2 23 2 228 3 87 3 180 1 380 3 361 1 
114 1 66 1 210 1 237 1 262 4 46 1 313 1 70 1 166 8 239 1 73 1 343 2 51 4 151 2 293 1 128 1 81 1 132 1 110 2 203 1 228 1 87 1 380 1 
305 1 161 2 66 1 237 2 262 6 46 1 166 12 239 1 73 1 343 2 51 6 16 2 151 2 293 1 20 1 132 1 175 1 110 1 203 2 223 2 23 1 228 1 87 1 180 1 380 1 
114 1 305 1 29 1 161 1 66 1 210 1 237 3 262 8 313 1 46 1 70 1 166 18 239 1 73 4 343 8 51 10 16 2 151 5 128 1 293 1 20 1 81 1 175 1 132 1 110 3 203 2 223 2 23 2 228 4 87 4 180 1 380 4 361 2 
305 1 161 2 66 1 237 3 262 7 46 1 166 16 239 1 73 4 343 8 51 9 16 3 291 1 151 6 293 1 20 1 175 1 132 1 110 3 203 2 223 3 23 3 228 4 87 4 180 1 380 4 361 2 
114 2 51 3 151 6 128 1 210 3 237 1 262 4 313 3 110 3 70 1 203 1 166 7 23 3 
114 1 305 1 161 1 66 1 210 1 237 3 262 8 313 1 46 1 70 1 166 18 239 1 73 4 343 8 51 10 16 2 291 1 151 4 128 1 293 1 20 1 81 1 175 1 132 1 110 3 203 2 223 2 23 1 228 4 87 4 180 1 380 4 361 2 
268 1 96 1 276 1 299 1 35 1 101 1 76 1 
268 1 276 1 198 1 365 1 35 1 69 1 212 1 96 1 299 1 336 1 101 1 76 1 
273 1 282 1 325 1 170 1 5 1 294 1 295 1 296 1 43 1 261 1 311 1 
268 1 325 1 170 1 35 1 162 1 294 1 295 1 296 1 311 1 273 1 282 1 191 1 96 2 8 1 287 1 356 1 231 1 76 2 
268 2 258 1 325 1 170 1 35 1 200 1 162 1 294 1 295 2 296 3 311 1 6 1 273 1 191 1 96 2 134 1 8 1 287 2 356 1 320 1 360 1 231 2 76 2 
258 1 162 1 311 2 6 1 191 1 96 2 240 1 287 2 320 1 76 2 268 2 325 1 170 2 35 1 200 1 294 2 295 2 296 3 273 1 134 1 356 1 26 1 360 1 231 2 
258 1 339 1 94 2 311 3 282 1 214 1 285 1 287 1 102 1 320 1 325 1 150 2 270 1 170 3 294 3 295 1 296 4 273 1 298 1 59 1 134 1 337 1 26 1 
258 1 150 2 325 1 339 1 170 3 94 2 294 3 295 1 311 3 296 4 282 1 273 1 190 1 59 1 134 1 337 1 214 1 285 1 287 1 102 1 26 1 320 1 
273 1 325 1 170 1 294 1 236 1 311 1 
14 1 325 2 152 1 170 7 93 1 183 1 21 1 294 7 236 1 295 2 45 1 311 6 296 3 188 1 282 2 273 3 157 1 111 1 287 1 216 1 302 1 
237 1 191 1 96 2 145 2 8 1 343 4 287 1 51 3 347 1 151 2 294 1 295 1 296 1 110 2 203 1 111 1 356 1 253 1 112 1 114 1 209 1 162 1 210 1 311 1 262 3 313 1 70 1 166 6 73 2 76 2 268 1 325 1 170 1 128 1 35 2 172 1 81 1 83 1 273 1 334 1 275 1 228 2 377 1 178 2 87 2 380 2 231 1 
234 1 339 1 140 1 94 3 311 1 282 1 190 1 214 1 341 1 285 2 266 2 10 1 102 1 104 1 12 1 126 1 150 3 218 2 127 1 170 1 294 1 247 1 296 2 59 1 60 2 337 1 375 1 25 2 
325 1 170 2 79 1 93 1 294 2 236 1 295 1 311 2 296 2 273 2 111 1 287 1 102 1 
325 1 170 4 5 1 294 4 295 1 311 4 296 1 273 1 282 1 317 1 111 1 26 1 43 1 
148 1 325 1 170 2 307 1 294 2 185 1 295 1 311 2 296 1 273 2 134 1 157 1 287 1 216 1 
156 1 273 1 282 1 325 1 170 1 338 1 85 1 294 1 88 1 311 1 
14 1 273 1 348 1 325 1 170 2 111 1 302 1 294 2 295 1 296 1 311 2 
325 2 170 5 5 1 294 5 295 2 311 4 45 1 296 3 188 1 282 1 273 2 317 1 134 1 111 1 302 1 43 1 
325 2 170 5 5 1 294 5 295 2 311 4 296 3 188 1 282 1 273 2 317 1 134 1 111 1 302 1 43 1 123 1 
268 1 325 1 170 1 35 1 162 1 294 1 295 1 296 1 311 1 273 1 282 1 191 1 96 2 240 1 287 1 356 1 231 1 76 2 
325 1 170 1 93 1 183 1 294 1 295 1 311 1 296 1 273 2 157 1 134 1 287 1 216 1 
165 1 35 1 18 1 241 1 13 1 
150 2 339 1 350 1 35 1 18 2 271 1 200 1 94 2 329 1 6 1 165 2 354 1 373 1 337 1 214 1 241 2 104 1 360 1 13 1 
268 1 39 1 165 1 84 1 96 1 241 1 146 1 13 1 76 1 
354 1 271 1 13 1 
227 1 230 1 261 1 346 1 
227 1 192 1 230 1 138 1 221 1 222 1 346 1 
71 1 99 1 138 1 
227 1 4 1 192 1 141 1 230 1 138 3 159 1 221 3 147 1 217 2 222 1 346 1 
193 1 227 1 192 1 230 1 138 2 221 2 222 1 330 1 346 1 
156 1 362 1 338 1 192 1 129 1 206 1 138 1 221 1 147 1 222 1 346 1 
227 1 192 1 138 1 221 1 147 1 222 1 346 1 
227 2 192 1 230 1 138 1 221 1 147 1 222 1 
233 1 309 1 221 2 222 2 355 1 227 1 192 2 138 2 147 1 346 1 
193 2 44 1 221 3 184 1 222 1 227 1 192 1 230 1 138 3 206 1 147 1 303 1 346 2 
362 1 193 1 92 1 182 1 221 2 222 1 156 2 227 1 85 1 192 1 338 1 230 1 138 2 147 1 346 1 
193 2 221 4 222 2 330 1 7 1 227 1 192 2 230 1 138 4 206 1 147 1 303 1 346 2 
227 1 192 1 230 1 138 1 221 1 147 1 222 1 346 1 
193 2 4 1 221 4 222 1 109 1 227 2 192 1 230 2 138 4 206 1 159 1 217 1 303 1 346 3 
50 1 193 1 221 2 222 1 316 1 167 1 227 1 192 1 138 2 230 1 147 1 346 1 
292 1 4 2 221 3 222 1 192 1 227 1 138 3 230 1 159 1 147 1 217 2 346 1 
52 1 269 1 136 2 346 2 
274 1 192 1 138 1 221 1 147 1 222 1 
193 1 227 1 192 1 230 1 138 2 184 1 221 2 147 1 222 1 346 1 
215 1 
227 1 192 1 230 1 138 1 221 1 147 1 222 1 346 1 
193 1 227 1 192 1 230 1 138 3 184 1 221 3 147 1 217 1 222 1 346 1 
109 1 206 1 303 1 346 1 
227 1 346 1 

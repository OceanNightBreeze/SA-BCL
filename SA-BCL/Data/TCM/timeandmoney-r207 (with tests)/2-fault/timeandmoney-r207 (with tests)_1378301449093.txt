#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | STATEMENT | 6348 | stmt -> ;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z | CONDITION | 10082 | if (x) -> if (!x)
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
124 1 74 1 27 1 260 4 98 2 193 2 51 1 309 1 265 9 170 1 101 2 81 1 135 1 36 5 295 9 296 1 271 6 162 1 87 1 114 2 348 2 277 3 349 2 252 1 155 2 375 1 120 1 327 1 
124 1 74 1 27 1 260 4 98 2 193 2 51 1 309 1 265 9 170 1 101 2 81 1 135 1 36 5 295 9 296 1 271 6 162 1 87 1 114 2 348 2 277 3 349 2 252 1 155 2 375 1 120 1 327 1 
124 1 74 1 27 1 260 5 98 2 193 2 51 1 309 1 265 10 170 1 101 2 81 1 135 1 36 6 295 10 296 1 271 7 162 1 87 1 114 2 348 2 277 4 349 2 252 1 155 2 375 1 120 1 327 1 
74 1 27 1 260 3 98 2 193 2 51 1 309 1 265 7 170 1 101 2 81 1 135 1 36 4 295 7 296 1 271 4 162 1 87 1 114 2 348 2 277 2 349 1 252 1 155 2 375 1 120 1 327 1 
124 1 295 4 271 3 27 1 260 2 114 1 98 1 193 1 277 1 348 1 309 1 349 2 265 4 252 1 155 1 375 1 327 1 36 3 
295 2 162 1 114 1 98 1 276 1 348 1 309 1 265 2 101 1 253 1 155 1 375 1 120 1 327 1 36 1 329 1 
295 3 271 1 260 1 114 2 348 2 277 1 309 1 265 3 101 1 135 1 375 1 327 1 36 2 
124 1 295 9 296 1 271 7 27 1 260 4 114 2 98 1 193 1 348 2 277 3 309 1 349 2 152 1 265 9 101 1 81 1 53 1 252 1 135 1 155 1 375 1 327 1 36 5 
124 1 295 9 296 1 271 7 27 1 260 4 114 2 98 1 193 1 348 2 277 3 309 1 349 2 152 1 265 9 101 1 81 1 53 1 252 1 135 1 155 1 375 1 327 1 36 5 
52 1 267 1 11 1 
109 1 41 2 267 1 
366 2 84 1 37 2 61 1 278 2 238 2 230 2 121 2 
330 1 237 2 26 1 96 2 238 2 216 1 49 1 77 1 31 1 197 1 310 2 364 1 138 1 268 2 366 3 84 1 200 1 142 1 37 2 59 1 61 1 86 1 38 1 231 1 148 1 230 2 176 1 370 1 180 1 119 1 19 1 278 3 209 1 182 1 167 1 121 2 44 2 
6 1 366 1 84 1 37 1 171 1 90 1 278 1 238 1 230 1 121 1 
125 1 366 1 238 1 297 1 6 1 102 1 278 1 267 1 43 1 339 1 11 1 305 1 376 1 107 1 
366 1 37 1 238 1 297 1 230 1 6 1 102 2 278 1 267 1 43 1 11 1 305 2 376 1 121 1 107 1 
129 1 102 1 173 1 305 1 340 1 
129 1 316 1 134 1 102 2 267 1 11 1 305 2 340 1 
129 1 102 1 305 1 
84 1 366 1 37 1 238 1 230 1 6 1 171 1 102 1 208 1 90 1 278 1 305 1 340 1 121 1 
267 1 
311 1 129 1 134 1 102 2 267 1 11 1 305 2 340 1 
129 2 236 1 192 1 335 1 78 2 336 1 198 2 134 1 102 5 245 1 267 1 353 1 11 1 305 5 340 2 156 2 377 1 328 1 123 1 
52 1 61 1 
366 2 37 1 238 2 61 2 48 1 218 1 230 1 278 2 121 1 
368 1 266 1 283 1 
366 1 237 1 59 1 61 1 86 1 77 1 356 1 176 1 370 1 197 1 310 1 180 1 119 1 278 1 209 1 44 1 
366 2 59 1 237 1 238 1 86 1 230 1 77 1 251 1 176 1 370 1 197 1 310 1 180 1 40 1 119 1 278 2 209 1 283 1 121 1 44 1 
366 3 37 1 61 1 278 3 238 3 230 3 251 1 121 3 
6 1 366 1 90 1 278 1 238 1 230 1 121 1 
6 1 366 1 37 1 278 1 238 1 48 1 230 1 218 1 121 1 
330 1 237 1 96 2 238 3 216 1 49 1 354 1 218 1 77 1 6 1 197 1 310 1 102 1 364 1 138 1 56 1 268 1 107 1 366 4 84 1 59 1 37 2 61 1 297 1 86 1 38 1 231 1 148 1 230 3 251 1 176 1 370 1 180 1 40 1 119 1 19 1 278 4 209 1 182 1 43 1 305 1 376 1 121 3 44 1 
125 1 366 2 371 1 61 1 278 2 238 2 230 1 251 1 121 1 
366 3 0 1 37 1 238 3 297 1 218 1 230 3 251 2 6 1 40 1 102 1 278 3 267 1 43 1 56 1 305 1 376 1 121 3 107 1 
366 2 37 1 368 1 278 2 238 2 230 2 218 1 251 1 283 1 121 2 
366 1 237 1 59 1 61 1 86 1 77 1 176 1 370 1 310 1 197 1 180 1 119 1 278 1 209 1 44 1 
366 1 237 1 59 1 61 1 86 1 77 1 370 1 310 1 197 1 180 1 289 1 278 1 209 1 314 1 44 1 
96 2 28 1 216 1 49 1 132 1 219 1 264 1 359 1 8 1 361 1 266 2 364 2 268 4 269 1 368 2 38 1 231 1 148 1 179 1 19 1 154 1 167 2 168 1 283 2 
6 1 286 1 366 1 297 1 278 1 238 1 230 1 121 1 
125 1 366 5 143 1 37 1 238 5 61 1 230 4 218 1 251 2 371 1 40 1 278 5 246 1 121 4 
286 1 6 1 366 2 90 1 278 2 238 2 230 2 121 2 
217 1 303 1 
217 1 303 1 
298 1 42 1 
298 1 42 1 
298 1 42 1 
284 1 217 1 303 1 
217 1 303 1 164 1 
45 1 298 1 42 1 217 2 303 2 99 1 
284 1 217 1 303 1 
284 1 217 1 303 1 
159 1 217 1 303 1 
159 1 217 1 303 1 
159 1 217 1 303 1 
270 2 75 2 45 1 187 1 319 1 110 2 217 2 262 1 204 1 287 2 244 1 312 1 102 2 267 1 303 2 352 1 248 2 305 2 185 3 
75 1 238 2 307 1 217 1 188 1 76 1 287 1 102 1 248 1 270 1 366 2 317 1 319 1 61 1 230 2 164 1 350 1 278 2 303 1 325 1 305 1 185 1 22 1 121 2 
98 1 155 1 193 1 
98 1 155 1 329 1 
161 1 351 1 308 1 155 3 193 2 329 1 
351 1 157 1 308 1 155 2 193 1 329 1 
351 2 308 1 155 2 193 1 329 1 
129 1 28 1 188 1 76 1 221 1 358 2 78 1 196 1 336 1 359 1 8 1 198 1 361 1 337 2 134 1 102 5 245 3 267 2 11 1 340 4 58 1 109 1 85 1 203 1 146 1 65 1 41 3 166 2 305 5 156 1 22 1 377 2 
129 6 28 3 46 1 335 1 358 6 78 2 336 1 359 3 8 3 198 2 361 3 337 6 102 9 134 1 55 1 245 8 267 5 173 5 11 1 340 7 58 1 109 3 15 1 203 2 146 2 178 1 65 3 117 5 41 9 212 1 305 9 22 4 156 2 377 6 23 1 
28 1 221 1 335 1 78 1 358 2 359 1 198 1 8 1 361 1 102 3 337 2 245 3 267 3 11 1 340 2 109 2 85 1 203 1 146 1 65 1 41 4 166 1 305 3 156 1 22 1 377 2 
28 2 335 1 221 1 358 4 78 1 359 2 198 1 8 2 361 2 337 4 102 4 55 1 245 5 267 4 11 1 340 3 109 3 15 1 85 1 203 1 146 1 65 2 41 7 166 2 212 1 305 4 156 1 22 2 377 4 
197 1 306 1 52 1 
197 1 145 1 
14 1 
197 1 86 1 
306 2 197 3 201 1 86 1 77 1 240 1 
197 1 86 1 77 1 
197 1 300 1 
345 1 147 1 250 2 132 3 195 1 241 1 359 1 89 1 8 1 136 1 364 3 167 4 268 7 255 1 82 1 122 1 269 2 
345 1 147 1 250 2 132 3 195 1 241 1 359 1 89 1 8 1 136 1 364 3 167 4 268 7 255 1 82 1 122 1 269 2 
345 1 147 1 299 1 250 2 132 3 195 1 241 1 359 1 89 1 8 1 136 1 364 3 167 4 268 7 255 1 82 1 122 1 269 2 
1 1 96 2 132 2 100 1 32 1 241 1 195 1 362 1 136 1 247 1 364 3 268 6 269 1 108 1 345 1 38 1 148 1 231 1 250 1 89 2 19 1 279 1 167 3 255 1 
96 4 132 4 195 1 241 1 359 1 8 1 362 1 136 1 364 4 268 9 82 1 140 1 269 3 345 1 38 2 231 2 148 2 147 1 250 2 18 1 89 1 19 2 167 5 122 1 
127 1 237 1 98 1 30 1 193 1 309 1 310 1 265 2 101 1 223 1 292 1 36 1 294 1 295 2 161 1 59 1 271 1 367 1 114 1 112 1 273 1 347 1 370 1 348 1 155 2 375 1 186 1 327 1 44 1 329 1 
127 1 237 1 98 1 30 1 193 1 309 1 310 1 265 3 101 1 290 1 223 1 36 1 294 1 295 3 161 1 59 1 271 2 367 1 114 1 273 1 347 1 370 1 348 1 66 1 70 1 155 2 186 1 327 1 44 1 329 1 
127 1 237 1 98 1 30 1 193 1 309 1 310 1 265 2 101 1 290 1 223 1 36 1 294 1 295 2 161 1 59 1 271 2 367 1 370 1 66 1 155 2 186 1 327 1 44 1 329 1 
127 2 237 1 263 1 334 1 310 1 7 1 197 1 265 1 101 2 103 1 223 2 291 1 294 2 295 1 59 1 86 1 114 1 149 1 370 1 348 1 209 1 70 1 44 1 
127 1 237 1 98 1 30 1 193 1 310 1 265 1 101 1 290 1 223 1 294 1 295 1 161 1 59 1 367 1 114 1 112 1 273 1 347 1 370 1 348 1 155 2 375 1 186 1 44 1 329 1 
29 1 
93 1 237 2 238 1 47 1 50 1 334 1 6 1 336 1 197 1 288 1 198 1 102 5 245 2 339 1 11 1 106 1 107 1 109 2 59 1 16 2 60 1 297 1 346 1 64 2 165 2 209 2 254 2 305 5 213 2 215 1 125 1 129 6 25 1 258 2 78 1 310 2 134 3 222 1 267 2 226 2 366 1 320 4 86 1 146 1 149 1 370 1 41 2 278 1 183 1 43 1 156 1 376 1 377 2 44 2 379 1 
125 1 215 1 25 1 129 2 238 1 50 1 6 1 311 1 102 3 134 1 339 1 226 1 107 1 366 1 60 1 297 1 320 2 278 1 183 1 43 1 305 3 376 1 
125 1 215 1 129 1 25 1 238 1 50 1 6 1 311 1 102 3 134 1 267 1 339 1 11 1 107 1 366 1 60 1 297 1 320 3 64 1 278 1 183 1 43 1 305 3 376 1 
125 1 215 1 25 1 129 2 238 1 50 1 6 1 311 1 134 1 102 3 267 1 339 1 226 1 11 1 107 1 366 1 60 1 297 1 320 3 64 1 278 1 183 1 43 1 305 3 376 1 213 1 
93 1 238 1 50 1 6 1 336 1 198 1 102 5 245 1 339 1 11 5 105 1 107 1 109 2 60 1 16 2 297 1 64 4 165 2 254 2 305 5 213 4 215 1 125 1 25 1 129 7 258 2 78 1 79 1 311 1 134 3 222 1 267 5 226 4 139 1 366 1 320 6 39 1 232 1 278 1 43 1 183 1 376 1 156 1 377 1 
93 1 238 1 50 1 6 1 336 1 198 1 102 4 245 1 339 1 11 1 106 1 107 1 109 2 60 1 16 2 297 1 64 2 165 2 254 2 305 4 213 2 125 1 215 1 25 1 129 4 258 2 78 1 134 2 222 1 267 2 226 2 366 1 320 4 41 2 278 1 43 1 183 1 376 1 156 1 377 1 
125 1 215 1 93 1 129 4 25 1 258 2 238 1 50 1 78 1 6 1 79 1 336 1 198 1 134 2 102 4 222 1 245 1 267 1 226 2 339 1 11 1 105 1 107 1 366 1 109 2 16 2 60 1 297 1 320 4 39 1 64 2 165 2 278 1 183 1 43 1 254 2 305 4 213 2 376 1 156 1 377 1 
125 1 215 1 93 1 129 4 25 1 258 2 238 1 50 1 78 1 6 1 79 1 336 1 198 1 134 2 102 4 222 1 245 1 267 1 226 2 339 1 11 1 105 1 107 1 366 1 109 2 16 2 60 1 297 1 320 4 39 1 64 2 165 2 278 1 183 1 43 1 254 2 305 4 213 2 376 1 156 1 377 1 
125 1 215 1 129 4 25 1 258 2 238 1 189 1 50 1 78 1 6 1 336 1 198 1 134 2 102 4 222 1 245 1 267 1 10 1 226 2 339 1 11 1 105 1 107 1 366 1 60 1 344 1 297 1 320 4 272 2 274 2 64 2 41 2 278 1 183 1 43 1 254 2 305 4 213 2 376 1 156 1 377 1 
125 1 215 1 93 1 25 1 129 5 258 2 238 1 50 1 78 1 6 1 336 1 79 1 198 1 134 2 102 4 222 1 245 1 267 1 339 1 139 1 226 3 11 1 105 1 107 1 366 1 109 2 16 2 60 1 297 1 320 5 39 1 64 3 165 2 278 1 183 1 43 1 254 2 305 4 156 1 376 1 213 3 377 1 
125 1 215 1 93 1 25 1 129 5 258 2 238 1 50 1 78 1 6 1 336 1 79 1 198 1 134 2 102 4 222 1 245 1 267 1 339 1 139 1 226 3 11 1 105 1 107 1 366 1 109 2 16 2 60 1 297 1 320 5 39 1 64 3 165 2 278 1 183 1 43 1 254 2 305 4 156 1 376 1 213 3 377 1 
238 1 50 1 6 1 336 1 198 1 102 4 245 1 339 1 11 1 106 1 107 1 60 1 344 1 297 1 64 2 254 2 305 4 213 2 125 1 215 1 25 1 129 4 258 2 78 1 134 2 222 1 267 1 226 2 366 1 320 4 272 2 274 2 41 2 278 1 43 1 183 1 376 1 156 1 377 1 
96 2 216 1 49 1 132 2 241 1 52 1 359 1 8 1 266 1 364 3 268 6 82 1 269 2 368 1 345 1 61 2 38 1 231 1 148 1 147 1 250 1 179 1 19 1 167 3 283 1 122 1 
1 4 96 4 216 2 28 2 130 1 333 2 49 1 132 4 100 4 195 2 5 1 359 2 158 2 8 4 361 4 266 16 247 1 364 9 268 22 341 1 269 2 142 1 368 6 61 1 38 2 231 2 148 2 233 1 65 4 19 2 182 1 167 13 283 16 
237 1 238 1 96 2 216 1 49 1 77 1 356 1 197 1 310 1 338 1 364 1 268 2 341 1 366 2 142 1 59 1 368 1 61 1 86 1 38 1 148 1 230 1 231 1 251 1 176 1 370 1 150 1 180 1 40 1 119 1 209 1 19 1 278 2 182 1 21 1 167 1 44 1 121 1 
237 3 96 6 238 1 2 2 49 3 3 1 241 1 195 4 197 2 8 3 290 1 341 1 59 2 61 2 345 1 62 1 250 1 251 1 65 2 119 2 209 1 19 3 167 10 122 1 121 1 216 3 28 2 77 2 132 8 310 3 359 3 361 2 266 7 34 2 364 10 138 2 268 20 82 1 141 2 269 4 365 2 366 3 142 1 144 1 368 7 86 2 38 3 147 1 231 3 230 1 148 3 176 2 370 2 180 2 40 1 278 3 182 1 44 3 283 7 
237 7 26 2 238 1 96 4 216 2 49 2 334 1 4 1 33 1 197 3 310 8 290 1 364 1 292 1 268 2 366 1 142 1 59 2 86 2 38 2 115 1 230 1 231 2 148 2 163 1 251 1 149 1 370 2 179 1 20 1 278 1 209 2 19 2 323 1 324 1 182 1 167 1 121 1 44 8 
96 2 238 1 216 1 28 1 218 1 49 1 132 1 359 1 8 1 361 1 266 1 199 1 364 2 268 3 341 1 269 1 366 1 37 1 368 1 38 1 231 1 148 1 230 1 65 1 19 1 278 1 167 1 283 1 121 1 
368 1 96 2 216 1 38 1 49 1 148 1 231 1 132 1 219 1 195 1 179 1 8 1 361 1 266 1 19 1 268 2 167 2 283 1 
368 1 96 2 216 1 28 1 38 1 49 1 148 1 231 1 132 1 264 1 179 1 359 1 266 1 19 1 364 2 268 2 283 1 269 1 
96 2 216 1 28 1 49 1 132 2 195 1 359 1 8 1 361 1 266 2 364 2 268 4 269 1 368 2 38 1 231 1 148 1 179 1 65 1 19 1 167 2 283 2 
368 1 96 2 216 1 38 1 49 1 148 1 231 1 132 1 219 1 195 1 8 1 361 1 266 1 19 1 324 1 268 2 167 2 283 1 
368 1 96 2 216 1 28 1 38 1 49 1 148 1 231 1 132 1 264 1 359 1 266 1 19 1 324 1 364 2 268 2 283 1 269 1 
96 2 216 1 28 1 49 1 132 2 195 1 359 1 8 1 361 1 266 2 364 2 268 4 269 1 368 2 38 1 231 1 148 1 65 1 19 1 324 1 167 2 283 2 
96 2 216 1 28 1 49 1 132 2 195 1 359 1 8 1 361 1 266 2 364 2 268 4 269 1 368 2 38 1 231 1 148 1 65 1 19 1 167 2 283 2 
237 1 96 2 216 1 49 1 77 1 310 1 197 1 138 1 364 1 268 2 366 1 142 1 59 1 61 1 86 1 38 1 148 1 231 1 176 1 370 1 180 1 119 1 209 1 278 1 19 1 182 1 167 1 44 1 
237 1 96 2 216 1 49 1 77 1 220 1 310 1 197 1 289 1 314 1 364 1 268 2 366 1 142 1 59 1 61 1 86 1 38 1 148 1 231 1 370 1 180 1 209 1 278 1 19 1 182 1 167 1 44 1 
96 2 216 1 28 1 49 1 132 2 195 1 359 1 8 1 361 1 266 2 364 2 268 4 341 1 269 1 368 2 38 1 231 1 148 1 65 1 19 1 167 2 283 2 
237 1 96 2 28 1 216 1 49 1 77 1 132 2 195 1 310 1 197 1 359 1 8 1 361 1 266 2 364 2 138 1 268 4 292 1 141 1 269 1 366 1 59 1 368 2 86 1 38 1 148 1 231 1 176 1 370 1 180 1 65 1 119 1 278 1 19 1 167 2 283 2 44 1 
96 2 238 1 28 1 216 1 218 1 49 1 132 1 195 1 359 1 8 1 361 1 266 1 364 1 268 3 341 1 315 1 366 1 37 1 368 1 38 1 231 1 148 1 230 1 65 1 19 1 278 1 167 2 121 1 283 1 
128 3 1 2 96 8 28 3 239 1 132 6 100 2 241 1 195 3 359 4 360 1 8 4 361 3 362 2 172 1 247 2 224 1 225 1 364 16 268 33 82 1 140 1 293 1 269 3 345 1 38 4 147 1 231 4 148 4 250 1 177 1 116 1 151 1 235 1 65 3 118 1 19 4 67 1 68 1 167 17 122 1 
128 4 96 6 1 4 28 6 333 2 239 1 132 8 100 4 195 4 359 6 158 2 8 7 361 7 362 2 172 1 224 1 247 2 225 1 364 22 268 46 140 1 269 4 38 3 231 3 148 3 205 1 177 1 116 2 151 1 235 1 65 7 118 2 67 1 19 3 68 1 167 24 
96 8 1 5 333 2 239 1 100 5 195 7 241 2 8 9 158 2 247 3 293 1 345 2 250 2 205 1 116 1 65 7 118 2 19 4 67 1 68 1 167 33 122 2 126 1 128 4 28 5 132 13 359 7 361 7 362 2 172 1 224 1 364 27 225 1 268 60 82 2 140 1 269 6 38 4 148 4 231 4 147 2 177 1 151 1 235 1 
128 4 1 2 96 8 28 3 239 1 132 5 100 2 241 1 195 3 359 4 8 4 361 3 362 2 172 1 247 2 224 1 225 1 364 17 268 35 82 1 140 1 293 1 269 2 345 1 38 4 147 1 231 4 148 4 250 1 205 1 177 1 116 1 151 1 235 1 65 3 118 1 19 4 67 1 68 1 167 18 122 1 
128 4 1 3 96 6 28 4 333 1 239 1 132 8 100 3 241 1 195 3 359 5 158 1 8 6 361 5 362 2 172 1 224 1 247 2 225 1 364 20 268 42 82 1 140 1 269 5 345 1 38 3 147 1 231 3 148 3 250 1 205 1 177 1 116 1 151 1 235 1 65 5 118 1 67 1 19 3 68 1 167 22 122 1 
270 1 75 1 45 1 287 1 244 1 312 1 322 1 217 1 303 1 248 1 
307 1 164 1 
270 1 75 1 287 1 9 1 63 1 217 1 303 1 248 1 374 1 
270 1 75 1 45 1 319 1 110 1 217 1 262 1 204 1 287 1 244 1 312 1 102 1 267 1 303 1 352 1 248 1 305 1 185 2 
270 1 75 1 45 1 319 1 110 1 217 1 262 1 204 1 287 1 244 1 312 1 102 1 267 1 303 1 352 1 248 1 305 1 185 2 
270 1 75 1 45 1 319 1 110 1 217 1 262 1 204 1 287 1 244 1 312 1 102 1 267 1 303 1 352 1 248 1 305 1 185 2 
284 1 99 1 227 1 
284 1 99 1 227 1 
159 1 57 1 
159 1 57 1 99 1 
350 1 317 1 
75 1 307 1 238 2 217 1 188 1 262 1 76 1 194 1 287 1 102 1 248 1 340 1 270 1 366 2 317 1 110 1 61 1 230 2 164 1 350 1 278 2 303 1 325 1 305 1 185 1 22 1 121 2 
284 1 227 1 
159 1 57 1 99 1 
331 1 24 1 237 2 26 2 238 2 96 2 216 1 49 1 197 1 310 2 364 1 268 2 341 1 366 2 142 1 59 1 86 1 38 1 115 1 148 1 231 1 370 1 206 1 19 1 278 2 323 1 182 1 373 1 167 1 256 1 44 2 
257 1 127 1 161 1 59 1 237 2 367 1 191 1 97 1 98 1 273 1 193 1 370 1 310 2 290 1 155 2 292 1 186 1 44 2 329 1 
127 1 161 1 237 1 59 1 367 1 191 1 98 1 273 1 193 1 370 1 310 1 290 1 155 2 184 1 186 1 44 1 329 1 
257 1 127 1 342 1 59 1 237 1 86 1 149 1 334 1 370 1 197 1 310 1 7 1 209 1 44 1 
257 1 127 1 161 1 59 1 237 1 367 1 191 1 97 1 98 1 273 1 193 1 370 1 310 1 290 1 155 2 186 1 44 1 329 1 
318 1 
52 1 245 1 267 1 11 1 192 1 377 1 328 1 
93 1 109 1 129 1 16 1 78 1 336 1 198 1 41 1 165 1 102 1 134 1 245 1 267 2 11 1 305 1 156 1 377 1 
94 2 237 3 95 2 192 1 285 2 197 10 336 4 243 1 288 1 198 4 8 2 102 5 337 6 245 9 292 1 11 2 12 2 201 1 109 6 202 2 59 4 249 2 300 2 65 2 209 1 69 1 305 5 306 2 129 5 28 2 77 3 357 1 78 4 358 6 310 3 359 2 361 2 134 3 267 8 83 2 365 2 145 3 86 3 146 2 369 2 370 3 181 1 41 12 43 2 326 1 156 4 44 3 377 8 328 1 
129 1 259 1 1 2 28 4 333 1 239 1 100 2 358 8 78 2 242 1 336 2 359 4 288 1 198 2 8 4 158 1 361 4 102 1 134 1 337 8 172 1 245 13 267 7 224 1 247 1 225 1 12 1 11 2 109 5 146 1 369 3 65 4 41 10 67 1 305 1 156 2 377 8 
238 1 78 1 6 1 241 1 336 1 79 1 359 1 198 1 8 2 171 1 102 1 245 2 12 1 366 1 84 1 37 1 345 1 147 1 230 1 369 2 208 1 90 1 278 1 210 1 305 1 156 1 377 2 121 1 
192 1 78 1 336 1 198 1 245 1 267 1 11 1 156 1 377 1 328 1 
365 1 109 5 28 2 369 2 358 5 359 2 65 2 8 2 361 2 41 10 337 5 245 5 267 5 12 1 377 5 
129 1 102 1 134 1 267 1 11 1 305 1 
129 4 237 4 47 1 334 1 335 1 78 2 197 1 336 1 310 4 80 1 198 2 288 2 54 1 134 2 102 3 245 2 59 1 86 1 346 1 146 2 149 1 370 1 181 2 209 2 69 1 305 3 156 2 44 4 377 2 
330 1 237 1 96 2 238 2 216 1 49 1 77 1 310 1 197 1 364 1 138 1 268 1 366 3 84 1 37 2 59 1 61 1 86 1 38 1 231 1 148 1 230 2 176 1 370 1 180 1 119 1 209 1 278 3 19 1 182 1 44 1 121 2 
109 2 146 1 250 1 358 2 78 1 336 1 198 1 288 1 41 4 337 2 245 1 267 4 11 2 156 1 377 2 
270 1 287 1 71 1 
270 1 287 1 244 1 350 1 313 1 
270 1 287 1 71 1 
270 1 287 1 71 1 
270 1 287 1 35 1 
270 1 287 1 35 1 
270 1 287 1 35 1 
270 1 287 1 
217 1 303 1 
96 4 345 1 38 2 147 1 148 2 231 2 250 1 132 3 195 1 241 1 359 1 8 1 362 1 19 2 364 4 268 8 167 4 82 1 122 1 269 2 
345 1 147 1 250 1 132 2 241 1 52 1 359 1 8 1 364 3 167 3 268 6 82 1 122 1 269 2 
96 2 28 1 38 1 148 1 231 1 132 2 355 1 195 1 359 1 65 1 8 1 361 1 19 1 364 2 167 2 268 4 269 1 
1 2 28 2 333 1 132 2 100 2 195 1 359 2 158 1 65 2 8 2 361 2 247 1 364 6 268 12 167 6 269 1 
1 2 96 4 28 2 333 1 132 9 100 2 241 2 195 4 5 1 359 3 8 3 158 1 361 2 362 2 364 12 268 23 82 1 269 5 345 2 38 2 147 1 148 2 231 2 250 1 65 2 19 2 279 1 167 11 122 1 
1 1 364 1 268 1 
268 1 167 1 100 1 
365 1 96 2 28 1 38 1 231 1 148 1 355 1 132 3 195 1 359 1 65 1 8 1 361 1 19 1 364 3 268 6 167 3 269 2 
1 2 96 2 28 4 333 1 239 1 132 4 100 2 195 2 359 4 8 4 158 1 361 4 172 1 224 1 247 1 225 1 364 11 268 22 140 1 269 2 38 1 231 1 148 1 65 4 67 1 19 1 167 11 
345 1 147 1 132 2 241 1 195 1 359 1 8 1 364 3 167 3 268 6 269 1 
345 1 96 2 38 1 148 1 231 1 132 2 195 1 241 1 362 1 19 1 279 1 364 2 167 1 268 3 82 1 122 1 269 1 
345 2 147 1 132 6 241 2 195 3 359 2 8 2 210 1 364 6 167 6 268 12 269 3 
96 2 38 1 148 1 231 1 132 1 195 1 8 1 361 1 19 1 167 2 268 2 140 1 
96 2 28 1 38 1 148 1 231 1 132 2 195 1 359 1 65 1 8 1 361 1 19 1 364 2 167 2 268 4 140 1 269 1 
96 6 345 1 38 3 148 3 231 3 132 2 241 1 195 1 362 1 19 3 279 1 364 2 268 3 167 1 140 1 293 1 269 1 
1 1 96 8 132 8 355 1 100 1 195 4 241 3 359 2 8 2 362 1 247 1 364 9 268 17 82 1 140 1 293 1 269 4 108 1 345 3 38 4 147 1 231 4 148 4 210 1 19 4 279 1 167 8 122 1 
1 1 96 4 28 1 132 9 239 1 100 1 241 2 195 4 359 4 8 5 361 2 362 1 172 1 247 1 224 1 364 10 225 1 268 24 82 1 140 1 269 5 345 2 38 2 147 2 231 2 148 2 250 1 65 2 210 1 67 1 19 2 167 14 122 1 
1 1 96 6 28 1 355 1 132 4 239 1 100 1 241 1 195 1 359 2 8 3 361 2 362 1 172 1 247 1 224 1 225 1 364 7 268 17 82 1 140 1 269 3 345 1 38 3 147 1 231 3 148 3 250 1 65 2 67 1 19 3 167 10 122 1 
1 2 96 6 28 4 333 1 355 1 239 1 132 6 100 2 241 1 195 2 359 5 8 5 158 1 361 4 362 1 172 1 224 1 247 1 225 1 364 15 268 29 82 1 140 1 269 4 345 1 38 3 147 1 231 3 148 3 250 1 65 4 67 1 19 3 167 14 122 1 
1 2 96 6 28 3 333 1 355 1 239 1 132 7 100 2 241 1 195 3 359 4 8 5 158 1 361 4 362 1 172 1 224 1 247 1 225 1 364 12 268 27 82 1 140 1 269 4 345 1 38 3 147 1 231 3 148 3 250 1 65 4 67 1 19 3 167 15 122 1 
1 1 96 4 28 1 132 9 239 1 100 1 241 2 195 4 359 4 8 5 361 2 362 1 172 1 247 1 224 1 364 10 225 1 268 24 82 1 140 1 269 5 345 2 38 2 147 2 231 2 148 2 250 1 65 2 210 1 67 1 19 2 167 14 122 1 
1 2 96 2 28 4 333 1 239 1 132 4 100 2 195 2 359 4 8 4 158 1 361 4 172 1 224 1 247 1 225 1 364 11 268 22 140 1 269 2 38 1 231 1 148 1 65 4 67 1 19 1 167 11 
1 2 96 8 28 3 333 1 239 1 355 1 132 7 100 2 241 1 195 3 359 4 8 5 158 1 361 4 362 2 172 1 224 1 247 1 225 1 364 13 268 28 82 1 140 1 269 4 345 1 38 4 147 1 231 4 148 4 250 1 65 4 67 1 19 4 167 15 122 1 
1 2 96 4 28 1 333 1 132 1 100 1 359 1 8 1 361 1 247 1 364 4 268 7 140 1 293 1 269 1 38 2 231 2 148 2 65 1 67 1 19 2 167 3 
345 3 147 1 132 6 241 3 195 3 359 1 8 1 364 4 268 7 167 3 82 2 122 1 269 3 
1 2 96 4 28 1 333 1 132 1 100 1 359 1 8 1 361 1 247 1 364 4 268 7 140 1 293 1 269 1 38 2 231 2 148 2 65 1 67 1 19 2 167 3 
125 1 366 1 371 1 61 1 278 1 238 1 378 1 
73 1 125 1 366 1 61 1 238 1 229 1 371 1 278 1 137 1 92 1 72 1 378 1 
197 1 52 1 310 1 59 1 237 1 209 1 86 1 149 1 334 1 44 1 370 1 
366 2 59 1 237 1 61 1 238 1 86 1 230 1 77 1 251 1 176 1 370 1 197 1 310 1 180 1 278 2 209 1 121 1 44 1 
237 1 238 2 77 2 6 1 310 1 197 3 366 2 202 1 59 1 61 1 297 1 86 2 230 2 251 1 176 1 370 1 300 1 180 1 181 1 278 2 376 1 44 1 121 1 
237 2 238 2 77 2 6 1 310 2 197 3 314 1 366 2 202 1 59 1 175 1 61 1 297 1 86 2 230 2 251 1 370 1 300 1 180 1 181 1 278 2 376 1 44 2 121 1 
306 1 202 1 169 1 129 1 59 1 237 3 175 1 86 1 145 1 113 1 77 1 300 1 370 1 310 3 197 4 181 1 102 2 209 1 267 1 43 1 11 1 305 2 44 3 
306 1 202 1 129 1 59 1 237 3 175 1 86 1 145 1 77 1 285 1 300 1 370 1 310 3 197 4 181 1 102 2 209 1 267 1 43 1 11 1 305 2 44 3 
310 1 59 1 237 1 20 1 44 1 370 1 
201 1 237 6 59 3 26 1 86 2 115 1 77 1 163 1 4 1 370 2 33 1 310 7 197 3 20 1 209 2 290 1 304 1 292 1 281 1 91 1 44 7 
331 1 237 1 238 1 96 4 216 2 2 1 49 2 77 1 132 2 241 1 197 1 310 1 359 1 8 1 266 1 364 3 138 1 268 6 292 1 82 1 341 1 141 1 269 2 366 2 59 1 368 1 61 2 345 1 86 1 38 2 147 1 148 2 230 1 231 2 250 1 251 1 176 1 370 1 180 1 119 1 19 2 278 2 167 3 283 1 122 1 121 1 44 1 
306 1 94 1 129 2 237 1 192 1 285 1 78 2 310 1 336 2 197 2 198 2 102 3 134 1 245 1 267 1 11 1 340 1 83 1 249 1 145 1 209 1 69 1 43 1 305 3 156 2 377 1 44 1 328 1 
306 1 201 1 237 2 59 2 86 1 77 1 357 1 370 1 310 2 197 2 20 1 292 1 44 2 
59 1 237 4 175 1 86 1 149 1 334 1 370 1 133 1 310 4 197 1 209 1 292 1 44 4 
237 2 59 2 62 1 86 1 111 1 77 1 234 1 370 1 310 2 197 1 181 1 304 1 91 1 44 2 
310 1 59 1 237 1 367 1 209 1 98 1 155 1 44 1 329 1 370 1 
206 1 197 1 310 2 59 1 237 2 86 1 290 1 115 1 292 1 44 2 370 1 
237 4 59 2 86 2 115 1 149 1 334 1 4 1 370 2 33 1 133 1 310 5 197 3 181 1 209 1 292 1 44 5 
237 4 59 2 86 2 115 1 17 1 149 1 334 1 370 2 33 1 133 1 310 5 197 3 181 1 209 1 292 1 44 5 
366 2 59 1 237 1 61 1 238 1 86 1 230 1 77 1 251 1 370 1 197 1 310 1 180 1 278 2 209 1 314 1 121 1 44 1 
201 1 237 1 59 2 86 1 77 1 370 1 310 1 197 1 181 1 304 1 281 1 91 1 44 1 
228 1 61 1 131 1 211 1 13 1 
228 2 61 1 297 1 321 1 131 2 6 1 102 2 153 1 267 1 43 1 211 1 56 1 11 1 305 2 282 1 340 1 13 2 376 1 107 1 
24 1 366 1 228 1 238 1 131 1 278 1 211 1 373 1 256 1 
153 1 321 1 211 1 
309 1 52 1 327 1 36 1 
348 1 309 1 295 1 265 1 114 1 327 1 36 1 
294 1 295 1 101 1 
160 1 295 3 162 2 114 1 348 1 309 1 265 3 207 1 104 1 375 1 327 1 36 1 
348 1 309 1 349 1 295 2 265 2 271 1 114 1 327 1 36 1 
295 1 260 1 114 1 98 1 193 1 348 1 265 1 252 1 155 1 375 1 36 1 
348 1 309 1 295 1 265 1 114 1 375 1 36 1 
348 1 309 2 295 1 265 1 114 1 375 1 327 1 
348 2 309 1 88 1 295 2 265 2 343 1 114 2 375 1 214 1 36 1 
295 3 296 1 271 2 260 1 114 1 348 1 277 1 309 1 265 3 81 1 375 1 327 1 36 2 
295 2 161 1 271 1 114 1 98 1 193 1 348 1 309 1 265 2 363 1 155 2 375 1 327 1 36 1 329 1 
124 1 295 4 271 2 260 1 114 2 348 2 277 1 309 1 349 1 265 4 375 1 327 1 36 2 
348 1 309 1 295 1 265 1 114 1 375 1 327 1 36 1 
160 1 295 4 271 2 162 1 260 1 114 1 301 1 348 1 277 1 309 2 207 1 265 4 327 2 36 3 
348 1 309 1 152 1 295 2 302 1 265 2 271 1 114 1 375 1 275 1 327 1 36 1 
160 1 295 3 332 1 162 2 114 1 348 1 309 1 265 3 207 2 375 1 327 1 36 1 
372 2 280 1 174 1 36 2 
348 1 295 1 265 1 190 1 114 1 375 1 
348 1 309 1 295 2 265 2 271 1 81 1 114 1 375 1 327 1 36 1 
261 1 
348 1 309 1 295 1 265 1 114 1 375 1 327 1 36 1 
295 3 271 1 162 1 114 1 348 1 309 1 265 3 81 1 375 1 327 1 36 1 
277 1 260 1 301 1 36 1 
309 1 36 1 

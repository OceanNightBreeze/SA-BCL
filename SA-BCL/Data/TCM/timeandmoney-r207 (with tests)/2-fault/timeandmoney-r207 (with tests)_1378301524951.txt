#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testProrateOver2()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testProrateOver10()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testPartOfWhole()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testSumMoney()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) (201,275) 
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (201,275) 
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) (201,275) 
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V ERROR java.lang.IllegalArgumentException (81,106,225,253) (81,106,225,253) (81,106,225,253) 208 
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V | OPERATOR | 1163 | != -> <=
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 208 1 225 1 
43 1 244 1 101 1 
101 1 292 2 218 1 
97 1 328 2 271 2 232 2 17 2 274 2 294 1 311 2 
162 1 232 2 124 2 125 1 294 1 36 1 9 1 301 1 41 1 130 1 89 1 44 2 17 3 311 2 23 1 139 1 180 1 97 1 52 1 141 2 183 1 317 1 105 2 325 1 150 1 268 1 64 1 328 2 271 3 331 1 333 1 274 2 224 2 114 1 73 1 281 1 159 1 
97 1 328 1 271 1 120 1 232 1 17 1 274 1 93 1 38 1 311 1 
120 1 199 1 258 1 101 1 122 1 185 1 266 1 27 1 271 1 244 1 17 1 226 1 278 1 311 1 
120 1 232 1 199 1 258 2 101 1 185 2 27 1 328 1 271 1 244 1 274 1 17 1 226 1 278 1 311 1 
118 1 258 1 211 1 92 1 185 1 
175 1 258 2 244 1 211 1 101 1 92 1 185 2 169 1 
258 1 211 1 185 1 
97 1 120 1 258 1 232 1 185 1 38 1 300 1 328 1 271 1 274 1 17 1 92 1 93 1 311 1 
101 1 
239 1 258 2 244 1 211 1 101 1 92 1 185 2 169 1 
98 1 121 1 258 5 33 2 101 1 100 1 185 5 167 1 169 1 235 2 303 1 244 1 211 2 155 1 156 1 92 2 277 1 47 2 158 1 
43 1 294 1 
55 1 232 1 294 2 149 1 328 1 271 2 17 2 274 1 311 2 
40 1 10 1 113 1 
52 1 141 1 183 1 294 1 268 1 150 1 325 1 41 1 64 1 271 1 174 1 333 1 44 1 17 1 224 1 114 1 
52 1 141 1 183 1 164 1 325 1 150 1 268 1 151 1 41 1 64 1 328 1 271 2 333 1 44 1 274 1 17 2 224 1 113 1 114 1 311 1 
136 1 232 1 164 1 294 1 266 1 149 1 151 2 328 4 271 5 274 4 17 5 90 1 176 1 311 5 
7 1 328 2 271 2 120 1 17 2 274 2 38 1 311 2 
151 1 328 3 271 3 232 1 17 3 274 3 294 1 311 3 
328 1 271 1 120 1 17 1 274 1 38 1 311 1 
149 1 328 1 271 1 120 1 55 1 232 1 17 1 274 1 311 1 
228 1 162 1 120 1 199 1 232 2 164 1 124 1 125 1 294 1 36 1 9 1 41 1 130 1 44 1 17 4 20 1 311 3 180 1 52 1 97 1 258 1 141 1 183 1 317 1 185 1 105 2 149 1 325 1 150 1 268 1 151 1 27 1 64 1 328 3 271 4 333 1 274 3 224 1 226 1 114 1 281 1 278 1 73 1 159 1 
266 1 151 1 328 1 271 2 17 2 274 1 90 1 294 1 311 2 
99 1 120 1 232 1 258 1 199 1 101 1 164 1 185 1 149 1 151 2 27 1 328 3 271 3 274 3 17 3 226 1 20 1 278 1 311 3 
232 1 149 1 151 1 40 1 328 2 271 2 274 2 17 2 113 1 311 2 
52 1 141 1 183 1 294 1 268 1 150 1 325 1 41 1 64 1 271 1 333 1 44 1 17 1 224 1 114 1 
141 1 183 1 294 1 79 1 268 1 150 1 325 1 64 1 271 1 333 1 44 1 17 1 224 1 194 1 114 1 
116 1 162 1 163 1 5 1 35 1 125 2 124 4 36 1 37 1 40 2 205 1 9 1 10 2 213 1 177 1 180 1 317 1 148 1 105 2 331 2 154 1 113 2 160 1 159 1 
7 1 27 1 328 1 271 1 120 1 17 1 274 1 311 1 
323 1 236 1 
323 1 236 1 
13 1 247 1 
13 1 247 1 
13 1 247 1 
322 1 323 1 236 1 
322 1 323 1 236 1 
323 1 236 1 182 1 
323 2 109 1 236 2 13 1 39 1 247 1 
322 1 323 1 236 1 
323 1 236 1 2 1 
323 1 236 1 2 1 
323 1 236 1 2 1 
197 1 229 1 294 1 299 1 82 1 236 1 17 2 134 1 311 2 182 1 258 1 263 1 185 1 264 1 103 1 104 1 323 1 328 2 110 1 222 1 271 2 30 1 274 2 115 1 
197 2 289 1 258 2 4 1 316 1 101 1 184 1 185 2 39 1 103 2 323 2 104 2 170 1 236 2 110 2 134 3 195 1 115 1 22 2 
282 1 171 1 187 1 
171 1 313 1 187 1 
282 2 108 1 313 1 67 1 318 1 187 3 
282 1 313 1 67 1 29 1 318 1 187 2 
282 1 313 1 67 2 318 1 187 2 
116 1 229 1 33 1 292 3 35 1 169 1 205 1 235 1 173 2 207 1 211 1 244 1 92 4 213 1 307 1 135 1 47 1 251 1 98 3 255 2 258 5 315 1 100 2 101 2 218 1 185 5 264 1 220 2 222 1 329 1 111 1 277 1 
116 3 118 5 229 4 33 2 292 9 35 3 78 1 169 1 205 3 204 1 235 2 14 1 88 1 211 6 209 1 244 1 92 7 213 3 135 3 21 5 47 2 251 2 98 8 255 6 258 9 100 6 101 5 218 3 185 9 220 6 269 1 329 1 155 1 111 2 277 1 
116 1 229 1 33 1 35 1 292 4 235 1 173 1 205 1 244 1 92 2 213 1 307 1 135 1 47 1 251 1 98 3 255 2 315 1 258 3 101 3 100 2 218 2 185 3 220 2 155 1 111 1 
116 2 229 2 33 1 292 7 35 2 78 1 235 1 173 2 205 2 14 1 244 1 92 3 213 2 307 1 135 2 47 1 251 1 98 5 255 4 258 4 315 1 101 4 100 4 218 3 185 4 220 4 269 1 155 1 111 1 
43 1 257 1 114 1 
143 1 114 1 
166 1 
325 1 150 1 114 1 
237 1 114 1 
325 1 114 1 
325 1 150 1 257 2 16 1 332 1 114 3 
116 1 286 1 254 1 287 1 163 2 125 3 35 1 261 1 124 7 321 1 148 3 62 1 304 1 270 2 272 1 331 4 308 1 
116 1 286 1 254 1 287 1 163 2 125 3 35 1 261 1 124 7 321 1 148 3 62 1 304 1 270 2 272 1 331 4 308 1 
116 1 286 1 254 1 287 1 163 2 125 3 35 1 261 1 124 7 146 1 321 1 148 3 62 1 304 1 270 2 272 1 331 4 308 1 
116 4 286 2 287 2 163 5 125 15 124 31 35 4 36 1 83 3 205 3 9 1 11 1 12 1 304 2 91 1 213 3 246 1 212 1 308 1 135 3 249 1 95 4 180 1 254 2 261 5 321 1 148 10 105 2 62 1 69 1 270 3 272 1 331 16 159 1 
116 1 286 1 287 1 163 3 35 1 124 9 125 4 295 1 36 2 9 2 304 1 212 1 180 2 254 1 261 1 321 1 148 4 105 4 62 1 190 1 270 2 272 1 331 5 159 2 
106 1 81 1 75 1 208 1 225 1 
106 1 81 1 75 1 225 1 201 1 
253 1 75 1 225 1 275 1 
106 1 81 1 75 1 225 1 201 1 
106 1 81 1 75 1 208 1 225 1 
157 1 
169 3 6 1 235 1 8 1 86 2 85 1 244 1 17 1 18 2 248 2 251 1 98 2 258 5 183 1 101 2 100 2 260 1 185 5 266 1 189 1 27 1 271 1 193 4 277 1 114 1 278 1 117 2 120 1 199 1 33 1 123 1 122 1 292 2 203 1 305 2 44 2 131 1 211 6 47 1 311 1 138 1 50 1 141 2 217 1 218 2 59 1 60 1 152 2 325 1 64 1 330 1 333 2 224 2 226 1 227 2 
120 1 199 1 122 1 169 1 203 1 239 1 17 1 211 2 18 1 311 1 258 3 217 1 185 3 59 1 60 1 266 1 189 1 27 1 271 1 226 1 193 2 278 1 
120 1 199 1 122 1 169 1 203 1 86 1 239 1 211 1 17 1 244 1 311 1 258 3 217 1 101 1 185 3 59 1 60 1 266 1 189 1 27 1 271 1 226 1 193 3 278 1 
120 1 199 1 122 1 169 1 203 1 239 1 86 1 17 1 211 2 244 1 18 1 311 1 258 3 217 1 101 1 185 3 59 1 60 1 266 1 189 1 27 1 271 1 226 1 193 3 227 1 278 1 
231 1 76 1 169 3 235 1 239 1 86 4 85 1 17 1 244 5 18 4 248 2 98 1 258 5 101 5 100 1 185 5 186 1 266 1 27 1 189 1 271 1 193 6 277 1 278 1 117 2 120 1 199 1 33 1 122 1 203 1 305 2 211 7 311 1 47 1 138 1 217 1 218 2 60 1 59 1 152 2 327 1 221 1 226 1 227 4 
117 2 120 1 199 1 33 1 122 1 292 2 169 2 203 1 235 1 86 2 305 2 85 1 244 1 211 4 17 1 18 2 47 1 311 1 248 2 138 1 50 1 98 1 258 4 217 1 101 2 100 1 218 2 185 4 59 1 60 1 266 1 152 2 189 1 27 1 271 1 226 1 193 4 227 2 277 1 278 1 
117 2 120 1 199 1 231 1 33 1 122 1 169 2 203 1 235 1 86 2 305 2 85 1 244 1 211 4 17 1 18 2 311 1 47 1 248 2 138 1 98 1 258 4 217 1 101 1 100 1 218 2 185 4 59 1 60 1 266 1 152 2 221 1 189 1 27 1 327 1 271 1 226 1 193 4 227 2 277 1 278 1 
117 2 120 1 199 1 231 1 33 1 122 1 169 2 203 1 235 1 86 2 305 2 85 1 244 1 211 4 17 1 18 2 311 1 47 1 248 2 138 1 98 1 258 4 217 1 101 1 100 1 218 2 185 4 59 1 60 1 266 1 152 2 221 1 189 1 27 1 327 1 271 1 226 1 193 4 227 2 277 1 278 1 
117 2 284 1 120 1 199 1 33 1 122 1 292 2 169 2 203 1 235 1 42 2 86 2 305 2 85 1 244 1 211 4 17 1 18 2 311 1 47 1 49 1 98 1 258 4 217 1 101 1 100 1 185 4 58 1 59 1 60 1 266 1 26 2 221 1 189 1 27 1 271 1 226 1 193 4 227 2 277 1 278 1 
117 2 120 1 199 1 231 1 33 1 122 1 169 2 203 1 235 1 305 2 85 1 86 3 244 1 17 1 211 5 18 3 47 1 311 1 248 2 138 1 98 1 258 4 217 1 101 1 100 1 218 2 185 4 186 1 59 1 60 1 266 1 152 2 221 1 327 1 189 1 27 1 271 1 226 1 193 5 277 1 227 3 278 1 
117 2 120 1 199 1 231 1 33 1 122 1 169 2 203 1 235 1 305 2 85 1 86 3 244 1 17 1 211 5 18 3 47 1 311 1 248 2 138 1 98 1 258 4 217 1 101 1 100 1 218 2 185 4 186 1 59 1 60 1 266 1 152 2 221 1 327 1 189 1 27 1 271 1 226 1 193 5 277 1 227 3 278 1 
117 2 120 1 199 1 33 1 122 1 292 2 169 2 203 1 235 1 42 2 86 2 305 2 85 1 244 1 211 4 17 1 18 2 47 1 311 1 49 1 50 1 98 1 258 4 217 1 101 1 100 1 185 4 59 1 60 1 266 1 26 2 189 1 27 1 271 1 226 1 193 4 227 2 277 1 278 1 
116 1 180 1 286 1 287 1 163 2 162 1 317 1 125 3 124 6 35 1 294 2 36 1 37 1 321 1 148 2 105 2 62 1 40 1 9 1 10 1 270 1 43 1 272 1 331 3 113 1 159 1 
116 1 163 1 162 2 125 6 124 14 35 2 294 1 36 2 83 3 205 2 40 4 9 2 10 11 130 1 15 1 210 1 91 1 213 1 135 2 23 1 95 3 249 1 180 2 317 1 261 1 262 1 148 2 105 4 324 1 192 1 331 8 113 11 159 2 
32 1 162 1 164 1 125 1 124 2 294 1 36 1 77 1 40 1 41 1 9 1 174 1 130 1 44 1 210 1 17 2 311 1 23 1 180 1 52 1 141 1 256 1 183 1 317 1 105 2 325 1 150 1 268 1 151 1 64 1 328 1 271 2 333 1 331 1 224 1 274 1 114 1 159 1 
163 4 162 3 164 1 9 3 10 7 17 3 245 2 23 1 96 1 180 3 183 2 261 4 105 6 268 2 270 1 271 3 272 1 274 1 113 7 281 2 114 2 116 3 285 1 286 1 287 1 290 2 125 10 124 20 35 3 294 2 36 3 40 7 205 2 41 2 130 1 44 3 210 1 213 2 135 2 311 1 137 1 52 2 53 1 141 3 317 3 321 1 148 8 62 1 151 1 150 2 325 2 64 2 328 1 333 1 331 10 224 3 334 2 159 3 74 2 
161 1 162 2 123 1 293 1 124 2 125 1 296 1 36 2 37 1 6 1 9 2 130 1 44 7 132 1 17 1 311 1 23 1 139 2 180 2 53 1 140 1 141 8 183 2 317 2 56 1 145 1 105 4 151 1 325 2 64 2 328 1 271 1 333 2 331 1 274 1 224 8 112 1 114 3 159 2 
116 1 163 1 162 1 232 1 35 1 124 3 125 2 36 1 40 1 205 1 9 1 10 1 210 1 17 1 213 1 135 1 311 1 180 1 317 1 148 1 105 2 149 1 63 1 328 1 271 1 331 1 274 1 113 1 159 1 
180 1 162 1 317 1 5 1 261 1 124 2 35 1 36 1 37 1 148 1 105 2 40 1 205 1 9 1 10 1 331 2 113 1 159 1 
177 1 116 1 180 1 163 1 162 1 317 1 124 2 125 2 36 1 37 1 148 1 105 2 40 1 9 1 10 1 113 1 213 1 159 1 
116 1 162 1 163 1 35 1 124 4 125 2 36 1 37 1 205 1 40 2 9 1 10 2 213 1 135 1 180 1 317 1 261 1 148 2 105 2 331 2 113 2 159 1 
180 1 162 1 317 1 5 1 261 1 124 2 35 1 36 1 148 1 105 2 40 1 205 1 9 1 10 1 331 2 113 1 112 1 159 1 
177 1 116 1 180 1 163 1 162 1 317 1 124 2 125 2 36 1 148 1 105 2 40 1 9 1 10 1 113 1 112 1 213 1 159 1 
116 1 162 1 163 1 35 1 124 4 125 2 36 1 205 1 40 2 9 1 10 2 213 1 135 1 180 1 317 1 261 1 148 2 105 2 331 2 112 1 113 2 159 1 
116 1 162 1 163 1 124 4 35 1 125 2 36 1 205 1 40 2 9 1 10 2 213 1 135 1 180 1 317 1 261 1 148 2 105 2 331 2 113 2 159 1 
162 1 124 2 125 1 294 1 36 1 41 1 9 1 130 1 44 1 17 1 23 1 180 1 52 1 141 1 183 1 317 1 105 2 325 1 150 1 268 1 64 1 271 1 331 1 333 1 224 1 281 1 114 1 159 1 
162 1 124 2 125 1 294 1 36 1 79 1 9 1 130 1 44 1 17 1 23 1 180 1 141 1 183 1 317 1 105 2 325 1 150 1 268 1 64 1 65 1 271 1 331 1 333 1 224 1 194 1 114 1 159 1 
116 1 162 1 163 1 35 1 124 4 125 2 36 1 205 1 40 2 9 1 10 2 210 1 213 1 135 1 180 1 317 1 261 1 148 2 105 2 331 2 113 2 159 1 
116 1 161 1 163 1 162 1 125 2 124 4 35 1 36 1 40 2 205 1 41 1 9 1 10 2 44 1 17 1 213 1 135 1 180 1 52 1 141 1 183 1 317 1 261 1 148 2 105 2 150 1 268 1 325 1 64 1 271 1 331 2 224 1 113 2 334 1 281 1 114 1 159 1 
116 1 1 1 162 1 232 1 125 1 35 1 124 3 36 1 205 1 40 1 9 1 10 1 210 1 17 1 213 1 135 1 311 1 180 1 317 1 261 1 148 1 105 2 149 1 328 1 271 1 331 2 274 1 113 1 159 1 
116 3 163 3 125 10 124 19 35 3 36 2 297 2 126 1 83 1 205 3 9 2 242 1 91 1 213 3 94 1 135 3 214 2 95 2 249 1 180 2 142 1 259 1 102 1 261 3 148 6 105 4 107 1 190 1 331 9 159 2 
116 2 31 1 163 2 125 12 124 26 35 3 36 3 168 1 297 4 126 1 83 2 205 3 9 3 206 1 91 2 212 2 213 2 94 1 135 3 214 1 215 1 95 2 250 1 180 3 142 2 259 1 261 2 102 2 148 4 105 6 190 1 331 14 273 1 159 3 
163 4 168 1 83 3 9 3 242 1 91 3 94 1 249 1 95 4 250 1 180 3 259 1 261 4 102 2 105 6 190 1 270 1 272 1 273 1 116 5 31 1 286 1 287 1 35 5 124 41 125 21 36 3 126 1 297 4 205 4 206 1 213 4 212 1 135 4 214 1 215 1 142 1 321 1 148 8 62 1 223 1 331 20 159 3 
116 4 286 1 31 1 287 1 163 4 125 18 124 38 35 5 36 4 168 1 297 4 126 1 83 3 205 4 9 4 206 1 242 1 91 3 212 2 213 3 94 1 135 4 214 1 215 1 250 1 95 4 249 1 180 4 142 1 259 1 102 2 261 3 321 1 148 7 105 8 62 1 190 1 270 1 223 1 272 1 331 20 273 1 159 4 
116 8 286 1 31 1 287 1 163 7 125 25 124 52 35 8 36 2 168 1 297 4 126 1 83 4 205 7 9 2 206 1 91 2 212 1 213 7 94 1 135 7 214 1 215 1 250 1 95 4 249 2 180 2 142 1 259 1 102 1 261 7 321 1 148 14 105 4 62 1 190 1 270 1 272 1 192 2 331 27 273 1 159 2 
104 1 323 1 197 1 179 1 236 1 110 1 289 1 316 1 39 1 103 1 
82 1 182 1 
267 1 104 1 323 1 197 1 236 1 110 1 45 1 25 1 103 1 
322 1 128 1 
109 1 2 1 165 1 
197 1 289 1 258 1 4 1 316 1 101 1 184 1 185 1 39 1 103 1 323 1 104 1 170 1 236 1 110 1 134 2 115 1 22 1 
197 1 289 1 258 1 4 1 316 1 101 1 184 1 185 1 39 1 103 1 323 1 104 1 170 1 236 1 110 1 134 2 115 1 22 1 
197 1 289 1 258 1 4 1 316 1 101 1 184 1 185 1 39 1 103 1 323 1 104 1 170 1 236 1 110 1 134 2 115 1 22 1 
322 1 109 1 128 1 
322 1 109 1 128 1 
2 1 165 1 
109 1 2 1 165 1 
299 1 263 1 
197 1 229 1 294 1 299 1 82 1 236 1 17 2 134 1 92 1 22 1 311 2 182 1 258 1 184 1 263 1 185 1 264 1 103 1 104 1 323 1 110 1 222 1 328 2 271 2 30 1 274 2 280 1 
3 1 162 1 124 2 125 1 36 1 9 1 130 1 44 2 210 1 17 2 309 1 311 2 23 1 139 2 180 1 141 2 54 1 183 1 317 1 56 1 145 1 57 1 105 2 325 1 64 1 271 2 331 1 224 2 72 1 114 1 159 1 
282 1 161 1 313 1 53 1 141 2 183 1 187 2 171 1 326 1 108 1 153 1 64 1 129 1 44 2 224 2 243 1 46 1 310 1 196 1 
282 1 312 1 313 1 53 1 141 1 183 1 187 2 171 1 326 1 108 1 153 1 64 1 44 1 224 1 243 1 46 1 196 1 
288 1 141 1 183 1 291 1 123 1 6 1 325 1 64 1 333 1 44 1 224 1 46 1 114 1 310 1 
282 1 313 1 53 1 141 1 183 1 187 2 171 1 326 1 108 1 153 1 64 1 129 1 44 1 224 1 243 1 46 1 310 1 196 1 
319 1 
98 1 303 1 43 1 121 1 244 1 101 1 100 1 
33 1 292 1 169 1 235 1 211 1 244 1 47 1 248 1 138 1 98 1 258 1 100 1 101 2 218 1 185 1 152 1 277 1 
161 1 0 1 233 2 169 3 235 4 172 2 237 2 240 2 16 1 244 2 251 2 24 2 98 9 255 6 257 2 258 5 183 3 260 1 101 8 100 8 185 5 191 1 277 4 114 10 279 2 116 2 121 1 33 4 292 12 35 2 205 2 303 1 44 3 211 5 213 2 135 2 47 4 48 1 216 2 51 1 141 3 143 3 144 2 218 6 61 2 220 6 325 3 150 3 64 4 333 1 224 3 70 1 226 2 74 2 
116 2 31 1 33 2 292 6 35 2 168 1 169 1 235 2 83 1 205 2 206 1 211 1 244 2 91 1 213 2 135 2 47 2 215 1 95 1 250 1 251 1 24 1 98 8 255 5 258 1 260 1 144 2 101 5 100 5 185 1 218 3 265 1 188 1 220 5 277 2 
116 1 283 1 286 1 287 1 120 1 232 1 33 1 35 2 38 1 300 1 235 1 17 1 93 1 47 1 311 1 24 1 98 2 97 1 258 1 144 2 100 2 185 1 327 1 328 1 271 1 272 1 274 1 277 1 
98 1 121 1 33 1 100 1 101 1 235 1 303 1 244 1 277 1 47 1 
116 2 24 1 98 5 255 5 144 2 100 5 101 5 35 2 292 10 218 5 220 5 205 2 213 2 135 2 74 1 
258 1 244 1 211 1 101 1 185 1 169 1 
0 1 33 2 34 1 123 1 169 2 6 1 235 2 8 1 44 4 211 4 47 2 251 2 98 2 141 4 258 3 183 1 260 2 100 2 185 3 147 1 325 1 64 1 191 2 330 1 333 2 224 4 155 1 277 1 114 1 
162 1 232 2 124 1 125 1 294 1 36 1 9 1 41 1 130 1 44 1 17 3 311 2 180 1 97 1 52 1 141 1 183 1 317 1 105 2 268 1 150 1 325 1 64 1 328 2 271 3 333 1 224 1 274 2 73 1 281 1 114 1 159 1 
251 1 98 1 255 2 33 1 100 2 101 4 260 1 292 4 218 2 220 2 235 1 270 1 244 2 277 1 47 1 
104 1 178 1 103 1 
104 1 178 1 103 1 
104 1 299 1 87 1 289 1 103 1 
104 1 178 1 103 1 
104 1 234 1 103 1 
104 1 234 1 103 1 
104 1 234 1 103 1 
104 1 103 1 
323 1 236 1 
116 1 180 2 286 1 287 1 163 2 35 1 125 4 124 8 261 1 36 2 321 1 148 3 105 4 62 1 9 2 270 1 272 1 331 4 212 1 159 2 
116 1 286 1 287 1 163 2 125 3 35 1 124 6 321 1 148 2 62 1 270 1 43 1 272 1 331 3 
116 1 180 1 163 1 230 1 125 2 35 1 124 4 261 1 36 1 148 2 105 2 205 1 9 1 331 2 213 1 135 1 159 1 
116 1 95 2 249 1 163 1 125 4 124 7 35 1 261 1 148 2 83 1 205 1 331 3 91 1 213 1 135 1 
116 3 286 2 287 2 163 5 35 3 124 23 125 12 36 2 205 2 83 2 9 2 19 1 213 2 212 2 135 2 249 1 95 2 180 2 261 4 262 1 321 1 148 9 105 4 62 1 270 1 272 1 192 1 331 11 159 2 
95 1 124 1 125 1 
83 1 331 1 124 1 
116 1 180 1 163 2 230 1 125 3 124 6 35 1 261 1 36 1 148 3 105 2 205 1 9 1 331 3 213 1 135 1 159 1 74 1 
116 2 31 1 163 1 124 12 125 6 35 2 36 1 168 1 83 1 205 2 9 1 206 1 91 1 213 2 135 2 215 1 95 1 250 1 180 1 261 1 148 2 105 2 190 1 331 6 159 1 
116 1 286 1 287 1 163 1 35 1 124 6 125 3 261 1 148 2 272 1 331 3 
180 1 286 1 287 1 163 1 261 1 125 2 124 3 36 1 321 1 148 2 105 2 62 1 9 1 331 1 19 1 212 1 159 1 
116 2 283 1 180 1 286 2 287 2 163 3 261 2 124 10 125 5 35 2 36 1 148 5 105 2 9 1 190 1 272 1 331 5 159 1 
180 1 35 1 124 2 261 1 36 1 148 1 105 2 205 1 9 1 190 1 331 2 159 1 
116 1 180 1 163 1 125 2 35 1 124 4 261 1 36 1 148 2 105 2 205 1 9 1 190 1 331 2 213 1 135 1 159 1 
180 3 286 1 287 1 163 1 125 2 124 3 261 1 36 3 148 2 105 6 9 3 190 1 331 1 242 1 19 1 212 1 159 3 
116 5 286 3 287 3 163 7 230 1 125 18 124 34 35 5 36 5 83 3 205 3 9 5 11 1 242 1 91 1 19 1 212 2 246 1 213 3 135 3 95 4 249 1 180 5 261 5 321 1 148 12 105 10 62 1 190 1 69 1 270 1 272 2 331 16 159 5 
116 1 286 1 287 1 163 2 35 1 124 8 125 4 36 1 83 1 9 1 206 1 91 1 95 1 180 1 321 1 148 2 105 2 62 1 190 1 270 1 272 1 331 4 159 1 
116 1 286 1 287 1 163 2 230 1 124 11 125 5 35 2 36 2 83 1 205 1 9 2 206 1 91 1 135 1 95 2 249 1 180 2 261 1 321 1 148 3 105 4 62 1 190 1 270 1 272 1 331 6 159 2 
116 3 286 1 31 1 287 1 163 3 230 1 124 19 125 10 35 3 36 3 168 1 83 1 205 2 9 3 206 1 91 1 213 2 212 1 135 2 215 1 95 1 250 1 180 3 261 1 321 1 148 4 105 6 62 1 190 1 270 1 272 1 331 9 159 3 
116 2 286 1 31 1 287 1 163 3 230 1 124 17 125 7 35 3 36 3 168 1 83 1 205 2 9 3 206 1 91 1 212 1 213 1 135 2 215 1 95 1 250 1 180 3 261 2 321 1 148 5 105 6 62 1 190 1 270 1 272 1 331 10 159 3 
116 1 286 1 287 1 163 2 35 1 124 8 125 4 36 1 83 1 9 1 206 1 91 1 95 1 180 1 321 1 148 2 105 2 62 1 190 1 270 1 272 1 331 4 159 1 
116 2 31 1 163 1 124 12 125 6 35 2 36 1 168 1 83 1 205 2 9 1 206 1 91 1 213 2 135 2 215 1 95 1 250 1 180 1 261 1 148 2 105 2 190 1 331 6 159 1 
116 2 286 1 31 1 287 1 163 3 230 1 124 18 125 8 35 3 36 4 168 1 83 1 205 2 9 4 206 1 91 1 213 1 212 2 135 2 215 1 95 1 250 1 180 4 261 2 321 1 148 5 105 8 62 1 190 1 270 1 272 1 331 10 159 4 
116 2 31 1 163 3 124 16 125 7 35 3 36 4 168 1 83 1 205 3 9 4 206 1 242 1 91 1 213 2 212 2 135 3 215 1 95 1 250 1 180 4 261 3 148 6 105 8 190 1 331 9 159 4 
116 1 286 3 287 3 163 3 125 4 124 7 261 3 35 1 321 2 148 6 62 1 272 1 331 3 
116 2 286 1 31 1 287 1 163 3 124 18 125 8 35 3 36 4 168 1 83 1 205 2 9 4 206 1 242 1 91 1 213 1 212 2 135 2 215 1 95 1 250 1 180 4 261 1 321 1 148 4 105 8 62 1 190 1 270 1 272 1 331 10 159 4 
266 1 271 1 314 1 17 1 90 1 294 1 311 1 
252 1 314 1 294 1 200 1 266 1 66 1 271 1 241 1 17 1 90 1 71 1 311 1 
6 1 325 1 64 1 43 1 141 1 44 1 333 1 183 1 224 1 123 1 114 1 
141 1 183 1 294 1 325 1 150 1 268 1 151 1 41 1 64 1 328 1 271 2 333 1 44 1 274 1 17 2 224 1 114 1 311 1 
120 1 141 1 183 1 294 1 233 1 325 2 150 2 268 1 151 1 27 1 41 1 64 1 237 1 328 1 191 1 271 2 44 1 274 2 17 2 224 1 278 1 114 3 311 2 
119 1 120 1 141 2 183 1 294 1 233 1 325 2 150 2 268 1 151 1 27 1 64 1 237 1 328 1 191 1 271 2 44 2 274 2 17 2 224 2 194 1 278 1 114 3 311 2 
119 1 258 2 141 3 257 1 143 1 183 1 101 1 185 2 233 1 325 1 150 1 302 1 64 1 237 1 191 1 333 1 44 3 244 1 224 3 211 1 226 1 276 1 114 4 
119 1 258 2 141 3 257 1 143 1 183 1 101 1 185 2 233 1 325 1 150 1 172 1 64 1 237 1 191 1 333 1 44 3 244 1 224 3 211 1 226 1 114 4 
64 1 141 1 44 1 183 1 224 1 296 1 
139 1 161 1 53 1 140 1 141 7 183 2 293 1 296 1 145 1 320 1 298 1 150 1 325 2 64 3 333 2 44 6 16 1 132 1 224 7 133 1 114 3 
116 1 161 1 286 1 287 1 163 2 162 2 290 1 125 3 124 6 35 1 294 2 36 2 40 1 9 2 41 1 10 1 44 1 210 1 17 2 311 1 180 2 52 1 141 1 183 1 317 2 57 1 321 1 148 2 105 4 62 1 325 1 150 1 268 1 151 1 64 1 328 1 270 1 271 2 272 1 331 3 274 1 224 1 113 1 334 1 114 1 281 1 159 2 
0 1 121 1 33 2 169 1 235 2 172 1 303 1 240 1 44 1 244 1 211 2 92 1 47 2 216 1 98 1 141 1 258 3 257 1 143 1 101 1 100 1 185 3 61 1 333 1 224 1 226 1 277 2 114 2 
161 1 51 1 257 1 141 2 183 1 296 1 150 1 325 1 64 2 44 2 16 1 224 2 114 2 
161 1 119 1 141 4 183 1 123 1 80 1 6 1 325 1 64 1 333 1 44 4 224 4 114 1 
96 1 181 1 141 2 183 1 320 1 150 1 325 1 28 1 64 2 191 1 44 2 224 2 133 1 114 1 
171 1 326 1 313 1 64 1 141 1 44 1 333 1 183 1 224 1 187 1 
325 1 161 1 64 1 53 1 141 2 44 2 183 1 224 2 145 1 309 1 114 1 
161 1 141 5 140 1 183 2 123 1 145 1 80 1 6 1 325 2 64 2 191 1 333 1 44 4 224 5 132 1 114 3 
161 1 141 5 140 1 183 2 123 1 145 1 80 1 6 1 325 2 64 2 191 1 306 1 333 1 44 4 224 5 114 3 
141 1 183 1 294 1 325 1 150 1 268 1 151 1 64 1 328 1 271 2 333 1 44 1 274 1 17 2 224 1 194 1 114 1 311 1 
141 1 183 1 320 1 298 1 150 1 325 1 64 2 191 1 44 1 16 1 224 1 133 1 114 1 
198 1 3 1 54 1 127 1 238 1 271 1 17 1 72 1 311 1 
84 1 198 1 202 1 
127 1 68 1 238 1 198 1 294 1 
198 1 120 1 258 2 199 1 101 1 294 1 185 2 202 1 219 1 127 2 27 1 84 1 238 2 68 2 244 1 226 1 92 1 20 1 278 1 

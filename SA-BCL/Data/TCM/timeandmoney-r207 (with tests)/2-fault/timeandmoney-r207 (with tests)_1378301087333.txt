#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate; | CONSTANT | 1542 | 1 -> 0
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval; | OPERATOR | 1431 | == -> <
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 317 2 171 6 224 1 255 1 319 3 299 2 75 1 232 2 198 1 301 1 371 4 78 1 177 9 108 9 283 1 80 5 157 1 239 2 213 1 334 2 216 1 61 2 35 1 184 1 273 1 137 1 122 2 
21 1 317 2 171 6 224 1 255 1 319 3 75 1 299 2 232 2 198 1 301 1 371 4 78 1 177 9 108 9 283 1 80 5 157 1 239 2 213 1 334 2 216 1 61 2 35 1 184 1 273 1 137 1 122 2 
21 1 317 2 171 7 224 1 255 1 319 4 75 1 299 2 232 2 198 1 301 1 371 5 78 1 177 10 108 10 283 1 80 6 157 1 239 2 213 1 334 2 216 1 61 2 35 1 184 1 273 1 137 1 122 2 
21 1 317 2 171 4 224 1 319 2 75 1 299 1 232 2 198 1 301 1 371 3 78 1 177 7 108 7 283 1 80 4 157 1 239 2 213 1 334 2 216 1 61 2 35 1 184 1 273 1 137 1 122 2 
177 4 108 4 283 1 80 3 171 3 239 1 255 1 319 1 334 1 299 2 232 1 198 1 61 1 216 1 35 1 301 1 371 2 122 1 
177 2 108 2 307 1 80 1 157 1 317 1 239 1 334 1 103 1 258 1 232 1 198 1 61 1 35 1 301 1 137 1 
177 3 108 3 80 2 317 1 171 1 213 1 319 1 334 2 198 1 61 2 35 1 301 1 371 1 
317 1 171 7 224 1 255 1 319 3 44 1 75 1 299 2 232 1 198 1 301 1 371 4 177 9 108 9 283 1 328 1 80 5 239 1 213 1 334 2 61 2 216 1 35 1 122 1 
317 1 171 7 224 1 255 1 319 3 44 1 75 1 299 2 232 1 198 1 301 1 371 4 177 9 108 9 283 1 328 1 80 5 239 1 213 1 334 2 61 2 216 1 35 1 122 1 
288 1 369 1 3 1 
269 2 346 1 3 1 
181 2 315 2 364 2 106 2 117 2 57 1 179 2 235 1 
315 2 36 1 189 1 364 2 124 2 341 1 23 1 342 2 148 2 173 1 72 1 41 2 228 1 102 1 200 1 76 1 201 1 106 2 153 1 235 1 9 1 52 1 57 1 83 2 179 3 374 1 181 3 59 1 377 1 379 1 17 1 31 1 117 2 338 1 119 1 186 1 293 1 
181 1 315 1 364 1 144 1 106 1 117 1 112 1 57 1 100 1 179 1 
20 1 315 1 364 2 67 1 143 1 144 1 100 1 3 1 196 1 369 1 106 1 323 1 159 1 112 2 57 1 179 2 181 2 85 1 380 1 248 1 117 1 
315 2 364 2 143 1 144 1 159 1 57 1 100 1 112 2 3 1 179 2 181 2 196 1 369 1 380 1 85 1 248 2 106 2 117 2 323 2 
262 1 207 1 248 1 323 1 253 1 
262 1 369 1 259 1 207 1 248 2 323 2 3 1 8 1 
262 1 248 1 323 1 
315 1 364 1 207 1 144 1 112 1 100 1 57 1 179 1 181 1 380 1 248 1 106 1 323 1 117 1 
3 1 
262 1 369 1 207 1 248 2 362 1 323 2 3 1 8 1 
188 1 262 2 207 2 11 2 358 1 254 1 3 1 241 1 296 1 287 1 126 2 336 2 369 1 260 1 248 5 323 5 47 1 107 1 8 1 
288 1 235 1 
315 1 364 2 179 2 181 2 367 1 106 1 117 1 281 1 235 2 
187 1 276 1 94 1 
36 1 189 1 124 1 341 1 23 1 83 1 173 1 179 1 41 1 374 1 257 1 181 1 228 1 338 1 119 1 235 1 
315 1 189 1 36 1 364 1 124 1 23 1 53 1 341 1 94 1 173 1 83 1 374 1 179 2 41 1 181 2 228 1 106 1 338 1 77 1 119 1 
315 4 67 1 364 5 53 1 54 1 209 1 179 5 227 1 181 5 106 4 117 1 77 2 281 1 235 1 
181 2 315 2 364 2 144 1 106 2 176 1 112 1 179 2 
181 3 315 3 364 3 106 3 117 1 77 1 179 3 235 1 
181 1 315 1 364 1 144 1 106 1 112 1 179 1 
181 1 367 1 315 1 364 1 106 1 117 1 112 1 281 1 179 1 
36 1 189 1 341 1 143 1 342 2 148 1 41 1 102 1 196 1 106 3 201 1 153 1 9 1 53 1 159 1 266 1 57 1 112 2 160 1 59 1 17 1 117 2 119 1 315 3 364 3 124 1 23 1 173 1 228 1 76 1 323 1 77 1 281 1 282 1 235 1 83 1 179 4 374 1 181 4 377 1 379 1 85 1 248 1 338 1 293 1 
181 2 315 1 67 1 364 2 54 1 106 1 77 1 179 2 235 1 
315 3 364 3 53 1 143 1 159 1 112 1 3 1 179 3 181 3 196 1 30 1 85 1 248 1 106 3 117 1 323 1 77 2 281 1 282 1 
315 2 276 1 364 2 94 1 179 2 181 2 106 2 117 1 77 1 281 1 
36 1 189 1 124 1 341 1 23 1 83 1 173 1 179 1 41 1 374 1 181 1 228 1 338 1 119 1 235 1 
189 1 124 1 341 1 83 1 173 1 179 1 41 1 374 1 181 1 228 1 310 1 338 1 18 1 119 1 235 1 
93 1 187 2 276 2 342 2 94 2 39 1 98 1 148 4 193 1 76 1 300 1 152 1 153 1 9 1 355 1 264 1 357 1 113 1 333 1 377 2 379 1 17 1 186 2 293 1 
181 1 315 1 364 1 106 1 159 1 176 1 112 1 179 1 
183 1 97 1 
183 1 97 1 
163 1 226 1 
163 1 226 1 
163 1 226 1 
316 1 183 1 97 1 
316 1 183 1 97 1 
183 1 291 1 97 1 
245 1 197 1 183 2 97 2 163 1 226 1 
316 1 183 1 97 1 
368 1 183 1 97 1 
368 1 183 1 97 1 
368 1 183 1 97 1 
315 2 37 1 364 2 142 1 97 1 345 1 42 1 106 2 323 1 235 1 240 1 179 2 243 1 181 2 376 1 246 1 215 1 33 1 183 1 248 1 291 1 118 1 271 1 218 1 
314 1 251 1 142 1 345 2 97 2 82 2 240 3 3 1 359 1 348 1 243 2 58 1 245 1 246 2 183 2 33 2 248 2 323 2 19 1 
232 1 239 1 122 1 
258 1 232 1 239 1 
168 1 221 1 258 1 232 3 155 1 122 2 
168 1 258 1 232 2 265 1 155 1 122 1 
168 2 258 1 232 2 122 1 155 1 
141 2 2 1 346 1 254 1 3 2 193 1 126 1 73 1 42 1 369 1 260 3 370 1 323 5 280 1 49 2 8 1 327 1 353 1 262 1 206 2 355 1 264 1 11 1 207 4 284 1 358 2 113 1 376 1 336 1 269 3 248 5 118 1 
141 6 2 2 346 3 253 5 254 1 3 5 296 1 193 3 126 2 369 1 260 8 370 3 323 9 49 6 8 1 50 1 327 2 131 5 262 6 355 3 264 3 207 7 284 1 11 2 178 1 358 6 14 1 113 3 376 4 290 1 336 2 269 9 248 9 217 1 250 1 
141 2 2 1 346 2 3 3 296 1 193 1 73 1 126 1 369 1 260 3 370 1 323 3 280 1 49 2 327 1 206 1 355 1 264 1 207 2 11 1 358 2 113 1 376 1 336 1 269 4 248 3 
141 4 2 1 346 3 3 4 296 1 193 2 126 1 73 1 369 1 260 5 370 2 323 4 280 1 49 4 327 1 206 2 355 2 264 2 11 1 207 3 178 1 358 4 14 1 113 2 376 2 290 1 336 1 269 7 248 4 
288 1 119 1 70 1 
351 1 119 1 
220 1 
228 1 338 1 119 1 
130 1 119 1 
228 1 119 1 
228 1 199 1 190 1 338 1 70 2 119 3 
355 1 40 1 332 1 98 2 330 1 148 7 113 1 375 1 377 3 104 1 27 1 349 1 152 3 48 1 302 1 352 2 186 4 
355 1 40 1 332 1 98 2 330 1 148 7 113 1 375 1 377 3 104 1 27 1 349 1 152 3 48 1 302 1 352 2 186 4 
355 1 40 1 332 1 98 2 330 1 148 7 113 1 375 1 377 3 321 1 104 1 349 1 27 1 152 3 48 1 302 1 352 2 186 4 
342 2 344 3 191 1 40 2 98 5 148 31 193 3 175 1 104 2 349 1 27 1 76 1 370 3 152 10 153 1 48 1 302 2 352 3 9 1 264 3 355 4 29 1 330 1 331 1 332 5 113 4 375 2 15 4 377 15 268 1 17 1 88 1 186 16 64 1 
342 4 40 1 98 3 148 9 175 1 150 1 104 1 76 2 27 1 349 1 152 4 153 2 302 1 48 1 352 2 305 1 9 2 355 1 332 1 113 1 375 1 377 4 17 2 186 5 
140 1 221 1 189 1 124 1 171 1 317 1 96 1 41 1 4 1 230 1 258 1 232 2 198 1 301 1 177 2 108 2 354 1 236 1 80 1 309 1 81 1 239 1 83 1 374 1 180 1 334 1 61 1 35 1 219 1 122 1 
221 1 140 1 189 1 124 1 317 1 171 2 96 1 41 1 4 1 230 1 258 1 232 2 198 1 301 1 177 3 108 3 80 1 309 1 81 1 13 1 239 1 55 1 83 1 374 1 180 1 334 1 61 1 272 1 219 1 122 1 
140 1 221 1 189 1 124 1 317 1 171 2 96 1 41 1 4 1 258 1 232 2 198 1 301 1 177 2 108 2 80 1 81 1 13 1 239 1 83 1 374 1 180 1 272 1 219 1 122 1 
177 1 303 1 140 2 108 1 189 1 124 1 170 1 341 1 317 2 81 2 133 1 55 1 83 1 212 1 374 1 41 1 180 2 228 1 334 1 279 1 61 1 119 1 261 1 
221 1 177 1 140 1 354 1 108 1 189 1 124 1 309 1 317 1 81 1 96 1 239 1 83 1 374 1 4 1 41 1 180 1 334 1 230 1 258 1 232 2 61 1 35 1 272 1 219 1 122 1 
87 1 
189 1 340 1 1 1 341 2 143 1 2 1 346 2 254 1 295 1 3 4 41 2 196 1 105 2 260 2 202 2 7 2 8 3 304 1 262 6 109 2 308 2 11 1 210 2 358 2 159 1 112 1 212 1 16 1 269 2 119 1 20 1 67 1 364 1 124 2 174 2 126 1 228 1 369 3 323 5 324 1 326 1 133 1 238 1 83 2 242 1 374 1 179 1 181 1 336 1 247 1 32 4 85 1 248 5 34 1 86 1 
304 1 20 1 262 2 67 1 364 1 143 1 238 1 159 1 112 1 3 2 174 1 179 1 181 1 196 1 369 2 32 2 85 1 248 3 34 1 86 1 362 1 323 3 324 1 8 1 
304 1 20 1 109 1 67 1 364 1 143 1 238 1 159 1 112 1 3 2 179 1 181 1 196 1 369 2 32 3 85 1 248 2 34 1 86 1 323 2 324 1 
20 1 364 1 67 1 143 1 3 3 174 1 196 1 369 3 323 3 324 1 202 1 8 1 304 1 262 2 109 1 238 1 159 1 112 1 179 1 181 1 32 3 85 1 34 1 248 3 86 1 362 1 
143 1 144 1 346 2 254 1 100 1 3 4 295 1 196 1 105 2 260 1 106 1 202 4 7 2 8 3 154 1 304 1 262 7 109 3 11 1 308 2 358 1 210 2 159 1 57 1 112 2 267 1 16 1 362 1 117 1 20 1 315 1 67 1 364 2 24 1 174 4 126 1 320 1 369 4 323 5 324 1 238 1 179 2 181 2 336 1 32 5 380 1 85 1 248 5 34 1 86 1 136 1 
340 1 143 1 346 2 254 1 3 4 295 1 196 1 105 2 260 1 7 2 202 2 8 2 304 1 262 4 109 2 11 1 308 2 358 1 210 2 159 1 112 1 16 1 269 2 20 1 364 1 67 1 174 2 126 1 369 3 323 4 324 1 238 1 179 1 181 1 336 1 32 4 85 1 248 4 34 1 86 1 
20 1 364 1 67 1 143 1 346 2 24 1 254 1 295 1 3 3 174 2 126 1 196 1 369 3 105 2 260 1 323 4 324 1 202 2 7 2 8 2 154 1 304 1 262 4 109 2 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 267 1 181 1 16 1 336 1 32 4 85 1 34 1 248 4 86 1 
20 1 364 1 67 1 143 1 346 2 24 1 254 1 295 1 3 3 174 2 126 1 196 1 369 3 105 2 260 1 323 4 324 1 202 2 7 2 8 2 154 1 304 1 262 4 109 2 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 267 1 181 1 16 1 336 1 32 4 85 1 34 1 248 4 86 1 
20 1 364 1 67 1 68 1 143 1 24 1 254 1 71 2 295 1 3 3 174 2 126 1 196 1 231 1 369 3 260 1 323 4 324 1 202 2 8 2 304 1 262 4 109 2 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 181 1 336 1 269 2 32 4 85 1 34 1 248 4 86 1 121 2 91 1 
20 1 364 1 67 1 143 1 346 2 24 1 254 1 295 1 3 3 174 3 126 1 196 1 369 3 105 2 260 1 323 4 324 1 7 2 202 3 8 2 154 1 304 1 262 5 109 3 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 267 1 181 1 16 1 336 1 32 5 85 1 34 1 248 4 86 1 136 1 
20 1 364 1 67 1 143 1 346 2 24 1 254 1 295 1 3 3 174 3 126 1 196 1 369 3 105 2 260 1 323 4 324 1 7 2 202 3 8 2 154 1 304 1 262 5 109 3 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 267 1 181 1 16 1 336 1 32 5 85 1 34 1 248 4 86 1 136 1 
20 1 340 1 67 1 364 1 143 1 254 1 71 2 295 1 3 3 174 2 126 1 196 1 369 3 260 1 323 4 324 1 202 2 8 2 304 1 262 4 109 2 308 2 11 1 210 2 358 1 238 1 159 1 112 1 179 1 181 1 336 1 269 2 32 4 85 1 34 1 248 4 86 1 121 2 91 1 
187 1 276 1 94 1 342 2 98 2 148 6 349 1 27 1 76 1 300 1 152 2 153 1 302 1 48 1 235 2 352 1 9 1 355 1 113 1 375 1 377 3 288 1 379 1 17 1 293 1 186 3 
187 11 276 4 342 4 94 11 344 3 98 1 99 1 148 14 193 2 365 1 200 1 76 2 370 2 201 1 152 2 153 2 235 1 9 2 264 1 355 1 29 1 10 1 332 1 113 2 15 3 377 6 379 1 268 1 17 2 115 1 138 1 293 2 186 8 
315 1 189 1 36 1 276 1 364 1 124 1 23 1 341 1 342 2 223 1 173 1 99 1 148 2 41 1 257 1 228 1 233 1 76 1 200 1 106 1 201 1 77 1 153 1 235 1 9 1 53 1 83 1 374 1 179 2 181 2 377 1 379 1 17 1 114 1 338 1 119 1 293 1 186 1 
187 7 36 2 189 2 341 1 342 6 94 7 98 4 99 1 148 20 41 3 193 2 349 1 200 1 201 1 106 1 152 8 153 3 48 1 302 1 352 1 9 3 355 3 264 2 53 1 208 2 113 3 59 2 17 3 161 2 60 1 164 2 272 1 119 2 315 1 364 1 169 2 276 7 124 3 23 2 173 2 228 2 27 1 76 3 370 2 77 1 235 2 372 1 332 4 83 3 179 3 374 2 375 1 181 3 377 10 379 3 338 2 185 1 293 3 186 10 
313 1 363 1 294 1 315 1 189 2 364 1 124 8 341 2 342 4 145 1 148 2 41 7 228 2 322 1 76 2 200 1 300 1 106 1 201 1 77 1 153 2 236 1 9 2 237 1 133 1 83 8 212 1 179 1 374 2 360 1 181 1 377 1 379 2 17 2 31 2 272 1 119 3 293 2 186 1 
187 1 315 1 276 1 364 1 94 1 342 2 98 1 99 1 148 3 193 1 76 1 370 1 106 1 152 1 153 1 281 1 9 1 264 1 355 1 179 1 113 1 181 1 377 2 379 1 17 1 117 1 293 1 123 1 186 1 
187 1 9 1 276 1 94 1 342 2 357 1 332 1 148 2 193 1 113 1 379 1 17 1 76 1 300 1 152 1 153 1 293 1 186 2 
187 1 93 1 9 1 276 1 264 1 355 1 94 1 342 2 98 1 148 2 377 2 379 1 17 1 76 1 300 1 152 1 153 1 293 1 
187 2 276 2 342 2 94 2 98 1 148 4 193 1 370 1 76 1 300 1 152 2 153 1 9 1 264 1 355 1 332 1 113 1 377 2 379 1 17 1 186 2 293 1 
187 1 9 1 276 1 94 1 342 2 357 1 332 1 148 2 360 1 193 1 113 1 379 1 17 1 76 1 152 1 153 1 293 1 186 2 
187 1 93 1 9 1 276 1 264 1 355 1 94 1 342 2 98 1 148 2 360 1 377 2 379 1 17 1 76 1 152 1 153 1 293 1 
187 2 276 2 342 2 94 2 98 1 148 4 193 1 370 1 76 1 152 2 153 1 9 1 264 1 355 1 332 1 360 1 113 1 377 2 379 1 17 1 186 2 293 1 
187 2 276 2 342 2 94 2 98 1 148 4 193 1 370 1 76 1 152 2 153 1 9 1 264 1 355 1 332 1 113 1 377 2 379 1 17 1 186 2 293 1 
189 1 36 1 124 1 23 1 341 1 342 2 148 2 173 1 41 1 228 1 200 1 76 1 201 1 153 1 235 1 9 1 83 1 374 1 179 1 181 1 59 1 377 1 379 1 17 1 338 1 119 1 186 1 293 1 
189 1 124 1 341 1 342 2 148 2 173 1 41 1 228 1 200 1 76 1 201 1 153 1 235 1 9 1 83 1 374 1 179 1 181 1 214 1 377 1 310 1 379 1 17 1 338 1 18 1 119 1 186 1 293 1 
187 2 276 2 342 2 94 2 98 1 99 1 148 4 193 1 370 1 76 1 152 2 153 1 9 1 264 1 355 1 332 1 113 1 377 2 379 1 17 1 186 2 293 1 
187 2 189 1 36 1 276 2 124 1 23 1 94 2 342 2 98 1 148 4 173 1 193 1 41 1 228 1 76 1 370 1 152 2 153 1 236 1 9 1 355 1 264 1 332 1 83 1 374 1 179 1 113 1 181 1 59 1 377 2 379 1 17 1 164 1 338 1 119 1 186 2 293 1 
187 1 315 1 364 1 276 1 342 2 94 1 99 1 148 3 193 1 76 1 370 1 106 1 152 1 153 1 281 1 9 1 355 1 264 1 356 1 332 1 179 1 113 1 181 1 377 1 379 1 17 1 117 1 293 1 186 2 
222 1 342 6 344 3 98 4 192 1 148 41 256 1 193 4 175 1 195 1 150 1 278 1 349 1 27 1 76 3 370 4 152 8 153 3 48 1 302 1 352 1 156 1 9 3 110 1 264 4 355 5 29 3 329 1 285 2 332 4 56 4 244 1 84 1 113 5 375 1 15 4 377 21 289 1 268 1 361 1 17 3 162 1 186 20 
222 1 342 8 344 3 98 4 192 1 148 38 256 1 193 4 175 2 195 1 150 1 278 1 349 1 27 1 76 4 370 4 152 7 153 4 48 1 302 1 352 1 156 1 9 4 110 1 264 3 355 4 29 3 329 1 285 2 332 3 56 4 244 1 84 1 113 5 375 1 15 4 377 18 289 1 268 1 361 1 17 4 162 1 186 20 
222 1 342 4 344 4 98 7 192 1 148 52 256 1 193 7 175 1 150 1 278 1 349 1 27 1 76 2 370 7 152 14 153 2 48 1 302 1 352 1 9 2 110 1 264 7 355 8 29 2 329 1 285 1 332 7 56 4 244 1 84 1 113 8 375 1 15 4 377 25 289 1 268 2 361 1 17 2 162 1 138 2 186 27 
342 4 344 1 98 3 192 1 148 19 193 3 150 1 127 1 278 1 76 2 370 3 152 6 153 2 156 1 9 2 110 1 264 3 355 3 29 1 285 1 332 3 56 2 84 1 113 3 15 2 377 10 268 1 361 2 17 2 186 9 
222 1 342 6 344 2 98 2 192 1 148 26 256 1 193 3 175 2 150 1 278 1 76 3 370 3 152 4 153 3 9 3 355 2 110 2 264 2 29 2 329 1 285 2 332 2 56 4 84 1 244 1 113 3 15 2 377 12 289 1 361 1 17 3 162 1 186 14 
245 1 246 1 251 1 33 1 183 1 97 1 345 1 211 1 19 1 243 1 
291 1 271 1 
246 1 373 1 33 1 183 1 97 1 345 1 275 1 203 1 243 1 
298 1 316 1 
368 1 197 1 311 1 
251 1 142 1 345 1 97 1 82 1 240 2 3 1 359 1 348 1 243 1 58 1 245 1 246 1 248 1 183 1 33 1 323 1 19 1 
251 1 142 1 345 1 97 1 82 1 240 2 3 1 359 1 348 1 243 1 58 1 245 1 246 1 248 1 183 1 33 1 323 1 19 1 
251 1 142 1 345 1 97 1 82 1 240 2 3 1 359 1 348 1 243 1 58 1 245 1 246 1 248 1 183 1 33 1 323 1 19 1 
298 1 316 1 197 1 
298 1 316 1 197 1 
368 1 311 1 
368 1 197 1 311 1 
37 1 218 1 
315 2 37 1 364 2 97 1 345 1 347 1 42 1 106 2 323 1 235 1 207 1 82 1 240 1 179 2 243 1 181 2 58 1 376 1 246 1 215 1 248 1 33 1 183 1 291 1 118 1 271 1 218 1 
294 1 189 1 364 2 124 2 95 1 342 2 145 1 99 1 148 2 101 1 41 2 228 1 129 1 76 1 200 1 201 1 153 1 9 1 158 1 83 2 374 1 179 2 181 2 377 1 379 1 17 1 31 2 119 1 89 1 293 1 186 1 
221 1 132 1 236 1 189 1 124 2 172 1 96 1 239 1 83 2 374 1 41 2 180 1 230 1 258 1 232 2 272 1 166 1 219 1 122 1 
221 1 189 1 124 1 96 1 239 1 83 1 41 1 374 1 180 1 43 1 230 1 258 1 232 2 272 1 166 1 219 1 122 1 
132 1 189 1 124 1 341 1 170 1 133 1 83 1 212 1 374 1 41 1 180 1 228 1 165 1 119 1 
221 1 132 1 189 1 124 1 172 1 96 1 239 1 83 1 41 1 374 1 180 1 230 1 258 1 232 2 272 1 166 1 219 1 122 1 
318 1 
288 1 369 1 260 1 358 1 3 1 241 1 287 1 
346 1 254 1 3 2 126 1 369 1 105 1 260 1 323 1 7 1 8 1 262 1 11 1 358 1 16 1 336 1 269 1 248 1 
189 2 141 3 341 1 2 1 346 3 254 2 3 3 41 1 193 1 196 1 199 1 260 4 46 1 351 2 8 1 49 3 262 2 264 1 355 1 11 2 358 3 113 1 270 1 269 6 62 1 119 4 169 1 124 1 70 1 126 2 228 1 229 1 370 1 323 2 325 1 28 1 83 1 374 1 335 1 336 2 248 2 338 1 381 1 
141 5 2 1 344 1 346 3 254 2 3 5 256 1 193 2 126 2 229 2 369 2 260 8 6 1 370 2 323 1 8 1 49 5 326 1 262 1 264 2 355 2 29 1 11 2 329 1 358 5 244 1 113 2 15 1 289 1 182 1 336 2 269 6 337 1 162 1 248 1 
315 1 364 1 144 1 254 1 100 1 126 1 229 2 260 2 6 1 106 1 323 1 302 1 48 1 154 1 79 1 355 1 11 1 358 2 112 1 57 1 179 1 113 2 181 1 375 1 336 1 380 1 248 1 117 1 
11 1 358 1 254 1 241 1 3 1 287 1 126 1 336 1 369 1 260 1 
169 1 141 5 264 2 355 2 358 5 346 5 3 5 193 2 113 2 229 2 269 10 260 5 6 1 370 2 49 5 
262 1 369 1 248 1 323 1 3 1 8 1 
189 1 124 4 341 2 2 2 254 1 296 1 41 4 149 1 126 2 228 1 151 1 45 2 260 2 323 3 8 2 205 1 326 2 262 4 11 2 358 2 133 1 83 4 212 1 374 1 242 1 336 2 247 1 248 3 119 1 
315 2 36 1 189 1 364 2 124 1 341 1 23 1 342 2 148 1 173 1 41 1 102 1 228 1 76 1 201 1 106 2 153 1 235 1 9 1 83 1 57 1 179 3 374 1 181 3 59 1 377 1 379 1 17 1 117 2 338 1 119 1 293 1 
326 1 141 2 11 1 2 1 358 2 346 2 254 1 3 4 126 1 336 1 269 4 369 2 260 1 352 1 49 2 
246 1 33 1 292 1 
246 1 33 1 292 1 
246 1 22 1 33 1 218 1 19 1 
246 1 33 1 292 1 
246 1 33 1 350 1 
246 1 33 1 350 1 
246 1 33 1 350 1 
246 1 33 1 
183 1 97 1 
342 2 344 1 98 2 148 8 256 1 150 1 76 1 27 1 349 1 152 2 153 1 302 1 48 1 352 1 9 1 355 1 29 1 113 1 375 1 15 1 377 4 17 1 186 4 
342 4 344 1 98 2 148 11 256 1 193 1 150 1 349 1 27 1 76 2 370 1 152 3 153 2 48 1 302 1 352 1 9 2 306 1 355 1 29 1 332 1 113 2 375 1 15 2 377 5 268 1 17 2 186 6 
342 6 344 1 98 3 148 19 256 1 193 2 175 1 150 1 349 1 27 1 76 3 370 2 152 4 153 3 48 1 302 1 352 1 306 1 9 3 264 2 355 3 29 1 329 1 332 1 244 1 113 3 375 1 15 1 377 10 289 1 17 3 162 1 186 9 
342 6 344 1 98 3 148 17 256 1 193 2 175 1 150 1 349 1 27 1 76 3 370 2 152 5 153 3 48 1 302 1 352 1 306 1 9 3 264 1 355 2 29 1 329 1 332 2 244 1 113 3 375 1 15 1 377 7 289 1 17 3 162 1 186 10 
342 2 344 1 98 2 148 8 256 1 150 1 76 1 27 1 349 1 152 2 153 1 302 1 48 1 352 1 9 1 355 1 29 1 113 1 375 1 15 1 377 4 17 1 186 4 
342 2 344 1 98 1 148 12 256 1 193 2 150 1 76 1 370 2 152 2 153 1 9 1 264 2 355 2 29 1 329 1 332 1 244 1 113 2 15 1 377 6 289 1 17 1 162 1 186 6 
342 8 344 1 98 3 148 18 256 1 193 2 175 2 150 1 349 1 27 1 76 4 370 2 152 5 153 4 48 1 302 1 352 1 306 1 9 4 264 1 355 2 29 1 329 1 332 2 244 1 113 3 375 1 15 1 377 8 289 1 17 4 162 1 186 10 
342 8 344 1 98 3 148 16 256 1 193 3 175 2 150 1 76 4 370 3 152 6 153 4 9 4 156 1 264 2 355 2 29 1 329 1 332 3 244 1 113 3 15 1 377 7 289 1 17 4 162 1 186 9 
355 1 98 3 332 3 148 7 113 1 375 3 377 4 27 1 349 2 152 6 302 3 48 1 186 3 
342 8 344 1 98 3 148 18 256 1 193 2 175 2 150 1 349 1 27 1 76 4 370 2 152 4 153 4 48 1 302 1 352 1 9 4 156 1 264 1 355 2 29 1 329 1 332 1 244 1 113 3 375 1 15 1 377 8 289 1 17 4 162 1 186 10 
9 2 355 1 342 4 332 1 98 2 148 8 113 1 175 1 375 1 377 4 17 2 76 2 27 1 349 1 152 3 153 2 48 1 302 1 352 1 186 4 
355 1 98 2 148 6 113 1 375 1 377 3 288 1 27 1 349 1 152 2 302 1 48 1 352 1 186 3 
306 1 9 1 355 1 264 1 342 2 98 1 332 1 148 4 193 1 113 1 377 2 17 1 76 1 370 1 152 2 153 1 186 2 
355 1 264 1 29 1 344 1 98 1 332 1 148 7 193 1 113 1 15 2 377 4 268 1 370 1 152 2 186 3 
252 1 342 4 344 2 98 5 148 23 193 2 175 2 349 1 27 1 370 2 76 2 152 9 153 2 48 1 302 2 352 1 9 2 264 2 355 3 332 4 113 3 375 2 15 2 377 12 268 1 17 2 115 1 186 11 138 1 
15 1 377 1 148 1 
344 1 148 1 186 1 
9 1 306 1 169 1 264 1 355 1 342 2 332 1 98 2 148 6 193 1 113 1 377 3 17 1 76 1 370 1 152 3 153 1 186 3 
342 2 344 1 98 1 148 12 256 1 193 2 150 1 76 1 370 2 152 2 153 1 9 1 264 2 355 2 29 1 329 1 332 1 244 1 113 2 15 1 377 6 289 1 17 1 162 1 186 6 
355 1 98 1 332 1 148 6 113 1 375 1 377 3 152 2 48 1 302 1 186 3 
9 1 252 1 342 2 332 1 98 1 148 3 175 1 375 1 377 2 17 1 349 1 76 1 27 1 152 2 153 1 302 1 186 1 
79 1 9 1 355 2 342 2 98 3 332 2 148 10 113 2 375 2 150 1 377 5 17 1 76 1 152 5 153 1 302 2 48 1 186 5 
9 1 342 2 332 1 148 2 193 1 113 1 150 1 17 1 76 1 152 1 153 1 186 2 
9 1 355 1 264 1 342 2 98 1 332 1 148 4 193 1 113 1 150 1 377 2 17 1 76 1 370 1 152 2 153 1 186 2 
156 1 9 3 252 1 342 6 98 1 332 1 148 3 175 1 375 1 150 1 377 2 17 3 76 3 152 2 153 3 302 1 186 1 
252 1 342 10 344 3 98 7 148 34 193 3 175 2 150 1 349 1 27 1 76 5 370 3 152 12 153 5 48 2 302 3 352 1 306 1 156 1 9 5 264 3 355 5 29 1 331 1 332 5 113 5 375 3 15 4 377 18 268 1 17 5 88 1 64 1 186 16 
181 1 364 1 67 1 54 1 339 1 179 1 235 1 
181 1 134 1 378 1 364 1 67 1 38 1 54 1 125 1 339 1 179 1 274 1 235 1 
228 1 189 1 288 1 124 1 341 1 133 1 119 1 83 1 212 1 374 1 41 1 
315 1 189 1 364 1 124 1 341 1 23 1 173 1 83 1 179 2 41 1 374 1 181 2 228 1 106 1 338 1 77 1 119 1 235 1 
315 2 189 1 364 2 124 1 23 1 143 1 159 1 112 1 173 1 83 1 277 1 179 2 41 1 374 1 181 2 228 2 45 1 106 1 130 1 338 2 77 1 119 3 235 1 
315 2 189 1 364 2 124 2 143 1 173 1 277 1 41 2 297 1 228 2 45 1 106 1 77 1 130 1 235 1 159 1 83 2 112 1 374 1 179 2 181 2 310 1 338 2 119 3 
315 1 189 1 364 1 124 1 144 1 100 1 70 1 277 1 3 1 41 1 228 1 196 1 45 1 369 1 106 1 323 2 351 1 130 1 262 1 12 1 112 1 57 1 83 1 179 1 374 1 181 1 380 1 248 2 117 1 338 1 119 4 90 1 
315 1 189 1 364 1 124 1 144 1 100 1 70 1 277 1 3 1 41 1 228 1 196 1 45 1 369 1 106 1 323 2 351 1 130 1 262 1 112 1 57 1 83 1 179 1 374 1 181 1 380 1 248 2 62 1 117 1 338 1 119 4 
189 1 124 1 322 1 83 1 374 1 41 1 
313 1 363 1 236 1 189 3 237 1 124 7 341 2 145 1 83 7 69 1 41 6 374 2 74 1 228 2 31 1 199 1 322 1 234 1 338 1 272 1 119 3 
187 1 36 1 189 1 342 4 94 1 98 2 99 1 148 6 41 1 349 1 106 1 152 2 153 2 302 1 48 1 352 1 9 2 355 1 208 1 113 1 59 1 17 2 164 1 119 1 315 1 276 1 364 1 124 1 23 1 173 1 228 1 76 2 27 1 77 1 235 2 236 1 83 1 179 2 374 1 181 2 375 1 377 3 379 2 338 1 89 1 293 2 186 3 
341 1 144 1 254 2 100 1 3 2 41 1 196 1 151 1 260 4 6 1 106 1 351 1 302 1 48 1 8 1 262 2 355 2 207 1 11 2 358 5 112 1 57 1 113 2 270 1 62 1 117 1 119 2 315 1 364 1 124 1 70 1 126 2 229 2 369 2 323 3 325 1 79 1 83 1 241 1 179 1 287 1 181 1 375 1 335 1 336 2 380 1 248 3 
236 1 189 2 124 2 70 1 83 2 41 2 374 1 228 1 199 1 322 1 46 1 338 1 119 2 
297 1 228 1 236 1 189 1 124 4 341 1 343 1 133 1 119 1 83 4 212 1 374 1 41 4 
189 2 124 2 83 2 69 1 41 2 374 1 228 1 45 1 60 1 234 1 116 1 338 1 119 1 139 1 
189 1 258 1 232 1 124 1 341 1 239 1 83 1 219 1 374 1 41 1 
236 1 189 1 124 2 95 1 145 1 83 2 41 2 374 1 228 1 272 1 119 1 
363 1 313 1 236 1 189 2 124 5 341 1 343 1 133 1 145 1 83 5 212 1 41 4 374 2 228 2 45 1 119 3 
313 1 236 1 189 2 124 5 341 1 343 1 133 1 145 1 83 5 212 1 41 4 374 2 228 2 128 1 45 1 119 3 
315 1 189 1 364 1 124 1 341 1 173 1 83 1 179 2 41 1 374 1 181 2 228 1 310 1 106 1 338 1 77 1 119 1 235 1 
228 1 74 1 189 2 124 1 45 1 199 1 234 1 338 1 69 1 119 1 83 1 374 1 41 1 
204 1 66 1 51 1 249 1 235 1 
66 1 0 1 315 1 364 1 143 1 144 1 147 1 100 1 3 1 196 1 369 1 106 1 323 2 282 1 204 1 51 1 111 1 207 1 159 1 57 1 112 2 179 1 181 1 85 1 380 1 248 2 117 1 249 1 
204 1 51 1 364 1 158 1 101 1 179 1 181 1 129 1 249 1 
111 1 147 1 249 1 
288 1 80 1 198 1 301 1 
177 1 108 1 334 1 80 1 198 1 61 1 301 1 
177 1 317 1 81 1 
177 3 108 3 334 1 80 1 198 1 157 2 61 1 35 1 301 1 25 1 225 1 120 1 
177 2 108 2 334 1 80 1 299 1 198 1 171 1 61 1 301 1 
177 1 108 1 80 1 239 1 334 1 232 1 61 1 216 1 35 1 371 1 122 1 
177 1 108 1 334 1 80 1 61 1 35 1 301 1 
177 1 108 1 334 1 198 1 61 1 35 1 301 2 
65 1 177 2 5 1 108 2 334 2 80 1 61 2 35 1 301 1 194 1 
177 3 108 3 80 2 171 2 224 1 319 1 334 1 75 1 198 1 61 1 35 1 301 1 371 1 
177 2 221 1 108 2 80 1 171 1 146 1 239 1 334 1 258 1 232 2 198 1 61 1 35 1 301 1 122 1 
177 4 108 4 80 2 171 2 255 1 319 1 334 2 299 1 198 1 61 2 35 1 301 1 371 1 
177 1 108 1 334 1 80 1 198 1 61 1 35 1 301 1 
177 4 108 4 263 1 80 3 157 1 171 2 25 1 225 1 319 1 334 1 198 2 61 1 301 2 371 1 
177 2 366 1 108 2 334 1 44 1 80 1 198 1 171 1 61 1 35 1 301 1 167 1 
177 3 108 3 334 1 80 1 198 1 157 2 61 1 35 1 301 1 25 2 225 1 26 1 
135 1 80 2 286 1 312 2 
177 1 108 1 334 1 61 1 35 1 63 1 
177 2 108 2 334 1 80 1 75 1 198 1 171 1 61 1 35 1 301 1 
92 1 
177 1 108 1 334 1 80 1 198 1 61 1 35 1 301 1 
177 3 108 3 80 1 171 1 157 1 334 1 75 1 198 1 61 1 35 1 301 1 
319 1 263 1 80 1 371 1 
80 1 301 1 

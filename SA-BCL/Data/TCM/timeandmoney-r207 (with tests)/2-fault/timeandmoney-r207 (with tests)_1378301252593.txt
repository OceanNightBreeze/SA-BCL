#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException 233 150 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration; | RETURN | 2650 | return null
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 1286 | = null
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
227 2 104 1 203 5 230 3 164 6 140 4 358 2 84 1 83 2 144 1 148 1 340 1 129 1 151 1 264 1 152 2 312 1 36 1 370 1 14 1 91 9 267 1 135 2 272 1 178 2 47 1 121 9 225 2 
227 2 104 1 203 5 230 3 164 6 140 4 358 2 84 1 83 2 144 1 148 1 340 1 129 1 151 1 264 1 152 2 312 1 36 1 370 1 14 1 91 9 267 1 135 2 272 1 178 2 47 1 225 2 121 9 
227 2 104 1 203 6 230 4 164 7 140 5 358 2 84 1 83 2 144 1 148 1 340 1 129 1 151 1 264 1 152 2 312 1 36 1 370 1 14 1 91 10 267 1 135 2 272 1 178 2 47 1 225 2 121 10 
227 1 104 1 203 4 230 2 164 4 140 3 358 2 84 1 83 2 148 1 340 1 129 1 151 1 264 1 152 2 312 1 36 1 370 1 14 1 91 7 267 1 135 2 272 1 178 2 47 1 225 2 121 7 
227 2 152 1 264 1 370 1 203 3 230 1 164 3 140 2 91 4 358 1 144 1 135 1 272 1 178 1 340 1 47 1 121 4 225 1 
129 1 264 1 152 1 203 1 104 1 38 1 91 2 358 1 255 1 83 1 135 1 20 1 178 1 340 1 47 1 121 2 
264 1 203 2 230 1 164 1 140 1 91 3 358 2 267 1 83 1 135 2 340 1 47 1 121 3 
227 2 152 1 264 1 370 1 36 1 203 5 372 1 14 1 164 7 230 3 140 4 91 9 358 2 267 1 83 1 144 1 135 2 361 1 272 1 178 1 340 1 47 1 225 1 121 9 
227 2 152 1 264 1 370 1 36 1 203 5 372 1 14 1 164 7 230 3 140 4 91 9 358 2 267 1 83 1 144 1 135 2 361 1 272 1 178 1 340 1 47 1 225 1 121 9 
210 1 138 1 23 1 
23 1 351 1 330 2 
360 2 86 1 15 2 26 2 292 1 342 2 238 2 209 2 
201 1 228 1 251 1 253 2 328 1 357 1 360 2 259 2 86 1 338 1 286 1 206 1 342 2 341 1 7 2 8 1 238 3 209 2 345 1 241 1 155 1 214 1 15 2 292 1 158 1 16 1 194 1 318 1 295 1 377 1 246 2 22 1 322 1 26 3 324 1 49 2 50 1 
360 1 260 1 323 1 15 1 26 1 292 1 342 1 243 1 238 1 209 1 
181 1 138 1 15 1 308 1 58 1 323 1 282 1 23 1 237 1 26 1 70 1 167 1 6 1 238 1 
181 1 138 1 15 1 360 1 308 1 58 1 323 1 282 2 23 1 237 1 26 1 6 2 342 1 238 1 209 1 
110 1 282 1 179 1 6 1 352 1 
110 1 138 1 12 1 282 2 23 1 179 1 6 2 306 1 
110 1 282 1 6 1 
303 1 15 1 292 1 243 1 360 1 260 1 323 1 282 1 179 1 26 1 6 1 342 1 238 1 209 1 
23 1 
110 1 138 1 12 1 186 1 282 2 23 1 179 1 6 2 
90 1 73 1 138 1 12 1 92 1 93 1 184 1 376 2 110 2 244 1 97 1 335 1 45 1 282 5 23 1 179 2 379 2 188 2 6 5 
210 1 86 1 
15 2 280 1 235 1 360 1 86 2 26 2 342 1 238 2 209 1 
41 1 156 1 66 1 
155 1 328 1 107 1 158 1 357 1 318 1 259 1 246 1 86 1 26 1 338 1 324 1 7 1 8 1 238 1 50 1 
122 1 15 5 348 1 235 1 360 4 18 1 270 1 86 1 26 5 167 1 223 2 342 1 238 5 209 4 
360 2 260 1 323 1 15 2 26 2 238 2 56 1 209 2 
155 1 156 1 348 1 15 1 328 1 357 1 158 1 318 1 360 1 259 1 246 1 338 1 26 2 324 1 223 1 8 1 7 1 238 2 209 1 50 1 
360 3 86 1 15 3 26 3 342 1 223 1 238 3 209 3 
360 1 260 1 323 1 15 1 26 1 238 1 209 1 
360 1 323 1 15 1 26 1 342 1 238 1 280 1 209 1 235 1 
201 1 51 1 228 1 181 1 251 1 253 1 328 1 357 1 235 1 360 3 259 1 308 1 334 1 58 1 86 1 282 1 237 1 338 1 286 1 206 1 342 2 6 1 8 1 7 1 238 4 209 3 241 1 155 1 214 1 15 3 348 1 158 1 292 1 16 1 318 1 295 1 246 1 322 1 323 1 26 4 324 1 223 1 49 2 50 1 
360 1 18 1 86 1 15 2 26 2 167 1 223 1 238 2 209 1 
181 1 373 1 348 1 15 3 235 1 360 3 308 1 334 1 58 1 282 1 323 1 23 1 237 1 26 3 342 1 6 1 223 2 238 3 209 3 
41 1 15 2 156 1 235 1 360 2 26 2 223 1 342 1 238 2 209 2 
155 1 328 1 158 1 357 1 318 1 259 1 246 1 86 1 26 1 338 1 324 1 7 1 8 1 238 1 50 1 
155 1 328 1 317 1 357 1 318 1 259 1 246 1 86 1 337 1 26 1 338 1 324 1 7 1 8 1 238 1 
201 1 250 1 228 2 327 1 76 1 251 1 253 4 82 1 310 1 5 1 261 1 286 1 206 1 189 1 241 1 156 2 41 2 293 1 177 1 66 2 377 2 68 1 322 1 49 2 
360 1 58 1 323 1 15 1 26 1 238 1 209 1 56 1 
102 1 3 1 
102 1 3 1 
4 1 380 1 
4 1 380 1 
4 1 380 1 
102 1 3 1 141 1 
102 1 3 1 141 1 
102 1 3 1 208 1 
211 1 102 2 299 1 3 2 4 1 380 1 
102 1 3 1 141 1 
102 1 3 1 196 1 
102 1 3 1 196 1 
102 1 3 1 196 1 
101 1 102 1 3 1 106 1 360 2 86 1 282 1 166 1 6 1 168 1 238 2 209 2 208 1 112 1 116 1 15 2 316 1 350 1 118 1 247 1 221 1 24 1 98 1 26 2 
102 2 153 1 3 2 106 2 215 1 81 1 316 2 350 2 175 1 118 2 165 1 299 1 247 3 282 2 23 1 25 1 98 1 6 2 88 2 
152 1 178 1 225 1 
152 1 178 1 255 1 
288 1 219 1 152 3 363 1 255 1 225 2 
288 1 219 1 152 2 255 1 225 1 234 1 
288 2 219 1 152 2 255 1 225 1 
277 2 250 1 356 1 138 1 31 2 123 1 82 1 184 1 330 3 110 1 85 1 57 1 282 5 166 1 188 1 261 1 6 5 112 1 130 2 12 1 116 1 265 1 92 2 217 1 351 1 376 1 68 1 97 3 23 2 379 1 179 4 99 1 
302 1 73 1 277 6 250 3 163 5 138 1 52 1 31 6 79 1 123 2 32 1 82 3 184 1 330 9 110 6 166 4 282 9 188 2 261 3 6 9 12 1 192 1 265 2 92 6 217 3 351 3 352 5 376 2 68 3 97 8 300 1 23 5 179 7 379 2 99 1 
73 1 250 1 277 2 138 1 31 2 123 1 82 1 330 4 85 1 57 1 282 3 166 1 188 1 261 1 6 3 130 1 265 1 92 2 217 1 351 2 376 1 68 1 97 3 23 3 179 2 379 1 
73 1 277 4 250 2 138 1 52 1 31 4 123 1 32 1 82 2 330 7 85 1 57 1 282 4 166 2 188 1 261 2 6 4 130 2 192 1 265 1 92 4 217 2 351 3 376 1 68 2 97 5 23 4 379 1 179 3 
210 1 155 1 142 1 
155 1 133 1 
353 1 
155 1 338 1 318 1 
155 1 266 1 
155 1 318 1 
362 1 155 3 204 1 338 1 142 2 318 1 
239 2 228 3 29 1 154 1 315 1 193 1 253 7 349 1 173 1 329 1 82 1 177 2 296 1 310 3 377 4 261 1 339 1 
239 2 228 3 29 1 154 1 315 1 193 1 253 7 349 1 173 1 329 1 82 1 177 2 296 1 310 3 377 4 261 1 339 1 
239 2 228 3 29 1 326 1 154 1 315 1 193 1 253 7 349 1 173 1 329 1 82 1 177 2 296 1 310 3 377 4 261 1 339 1 
201 1 180 1 250 3 75 1 29 1 228 15 253 31 329 2 82 4 35 3 310 10 339 1 261 4 286 1 111 1 206 1 239 3 154 2 241 1 349 1 193 2 315 5 173 1 217 3 177 5 296 2 320 1 377 16 68 3 198 4 120 1 301 1 49 2 48 1 
201 2 228 4 29 1 253 9 329 1 82 1 145 1 310 4 261 1 339 1 286 2 206 2 239 2 313 1 154 1 241 2 315 1 193 1 173 1 177 3 296 1 377 5 301 1 49 4 
0 1 74 1 203 1 164 1 358 1 357 1 255 1 83 1 332 1 259 1 185 1 363 1 340 1 7 1 343 1 264 1 152 2 63 1 213 1 13 1 91 2 135 1 246 1 119 1 178 1 47 1 324 1 274 1 225 1 121 2 
0 1 74 1 203 1 164 2 358 1 357 1 255 1 54 1 83 1 332 1 259 1 185 1 363 1 340 1 7 1 11 1 152 2 63 1 213 1 13 1 91 3 268 1 135 1 246 1 119 1 178 1 47 1 324 1 225 1 121 3 
74 1 203 1 164 2 357 1 255 1 54 1 83 1 332 1 259 1 185 1 363 1 340 1 7 1 11 1 152 2 213 1 13 1 91 2 246 1 119 1 178 1 47 1 324 1 121 2 225 1 
10 1 74 2 114 1 155 1 213 2 91 1 328 1 357 1 358 1 94 1 318 1 83 2 268 1 135 1 259 1 332 2 246 1 262 1 324 1 354 1 7 1 161 1 121 1 
0 1 74 1 358 1 357 1 255 1 54 1 83 1 332 1 259 1 185 1 363 1 7 1 264 1 152 2 63 1 213 1 13 1 91 1 135 1 246 1 119 1 178 1 324 1 274 1 225 1 121 1 
375 1 
276 4 1 2 181 1 138 1 231 2 328 2 184 1 330 2 110 6 58 1 282 5 237 1 188 1 6 5 7 2 238 1 10 1 12 3 346 1 155 1 15 1 351 2 159 2 195 2 246 2 23 2 26 1 70 1 354 1 27 1 162 1 199 1 202 1 304 1 77 1 123 1 305 2 357 1 359 1 256 1 125 2 259 2 308 1 366 1 167 1 374 2 92 2 318 1 376 1 321 1 97 2 323 1 379 1 46 1 324 1 
276 2 1 1 181 1 12 1 346 1 202 1 304 1 15 1 256 1 110 2 308 1 186 1 58 1 323 1 282 3 237 1 366 1 26 1 70 1 6 3 167 1 238 1 
276 3 181 1 138 1 304 1 202 1 256 1 110 1 308 1 58 1 186 1 282 3 237 1 366 1 167 1 6 3 238 1 346 1 12 1 15 1 195 1 323 1 23 1 26 1 70 1 
276 3 181 1 1 1 138 1 304 1 202 1 305 1 256 1 308 1 110 2 186 1 58 1 282 3 237 1 366 1 167 1 6 3 238 1 12 1 346 1 15 1 195 1 323 1 23 1 26 1 70 1 
276 6 1 4 181 1 138 5 231 2 184 1 143 1 147 1 110 7 58 1 186 1 282 5 237 1 187 1 188 1 149 1 6 5 238 1 12 3 346 1 15 1 159 2 351 2 195 4 23 5 26 1 70 1 162 1 202 1 304 1 305 4 256 1 125 2 308 1 366 1 167 1 207 1 92 1 374 2 376 1 97 1 323 1 379 1 46 1 
276 4 181 1 1 2 138 1 231 2 184 1 330 2 110 4 58 1 282 4 237 1 188 1 6 4 238 1 346 1 12 2 15 1 159 2 351 2 195 2 23 2 26 1 70 1 162 1 202 1 304 1 305 2 256 1 125 2 308 1 366 1 167 1 92 1 374 2 376 1 321 1 97 1 323 1 379 1 46 1 
276 4 1 2 181 1 138 1 304 1 202 1 231 2 305 2 256 1 125 2 184 1 143 1 110 4 308 1 58 1 282 4 237 1 187 1 149 1 188 1 366 1 167 1 6 4 238 1 12 2 346 1 374 2 92 1 15 1 351 2 159 2 376 1 195 2 97 1 323 1 23 1 379 1 26 1 46 1 70 1 162 1 
276 4 1 2 181 1 138 1 304 1 202 1 231 2 305 2 256 1 125 2 184 1 143 1 110 4 308 1 58 1 282 4 237 1 187 1 149 1 188 1 366 1 167 1 6 4 238 1 12 2 346 1 374 2 92 1 15 1 351 2 159 2 376 1 195 2 97 1 323 1 23 1 379 1 26 1 46 1 70 1 162 1 
276 4 1 2 181 1 138 1 139 1 304 1 202 1 305 2 256 1 125 2 184 1 330 2 110 4 308 1 58 1 282 4 237 1 149 1 188 1 366 1 367 2 167 1 6 4 238 1 12 2 346 1 92 1 15 1 159 2 43 1 376 1 67 2 195 2 220 1 97 1 323 1 23 1 379 1 26 1 46 1 70 1 
276 5 181 1 1 3 138 1 304 1 202 1 231 2 305 3 256 1 125 2 184 1 143 1 308 1 110 5 58 1 282 4 237 1 187 1 149 1 188 1 366 1 167 1 6 4 238 1 207 1 12 2 346 1 374 2 92 1 15 1 351 2 159 2 376 1 195 3 97 1 323 1 23 1 379 1 26 1 46 1 70 1 162 1 
276 5 181 1 1 3 138 1 304 1 202 1 231 2 305 3 256 1 125 2 184 1 143 1 308 1 110 5 58 1 282 4 237 1 187 1 149 1 188 1 366 1 167 1 6 4 238 1 207 1 12 2 346 1 374 2 92 1 15 1 351 2 159 2 376 1 195 3 97 1 323 1 23 1 379 1 26 1 46 1 70 1 162 1 
276 4 1 2 181 1 138 1 304 1 202 1 305 2 256 1 125 2 184 1 330 2 110 4 308 1 58 1 282 4 237 1 188 1 366 1 367 2 6 4 167 1 238 1 12 2 346 1 92 1 15 1 159 2 376 1 67 2 195 2 220 1 321 1 97 1 323 1 23 1 379 1 26 1 46 1 70 1 
201 1 29 1 228 3 251 1 253 6 82 1 310 2 86 2 339 1 261 1 286 1 206 1 210 1 239 1 189 1 241 1 41 1 156 1 193 1 173 1 177 2 66 1 296 1 377 3 322 1 49 2 
201 2 180 1 250 2 228 6 251 2 253 14 82 1 35 3 310 2 86 1 261 2 286 2 263 1 206 2 113 1 241 2 131 1 315 1 156 11 41 4 217 2 16 1 177 1 66 11 377 8 68 1 22 1 136 1 322 1 198 3 48 1 49 4 137 1 
201 1 228 1 232 1 251 1 328 1 253 2 107 1 124 1 357 1 360 1 259 1 86 1 338 1 287 1 286 1 206 1 8 1 7 1 238 2 209 1 155 1 241 1 41 1 15 1 348 1 158 1 16 1 318 1 246 1 377 1 22 1 322 1 26 2 324 1 223 1 137 1 49 2 50 1 
228 10 328 1 54 1 339 1 338 2 286 3 7 3 8 2 238 3 9 1 239 1 62 2 241 3 155 2 193 1 348 1 15 1 156 7 158 2 16 1 66 7 295 2 296 1 246 3 68 2 249 1 22 1 26 3 201 3 250 2 29 1 251 3 253 20 80 2 357 2 82 3 360 1 259 3 310 8 86 2 261 3 206 3 209 1 369 2 41 7 315 4 173 1 217 2 177 4 318 2 377 10 322 3 223 1 324 2 224 2 100 1 49 6 137 1 50 2 
201 2 228 1 78 1 251 2 328 2 253 2 357 2 54 1 360 1 259 8 336 1 286 2 206 2 7 7 343 1 238 1 344 1 209 1 10 1 189 1 345 2 39 1 155 3 241 2 15 1 16 1 17 1 318 2 246 8 377 1 21 1 22 1 322 2 26 1 223 1 324 2 49 4 354 1 226 1 
201 1 250 1 228 2 105 1 251 1 253 3 82 1 235 1 360 1 310 1 261 1 286 1 342 1 206 1 238 1 209 1 241 1 41 1 156 1 15 1 217 1 177 1 66 1 377 1 68 1 322 1 26 1 49 2 137 1 
201 1 250 1 189 1 241 1 327 1 251 1 315 1 41 1 156 1 253 2 66 1 310 1 377 2 322 1 261 1 286 1 206 1 49 2 
201 1 228 2 189 1 241 1 251 1 41 1 156 1 253 2 82 1 177 1 66 1 310 1 68 1 322 1 5 1 286 1 206 1 49 2 
201 1 250 1 228 2 251 1 253 4 82 1 310 2 261 1 286 1 206 1 189 1 241 1 156 2 41 2 315 1 217 1 177 1 66 2 377 2 68 1 322 1 49 2 
201 1 250 1 241 1 327 1 251 1 315 1 41 1 156 1 253 2 66 1 310 1 377 2 322 1 336 1 261 1 286 1 206 1 49 2 
201 1 228 2 241 1 251 1 41 1 156 1 253 2 82 1 177 1 66 1 310 1 68 1 322 1 5 1 336 1 286 1 206 1 49 2 
201 1 250 1 228 2 251 1 253 4 82 1 310 2 336 1 261 1 286 1 206 1 241 1 156 2 41 2 315 1 217 1 177 1 66 2 377 2 68 1 322 1 49 2 
201 1 250 1 228 2 251 1 253 4 82 1 310 2 261 1 286 1 206 1 241 1 156 2 41 2 315 1 217 1 177 1 66 2 377 2 68 1 322 1 49 2 
201 1 228 1 251 1 253 2 328 1 357 1 259 1 86 1 338 1 286 1 206 1 8 1 7 1 238 1 155 1 241 1 158 1 16 1 318 1 295 1 377 1 246 1 22 1 322 1 26 1 324 1 49 2 50 1 
201 1 325 1 228 1 251 1 253 2 328 1 357 1 259 1 86 1 337 1 338 1 286 1 206 1 8 1 7 1 238 1 155 1 241 1 317 1 16 1 318 1 377 1 246 1 22 1 322 1 26 1 324 1 49 2 
201 1 250 1 228 2 251 1 253 4 82 1 310 2 261 1 286 1 206 1 241 1 156 2 41 2 315 1 217 1 177 1 66 2 377 2 68 1 322 1 49 2 137 1 
201 1 250 1 228 2 251 1 253 4 357 1 82 1 259 1 310 2 261 1 338 1 286 1 206 1 8 1 7 1 343 1 238 1 62 1 155 1 241 1 315 1 41 2 156 2 158 1 217 1 177 1 66 2 318 1 295 1 68 1 377 2 246 1 322 1 26 1 324 1 49 2 50 1 
201 1 250 1 228 1 251 1 253 3 82 1 235 1 360 1 310 1 284 1 261 1 286 1 342 1 206 1 238 1 209 1 241 1 315 1 15 1 156 1 41 1 217 1 66 1 68 1 377 2 322 1 26 1 49 2 137 1 
275 1 201 2 180 1 250 3 228 10 253 19 82 3 258 1 331 1 35 1 145 1 310 6 261 3 286 2 60 1 206 2 169 1 240 1 115 1 241 2 64 2 315 3 217 3 177 3 294 2 377 9 68 3 198 2 48 1 49 4 
201 3 250 3 228 12 253 26 82 2 108 1 258 2 35 2 126 1 145 1 310 4 365 1 261 3 286 3 60 1 206 3 169 1 368 1 289 1 240 2 115 1 241 3 64 1 315 2 217 3 174 1 177 2 294 4 377 14 68 2 301 2 198 2 49 6 48 2 
275 1 180 1 228 21 108 1 145 1 333 1 339 1 286 3 60 1 289 1 239 1 240 2 115 1 241 3 193 1 64 1 294 4 296 1 68 4 198 4 301 1 201 3 250 4 29 1 253 41 82 5 258 1 35 3 126 1 310 8 365 1 261 5 206 3 368 1 169 1 315 4 217 4 173 1 174 1 177 4 377 20 49 6 48 3 
275 1 201 4 180 1 250 4 29 1 228 18 253 38 108 1 82 4 258 1 35 3 126 1 145 1 310 7 333 1 365 1 339 1 261 5 286 4 60 1 206 4 169 1 368 1 289 1 239 1 240 2 115 1 241 4 64 1 193 1 315 3 173 1 217 4 174 1 177 4 294 4 296 1 377 20 68 3 301 2 198 4 48 3 49 8 
201 2 180 2 250 7 29 1 228 25 253 52 108 1 82 8 258 1 35 4 126 1 145 1 310 14 365 1 339 1 261 8 286 2 263 2 60 1 206 2 169 1 368 1 289 1 239 1 240 1 115 1 241 2 64 1 193 1 315 7 173 1 217 7 174 1 177 7 294 4 296 1 377 27 68 7 301 1 198 4 48 2 49 4 
118 1 170 1 165 1 102 1 153 1 299 1 3 1 106 1 316 1 350 1 
221 1 208 1 
118 1 102 1 103 1 3 1 182 1 106 1 316 1 33 1 350 1 
242 1 141 1 
211 1 196 1 55 1 
102 1 153 1 3 1 106 1 215 1 316 1 350 1 175 1 118 1 165 1 299 1 247 2 282 1 23 1 25 1 98 1 6 1 88 1 
102 1 153 1 3 1 106 1 215 1 316 1 350 1 175 1 118 1 165 1 299 1 247 2 282 1 23 1 25 1 98 1 6 1 88 1 
102 1 153 1 3 1 106 1 215 1 316 1 350 1 175 1 118 1 165 1 299 1 247 2 282 1 23 1 25 1 98 1 6 1 88 1 
211 1 242 1 141 1 
211 1 242 1 141 1 
196 1 55 1 
211 1 196 1 55 1 
101 1 24 1 
101 1 102 1 3 1 106 1 360 2 86 1 282 1 166 1 88 1 6 1 168 1 238 2 208 1 209 2 112 1 116 1 215 1 15 2 316 1 350 1 118 1 247 1 221 1 24 1 179 1 26 2 222 1 
201 1 228 1 251 1 253 2 357 1 259 2 146 1 364 1 286 1 206 1 7 2 238 2 344 1 290 1 345 2 155 1 241 1 15 2 16 1 318 1 134 1 246 2 245 1 377 1 21 1 22 1 322 1 26 2 324 1 137 1 49 2 
0 1 152 2 279 1 213 1 255 1 357 1 54 1 259 2 185 1 246 2 119 1 363 1 311 1 87 1 178 1 324 1 7 2 225 1 343 1 
0 1 152 2 213 1 216 1 255 1 357 1 54 1 259 1 185 1 246 1 119 1 363 1 87 1 178 1 324 1 7 1 225 1 
10 1 155 1 213 1 328 1 357 1 132 1 94 1 318 1 259 1 246 1 311 1 324 1 7 1 354 1 
0 1 152 2 279 1 213 1 255 1 357 1 54 1 259 1 185 1 246 1 119 1 363 1 311 1 87 1 178 1 324 1 7 1 225 1 
197 1 
210 1 90 1 138 1 97 1 45 1 23 1 92 1 
138 1 231 1 184 1 330 1 110 1 282 1 188 1 6 1 12 1 374 1 92 1 351 1 376 1 97 1 23 2 379 1 162 1 
277 6 138 2 328 1 184 4 142 2 330 12 110 5 282 5 188 4 338 3 6 5 61 2 7 3 343 1 291 2 12 3 155 10 190 2 347 1 191 2 117 2 351 6 19 1 246 3 68 2 298 1 248 1 23 8 27 1 250 2 31 6 204 1 123 2 357 3 82 2 259 3 308 2 205 1 261 2 90 1 40 2 92 8 42 2 217 2 266 2 133 3 318 3 376 4 96 2 97 9 45 1 379 4 324 4 224 2 
277 5 250 2 138 2 31 5 123 1 184 2 108 1 82 2 330 6 35 1 126 1 110 1 365 1 282 1 188 2 261 2 6 1 368 1 12 1 40 2 92 5 217 2 174 1 351 3 96 1 376 2 68 2 97 8 23 5 379 2 198 1 71 1 27 1 381 1 48 1 
303 1 184 1 82 1 143 1 360 1 260 1 282 1 188 1 261 2 6 1 342 1 238 1 209 1 40 2 193 1 92 2 15 1 65 1 173 1 292 1 243 1 96 1 376 1 296 1 97 2 323 1 379 1 26 1 
90 1 138 1 92 1 184 1 376 1 97 1 45 1 23 1 379 1 188 1 
250 2 277 5 31 5 40 2 92 5 217 2 351 5 82 2 330 10 96 1 68 2 97 5 23 5 261 2 224 1 
110 1 138 1 12 1 282 1 23 1 6 1 
73 1 328 2 123 2 357 1 359 1 184 1 259 4 110 4 127 1 282 3 205 1 188 2 6 3 7 4 10 1 12 2 371 1 155 1 92 2 318 1 376 2 19 2 246 4 97 2 379 2 324 1 27 2 354 1 199 1 
201 1 228 1 251 1 253 1 328 1 357 1 360 2 259 1 86 1 338 1 286 1 206 1 342 2 7 1 8 1 238 3 209 2 155 1 241 1 214 1 15 2 292 1 158 1 16 1 318 1 295 1 246 1 322 1 26 3 324 1 49 2 50 1 
239 1 277 2 138 2 31 2 92 2 123 1 351 2 184 1 330 4 376 1 97 1 23 4 379 1 188 1 27 1 
118 1 378 1 316 1 
118 1 378 1 316 1 
101 1 118 1 171 1 153 1 316 1 
118 1 378 1 316 1 
118 1 316 1 285 1 
118 1 316 1 285 1 
118 1 316 1 285 1 
118 1 316 1 
102 1 3 1 
201 2 239 1 228 4 29 1 241 2 253 8 315 1 193 1 173 1 82 1 177 2 296 1 377 4 310 3 261 1 339 1 286 2 301 1 206 2 49 4 
210 1 239 1 228 3 29 1 193 1 253 6 173 1 82 1 177 2 296 1 310 2 377 3 339 1 261 1 
201 1 250 1 228 2 241 1 253 4 315 1 217 1 82 1 177 1 109 1 68 1 310 2 377 2 261 1 286 1 206 1 49 2 
180 1 250 1 228 4 253 7 315 1 217 1 82 1 177 1 35 1 68 1 377 3 310 2 261 1 198 2 48 1 
201 2 250 2 180 1 29 1 228 12 253 23 82 3 35 2 310 9 283 1 339 1 261 3 286 2 263 1 206 2 239 1 241 2 131 1 193 2 315 4 173 1 217 2 177 5 296 2 377 11 68 2 198 2 301 2 49 4 
228 1 253 1 198 1 
377 1 253 1 35 1 
201 1 250 1 228 3 241 1 253 6 315 1 217 1 82 1 177 2 109 1 377 3 310 3 68 1 261 1 286 1 206 1 224 1 49 2 
201 1 250 2 228 6 253 12 108 1 82 2 35 1 126 1 145 1 310 2 365 1 261 2 286 1 206 1 368 1 241 1 315 1 217 2 174 1 177 1 377 6 68 2 198 1 48 1 49 2 
228 3 253 6 193 1 315 1 173 1 82 1 177 1 296 1 377 3 310 2 261 1 
201 1 228 2 29 1 241 1 315 1 193 1 253 3 177 1 296 1 377 1 310 2 283 1 339 1 301 1 286 1 206 1 49 2 
201 1 228 5 241 1 193 2 315 2 253 10 65 1 173 1 82 2 177 3 145 1 296 2 310 5 377 5 261 2 286 1 206 1 49 2 
201 1 250 1 241 1 253 2 315 1 145 1 377 2 310 1 261 1 286 1 206 1 49 2 
201 1 250 1 228 2 241 1 253 4 315 1 217 1 82 1 177 1 145 1 68 1 310 2 377 2 261 1 286 1 206 1 49 2 
275 1 201 3 228 2 241 3 253 3 193 1 315 1 177 1 145 1 296 1 310 2 377 1 283 1 301 1 286 3 206 3 49 6 
275 1 201 5 75 1 180 1 250 3 29 1 228 18 253 34 82 5 35 3 109 1 145 1 310 12 283 1 339 1 261 5 111 1 286 5 206 5 239 1 241 5 193 3 315 5 173 2 217 3 177 7 296 3 377 16 68 3 301 2 198 4 120 1 48 1 49 10 
201 1 228 4 29 1 253 8 82 1 35 1 145 1 310 2 261 1 339 1 286 1 206 1 368 1 239 1 241 1 193 1 173 1 177 2 296 1 377 4 198 1 48 1 49 2 
201 2 180 1 250 1 29 1 228 5 253 11 82 1 35 1 109 1 145 1 310 3 339 1 261 2 286 2 206 2 368 1 239 1 241 2 193 1 315 1 173 1 217 1 177 2 296 1 377 6 198 2 48 1 49 4 
201 3 250 2 29 1 228 10 253 19 108 1 82 3 35 1 109 1 126 1 145 1 310 4 365 1 339 1 261 3 286 3 206 3 368 1 239 1 241 3 193 1 315 1 173 1 217 2 174 1 177 3 296 1 377 9 68 2 198 1 301 1 48 1 49 6 
201 3 250 2 29 1 228 7 253 17 108 1 82 2 35 1 109 1 126 1 145 1 310 5 365 1 339 1 261 3 286 3 206 3 368 1 239 1 241 3 193 1 315 2 173 1 217 2 174 1 177 3 296 1 377 10 68 1 301 1 198 1 48 1 49 6 
201 1 228 4 29 1 253 8 82 1 35 1 145 1 310 2 261 1 339 1 286 1 206 1 368 1 239 1 241 1 193 1 173 1 177 2 296 1 377 4 198 1 48 1 49 2 
201 1 250 2 228 6 253 12 108 1 82 2 35 1 126 1 145 1 310 2 365 1 261 2 286 1 206 1 368 1 241 1 315 1 217 2 174 1 177 1 377 6 68 2 198 1 48 1 49 2 
201 4 250 2 29 1 228 8 253 18 108 1 82 2 35 1 109 1 126 1 145 1 310 5 365 1 339 1 261 3 286 4 206 4 368 1 239 1 241 4 193 1 315 2 173 1 217 2 174 1 177 3 296 1 377 10 68 1 198 1 301 2 48 1 49 8 
201 4 275 1 250 3 228 7 253 16 108 1 82 2 35 1 126 1 145 1 310 6 365 1 261 3 286 4 206 4 368 1 241 4 315 3 217 3 174 1 177 3 377 9 68 2 198 1 301 2 48 1 49 8 
228 4 29 1 253 7 193 3 315 3 173 1 82 1 177 3 296 3 310 6 377 3 339 2 261 1 
201 4 275 1 250 2 29 1 228 8 253 18 108 1 82 2 35 1 126 1 145 1 310 4 365 1 339 1 261 3 286 4 206 4 368 1 239 1 241 4 193 1 315 1 173 1 217 2 174 1 177 3 296 1 377 10 68 1 198 1 301 2 48 1 49 8 
18 1 86 1 15 1 233 1 26 1 167 1 238 1 
150 1 44 1 128 1 172 1 233 1 183 1 
10 1 210 1 259 1 246 1 155 1 328 1 357 1 324 1 354 1 7 1 318 1 
155 1 15 1 328 1 158 1 357 1 318 1 360 1 259 1 246 1 86 1 338 1 26 2 324 1 223 1 8 1 7 1 238 2 209 1 
155 3 15 2 42 1 158 1 357 1 266 1 318 2 360 1 259 1 19 1 246 1 58 1 86 1 323 1 237 1 338 2 26 2 324 1 223 1 8 1 7 1 238 2 209 2 
212 1 155 3 15 2 317 1 42 1 357 1 266 1 318 2 360 1 259 2 19 1 246 2 58 1 86 1 323 1 237 1 338 2 26 2 324 1 223 1 8 1 7 2 238 2 209 2 
138 1 212 1 155 4 328 1 42 1 357 1 266 1 133 1 142 1 318 1 259 3 308 1 269 1 19 1 110 1 246 3 236 1 282 2 23 1 338 1 324 1 6 2 7 3 
138 1 212 1 155 4 191 1 328 1 42 1 357 1 266 1 133 1 142 1 318 1 259 3 308 1 19 1 110 1 246 3 282 2 23 1 338 1 324 1 6 2 7 3 
259 1 246 1 357 1 324 1 7 1 226 1 
28 1 345 1 39 1 155 3 78 1 204 1 328 2 357 2 54 1 17 1 307 1 318 2 259 7 246 7 21 1 338 1 324 3 7 6 343 1 72 1 226 1 
228 3 338 1 339 1 286 2 7 1 8 1 343 1 238 2 62 1 239 1 241 2 155 1 15 1 193 1 156 1 158 1 66 1 295 1 296 1 246 1 245 1 26 2 201 2 29 1 251 2 253 6 80 1 357 1 82 1 360 1 259 1 310 2 86 2 261 1 206 2 209 1 41 1 173 1 177 2 318 1 377 3 322 2 223 1 324 1 49 4 137 1 50 1 
138 1 328 1 184 2 142 1 259 1 110 2 308 1 282 3 205 1 188 2 6 3 7 1 61 1 90 1 291 1 12 1 155 2 191 1 92 1 117 1 133 1 376 2 246 1 97 1 45 1 23 1 379 2 179 1 
155 2 204 1 357 1 142 1 318 1 259 2 246 2 298 1 338 1 324 2 7 2 343 1 226 1 
10 1 212 1 155 1 157 1 328 1 357 1 318 1 259 4 246 4 324 1 7 4 354 1 343 1 
229 1 155 1 357 1 307 1 318 1 259 2 19 1 246 2 249 1 338 1 59 1 324 2 7 2 72 1 
259 1 152 1 185 1 246 1 178 1 328 1 255 1 357 1 324 1 7 1 
155 1 357 1 54 1 318 1 134 1 259 2 246 2 21 1 324 1 7 2 343 1 
10 1 155 3 39 1 78 1 157 1 328 1 357 2 318 2 259 5 19 1 246 5 21 1 324 2 354 1 7 4 343 1 
10 1 229 1 155 2 328 1 357 2 34 1 307 1 318 2 259 2 246 2 21 1 338 1 59 1 324 3 7 2 72 1 343 1 
155 1 15 1 328 1 317 1 357 1 318 1 360 1 259 1 246 1 86 1 338 1 26 2 324 1 223 1 8 1 7 1 238 2 209 1 
28 1 155 1 204 1 357 1 307 1 318 1 259 1 19 1 246 1 338 1 324 2 7 1 72 1 
319 1 37 1 86 1 53 1 281 1 
181 1 138 1 37 2 53 1 95 1 281 2 308 1 309 1 319 2 334 1 58 1 271 1 86 1 323 1 282 2 23 1 237 1 179 1 6 2 
290 1 146 1 319 1 37 1 364 1 53 1 15 1 26 1 238 1 
271 1 53 1 95 1 
210 1 203 1 340 1 47 1 
135 1 203 1 91 1 340 1 358 1 47 1 121 1 
83 1 332 1 91 1 
264 1 2 1 278 1 203 1 104 2 91 3 254 1 358 1 135 1 340 1 47 1 121 3 
227 1 135 1 203 1 164 1 91 2 340 1 358 1 47 1 121 2 
135 1 152 1 264 1 203 1 272 1 140 1 178 1 91 1 358 1 225 1 121 1 
135 1 264 1 203 1 91 1 340 1 358 1 121 1 
135 1 264 1 91 1 340 2 358 1 47 1 121 1 
264 1 30 1 203 1 91 2 358 2 257 1 135 2 160 1 340 1 121 2 
264 1 36 1 203 2 14 1 164 2 230 1 140 1 91 3 358 1 135 1 340 1 47 1 121 3 
200 1 152 2 264 1 203 1 164 1 91 2 255 1 358 1 135 1 363 1 178 1 340 1 47 1 121 2 225 1 
227 1 264 1 203 2 164 2 230 1 140 1 91 4 358 2 135 2 144 1 340 1 47 1 121 4 
135 1 264 1 203 1 91 1 340 1 358 1 47 1 121 1 
278 1 104 1 203 3 164 2 230 1 140 1 91 4 254 1 358 1 135 1 69 1 340 2 47 2 121 4 
264 1 203 1 164 1 252 1 91 2 358 1 135 1 361 1 340 1 89 1 47 1 121 2 
264 1 278 2 203 1 104 2 91 3 254 1 358 1 218 1 135 1 340 1 47 1 121 3 
355 1 203 2 314 1 273 2 
135 1 297 1 264 1 91 1 358 1 121 1 
135 1 264 1 36 1 203 1 164 1 91 2 340 1 358 1 47 1 121 2 
176 1 
135 1 264 1 203 1 91 1 340 1 358 1 47 1 121 1 
135 1 264 1 36 1 203 1 104 1 164 1 91 3 340 1 358 1 47 1 121 3 
69 1 203 1 230 1 140 1 
203 1 340 1 

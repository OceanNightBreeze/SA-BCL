#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V | STATEMENT | 9373 | stmt -> ;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | OPERATOR | 939 | += -> %=
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
242 2 243 1 97 4 296 1 247 2 28 1 30 1 205 1 55 2 250 1 153 2 274 1 252 1 328 1 234 2 235 3 62 6 214 1 42 1 374 2 164 5 64 1 286 9 378 1 380 1 67 1 139 2 140 9 
242 2 243 1 97 4 296 1 247 2 28 1 30 1 205 1 55 2 250 1 153 2 274 1 252 1 328 1 234 2 235 3 62 6 214 1 374 2 42 1 164 5 64 1 286 9 378 1 380 1 67 1 139 2 140 9 
242 2 243 1 97 5 296 1 247 2 28 1 30 1 205 1 55 2 250 1 153 2 274 1 252 1 328 1 234 2 235 4 62 7 214 1 374 2 42 1 164 6 64 1 286 10 378 1 380 1 67 1 139 2 140 10 
242 2 243 1 97 3 296 1 247 1 28 1 30 1 205 1 55 2 250 1 153 2 274 1 252 1 328 1 234 2 235 2 62 4 374 2 42 1 164 4 64 1 286 7 378 1 380 1 67 1 139 2 140 7 
242 1 243 1 234 1 97 2 235 1 247 2 62 3 214 1 374 1 30 1 164 3 64 1 55 1 286 4 67 1 139 1 274 1 140 4 
242 1 243 1 328 1 234 1 164 1 30 1 64 1 55 1 110 1 153 1 378 1 286 2 168 1 92 1 139 1 140 2 
243 1 97 1 235 1 62 1 30 1 205 1 164 2 64 1 55 2 153 1 286 3 139 2 140 3 
242 1 243 1 97 4 296 1 247 2 28 1 150 1 30 1 205 1 55 2 153 1 274 1 130 1 234 1 235 3 62 7 374 1 214 1 164 5 64 1 286 9 67 1 139 2 140 9 
242 1 243 1 97 4 296 1 247 2 28 1 150 1 30 1 205 1 55 2 153 1 274 1 130 1 234 1 235 3 62 7 374 1 214 1 164 5 64 1 286 9 67 1 139 2 140 9 
46 1 40 1 256 1 
54 1 46 1 221 2 
179 1 3 1 233 2 352 2 229 2 103 2 332 2 14 2 
71 1 222 2 171 1 23 1 352 3 315 2 225 1 121 1 148 1 179 1 3 1 317 1 318 2 32 1 229 2 103 2 322 1 78 1 79 1 124 1 127 1 128 1 10 2 233 2 131 1 368 1 14 2 281 1 350 1 194 1 108 1 195 1 16 1 329 2 332 3 69 1 199 1 
3 1 233 1 352 1 229 1 103 1 287 1 332 1 14 1 301 1 358 1 
352 1 326 1 74 1 86 1 301 1 256 1 349 1 228 1 112 1 217 1 103 1 46 1 332 1 115 1 
233 1 352 1 326 2 74 1 14 1 86 1 301 1 256 1 228 1 112 2 229 1 103 1 46 1 332 1 115 1 
181 1 326 1 112 1 119 1 273 1 
170 1 181 1 326 2 112 2 46 1 266 1 273 1 256 1 
181 1 326 1 112 1 
233 1 352 1 326 1 14 1 301 1 358 1 3 1 112 1 229 1 320 1 103 1 287 1 332 1 273 1 
46 1 
181 1 366 1 326 2 112 2 46 1 266 1 273 1 256 1 
94 2 202 1 96 1 326 5 60 2 266 1 120 1 267 2 192 1 256 1 360 1 151 1 181 2 112 5 196 1 46 1 309 1 48 1 273 2 
10 1 352 2 315 1 225 1 299 1 121 1 14 1 148 1 194 1 350 1 317 1 16 1 31 1 318 1 376 1 229 1 103 1 322 1 332 2 199 1 
179 1 40 1 
233 1 352 2 14 1 179 2 229 1 103 2 183 1 332 2 22 1 
89 1 299 1 146 1 
10 1 352 1 315 1 225 1 98 1 121 1 350 1 194 1 148 1 179 1 317 1 16 1 318 1 322 1 332 1 199 1 
179 1 233 1 31 1 352 3 229 3 103 3 332 3 14 3 
352 1 229 1 103 1 332 1 14 1 301 1 358 1 
233 1 352 1 229 1 103 1 183 1 332 1 14 1 301 1 22 1 
71 1 222 2 171 1 23 1 352 4 315 1 225 1 74 1 121 1 301 1 148 1 179 1 3 1 317 1 228 1 31 1 318 1 229 3 103 3 322 1 78 1 124 1 127 1 128 1 10 1 233 2 326 1 368 1 14 3 86 1 281 1 194 1 350 1 109 1 16 1 329 1 111 1 112 1 376 1 332 4 69 1 199 1 115 1 22 1 
179 1 31 1 352 2 229 1 103 2 332 2 14 1 349 1 279 1 
233 1 352 3 326 1 223 1 74 1 14 3 86 1 301 1 109 1 31 2 228 1 112 1 376 1 229 3 103 3 46 1 332 3 115 1 22 1 
233 1 352 2 14 2 299 1 89 1 31 1 229 2 103 2 332 2 22 1 
10 1 352 1 315 1 225 1 121 1 350 1 194 1 148 1 179 1 317 1 16 1 318 1 322 1 332 1 199 1 
10 1 352 1 315 1 142 1 225 1 25 1 121 1 194 1 148 1 179 1 317 1 16 1 318 1 332 1 199 1 
71 1 95 1 263 1 222 2 23 1 146 2 299 2 147 1 77 1 321 1 78 1 124 1 365 1 131 2 368 2 281 1 15 1 89 2 329 4 237 1 285 1 20 1 69 1 381 1 
352 1 355 1 229 1 103 1 332 1 74 1 14 1 301 1 
233 1 352 5 369 1 14 4 349 1 279 1 179 1 31 2 229 4 376 1 103 5 332 5 198 1 22 1 
352 2 355 1 229 2 103 2 332 2 14 2 301 1 358 1 
70 1 113 1 
70 1 113 1 
288 1 7 1 
288 1 7 1 
288 1 7 1 
117 1 70 1 113 1 
117 1 70 1 113 1 
117 1 70 1 113 1 
12 1 70 1 113 1 
276 1 133 1 288 1 70 2 113 2 7 1 
253 1 70 1 113 1 
253 1 70 1 113 1 
253 1 70 1 113 1 
141 1 334 2 326 2 327 1 133 1 189 2 145 2 27 2 149 1 88 1 340 3 112 2 33 1 46 1 219 1 113 2 70 2 58 2 261 1 
314 1 352 2 172 1 145 1 177 1 268 1 27 1 179 1 4 1 340 1 229 2 103 2 58 1 35 1 326 1 12 1 327 1 189 1 14 2 112 1 332 2 197 1 70 1 113 1 
374 1 242 1 234 1 
242 1 110 1 234 1 
59 1 374 2 110 1 234 3 34 1 175 1 
59 1 374 1 110 1 234 2 175 1 138 1 
374 1 59 1 110 1 234 2 175 2 
94 1 263 1 314 1 202 1 96 3 266 1 267 1 297 1 268 1 147 1 76 2 338 2 54 1 181 1 101 1 321 1 364 1 35 1 365 1 273 4 60 1 326 5 256 1 166 2 135 1 259 1 112 5 196 2 46 2 379 1 221 3 260 1 
94 2 263 3 314 4 202 1 96 8 119 5 266 1 267 2 297 2 99 1 147 3 76 6 338 6 54 3 181 6 342 1 101 2 321 3 365 3 273 7 326 9 60 2 306 5 307 1 190 1 256 1 331 1 112 9 196 6 239 1 46 5 379 3 309 1 221 9 260 1 
94 1 263 1 314 1 96 3 267 1 297 1 147 1 76 2 338 2 54 2 101 1 321 1 364 1 273 2 365 1 60 1 326 3 256 1 166 1 135 1 112 3 196 2 46 3 379 1 309 1 221 4 
94 1 263 2 314 2 96 5 267 1 297 1 99 1 147 2 76 4 338 4 54 3 101 1 321 2 364 1 273 3 365 2 60 1 326 4 307 1 190 1 256 1 166 2 135 1 112 4 196 4 46 4 379 2 221 7 309 1 
1 1 40 1 199 1 
57 1 199 1 
182 1 
225 1 199 1 
225 1 336 1 1 2 337 1 199 3 148 1 
225 1 199 1 148 1 
152 1 199 1 
95 2 201 1 263 1 72 2 131 4 73 1 368 3 2 1 147 1 44 1 165 1 329 7 303 1 304 1 20 3 310 1 123 1 
95 2 201 1 263 1 72 2 131 4 73 1 368 3 2 1 147 1 44 1 165 1 329 7 303 1 304 1 20 3 310 1 123 1 
95 2 201 1 263 1 72 2 131 4 73 1 368 3 2 1 87 1 147 1 44 1 165 1 329 7 303 1 304 1 20 3 310 1 123 1 
201 2 95 5 71 1 263 4 222 2 72 3 73 2 2 1 302 1 147 4 178 1 316 1 303 1 304 1 321 3 323 1 123 2 124 1 210 1 365 3 131 16 348 3 160 4 368 15 281 1 193 1 375 1 44 2 329 31 165 5 379 3 20 10 310 1 69 1 
71 2 201 1 95 3 263 1 222 4 72 2 73 1 2 1 147 1 207 1 303 1 323 1 123 1 124 2 131 5 368 4 373 1 281 2 44 1 329 9 165 1 20 4 69 2 310 1 
242 1 243 1 315 1 173 1 295 1 75 1 317 1 30 1 318 1 55 1 153 1 272 1 34 1 154 1 251 1 10 1 61 1 234 2 212 1 62 1 161 1 194 1 374 1 164 1 64 1 110 1 167 1 286 2 139 1 140 2 
241 1 242 1 243 1 315 1 295 1 75 1 317 1 30 1 318 1 55 1 153 1 34 1 272 1 154 1 251 1 10 1 61 1 234 2 212 1 39 1 62 2 194 1 374 1 164 1 110 1 167 1 286 3 169 1 139 1 140 3 
242 1 243 1 315 1 295 1 75 1 317 1 30 1 318 1 153 1 272 1 34 1 154 1 10 1 234 2 212 1 62 2 39 1 194 1 374 1 164 1 110 1 167 1 286 2 169 1 140 2 
10 1 241 1 107 1 315 1 225 1 85 1 295 2 75 2 194 1 317 1 16 1 55 1 318 1 167 2 153 2 286 1 289 1 68 1 199 1 114 1 139 1 211 1 140 1 
10 1 242 1 315 1 61 1 173 1 234 2 212 1 295 1 75 1 194 1 374 1 317 1 64 1 55 1 318 1 110 1 167 1 153 1 286 1 34 1 272 1 154 1 169 1 251 1 139 1 140 1 
345 1 
94 1 292 2 293 1 202 1 96 2 297 1 301 1 339 1 54 2 204 1 56 1 103 1 346 1 211 1 10 2 11 1 60 1 255 2 256 1 349 1 16 2 65 4 112 5 217 1 218 2 221 2 114 1 115 1 352 1 353 2 354 2 315 2 118 1 225 1 266 3 267 1 74 1 317 1 181 6 318 2 228 1 82 1 83 1 326 5 132 2 38 1 86 1 280 1 194 1 196 2 46 2 332 1 199 1 291 2 93 1 
293 1 292 1 352 1 266 1 74 1 301 1 204 1 228 1 181 2 103 1 82 1 11 1 366 1 326 3 86 1 349 1 65 2 112 3 217 1 332 1 115 1 93 1 
293 1 352 1 353 1 266 1 74 1 301 1 204 1 181 1 228 1 103 1 82 1 11 1 366 1 326 3 86 1 349 1 256 1 65 3 112 3 217 1 46 1 332 1 115 1 93 1 
293 1 292 1 352 1 353 1 266 1 74 1 301 1 204 1 228 1 181 2 103 1 82 1 11 1 366 1 326 3 86 1 349 1 256 1 65 3 112 3 217 1 46 1 332 1 115 1 291 1 93 1 
94 1 292 4 293 1 202 1 96 1 144 1 301 1 339 1 54 2 204 1 103 1 11 1 60 1 255 2 349 1 256 5 65 6 216 1 112 5 217 1 218 2 311 1 115 1 116 1 352 1 353 4 354 2 266 3 267 1 74 1 228 1 181 7 82 1 366 1 326 5 132 2 37 1 38 1 86 1 196 1 46 5 332 1 291 4 93 1 
94 1 293 1 292 2 202 1 96 1 301 1 339 1 54 2 204 1 103 1 346 1 11 1 60 1 255 2 349 1 256 1 65 4 112 4 217 1 218 2 221 2 115 1 352 1 354 2 353 2 266 2 267 1 74 1 228 1 181 4 82 1 326 4 132 2 38 1 86 1 196 1 46 2 332 1 291 2 93 1 
94 1 292 2 293 1 116 1 352 1 202 1 353 2 354 2 96 1 266 2 267 1 74 1 301 1 339 1 54 2 204 1 181 4 228 1 103 1 82 1 11 1 326 4 60 1 132 2 38 1 255 2 86 1 256 1 349 1 216 1 65 4 112 4 196 1 217 1 218 2 46 1 332 1 311 1 291 2 115 1 93 1 
94 1 292 2 293 1 116 1 352 1 202 1 353 2 354 2 96 1 266 2 267 1 74 1 301 1 339 1 54 2 204 1 181 4 228 1 103 1 82 1 11 1 326 4 60 1 132 2 38 1 255 2 86 1 256 1 349 1 216 1 65 4 112 4 196 1 217 1 218 2 46 1 332 1 311 1 291 2 115 1 93 1 
94 1 292 2 293 1 352 1 202 1 353 2 354 2 96 1 266 2 267 1 74 1 301 1 204 1 181 4 228 1 103 1 80 1 185 2 8 1 82 1 11 1 326 4 60 1 134 2 38 1 255 2 86 1 256 1 349 1 216 1 65 4 112 4 196 1 217 1 46 1 332 1 137 1 221 2 291 2 115 1 93 1 
94 1 116 1 293 1 292 3 202 1 352 1 354 2 96 1 353 3 266 2 267 1 74 1 301 1 339 1 54 2 204 1 228 1 181 5 103 1 82 1 11 1 60 1 326 4 132 2 37 1 38 1 255 2 86 1 256 1 349 1 216 1 65 5 112 4 196 1 217 1 218 2 46 1 332 1 311 1 115 1 291 3 93 1 
94 1 116 1 293 1 292 3 202 1 352 1 354 2 96 1 353 3 266 2 267 1 74 1 301 1 339 1 54 2 204 1 228 1 181 5 103 1 82 1 11 1 60 1 326 4 132 2 37 1 38 1 255 2 86 1 256 1 349 1 216 1 65 5 112 4 196 1 217 1 218 2 46 1 332 1 311 1 115 1 291 3 93 1 
94 1 293 1 292 2 202 1 96 1 301 1 204 1 103 1 346 1 11 1 60 1 255 2 349 1 256 1 65 4 112 4 217 1 221 2 115 1 352 1 354 2 353 2 266 2 267 1 74 1 228 1 181 4 80 1 185 2 82 1 326 4 38 1 134 2 86 1 196 1 46 1 332 1 291 2 93 1 
71 1 95 2 263 1 222 2 23 1 72 1 73 1 2 1 299 1 146 1 147 1 179 2 303 1 78 1 123 1 124 1 131 3 368 3 40 1 281 1 89 1 329 6 20 2 69 1 381 1 310 1 
95 1 71 2 49 1 263 2 222 4 23 2 146 11 299 11 302 1 147 1 179 1 316 1 321 1 209 1 78 1 124 2 127 1 365 2 324 1 131 8 348 3 160 3 368 6 281 2 108 1 89 4 165 1 257 1 329 14 17 1 20 2 379 2 69 2 
71 1 49 1 222 2 23 1 352 2 315 1 225 1 98 1 121 1 148 1 179 1 317 1 318 1 31 1 229 1 103 1 322 1 78 1 124 1 127 1 10 1 277 1 131 1 368 1 14 1 194 1 350 1 281 1 108 1 89 1 16 1 283 1 329 2 376 1 19 1 332 2 69 1 199 1 
95 4 49 1 2 1 146 7 299 7 147 3 148 2 248 2 303 1 103 1 10 3 14 1 350 2 108 1 16 1 215 1 165 4 20 8 310 1 69 3 169 1 351 1 71 3 263 3 222 6 352 3 23 3 315 3 225 2 72 1 73 1 26 1 121 2 179 2 317 2 318 3 31 1 227 2 229 1 322 2 321 2 78 3 123 1 124 3 127 1 365 2 186 2 128 2 131 10 368 10 281 3 194 2 89 7 329 20 284 2 376 1 332 3 379 2 199 2 
71 2 222 4 352 1 23 2 50 1 315 8 294 1 225 2 317 2 31 1 318 7 343 1 229 1 32 2 103 1 78 2 124 2 9 1 127 1 211 1 10 8 131 1 368 1 370 1 14 1 161 1 194 2 281 2 108 1 16 2 236 1 329 2 332 1 381 1 69 2 169 1 312 1 199 3 114 1 
95 1 71 1 49 1 263 1 222 2 23 1 352 1 299 1 146 1 147 1 229 1 103 1 321 1 78 1 124 1 365 1 233 1 131 1 368 2 14 1 281 1 282 1 89 1 329 3 20 1 332 1 379 1 69 1 22 1 
71 1 263 1 222 2 23 1 131 2 299 1 146 1 281 1 89 1 165 1 329 2 77 1 20 1 78 1 381 1 69 1 124 1 365 1 
95 1 71 1 222 2 23 1 368 2 299 1 146 1 281 1 147 1 89 1 329 2 237 1 321 1 20 1 78 1 381 1 69 1 124 1 
95 1 71 1 263 1 222 2 23 1 131 2 368 2 299 2 146 2 147 1 281 1 89 2 165 1 329 4 321 1 20 2 78 1 379 1 381 1 69 1 124 1 365 1 
71 1 263 1 222 2 23 1 294 1 131 2 299 1 146 1 281 1 89 1 165 1 329 2 77 1 20 1 78 1 69 1 124 1 365 1 
95 1 71 1 222 2 23 1 294 1 368 2 299 1 146 1 281 1 147 1 89 1 329 2 237 1 321 1 20 1 78 1 69 1 124 1 
95 1 71 1 263 1 222 2 23 1 294 1 131 2 368 2 299 2 146 2 147 1 281 1 89 2 165 1 329 4 321 1 20 2 78 1 379 1 69 1 124 1 365 1 
95 1 71 1 263 1 222 2 23 1 131 2 368 2 299 2 146 2 147 1 281 1 89 2 165 1 329 4 321 1 20 2 78 1 379 1 69 1 124 1 365 1 
71 1 222 2 352 1 23 1 315 1 225 1 121 1 148 1 179 1 317 1 318 1 322 1 78 1 124 1 127 1 128 1 10 1 131 1 368 1 194 1 350 1 281 1 108 1 16 1 329 2 332 1 69 1 199 1 
71 1 222 2 352 1 23 1 142 1 315 1 225 1 25 1 121 1 148 1 179 1 317 1 318 1 78 1 124 1 127 1 10 1 131 1 368 1 194 1 281 1 108 1 16 1 329 2 258 1 332 1 69 1 199 1 
95 1 71 1 49 1 263 1 222 2 23 1 131 2 368 2 299 2 146 2 147 1 281 1 89 2 165 1 329 4 321 1 20 2 78 1 379 1 69 1 124 1 365 1 
95 1 71 1 263 1 222 2 352 1 23 1 315 1 225 1 299 2 146 2 121 1 147 1 148 1 317 1 318 1 321 1 322 1 78 1 124 1 365 1 128 1 186 1 10 1 131 2 368 2 161 1 194 1 350 1 281 1 89 2 165 1 329 4 20 2 332 1 379 1 69 1 199 1 
71 1 49 1 263 1 222 2 23 1 352 1 300 1 146 1 299 1 147 1 229 1 103 1 321 1 78 1 124 1 365 1 233 1 131 2 368 1 14 1 281 1 89 1 165 1 329 3 20 1 332 1 379 1 69 1 22 1 
95 4 71 3 263 5 222 6 335 2 264 1 72 1 73 1 246 4 2 1 298 1 302 3 147 5 316 1 270 1 207 1 303 1 323 1 321 4 123 1 124 3 365 4 129 1 325 1 158 1 131 20 13 1 348 3 160 4 368 21 278 1 281 3 329 41 165 4 45 1 308 1 18 1 379 4 20 8 310 1 69 3 21 1 200 1 
95 4 71 4 263 5 222 8 335 2 264 1 72 1 73 1 246 4 2 1 298 1 302 3 147 4 316 1 270 1 207 1 303 1 323 2 321 3 123 1 124 4 365 4 129 1 325 1 158 1 131 20 13 1 348 3 160 4 368 18 278 1 281 4 329 38 165 3 45 1 308 1 18 1 379 4 20 7 310 1 69 4 21 1 200 1 
95 7 71 2 263 8 222 4 335 1 264 1 72 1 73 1 246 4 2 1 298 1 302 2 147 8 316 2 270 1 207 1 303 1 323 1 321 7 123 1 124 2 365 7 129 1 131 27 13 1 348 4 160 4 368 25 278 1 281 2 257 2 329 52 165 7 45 1 308 1 18 1 379 7 20 14 310 1 69 2 21 1 200 1 
95 3 71 2 263 3 222 4 335 1 143 1 246 2 302 1 147 3 316 1 207 1 321 3 124 2 365 3 158 1 131 9 13 1 348 1 160 2 368 10 281 2 329 19 165 3 45 1 308 2 379 3 20 6 69 2 21 1 200 1 
95 2 71 3 263 3 222 6 335 2 264 1 246 4 298 1 147 2 302 2 270 1 207 1 323 2 321 2 124 3 365 3 129 1 131 14 13 1 348 2 160 2 368 12 278 1 281 3 165 2 329 26 45 1 308 1 18 1 20 4 379 3 69 3 21 1 200 2 
149 1 133 1 189 1 58 1 70 1 113 1 145 1 231 1 27 1 261 1 
172 1 12 1 
106 1 0 1 372 1 189 1 58 1 70 1 113 1 145 1 27 1 
334 1 326 1 327 1 133 1 189 1 145 1 27 1 149 1 88 1 340 2 112 1 33 1 46 1 219 1 113 1 70 1 58 1 261 1 
334 1 326 1 327 1 133 1 189 1 145 1 27 1 149 1 88 1 340 2 112 1 33 1 46 1 219 1 113 1 70 1 58 1 261 1 
334 1 326 1 327 1 133 1 189 1 145 1 27 1 149 1 88 1 340 2 112 1 33 1 46 1 219 1 113 1 70 1 58 1 261 1 
117 1 276 1 254 1 
117 1 276 1 254 1 
253 1 359 1 
276 1 253 1 359 1 
4 1 197 1 
334 1 314 1 352 2 172 1 145 1 177 1 268 1 27 1 179 1 4 1 340 1 5 1 33 1 229 2 103 2 58 1 273 1 35 1 326 1 12 1 189 1 14 2 112 1 332 2 197 1 70 1 113 1 
117 1 254 1 
276 1 253 1 359 1 
71 1 49 1 222 2 23 1 352 2 315 2 225 1 176 1 317 1 318 2 32 2 103 2 305 1 78 1 124 1 127 1 10 2 157 1 131 1 368 1 194 1 281 1 108 1 236 1 329 2 136 1 220 1 332 2 69 1 199 1 312 1 
10 2 242 1 315 2 234 2 75 1 161 1 191 1 194 1 374 1 213 1 317 1 318 2 110 1 330 1 34 1 272 1 154 1 169 1 251 1 
10 1 242 1 315 1 234 2 226 1 75 1 191 1 194 1 374 1 317 1 318 1 110 1 34 1 272 1 154 1 169 1 251 1 
10 1 107 1 315 1 225 1 75 1 194 1 213 1 317 1 16 1 318 1 199 1 47 1 114 1 211 1 
10 1 242 1 315 1 234 2 75 1 191 1 194 1 374 1 213 1 317 1 318 1 110 1 330 1 34 1 272 1 154 1 169 1 251 1 
230 1 
151 1 96 1 196 1 46 1 40 1 48 1 256 1 
94 1 202 1 96 1 266 1 267 1 339 1 54 1 181 1 60 1 326 1 132 1 256 1 112 1 196 1 218 1 46 2 221 1 
94 4 202 4 96 9 336 1 244 2 297 2 1 2 148 3 147 2 338 6 151 1 54 6 56 1 152 2 57 3 6 1 105 1 10 3 60 4 161 1 256 2 16 1 163 2 112 5 221 12 313 2 115 2 263 2 315 3 24 2 225 3 265 2 266 3 267 4 357 1 76 6 317 3 269 1 318 3 181 5 319 1 321 2 365 2 326 5 367 2 194 4 284 2 196 8 377 2 46 8 379 2 240 2 199 10 48 1 
94 2 263 2 202 2 96 8 264 1 265 1 244 2 266 1 297 1 267 2 76 5 302 1 147 2 338 5 54 3 56 1 181 1 270 1 321 2 365 2 129 1 326 1 84 1 60 2 348 1 160 1 371 1 278 1 256 2 112 1 18 1 196 5 46 5 379 2 221 6 
94 1 116 1 263 2 352 1 202 1 96 2 265 1 244 2 73 1 267 1 301 1 358 1 147 1 3 1 229 1 320 1 103 1 123 1 233 1 60 1 326 1 14 1 63 1 112 1 196 2 287 1 332 1 310 1 
94 1 202 1 60 1 96 1 267 1 256 1 151 1 196 1 46 1 48 1 
263 2 96 5 265 1 244 2 76 5 147 2 338 5 54 5 284 1 196 5 46 5 321 2 379 2 221 10 365 2 
181 1 326 1 112 1 46 1 266 1 256 1 
262 1 94 2 202 1 315 4 96 2 225 1 266 2 267 2 297 2 357 1 317 1 318 4 181 4 56 2 6 2 211 1 10 4 83 1 60 2 326 3 159 1 194 1 280 1 16 2 112 3 196 2 309 1 199 1 114 1 
71 1 222 2 171 1 352 3 23 1 315 1 225 1 121 1 148 1 179 1 3 1 317 1 318 1 229 2 103 2 322 1 78 1 124 1 127 1 128 1 10 1 233 2 368 1 14 2 281 1 350 1 194 1 16 1 329 1 332 3 69 1 199 1 
94 1 202 1 60 1 96 1 72 1 267 1 297 1 76 2 256 2 338 2 54 2 56 1 196 2 46 4 221 4 
155 1 189 1 58 1 
155 1 189 1 58 1 
155 1 189 1 58 1 
149 1 66 1 197 1 189 1 58 1 
206 1 189 1 58 1 
206 1 189 1 58 1 
206 1 189 1 58 1 
189 1 58 1 
70 1 113 1 
71 1 95 2 263 1 222 2 72 1 73 1 2 1 147 1 302 1 207 1 303 1 123 1 124 1 129 1 131 4 348 1 160 1 368 4 281 1 329 8 20 2 69 1 310 1 
95 2 71 2 263 2 222 4 72 1 73 1 2 1 147 1 302 1 53 1 316 1 207 1 303 1 123 1 124 2 365 1 129 1 131 6 348 1 160 2 368 5 281 2 329 11 165 1 379 1 20 3 310 1 69 2 
71 3 95 3 263 3 222 6 264 1 72 1 73 1 2 1 302 1 147 3 53 1 207 1 270 1 303 1 321 2 323 1 123 1 124 3 365 2 129 1 131 9 348 1 160 1 368 10 278 1 281 3 165 1 329 19 18 1 379 2 20 4 310 1 69 3 
71 3 95 3 263 3 222 6 264 1 72 1 73 1 2 1 302 1 147 2 53 1 207 1 270 1 303 1 323 1 321 1 123 1 124 3 365 2 129 1 131 10 348 1 160 1 368 7 278 1 281 3 165 2 329 17 18 1 379 2 20 5 310 1 69 3 
71 1 95 2 263 1 222 2 72 1 73 1 2 1 147 1 302 1 207 1 303 1 123 1 124 1 129 1 131 4 348 1 160 1 368 4 281 1 329 8 20 2 69 1 310 1 
71 1 95 1 263 2 222 2 264 1 302 1 147 2 207 1 270 1 321 2 124 1 365 2 129 1 131 6 348 1 160 1 368 6 278 1 281 1 165 1 329 12 18 1 379 2 20 2 69 1 
71 4 95 3 263 3 222 8 264 1 72 1 73 1 2 1 302 1 147 2 53 1 270 1 207 1 303 1 321 1 323 2 123 1 124 4 365 2 129 1 131 10 348 1 160 1 368 8 278 1 281 4 165 2 329 18 18 1 379 2 20 5 310 1 69 4 
71 4 95 3 263 3 222 8 264 1 302 1 147 2 270 1 207 1 321 2 323 2 124 4 365 3 129 1 158 1 131 9 348 1 160 1 368 7 278 1 281 4 165 3 329 16 18 1 379 3 20 6 69 4 
95 3 263 1 131 3 73 3 368 4 2 1 147 1 329 7 165 3 303 2 20 6 310 1 123 3 
71 4 95 3 263 3 222 8 264 1 72 1 73 1 2 1 302 1 147 2 270 1 207 1 303 1 321 1 323 2 123 1 124 4 365 2 129 1 158 1 131 10 348 1 160 1 368 8 278 1 281 4 165 1 329 18 18 1 379 2 20 4 310 1 69 4 
95 2 71 2 263 1 222 4 72 1 131 4 73 1 368 4 2 1 147 1 281 2 329 8 165 1 303 1 323 1 20 3 310 1 69 2 123 1 124 2 
95 2 263 1 72 1 131 3 73 1 368 3 40 1 2 1 147 1 329 6 303 1 20 2 310 1 123 1 
95 1 71 1 263 1 222 2 131 2 368 2 147 1 281 1 53 1 329 4 165 1 321 1 20 2 379 1 69 1 124 1 365 1 
95 1 263 1 131 3 348 1 160 2 368 4 147 1 302 1 316 1 329 7 165 1 321 1 379 1 20 2 365 1 
95 5 71 2 263 3 222 4 72 1 73 2 2 1 147 3 316 1 303 1 321 2 323 2 209 1 123 2 124 2 365 2 347 1 131 11 348 2 160 2 368 12 281 2 165 4 329 23 257 1 20 9 379 2 310 1 69 2 
329 1 160 1 368 1 
329 1 131 1 348 1 
71 1 95 2 263 1 222 2 131 3 368 3 281 1 147 1 53 1 329 6 165 1 284 1 321 1 379 1 20 3 69 1 124 1 365 1 
71 1 95 1 263 2 222 2 264 1 302 1 147 2 207 1 270 1 321 2 124 1 365 2 129 1 131 6 348 1 160 1 368 6 278 1 281 1 165 1 329 12 18 1 379 2 20 2 69 1 
95 1 263 1 131 3 73 1 368 3 147 1 329 6 165 1 20 2 310 1 123 1 
95 1 71 1 347 1 222 2 131 1 73 1 368 2 2 1 281 1 165 1 329 3 303 1 323 1 20 2 69 1 123 1 124 1 
71 1 95 3 263 2 222 2 131 5 73 2 368 5 281 1 63 1 147 2 165 2 329 10 207 1 20 5 69 1 310 1 123 2 124 1 
71 1 263 1 222 2 131 2 281 1 329 2 165 1 207 1 20 1 69 1 124 1 365 1 
95 1 71 1 263 1 222 2 131 2 368 2 147 1 281 1 329 4 165 1 207 1 321 1 20 2 379 1 69 1 124 1 365 1 
71 3 95 1 347 1 222 6 158 1 131 1 73 1 368 2 281 3 329 3 165 1 207 1 323 1 20 2 69 3 123 1 124 3 
71 5 95 7 263 5 222 10 72 1 73 3 2 1 178 1 302 1 147 5 53 1 316 1 207 1 303 1 323 2 321 3 123 3 210 1 124 5 365 3 347 1 158 1 131 16 348 3 160 4 368 18 193 1 281 5 329 34 165 5 379 3 20 12 310 2 69 5 
179 1 100 1 352 1 103 1 332 1 349 1 279 1 
352 1 187 1 279 1 349 1 179 1 100 1 180 1 103 1 332 1 122 1 81 1 126 1 
10 1 317 1 16 1 318 1 315 1 225 1 40 1 199 1 114 1 194 1 211 1 
10 1 352 2 315 1 225 1 121 1 14 1 148 1 194 1 179 1 317 1 16 1 31 1 318 1 229 1 103 1 322 1 332 2 199 1 
10 1 352 2 315 1 225 2 74 1 86 1 121 1 14 1 301 1 148 2 194 1 179 1 317 1 31 1 318 1 152 1 229 2 103 2 322 1 332 2 6 1 240 1 199 3 
352 2 315 2 225 2 25 1 74 1 121 1 301 1 148 2 179 1 317 1 318 2 31 1 152 1 229 2 103 2 344 1 6 1 10 2 14 1 86 1 194 1 332 2 240 1 199 3 
315 3 225 1 1 1 148 1 361 1 317 1 341 1 181 1 318 3 152 1 57 1 344 1 6 1 10 3 326 2 194 1 256 1 16 1 112 2 46 1 240 1 199 4 115 1 
10 3 326 2 315 3 225 1 1 1 256 1 148 1 194 1 317 1 16 1 163 1 318 3 181 1 152 1 112 2 46 1 57 1 344 1 6 1 240 1 199 4 115 1 
10 1 317 1 318 1 315 1 370 1 194 1 
10 7 156 1 50 1 315 7 336 1 225 2 224 1 370 1 161 1 148 1 194 3 317 2 16 2 318 6 343 1 238 1 32 1 169 1 312 1 199 3 9 1 
95 2 71 2 263 1 49 1 222 4 23 2 352 2 315 1 225 1 72 1 73 1 2 1 299 1 146 1 121 1 147 1 148 1 179 2 317 1 31 1 318 1 227 1 303 1 229 1 103 1 322 1 78 2 123 1 124 2 186 1 128 1 10 1 131 3 368 3 14 1 161 1 194 1 281 2 350 1 89 1 329 6 20 2 220 1 332 2 310 1 69 2 199 1 
94 2 202 2 96 1 315 1 24 1 266 1 267 2 357 1 1 1 151 1 318 1 181 2 57 1 273 1 10 1 60 2 326 3 256 1 16 1 163 1 112 3 196 1 377 1 46 1 313 1 199 2 48 1 115 1 
10 2 315 2 336 1 225 1 370 1 1 1 161 1 148 1 194 2 317 1 269 1 318 2 199 2 
10 4 315 4 225 1 161 1 194 1 317 1 16 1 318 4 90 1 344 1 199 1 114 1 211 1 
10 2 156 1 315 2 225 1 224 1 26 1 148 1 194 2 317 1 318 2 249 1 6 1 184 1 199 1 
10 1 317 1 16 1 242 1 318 1 110 1 315 1 234 1 272 1 194 1 
10 2 317 1 318 2 315 2 225 1 136 1 199 1 312 1 169 1 161 1 194 1 
10 5 315 5 50 1 225 2 161 1 194 2 317 2 16 1 318 4 90 1 6 1 312 1 199 3 114 1 9 1 211 1 
10 5 315 5 225 2 161 1 194 2 317 2 16 1 318 4 90 1 271 1 6 1 312 1 199 3 114 1 9 1 211 1 
10 1 352 2 315 1 225 1 25 1 121 1 14 1 148 1 194 1 179 1 317 1 16 1 31 1 318 1 229 1 103 1 332 2 199 1 
10 1 156 1 315 1 336 1 225 1 224 1 148 1 194 2 317 1 318 1 238 1 6 1 199 1 
157 1 352 1 176 1 29 1 203 1 305 1 103 1 332 1 290 1 
203 1 36 1 275 1 
179 1 162 1 29 1 203 1 290 1 
36 1 326 2 245 1 74 1 86 1 301 1 256 1 179 1 203 1 29 2 162 2 109 1 228 1 112 2 46 1 290 2 115 1 273 1 275 1 
164 1 30 1 243 1 40 1 
164 1 30 1 55 1 243 1 286 1 139 1 140 1 
153 1 286 1 295 1 
243 1 43 1 164 1 30 1 64 1 55 1 286 3 378 2 104 1 208 1 139 1 140 3 
164 1 30 1 55 1 243 1 286 2 247 1 62 1 139 1 140 2 
242 1 97 1 234 1 374 1 164 1 64 1 55 1 286 1 139 1 274 1 140 1 
164 1 55 1 64 1 243 1 286 1 139 1 140 1 
30 1 55 1 64 1 243 2 286 1 139 1 140 1 
243 1 41 1 164 1 64 1 55 2 363 1 286 2 139 2 232 1 140 2 
243 1 97 1 296 1 235 1 62 2 28 1 30 1 164 2 64 1 55 1 286 3 139 1 140 3 
242 1 243 1 234 2 62 1 374 1 164 1 30 1 64 1 55 1 110 1 286 2 34 1 333 1 139 1 140 2 
243 1 97 1 247 1 235 1 62 2 214 1 30 1 164 2 64 1 55 2 286 4 139 2 140 4 
164 1 30 1 55 1 64 1 243 1 286 1 139 1 140 1 
243 2 97 1 235 1 62 2 30 2 164 3 55 1 378 1 286 4 208 1 104 1 125 1 139 1 140 4 
130 1 243 1 174 1 188 1 62 1 164 1 30 1 64 1 55 1 286 2 139 1 140 2 
243 1 356 1 164 1 30 1 64 1 55 1 286 3 378 2 104 1 208 2 139 1 140 3 
362 2 164 2 91 1 51 1 
55 1 64 1 286 1 52 1 139 1 140 1 
28 1 164 1 30 1 55 1 64 1 243 1 286 2 62 1 139 1 140 2 
102 1 
164 1 30 1 55 1 64 1 243 1 286 1 139 1 140 1 
28 1 164 1 30 1 55 1 64 1 243 1 378 1 286 3 62 1 139 1 140 3 
164 1 97 1 286 1 235 1 62 1 140 1 
164 1 243 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testEquals()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z | CONDITION | 941 | if (x) -> if (!x)
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object; | ASSIGN | 1414 | = null
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.MinuteOfHour:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
364 1 250 1 249 2 141 2 253 1 27 1 28 9 119 2 100 4 205 1 344 1 285 2 345 1 306 2 8 9 180 3 209 1 83 1 9 2 261 1 183 1 211 1 349 1 63 1 352 5 357 1 217 2 315 6 
364 1 250 1 249 2 141 2 253 1 27 1 28 9 119 2 100 4 205 1 344 1 285 2 345 1 8 9 306 2 180 3 209 1 83 1 9 2 261 1 183 1 211 1 349 1 63 1 352 5 357 1 217 2 315 6 
364 1 250 1 249 2 141 2 253 1 27 1 28 10 119 2 100 5 205 1 344 1 285 2 345 1 8 10 306 2 180 4 209 1 83 1 9 2 261 1 183 1 211 1 349 1 63 1 352 6 357 1 217 2 315 7 
364 1 250 1 249 2 141 2 253 1 28 7 119 2 100 3 205 1 344 1 285 2 345 1 8 7 306 1 180 2 209 1 83 1 9 2 261 1 183 1 211 1 349 1 63 1 352 4 357 1 217 2 315 4 
9 1 249 1 250 1 27 1 352 3 28 4 119 1 357 1 100 2 205 1 217 1 285 1 345 1 8 4 306 2 315 3 180 1 83 1 
364 1 249 1 63 1 141 1 352 1 28 2 119 1 255 1 380 1 357 1 108 1 205 1 217 1 285 1 8 2 83 1 
141 1 352 2 28 3 119 2 357 1 100 1 205 1 217 2 8 3 315 1 180 1 209 1 83 1 
250 1 249 1 141 1 299 1 253 1 27 1 142 1 28 9 119 2 100 4 205 1 344 1 345 1 285 1 8 9 306 2 180 3 209 1 83 1 9 1 352 5 357 1 217 2 315 7 
250 1 249 1 141 1 299 1 253 1 27 1 142 1 28 9 119 2 100 4 205 1 344 1 345 1 285 1 8 9 306 2 180 3 209 1 83 1 9 1 352 5 357 1 217 2 315 7 
137 1 47 1 24 1 
47 1 321 1 181 2 
168 1 99 2 41 2 109 2 359 2 98 1 264 2 347 2 
168 1 203 1 98 1 170 1 254 1 118 1 143 1 144 2 173 1 204 1 99 2 5 2 147 1 102 1 304 1 176 1 177 2 347 3 150 1 322 1 233 1 129 1 15 1 264 2 267 1 243 1 41 2 109 3 359 2 313 1 360 1 334 2 111 1 132 2 44 1 113 1 114 1 
81 1 99 1 46 1 41 1 109 1 359 1 98 1 264 1 327 1 347 1 
298 1 0 1 137 1 47 1 234 1 105 1 337 1 378 1 327 1 99 1 340 1 109 1 7 1 347 1 
0 2 137 1 47 1 105 1 337 1 264 1 378 1 327 1 99 1 340 2 41 1 359 1 109 1 7 1 347 1 
0 1 191 1 340 1 116 1 187 1 
0 2 137 1 191 1 224 1 340 2 47 1 110 1 116 1 
0 1 191 1 340 1 
0 1 46 1 98 1 116 1 264 1 327 1 81 1 340 1 99 1 41 1 359 1 109 1 229 1 347 1 
47 1 
0 2 137 1 191 1 340 2 47 1 110 1 3 1 116 1 
247 1 0 5 59 2 137 1 47 1 336 1 262 1 116 2 239 2 75 2 377 1 80 1 53 1 340 5 191 2 303 1 110 1 178 1 273 1 
168 1 24 1 
79 1 168 2 99 2 41 1 374 1 359 1 109 2 264 1 347 2 
140 1 66 1 215 1 
168 1 322 1 203 1 15 1 143 1 144 1 204 1 189 1 5 1 243 1 109 1 176 1 177 1 111 1 113 1 347 1 
322 1 140 1 203 1 15 1 264 1 143 1 241 1 144 1 204 1 243 1 99 1 5 1 55 1 359 1 109 2 176 1 177 1 111 1 113 1 347 2 
298 1 168 1 374 1 351 1 264 4 146 1 241 1 99 5 41 1 55 2 359 4 109 5 382 1 347 5 
81 1 99 2 109 2 359 2 264 2 327 1 347 2 355 1 
168 1 99 3 41 1 55 1 109 3 359 3 264 3 347 3 
81 1 99 1 109 1 359 1 264 1 327 1 347 1 
79 1 99 1 41 1 374 1 109 1 359 1 264 1 327 1 347 1 
0 1 168 1 251 1 203 1 337 1 98 1 170 1 254 1 143 1 144 1 173 1 204 1 99 3 340 1 5 1 147 1 55 1 176 1 177 1 7 1 347 4 150 1 182 1 322 1 233 1 374 1 105 1 129 1 15 1 264 3 378 1 327 1 241 1 243 1 41 2 313 1 109 4 359 3 360 1 334 1 111 1 132 2 113 1 114 1 
298 1 168 1 99 2 55 1 109 2 359 1 264 1 347 2 146 1 
0 1 182 1 308 1 374 1 47 1 105 1 337 1 264 3 327 1 378 1 241 1 340 1 99 3 41 1 55 2 359 3 109 3 7 1 347 3 
374 1 140 1 264 2 215 1 99 2 41 1 55 1 359 2 109 2 347 2 
168 1 322 1 203 1 15 1 143 1 144 1 204 1 5 1 243 1 109 1 176 1 177 1 111 1 113 1 347 1 
168 1 322 1 203 1 15 1 143 1 144 1 5 1 243 1 109 1 176 1 177 1 228 1 219 1 113 1 347 1 
94 1 252 1 140 2 170 1 254 1 49 1 173 1 339 1 147 2 283 1 304 2 207 1 290 1 375 1 65 1 129 1 39 1 215 2 360 1 334 4 66 2 132 2 45 1 114 1 
99 1 109 1 359 1 105 1 264 1 327 1 347 1 355 1 
152 1 240 1 
152 1 240 1 
310 1 89 1 
310 1 89 1 
310 1 89 1 
152 1 240 1 335 1 
152 1 240 1 335 1 
152 1 240 1 260 1 
152 2 289 1 206 1 310 1 240 2 89 1 
152 1 240 1 335 1 
152 1 240 1 246 1 
152 1 240 1 246 1 
152 1 240 1 246 1 
0 1 168 1 96 1 48 1 4 1 279 1 340 1 99 2 174 1 82 1 372 1 58 1 260 1 347 2 152 1 210 1 240 1 264 2 329 1 19 1 359 2 109 2 131 1 112 1 
152 2 210 2 0 2 47 1 169 1 353 1 240 2 302 1 78 1 279 3 340 2 174 1 206 1 372 2 258 1 194 1 58 2 112 2 164 2 
9 1 249 1 285 1 
108 1 249 1 285 1 
121 1 9 2 108 1 30 1 90 1 285 3 
121 1 9 1 108 1 30 1 285 2 171 1 
9 1 121 2 108 1 30 1 285 2 
0 5 137 1 47 2 252 1 48 1 116 4 75 1 49 1 80 2 340 5 282 1 321 1 175 1 283 1 343 1 6 2 82 1 178 3 373 2 181 3 59 1 231 1 290 1 106 1 262 1 239 1 38 1 191 1 19 1 381 1 110 1 23 2 
0 9 137 1 71 1 47 5 252 3 116 7 75 2 49 3 50 1 80 6 340 9 321 3 283 3 343 1 82 4 178 8 373 6 181 9 59 2 231 2 290 3 309 1 291 1 186 1 106 3 262 1 239 2 377 1 38 2 187 5 130 1 191 6 110 1 23 6 196 5 
0 3 137 1 47 3 252 1 116 2 75 1 49 1 80 2 282 1 340 3 321 2 283 1 82 1 6 1 178 3 373 2 181 4 59 1 231 1 290 1 106 1 239 1 377 1 38 1 381 1 23 2 
0 4 137 1 47 4 71 1 252 2 116 3 75 1 49 2 80 4 340 4 282 1 321 3 283 2 82 2 6 2 178 5 373 4 181 7 59 1 231 1 290 2 309 1 291 1 106 2 239 1 377 1 38 1 381 1 23 4 
203 1 115 1 24 1 
190 1 203 1 
127 1 
176 1 203 1 143 1 
330 1 203 1 
203 1 143 1 
176 1 203 3 115 2 326 1 143 1 33 1 
348 2 94 3 84 1 252 1 39 2 49 1 242 1 216 1 52 1 266 1 31 1 147 3 304 4 371 1 334 7 286 1 230 1 
348 2 94 3 84 1 252 1 39 2 49 1 242 1 216 1 52 1 266 1 31 1 147 3 304 4 371 1 334 7 286 1 230 1 
348 2 94 3 84 1 252 1 39 2 311 1 49 1 242 1 216 1 52 1 266 1 31 1 147 3 304 4 371 1 334 7 286 1 230 1 
94 10 1 1 300 4 252 4 202 1 170 1 49 4 173 1 52 5 257 1 31 2 147 15 283 3 304 16 371 1 286 2 230 1 348 3 84 2 290 3 106 3 238 1 129 1 325 1 39 5 242 2 216 1 188 1 266 1 360 1 334 31 270 3 132 2 165 1 
348 2 84 1 94 4 36 1 252 1 170 2 129 2 39 3 49 1 242 1 173 2 216 1 188 1 266 1 52 1 31 1 147 4 332 1 304 5 360 2 371 1 334 9 286 1 132 4 
138 1 97 1 249 1 141 1 73 1 222 1 28 2 144 1 119 1 280 1 5 1 205 1 177 1 285 2 8 2 149 1 83 1 9 1 322 1 352 1 87 1 357 1 243 1 108 1 160 1 217 1 90 1 163 1 315 1 362 1 
138 1 97 1 249 1 141 1 73 1 28 3 144 1 119 1 280 1 5 1 101 1 205 1 177 1 285 2 8 3 287 1 9 1 322 1 61 1 352 1 87 1 357 1 243 1 108 1 160 1 217 1 90 1 163 1 315 2 362 1 
138 1 249 1 141 1 73 1 28 2 144 1 280 1 5 1 101 1 205 1 177 1 285 2 8 2 9 1 322 1 61 1 352 1 357 1 243 1 108 1 160 1 90 1 163 1 315 2 362 1 
363 1 221 1 141 2 203 1 26 1 28 1 143 1 144 1 119 1 280 2 5 1 54 1 177 1 8 1 346 1 287 1 322 1 15 1 18 1 243 1 160 2 217 1 163 2 
9 1 322 1 138 1 97 1 61 1 249 1 141 1 73 1 87 1 28 1 119 1 144 1 280 1 108 1 243 1 5 1 217 1 160 1 90 1 177 1 285 2 163 1 149 1 8 1 362 1 83 1 
328 1 
136 1 0 5 298 1 137 1 47 2 203 1 337 1 143 1 144 2 340 5 5 2 99 1 7 1 259 2 148 1 347 1 59 1 212 1 105 1 262 1 263 2 15 2 354 2 156 1 155 4 157 1 18 1 356 1 109 1 20 1 110 3 162 2 271 2 166 2 363 1 317 1 72 1 75 1 120 1 80 2 321 2 177 2 178 2 126 1 181 2 322 1 37 1 234 1 293 2 239 1 38 1 378 1 327 1 191 6 243 1 
136 1 298 1 0 3 337 1 3 1 72 1 99 1 340 3 7 1 148 1 347 1 234 1 105 1 156 1 155 2 354 1 378 1 327 1 356 1 191 2 109 1 110 1 
136 1 298 1 0 3 137 1 47 1 337 1 3 1 72 1 99 1 340 3 7 1 148 1 347 1 234 1 105 1 156 1 155 3 378 1 327 1 356 1 191 1 109 1 110 1 271 1 
136 1 166 1 298 1 0 3 137 1 47 1 3 1 337 1 72 1 99 1 340 3 7 1 148 1 347 1 234 1 105 1 156 1 155 3 354 1 378 1 327 1 356 1 191 2 109 1 110 1 271 1 
136 1 0 5 298 1 137 5 47 5 337 1 3 1 340 5 99 1 7 1 148 1 259 2 347 1 59 1 105 1 12 1 262 1 263 2 354 4 155 6 156 1 356 1 109 1 110 3 20 1 162 2 271 4 166 4 72 1 75 1 318 1 80 1 321 2 370 1 126 1 178 1 234 1 237 1 293 2 239 1 327 1 378 1 191 7 43 1 
166 2 136 1 0 4 298 1 137 1 47 2 337 1 72 1 75 1 80 1 340 4 99 1 321 2 7 1 259 2 178 1 148 1 126 1 181 2 347 1 59 1 37 1 234 1 105 1 293 2 262 1 263 2 239 1 354 2 156 1 155 4 378 1 327 1 356 1 191 4 109 1 110 2 20 1 162 2 271 2 
166 2 136 1 298 1 0 4 137 1 47 1 337 1 72 1 75 1 80 1 99 1 340 4 321 2 370 1 7 1 259 2 178 1 126 1 148 1 347 1 59 1 234 1 105 1 12 1 293 2 262 1 263 2 239 1 354 2 156 1 155 4 378 1 327 1 356 1 191 4 109 1 110 2 20 1 162 2 271 2 43 1 
166 2 136 1 298 1 0 4 137 1 47 1 337 1 72 1 75 1 80 1 99 1 340 4 321 2 370 1 7 1 259 2 178 1 126 1 148 1 347 1 59 1 234 1 105 1 12 1 293 2 262 1 263 2 239 1 354 2 156 1 155 4 378 1 327 1 356 1 191 4 109 1 110 2 20 1 162 2 271 2 43 1 
166 2 136 1 298 1 0 4 137 1 277 1 47 1 25 2 316 1 337 1 72 1 75 1 80 1 99 1 340 4 370 1 7 1 178 1 148 1 181 2 347 1 59 1 234 1 105 1 14 2 293 2 262 1 263 2 239 1 354 2 156 1 155 4 378 1 327 1 356 1 191 4 109 1 110 2 20 1 271 2 272 1 
136 1 166 3 298 1 0 4 137 1 47 1 337 1 72 1 75 1 80 1 99 1 340 4 321 2 370 1 7 1 259 2 178 1 126 1 148 1 347 1 59 1 234 1 105 1 12 1 293 2 262 1 237 1 263 2 239 1 156 1 155 5 354 3 378 1 327 1 356 1 191 5 109 1 110 2 20 1 162 2 271 3 43 1 
136 1 166 3 298 1 0 4 137 1 47 1 337 1 72 1 75 1 80 1 99 1 340 4 321 2 370 1 7 1 259 2 178 1 126 1 148 1 347 1 59 1 234 1 105 1 12 1 293 2 262 1 237 1 263 2 239 1 156 1 155 5 354 3 378 1 327 1 356 1 191 5 109 1 110 2 20 1 162 2 271 3 43 1 
166 2 136 1 0 4 298 1 137 1 47 1 25 2 316 1 337 1 72 1 75 1 80 1 340 4 99 1 7 1 178 1 148 1 181 2 347 1 59 1 37 1 234 1 105 1 14 2 293 2 262 1 263 2 239 1 354 2 156 1 155 4 378 1 327 1 356 1 191 4 109 1 110 2 20 1 271 2 
94 2 168 2 140 1 252 1 170 1 254 1 49 1 173 1 147 3 304 3 371 1 286 1 348 1 84 1 375 1 129 1 39 2 215 1 216 1 266 1 360 1 334 6 66 1 132 2 24 1 114 1 
94 2 168 1 201 1 300 3 140 11 252 1 170 2 254 2 49 2 173 2 52 1 257 1 147 6 283 2 124 1 304 8 151 1 233 1 290 1 106 2 238 1 129 2 39 1 215 4 267 1 161 1 360 2 334 14 66 11 270 3 132 4 93 1 114 1 
168 1 201 1 203 1 170 1 254 1 143 1 144 1 145 1 173 1 204 1 5 1 99 1 55 1 147 1 176 1 304 1 177 1 347 2 322 1 153 1 60 1 233 1 15 1 129 1 264 1 241 1 215 1 189 1 243 1 267 1 109 2 359 1 360 1 334 2 111 1 113 1 132 2 114 1 
94 8 139 1 201 1 252 3 203 2 140 7 254 3 143 2 49 3 144 3 204 2 52 4 5 3 99 1 147 10 55 1 304 10 347 3 348 1 61 1 11 1 106 2 15 1 264 1 17 2 215 7 216 1 266 1 267 1 359 1 109 3 313 2 360 3 66 7 111 2 113 2 114 3 168 2 170 3 173 3 283 2 176 2 371 1 177 3 286 1 35 2 84 1 322 2 288 2 233 1 290 2 129 3 39 4 241 1 243 2 334 20 297 2 132 6 133 1 
363 1 203 3 222 1 170 2 254 2 77 1 143 2 278 1 144 7 319 1 173 2 256 1 99 1 5 8 55 1 147 1 304 1 177 8 208 1 347 1 322 2 233 1 61 1 375 1 15 2 129 2 88 1 264 1 18 1 158 1 243 2 267 1 109 1 359 1 360 2 334 2 132 4 44 2 114 2 
94 1 201 1 140 1 252 1 170 1 254 1 49 1 173 1 99 1 147 2 283 1 304 1 347 1 374 1 290 1 106 1 86 1 129 1 39 1 264 1 215 1 41 1 359 1 109 1 360 1 66 1 334 3 132 2 114 1 
94 1 375 1 140 1 170 1 254 1 129 1 49 1 215 1 173 1 52 1 339 1 283 1 360 1 304 2 66 1 334 2 132 2 114 1 
94 1 290 1 375 1 140 1 252 1 170 1 65 1 254 1 129 1 39 1 215 1 173 1 147 2 360 1 66 1 334 2 132 2 114 1 
94 2 140 2 252 1 170 1 254 1 49 1 173 1 52 1 147 2 283 1 304 2 290 1 375 1 106 1 129 1 39 1 215 2 360 1 334 4 66 2 132 2 114 1 
94 1 140 1 170 1 254 1 129 1 49 1 215 1 173 1 52 1 158 1 339 1 283 1 360 1 304 2 66 1 334 2 132 2 114 1 
94 1 290 1 140 1 252 1 170 1 65 1 254 1 129 1 39 1 215 1 173 1 158 1 147 2 360 1 66 1 334 2 132 2 114 1 
94 2 140 2 252 1 170 1 254 1 49 1 173 1 52 1 147 2 283 1 304 2 290 1 106 1 129 1 39 1 215 2 158 1 360 1 334 4 66 2 132 2 114 1 
94 2 140 2 252 1 170 1 254 1 49 1 173 1 52 1 147 2 283 1 304 2 290 1 106 1 129 1 39 1 215 2 360 1 334 4 66 2 132 2 114 1 
168 1 203 1 170 1 254 1 143 1 144 1 173 1 204 1 5 1 147 1 304 1 176 1 177 1 347 1 322 1 233 1 15 1 129 1 267 1 243 1 313 1 109 1 360 1 334 2 111 1 113 1 132 2 114 1 
168 1 203 1 170 1 254 1 143 1 172 1 144 1 173 1 5 1 147 1 304 1 176 1 228 1 177 1 347 1 322 1 233 1 15 1 129 1 267 1 243 1 109 1 360 1 334 2 219 1 113 1 132 2 114 1 
94 2 201 1 140 2 252 1 170 1 254 1 49 1 173 1 52 1 147 2 283 1 304 2 290 1 106 1 129 1 39 1 215 2 360 1 334 4 66 2 132 2 114 1 
94 2 252 1 140 2 203 1 222 1 170 1 254 1 49 1 143 1 144 1 173 1 204 1 52 1 5 1 147 2 283 1 304 2 176 1 177 1 347 1 322 1 290 1 106 1 129 1 39 1 215 2 17 1 243 1 313 1 109 1 360 1 66 2 334 4 111 1 113 1 132 2 114 1 
94 1 201 1 252 1 140 1 170 1 254 1 49 1 173 1 52 1 99 1 147 1 283 1 304 2 347 1 290 1 374 1 376 1 106 1 129 1 264 1 215 1 41 1 359 1 109 1 360 1 334 3 66 1 132 2 114 1 
197 1 94 4 200 1 300 2 252 2 170 2 49 2 173 2 51 1 52 2 257 1 147 7 283 2 304 6 290 2 184 1 104 1 85 1 292 1 106 2 238 1 129 2 39 2 192 1 244 1 332 1 360 2 334 13 270 1 132 4 
275 1 95 1 94 2 252 1 300 2 170 3 49 2 173 3 52 1 51 3 147 9 283 2 304 11 34 1 232 1 290 1 184 1 104 2 85 2 106 2 238 2 129 3 39 1 294 1 188 2 192 1 331 1 244 1 332 1 360 3 334 20 270 2 132 6 
197 1 94 2 300 2 252 1 170 2 49 1 173 2 51 1 52 1 257 1 147 5 283 1 304 4 290 1 184 1 104 1 85 1 106 1 238 1 129 2 39 1 192 1 244 1 332 1 360 2 334 9 270 1 132 4 
197 1 94 2 300 2 252 1 170 2 49 1 173 2 51 1 52 1 257 1 147 5 283 1 304 4 290 1 184 1 104 1 85 1 106 1 238 1 129 2 39 1 192 1 244 1 332 1 360 2 334 9 270 1 132 4 
275 1 95 1 94 12 300 4 252 7 170 2 49 7 173 2 51 3 52 6 257 2 147 22 283 6 124 2 304 24 371 1 286 1 34 1 348 1 84 1 232 1 290 6 184 1 104 1 85 1 106 6 238 2 129 2 294 1 39 6 216 1 188 1 266 1 192 1 331 1 244 1 332 1 360 2 334 46 270 4 132 4 
152 1 210 1 213 1 64 1 240 1 16 1 265 1 372 1 58 1 112 1 
131 1 260 1 
152 1 210 1 269 1 342 1 372 1 58 1 103 1 240 1 112 1 
296 1 335 1 
289 1 323 1 246 1 
152 1 0 1 210 1 47 1 169 1 353 1 240 1 302 1 78 1 279 2 340 1 174 1 206 1 372 1 258 1 58 1 112 1 164 1 
152 1 0 1 210 1 47 1 169 1 353 1 240 1 302 1 78 1 279 2 340 1 174 1 206 1 372 1 258 1 58 1 112 1 164 1 
152 1 0 1 210 1 47 1 169 1 353 1 240 1 302 1 78 1 279 2 340 1 174 1 206 1 372 1 258 1 58 1 112 1 164 1 
289 1 296 1 335 1 
289 1 296 1 335 1 
323 1 246 1 
289 1 323 1 246 1 
329 1 96 1 
0 1 168 1 96 1 48 1 116 1 4 1 302 1 279 1 340 1 99 2 82 1 372 1 58 1 260 1 347 2 152 1 210 1 240 1 264 2 329 1 19 1 109 2 359 2 131 1 164 1 112 1 361 1 
276 1 201 1 203 1 338 1 170 1 254 1 143 1 319 1 144 2 173 1 256 1 281 1 5 2 99 2 147 1 304 1 177 2 347 2 322 1 233 1 129 1 243 1 159 1 267 1 109 2 360 1 334 2 91 1 132 2 44 2 114 1 
9 1 322 1 138 1 61 1 97 1 249 1 73 1 222 1 214 1 144 2 280 1 108 1 243 1 5 2 225 1 90 1 177 2 285 2 220 1 
9 1 322 1 138 1 61 1 97 1 249 1 235 1 73 1 214 1 144 1 280 1 108 1 5 1 243 1 90 1 177 1 285 2 
363 1 322 1 203 1 154 1 15 1 143 1 144 1 18 1 280 1 243 1 5 1 225 1 177 1 346 1 
9 1 322 1 138 1 61 1 97 1 249 1 73 1 214 1 144 1 280 1 108 1 5 1 243 1 225 1 90 1 177 1 285 2 220 1 
76 1 
80 1 137 1 47 1 336 1 178 1 273 1 24 1 
0 1 59 1 137 1 47 2 262 1 239 1 75 1 80 1 340 1 191 1 321 1 110 1 162 1 259 1 126 1 178 1 181 1 
0 5 137 2 47 8 336 1 301 1 203 10 337 2 252 2 143 3 49 2 144 3 5 3 340 5 305 2 59 4 62 2 106 2 262 4 15 1 110 3 23 6 273 1 274 2 70 1 317 1 74 1 115 2 222 1 117 2 75 4 223 1 367 2 80 8 321 6 283 2 176 3 177 3 125 2 178 9 373 6 181 12 322 4 288 2 290 2 128 1 239 4 38 2 326 1 190 3 243 3 191 5 330 2 92 2 42 2 
275 1 95 1 0 1 137 2 47 5 300 1 252 2 317 1 75 2 49 2 367 2 80 5 340 1 341 1 321 3 283 2 178 8 373 5 181 6 34 1 59 2 232 1 290 2 106 2 262 2 238 1 239 2 38 1 294 1 358 1 191 1 110 1 270 1 23 5 274 1 
0 1 46 1 252 1 98 1 75 1 49 2 367 2 80 2 81 1 340 1 99 1 123 1 371 1 178 2 229 1 286 1 347 1 84 1 59 1 262 1 239 1 264 1 327 1 41 1 109 1 359 1 43 1 274 1 
59 1 137 1 47 1 336 1 262 1 239 1 75 1 80 1 178 1 273 1 
288 1 47 5 290 2 252 2 106 2 49 2 367 2 80 5 321 5 283 2 178 5 373 5 23 5 181 10 274 1 
0 1 137 1 340 1 191 1 47 1 110 1 
69 1 363 1 70 1 0 3 301 2 203 1 317 2 75 2 143 1 144 4 120 1 80 2 5 4 340 3 177 4 178 2 59 2 322 1 262 1 239 2 15 2 377 1 38 2 157 1 18 1 243 1 191 4 110 2 68 1 
168 1 98 1 203 1 170 1 254 1 143 1 144 1 173 1 204 1 5 1 99 2 147 1 176 1 177 1 347 3 150 1 322 1 233 1 129 1 15 1 264 2 243 1 41 2 109 3 359 2 313 1 360 1 334 1 111 1 132 2 113 1 114 1 
348 1 59 1 137 2 47 4 317 1 262 1 239 1 75 1 38 1 80 2 321 2 178 1 373 2 23 2 181 4 
210 1 333 1 372 1 
210 1 333 1 372 1 
210 1 96 1 169 1 372 1 67 1 
210 1 333 1 372 1 
210 1 185 1 372 1 
210 1 185 1 372 1 
210 1 185 1 372 1 
210 1 372 1 
152 1 240 1 
348 1 94 3 84 1 252 1 170 2 129 2 39 2 49 1 173 2 188 1 216 1 52 1 266 1 147 4 304 4 360 2 371 1 334 8 286 1 132 4 
348 1 84 1 94 2 252 1 39 2 49 1 216 1 266 1 147 3 304 3 371 1 334 6 286 1 24 1 
94 2 290 1 252 1 106 1 170 1 129 1 39 1 49 1 173 1 52 1 147 2 283 1 360 1 304 2 334 4 21 1 132 2 
94 2 290 1 252 1 300 2 106 1 238 1 39 1 49 1 52 1 257 1 147 4 283 1 304 3 334 7 270 1 
94 9 300 2 252 3 170 2 49 3 173 2 52 4 257 1 147 12 283 2 369 1 304 11 124 1 371 1 286 2 348 1 84 2 290 2 106 2 129 2 39 5 216 1 188 2 266 1 360 2 334 23 270 2 132 4 93 1 
147 1 334 1 300 1 
304 1 334 1 270 1 
94 3 288 1 290 1 252 1 106 1 170 1 129 1 39 2 49 1 173 1 52 1 147 3 283 1 360 1 304 3 334 6 21 1 132 2 
275 1 94 2 95 1 300 1 252 2 170 1 49 2 173 1 52 1 147 6 283 2 304 6 34 1 290 2 232 1 106 2 238 1 129 1 294 1 39 1 332 1 360 1 334 12 270 1 132 2 
84 1 94 2 252 1 39 1 49 1 52 1 147 3 304 3 371 1 334 6 286 1 
94 2 84 1 170 1 129 1 39 1 173 1 188 1 216 1 52 1 266 1 147 2 369 1 304 1 360 1 334 3 286 1 132 2 
84 2 94 5 252 2 170 1 129 1 39 3 49 2 173 1 52 2 147 5 332 1 123 1 360 1 304 5 334 10 371 1 286 2 132 2 
94 1 170 1 129 1 49 1 173 1 52 1 332 1 283 1 360 1 304 2 334 2 132 2 
94 2 290 1 252 1 106 1 170 1 129 1 39 1 49 1 173 1 52 1 147 2 332 1 283 1 360 1 304 2 334 4 132 2 
197 1 84 1 94 2 170 3 129 3 39 1 173 3 188 1 52 1 147 2 369 1 332 1 360 3 304 1 334 3 286 1 132 6 
197 1 94 12 1 1 202 1 300 4 252 5 170 5 49 5 173 5 52 5 257 1 147 18 369 1 283 3 304 16 371 2 286 3 348 1 84 3 290 3 106 3 238 1 129 5 39 7 216 1 188 2 266 1 332 1 360 5 334 34 21 1 270 3 132 10 165 1 
275 1 94 2 252 1 300 1 170 1 49 1 173 1 147 4 304 4 371 1 286 1 348 1 84 1 238 1 129 1 39 2 216 1 266 1 332 1 360 1 334 8 270 1 132 2 
275 1 94 3 252 1 300 2 170 2 49 2 173 2 52 1 257 1 147 5 283 1 304 6 371 1 286 1 348 1 84 1 106 1 238 1 129 2 39 2 216 1 266 1 332 1 360 2 334 11 21 1 270 1 132 4 
275 1 95 1 94 4 300 1 252 3 170 3 49 3 173 3 52 1 147 10 283 2 304 9 371 1 286 1 34 1 348 1 84 1 290 2 232 1 106 2 238 1 129 3 294 1 39 3 216 1 188 1 266 1 332 1 360 3 334 19 21 1 270 1 132 6 
275 1 94 5 95 1 300 1 252 2 170 3 49 3 173 3 52 2 147 7 283 2 304 10 371 1 286 1 34 1 348 1 84 1 290 1 232 1 106 2 238 1 129 3 294 1 39 3 216 1 188 1 266 1 332 1 360 3 334 17 21 1 270 1 132 6 
275 1 94 2 252 1 300 1 170 1 49 1 173 1 147 4 304 4 371 1 286 1 348 1 84 1 238 1 129 1 39 2 216 1 266 1 332 1 360 1 334 8 270 1 132 2 
275 1 94 2 95 1 300 1 252 2 170 1 49 2 173 1 52 1 147 6 283 2 304 6 34 1 290 2 232 1 106 2 238 1 129 1 294 1 39 1 332 1 360 1 334 12 270 1 132 2 
275 1 95 1 94 5 300 1 252 2 170 4 49 3 173 4 52 2 147 8 283 2 304 10 371 1 286 1 34 1 348 1 84 1 232 1 290 1 106 2 238 1 129 4 294 1 39 3 216 1 188 2 266 1 332 1 360 4 334 18 21 1 270 1 132 8 
275 1 197 1 95 1 94 6 300 1 252 2 170 4 49 3 173 4 52 3 147 7 283 3 304 9 34 1 232 1 290 2 106 3 238 1 129 4 294 1 39 3 188 2 332 1 360 4 334 16 270 1 132 8 
84 3 94 6 252 1 39 3 49 1 216 1 266 2 52 3 147 4 304 3 334 7 371 1 286 3 
275 1 197 1 95 1 94 4 300 1 252 2 170 4 49 3 173 4 52 1 147 8 283 2 304 10 371 1 286 1 34 1 348 1 84 1 232 1 290 1 106 2 238 1 129 4 294 1 39 3 216 1 188 2 266 1 332 1 360 4 334 18 270 1 132 8 
135 1 298 1 168 1 99 1 109 1 347 1 146 1 
135 1 298 1 168 1 248 1 146 1 320 1 40 1 368 1 122 1 99 1 109 1 347 1 
363 1 322 1 243 1 5 1 203 1 177 1 15 1 143 1 144 1 18 1 24 1 
168 1 322 1 203 1 15 1 264 1 143 1 144 1 99 1 5 1 243 1 55 1 359 1 109 2 176 1 177 1 111 1 113 1 347 2 
168 1 301 1 203 3 117 1 143 2 144 1 5 1 99 2 55 1 176 2 177 1 347 2 322 1 105 1 264 2 378 1 327 1 243 1 330 1 109 2 359 1 111 1 113 1 
168 1 2 1 301 1 203 3 117 1 143 2 144 2 5 2 99 2 55 1 176 2 177 2 347 2 322 1 105 1 264 2 378 1 327 1 243 1 330 1 109 2 359 1 219 1 113 1 
0 2 137 1 322 1 47 1 2 1 337 1 301 1 203 4 236 1 115 1 117 1 15 1 143 1 144 3 340 2 5 3 190 1 191 1 243 1 330 1 176 1 177 3 57 1 
0 2 137 1 322 1 47 1 2 1 337 1 301 1 203 4 115 1 117 1 15 1 143 1 144 3 340 2 5 3 190 1 191 1 243 1 330 1 176 1 177 3 125 1 
322 1 243 1 5 1 177 1 77 1 144 1 
322 3 61 1 203 3 222 1 15 2 88 1 326 1 77 1 29 1 143 2 278 1 144 6 256 1 5 7 243 2 218 1 176 1 177 7 227 1 44 1 208 1 
94 2 201 1 203 1 252 1 140 1 338 1 254 2 143 1 49 1 144 1 204 1 5 1 99 1 55 1 147 3 304 3 347 2 348 1 264 1 215 1 17 1 216 1 266 1 313 1 359 1 109 2 360 2 66 1 111 1 113 1 114 2 168 2 222 1 170 2 173 2 176 1 371 1 177 1 286 1 35 1 84 1 322 1 129 2 39 2 243 1 334 6 132 4 
70 1 0 3 137 1 47 1 336 1 203 2 337 1 116 1 115 1 75 2 144 1 80 1 5 1 340 3 177 1 125 1 178 1 305 1 59 2 62 1 262 2 239 2 15 1 190 1 191 2 110 1 92 1 273 1 
322 2 243 1 5 2 176 1 203 2 128 1 177 2 115 1 222 1 326 1 143 1 77 1 144 2 
363 1 322 1 2 1 203 1 222 1 15 1 143 1 144 4 18 1 5 4 243 1 177 4 307 1 
322 2 139 1 301 1 203 1 143 1 144 2 379 1 5 2 243 1 218 1 176 1 177 2 227 1 22 1 
108 1 322 1 243 1 5 1 138 1 249 1 177 1 285 1 15 1 144 1 
322 1 61 1 203 1 222 1 143 1 144 2 256 1 281 1 5 2 243 1 177 2 
363 1 322 2 301 1 203 3 222 1 15 1 88 1 143 2 144 4 278 1 18 1 256 1 5 5 243 2 177 5 307 1 
363 1 322 2 301 1 203 3 222 1 15 1 88 1 143 2 144 4 18 1 256 1 5 5 243 2 226 1 177 5 307 1 
168 1 322 1 203 1 15 1 264 1 143 1 144 1 99 1 5 1 243 1 55 1 359 1 109 2 176 1 177 1 219 1 113 1 347 2 
322 2 301 1 203 1 326 1 29 1 143 1 144 1 5 1 243 1 218 1 176 1 177 1 227 1 
198 1 276 1 350 1 159 1 99 1 109 1 295 1 91 1 347 1 
198 1 268 1 366 1 
198 1 168 1 295 1 314 1 350 1 
198 1 0 2 182 1 168 1 137 1 47 1 105 1 366 1 337 1 116 1 350 2 327 1 378 1 312 1 340 2 268 1 295 2 314 2 7 1 
357 1 205 1 352 1 24 1 
357 1 205 1 217 1 352 1 8 1 28 1 119 1 
160 1 141 1 28 1 
364 2 365 1 352 1 28 3 119 1 357 1 217 1 205 1 245 1 8 3 383 1 83 1 
357 1 205 1 217 1 352 1 315 1 306 1 8 2 28 2 119 1 
9 1 250 1 249 1 352 1 28 1 119 1 100 1 217 1 285 1 8 1 83 1 
357 1 217 1 352 1 8 1 28 1 119 1 83 1 
357 2 205 1 217 1 8 1 28 1 119 1 83 1 
199 1 107 1 352 1 28 2 119 2 357 1 217 2 284 1 8 2 83 1 
253 1 352 2 28 3 119 1 357 1 100 1 205 1 217 1 344 1 8 3 315 2 180 1 83 1 
9 1 167 1 249 1 352 1 28 2 119 1 357 1 108 1 205 1 217 1 90 1 285 2 8 2 315 1 83 1 
27 1 352 2 28 4 119 2 357 1 100 1 205 1 217 2 8 4 306 1 315 2 180 1 83 1 
357 1 205 1 217 1 352 1 8 1 28 1 119 1 83 1 
134 1 364 1 365 1 352 3 28 4 119 1 357 2 100 1 205 2 217 1 245 1 315 2 8 4 180 1 
13 1 352 1 142 1 28 2 119 1 357 1 217 1 205 1 8 2 179 1 315 1 83 1 
364 2 365 1 352 1 28 3 119 1 357 1 32 1 217 1 205 1 245 2 8 3 83 1 
10 1 56 1 352 2 195 2 
217 1 193 1 8 1 28 1 119 1 83 1 
357 1 205 1 217 1 344 1 352 1 315 1 8 2 28 2 119 1 83 1 
324 1 
357 1 205 1 217 1 352 1 8 1 28 1 119 1 83 1 
364 1 352 1 28 3 119 1 357 1 217 1 205 1 344 1 315 1 8 3 83 1 
134 1 100 1 352 1 180 1 
357 1 352 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint; | RETURN | 620 | return null
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
194 1 112 2 216 9 46 4 269 1 311 2 312 9 169 1 29 1 57 1 10 6 205 1 65 1 179 2 68 1 14 1 15 1 126 1 370 2 70 5 155 1 157 3 213 2 41 1 334 2 42 2 132 1 23 1 
194 1 112 2 216 9 46 4 311 2 269 1 312 9 169 1 29 1 57 1 10 6 205 1 65 1 179 2 68 1 14 1 15 1 126 1 70 5 370 2 155 1 157 3 213 2 41 1 334 2 42 2 132 1 23 1 
194 1 112 2 216 10 46 5 311 2 269 1 312 10 169 1 29 1 57 1 10 7 205 1 65 1 179 2 68 1 14 1 15 1 126 1 70 6 370 2 155 1 157 4 213 2 41 1 334 2 42 2 132 1 23 1 
194 1 112 2 216 7 46 3 311 2 269 1 312 7 169 1 29 1 57 1 10 4 205 1 65 1 179 2 68 1 14 1 126 1 70 4 370 1 155 1 157 2 213 2 41 1 334 2 42 2 132 1 23 1 
112 1 216 4 46 2 311 1 68 1 14 1 15 1 312 4 370 2 126 1 70 3 157 1 213 1 41 1 334 1 42 1 10 3 205 1 
112 1 194 1 216 2 179 1 68 1 14 1 312 2 70 1 169 1 222 1 213 1 334 1 353 1 42 1 354 1 205 1 
112 2 216 3 65 1 46 1 179 1 68 1 14 1 312 3 70 2 157 1 213 2 10 1 205 1 
112 2 216 9 46 4 311 1 312 9 10 7 205 1 65 1 179 1 251 1 68 1 14 1 252 1 15 1 70 5 370 2 126 1 155 1 157 3 213 2 41 1 334 1 42 1 23 1 
112 2 216 9 46 4 311 1 312 9 10 7 205 1 65 1 179 1 251 1 68 1 14 1 252 1 15 1 70 5 370 2 126 1 155 1 157 3 213 2 41 1 334 1 42 1 23 1 
67 1 325 1 43 1 
120 1 325 1 60 2 
364 2 341 2 239 2 184 1 358 2 279 1 26 2 242 2 
78 2 192 1 165 1 356 1 0 1 309 1 80 1 139 1 239 2 357 1 339 1 358 2 290 1 26 3 242 2 272 1 341 2 31 1 294 1 295 1 345 1 364 3 226 1 178 2 368 1 209 2 181 1 69 1 87 2 299 1 184 1 279 1 185 1 158 1 264 1 161 1 355 2 
276 1 364 1 341 1 239 1 59 1 358 1 279 1 26 1 344 1 242 1 
177 1 163 1 364 1 67 1 325 1 26 1 254 1 242 1 223 1 303 1 225 1 304 1 59 1 61 1 
163 2 177 1 364 1 67 1 325 1 239 1 358 1 26 1 254 1 242 1 341 1 223 1 304 2 59 1 61 1 
163 1 145 1 227 1 304 1 128 1 
163 2 64 1 67 1 227 1 325 1 304 2 58 1 128 1 
163 1 304 1 128 1 
163 1 276 1 135 1 364 1 227 1 239 1 279 1 358 1 26 1 242 1 341 1 304 1 59 1 344 1 
325 1 
163 2 67 1 227 1 325 1 218 1 304 2 58 1 128 1 
163 5 97 2 152 1 67 1 227 2 247 2 12 1 325 1 52 1 231 2 128 2 214 1 224 1 40 1 21 1 304 5 202 1 160 1 58 1 
184 1 43 1 
364 2 346 1 239 1 358 1 184 2 26 2 242 2 341 1 146 1 
104 1 284 1 141 1 
364 1 0 1 178 1 80 1 181 1 209 1 69 1 299 1 357 1 339 1 184 1 26 1 187 1 31 1 161 1 355 1 
364 2 0 1 166 1 178 1 80 1 69 1 181 1 209 1 299 1 357 1 339 1 315 1 141 1 358 1 26 2 242 1 341 1 31 1 161 1 355 1 
364 5 166 2 346 1 13 1 239 1 315 1 358 4 184 1 26 5 242 5 171 1 341 4 225 1 380 1 
364 2 341 2 100 1 59 1 358 2 26 2 344 1 242 2 
364 3 166 1 341 3 239 1 184 1 358 3 26 3 242 3 
364 1 341 1 59 1 358 1 26 1 344 1 242 1 
364 1 341 1 346 1 146 1 239 1 59 1 358 1 26 1 242 1 
78 2 163 1 165 1 0 1 166 1 309 1 98 1 80 1 139 1 239 2 357 1 339 1 315 1 358 3 26 4 242 3 341 3 223 1 31 1 294 1 59 1 61 1 345 1 177 1 364 4 226 1 346 1 178 1 368 1 69 1 181 1 209 1 87 1 299 1 184 1 279 1 185 1 254 1 332 1 158 1 264 1 304 1 161 1 355 1 
364 2 166 1 341 1 225 1 184 1 358 1 380 1 26 2 242 2 
163 1 177 1 364 3 166 2 346 1 98 1 325 1 239 1 315 1 358 3 26 3 254 1 242 3 350 1 223 1 341 3 304 1 59 1 61 1 
364 2 166 1 284 1 346 1 239 1 358 2 141 1 26 2 242 2 341 2 
364 1 0 1 178 1 80 1 181 1 209 1 69 1 299 1 339 1 357 1 184 1 26 1 31 1 161 1 355 1 
364 1 66 1 0 1 178 1 136 1 80 1 181 1 209 1 69 1 339 1 357 1 184 1 26 1 161 1 355 1 
78 2 308 1 356 2 284 2 139 1 287 1 141 2 319 1 293 1 294 1 243 1 345 1 104 2 226 1 368 2 153 1 87 4 16 1 256 1 185 1 348 1 264 1 266 1 282 1 
364 1 341 1 100 1 59 1 358 1 254 1 26 1 242 1 
318 1 45 1 
318 1 45 1 
376 1 147 1 
376 1 147 1 
376 1 147 1 
318 1 45 1 313 1 
211 1 318 1 45 1 
298 1 318 2 376 1 45 2 147 1 198 1 
318 1 45 1 313 1 
318 1 45 1 313 1 
318 1 285 1 45 1 
318 1 285 1 45 1 
318 1 285 1 45 1 
163 1 217 1 45 1 286 1 49 1 140 1 168 1 358 2 26 2 242 2 318 1 341 2 273 1 33 1 364 2 326 1 369 1 88 1 184 1 230 1 211 1 212 1 262 1 304 1 
163 2 45 2 325 1 49 2 369 2 140 2 198 1 88 2 300 1 374 1 27 1 318 2 273 3 75 2 304 2 32 1 95 1 162 1 33 1 
311 1 334 1 42 1 
334 1 42 1 354 1 
280 1 74 1 311 2 334 3 229 1 354 1 
74 1 311 1 180 1 334 2 229 1 354 1 
74 1 311 1 334 2 229 2 354 1 
163 5 217 1 97 1 51 1 82 1 199 1 120 1 200 1 224 2 293 1 58 1 60 3 102 2 243 1 297 1 34 2 247 1 227 4 67 1 367 1 12 1 326 1 325 2 348 1 231 1 128 1 262 1 265 2 214 3 94 1 304 5 266 1 
163 9 97 2 338 1 240 1 51 3 82 2 120 3 291 5 145 5 200 2 224 6 293 3 58 1 85 1 60 9 322 1 102 6 243 3 324 1 34 6 227 7 67 1 247 2 367 1 12 1 325 5 89 1 348 3 128 6 231 2 262 4 21 1 214 8 304 9 266 3 
163 3 97 1 51 1 82 1 199 1 120 2 200 1 293 1 224 2 60 4 243 1 102 2 34 2 67 1 227 2 247 1 325 3 348 1 231 1 262 1 21 1 214 3 265 1 94 1 304 3 266 1 
163 4 97 1 51 2 82 1 199 1 120 3 200 1 293 2 224 4 60 7 322 1 102 4 243 2 34 4 324 1 67 1 247 1 227 3 325 4 89 1 348 2 231 1 262 2 21 1 214 5 265 2 304 4 94 1 266 2 
232 1 357 1 43 1 
76 1 357 1 
71 1 
0 1 80 1 357 1 
357 1 381 1 
80 1 357 1 
0 1 80 1 232 2 99 1 357 3 215 1 
308 3 356 4 368 3 137 1 153 2 87 7 289 1 5 1 156 1 263 1 274 1 293 1 110 1 188 2 266 1 149 1 321 1 
308 3 356 4 368 3 137 1 153 2 87 7 289 1 5 1 156 1 263 1 274 1 293 1 110 1 188 2 266 1 149 1 321 1 
308 3 356 4 368 3 137 1 153 2 87 7 289 1 5 1 156 1 263 1 274 1 293 1 110 1 188 2 266 1 149 1 267 1 321 1 
78 2 308 10 356 16 113 3 137 1 238 1 139 1 51 3 289 2 142 1 5 5 359 1 274 1 293 4 149 1 124 1 294 1 321 2 243 3 103 1 226 1 86 4 368 15 248 1 153 5 87 31 91 1 185 1 348 3 156 1 263 2 110 2 188 3 266 4 
78 4 308 4 356 5 137 1 139 2 289 1 5 1 274 1 293 1 55 1 294 2 321 1 103 1 226 2 368 4 153 3 87 9 185 2 156 1 263 1 188 2 110 1 93 1 266 1 
112 1 216 2 311 1 115 1 312 2 339 1 121 1 342 1 84 1 10 1 205 1 323 1 178 1 179 1 68 1 208 1 14 1 209 1 154 1 70 1 280 1 213 1 375 1 334 2 161 1 42 1 130 1 354 1 96 1 355 1 
164 1 112 1 216 3 311 1 115 1 312 3 116 1 339 1 121 1 342 1 84 1 10 2 205 1 323 1 178 1 179 1 208 1 14 1 209 1 154 1 70 1 72 1 280 1 213 1 375 1 334 2 161 1 42 1 354 1 355 1 
164 1 216 2 311 1 115 1 312 2 116 1 339 1 342 1 84 1 10 2 205 1 323 1 178 1 179 1 208 1 14 1 209 1 154 1 70 1 280 1 334 2 161 1 42 1 354 1 355 1 
112 1 216 1 80 1 197 1 312 1 339 1 357 1 342 2 323 2 246 1 178 1 179 2 209 1 181 1 154 2 90 1 72 1 258 1 92 1 213 1 189 1 161 1 355 1 
164 1 112 1 216 1 311 1 115 1 312 1 339 1 121 1 342 1 84 1 323 1 178 1 179 1 68 1 208 1 209 1 154 1 280 1 213 1 375 1 334 2 161 1 42 1 354 1 96 1 355 1 
148 1 
337 1 97 1 138 2 3 1 339 1 241 2 242 1 143 2 58 3 59 1 60 2 61 1 67 1 247 1 12 1 209 2 210 2 254 1 214 2 303 1 304 5 161 1 355 2 163 5 80 1 357 1 82 1 26 1 120 2 223 1 224 2 30 4 225 1 360 1 174 1 125 1 275 1 177 1 35 2 364 1 277 1 178 2 325 2 36 2 181 2 90 1 329 1 128 6 231 1 281 1 189 1 335 2 133 1 283 1 336 1 
177 1 163 3 275 1 364 1 277 1 218 1 241 1 254 1 329 1 26 1 128 2 242 1 223 1 30 2 360 1 303 1 225 1 304 3 125 1 58 1 59 1 61 1 
163 3 218 1 26 1 242 1 223 1 30 3 225 1 360 1 125 1 59 1 58 1 61 1 275 1 177 1 364 1 35 1 277 1 67 1 325 1 329 1 254 1 128 1 303 1 304 3 
163 3 218 1 26 1 241 1 242 1 223 1 30 3 225 1 360 1 125 1 58 1 59 1 61 1 275 1 177 1 364 1 35 1 277 1 67 1 325 1 36 1 329 1 254 1 128 2 303 1 304 3 
97 1 337 1 138 2 241 4 242 1 143 2 292 1 56 1 59 1 58 3 61 1 67 5 247 1 12 1 210 2 254 1 107 1 214 1 303 1 304 5 163 5 310 1 218 1 26 1 120 2 223 1 30 6 224 1 360 1 225 1 125 1 177 1 275 1 364 1 35 4 277 1 325 5 36 4 327 1 329 1 128 7 231 1 336 1 335 2 
163 4 337 1 97 1 138 2 241 2 26 1 242 1 120 2 143 2 223 1 224 1 30 4 225 1 360 1 174 1 125 1 58 2 59 1 60 2 61 1 275 1 177 1 35 2 364 1 67 1 277 1 247 1 12 1 325 2 36 2 210 2 329 1 254 1 128 4 231 1 214 1 303 1 304 4 335 2 336 1 
163 4 337 1 97 1 310 1 138 2 241 2 26 1 242 1 120 2 143 2 223 1 224 1 30 4 225 1 360 1 56 1 125 1 58 2 59 1 61 1 275 1 177 1 35 2 364 1 67 1 247 1 277 1 12 1 325 1 36 2 210 2 329 1 254 1 128 4 231 1 107 1 214 1 303 1 304 4 335 2 336 1 
163 4 337 1 97 1 310 1 138 2 241 2 26 1 242 1 120 2 143 2 223 1 224 1 30 4 225 1 360 1 56 1 125 1 58 2 59 1 61 1 275 1 177 1 35 2 364 1 67 1 247 1 277 1 12 1 325 1 36 2 210 2 329 1 254 1 128 4 231 1 107 1 214 1 303 1 304 4 335 2 336 1 
111 2 163 4 337 1 97 1 2 2 114 1 241 2 26 1 242 1 28 1 143 2 223 1 224 1 30 4 225 1 360 1 125 1 58 2 59 1 60 2 61 1 275 1 177 1 35 2 364 1 67 1 247 1 277 1 249 1 12 1 325 1 36 2 329 1 254 1 128 4 231 1 107 1 214 1 303 1 304 4 335 2 
163 4 337 1 97 1 310 1 138 2 26 1 241 3 242 1 120 2 143 2 223 1 292 1 224 1 30 5 225 1 360 1 56 1 125 1 58 2 59 1 61 1 275 1 177 1 364 1 35 3 67 1 247 1 277 1 12 1 325 1 36 3 210 2 329 1 254 1 231 1 128 5 107 1 214 1 303 1 304 4 335 2 336 1 
163 4 337 1 97 1 310 1 138 2 26 1 241 3 242 1 120 2 143 2 223 1 292 1 224 1 30 5 225 1 360 1 56 1 125 1 58 2 59 1 61 1 275 1 177 1 364 1 35 3 67 1 247 1 277 1 12 1 325 1 36 3 210 2 329 1 254 1 231 1 128 5 107 1 214 1 303 1 304 4 335 2 336 1 
111 2 163 4 337 1 97 1 2 2 114 1 241 2 26 1 242 1 143 2 223 1 224 1 30 4 225 1 360 1 174 1 125 1 58 2 59 1 60 2 61 1 275 1 177 1 35 2 364 1 67 1 277 1 247 1 12 1 325 1 36 2 329 1 254 1 128 4 231 1 214 1 303 1 304 4 335 2 
78 2 308 2 356 3 284 1 137 1 139 1 141 1 319 1 274 1 293 1 294 1 345 1 104 1 226 1 368 3 153 2 87 6 184 2 185 1 156 1 263 1 264 1 110 1 188 1 266 1 43 1 
78 4 308 2 356 8 113 3 284 4 47 1 139 2 51 2 141 11 290 1 142 1 5 1 221 1 293 2 294 2 176 1 243 2 345 2 104 11 365 1 226 2 86 3 248 1 368 6 153 1 87 14 184 1 185 2 348 1 261 1 158 1 264 1 266 1 
78 2 0 1 166 1 356 1 284 1 80 1 196 1 139 1 357 1 339 1 315 1 358 1 26 2 290 1 242 1 221 1 341 1 31 1 294 1 206 1 345 1 364 2 226 1 178 1 368 1 69 1 209 1 181 1 299 1 87 2 184 1 185 1 187 1 351 1 158 1 264 1 161 1 355 1 
0 2 284 7 137 1 139 3 339 2 51 2 141 7 290 1 242 1 5 4 341 1 293 3 294 3 243 2 345 3 244 1 104 7 153 4 209 3 69 2 299 2 348 2 156 1 263 1 158 1 352 2 264 3 110 1 266 3 161 2 355 3 78 6 164 1 165 2 308 8 79 1 166 1 356 10 167 2 80 2 315 1 357 2 117 1 358 1 26 3 221 1 274 1 31 2 362 2 364 3 226 3 178 3 368 10 181 1 87 20 184 2 185 3 188 1 190 2 
78 4 164 1 166 1 356 1 80 2 139 2 339 2 357 3 358 1 26 1 290 1 242 1 319 1 341 1 294 2 295 2 345 2 364 1 226 2 178 8 368 1 209 8 181 2 87 2 90 1 185 2 39 1 159 1 18 1 158 1 264 2 20 1 189 1 161 2 305 1 233 1 130 1 306 1 355 7 
78 2 308 1 356 1 284 1 239 1 139 1 51 1 141 1 358 1 26 1 242 1 221 1 341 1 293 1 294 1 243 1 345 1 104 1 364 1 226 1 346 1 368 2 153 1 87 3 185 1 348 1 264 1 109 1 266 1 
345 1 78 2 308 1 104 1 226 1 356 2 284 1 139 1 87 2 287 1 141 1 185 1 5 1 319 1 264 1 293 1 294 1 243 1 
345 1 78 2 308 1 104 1 226 1 284 1 368 2 153 1 139 1 87 2 141 1 185 1 348 1 319 1 264 1 266 1 294 1 282 1 
78 2 308 2 356 2 284 2 139 1 51 1 141 2 5 1 319 1 293 1 294 1 243 1 345 1 104 2 226 1 368 2 153 1 87 4 185 1 348 1 264 1 266 1 
345 1 78 2 308 1 104 1 226 1 356 2 284 1 139 1 87 2 287 1 141 1 185 1 5 1 264 1 293 1 233 1 294 1 243 1 
345 1 78 2 308 1 104 1 226 1 284 1 368 2 153 1 139 1 87 2 141 1 185 1 348 1 264 1 266 1 233 1 294 1 282 1 
78 2 308 2 356 2 284 2 139 1 51 1 141 2 5 1 293 1 294 1 243 1 345 1 104 2 226 1 368 2 153 1 87 4 185 1 348 1 264 1 266 1 233 1 
78 2 308 2 356 2 284 2 139 1 51 1 141 2 5 1 293 1 294 1 243 1 345 1 104 2 226 1 368 2 153 1 87 4 185 1 348 1 264 1 266 1 
78 2 165 1 356 1 0 1 80 1 139 1 339 1 357 1 290 1 26 1 31 1 294 1 345 1 364 1 226 1 178 1 368 1 69 1 209 1 181 1 87 2 299 1 184 1 185 1 158 1 264 1 161 1 355 1 
78 2 356 1 0 1 80 1 136 1 139 1 339 1 357 1 290 1 26 1 294 1 345 1 364 1 66 1 226 1 178 1 368 1 69 1 209 1 181 1 87 2 184 1 106 1 185 1 158 1 264 1 161 1 355 1 
78 2 308 2 356 2 284 2 139 1 51 1 141 2 5 1 221 1 293 1 294 1 243 1 345 1 104 2 226 1 368 2 153 1 87 4 185 1 348 1 264 1 266 1 
78 2 308 2 165 1 356 2 0 1 284 2 167 1 80 1 139 1 339 1 357 1 51 1 141 2 26 1 5 1 293 1 31 1 294 1 243 1 345 1 104 2 364 1 226 1 178 1 368 2 153 1 69 1 209 1 87 4 299 1 185 1 348 1 264 1 266 1 161 1 130 1 355 1 
78 2 308 1 356 2 284 1 239 1 139 1 51 1 358 1 141 1 26 1 242 1 5 1 221 1 341 1 293 1 320 1 294 1 243 1 345 1 364 1 104 1 226 1 346 1 368 1 87 3 185 1 348 1 264 1 266 1 
268 1 78 4 193 1 308 6 356 9 113 1 1 2 139 2 51 3 316 1 142 1 5 3 55 1 293 3 123 2 294 2 296 1 243 3 226 2 86 2 248 1 250 1 368 10 153 3 87 19 185 2 348 3 260 1 266 3 77 1 
268 1 78 6 193 2 308 4 356 14 113 2 1 4 139 3 51 3 316 1 81 1 53 1 271 1 5 2 119 1 55 1 293 3 123 1 294 3 243 3 103 2 226 3 86 2 368 12 250 1 248 2 153 2 87 26 185 3 348 2 259 1 330 1 266 2 77 2 
44 1 193 1 1 4 137 1 139 3 51 4 53 1 142 1 5 4 293 5 55 1 294 3 243 4 103 1 250 1 248 3 153 4 348 4 259 1 260 1 156 1 263 1 110 1 266 5 77 2 78 6 268 1 308 8 356 20 113 3 316 1 81 1 271 1 119 1 274 1 123 1 226 3 86 4 368 21 87 41 185 3 330 1 188 1 
44 1 268 1 78 8 193 1 308 7 356 20 113 3 1 4 137 1 139 4 51 4 81 1 316 1 53 1 271 1 142 1 5 3 119 1 274 1 55 1 293 5 123 1 294 4 243 4 103 2 226 4 86 4 248 3 250 1 368 18 153 4 87 38 185 4 348 3 259 1 260 1 330 1 156 1 263 1 188 1 110 1 266 4 77 2 
268 1 78 4 193 1 308 14 356 27 113 4 1 4 47 2 137 1 139 2 51 7 81 1 316 1 53 1 271 1 142 2 5 7 119 1 274 1 55 1 293 8 123 1 294 2 243 7 103 1 226 2 86 4 248 2 250 1 368 25 153 7 87 52 185 2 348 7 259 1 330 1 156 1 263 1 188 1 110 1 266 8 77 1 
318 1 245 1 45 1 32 1 49 1 140 1 369 1 198 1 162 1 88 1 
211 1 168 1 
318 1 45 1 237 1 49 1 343 1 131 1 140 1 369 1 88 1 
313 1 183 1 
298 1 24 1 285 1 
163 1 45 1 325 1 49 1 369 1 140 1 198 1 88 1 300 1 374 1 27 1 318 1 273 2 75 1 304 1 32 1 162 1 33 1 
163 1 45 1 325 1 49 1 369 1 140 1 198 1 88 1 300 1 374 1 27 1 318 1 273 2 75 1 304 1 32 1 162 1 33 1 
163 1 45 1 325 1 49 1 369 1 140 1 198 1 88 1 300 1 374 1 27 1 318 1 273 2 75 1 304 1 32 1 162 1 33 1 
298 1 313 1 183 1 
298 1 313 1 183 1 
24 1 285 1 
298 1 24 1 285 1 
212 1 286 1 
163 1 217 1 45 1 286 1 49 1 140 1 168 1 358 2 26 2 242 2 27 1 318 1 273 1 341 2 364 2 227 1 326 1 369 1 88 1 184 1 372 1 230 1 211 1 212 1 262 1 75 1 304 1 
364 1 253 1 37 1 288 1 26 1 242 1 
164 1 178 2 311 1 209 2 115 1 339 1 4 1 301 1 280 1 375 1 8 1 342 1 334 2 161 1 42 1 84 1 130 1 354 1 355 2 
164 1 25 1 178 1 311 1 209 1 115 1 339 1 280 1 375 1 8 1 342 1 334 2 161 1 42 1 84 1 354 1 355 1 
178 1 80 1 181 1 209 1 197 1 339 1 357 1 4 1 90 1 317 1 342 1 189 1 161 1 355 1 
164 1 178 1 311 1 209 1 115 1 339 1 4 1 301 1 280 1 375 1 8 1 342 1 334 2 161 1 42 1 84 1 354 1 355 1 
83 1 
67 1 214 1 224 1 40 1 325 1 202 1 43 1 
163 1 97 1 138 1 120 1 224 1 58 1 60 1 247 1 67 1 12 1 325 2 210 1 231 1 128 1 214 1 304 1 336 1 
0 3 97 4 99 1 3 1 339 4 51 2 54 1 6 2 293 2 202 1 58 3 60 12 102 6 243 2 207 2 67 2 247 4 12 4 209 3 347 1 348 2 73 2 17 2 214 9 304 5 161 3 266 2 76 3 355 3 163 5 80 3 314 1 357 10 82 2 220 2 120 6 223 2 224 8 173 2 175 1 34 6 178 3 325 8 181 1 231 4 128 5 38 2 40 1 333 2 232 2 190 2 130 1 379 1 381 2 
163 1 97 2 113 1 3 1 51 2 82 1 81 1 53 1 119 1 340 1 120 3 224 5 293 2 173 1 58 1 60 6 102 5 243 2 34 5 86 1 247 2 67 2 248 1 12 2 325 5 371 1 128 1 231 2 348 2 259 1 330 1 214 8 333 2 304 1 266 2 
163 1 135 1 97 1 239 1 358 1 26 1 242 1 274 1 341 1 293 1 224 1 56 1 59 1 344 1 276 1 364 1 247 1 12 1 279 1 231 1 331 1 263 1 214 1 333 1 110 1 304 1 
97 1 247 1 67 1 12 1 325 1 231 1 40 1 224 1 214 1 202 1 
34 5 325 5 51 2 348 2 120 5 293 2 224 5 214 5 173 1 333 2 190 1 266 2 60 10 243 2 102 5 
163 1 67 1 325 1 304 1 58 1 128 1 
163 3 97 2 48 1 80 1 3 2 339 1 357 1 82 2 54 2 224 2 58 2 247 2 178 4 12 1 209 4 181 2 90 1 231 2 128 4 281 1 21 1 214 2 189 1 304 3 161 1 379 1 236 1 133 1 355 4 
78 2 165 1 309 1 0 1 80 1 239 2 139 1 339 1 357 1 358 2 26 3 242 2 341 2 31 1 294 1 345 1 364 3 226 1 178 1 368 1 209 1 181 1 69 1 87 1 299 1 184 1 279 1 185 1 158 1 264 1 161 1 355 1 
34 2 97 1 247 1 67 2 12 1 325 4 3 1 82 1 231 1 120 2 224 2 214 1 188 1 60 4 102 2 
50 1 49 1 140 1 
286 1 32 1 49 1 140 1 373 1 
50 1 49 1 140 1 
50 1 49 1 140 1 
108 1 49 1 140 1 
108 1 49 1 140 1 
108 1 49 1 140 1 
49 1 140 1 
318 1 45 1 
78 4 103 1 308 3 356 4 226 2 368 4 137 1 153 2 139 2 87 8 185 2 5 1 156 1 263 1 274 1 293 1 188 1 110 1 266 1 294 2 
308 2 356 3 368 3 137 1 153 2 87 6 156 1 263 1 274 1 293 1 188 1 110 1 266 1 43 1 
78 2 11 1 308 2 226 1 356 2 368 2 153 1 139 1 87 4 51 1 185 1 348 1 5 1 293 1 266 1 294 1 243 1 
308 2 356 3 86 2 113 1 248 1 368 4 153 1 87 7 51 1 348 1 142 1 5 1 293 1 266 1 243 1 
78 4 308 9 356 11 113 2 47 1 137 1 139 2 51 2 142 1 5 4 274 1 144 1 293 3 294 2 243 2 103 2 365 1 226 2 86 2 368 12 153 5 87 23 185 2 348 2 156 1 263 2 188 1 110 2 266 3 
86 1 368 1 87 1 
356 1 113 1 87 1 
78 2 11 1 308 3 226 1 356 3 368 3 139 1 153 2 87 6 51 1 185 1 348 1 5 1 293 1 190 1 266 1 294 1 243 1 
78 2 308 2 356 6 113 1 139 1 51 2 81 1 53 1 5 1 119 1 55 1 293 2 294 1 243 2 226 1 86 1 368 6 248 1 153 1 87 12 185 1 348 2 259 1 330 1 266 2 
308 2 356 3 368 3 153 1 87 6 5 1 263 1 274 1 293 1 110 1 266 1 
78 2 103 1 308 2 356 1 226 1 368 2 137 1 153 1 139 1 87 3 185 1 5 1 156 1 263 1 144 1 110 1 294 1 
308 1 356 2 368 3 153 1 87 5 331 1 263 1 274 1 293 1 110 1 266 1 
78 2 308 1 226 1 356 2 139 1 87 2 185 1 5 1 55 1 293 1 294 1 243 1 
78 2 308 2 226 1 356 2 368 2 153 1 139 1 87 4 51 1 185 1 348 1 5 1 55 1 293 1 266 1 294 1 243 1 
78 6 103 1 308 2 226 3 356 1 368 2 139 3 153 1 87 3 185 3 5 1 260 1 263 1 144 1 55 1 110 1 294 3 
78 10 308 12 356 16 113 3 137 1 139 5 51 3 142 1 5 5 359 1 274 2 144 1 55 1 293 5 124 1 294 5 243 3 103 2 11 1 226 5 86 4 368 18 248 1 153 7 87 34 91 1 185 5 348 3 260 1 156 1 263 3 188 1 110 3 266 5 
78 2 308 2 356 4 113 1 137 1 139 1 53 1 274 1 293 1 55 1 294 1 226 1 86 1 368 4 248 1 153 2 87 8 185 1 156 1 263 1 188 1 110 1 266 1 
78 4 308 3 356 6 113 1 137 1 139 2 51 1 53 1 142 1 5 1 274 1 55 1 293 2 294 2 243 1 11 1 226 2 86 2 368 5 248 1 153 2 87 11 185 2 156 1 263 1 188 1 110 1 266 1 
78 6 308 4 356 9 113 1 137 1 139 3 51 2 81 1 53 1 5 1 119 1 274 1 55 1 293 3 294 3 243 2 11 1 103 1 226 3 86 1 368 10 248 1 153 3 87 19 185 3 348 2 259 1 330 1 156 1 263 1 188 1 110 1 266 3 
78 6 308 5 356 10 113 1 137 1 139 3 51 2 81 1 53 1 5 2 119 1 274 1 55 1 293 3 294 3 243 2 11 1 103 1 226 3 86 1 368 7 248 1 153 3 87 17 185 3 348 1 259 1 330 1 156 1 263 1 188 1 110 1 266 2 
78 2 308 2 356 4 113 1 137 1 139 1 53 1 274 1 293 1 55 1 294 1 226 1 86 1 368 4 248 1 153 2 87 8 185 1 156 1 263 1 188 1 110 1 266 1 
78 2 308 2 356 6 113 1 139 1 51 2 81 1 53 1 5 1 119 1 55 1 293 2 294 1 243 2 226 1 86 1 368 6 248 1 153 1 87 12 185 1 348 2 259 1 330 1 266 2 
78 8 308 5 356 10 113 1 137 1 139 4 51 2 81 1 53 1 5 2 119 1 274 1 55 1 293 3 294 4 243 2 11 1 103 2 226 4 86 1 368 8 248 1 153 3 87 18 185 4 348 1 259 1 330 1 156 1 263 1 188 1 110 1 266 2 
78 8 308 6 356 9 113 1 139 4 51 3 81 1 53 1 5 3 119 1 55 1 293 3 294 4 243 3 103 2 226 4 86 1 368 7 248 1 153 3 87 16 185 4 348 2 259 1 330 1 260 1 266 2 
308 6 356 3 368 4 137 2 153 3 87 7 5 3 156 1 263 3 274 1 293 1 110 3 266 1 
78 8 308 4 356 10 113 1 137 1 139 4 51 2 81 1 53 1 5 1 119 1 274 1 55 1 293 3 294 4 243 2 103 2 226 4 86 1 368 8 248 1 153 3 87 18 185 4 348 1 259 1 330 1 260 1 156 1 263 1 188 1 110 1 266 2 
172 1 364 1 225 1 184 1 26 1 380 1 242 1 
363 1 364 1 195 1 184 1 219 1 26 1 242 1 172 1 225 1 203 1 204 1 380 1 
178 1 80 1 189 1 161 1 209 1 181 1 339 1 357 1 90 1 355 1 43 1 
364 2 0 1 166 1 178 1 80 1 69 1 181 1 209 1 357 1 339 1 184 1 358 1 26 2 242 1 341 1 31 1 161 1 355 1 
166 1 0 2 80 2 339 1 357 3 358 1 26 2 242 2 54 1 341 2 31 1 59 1 177 1 364 2 178 1 209 1 69 1 184 1 254 1 38 1 161 1 355 1 381 1 
166 1 0 2 80 2 339 1 357 3 358 1 26 2 242 2 54 1 341 2 59 1 177 1 364 2 66 1 178 2 209 2 69 1 184 1 254 1 38 1 161 1 355 2 191 1 381 1 
163 2 134 1 0 1 80 1 357 4 339 1 54 1 223 1 67 1 178 3 325 1 209 3 181 1 182 1 128 1 38 1 232 1 304 2 161 1 76 1 355 3 191 1 381 1 
163 2 0 1 67 1 178 3 80 1 325 1 181 1 209 3 339 1 357 4 128 1 38 1 54 1 220 1 223 1 304 2 232 1 161 1 76 1 355 3 191 1 381 1 
178 1 20 1 161 1 209 1 339 1 355 1 
164 1 0 1 178 7 80 2 99 1 181 2 209 7 357 3 339 3 349 1 39 1 159 1 18 1 20 1 377 1 161 2 130 1 295 1 306 1 355 6 151 1 
78 4 308 2 165 1 356 3 0 1 166 1 284 1 80 1 167 1 137 1 139 2 357 1 339 1 141 1 358 1 26 2 242 1 221 1 274 1 341 1 293 1 31 1 294 2 362 1 345 2 104 1 364 2 226 2 178 1 368 3 153 2 69 1 209 1 87 6 299 1 184 2 185 2 156 1 263 1 264 2 188 1 110 1 378 1 266 1 161 1 130 1 355 1 
163 3 97 2 357 2 6 1 220 1 223 1 224 1 202 1 58 1 207 1 67 1 247 2 227 1 178 1 12 2 325 1 209 1 181 1 231 2 128 2 73 1 214 1 40 1 304 3 232 1 76 1 379 1 355 1 
0 1 178 2 80 1 99 1 209 2 347 1 357 2 339 2 20 1 232 1 161 1 130 1 355 2 
178 4 80 1 181 1 209 4 339 1 357 1 90 1 19 1 189 1 161 1 130 1 355 4 191 1 
79 1 0 1 178 2 80 1 209 2 357 1 339 2 54 1 377 1 22 1 161 1 234 1 355 2 151 1 
178 1 334 1 161 1 42 1 115 1 209 1 181 1 354 1 339 1 355 1 
164 1 122 1 178 2 80 1 161 1 209 2 130 1 339 1 357 1 306 1 355 2 
178 5 80 2 181 1 209 5 357 3 339 2 90 1 54 1 18 1 159 1 19 1 189 1 161 2 130 1 306 1 355 4 
178 5 80 2 181 1 209 5 357 3 339 2 90 1 127 1 54 1 159 1 19 1 189 1 161 2 130 1 306 1 355 4 
364 2 0 1 166 1 66 1 178 1 80 1 69 1 181 1 209 1 357 1 339 1 184 1 358 1 26 2 242 1 341 1 161 1 355 1 
0 1 178 1 80 1 99 1 209 1 357 1 339 2 54 1 349 1 377 1 161 1 355 1 151 1 
186 1 366 1 201 1 150 1 184 1 
177 1 163 2 67 1 366 1 227 1 98 1 325 1 184 1 328 1 254 1 257 1 186 2 101 1 223 1 201 2 304 2 150 2 59 1 61 1 
186 1 366 1 150 1 253 1 37 1 288 1 
101 1 366 1 257 1 
14 1 70 1 205 1 43 1 
112 1 216 1 213 1 14 1 312 1 70 1 205 1 
216 1 179 1 154 1 
112 1 63 1 216 3 68 1 14 1 312 3 70 1 270 1 169 2 118 1 213 1 205 1 
112 1 216 2 213 1 14 1 312 2 70 1 370 1 10 1 205 1 
112 1 216 1 46 1 311 1 68 1 312 1 126 1 70 1 213 1 334 1 42 1 
112 1 216 1 213 1 68 1 14 1 312 1 70 1 
112 1 216 1 213 1 68 1 14 2 312 1 205 1 
302 1 112 2 216 2 213 2 68 1 14 1 312 2 70 1 307 1 170 1 
112 1 216 3 46 1 68 1 14 1 312 3 70 2 155 1 157 1 213 1 23 1 10 2 205 1 
112 1 216 2 311 1 68 1 14 1 312 2 70 1 280 1 213 1 334 2 129 1 42 1 354 1 10 1 205 1 
112 2 216 4 46 1 68 1 14 1 312 4 15 1 370 1 70 2 157 1 213 2 10 2 205 1 
112 1 216 1 213 1 68 1 14 1 312 1 70 1 205 1 
63 1 112 1 216 4 46 1 14 2 312 4 70 3 169 1 270 1 255 1 157 1 213 1 10 2 205 2 
112 1 216 2 68 1 105 1 14 1 278 1 252 1 312 2 70 1 213 1 10 1 205 1 
112 1 63 2 216 3 68 1 14 1 312 3 70 1 270 1 169 2 213 1 7 1 205 1 
62 1 70 2 235 2 361 1 
112 1 216 1 213 1 228 1 68 1 312 1 
112 1 216 2 213 1 68 1 14 1 312 2 70 1 10 1 23 1 205 1 
9 1 
112 1 216 1 213 1 68 1 14 1 312 1 70 1 205 1 
112 1 216 3 68 1 14 1 312 3 70 1 169 1 213 1 10 1 23 1 205 1 
157 1 46 1 70 1 255 1 
14 1 70 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V FAILED junit.framework.ComparisonFailure 
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String; | CONDITION | 6370 | if (x) -> if (!x)
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I | STATEMENT | 2944 | stmt -> ;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
236 1 314 9 243 1 211 1 261 7 335 3 360 1 336 5 3 1 50 1 73 1 264 1 147 2 196 2 218 1 325 1 184 1 77 1 303 2 186 4 100 1 17 1 380 9 106 1 
236 1 218 1 314 9 243 1 325 1 184 1 211 1 261 7 77 1 303 2 100 1 335 3 186 4 360 1 17 1 336 5 3 1 50 1 264 1 73 1 147 2 196 2 380 9 106 1 
236 1 314 9 243 1 211 1 261 6 335 3 360 2 336 5 50 1 247 1 264 1 73 1 147 2 196 2 218 1 346 1 124 1 184 2 77 1 303 2 100 2 186 4 17 2 231 1 206 1 207 1 380 9 106 1 
236 1 314 9 243 1 211 1 261 6 335 3 360 2 336 5 50 1 247 1 264 1 73 1 147 2 196 2 218 1 346 1 124 1 184 2 77 1 303 2 100 2 186 4 17 2 231 1 206 1 207 1 380 9 106 1 
236 1 314 10 243 1 211 1 261 7 335 4 360 2 336 6 50 1 247 1 264 1 73 1 147 2 196 2 218 1 346 1 124 1 184 2 77 1 303 2 100 2 186 5 17 2 231 1 206 1 207 1 380 10 106 1 
236 1 314 7 243 1 211 1 261 4 335 2 360 2 336 4 50 1 247 1 264 1 73 1 147 1 196 2 218 1 346 1 124 1 184 2 303 2 100 2 186 3 17 2 231 1 206 1 207 1 380 7 106 1 
314 4 243 1 184 1 211 1 261 3 77 1 303 1 335 1 100 1 186 2 360 1 336 3 50 1 73 1 264 1 147 2 196 1 380 4 
239 1 314 2 243 1 211 1 184 1 303 1 100 1 17 1 336 1 50 1 231 1 82 1 206 1 149 1 196 1 380 2 
218 1 314 3 243 1 211 1 261 1 303 2 335 1 186 1 17 1 336 2 50 1 196 2 380 3 
180 1 32 1 127 1 
332 1 363 2 127 1 
109 2 79 2 31 2 21 1 40 2 85 2 150 1 313 2 
109 2 64 1 45 1 334 1 210 1 244 1 214 2 29 2 31 3 320 1 150 1 9 1 53 1 368 2 345 1 157 1 182 1 253 1 15 1 301 1 223 2 16 1 256 1 79 3 80 1 232 1 279 1 81 1 204 1 21 1 309 2 40 2 379 1 85 2 331 1 313 2 136 1 
109 1 79 1 56 1 31 1 40 1 85 1 150 1 101 1 313 1 172 1 
180 1 76 1 222 1 358 1 127 1 79 1 31 1 56 1 278 1 41 1 364 1 85 1 269 1 11 1 
109 1 180 1 358 2 222 1 127 1 79 1 31 1 56 1 278 1 40 1 41 1 364 2 85 1 313 1 11 1 
271 1 87 1 358 1 266 1 364 1 
271 1 129 1 180 1 358 2 266 1 6 1 364 2 127 1 
271 1 358 1 364 1 
109 1 374 1 358 1 101 1 172 1 79 1 56 1 31 1 266 1 40 1 364 1 85 1 150 1 313 1 
127 1 
271 1 129 1 180 1 116 1 358 2 266 1 364 2 127 1 
188 1 271 2 180 1 324 2 27 1 274 1 358 5 68 1 127 1 35 1 245 1 47 1 38 1 129 1 20 1 266 2 233 2 364 5 120 2 
32 1 21 1 
109 1 111 1 361 1 79 2 31 2 40 1 21 2 85 2 313 1 
318 1 44 1 357 1 
368 1 157 1 210 1 244 1 15 1 214 1 301 1 223 1 16 1 256 1 79 1 31 1 81 1 21 1 9 1 22 1 
109 1 368 1 110 1 157 1 210 1 244 1 15 1 301 1 214 1 223 1 16 1 256 1 79 2 31 2 318 1 295 1 81 1 40 1 85 1 9 1 
23 1 109 4 110 1 76 1 347 1 361 1 79 5 31 5 295 2 40 4 21 1 85 5 343 1 313 1 
109 2 79 2 372 1 56 1 31 2 40 2 85 2 101 1 
109 3 79 3 31 3 295 1 21 1 40 3 85 3 313 1 
109 1 79 1 56 1 31 1 40 1 85 1 101 1 
109 1 79 1 56 1 31 1 111 1 40 1 85 1 313 1 361 1 
109 3 110 1 45 1 210 1 334 1 244 1 358 1 214 1 29 2 361 1 31 4 338 1 295 1 320 1 364 1 150 1 9 1 53 1 11 1 368 1 345 1 157 1 182 1 253 1 222 1 15 1 301 1 16 1 223 1 256 1 79 4 80 1 56 1 278 1 232 1 81 1 21 1 309 1 310 1 40 3 41 1 379 1 85 3 313 2 
23 1 109 1 79 2 31 2 76 1 295 1 21 1 40 1 85 2 
109 3 110 1 358 1 222 1 127 1 361 1 329 1 79 3 56 1 31 3 295 2 278 1 40 3 310 1 41 1 364 1 85 3 313 1 11 1 
109 2 357 1 361 1 79 2 31 2 295 1 318 1 40 2 85 2 313 1 
368 1 157 1 210 1 244 1 15 1 214 1 301 1 223 1 16 1 256 1 79 1 31 1 81 1 21 1 9 1 
368 1 86 1 157 1 123 1 210 1 244 1 15 1 214 1 301 1 223 1 79 1 31 1 81 1 21 1 9 1 
286 1 44 2 357 2 45 1 29 2 262 1 318 2 265 1 118 1 320 1 151 1 53 1 155 1 345 2 251 1 253 1 80 1 132 1 309 4 60 1 205 1 379 1 208 1 136 2 
109 1 79 1 56 1 31 1 372 1 41 1 40 1 85 1 
285 1 255 1 
285 1 255 1 
159 1 12 1 
159 1 12 1 
159 1 12 1 
154 1 285 1 255 1 
285 1 139 1 255 1 
285 2 159 1 281 1 321 1 255 2 12 1 
154 1 285 1 255 1 
154 1 285 1 255 1 
328 1 285 1 255 1 
328 1 285 1 255 1 
328 1 285 1 255 1 
109 2 285 1 139 1 140 1 358 1 170 1 71 1 362 1 31 2 175 1 364 1 10 1 255 1 275 1 224 1 187 1 257 1 228 1 79 2 164 1 19 1 21 1 40 2 85 2 
285 2 122 1 160 1 356 1 96 1 140 1 358 2 255 2 127 1 71 2 170 2 224 3 277 1 187 2 37 2 281 1 364 2 10 2 298 1 
184 1 100 1 360 1 
239 1 184 1 100 1 
200 1 107 1 239 1 302 1 100 3 360 2 
200 1 239 1 212 1 302 1 100 2 360 1 
200 1 239 1 302 2 100 2 360 1 
237 1 63 1 332 2 26 2 27 1 358 5 68 3 88 2 292 1 362 1 363 2 265 1 118 1 266 4 364 5 151 1 152 1 217 2 297 1 120 1 271 1 324 1 180 1 274 2 14 1 275 1 127 2 257 1 349 1 129 1 132 1 233 1 282 1 
237 3 63 3 332 6 26 6 240 1 87 5 27 1 358 9 68 8 289 1 245 1 171 1 292 1 363 6 265 3 118 3 266 7 364 9 176 1 151 3 217 6 120 2 271 6 272 1 180 1 324 2 274 6 127 5 99 5 257 4 349 2 129 1 132 3 233 2 84 1 282 2 235 1 
237 1 63 1 332 2 26 2 358 3 68 3 88 1 245 1 363 2 265 1 118 1 266 2 364 3 151 1 297 1 120 1 217 2 180 1 324 1 14 1 274 2 127 3 257 1 349 1 132 1 233 1 282 1 235 1 
237 2 63 2 332 4 26 4 358 4 68 5 88 2 245 1 171 1 363 4 265 2 118 2 266 3 364 4 176 1 151 2 217 4 120 1 297 1 272 1 180 1 324 1 14 1 274 4 127 4 257 2 349 1 132 2 233 1 282 1 235 1 
81 1 32 1 311 1 
81 1 327 1 
201 1 
81 1 301 1 9 1 
81 1 169 1 
81 1 9 1 
146 1 81 3 311 2 301 1 177 1 9 1 
344 1 345 3 375 1 316 1 145 1 2 1 258 1 202 2 131 1 265 1 135 1 51 1 309 7 205 3 208 2 151 1 136 4 
344 1 345 3 375 1 316 1 145 1 2 1 258 1 202 2 131 1 265 1 135 1 51 1 309 7 205 3 208 2 151 1 136 4 
344 1 345 3 375 1 316 1 145 1 2 1 258 1 202 2 131 1 265 1 135 1 351 1 51 1 309 7 205 3 208 2 151 1 136 4 
237 3 238 4 45 1 46 1 168 1 29 2 316 2 114 1 145 2 2 2 294 1 319 1 265 4 51 1 267 3 118 3 151 4 53 1 344 1 345 15 375 1 305 1 258 5 80 1 202 3 131 1 132 3 135 2 309 31 205 10 379 1 260 1 208 5 136 16 
45 2 29 4 316 1 291 1 145 1 2 1 265 1 51 1 151 1 53 2 153 1 344 1 345 4 80 2 258 1 202 2 131 1 135 1 309 9 205 4 379 2 260 1 208 3 136 5 
107 1 239 1 314 2 67 1 210 1 243 1 211 1 261 1 214 1 360 1 336 1 293 1 337 1 50 1 196 1 368 1 373 1 184 1 15 1 223 1 376 1 303 1 100 2 17 1 133 1 83 1 330 1 165 1 380 2 284 1 
107 1 239 1 314 3 241 1 67 1 210 1 243 1 214 1 261 2 360 1 336 1 293 1 337 1 50 1 196 1 368 1 252 1 184 1 15 1 223 1 303 1 100 2 17 1 133 1 83 1 330 1 165 1 380 3 283 1 284 1 
107 1 239 1 368 1 314 2 241 1 210 1 67 1 243 1 184 1 15 1 261 2 214 1 223 1 100 2 360 1 17 1 336 1 293 1 337 1 50 1 330 1 165 1 380 2 284 1 283 1 
368 1 314 1 138 1 157 1 252 1 210 1 67 2 142 1 15 1 214 1 223 1 112 1 303 1 17 2 293 2 337 2 81 1 117 1 7 1 105 1 196 1 9 1 380 1 
107 1 239 1 314 1 67 1 210 1 211 1 214 1 360 1 293 1 337 1 196 1 368 1 373 1 184 1 15 1 223 1 303 1 100 2 17 1 133 1 83 1 330 1 165 1 380 1 283 1 284 1 
370 1 
137 1 332 2 167 2 355 1 27 1 66 1 358 4 288 3 68 1 315 2 69 3 28 1 290 1 90 5 31 1 193 1 115 1 364 4 195 2 249 1 342 3 120 1 269 1 11 1 179 1 271 5 180 1 324 1 158 1 76 1 274 1 222 1 127 1 377 2 129 2 79 1 56 1 278 1 233 1 41 1 85 1 62 1 
137 1 332 2 167 2 355 1 27 1 66 1 358 4 288 3 68 1 315 2 69 3 28 1 290 1 90 5 31 1 193 1 115 1 364 4 195 2 249 1 342 3 120 1 11 1 269 1 179 1 271 5 180 1 324 1 158 1 76 1 274 1 222 1 127 1 377 2 129 2 79 1 56 1 278 1 233 1 41 1 85 1 62 1 
137 1 167 2 66 1 27 1 288 2 358 4 68 1 69 2 28 1 90 4 363 2 31 1 364 4 342 2 195 2 249 1 269 1 120 1 11 1 197 2 271 4 179 1 323 1 75 2 180 1 324 1 76 1 274 1 222 1 127 1 129 2 79 1 57 1 56 1 278 1 233 1 41 1 85 1 62 1 
137 1 332 2 138 1 288 2 142 1 290 1 90 4 342 2 195 2 249 1 9 1 11 1 157 2 15 1 57 1 56 1 61 1 62 1 167 2 27 1 210 1 66 1 358 5 68 2 69 2 315 2 214 2 28 1 363 2 31 1 74 1 364 5 120 1 269 1 271 6 368 2 179 1 180 1 324 1 76 1 274 2 222 1 223 2 127 2 377 2 229 1 129 3 79 1 130 1 278 1 81 1 233 1 41 1 85 1 282 1 
271 2 137 1 76 1 66 1 222 1 358 3 69 1 28 1 90 2 129 1 79 1 56 1 31 1 278 1 116 1 41 1 364 3 249 1 85 1 62 1 269 1 11 1 
271 1 137 1 180 1 76 1 66 1 288 1 222 1 358 3 28 1 127 1 90 3 129 1 79 1 56 1 31 1 278 1 116 1 41 1 364 3 249 1 85 1 62 1 269 1 11 1 
137 1 66 1 358 3 288 1 69 1 28 1 90 3 31 1 116 1 364 3 249 1 342 1 11 1 269 1 271 2 180 1 76 1 222 1 127 1 129 1 79 1 56 1 278 1 41 1 85 1 62 1 
137 1 332 2 288 4 290 1 90 6 193 1 342 4 249 1 195 2 11 1 158 1 56 1 62 1 167 2 355 1 66 1 27 1 358 5 68 1 69 4 315 2 359 1 28 1 31 1 115 1 116 1 364 5 269 1 120 1 271 7 179 1 180 5 324 1 76 1 222 1 274 1 127 5 377 2 79 1 129 3 278 1 41 1 233 1 85 1 
137 1 332 2 288 2 290 1 90 4 249 1 195 2 342 2 11 1 56 1 57 1 62 1 167 2 27 1 66 1 358 4 68 1 315 2 69 2 28 1 31 1 363 2 364 4 120 1 269 1 179 1 271 4 324 1 180 1 76 1 222 1 274 1 127 2 377 2 79 1 129 2 278 1 41 1 233 1 85 1 
137 1 332 2 167 2 355 1 66 1 27 1 288 2 358 4 68 1 69 2 315 2 28 1 290 1 90 4 31 1 193 1 115 1 364 4 342 2 195 2 249 1 11 1 269 1 120 1 271 4 179 1 180 1 324 1 76 1 274 1 222 1 127 1 377 2 129 2 79 1 56 1 278 1 233 1 41 1 85 1 62 1 
137 1 332 2 167 2 355 1 66 1 27 1 288 2 358 4 68 1 69 2 315 2 28 1 290 1 90 4 31 1 193 1 115 1 364 4 342 2 195 2 249 1 11 1 269 1 120 1 271 4 179 1 180 1 324 1 76 1 274 1 222 1 127 1 377 2 129 2 79 1 56 1 278 1 233 1 41 1 85 1 62 1 
137 1 167 2 66 1 190 1 27 1 288 2 358 4 68 1 69 2 28 1 90 4 363 2 31 1 193 1 340 1 364 4 342 2 195 2 249 1 11 1 269 1 120 1 197 2 271 4 179 1 323 1 75 2 180 1 324 1 76 1 274 1 222 1 127 1 129 2 79 1 56 1 278 1 233 1 41 1 85 1 62 1 
44 1 357 1 45 1 29 2 262 1 2 1 318 1 265 1 51 1 32 1 320 1 151 1 53 1 344 1 345 3 253 1 80 1 202 1 131 1 135 1 309 6 21 2 205 2 379 1 208 2 136 3 
237 2 238 3 44 11 357 4 45 2 46 1 29 4 1 1 318 11 319 1 265 1 52 1 296 1 267 3 118 1 320 2 151 2 53 2 345 6 182 1 253 1 378 1 258 1 80 2 132 2 204 1 21 1 309 14 205 2 379 2 208 1 43 1 136 8 
109 1 110 1 357 1 210 1 45 1 244 1 214 1 1 1 29 2 31 2 295 1 92 1 215 1 320 1 366 1 9 1 53 1 368 1 157 1 345 1 182 1 253 1 15 1 301 1 16 1 223 1 256 1 79 2 80 1 81 1 21 1 40 1 309 2 204 1 85 1 379 1 22 1 136 1 
237 2 44 7 45 3 334 2 287 1 244 2 1 1 2 1 295 1 51 1 341 1 148 2 151 3 9 2 53 3 344 1 345 10 157 1 253 3 15 2 301 2 16 2 256 2 258 4 202 1 308 1 21 2 204 1 309 20 205 8 208 4 109 1 110 1 357 7 210 2 214 3 29 6 113 2 31 3 318 7 265 3 118 2 320 3 365 2 270 2 368 3 182 1 223 3 79 3 80 3 131 1 132 2 81 2 135 1 40 1 379 3 85 1 283 1 136 10 
109 1 138 1 64 2 210 2 45 2 142 1 214 8 29 4 262 1 173 1 31 1 295 1 320 2 216 1 9 2 53 2 368 8 156 1 273 1 157 2 345 1 182 1 253 2 15 2 376 1 223 7 36 1 79 1 306 1 80 2 39 1 81 3 40 1 204 1 309 2 85 1 379 2 283 1 136 1 
237 1 109 1 44 1 357 1 45 1 29 2 1 1 361 1 31 1 318 1 265 1 118 1 320 1 151 1 53 1 345 2 253 1 199 1 79 1 80 1 132 1 40 1 309 3 205 1 379 1 85 1 208 1 313 1 136 1 
251 1 44 1 357 1 45 1 253 1 29 2 262 1 258 1 80 1 318 1 132 1 309 2 205 1 320 1 379 1 151 1 53 1 136 2 
155 1 345 2 44 1 357 1 45 1 253 1 29 2 262 1 80 1 318 1 265 1 309 2 118 1 205 1 320 1 379 1 208 1 53 1 
237 1 44 2 357 2 45 1 29 2 262 1 318 2 265 1 118 1 320 1 151 1 53 1 345 2 253 1 80 1 258 1 132 1 309 4 205 2 379 1 208 1 136 2 
251 1 44 1 357 1 45 1 253 1 29 2 36 1 258 1 80 1 318 1 132 1 309 2 205 1 320 1 379 1 151 1 53 1 136 2 
155 1 345 2 44 1 357 1 45 1 253 1 29 2 36 1 80 1 318 1 265 1 309 2 118 1 205 1 320 1 379 1 208 1 53 1 
237 1 44 2 357 2 45 1 29 2 318 2 265 1 118 1 320 1 151 1 53 1 345 2 253 1 36 1 80 1 258 1 132 1 309 4 205 2 379 1 208 1 136 2 
237 1 44 2 357 2 45 1 29 2 318 2 265 1 118 1 320 1 151 1 53 1 345 2 253 1 80 1 258 1 132 1 309 4 205 2 379 1 208 1 136 2 
210 1 334 1 45 1 244 1 214 1 29 2 31 1 320 1 9 1 53 1 368 1 157 1 345 1 182 1 253 1 15 1 301 1 16 1 223 1 256 1 79 1 80 1 81 1 204 1 21 1 309 2 379 1 136 1 
86 1 166 1 210 1 45 1 244 1 214 1 29 2 31 1 320 1 9 1 53 1 368 1 157 1 345 1 123 1 182 1 253 1 15 1 301 1 223 1 79 1 80 1 81 1 204 1 21 1 309 2 379 1 136 1 
237 1 44 2 357 2 45 1 29 2 1 1 318 2 265 1 118 1 320 1 151 1 53 1 345 2 253 1 80 1 258 1 132 1 309 4 205 2 379 1 208 1 136 2 
237 1 44 2 357 2 210 1 334 1 45 1 244 1 214 1 29 2 113 1 31 1 318 2 265 1 118 1 320 1 151 1 9 1 53 1 368 1 345 2 253 1 15 1 301 1 16 1 223 1 376 1 256 1 79 1 258 1 80 1 132 1 81 1 309 4 205 2 379 1 208 1 136 2 
237 1 109 1 44 1 357 1 45 1 29 2 1 1 361 1 31 1 318 1 265 1 118 1 320 1 151 1 53 1 345 1 34 1 253 1 79 1 258 1 80 1 132 1 40 1 309 3 205 1 379 1 85 1 313 1 136 2 
237 3 354 2 238 2 242 1 45 2 46 1 29 4 72 1 319 1 265 3 267 1 118 3 151 3 33 1 53 2 153 1 345 10 198 2 348 1 227 1 230 1 80 2 258 3 132 3 309 19 205 6 379 2 208 3 42 1 136 9 
237 3 354 4 238 2 242 1 45 3 46 2 29 6 72 1 48 1 265 2 248 1 267 2 118 2 367 1 151 3 33 2 53 3 153 1 121 1 345 12 220 1 198 1 162 1 230 1 258 2 80 3 132 3 309 26 205 4 260 2 379 3 208 2 42 2 136 14 
237 4 238 4 45 3 242 1 46 3 48 1 2 1 248 1 51 1 151 5 153 1 53 3 344 1 345 21 54 1 198 1 348 1 162 1 258 4 202 1 309 41 205 8 260 1 208 4 354 4 29 6 72 1 319 1 265 5 118 4 267 3 367 1 33 1 121 1 220 1 230 1 80 3 132 4 131 1 135 1 379 3 42 2 136 20 
237 4 354 4 238 4 242 1 45 4 46 3 29 8 72 1 48 1 2 1 319 1 265 4 51 1 248 1 267 3 118 3 367 1 151 5 33 1 53 4 153 1 344 1 121 1 54 1 220 1 345 18 198 1 348 1 162 1 230 1 80 4 258 3 202 1 131 1 132 4 135 1 309 38 205 7 260 2 379 4 208 4 42 2 136 20 
237 7 354 4 238 4 242 1 45 2 46 2 29 4 72 1 48 1 2 1 319 2 265 8 51 1 248 1 52 2 267 4 118 7 367 1 151 8 33 1 53 2 153 1 344 1 121 1 220 1 345 25 198 1 162 1 230 1 80 2 258 7 202 1 131 1 132 7 135 1 309 52 205 14 260 1 379 2 208 7 42 1 136 27 
285 1 122 1 102 1 160 1 281 1 255 1 170 1 71 1 10 1 187 1 
139 1 164 1 
285 1 192 1 58 1 255 1 170 1 71 1 10 1 128 1 187 1 
154 1 369 1 
328 1 203 1 321 1 
285 1 122 1 160 1 356 1 96 1 140 1 358 1 255 1 127 1 71 1 170 1 224 2 187 1 37 1 281 1 364 1 10 1 298 1 
285 1 122 1 160 1 356 1 96 1 140 1 358 1 255 1 127 1 71 1 170 1 224 2 187 1 37 1 281 1 364 1 10 1 298 1 
285 1 122 1 160 1 356 1 96 1 140 1 358 1 255 1 127 1 71 1 170 1 224 2 187 1 37 1 281 1 364 1 10 1 298 1 
154 1 369 1 321 1 
154 1 369 1 321 1 
328 1 203 1 
328 1 203 1 321 1 
228 1 19 1 
285 1 109 2 139 1 358 1 170 1 71 1 362 1 31 2 175 1 266 1 364 1 10 1 298 1 255 1 275 1 224 1 187 1 37 1 257 1 228 1 79 2 164 1 19 1 21 1 40 2 352 1 85 2 
64 2 210 1 45 1 214 2 1 1 29 2 173 1 31 2 93 1 320 1 94 1 9 1 53 1 368 2 156 1 345 1 182 1 253 1 15 1 55 1 223 2 326 1 78 1 79 2 80 1 81 1 204 1 309 2 85 2 379 1 136 1 
107 1 239 1 368 2 210 1 67 1 300 1 184 1 15 1 214 2 223 2 376 1 100 2 360 1 317 1 103 1 133 1 165 1 283 1 284 1 
107 1 239 1 368 1 108 1 67 1 300 1 210 1 184 1 15 1 214 1 223 1 100 2 360 1 133 1 165 1 283 1 284 1 
368 1 157 1 138 1 210 1 67 1 142 1 15 1 161 1 214 1 223 1 317 1 81 1 117 1 9 1 
107 1 239 1 368 1 67 1 300 1 210 1 184 1 15 1 214 1 223 1 100 2 360 1 317 1 103 1 133 1 165 1 283 1 284 1 
4 1 
109 2 45 1 334 1 210 1 244 1 214 1 29 2 31 3 320 1 150 1 9 1 53 1 368 1 345 1 157 1 182 1 253 1 15 1 301 1 223 1 16 1 256 1 79 3 80 1 232 1 81 1 21 1 309 1 40 2 379 1 85 2 313 2 
332 2 324 1 180 2 26 2 27 1 274 2 68 1 127 4 363 2 202 1 233 1 61 1 282 1 217 2 120 1 
180 1 20 1 32 1 274 1 68 1 127 1 35 1 
332 1 27 1 358 1 68 1 315 1 290 1 363 1 364 1 120 1 271 1 324 1 180 1 274 1 127 2 377 1 129 1 233 1 
237 2 332 6 339 1 148 2 151 2 9 1 157 1 15 2 301 1 304 2 311 2 61 1 353 2 63 2 209 2 26 6 210 1 27 3 358 5 68 8 213 2 214 1 363 6 265 2 118 2 364 5 177 1 120 3 217 6 368 1 271 5 180 1 324 3 183 1 274 7 223 1 127 7 327 3 129 3 278 2 132 2 81 6 233 3 282 2 381 1 234 2 235 2 
237 2 63 2 238 1 332 3 26 5 27 2 46 1 358 1 68 8 48 1 363 3 265 2 267 1 118 2 364 1 367 1 151 2 217 5 120 2 121 1 271 1 220 1 324 2 180 2 97 1 274 5 127 5 162 1 129 1 132 2 134 1 233 2 61 1 282 1 235 1 
63 1 109 1 27 1 358 1 68 1 172 1 2 1 31 1 115 1 364 1 150 1 151 1 120 1 324 1 374 1 274 1 126 1 101 1 79 1 56 1 131 1 135 1 233 1 40 1 85 1 313 1 
324 1 180 1 27 1 274 1 68 1 35 1 127 1 20 1 233 1 120 1 
237 1 63 1 332 2 26 2 274 2 68 2 127 2 363 2 132 1 265 1 118 1 151 1 217 2 235 1 
271 1 129 1 180 1 358 1 364 1 127 1 
25 1 138 1 210 1 27 1 358 3 142 1 68 2 214 4 245 1 5 1 74 1 364 3 9 1 120 2 368 4 271 4 371 1 324 2 157 2 274 2 15 1 223 4 129 2 130 1 81 1 259 2 233 2 61 2 282 2 
254 1 10 1 187 1 
228 1 122 1 8 1 10 1 187 1 
254 1 10 1 187 1 
254 1 10 1 187 1 
49 1 10 1 187 1 
49 1 10 1 187 1 
49 1 10 1 187 1 
10 1 187 1 
285 1 255 1 
344 1 345 4 45 2 29 4 2 1 258 1 80 2 202 1 131 1 265 1 51 1 135 1 309 8 205 3 379 2 260 1 208 2 151 1 53 2 136 4 
344 1 2 1 345 3 202 1 131 1 265 1 135 1 51 1 32 1 309 6 205 2 208 2 151 1 136 3 
237 1 345 2 45 1 29 2 80 1 258 1 132 1 265 1 118 1 309 4 205 2 104 1 379 1 208 1 151 1 53 1 136 2 
237 1 238 2 345 4 46 1 258 1 319 1 132 1 265 1 118 1 309 7 267 1 205 2 208 1 151 1 136 3 
237 2 238 2 45 2 29 4 2 2 319 1 265 3 51 1 267 2 296 1 118 2 52 1 151 3 53 2 344 1 345 12 258 4 80 2 202 1 131 1 132 2 135 2 309 23 205 9 260 2 379 2 312 1 208 5 136 11 
238 1 345 1 309 1 
309 1 267 1 136 1 
237 1 345 3 45 1 29 2 80 1 258 1 132 1 265 1 309 6 118 1 104 1 205 3 379 1 148 1 208 2 151 1 53 1 136 3 
237 2 238 1 45 1 46 1 29 2 48 1 265 2 267 1 118 2 151 2 367 1 53 1 153 1 121 1 345 6 220 1 162 1 258 1 80 1 132 2 309 12 205 2 379 1 208 1 136 6 
345 3 2 1 258 1 131 1 265 1 135 1 309 6 205 2 208 1 151 1 136 3 
344 1 345 2 45 1 29 2 2 1 258 1 80 1 135 1 51 1 309 3 205 2 312 1 260 1 379 1 208 1 53 1 136 1 
345 3 126 1 2 1 131 1 265 1 135 1 309 5 205 1 208 1 151 1 136 2 
45 1 29 2 80 1 258 1 132 1 309 2 205 1 379 1 151 1 153 1 53 1 136 2 
237 1 345 2 45 1 29 2 80 1 258 1 132 1 265 1 118 1 309 4 205 2 379 1 208 1 151 1 153 1 53 1 136 2 
345 2 45 3 348 1 29 6 2 1 80 3 258 1 135 1 309 3 205 2 260 1 312 1 379 3 208 1 153 1 53 3 136 1 
237 3 238 4 45 5 46 1 168 1 29 10 114 1 2 3 294 1 319 1 265 5 51 1 267 3 118 3 151 5 53 5 153 1 344 1 345 18 348 1 80 5 258 5 202 1 131 2 132 3 135 3 309 34 104 1 205 12 312 1 260 2 379 5 208 7 136 16 
238 1 45 1 46 1 29 2 2 1 265 1 51 1 267 1 151 1 53 1 153 1 344 1 345 4 220 1 80 1 202 1 131 1 135 1 309 8 205 2 379 1 208 2 136 4 
237 1 238 2 45 2 46 1 29 4 2 1 319 1 265 1 51 1 267 1 151 2 153 1 53 2 344 1 345 5 220 1 80 2 258 1 202 1 131 1 132 1 135 1 309 11 104 1 205 3 379 2 208 2 136 6 
237 2 238 1 45 3 46 1 29 6 48 1 2 1 265 3 51 1 267 1 118 2 367 1 151 3 53 3 153 1 344 1 121 1 345 10 220 1 162 1 258 1 80 3 202 1 131 1 132 2 135 1 309 19 104 1 205 4 379 3 260 1 208 3 136 9 
237 2 238 1 45 3 46 1 29 6 48 1 2 1 265 2 51 1 267 1 118 1 151 3 367 1 53 3 153 1 344 1 121 1 345 7 220 1 162 1 258 2 80 3 202 1 131 1 132 2 135 1 309 17 104 1 205 5 260 1 379 3 208 3 136 10 
238 1 45 1 46 1 29 2 2 1 265 1 51 1 267 1 151 1 53 1 153 1 344 1 345 4 220 1 80 1 202 1 131 1 135 1 309 8 205 2 379 1 208 2 136 4 
237 2 238 1 45 1 46 1 29 2 48 1 265 2 267 1 118 2 151 2 367 1 53 1 153 1 121 1 345 6 220 1 162 1 258 1 80 1 132 2 309 12 205 2 379 1 208 1 136 6 
237 2 238 1 45 4 46 1 29 8 48 1 2 1 265 2 51 1 267 1 118 1 367 1 151 3 53 4 153 1 344 1 121 1 345 8 220 1 162 1 258 2 80 4 202 1 131 1 132 2 135 1 309 18 104 1 205 5 379 4 260 2 208 3 136 10 
237 3 238 1 45 4 46 1 29 8 48 1 265 2 267 1 118 2 367 1 151 3 153 1 53 4 121 1 345 7 220 1 348 1 162 1 258 3 80 4 132 3 309 16 205 6 379 4 260 2 208 3 136 9 
344 2 345 4 2 3 258 3 131 1 265 1 51 1 135 3 309 7 205 6 208 3 151 1 136 3 
237 2 238 1 45 4 46 1 29 8 48 1 2 1 265 2 51 1 267 1 118 1 367 1 151 3 153 1 53 4 344 1 121 1 345 8 220 1 348 1 162 1 258 1 80 4 202 1 131 1 132 2 135 1 309 18 205 4 379 4 260 2 208 3 136 10 
23 1 79 1 31 1 76 1 21 1 194 1 85 1 
23 1 76 1 65 1 333 1 191 1 276 1 163 1 79 1 31 1 21 1 194 1 85 1 
368 1 138 1 157 1 210 1 81 1 32 1 142 1 15 1 214 1 223 1 9 1 
109 1 368 1 157 1 210 1 244 1 15 1 301 1 214 1 223 1 256 1 79 2 31 2 295 1 81 1 21 1 40 1 85 1 9 1 
109 1 210 1 244 1 214 1 169 1 31 2 295 1 9 2 250 1 368 1 222 1 15 1 301 2 223 1 256 1 79 2 56 1 81 3 259 1 21 1 40 2 41 1 85 2 
86 1 109 1 210 1 244 1 214 2 169 1 31 2 295 1 9 2 250 1 368 2 222 1 15 1 301 2 223 2 79 2 56 1 59 1 81 3 259 1 21 1 40 2 41 1 85 2 
210 1 358 2 214 3 169 1 89 1 364 2 9 1 250 1 271 1 368 3 180 1 157 1 221 1 15 1 301 1 223 3 127 1 327 1 278 1 59 1 81 4 259 1 311 1 
250 1 368 3 271 1 157 1 180 1 210 1 358 2 15 1 301 1 214 3 169 1 223 3 127 1 304 1 327 1 278 1 59 1 81 4 259 1 364 2 311 1 9 1 
368 1 210 1 15 1 214 1 216 1 223 1 
368 7 273 1 157 2 64 1 210 2 141 1 15 3 214 7 301 1 376 1 143 1 223 6 173 1 306 1 39 1 280 1 81 3 216 1 177 1 9 2 283 1 
109 1 44 1 357 1 210 1 45 2 334 1 244 1 214 1 1 1 29 4 113 1 2 1 31 2 318 1 295 1 265 1 51 1 320 2 151 1 9 1 53 2 270 1 344 1 368 1 345 3 253 2 15 1 301 1 55 1 376 1 223 1 16 1 256 1 79 2 80 2 202 1 131 1 81 1 135 1 21 2 309 6 40 1 205 2 85 1 379 2 208 2 136 3 
353 1 27 2 358 3 68 1 214 1 213 1 266 1 364 3 120 2 368 1 271 2 371 1 180 1 157 1 324 2 274 1 223 1 127 1 35 1 304 1 327 1 129 1 278 1 81 2 20 1 233 2 311 1 234 1 
368 2 183 1 210 1 15 2 214 2 301 1 376 1 223 2 81 2 311 1 216 1 177 1 9 1 
368 4 157 1 138 1 210 1 142 1 15 1 214 4 223 4 376 1 30 1 59 1 81 1 9 1 
368 2 210 1 141 1 15 2 214 2 301 1 143 1 223 2 91 1 81 1 259 1 341 1 322 1 9 1 
239 1 368 1 157 1 210 1 184 1 15 1 214 1 223 1 100 1 284 1 
368 2 173 1 210 1 81 1 15 1 214 2 223 2 376 1 326 1 9 1 283 1 
368 5 138 1 157 1 273 1 210 2 142 1 15 2 214 5 223 4 376 1 30 1 173 1 306 1 81 3 259 1 9 2 
95 1 368 5 138 1 157 1 210 2 142 1 15 2 214 5 223 4 376 1 30 1 173 1 306 1 81 3 259 1 9 2 
109 1 368 1 86 1 157 1 210 1 244 1 15 1 301 1 214 1 223 1 79 2 31 2 295 1 81 1 21 1 40 1 85 1 9 1 
368 1 210 1 141 1 15 2 214 1 301 1 143 1 223 1 280 1 81 1 259 1 177 1 9 1 
307 1 181 1 0 1 21 1 70 1 
180 1 181 1 0 2 222 1 358 2 70 2 127 1 246 1 56 1 307 2 278 1 21 1 41 1 266 1 310 1 364 2 268 1 119 1 11 1 
78 1 79 1 31 1 181 1 307 1 93 1 94 1 85 1 70 1 
246 1 181 1 119 1 
236 1 336 1 314 3 50 1 231 1 243 1 211 1 261 1 196 1 303 1 380 3 
336 1 98 1 186 1 335 1 
336 1 50 1 
336 1 50 1 243 1 32 1 
336 1 314 1 50 1 243 1 196 1 303 1 380 1 
337 1 380 1 17 1 
336 1 314 3 50 1 231 2 243 1 125 1 211 1 225 1 196 1 303 1 380 3 263 1 
336 1 314 2 50 1 243 1 147 1 261 1 196 1 303 1 380 2 
314 1 211 1 184 1 303 1 186 1 100 1 360 1 336 1 264 1 196 1 380 1 
336 1 314 1 50 1 211 1 196 1 303 1 380 1 
314 1 50 2 243 1 211 1 196 1 303 1 380 1 
314 2 219 1 211 1 303 2 226 1 336 1 174 1 50 1 196 2 380 2 
236 1 314 3 243 1 211 1 261 2 303 1 335 1 186 1 336 2 50 1 196 1 380 3 106 1 
107 1 239 1 314 2 243 1 211 1 184 1 261 1 303 1 100 2 360 1 336 1 18 1 50 1 196 1 380 2 
314 4 243 1 211 1 261 2 77 1 303 2 335 1 186 1 336 2 50 1 147 1 196 2 380 4 
336 1 314 1 50 1 243 1 211 1 196 1 303 1 380 1 
314 4 243 2 125 1 261 2 98 1 225 1 303 1 335 1 186 1 336 3 50 2 231 1 196 1 380 4 
336 1 189 1 314 2 50 1 243 1 13 1 325 1 211 1 261 1 196 1 303 1 380 2 
314 3 243 1 125 2 211 1 225 1 303 1 336 1 50 1 231 2 196 1 380 3 178 1 
336 2 350 1 185 1 144 2 
299 1 314 1 211 1 196 1 303 1 380 1 
336 1 236 1 314 2 50 1 243 1 211 1 261 1 196 1 303 1 380 2 
24 1 
336 1 314 1 50 1 243 1 211 1 196 1 303 1 380 1 

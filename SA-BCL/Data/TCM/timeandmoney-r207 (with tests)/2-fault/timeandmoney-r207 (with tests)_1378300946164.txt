#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:isNegative()Z | CONSTANT | 5248 | 0 -> -1
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | STATEMENT | 817 | stmt -> ;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
287 2 74 1 120 1 239 1 121 1 211 2 78 2 327 3 304 1 123 1 242 6 34 1 161 1 293 9 244 2 361 1 271 2 219 1 166 1 36 2 277 1 108 2 176 9 44 5 135 1 89 1 316 1 300 4 
287 2 74 1 120 1 239 1 121 1 211 2 78 2 327 3 304 1 123 1 242 6 34 1 161 1 293 9 244 2 361 1 271 2 219 1 166 1 36 2 277 1 108 2 176 9 44 5 135 1 89 1 316 1 300 4 
287 2 74 1 120 1 239 1 121 1 211 2 78 2 327 4 304 1 123 1 242 7 34 1 161 1 293 10 244 2 361 1 271 2 219 1 166 1 36 2 277 1 108 2 176 10 44 6 135 1 89 1 316 1 300 5 
287 2 74 1 120 1 239 1 121 1 211 2 78 1 327 2 304 1 123 1 242 4 34 1 161 1 293 7 244 2 361 1 271 2 219 1 166 1 36 2 108 2 176 7 44 4 135 1 89 1 316 1 300 3 
36 1 74 1 277 1 120 1 108 1 211 1 78 2 327 1 304 1 176 4 44 3 242 3 34 1 316 1 293 4 300 2 244 1 271 1 
287 1 36 1 166 1 74 1 211 1 304 1 176 2 158 1 329 1 44 1 267 1 34 1 161 1 293 2 244 1 271 1 
287 1 36 2 74 1 327 1 304 1 176 3 44 2 242 1 34 1 135 1 293 3 300 1 271 2 
287 1 74 1 120 1 121 1 211 1 78 2 327 3 358 1 304 1 123 1 242 7 34 1 216 1 293 9 244 1 271 2 36 2 277 1 108 1 176 9 44 5 135 1 316 1 300 4 
287 1 74 1 120 1 121 1 211 1 78 2 327 3 358 1 304 1 123 1 242 7 34 1 216 1 293 9 244 1 271 2 36 2 277 1 108 1 176 9 44 5 135 1 316 1 300 4 
226 1 77 1 359 1 
45 2 77 1 270 1 
367 2 83 2 284 2 210 1 290 2 347 2 70 2 336 1 
26 2 27 2 1 1 210 1 290 2 307 2 59 1 126 2 333 1 125 1 162 1 365 1 336 1 339 1 367 2 107 1 368 1 340 2 83 3 341 1 170 1 39 1 247 1 228 1 40 1 281 1 42 1 347 2 282 1 284 3 134 1 202 1 137 1 375 1 67 1 70 2 69 1 
367 1 83 1 284 1 356 1 290 1 8 1 347 1 70 1 336 1 148 1 
354 1 367 1 83 1 77 1 157 1 357 1 99 1 65 1 284 1 136 1 359 1 25 1 148 1 15 1 
367 1 83 1 77 1 157 1 357 1 290 1 99 1 347 1 65 2 284 1 136 1 359 1 70 1 148 1 15 2 
46 1 303 1 9 1 65 1 15 1 
77 1 359 1 303 1 24 1 321 1 9 1 65 2 15 2 
9 1 65 1 15 1 
367 1 83 1 356 1 303 1 290 1 8 1 347 1 65 1 284 1 115 1 336 1 70 1 148 1 15 1 
77 1 
253 1 77 1 359 1 303 1 24 1 9 1 65 2 15 2 
76 1 289 1 77 1 296 1 28 1 149 2 303 2 65 5 9 2 214 1 254 1 359 1 234 1 68 1 24 1 377 2 257 1 15 5 378 2 
226 1 210 1 
367 2 49 1 83 2 210 2 290 1 347 1 284 2 205 1 70 1 
285 1 278 1 256 1 
339 1 26 1 340 1 83 1 341 1 27 1 228 1 210 1 40 1 41 1 282 1 284 1 134 1 137 1 59 1 125 1 
339 1 367 1 26 1 340 1 341 1 83 2 27 1 278 1 228 1 53 1 290 1 40 1 305 1 347 1 282 1 284 2 134 1 137 1 59 1 125 1 
354 1 325 1 367 5 49 1 83 5 210 1 345 1 53 2 290 4 347 4 305 1 284 5 70 1 380 1 
367 2 83 2 284 2 290 2 133 1 8 1 347 2 148 1 
367 3 83 3 284 3 210 1 53 1 290 3 70 1 347 3 
367 1 83 1 284 1 290 1 8 1 347 1 148 1 
367 1 49 1 83 1 284 1 205 1 290 1 347 1 70 1 148 1 
26 1 49 1 27 1 157 1 210 1 357 1 290 3 53 1 100 1 99 1 305 1 307 2 101 1 59 1 126 1 333 1 125 1 365 1 336 1 148 1 15 1 339 1 367 3 107 1 368 1 340 1 341 1 83 4 39 1 228 1 40 1 281 1 42 1 347 3 65 1 282 1 284 4 134 1 202 1 136 1 137 1 375 1 67 1 70 2 
354 1 367 2 83 2 284 2 210 1 345 1 290 1 53 1 347 1 
367 3 49 1 83 3 238 1 77 1 157 1 357 1 53 2 290 3 99 1 305 1 347 3 65 1 101 1 284 3 136 1 70 1 15 1 148 1 
367 2 49 1 83 2 278 1 53 1 290 2 347 2 284 2 256 1 70 1 
26 1 339 1 340 1 83 1 341 1 27 1 228 1 210 1 40 1 282 1 284 1 134 1 137 1 59 1 125 1 
26 1 339 1 340 1 83 1 341 1 27 1 84 1 198 1 210 1 40 1 284 1 134 1 137 1 59 1 125 1 
1 2 262 1 331 1 307 2 268 1 333 1 126 4 81 1 365 1 337 1 164 1 368 1 107 2 275 1 245 1 278 2 39 1 175 1 230 1 42 1 152 1 202 1 285 2 256 2 
367 1 83 1 284 1 157 1 290 1 347 1 133 1 148 1 
4 1 353 1 
4 1 353 1 
184 1 4 1 353 1 308 1 
184 1 4 1 353 1 308 1 
184 1 308 1 
373 1 4 1 353 1 
373 1 4 1 353 1 
373 1 4 1 353 1 
72 1 184 1 4 2 353 2 291 1 308 1 
57 1 4 1 353 1 
178 1 4 1 353 1 
178 1 4 1 353 1 
178 1 4 1 353 1 
258 1 210 1 4 1 290 2 57 1 79 1 160 1 15 1 367 2 83 2 224 1 295 1 280 1 311 1 150 1 347 2 65 1 314 1 284 2 21 1 348 1 23 1 353 1 139 1 
72 1 326 1 224 2 77 1 4 2 280 2 311 2 29 2 150 2 65 2 151 1 141 1 21 1 79 3 22 1 243 1 335 1 353 2 15 2 
108 1 211 1 244 1 
211 1 244 1 329 1 
288 1 112 1 108 2 244 3 116 1 329 1 
288 1 113 1 108 1 244 2 116 1 329 1 
288 2 108 1 244 2 116 1 329 1 
258 1 94 2 95 1 77 2 186 1 262 1 303 4 54 2 187 1 9 1 331 1 142 1 144 1 270 1 359 1 272 1 220 2 15 5 294 1 275 1 245 1 296 2 149 1 65 5 348 1 45 3 254 3 139 1 68 1 24 1 377 1 378 1 
0 5 77 5 28 1 262 3 303 7 54 6 9 6 265 1 331 3 142 1 144 2 146 1 270 3 359 1 272 2 221 1 220 6 15 9 294 3 275 3 245 3 296 6 149 2 111 1 65 9 315 1 45 9 254 8 46 5 286 1 139 4 24 1 68 1 377 2 378 2 
94 1 95 1 77 3 28 1 186 1 303 2 262 1 54 2 331 1 144 1 359 1 270 2 272 1 15 3 220 2 294 1 275 1 245 1 296 2 149 1 65 3 45 4 254 3 139 1 377 1 378 1 
94 2 95 1 77 4 28 1 186 1 303 3 262 2 54 4 331 2 144 1 359 1 270 3 146 1 272 1 221 1 220 4 15 4 294 2 275 2 245 2 296 4 149 1 65 4 315 1 45 7 254 5 139 2 377 1 378 1 
339 1 226 1 212 1 
339 1 250 1 
132 1 
339 1 134 1 59 1 
339 1 35 1 
339 1 59 1 
339 3 134 1 177 1 59 1 212 2 5 1 
164 2 274 2 107 3 196 1 275 1 93 1 129 1 1 4 197 1 310 1 328 1 188 1 331 1 268 3 126 7 363 1 14 1 
164 2 274 2 107 3 196 1 275 1 93 1 129 1 1 4 197 1 310 1 328 1 188 1 331 1 268 3 126 7 363 1 14 1 
164 2 274 2 107 3 196 1 275 1 93 1 129 1 1 4 197 1 310 1 328 1 188 1 331 1 268 3 126 7 218 1 363 1 14 1 
93 2 50 1 140 1 1 16 209 1 98 4 262 3 328 1 188 1 307 2 331 4 268 10 190 3 333 1 126 31 363 1 14 1 274 3 164 5 196 2 368 1 107 15 294 3 195 1 275 4 129 2 245 3 197 5 172 1 39 1 310 2 249 1 42 1 233 1 
119 1 93 1 1 5 328 1 188 1 331 1 307 4 268 4 333 2 126 9 364 1 14 1 274 2 164 3 368 2 107 4 196 1 275 1 129 1 197 1 39 2 310 1 42 2 233 1 
26 1 287 1 74 1 27 1 261 1 96 1 211 1 304 1 329 1 242 1 34 1 58 1 215 1 293 2 244 2 360 1 271 1 340 1 36 1 62 1 341 1 108 1 17 1 176 2 44 1 252 1 112 1 137 1 138 1 322 1 
26 1 287 1 74 1 27 1 261 1 211 1 329 1 11 1 242 2 34 1 58 1 215 1 293 3 244 2 271 1 366 1 340 1 36 1 62 1 341 1 108 1 17 1 176 3 251 1 44 1 112 1 252 1 137 1 138 1 322 1 
287 1 26 1 74 1 27 1 261 1 211 1 329 1 11 1 242 2 34 1 58 1 215 1 293 2 244 2 340 1 341 1 17 1 108 1 176 2 251 1 44 1 252 1 112 1 137 1 138 1 
26 1 287 2 27 1 156 1 213 1 215 2 293 1 59 1 271 1 13 1 366 1 339 1 340 1 36 1 341 1 17 2 63 1 40 1 298 1 176 1 137 1 138 2 117 1 
26 1 287 1 27 1 261 1 96 1 211 1 304 1 329 1 58 1 215 1 293 1 244 2 271 1 340 1 36 1 62 1 341 1 108 1 17 1 176 1 251 1 252 1 112 1 137 1 138 1 322 1 
12 1 
97 1 99 1 9 6 102 4 144 1 104 1 59 1 13 1 15 5 148 1 339 1 340 2 341 1 296 2 149 1 298 1 65 5 201 2 350 2 153 1 254 2 204 1 352 1 24 3 68 1 25 1 26 2 354 1 73 1 27 2 77 2 157 1 357 1 266 1 269 1 359 1 270 2 163 2 367 1 165 1 168 1 83 1 276 1 38 2 40 2 284 1 45 2 374 1 136 1 90 2 137 1 319 2 377 1 182 2 378 1 
354 1 157 1 357 1 99 1 9 2 266 1 102 2 104 1 15 3 148 1 367 1 165 1 168 1 83 1 38 1 65 3 284 1 253 1 204 1 136 1 24 1 25 1 
354 1 77 1 157 1 357 1 99 1 9 1 266 1 102 3 104 1 359 1 15 3 148 1 367 1 165 1 168 1 83 1 65 3 284 1 253 1 204 1 136 1 319 1 24 1 25 1 
354 1 77 1 157 1 357 1 99 1 9 2 266 1 102 3 104 1 359 1 15 3 148 1 367 1 165 1 168 1 83 1 38 1 65 3 284 1 253 1 204 1 136 1 90 1 319 1 24 1 25 1 
185 1 99 1 9 7 102 6 104 1 148 1 15 5 342 1 296 1 149 1 65 5 253 1 201 2 350 2 204 1 254 1 351 1 352 1 24 3 68 1 25 1 354 1 355 1 73 1 77 5 157 1 357 1 263 1 266 1 359 5 270 2 163 2 165 1 367 1 168 1 83 1 38 4 284 1 136 1 90 4 319 4 377 1 378 1 182 2 
99 1 9 4 102 4 104 1 148 1 15 4 296 1 149 1 65 4 201 2 350 2 204 1 254 1 352 1 68 1 24 2 25 1 354 1 73 1 77 2 157 1 357 1 266 1 270 2 359 1 163 2 165 1 367 1 168 1 83 1 276 1 38 2 284 1 45 2 136 1 90 2 319 2 377 1 378 1 182 2 
354 1 73 1 77 1 185 1 157 1 357 1 263 1 99 1 9 4 266 1 102 4 104 1 359 1 270 2 163 2 15 4 148 1 367 1 165 1 168 1 83 1 38 2 296 1 149 1 65 4 284 1 201 2 350 2 254 1 204 1 136 1 90 2 352 1 351 1 319 2 24 2 68 1 377 1 182 2 378 1 25 1 
354 1 73 1 77 1 185 1 157 1 357 1 263 1 99 1 9 4 266 1 102 4 104 1 359 1 270 2 163 2 15 4 148 1 367 1 165 1 168 1 83 1 38 2 296 1 149 1 65 4 284 1 201 2 350 2 254 1 204 1 136 1 90 2 352 1 351 1 319 2 24 2 68 1 377 1 182 2 378 1 25 1 
354 1 73 1 260 2 77 1 185 1 157 1 357 1 99 1 122 1 240 1 9 4 266 1 102 4 104 1 359 1 15 4 148 1 367 1 165 1 168 1 83 1 38 2 309 2 296 1 149 1 65 4 284 1 201 2 45 2 254 1 204 1 136 1 90 2 319 2 24 2 68 1 235 1 377 1 182 2 378 1 25 1 
354 1 355 1 73 1 77 1 185 1 157 1 357 1 263 1 99 1 9 5 266 1 102 5 104 1 359 1 270 2 163 2 15 4 148 1 367 1 165 1 168 1 83 1 38 3 296 1 149 1 65 4 284 1 201 2 350 2 254 1 204 1 136 1 90 3 352 1 351 1 319 3 24 2 68 1 377 1 182 2 378 1 25 1 
354 1 355 1 73 1 77 1 185 1 157 1 357 1 263 1 99 1 9 5 266 1 102 5 104 1 359 1 270 2 163 2 15 4 148 1 367 1 165 1 168 1 83 1 38 3 296 1 149 1 65 4 284 1 201 2 350 2 254 1 204 1 136 1 90 3 352 1 351 1 319 3 24 2 68 1 377 1 182 2 378 1 25 1 
99 1 9 4 102 4 104 1 148 1 15 4 296 1 149 1 65 4 201 2 204 1 254 1 68 1 24 2 25 1 354 1 73 1 260 2 77 1 157 1 357 1 122 1 266 1 359 1 165 1 367 1 168 1 83 1 276 1 309 2 38 2 284 1 45 2 136 1 90 2 319 2 377 1 378 1 182 2 
274 1 164 2 107 3 196 1 368 1 275 1 226 1 93 1 1 3 278 1 39 1 210 2 328 1 42 1 188 1 331 1 307 2 268 2 152 1 202 1 285 1 126 6 333 1 256 1 365 1 14 1 
237 1 50 1 1 8 98 3 210 1 262 2 307 4 331 1 268 2 190 3 145 1 333 2 126 14 217 1 365 2 164 1 107 6 368 2 294 2 275 2 170 1 245 1 197 1 199 1 278 11 39 2 281 1 249 1 42 2 372 1 202 1 285 11 256 4 
26 1 27 1 1 1 210 1 290 1 53 1 305 1 307 2 59 1 125 1 333 1 126 2 365 1 339 1 367 1 340 1 368 1 107 1 341 1 83 2 369 1 169 1 170 1 228 1 39 1 40 1 41 1 281 1 42 1 347 1 282 1 284 2 134 1 372 1 202 1 299 1 137 1 256 1 
93 1 1 10 53 1 290 1 328 1 188 1 331 3 59 2 333 3 14 1 339 2 196 1 107 10 340 3 294 2 341 2 245 2 197 4 110 1 18 2 346 2 347 1 251 1 202 3 256 7 67 2 26 3 208 1 27 3 302 1 210 2 262 2 305 1 30 2 307 6 268 8 126 20 125 2 365 3 274 1 164 4 367 1 368 3 83 3 275 3 170 1 278 7 39 3 228 2 40 1 371 2 281 1 42 3 282 2 284 3 372 1 134 2 285 7 137 2 
26 7 27 8 75 1 1 1 290 1 53 1 55 1 306 1 307 4 33 1 59 2 333 2 126 2 360 1 162 2 13 1 365 2 367 1 339 3 340 8 368 2 107 1 83 1 341 2 170 1 39 2 109 1 40 2 298 1 281 1 347 1 42 2 251 1 284 1 152 1 203 1 202 2 137 2 379 1 
49 1 1 1 290 1 262 1 307 2 331 1 268 1 333 1 126 3 365 1 164 1 367 1 368 1 106 1 294 1 107 2 83 1 275 1 245 1 278 1 39 1 347 1 42 1 284 1 372 1 202 1 285 1 256 1 70 1 
368 1 275 1 1 2 197 1 278 1 39 1 262 1 42 1 307 2 268 1 152 1 202 1 285 1 126 2 333 1 256 1 365 1 337 1 
164 1 368 1 107 2 245 1 278 1 39 1 42 1 230 1 307 2 331 1 268 1 152 1 202 1 285 1 126 2 333 1 256 1 365 1 
1 2 262 1 307 2 331 1 268 2 333 1 126 4 365 1 164 1 294 1 368 1 107 2 275 1 245 1 197 1 278 2 39 1 42 1 152 1 202 1 285 2 256 2 
368 1 275 1 75 1 1 2 197 1 278 1 39 1 262 1 42 1 307 2 268 1 202 1 285 1 126 2 333 1 256 1 365 1 337 1 
164 1 368 1 107 2 75 1 245 1 278 1 39 1 42 1 230 1 307 2 331 1 268 1 202 1 285 1 126 2 333 1 256 1 365 1 
1 2 75 1 262 1 307 2 331 1 268 2 333 1 126 4 365 1 164 1 294 1 368 1 107 2 275 1 245 1 197 1 278 2 39 1 42 1 202 1 285 2 256 2 
164 1 107 2 368 1 294 1 275 1 245 1 1 2 197 1 278 2 39 1 262 1 42 1 331 1 307 2 268 2 202 1 285 2 333 1 126 4 256 2 365 1 
26 1 27 1 1 1 210 1 307 2 59 1 126 2 125 1 333 1 365 1 339 1 340 1 368 1 107 1 341 1 83 1 170 1 228 1 39 1 40 1 281 1 42 1 282 1 284 1 134 1 202 1 137 1 67 1 
26 1 27 1 1 1 210 1 307 2 59 1 126 2 125 1 333 1 365 1 339 1 340 1 368 1 107 1 341 1 83 1 170 1 84 1 198 1 39 1 40 1 281 1 313 1 42 1 284 1 134 1 202 1 137 1 
1 2 262 1 307 2 331 1 268 2 333 1 126 4 365 1 164 1 294 1 368 1 107 2 275 1 245 1 197 1 278 2 39 1 42 1 372 1 202 1 285 2 256 2 
26 1 27 1 1 2 262 1 331 1 307 2 268 2 59 1 126 4 125 1 333 1 360 1 365 1 164 1 339 1 107 2 340 1 368 1 294 1 275 1 341 1 83 1 245 1 197 1 278 2 228 1 39 1 18 1 42 1 282 1 284 1 134 1 202 1 285 2 137 1 256 2 67 1 
49 1 1 2 290 1 262 1 331 1 307 2 268 1 191 1 333 1 126 3 365 1 367 1 107 1 368 1 294 1 83 1 275 1 245 1 197 1 278 1 39 1 347 1 42 1 284 1 372 1 202 1 285 1 256 1 70 1 
50 1 1 9 98 2 262 3 307 4 331 3 103 1 268 6 190 1 333 2 126 19 364 1 164 3 368 2 107 10 294 3 275 3 225 1 128 1 245 3 197 3 86 2 39 2 131 1 344 2 312 1 249 1 42 2 91 1 47 1 
259 1 50 2 1 14 98 2 262 3 331 2 307 6 268 4 103 1 190 2 333 3 126 26 334 1 364 1 164 2 107 12 368 3 37 1 294 3 275 3 128 1 16 1 245 2 197 2 86 1 39 3 131 1 344 4 174 1 87 1 42 3 233 2 91 2 47 2 
324 1 259 1 93 1 50 3 1 20 98 4 262 4 328 1 188 1 307 6 331 5 103 1 268 8 190 3 333 3 126 41 334 1 14 1 364 1 274 1 164 4 196 1 37 1 368 3 107 21 294 4 275 5 225 1 16 1 128 1 245 4 197 4 86 1 39 3 131 1 174 1 344 4 87 1 249 1 42 3 233 1 91 1 47 2 
324 1 259 1 93 1 50 3 1 20 98 4 262 4 328 1 188 1 307 8 331 4 103 1 268 7 190 3 333 4 126 38 334 1 14 1 364 1 274 1 164 4 196 1 37 1 368 4 107 18 294 4 275 5 225 1 16 1 128 1 245 3 197 3 86 1 39 4 131 1 174 1 344 4 87 1 249 1 42 4 233 2 91 1 47 2 
259 1 93 1 50 2 1 27 98 4 262 7 328 1 188 1 307 4 331 8 103 1 268 14 190 4 333 2 126 52 334 1 14 1 364 1 274 1 164 7 196 1 37 1 368 2 107 25 294 7 275 8 16 1 128 1 245 7 197 7 199 2 86 1 39 2 131 1 174 1 344 4 87 1 249 2 42 2 233 1 91 1 47 1 
72 1 326 1 292 1 224 1 243 1 4 1 280 1 353 1 311 1 150 1 
57 1 160 1 
124 1 88 1 224 1 4 1 280 1 318 1 353 1 311 1 150 1 
373 1 246 1 
178 1 291 1 320 1 
72 1 326 1 224 1 77 1 4 1 280 1 311 1 29 1 150 1 65 1 141 1 21 1 79 2 22 1 243 1 335 1 353 1 15 1 
72 1 326 1 224 1 77 1 4 1 280 1 311 1 29 1 150 1 65 1 141 1 21 1 79 2 22 1 243 1 335 1 353 1 15 1 
72 1 326 1 224 1 77 1 4 1 280 1 311 1 29 1 150 1 65 1 141 1 21 1 79 2 22 1 243 1 335 1 353 1 15 1 
373 1 246 1 291 1 
373 1 246 1 291 1 
178 1 320 1 
178 1 291 1 320 1 
295 1 314 1 
258 1 210 1 4 1 303 1 290 2 29 1 57 1 141 1 79 1 160 1 362 1 15 1 367 2 83 2 224 1 295 1 280 1 311 1 150 1 347 2 65 1 314 1 284 2 348 1 23 1 353 1 139 1 
26 2 27 2 1 1 307 2 32 1 59 1 333 1 126 2 162 2 365 1 339 1 367 2 340 2 368 1 107 1 341 1 83 2 170 1 297 1 39 1 109 1 200 1 281 1 42 1 284 2 372 1 203 1 202 1 137 1 180 1 236 1 
26 2 340 2 341 1 27 2 261 1 108 1 211 1 64 1 19 1 329 1 251 1 112 1 252 1 349 1 137 1 244 2 138 1 360 1 322 1 
26 1 340 1 341 1 27 1 261 1 108 1 211 1 19 1 329 1 251 1 241 1 112 1 252 1 137 1 244 2 138 1 322 1 
339 1 26 1 340 1 341 1 183 1 27 1 40 1 298 1 213 1 349 1 137 1 59 1 138 1 13 1 
26 1 340 1 341 1 27 1 261 1 108 1 211 1 64 1 19 1 329 1 251 1 112 1 252 1 349 1 137 1 244 2 138 1 322 1 
206 1 
214 1 226 1 254 1 77 1 359 1 296 1 257 1 
77 2 9 1 270 1 359 1 163 1 15 1 296 1 149 1 65 1 350 1 45 1 254 1 352 1 68 1 24 1 377 1 378 1 
54 6 9 5 56 2 331 2 143 2 144 2 192 1 59 3 194 1 15 5 339 10 340 3 294 2 341 3 245 2 296 8 149 4 65 5 250 3 153 1 254 9 68 4 24 3 257 1 71 2 154 2 26 3 27 3 77 8 212 2 262 2 264 1 30 2 214 1 359 2 270 6 360 1 35 2 220 6 82 2 275 2 173 1 279 2 229 2 40 1 134 3 232 1 45 12 136 2 137 4 177 1 181 2 377 4 378 4 
259 1 50 1 77 5 98 1 262 2 54 5 9 1 56 2 331 2 143 1 190 1 144 1 270 3 359 2 15 1 220 5 37 1 294 2 275 2 16 1 245 2 296 5 149 2 174 1 87 1 65 1 153 1 45 6 254 8 179 1 255 1 24 1 68 2 377 2 378 2 
93 1 356 1 263 1 290 1 328 1 8 1 56 2 331 1 143 1 336 1 148 1 15 1 367 1 196 1 83 1 275 2 130 1 296 2 149 1 347 1 65 1 284 1 254 2 115 1 68 1 377 1 70 1 378 1 
77 1 296 1 149 1 214 1 254 1 359 1 68 1 377 1 257 1 378 1 
294 2 275 2 245 2 77 5 296 5 262 2 54 5 30 1 56 2 331 2 143 1 45 10 254 5 270 5 220 5 
77 1 359 1 24 1 65 1 15 1 9 1 
26 4 27 4 28 1 97 1 264 2 9 4 144 2 59 1 194 1 13 1 15 3 339 1 340 4 341 1 171 1 85 1 296 2 149 2 40 2 298 1 65 3 374 1 153 2 254 2 137 1 68 1 24 2 377 2 378 2 
26 1 27 1 210 1 290 2 307 2 59 1 126 1 333 1 125 1 365 1 336 1 367 2 339 1 107 1 368 1 340 1 83 3 341 1 39 1 228 1 40 1 281 1 347 2 42 1 282 1 284 3 134 1 202 1 137 1 375 1 67 1 70 2 
274 1 77 4 296 2 149 1 54 2 45 4 153 1 144 1 254 1 270 2 359 2 68 1 377 1 220 2 378 1 
20 1 224 1 280 1 
20 1 224 1 280 1 
20 1 224 1 280 1 
159 1 224 1 243 1 295 1 280 1 
224 1 280 1 43 1 
224 1 280 1 43 1 
224 1 280 1 43 1 
224 1 280 1 
4 1 353 1 
274 1 164 2 107 4 368 2 196 1 275 1 93 1 1 4 197 1 39 2 328 1 42 2 188 1 331 1 307 4 268 3 233 1 126 8 333 2 14 1 
274 1 164 2 107 3 196 1 275 1 226 1 93 1 1 3 328 1 188 1 331 1 268 2 126 6 14 1 
164 1 107 2 368 1 294 1 275 1 245 1 1 2 197 1 39 1 262 1 42 1 331 1 307 2 268 2 301 1 333 1 126 4 
164 1 107 4 294 1 275 1 50 1 245 1 1 3 197 1 98 2 262 1 249 1 331 1 268 2 190 1 126 7 
237 1 93 2 1 11 98 2 262 2 328 1 188 1 331 3 307 4 268 9 190 2 193 1 126 23 333 2 14 1 274 1 164 5 196 2 294 2 107 12 368 2 275 3 245 2 197 4 199 1 39 2 249 1 42 2 233 2 
107 1 98 1 126 1 
1 1 190 1 126 1 
164 2 368 1 107 3 294 1 275 1 1 3 245 1 197 1 39 1 262 1 42 1 30 1 307 2 331 1 268 3 333 1 301 1 126 6 
259 1 50 1 1 6 98 1 262 2 307 2 331 2 268 2 190 1 126 12 333 1 364 1 164 1 107 6 37 1 368 1 294 2 275 2 16 1 245 2 197 1 39 1 174 1 87 1 42 1 
164 1 107 3 196 1 275 1 93 1 1 3 197 1 328 1 331 1 268 2 126 6 
164 1 196 1 107 2 368 1 93 1 1 1 197 1 39 1 188 1 42 1 307 2 268 2 233 1 193 1 126 3 333 1 14 1 
164 3 368 1 196 2 107 5 275 2 93 2 1 5 130 1 197 2 39 1 328 1 42 1 307 2 331 2 268 5 333 1 126 10 364 1 
368 1 275 1 1 2 197 1 39 1 262 1 42 1 307 2 268 1 333 1 126 2 364 1 
164 1 107 2 368 1 294 1 275 1 245 1 1 2 197 1 39 1 262 1 42 1 331 1 307 2 268 2 333 1 126 4 364 1 
164 1 107 2 368 3 196 1 225 1 93 1 1 1 197 1 39 3 42 3 307 6 268 2 233 1 193 1 126 3 333 3 364 1 
93 3 50 1 140 1 1 16 98 4 262 3 328 2 188 1 307 10 331 5 268 12 190 3 193 1 333 5 126 34 14 1 364 1 274 1 164 7 196 3 195 1 107 18 368 5 294 3 275 5 225 1 245 3 172 1 197 5 39 5 249 1 42 5 233 2 301 1 
50 1 93 1 1 4 98 1 328 1 188 1 331 1 307 2 268 2 190 1 126 8 333 1 364 1 14 1 274 1 164 2 107 4 37 1 368 1 196 1 275 1 39 1 42 1 
93 1 50 1 1 6 98 2 262 1 328 1 188 1 331 1 307 4 268 3 190 1 126 11 333 2 14 1 364 1 274 1 164 2 196 1 107 5 37 1 368 2 294 1 275 2 197 1 39 2 249 1 42 2 301 1 
259 1 93 1 50 1 1 9 98 1 262 2 328 1 188 1 307 6 331 3 268 4 190 1 126 19 333 3 14 1 364 1 274 1 164 3 196 1 107 10 37 1 368 3 294 2 275 3 16 1 245 2 197 1 39 3 174 1 87 1 42 3 233 1 301 1 
259 1 93 1 50 1 1 10 98 1 262 2 328 1 188 1 307 6 331 2 268 5 190 1 126 17 333 3 14 1 364 1 274 1 164 3 196 1 107 7 37 1 368 3 294 2 275 3 16 1 245 1 197 2 39 3 174 1 87 1 42 3 233 1 301 1 
50 1 93 1 1 4 98 1 328 1 188 1 331 1 307 2 268 2 190 1 126 8 333 1 364 1 14 1 274 1 164 2 107 4 37 1 368 1 196 1 275 1 39 1 42 1 
259 1 50 1 1 6 98 1 262 2 307 2 331 2 268 2 190 1 126 12 333 1 364 1 164 1 107 6 37 1 368 1 294 2 275 2 16 1 245 2 197 1 39 1 174 1 87 1 42 1 
259 1 93 1 50 1 1 10 98 1 262 2 328 1 188 1 307 8 331 2 268 5 190 1 126 18 333 4 14 1 364 1 274 1 164 3 196 1 107 8 37 1 368 4 294 2 275 3 16 1 245 1 197 2 39 4 174 1 87 1 42 4 233 2 301 1 
259 1 50 1 1 9 98 1 262 3 307 8 331 2 268 6 190 1 126 16 333 4 364 1 164 3 107 7 37 1 368 4 294 3 275 3 225 1 16 1 245 2 197 3 39 4 174 1 87 1 42 4 233 2 
164 3 107 4 196 3 275 1 93 3 1 3 197 3 328 1 188 2 331 1 268 6 126 7 14 1 
259 1 93 1 50 1 1 10 98 1 262 2 328 1 188 1 307 8 331 2 268 4 190 1 126 18 333 4 14 1 364 1 274 1 164 3 196 1 107 8 37 1 368 4 294 2 275 3 225 1 16 1 245 1 197 1 39 4 174 1 87 1 42 4 233 2 
367 1 354 1 83 1 284 1 31 1 210 1 345 1 
118 1 354 1 367 1 222 1 83 1 210 1 345 1 6 1 283 1 284 1 31 1 114 1 
339 1 26 1 340 1 341 1 226 1 27 1 137 1 59 1 298 1 13 1 40 1 
339 1 367 1 26 1 340 1 83 2 341 1 27 1 228 1 210 1 53 1 290 1 40 1 347 1 284 2 134 1 137 1 59 1 125 1 
339 3 367 2 26 1 340 1 83 2 341 1 27 1 157 1 228 1 210 1 53 1 290 2 99 1 347 1 264 1 284 2 134 2 137 1 59 2 125 1 35 1 154 1 148 1 
339 3 367 2 26 2 340 2 83 2 341 1 27 2 198 1 157 1 210 1 53 1 290 2 99 1 347 1 264 1 284 2 134 2 80 1 137 1 59 2 125 1 35 1 154 1 148 1 
26 3 339 4 340 3 341 1 155 1 27 3 77 1 212 1 40 1 264 1 7 1 65 2 9 1 250 1 134 1 80 1 136 1 137 1 359 1 59 1 35 1 154 1 15 2 
26 3 339 4 340 3 341 1 27 3 77 1 212 1 40 1 264 1 65 2 9 1 250 1 134 1 80 1 136 1 137 1 359 1 59 1 181 1 35 1 154 1 15 2 
26 1 340 1 341 1 27 1 137 1 55 1 
26 6 339 3 340 7 341 2 27 7 51 1 40 2 55 1 306 1 251 1 330 1 134 1 33 1 203 1 177 1 137 3 59 2 162 1 360 1 92 1 379 1 
26 1 93 1 27 1 1 3 210 2 290 1 53 1 328 1 188 1 331 1 307 4 268 2 59 1 126 6 125 1 333 2 360 1 14 1 365 2 274 1 164 2 339 1 367 1 107 3 196 1 368 2 340 1 275 1 341 1 83 2 278 1 297 1 39 2 228 1 18 1 371 1 42 2 347 1 282 1 284 2 134 1 372 1 202 2 285 1 137 1 256 1 67 1 
26 1 27 1 77 1 303 1 212 1 9 2 214 1 359 1 194 1 15 3 339 2 340 1 82 1 296 1 149 2 229 1 40 1 65 3 250 1 254 1 136 1 68 2 181 1 24 1 377 2 257 1 378 2 71 1 
339 2 26 2 340 2 341 1 134 1 27 2 137 2 177 1 59 1 173 1 360 1 212 1 55 1 
26 4 339 1 340 4 341 1 27 4 40 1 298 1 80 1 137 1 59 1 360 1 13 1 323 1 
26 2 339 1 340 2 61 1 341 1 27 2 302 1 51 1 264 1 134 1 137 2 59 1 376 1 92 1 
26 1 340 1 341 1 261 1 27 1 137 1 211 1 244 1 40 1 329 1 
26 2 339 1 340 2 341 1 27 2 200 1 251 1 203 1 137 1 59 1 360 1 
26 4 339 3 340 5 341 2 27 5 298 1 40 1 264 1 33 1 203 1 137 2 59 2 360 1 13 1 323 1 379 1 
26 4 339 3 340 5 48 1 341 2 27 5 298 1 40 1 264 1 203 1 137 2 59 2 360 1 13 1 323 1 379 1 
339 1 367 1 26 1 340 1 83 2 341 1 27 1 198 1 210 1 53 1 290 1 40 1 347 1 284 2 134 1 137 1 59 1 125 1 
26 1 339 1 340 1 341 1 27 1 51 1 264 1 330 1 134 1 177 1 137 2 59 1 92 1 
367 1 83 1 284 1 332 1 32 1 180 1 127 1 236 1 338 1 
207 1 248 1 127 1 
332 1 343 1 210 1 127 1 338 1 
207 1 370 1 77 1 157 1 343 2 210 1 248 1 357 1 303 1 99 1 65 2 101 1 332 2 136 1 359 1 127 1 148 1 15 2 338 2 
44 1 74 1 226 1 34 1 
36 1 44 1 74 1 34 1 293 1 271 1 176 1 
287 1 215 1 176 1 
36 1 74 1 3 1 304 1 176 3 44 1 34 1 66 1 161 2 293 3 271 1 273 1 
36 1 44 1 242 1 74 1 34 1 293 2 271 1 78 1 176 2 
36 1 44 1 120 1 108 1 300 1 293 1 211 1 244 1 271 1 176 1 304 1 
36 1 44 1 74 1 293 1 271 1 176 1 304 1 
36 1 74 2 34 1 293 1 271 1 176 1 304 1 
223 1 36 1 2 1 293 1 271 1 176 1 304 1 
36 1 74 1 121 1 327 1 304 1 176 3 123 1 44 2 242 2 34 1 293 3 300 1 271 1 
36 1 74 1 108 1 211 1 304 1 176 2 329 1 10 1 44 1 112 1 242 1 34 1 293 2 244 2 271 1 
36 2 74 1 277 1 78 1 327 1 304 1 176 4 44 2 242 2 34 1 293 4 300 1 271 2 
36 1 44 1 74 1 34 1 293 1 271 1 176 1 304 1 
167 1 36 1 74 2 3 1 327 1 176 4 44 3 242 2 34 2 161 1 66 1 293 4 300 1 271 1 
36 1 44 1 242 1 74 1 34 1 216 1 293 2 317 1 271 1 147 1 176 2 304 1 
36 1 74 1 3 2 304 1 176 3 44 1 189 1 34 1 66 1 161 2 293 3 271 1 
44 2 231 1 227 2 60 1 
36 1 52 1 293 1 271 1 176 1 304 1 
36 1 44 1 242 1 74 1 34 1 293 2 271 1 176 2 304 1 123 1 
105 1 
36 1 44 1 74 1 34 1 293 1 271 1 176 1 304 1 
36 1 44 1 242 1 74 1 34 1 161 1 293 3 271 1 176 3 304 1 123 1 
167 1 44 1 300 1 327 1 
44 1 74 1 

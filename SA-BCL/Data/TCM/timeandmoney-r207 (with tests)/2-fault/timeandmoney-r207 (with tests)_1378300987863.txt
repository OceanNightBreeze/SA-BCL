#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V ERROR java.lang.NullPointerException 141 370 
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V ERROR java.lang.NullPointerException 141 370 
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V ERROR java.lang.NullPointerException 141 370 
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 141 370 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V ERROR java.lang.NullPointerException 141 370 
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 134 
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 297 2 194 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 297 2 194 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 194 
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V ERROR java.lang.NullPointerException 141 
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testSerialization()V FAILED junit.framework.AssertionFailedError 134 
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V ERROR java.lang.NullPointerException 141 (123,251) (123,251) 
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate; | OPERATOR | 913 | + -> /
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I | ASSIGN | 5896 | = null
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
288 9 159 1 25 1 100 9 189 1 101 6 357 1 338 2 316 1 166 5 107 1 10 1 167 2 31 2 169 1 170 1 88 2 119 4 13 2 280 2 64 1 342 1 68 2 304 1 151 3 287 1 157 1 376 1 
288 9 159 1 25 1 100 9 189 1 101 6 357 1 338 2 316 1 166 5 107 1 167 2 10 1 31 2 169 1 170 1 88 2 119 4 13 2 280 2 64 1 342 1 68 2 304 1 151 3 287 1 157 1 376 1 
288 10 159 1 25 1 100 10 189 1 101 7 357 1 338 2 316 1 166 6 107 1 167 2 10 1 31 2 169 1 170 1 88 2 119 5 13 2 280 2 64 1 342 1 68 2 304 1 151 4 287 1 157 1 376 1 
288 7 159 1 25 1 100 7 189 1 101 4 357 1 338 2 316 1 166 4 107 1 167 2 10 1 31 2 169 1 170 1 88 2 119 3 13 2 280 1 64 1 342 1 68 2 304 1 151 2 287 1 376 1 
119 2 13 1 280 2 288 4 25 1 100 4 64 1 342 1 101 3 357 1 68 1 151 1 338 1 166 3 167 1 31 1 287 1 157 1 
88 1 13 1 288 2 25 1 216 1 100 2 64 1 68 1 316 1 338 1 166 1 340 1 31 1 169 1 287 1 199 1 
88 1 119 1 288 3 25 1 100 3 64 1 101 1 68 2 338 2 304 1 151 1 166 2 287 1 
288 9 159 1 25 1 100 9 101 7 357 1 338 2 166 5 107 1 167 1 31 1 119 4 88 1 13 1 280 2 64 1 342 1 68 2 151 3 304 1 306 1 287 1 157 1 50 1 
288 9 159 1 25 1 100 9 101 7 357 1 338 2 166 5 107 1 167 1 31 1 119 4 88 1 13 1 280 2 64 1 342 1 68 2 151 3 304 1 306 1 287 1 157 1 50 1 
195 1 27 1 134 1 
195 1 154 2 59 1 
234 2 271 2 77 2 112 1 313 2 83 1 327 2 229 2 
271 2 0 1 226 1 77 3 228 1 313 2 258 1 229 2 232 1 5 1 234 3 6 2 106 1 112 1 197 1 83 1 198 1 171 2 174 2 279 1 217 1 176 1 122 2 16 1 368 1 125 1 324 1 266 1 44 1 345 1 205 1 73 1 267 1 327 2 95 1 286 2 269 1 
43 1 234 1 271 1 227 1 77 1 112 1 313 1 327 1 180 1 229 1 
51 1 281 1 77 1 341 1 180 1 323 1 27 1 229 1 369 1 203 1 42 1 234 1 195 1 298 1 
271 1 281 1 77 1 341 2 313 1 180 1 323 1 27 1 369 2 229 1 42 1 234 1 195 1 327 1 298 1 
341 1 255 1 369 1 3 1 270 1 
341 2 195 1 255 1 65 1 27 1 369 2 3 1 86 1 
341 1 255 1 369 1 
271 1 227 1 341 1 77 1 313 1 180 1 102 1 3 1 369 1 229 1 43 1 234 1 112 1 327 1 
195 1 
139 1 341 2 195 1 255 1 65 1 27 1 369 2 3 1 
352 1 311 1 341 5 255 2 65 1 181 2 27 1 3 2 369 5 164 2 8 1 69 1 236 2 129 1 237 1 319 1 195 1 223 1 294 1 
83 1 134 1 
271 1 234 2 317 1 372 1 77 2 313 1 83 2 327 1 229 2 
239 1 41 1 343 1 
99 1 0 1 279 1 77 1 122 1 16 1 258 1 125 1 5 1 234 1 6 1 44 1 267 1 83 1 286 1 198 1 
0 1 271 1 279 1 77 2 122 1 16 1 125 1 258 1 229 1 5 1 219 1 234 2 6 1 44 1 267 1 374 1 327 1 239 1 286 1 198 1 
362 1 271 4 77 5 313 1 229 5 203 1 219 1 234 5 317 1 48 1 374 2 327 4 83 1 349 1 
234 2 271 2 227 1 137 1 77 2 327 2 180 1 229 2 
234 3 271 3 77 3 313 1 83 1 374 1 327 3 229 3 
234 1 271 1 227 1 77 1 327 1 180 1 229 1 
234 1 271 1 372 1 317 1 77 1 313 1 327 1 180 1 229 1 
0 1 271 3 77 4 228 1 313 2 258 1 229 3 5 1 106 1 234 4 6 1 317 1 81 1 112 1 83 1 198 1 171 2 298 1 174 1 279 1 217 1 176 1 281 1 341 1 122 1 16 1 180 1 323 1 368 1 125 1 369 1 42 1 324 1 266 1 219 1 44 1 73 1 92 1 267 1 327 3 374 1 95 1 286 1 269 1 
362 1 234 2 271 1 77 2 83 1 327 1 374 1 229 2 203 1 
271 3 281 1 341 1 77 3 313 1 180 1 323 1 369 1 229 3 42 1 219 1 234 3 317 1 81 1 195 1 209 1 374 2 327 3 298 1 
271 2 77 2 313 1 41 1 229 2 234 2 317 1 374 1 327 2 239 1 
0 1 279 1 77 1 122 1 16 1 258 1 125 1 5 1 234 1 6 1 44 1 267 1 83 1 286 1 198 1 
0 1 279 1 77 1 122 1 90 1 125 1 18 1 5 1 234 1 6 1 44 1 267 1 83 1 286 1 198 1 
191 1 260 1 339 1 197 2 30 1 239 2 12 1 171 2 87 1 174 4 213 1 37 1 176 1 217 2 146 1 147 1 368 1 41 2 343 2 266 1 73 1 95 1 269 1 97 1 
234 1 271 1 77 1 137 1 327 1 180 1 229 1 42 1 
246 1 76 1 
246 1 76 1 
103 1 252 1 
103 1 252 1 
103 1 252 1 
160 1 246 1 76 1 
160 1 246 1 76 1 
277 1 246 1 76 1 
276 1 222 1 246 2 103 1 252 1 76 2 
160 1 246 1 76 1 
70 1 246 1 76 1 
70 1 246 1 76 1 
70 1 246 1 76 1 
271 2 332 1 77 2 229 2 234 2 275 1 113 1 83 1 277 1 114 1 278 1 84 1 296 1 39 1 341 1 300 1 246 1 369 1 204 1 327 2 131 1 49 1 76 1 22 1 
332 1 341 2 179 2 246 2 193 1 369 2 276 1 275 2 153 1 195 1 185 1 58 1 155 1 131 2 330 1 278 2 76 2 296 2 49 3 
13 1 167 1 31 1 
13 1 31 1 199 1 
173 1 13 3 167 2 148 1 199 1 322 1 
13 2 167 1 148 1 366 1 199 1 322 1 
13 2 167 1 148 2 199 1 322 1 
311 3 255 1 27 1 3 4 164 1 8 2 165 1 236 1 57 2 111 1 113 1 196 1 195 2 294 1 12 1 84 1 59 1 210 2 116 1 213 1 212 2 146 1 341 5 263 1 300 1 181 1 65 1 369 5 154 3 74 1 97 1 21 1 
271 1 227 1 77 1 313 1 255 1 102 1 27 1 3 2 229 1 80 1 234 1 195 1 112 1 211 1 341 2 180 1 369 2 184 1 43 1 327 1 270 1 
311 3 27 1 3 2 164 1 165 1 8 2 236 1 57 1 195 3 12 1 59 2 210 2 116 1 213 1 212 2 341 3 263 1 146 1 300 1 181 1 369 3 223 1 74 1 154 4 97 1 21 1 
311 5 27 1 3 3 164 1 165 1 8 4 140 1 236 1 57 2 195 4 12 2 59 3 210 4 116 1 213 2 212 4 341 4 263 1 146 2 300 2 181 1 369 4 249 1 154 7 250 1 223 1 74 2 97 2 21 1 
118 1 198 1 134 1 
198 1 33 1 
54 1 
44 1 198 1 125 1 
198 1 242 1 
198 1 125 1 
118 2 44 1 198 3 96 1 295 1 125 1 
174 1 141 1 197 1 370 1 135 1 
174 1 141 1 197 1 370 1 135 1 
174 1 141 1 168 1 197 1 370 1 135 1 
174 1 141 1 197 1 370 1 135 1 
174 1 141 1 197 1 370 1 135 1 
24 1 0 1 288 2 25 1 100 2 101 1 314 1 230 1 338 1 5 1 166 1 6 1 167 1 31 1 360 1 117 1 199 1 173 1 88 1 13 2 35 1 122 1 64 1 182 1 68 1 325 1 72 1 348 1 286 1 287 1 
24 1 0 1 353 1 288 3 25 1 100 3 101 2 314 1 230 1 338 1 5 1 166 1 6 1 167 1 31 1 360 1 199 1 173 1 88 1 13 2 35 1 364 1 122 1 182 1 68 1 325 1 156 1 348 1 286 1 287 1 
0 1 353 1 288 2 25 1 100 2 101 2 314 1 230 1 5 1 166 1 6 1 167 1 31 1 360 1 199 1 173 1 88 1 13 2 122 1 182 1 325 1 156 1 348 1 286 1 287 1 
0 1 288 1 100 1 314 2 207 1 338 1 5 1 6 1 235 1 262 1 142 1 360 2 198 1 88 2 279 1 36 1 364 1 122 1 182 2 125 1 68 1 347 1 286 1 
24 1 0 1 288 1 100 1 314 1 230 1 338 1 5 1 6 1 167 1 31 1 360 1 199 1 173 1 88 1 13 2 35 1 122 1 64 1 182 1 68 1 325 1 72 1 156 1 348 1 286 1 
136 1 
51 1 0 1 255 6 164 1 5 1 8 2 6 2 56 2 110 1 262 1 294 1 59 2 298 1 121 2 214 1 263 1 341 5 122 2 180 1 66 2 65 3 181 1 125 1 303 1 221 1 133 4 307 2 225 2 308 1 311 2 77 1 312 2 27 1 192 1 229 1 234 1 236 1 318 1 195 2 142 1 359 1 144 1 198 1 279 2 281 1 323 1 369 5 202 1 203 1 42 1 154 2 206 1 286 2 377 2 98 1 
51 1 121 1 281 1 341 3 77 1 255 2 180 1 65 1 323 1 192 1 369 3 229 1 42 1 203 1 303 1 234 1 139 1 110 1 144 1 133 2 98 1 298 1 
51 1 77 1 255 1 192 1 27 1 229 1 234 1 139 1 110 1 195 1 144 1 298 1 281 1 341 3 180 1 323 1 66 1 65 1 369 3 203 1 42 1 303 1 133 3 98 1 
51 1 77 1 312 1 255 2 192 1 27 1 229 1 234 1 139 1 110 1 195 1 144 1 298 1 121 1 281 1 341 3 180 1 65 1 323 1 66 1 369 3 203 1 42 1 303 1 133 3 98 1 
51 1 255 7 164 1 261 1 8 1 56 2 110 1 294 1 59 2 298 1 121 4 341 5 62 1 180 1 65 3 66 4 181 1 303 1 133 6 308 1 225 2 307 2 310 1 77 1 311 1 312 4 192 1 27 5 229 1 234 1 139 1 274 1 236 1 195 5 144 1 85 1 281 1 323 1 369 5 42 1 203 1 206 1 98 1 377 2 
307 2 225 2 308 1 51 1 311 1 77 1 312 2 255 4 27 1 192 1 229 1 164 1 8 1 234 1 56 2 236 1 110 1 195 2 144 1 294 1 59 2 298 1 121 2 214 1 281 1 341 4 180 1 66 2 65 2 181 1 323 1 369 4 203 1 42 1 303 1 154 2 206 1 133 4 377 2 98 1 
307 2 225 2 308 1 51 1 310 1 311 1 77 1 312 2 255 4 27 1 192 1 229 1 164 1 8 1 234 1 274 1 56 2 236 1 110 1 195 1 144 1 294 1 59 2 85 1 298 1 121 2 281 1 341 4 180 1 66 2 65 2 323 1 181 1 369 4 203 1 42 1 303 1 206 1 133 4 377 2 98 1 
307 2 225 2 308 1 51 1 310 1 311 1 77 1 312 2 255 4 27 1 192 1 229 1 164 1 8 1 234 1 274 1 56 2 236 1 110 1 195 1 144 1 294 1 59 2 85 1 298 1 121 2 281 1 341 4 180 1 66 2 65 2 323 1 181 1 369 4 203 1 42 1 303 1 206 1 133 4 377 2 98 1 
225 2 308 1 51 1 310 1 311 1 77 1 312 2 333 2 255 4 27 1 192 1 229 1 164 1 8 1 234 1 109 2 236 1 110 1 195 1 238 1 144 1 294 1 298 1 121 2 281 1 341 4 180 1 66 2 65 2 323 1 181 1 369 4 203 1 42 1 303 1 154 2 47 1 75 1 133 4 377 2 98 1 
307 2 225 2 308 1 51 1 310 1 311 1 77 1 312 3 255 5 27 1 192 1 229 1 164 1 8 1 234 1 274 1 56 2 236 1 110 1 195 1 294 1 144 1 59 2 85 1 298 1 121 3 281 1 341 4 62 1 180 1 65 2 181 1 323 1 66 3 369 4 203 1 42 1 303 1 206 1 133 5 377 2 98 1 
307 2 225 2 308 1 51 1 310 1 311 1 77 1 312 3 255 5 27 1 192 1 229 1 164 1 8 1 234 1 274 1 56 2 236 1 110 1 195 1 294 1 144 1 59 2 85 1 298 1 121 3 281 1 341 4 62 1 180 1 65 2 181 1 323 1 66 3 369 4 203 1 42 1 303 1 206 1 133 5 377 2 98 1 
225 2 308 1 51 1 311 1 77 1 312 2 333 2 255 4 27 1 192 1 229 1 164 1 8 1 234 1 109 2 236 1 110 1 195 1 238 1 144 1 294 1 298 1 121 2 214 1 281 1 341 4 180 1 66 2 65 2 181 1 323 1 369 4 203 1 42 1 303 1 154 2 133 4 377 2 98 1 
87 1 174 5 213 1 52 1 37 1 217 2 176 1 123 1 291 1 368 1 260 1 266 1 141 1 73 1 197 3 93 1 83 1 95 1 12 1 269 1 251 1 171 2 134 1 
355 1 290 1 161 1 163 1 260 2 104 1 233 3 358 1 197 8 83 1 239 11 12 2 171 4 172 3 174 14 213 1 37 1 217 6 176 2 146 2 282 1 368 2 41 4 343 11 324 1 266 1 205 1 46 1 73 2 74 2 95 2 269 2 97 1 
0 1 99 1 271 1 77 2 26 1 258 1 163 1 229 1 5 1 6 1 234 2 9 1 197 1 83 1 198 1 171 2 279 1 174 2 176 1 217 1 122 1 365 1 16 1 125 1 41 1 368 1 266 1 219 1 324 1 44 1 205 1 73 1 267 1 327 1 374 1 286 1 95 1 269 1 
0 2 158 2 52 1 291 1 163 1 258 2 260 3 5 2 6 1 106 2 11 2 12 3 171 6 174 19 213 3 14 1 217 9 176 3 123 1 122 1 16 2 125 2 343 6 219 1 266 3 73 3 74 2 267 2 350 1 269 3 271 1 77 3 229 1 234 3 141 1 197 10 83 1 239 6 198 2 200 2 279 1 37 3 146 2 201 2 368 3 41 6 324 1 44 2 205 1 93 1 374 1 327 1 286 1 95 3 251 1 97 2 
271 1 0 2 77 1 229 1 231 1 138 1 5 2 232 2 234 1 6 8 108 1 262 1 197 1 142 1 198 3 117 1 321 1 171 4 87 1 279 2 174 2 176 2 217 1 122 7 301 1 368 2 125 2 266 2 324 1 305 1 205 1 73 2 156 1 94 1 327 1 374 1 286 8 95 2 269 2 
271 1 77 1 313 1 163 1 229 1 260 1 234 1 317 1 197 1 239 1 12 1 171 2 174 3 213 1 37 1 176 1 217 2 146 1 41 1 368 1 343 1 266 1 248 1 73 1 74 1 327 1 95 1 269 1 97 1 
87 1 174 2 176 1 146 1 290 1 147 1 41 1 368 1 343 1 260 1 266 1 73 1 197 2 239 1 95 1 269 1 12 1 171 2 
87 1 174 2 213 1 37 1 176 1 217 2 41 1 368 1 343 1 260 1 266 1 73 1 339 1 239 1 95 1 269 1 97 1 171 2 
290 1 260 2 197 2 239 2 12 1 171 2 87 1 174 4 213 1 37 1 176 1 217 2 146 1 368 1 41 2 343 2 266 1 74 1 73 1 95 1 269 1 97 1 
174 2 176 1 146 1 290 1 147 1 41 1 368 1 343 1 260 1 266 1 108 1 73 1 197 2 239 1 95 1 269 1 12 1 171 2 
174 2 213 1 37 1 176 1 217 2 41 1 368 1 343 1 260 1 266 1 108 1 73 1 339 1 239 1 95 1 269 1 97 1 171 2 
290 1 260 2 108 1 197 2 239 2 12 1 171 2 174 4 213 1 37 1 176 1 217 2 146 1 368 1 41 2 343 2 266 1 74 1 73 1 95 1 269 1 97 1 
174 4 213 1 37 1 217 2 176 1 146 1 290 1 41 2 368 1 343 2 260 2 266 1 73 1 74 1 197 2 239 2 95 1 269 1 12 1 97 1 171 2 
0 1 77 1 258 1 5 1 106 1 6 1 234 1 197 1 83 1 198 1 171 2 174 2 279 1 176 1 217 1 122 1 16 1 125 1 368 1 266 1 324 1 44 1 205 1 73 1 267 1 286 1 95 1 269 1 
0 1 77 1 5 1 6 1 234 1 197 1 83 1 198 1 171 2 174 2 279 1 176 1 217 1 122 1 125 1 90 1 368 1 67 1 18 1 266 1 324 1 44 1 205 1 73 1 267 1 286 1 95 1 269 1 
290 1 163 1 260 2 197 2 239 2 12 1 171 2 174 4 213 1 37 1 176 1 217 2 146 1 368 1 41 2 343 2 266 1 74 1 73 1 95 1 269 1 97 1 
0 1 77 1 290 1 258 1 260 2 5 1 106 1 6 1 234 1 197 2 239 2 12 1 198 1 117 1 171 2 200 1 174 4 213 1 37 1 217 2 176 1 146 1 122 1 16 1 41 2 125 1 368 1 343 2 266 1 44 1 73 1 74 1 267 1 286 1 95 1 269 1 97 1 
271 1 77 1 290 1 313 1 163 1 229 1 260 1 234 1 317 1 197 2 239 1 12 1 171 2 174 3 213 1 217 1 176 1 146 1 15 1 368 1 41 1 343 1 266 1 73 1 74 1 327 1 95 1 269 1 97 1 
23 1 2 1 355 1 290 3 162 1 260 6 194 1 233 2 197 9 145 1 12 3 171 4 172 1 174 19 213 3 37 3 217 10 146 3 282 1 124 1 247 1 368 2 302 1 326 2 73 2 74 3 95 2 269 2 97 3 351 2 
23 1 2 2 355 2 290 2 162 1 260 4 194 1 293 1 233 2 320 2 197 14 145 2 12 3 297 1 171 6 172 2 61 1 174 26 120 1 213 2 37 2 217 12 146 3 124 1 368 3 220 1 326 4 73 3 74 3 95 3 269 3 375 1 97 2 351 1 
2 1 52 1 290 4 162 1 291 1 260 7 293 1 12 5 171 6 297 1 172 3 61 1 174 41 120 1 213 5 217 21 123 1 124 1 302 1 220 1 74 4 73 3 268 1 269 3 351 1 23 1 355 3 194 1 233 4 141 1 197 20 320 1 145 2 37 3 146 4 282 1 368 3 326 4 93 1 95 3 97 4 375 1 251 1 
23 1 52 1 2 1 355 3 290 3 162 1 291 1 260 7 194 1 293 1 233 4 141 1 320 2 197 20 145 2 12 5 297 1 171 8 61 1 172 3 120 1 174 38 213 4 37 4 217 18 146 4 123 1 282 1 124 1 368 4 302 1 220 1 326 4 73 4 74 4 93 1 268 1 95 4 269 4 251 1 375 1 97 3 351 1 
23 1 2 1 52 1 355 1 162 1 291 1 260 1 194 1 233 1 141 1 197 5 145 1 12 1 171 2 172 1 174 9 213 1 37 1 217 4 123 1 368 1 326 1 73 1 93 1 95 1 269 1 251 1 
276 1 275 1 185 1 58 1 246 1 131 1 132 1 278 1 296 1 76 1 
204 1 277 1 
371 1 275 1 82 1 246 1 131 1 183 1 278 1 296 1 76 1 
160 1 115 1 
70 1 222 1 60 1 
332 1 341 1 179 1 246 1 369 1 276 1 275 1 153 1 195 1 185 1 58 1 155 1 131 1 330 1 278 1 76 1 296 1 49 2 
332 1 341 1 179 1 246 1 369 1 276 1 275 1 153 1 195 1 185 1 58 1 155 1 131 1 330 1 278 1 76 1 296 1 49 2 
332 1 341 1 179 1 246 1 369 1 276 1 275 1 153 1 195 1 185 1 58 1 155 1 131 1 330 1 278 1 76 1 296 1 49 2 
222 1 160 1 115 1 
222 1 160 1 115 1 
70 1 60 1 
70 1 222 1 60 1 
114 1 22 1 
1 1 271 2 77 2 3 1 229 2 234 2 275 1 113 1 83 1 277 1 114 1 278 1 84 1 296 1 39 1 341 1 179 1 300 1 246 1 369 1 204 1 153 1 327 2 131 1 76 1 49 1 22 1 
0 1 77 2 53 1 163 1 229 2 231 1 138 1 28 1 292 1 5 1 232 2 6 2 234 2 29 1 197 1 198 1 171 2 174 2 176 1 217 1 122 2 125 1 368 1 266 1 324 1 346 1 205 1 73 1 286 2 95 1 269 1 
173 1 0 1 13 2 35 1 122 2 335 1 149 1 230 1 337 1 5 1 6 2 325 1 167 1 31 1 156 1 286 2 360 1 199 1 117 1 
173 1 0 1 13 2 35 1 122 1 283 1 149 1 230 1 5 1 6 1 325 1 167 1 31 1 156 1 286 1 360 1 199 1 
0 1 279 1 36 1 122 1 125 1 337 1 5 1 128 1 6 1 262 1 142 1 286 1 360 1 198 1 
173 1 0 1 13 2 35 1 122 1 335 1 149 1 230 1 337 1 5 1 6 1 325 1 167 1 31 1 156 1 286 1 360 1 199 1 
285 1 
8 1 69 1 311 1 319 1 195 1 27 1 134 1 
307 1 341 1 311 1 255 1 65 1 181 1 27 1 369 1 164 1 8 1 56 1 236 1 195 2 154 1 206 1 294 1 59 1 
0 4 253 2 255 5 5 3 164 4 6 3 8 8 11 2 294 4 12 2 210 6 59 6 117 1 118 2 175 1 212 6 213 2 263 2 341 5 177 2 122 3 178 2 181 4 65 3 125 3 69 1 74 2 186 2 187 2 311 9 27 2 236 4 319 1 195 8 359 1 198 10 242 2 32 2 33 3 279 1 38 1 146 2 244 2 323 2 40 1 369 5 44 3 45 1 152 2 373 1 154 12 286 3 96 1 97 2 
187 2 253 1 311 8 355 1 255 1 27 2 164 2 293 1 233 1 8 5 236 2 195 5 359 1 294 2 12 2 241 1 210 5 59 3 172 1 61 1 120 1 212 5 213 2 263 1 341 1 146 2 65 1 181 2 369 1 220 1 154 6 74 2 20 1 375 1 97 2 
187 2 271 1 227 1 52 1 253 1 77 1 311 2 313 1 102 1 291 1 229 1 164 1 234 1 8 2 236 1 112 1 294 1 12 2 85 1 213 1 341 1 180 1 181 1 369 1 43 1 91 1 93 1 327 1 
311 1 181 1 27 1 164 1 69 1 8 1 236 1 319 1 195 1 294 1 
187 2 212 5 213 2 253 1 146 2 311 5 8 5 74 2 154 10 195 5 11 1 12 2 210 5 59 5 97 2 
341 1 195 1 255 1 65 1 27 1 369 1 
0 1 311 2 255 4 5 1 164 2 6 4 8 2 236 2 318 1 262 1 359 2 142 1 294 1 198 1 279 2 38 1 263 2 341 3 122 4 89 1 181 2 65 2 40 2 125 1 202 1 369 3 223 1 286 4 329 1 
271 2 0 1 77 3 228 1 313 2 258 1 229 2 5 1 6 1 234 3 106 1 112 1 83 1 198 1 171 2 174 1 279 1 217 1 176 1 122 1 16 1 125 1 368 1 324 1 266 1 44 1 73 1 267 1 327 2 95 1 286 1 269 1 
212 1 263 1 311 1 181 1 27 1 164 1 8 2 141 1 236 1 154 2 195 2 359 1 294 1 59 1 210 1 
7 1 278 1 296 1 
7 1 278 1 296 1 
185 1 278 1 55 1 22 1 296 1 
7 1 278 1 296 1 
289 1 278 1 296 1 
289 1 278 1 296 1 
289 1 278 1 296 1 
278 1 296 1 
246 1 76 1 
174 7 213 1 52 1 37 1 217 3 290 1 123 1 291 1 368 2 260 2 141 1 73 2 197 4 320 1 93 1 95 2 12 1 269 2 251 1 171 4 
174 5 52 1 213 1 37 1 217 2 123 1 291 1 260 1 141 1 93 1 197 3 12 1 251 1 134 1 
174 4 213 1 37 1 217 2 146 1 290 1 264 1 368 1 260 2 73 1 74 1 197 2 95 1 269 1 12 1 97 1 171 2 
172 1 174 7 213 1 37 1 217 4 355 1 146 1 282 1 290 1 260 2 233 2 74 1 197 3 12 1 97 1 
52 1 290 1 291 1 260 3 233 2 141 1 358 1 197 9 320 1 12 3 171 2 172 2 174 17 213 3 37 2 217 8 146 2 123 1 282 1 368 1 46 1 74 2 73 1 93 1 95 1 269 1 251 1 97 2 
233 1 174 1 217 1 
172 1 174 1 197 1 
174 6 213 1 37 2 217 3 146 1 290 1 264 1 368 1 260 3 73 1 74 1 11 1 197 3 95 1 269 1 12 1 97 1 171 2 
355 1 290 1 162 1 260 2 233 1 293 1 197 6 12 2 171 2 172 1 61 1 174 12 120 1 213 2 37 1 217 6 146 2 368 1 220 1 73 1 74 2 95 1 269 1 375 1 97 2 
174 6 213 1 52 1 37 1 217 3 290 1 291 1 260 2 197 3 93 1 12 1 
174 3 52 1 37 1 217 2 290 1 123 1 334 1 368 1 260 2 73 1 197 1 93 1 320 1 95 1 269 1 251 1 171 2 
174 10 52 2 213 2 37 3 217 5 290 2 162 1 368 1 291 1 260 5 91 1 73 1 93 2 197 5 95 1 269 1 12 2 171 2 
174 2 146 1 290 1 162 1 368 1 260 1 73 1 197 2 95 1 269 1 12 1 171 2 
174 4 213 1 37 1 217 2 146 1 290 1 162 1 368 1 260 2 73 1 74 1 197 2 95 1 269 1 12 1 97 1 171 2 
174 3 52 1 37 1 217 2 290 1 334 1 162 1 368 3 302 1 260 2 73 3 320 1 93 1 197 1 95 3 269 3 171 6 
52 1 355 1 290 2 162 1 291 1 260 4 105 1 233 3 141 1 320 1 197 11 208 1 12 3 171 8 172 3 174 21 213 3 37 2 217 10 146 2 123 1 264 1 368 4 302 1 127 1 73 4 74 2 93 1 95 4 269 4 251 1 97 2 
52 1 355 1 162 1 291 1 260 1 233 1 141 1 197 4 12 1 171 2 172 1 174 7 213 1 37 1 217 3 123 1 368 1 73 1 93 1 95 1 269 1 375 1 251 1 
52 1 355 1 290 1 162 1 291 1 260 2 233 2 141 1 197 6 12 2 171 4 172 1 174 10 213 1 37 1 217 4 146 1 123 1 282 1 264 1 368 2 73 2 74 1 93 1 95 2 269 2 251 1 375 1 
52 1 355 1 290 1 162 1 291 1 260 3 293 1 233 1 141 1 197 9 320 1 12 3 171 6 172 1 61 1 174 18 120 1 213 3 37 2 217 9 146 2 123 1 264 1 368 3 220 1 73 3 74 2 93 1 95 3 269 3 251 1 375 1 97 2 
52 1 355 1 290 2 162 1 291 1 260 4 233 1 293 1 141 1 320 1 197 10 12 3 171 6 172 1 61 1 174 16 120 1 213 2 37 2 217 6 146 2 123 1 264 1 368 3 220 1 73 3 74 2 93 1 95 3 269 3 251 1 375 1 97 1 
52 1 355 1 162 1 291 1 260 1 233 1 141 1 197 4 12 1 171 2 172 1 174 7 213 1 37 1 217 3 123 1 368 1 73 1 93 1 95 1 269 1 375 1 251 1 
355 1 290 1 162 1 260 2 233 1 293 1 197 6 12 2 171 2 172 1 61 1 174 12 120 1 213 2 37 1 217 6 146 2 368 1 220 1 73 1 74 2 95 1 269 1 375 1 97 2 
52 1 355 1 290 1 162 1 291 1 260 3 293 1 233 1 141 1 197 10 320 2 12 3 171 8 172 1 61 1 174 17 120 1 213 2 37 2 217 7 146 2 123 1 264 1 368 4 220 1 73 4 74 2 93 1 95 4 269 4 251 1 375 1 97 1 
355 1 290 3 162 1 260 6 293 1 233 1 197 9 320 2 12 3 171 8 172 1 61 1 174 16 120 1 213 2 37 3 217 7 146 3 368 4 302 1 220 1 73 4 74 3 95 4 269 4 375 1 97 2 
174 7 213 1 52 3 37 3 217 4 123 2 290 3 291 1 260 6 93 3 197 3 12 1 251 1 
52 1 355 1 290 1 162 1 291 1 260 3 293 1 233 1 141 1 197 10 320 2 12 3 171 8 172 1 61 1 174 17 120 1 213 2 37 2 217 7 146 2 123 1 368 4 302 1 220 1 73 4 74 2 93 1 95 4 269 4 251 1 375 1 97 1 
362 1 234 1 309 1 77 1 83 1 229 1 203 1 
362 1 363 1 34 1 309 1 254 1 77 1 63 1 229 1 336 1 203 1 234 1 83 1 
5 1 0 1 6 1 279 1 262 1 122 1 142 1 286 1 198 1 125 1 134 1 
0 1 271 1 279 1 77 2 122 1 125 1 258 1 229 1 5 1 234 2 6 1 44 1 267 1 83 1 374 1 327 1 286 1 198 1 
271 1 0 1 77 2 258 1 229 2 5 1 6 1 234 2 83 1 198 3 242 1 281 1 177 1 122 1 180 1 40 1 125 2 42 1 44 2 267 1 327 2 374 1 286 1 
271 1 0 1 77 2 229 2 5 1 6 2 234 2 83 1 198 3 242 1 243 1 281 1 177 1 122 2 180 1 40 1 125 2 18 1 42 1 44 2 267 1 327 2 374 1 286 2 
0 1 118 1 279 1 243 1 177 1 272 1 341 2 122 3 255 1 323 1 27 1 125 1 40 1 369 2 5 1 6 3 44 1 195 1 286 3 198 4 242 1 361 1 33 1 
0 1 118 1 279 1 243 1 177 1 341 2 122 3 255 1 323 1 27 1 125 1 40 1 369 2 5 1 6 3 44 1 152 1 195 1 286 3 198 4 242 1 33 1 
5 1 0 1 6 1 122 1 286 1 301 1 
0 3 279 2 122 6 356 1 301 1 273 1 125 2 138 1 232 1 5 2 305 1 6 7 44 1 156 1 94 1 328 1 286 7 96 1 198 3 117 1 321 1 
0 1 271 1 52 1 77 2 291 1 163 1 258 1 229 1 260 1 28 1 5 1 234 2 6 1 106 1 141 1 197 3 83 1 12 1 198 1 117 1 171 4 200 1 174 5 213 1 37 1 217 2 176 2 123 1 122 1 16 1 201 1 125 1 368 2 266 2 44 1 73 2 93 1 267 1 327 1 374 1 95 2 286 1 269 2 251 1 
311 1 255 2 27 1 3 1 164 2 8 1 6 1 236 2 319 1 195 1 294 2 198 2 32 1 33 1 118 1 279 1 38 1 341 3 122 1 244 1 181 2 323 1 65 1 369 3 69 1 152 1 186 1 286 1 
118 1 0 2 122 2 301 1 125 1 5 1 6 2 45 1 44 1 286 2 96 1 198 2 117 1 
0 1 279 1 243 1 122 4 125 1 5 1 6 4 262 1 284 1 142 1 286 4 198 1 117 1 
0 2 215 1 122 2 356 1 256 1 40 1 273 1 125 1 4 1 5 1 6 2 44 1 286 2 198 1 
5 1 0 1 6 1 13 1 279 1 122 1 31 1 286 1 199 1 230 1 
0 1 122 2 125 1 138 1 5 1 6 2 29 1 156 1 286 2 198 1 117 1 
0 2 279 1 122 4 40 1 125 2 138 1 5 2 6 5 305 1 262 1 284 1 142 1 286 5 198 3 117 1 321 1 
0 2 279 1 122 4 40 1 125 2 138 1 5 2 6 5 262 1 284 1 19 1 142 1 286 5 198 3 117 1 321 1 
0 1 271 1 279 1 77 2 122 1 125 1 229 1 18 1 5 1 234 2 6 1 44 1 267 1 83 1 374 1 327 1 286 1 198 1 
0 2 122 1 356 1 273 1 40 1 125 1 5 1 6 1 44 1 328 1 286 1 96 1 198 1 
83 1 257 1 150 1 126 1 265 1 
281 1 341 2 79 1 245 1 180 1 323 1 27 1 257 2 3 1 369 2 42 1 126 1 150 2 265 2 81 1 71 1 195 1 83 1 298 1 
234 1 346 1 77 1 53 1 229 1 126 1 150 1 292 1 265 1 
79 1 245 1 126 1 
166 1 25 1 287 1 134 1 
338 1 166 1 288 1 25 1 100 1 287 1 68 1 
88 1 288 1 314 1 
288 3 25 1 100 3 64 1 367 1 259 1 68 1 344 1 338 1 316 2 166 1 287 1 
338 1 166 1 280 1 288 2 25 1 100 2 101 1 287 1 68 1 
119 1 13 1 288 1 100 1 64 1 357 1 68 1 338 1 166 1 167 1 31 1 
338 1 166 1 288 1 25 1 100 1 64 1 68 1 
338 1 288 1 25 2 100 1 64 1 287 1 68 1 
288 2 25 1 299 1 100 2 218 1 64 1 68 2 338 2 166 1 331 1 
119 1 288 3 159 1 25 1 100 3 64 1 101 2 68 1 338 1 151 1 166 2 107 1 287 1 
173 1 13 2 288 2 25 1 100 2 64 1 101 1 68 1 338 1 166 1 167 1 143 1 31 1 287 1 199 1 
119 1 280 1 288 4 25 1 100 4 64 1 101 2 68 2 338 2 151 1 166 2 287 1 157 1 
338 1 166 1 288 1 25 1 100 1 64 1 287 1 68 1 
119 1 288 4 25 2 100 4 101 2 367 1 259 1 315 1 68 1 316 1 338 1 151 1 166 3 287 2 
338 1 166 1 306 1 354 1 288 2 25 1 100 2 64 1 101 1 130 1 287 1 68 1 
316 2 338 1 166 1 288 3 25 1 100 3 64 1 367 1 259 2 287 1 17 1 68 1 
166 2 224 1 190 2 240 1 
338 1 288 1 100 1 78 1 64 1 68 1 
338 1 166 1 159 1 288 2 25 1 100 2 64 1 101 1 287 1 68 1 
188 1 
338 1 166 1 288 1 25 1 100 1 64 1 287 1 68 1 
316 1 338 1 166 1 159 1 288 3 25 1 100 3 64 1 101 1 287 1 68 1 
151 1 166 1 119 1 315 1 
166 1 25 1 

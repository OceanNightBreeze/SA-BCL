#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V ERROR java.lang.NullPointerException (7,20,108) 
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V ERROR java.lang.NullPointerException (7,20,108) 132 335 
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V ERROR java.lang.NullPointerException (7,20,108) 132 238 
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (7,20,108) (7,20,108) 322 270 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V ERROR java.lang.NullPointerException 360 64 (50,207) 
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V ERROR java.lang.NullPointerException 360 64 (61,348) 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V ERROR java.lang.NullPointerException (7,20,108) 132 292 
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar; | RETURN | 5148 | return null
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I | CONSTANT | 1083 | 12 -> -1
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
22 1 310 2 230 2 250 1 291 1 74 9 133 1 271 1 164 4 116 1 235 2 196 1 11 2 84 2 39 2 260 1 325 1 125 1 302 1 301 1 65 1 145 2 175 6 201 9 202 3 266 5 362 1 51 1 
22 1 310 2 230 2 250 1 291 1 74 9 133 1 271 1 164 4 116 1 235 2 196 1 11 2 84 2 39 2 260 1 325 1 125 1 302 1 301 1 65 1 145 2 175 6 201 9 202 3 266 5 362 1 51 1 
22 1 310 2 230 2 250 1 291 1 74 10 133 1 271 1 164 5 116 1 235 2 196 1 11 2 84 2 39 2 260 1 325 1 125 1 302 1 301 1 65 1 145 2 175 7 201 10 202 4 266 6 362 1 51 1 
22 1 310 2 230 2 250 1 291 1 74 7 133 1 271 1 164 3 116 1 235 2 196 1 11 1 84 2 39 2 260 1 325 1 125 1 302 1 301 1 65 1 145 2 175 4 201 7 202 2 266 4 51 1 
22 1 11 2 84 1 310 1 39 1 230 1 260 1 325 1 125 1 145 1 74 4 175 3 164 2 202 1 201 4 266 3 362 1 51 1 
62 1 22 1 310 1 84 1 39 1 260 1 302 1 125 1 221 1 65 1 145 1 74 2 201 2 266 1 346 1 235 1 
22 1 310 2 39 2 260 1 125 1 74 3 271 1 175 1 164 1 201 3 202 1 266 2 235 1 
22 1 310 2 230 1 72 1 250 1 74 9 271 1 164 4 275 1 235 1 11 2 84 1 39 2 260 1 325 1 125 1 301 1 145 1 175 7 202 3 201 9 266 5 362 1 51 1 
22 1 310 2 230 1 72 1 250 1 74 9 271 1 164 4 275 1 235 1 11 2 84 1 39 2 260 1 325 1 125 1 301 1 145 1 175 7 202 3 201 9 266 5 362 1 51 1 
347 1 31 1 333 1 
347 1 150 1 23 2 
66 1 134 2 71 1 96 2 327 2 68 2 199 2 45 2 
207 1 284 1 177 1 52 1 155 1 287 1 131 1 71 1 180 1 96 2 159 1 134 3 251 1 272 1 8 2 296 2 119 1 216 1 80 1 35 1 122 1 85 2 327 2 326 1 64 1 199 3 45 2 282 1 66 1 355 1 223 2 200 2 176 1 244 1 68 2 91 1 206 1 
138 1 134 1 75 1 0 1 71 1 96 1 327 1 68 1 199 1 45 1 
108 1 138 1 129 1 134 1 7 1 88 1 339 1 96 1 199 1 
138 1 129 1 134 1 7 1 88 1 96 1 327 1 68 1 199 1 45 1 
307 1 49 1 215 1 312 1 20 1 
81 1 347 1 307 1 49 2 174 1 333 1 215 1 20 2 
49 1 215 1 20 1 
307 1 138 1 0 1 71 1 96 1 327 1 45 1 199 1 134 1 75 1 29 1 49 1 68 1 20 1 
347 1 
347 1 307 1 49 2 174 1 44 1 333 1 215 1 20 2 
319 1 347 1 307 2 320 2 10 1 70 1 321 1 139 1 158 1 174 1 73 1 295 1 265 1 49 5 203 2 77 2 333 1 20 5 215 2 
66 1 31 1 
141 1 96 2 327 1 199 2 45 1 66 2 134 2 329 1 68 1 
342 1 255 1 135 1 
207 1 177 1 131 1 326 1 64 1 199 1 66 1 27 1 134 1 355 1 223 1 200 1 272 1 8 1 119 1 206 1 
66 1 87 1 134 5 141 1 258 2 93 1 353 1 339 1 96 5 300 1 327 4 68 1 199 5 45 4 
138 1 134 2 104 1 75 1 96 2 327 2 199 2 45 2 
255 1 207 1 177 1 131 1 258 1 96 1 326 1 300 1 327 1 64 1 45 1 199 2 134 2 355 1 223 1 200 1 272 1 8 1 206 1 119 1 
66 1 134 3 258 1 96 3 327 3 68 1 199 3 45 3 
138 1 134 1 75 1 96 1 327 1 199 1 45 1 
138 1 134 1 329 1 141 1 96 1 327 1 68 1 199 1 45 1 
335 1 138 1 129 1 141 1 258 1 96 2 300 1 327 2 45 2 199 2 132 1 134 2 7 1 88 1 68 1 
66 1 87 1 134 2 258 1 339 1 96 2 327 1 199 2 45 1 
138 1 129 1 258 1 96 1 300 1 327 1 45 1 199 1 238 1 132 1 134 1 7 1 88 1 
255 1 141 1 258 1 96 2 327 2 45 2 199 2 342 1 134 2 68 1 
207 1 177 1 131 1 326 1 64 1 199 1 66 1 134 1 355 1 223 1 200 1 272 1 8 1 119 1 206 1 
348 1 131 1 326 1 64 1 199 1 66 1 134 1 355 1 223 1 200 1 272 1 8 1 119 1 192 1 206 1 
284 2 179 1 155 1 248 1 342 2 251 1 213 1 114 1 234 1 135 2 296 2 297 1 80 1 255 2 35 1 351 1 38 1 85 4 282 1 222 1 176 2 224 1 244 1 90 1 
138 1 129 1 134 1 104 1 96 1 327 1 199 1 45 1 
105 1 101 1 
105 1 101 1 
157 1 358 1 
157 1 358 1 
157 1 358 1 
170 1 105 1 101 1 
170 1 105 1 101 1 
198 1 157 1 149 1 358 1 105 2 101 2 
103 1 105 1 101 1 
170 1 105 1 101 1 
105 1 316 1 101 1 
105 1 316 1 101 1 
105 1 316 1 101 1 
178 1 96 2 181 1 134 2 30 1 187 1 314 1 253 1 78 1 101 1 278 1 103 1 36 1 298 1 41 1 105 1 327 2 45 2 199 2 66 1 144 1 49 1 303 1 20 1 
347 1 256 1 278 2 53 1 229 1 198 1 105 2 24 1 14 2 181 3 30 2 49 2 356 1 17 1 253 2 314 2 78 1 101 2 20 2 
145 1 84 1 230 1 
145 1 84 1 221 1 
9 1 69 1 84 3 99 1 230 2 221 1 
9 1 69 1 37 1 84 2 230 1 221 1 
9 2 69 1 84 2 230 1 221 1 
307 4 308 1 178 1 248 1 156 1 113 2 23 3 73 1 341 1 213 1 6 1 295 2 59 1 77 1 318 1 215 1 319 3 347 2 320 1 36 1 298 1 324 2 174 1 106 1 222 1 49 5 241 2 203 1 150 1 90 1 20 5 333 1 
307 7 178 4 70 1 248 3 23 9 73 1 341 2 312 5 213 3 6 2 273 1 295 6 59 1 76 1 77 2 318 3 215 6 137 1 319 8 347 5 320 2 123 1 324 6 174 1 222 3 146 1 49 9 241 6 203 2 204 1 150 3 245 5 90 3 20 9 333 1 
307 2 308 1 178 1 70 1 248 1 113 1 23 4 341 1 213 1 6 1 295 2 77 1 318 1 319 3 347 3 320 1 324 2 106 1 222 1 49 3 203 1 241 2 150 2 90 1 333 1 20 3 
308 1 307 3 178 2 70 1 248 2 113 2 23 7 341 1 213 2 6 1 273 1 295 4 76 1 77 1 318 2 137 1 319 5 347 4 320 1 324 4 106 1 222 2 49 4 241 4 203 1 150 3 90 2 333 1 20 4 
262 1 355 1 31 1 
355 1 276 1 
115 1 
355 1 272 1 131 1 
355 1 118 1 
355 1 272 1 
262 2 355 3 148 1 272 1 131 1 340 1 
284 3 306 1 33 1 279 1 179 2 246 1 352 1 85 7 98 1 57 1 213 1 114 3 186 2 67 1 176 4 90 1 92 1 
284 3 306 1 33 1 279 1 179 2 246 1 352 1 85 7 98 1 57 1 213 1 114 3 186 2 67 1 176 4 90 1 92 1 
284 3 306 1 33 1 279 1 179 2 246 1 352 1 85 7 98 1 57 1 163 1 213 1 114 3 186 2 67 1 176 4 90 1 92 1 
284 15 306 2 227 1 179 5 111 3 336 1 155 1 246 1 248 3 98 1 57 1 161 4 213 4 28 1 186 3 114 10 296 2 315 1 102 1 318 3 33 2 279 1 35 1 169 1 352 2 85 31 282 1 222 3 67 5 176 16 244 1 205 1 90 4 92 2 
284 4 306 1 33 1 279 1 179 3 35 2 155 2 246 1 352 1 85 9 95 1 57 1 282 2 213 1 114 4 186 2 67 1 176 5 296 4 244 2 205 1 136 1 90 1 92 1 
22 1 290 1 310 1 230 1 208 1 74 2 211 1 99 1 8 1 235 1 349 1 350 1 84 2 121 1 39 1 260 1 86 1 220 1 125 1 326 1 221 1 328 1 145 1 175 1 200 1 223 1 201 2 266 1 89 1 206 1 
22 1 290 1 310 1 230 1 74 3 211 1 99 1 8 1 117 1 235 1 350 1 84 2 121 1 39 1 260 1 86 1 220 1 326 1 221 1 328 1 145 1 175 2 200 1 223 1 264 1 201 3 266 1 127 1 89 1 206 1 
22 1 290 1 230 1 74 2 99 1 8 1 117 1 235 1 84 2 121 1 260 1 86 1 220 1 326 1 221 1 328 1 145 1 175 2 200 1 223 1 264 1 201 2 266 1 89 1 206 1 
154 1 310 1 74 1 272 1 8 1 119 1 317 1 235 2 121 2 39 1 86 2 326 1 355 1 200 1 223 1 201 1 127 1 16 1 331 1 89 2 206 1 19 1 305 1 
290 1 310 1 230 1 74 1 211 1 99 1 8 1 117 1 235 1 349 1 350 1 84 2 121 1 39 1 86 1 220 1 125 1 326 1 221 1 328 1 145 1 200 1 223 1 201 1 89 1 206 1 
13 1 
129 1 94 1 339 1 96 1 73 1 341 1 270 1 5 1 134 1 7 1 214 1 295 1 272 1 8 2 165 1 77 1 119 2 215 2 319 1 138 1 320 1 322 1 174 1 326 1 199 1 108 1 355 1 200 2 223 2 49 2 88 1 203 1 16 1 243 1 206 1 305 1 20 2 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 174 1 96 1 44 1 199 1 270 1 108 1 134 1 7 1 214 1 49 2 88 1 243 1 20 2 215 1 
138 1 129 1 320 1 322 1 339 1 96 1 73 1 199 1 270 1 108 1 134 1 7 1 214 1 49 1 88 1 203 1 77 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 322 1 339 1 96 1 199 1 270 1 108 1 134 1 214 1 7 1 49 1 88 1 243 1 20 1 
138 1 129 1 320 1 322 1 339 1 96 1 73 1 199 1 270 1 108 1 134 1 7 1 214 1 49 1 88 1 203 1 77 1 243 1 20 1 
284 3 179 2 155 1 246 1 57 1 342 1 251 1 213 1 114 2 186 1 31 1 135 1 296 2 255 1 80 1 279 1 35 1 352 1 38 1 85 6 282 1 66 2 176 3 244 1 90 1 92 1 
284 6 227 1 179 1 336 1 155 2 111 3 248 2 180 1 342 4 161 3 251 1 213 2 114 2 135 11 296 4 254 1 318 2 80 2 255 11 34 1 120 1 35 2 122 1 85 14 282 2 126 1 66 1 222 1 67 1 176 8 244 2 90 1 21 1 
207 1 177 1 284 1 155 1 309 1 131 1 180 1 96 1 342 1 27 1 134 2 251 1 272 1 8 1 296 2 119 1 80 1 35 1 236 1 258 1 122 1 142 1 85 2 326 1 327 1 300 1 64 1 199 2 45 1 126 1 282 1 66 1 355 1 200 1 223 1 176 1 244 1 206 1 
177 2 179 4 131 2 180 1 96 1 57 1 233 2 134 3 186 1 272 2 8 3 135 7 318 2 279 1 327 1 326 2 64 2 199 3 282 3 66 2 107 2 200 3 67 4 244 3 206 2 207 2 284 10 285 2 286 2 155 3 246 1 248 2 342 7 344 1 251 3 213 3 114 8 117 1 296 6 119 1 80 3 255 7 35 3 257 1 258 1 352 1 122 1 40 1 85 20 300 1 45 1 126 1 222 2 355 2 223 3 176 10 90 3 91 2 92 1 
284 1 155 2 180 1 208 1 209 1 96 1 159 2 4 1 182 1 134 1 251 2 272 2 8 7 274 1 100 1 117 1 296 4 119 2 217 1 80 2 35 2 258 1 38 1 122 1 85 2 327 1 326 2 199 1 45 1 282 2 355 3 200 8 223 8 176 1 16 1 244 2 206 2 305 1 283 1 
284 2 179 1 155 1 248 1 96 1 342 1 134 1 251 1 213 1 114 1 135 1 296 2 190 1 318 1 255 1 80 1 35 1 141 1 85 3 327 1 45 1 199 1 282 1 126 1 222 1 176 1 244 1 68 1 90 1 
255 1 80 1 35 1 155 1 248 1 38 1 85 2 342 1 282 1 251 1 213 1 114 1 67 1 135 1 176 2 296 2 244 1 297 1 
255 1 80 1 284 2 179 1 35 1 155 1 351 1 38 1 85 2 342 1 282 1 222 1 251 1 114 1 135 1 296 2 244 1 90 1 
284 2 179 1 155 1 248 1 342 2 251 1 213 1 114 2 135 2 296 2 318 1 80 1 255 2 35 1 38 1 85 4 282 1 222 1 67 1 176 2 244 1 90 1 
255 1 80 1 35 1 155 1 248 1 85 2 342 1 282 1 251 1 213 1 114 1 67 1 135 1 176 2 100 1 296 2 244 1 297 1 
255 1 80 1 284 2 179 1 35 1 155 1 351 1 85 2 342 1 282 1 222 1 251 1 114 1 135 1 100 1 296 2 244 1 90 1 
284 2 179 1 155 1 248 1 342 2 251 1 213 1 114 2 135 2 100 1 296 2 318 1 80 1 255 2 35 1 85 4 282 1 222 1 67 1 176 2 244 1 90 1 
284 2 179 1 155 1 248 1 342 2 251 1 213 1 114 2 135 2 296 2 318 1 80 1 255 2 35 1 85 4 282 1 222 1 67 1 176 2 244 1 90 1 
207 1 177 1 284 1 155 1 131 1 180 1 134 1 251 1 272 1 8 1 296 2 119 1 80 1 35 1 122 1 85 2 326 1 64 1 199 1 282 1 66 1 355 1 200 1 223 1 176 1 244 1 206 1 91 1 
284 1 155 1 131 1 180 1 134 1 251 1 272 1 8 1 296 2 192 1 119 1 80 1 348 1 35 1 122 1 85 2 42 1 326 1 64 1 199 1 282 1 66 1 355 1 200 1 223 1 176 1 244 1 206 1 
284 2 179 1 155 1 248 1 342 2 251 1 213 1 114 2 135 2 296 2 318 1 80 1 255 2 35 1 85 4 282 1 126 1 222 1 67 1 176 2 244 1 90 1 
207 1 284 2 177 1 179 1 155 1 248 1 131 1 208 1 342 2 134 1 251 1 213 1 114 2 272 1 135 2 8 1 296 2 318 1 255 2 80 1 35 1 85 4 326 1 64 1 199 1 282 1 222 1 107 1 355 1 200 1 223 1 67 1 176 2 244 1 90 1 206 1 91 1 
284 1 155 1 248 1 96 1 342 1 134 1 251 1 213 1 114 1 135 1 296 2 191 1 318 1 80 1 255 1 35 1 141 1 85 3 327 1 45 1 199 1 282 1 126 1 222 1 67 1 176 2 244 1 90 1 68 1 
284 10 227 1 54 1 179 3 336 1 155 2 111 1 247 1 248 3 25 1 311 2 161 2 183 1 213 3 114 6 296 4 136 1 318 3 35 2 219 1 85 19 124 1 43 1 282 2 222 3 47 2 67 3 176 9 244 2 90 3 
284 12 179 2 155 3 336 2 111 2 247 1 337 1 248 3 232 1 311 4 161 2 183 1 213 3 294 1 114 4 296 6 136 1 318 3 35 3 219 2 85 26 124 2 43 1 282 3 222 2 47 1 67 2 330 1 176 14 267 1 242 1 244 3 205 2 90 2 
284 21 227 1 179 4 336 3 155 3 111 3 246 1 247 1 337 1 248 4 25 1 232 1 57 1 311 4 161 4 183 1 213 5 186 1 294 1 114 8 296 6 136 1 318 4 279 1 35 3 352 1 219 1 85 41 124 2 43 1 282 3 222 4 47 1 330 1 67 4 176 20 242 1 267 1 244 3 205 1 269 1 90 5 92 1 
284 18 227 1 179 4 336 3 155 4 111 3 246 1 247 1 337 1 248 4 25 1 232 1 57 1 311 4 161 4 183 1 213 5 186 1 294 1 114 7 296 8 136 1 318 4 279 1 35 4 352 1 219 1 85 38 124 2 43 1 282 4 222 3 47 1 330 1 67 3 176 20 242 1 267 1 244 4 205 2 269 1 90 4 92 1 
284 25 227 2 179 7 336 2 155 2 111 4 246 1 247 1 337 1 248 7 232 1 57 1 311 4 161 4 183 1 213 8 186 1 294 1 114 14 296 4 136 1 318 7 279 1 120 2 35 2 352 1 219 1 85 52 124 1 43 1 282 2 222 7 47 1 330 1 67 7 176 27 242 1 267 1 244 2 205 1 90 8 92 1 
278 1 229 1 198 1 30 1 17 1 314 1 253 1 105 1 193 1 101 1 
103 1 187 1 
278 1 147 1 30 1 314 1 253 1 105 1 354 1 304 1 101 1 
170 1 151 1 
357 1 149 1 316 1 
347 1 256 1 278 1 53 1 229 1 198 1 105 1 14 1 181 2 49 1 30 1 356 1 17 1 253 1 314 1 78 1 101 1 20 1 
347 1 256 1 278 1 53 1 229 1 198 1 105 1 14 1 181 2 49 1 30 1 356 1 17 1 253 1 314 1 78 1 101 1 20 1 
347 1 256 1 278 1 53 1 229 1 198 1 105 1 14 1 181 2 49 1 30 1 356 1 17 1 253 1 314 1 78 1 101 1 20 1 
170 1 149 1 151 1 
170 1 149 1 151 1 
357 1 316 1 
357 1 149 1 316 1 
144 1 41 1 
307 1 178 1 96 2 181 1 134 2 30 1 187 1 314 1 253 1 101 1 278 1 103 1 36 1 298 1 281 1 41 1 105 1 327 2 14 1 199 2 45 2 66 1 144 1 49 1 356 1 303 1 20 1 
284 1 155 1 180 1 96 2 159 2 182 1 134 2 212 1 251 1 184 1 272 1 8 2 296 2 217 1 80 1 195 1 168 1 35 1 122 1 85 2 326 1 199 2 126 1 282 1 355 1 200 2 223 2 176 1 244 1 206 1 334 1 
290 1 84 2 230 1 208 1 86 1 220 1 326 1 221 1 145 1 46 1 211 1 223 2 200 2 185 1 99 1 8 2 345 1 117 1 206 1 
290 1 84 2 140 1 230 1 86 1 220 1 326 1 221 1 145 1 211 1 223 1 200 1 185 1 99 1 8 1 117 1 206 1 
86 1 326 1 15 1 355 1 223 1 200 1 272 1 8 1 345 1 16 1 206 1 119 1 317 1 305 1 
290 1 84 2 230 1 86 1 220 1 326 1 221 1 145 1 46 1 211 1 223 1 200 1 185 1 99 1 8 1 345 1 117 1 206 1 
225 1 
319 1 347 1 295 1 265 1 31 1 158 1 333 1 
226 1 23 1 73 1 295 1 166 1 77 1 215 1 319 1 347 2 320 1 82 1 174 1 49 1 203 1 150 1 20 1 333 1 
130 1 131 3 56 2 233 2 5 1 272 3 8 3 276 3 318 2 319 9 320 4 63 2 280 1 324 6 237 2 326 3 200 3 203 4 241 6 150 6 206 4 333 2 332 2 20 5 248 2 208 1 158 1 23 12 340 1 73 4 341 2 162 2 213 2 295 8 32 1 77 4 79 1 118 2 119 1 215 5 347 8 174 3 222 2 261 2 262 2 355 10 223 3 265 1 49 5 128 1 50 2 360 2 361 2 90 2 
336 1 111 1 228 1 248 2 56 2 23 6 232 1 73 2 341 1 161 1 5 1 162 1 213 2 294 1 295 5 77 2 215 1 318 2 319 8 347 5 320 2 174 1 324 5 222 2 239 1 330 1 49 1 241 5 203 2 267 1 242 1 150 3 90 2 20 1 333 2 
0 1 71 1 56 2 96 1 73 1 57 1 162 1 134 1 75 1 213 2 295 2 29 1 77 1 319 2 138 1 320 1 352 1 323 1 259 1 327 1 199 1 45 1 49 1 203 1 90 1 68 1 92 1 20 1 
319 1 347 1 320 1 158 1 73 1 265 1 295 1 203 1 77 1 333 1 
319 5 347 5 248 2 56 2 324 5 23 10 233 1 222 2 162 1 213 2 295 5 241 5 150 5 90 2 318 2 
347 1 49 1 174 1 333 1 20 1 215 1 
70 1 94 1 73 1 341 2 5 2 272 1 295 2 8 4 165 1 77 2 119 2 215 4 319 2 320 2 83 1 280 2 174 2 326 1 355 1 200 4 223 4 49 3 203 2 16 1 128 1 110 1 206 1 305 1 20 3 
207 1 284 1 177 1 155 1 71 1 131 1 96 2 134 3 251 1 272 1 8 1 296 2 119 1 216 1 80 1 35 1 122 1 85 1 327 2 326 1 64 1 199 3 45 2 282 1 66 1 355 1 200 1 223 1 244 1 68 2 91 1 206 1 
319 1 347 4 320 1 324 2 23 4 73 1 341 1 5 1 186 1 295 2 241 2 203 1 150 2 77 1 333 2 
109 1 314 1 253 1 
109 1 314 1 253 1 
144 1 173 1 17 1 314 1 253 1 
109 1 314 1 253 1 
313 1 314 1 253 1 
313 1 314 1 253 1 
313 1 314 1 253 1 
314 1 253 1 
105 1 101 1 
284 4 279 1 179 2 35 2 155 2 246 1 352 1 85 8 57 1 282 2 213 1 186 1 114 3 67 1 176 4 296 4 244 2 205 1 90 1 92 1 
284 3 279 1 179 2 246 1 352 1 85 6 57 1 213 1 186 1 114 2 31 1 176 3 90 1 92 1 
284 2 179 1 35 1 155 1 248 1 85 4 282 1 222 1 213 1 114 2 240 1 67 1 176 2 296 2 244 1 90 1 318 1 
284 4 227 1 179 1 336 1 111 1 248 1 85 7 222 1 161 2 213 1 114 2 67 1 176 3 90 1 318 1 
284 12 227 1 179 5 111 2 155 2 246 1 248 2 57 1 161 2 213 3 186 1 114 9 296 4 318 2 279 1 120 1 35 2 352 2 85 23 282 2 222 2 67 4 176 11 359 1 244 2 205 2 90 3 92 2 21 1 
284 1 161 1 85 1 
111 1 176 1 85 1 
284 3 35 1 179 2 155 1 248 1 85 6 233 1 282 1 222 1 213 1 114 3 240 1 67 1 176 3 296 2 244 1 90 1 318 1 
284 6 179 1 111 1 336 1 155 1 248 2 232 1 161 1 213 2 114 2 294 1 296 2 136 1 318 2 35 1 85 12 282 1 222 2 67 1 330 1 176 6 267 1 242 1 244 1 90 2 
284 3 179 1 352 1 85 6 57 1 213 1 114 2 67 1 176 3 90 1 92 1 
284 2 279 1 179 1 35 1 155 1 246 1 352 1 85 3 282 1 114 2 67 1 176 1 359 1 296 2 244 1 205 1 92 1 
284 5 35 1 179 3 155 1 352 2 323 1 85 10 57 1 282 1 213 2 114 5 67 2 176 5 296 2 244 1 136 1 90 2 92 2 
35 1 155 1 248 1 85 2 282 1 213 1 114 1 67 1 176 2 296 2 244 1 136 1 
284 2 179 1 35 1 155 1 248 1 85 4 282 1 222 1 213 1 114 2 67 1 176 2 296 2 244 1 136 1 90 1 318 1 
284 2 35 3 179 1 155 3 352 1 85 3 25 1 282 3 114 2 67 1 176 1 359 1 296 6 244 3 205 1 136 1 92 1 
284 18 227 1 179 7 336 1 155 5 111 3 246 1 248 3 25 1 57 2 161 4 213 5 186 1 114 12 315 1 296 10 136 1 102 1 318 3 279 1 35 5 169 1 352 3 85 34 282 5 222 3 240 1 67 5 176 16 359 1 244 5 205 2 90 5 92 3 
284 4 179 2 111 1 336 1 155 1 246 1 57 1 161 1 213 1 186 1 114 2 296 2 136 1 279 1 35 1 352 1 85 8 282 1 176 4 267 1 244 1 90 1 92 1 
284 5 227 1 179 2 336 1 155 2 111 1 246 1 248 1 57 1 161 2 213 2 186 1 114 3 296 4 136 1 318 1 279 1 35 2 352 1 85 11 282 2 240 1 67 1 176 6 267 1 244 2 90 1 92 1 
284 10 179 3 111 1 336 1 155 3 246 1 248 2 232 1 57 1 161 1 213 3 186 1 114 4 294 1 296 6 136 1 318 2 279 1 35 3 352 1 85 19 282 3 222 2 240 1 67 1 330 1 176 9 267 1 242 1 244 3 205 1 90 3 92 1 
284 7 179 3 111 1 336 1 155 3 246 1 248 2 232 1 57 1 161 1 213 3 186 1 114 5 294 1 296 6 136 1 318 2 279 1 35 3 352 1 85 17 282 3 222 1 240 1 67 2 330 1 176 10 267 1 242 1 244 3 205 1 90 2 92 1 
284 4 179 2 111 1 336 1 155 1 246 1 57 1 161 1 213 1 186 1 114 2 296 2 136 1 279 1 35 1 352 1 85 8 282 1 176 4 267 1 244 1 90 1 92 1 
284 6 179 1 111 1 336 1 155 1 248 2 232 1 161 1 213 2 114 2 294 1 296 2 136 1 318 2 35 1 85 12 282 1 222 2 67 1 330 1 176 6 267 1 242 1 244 1 90 2 
284 8 179 3 336 1 155 4 111 1 246 1 248 2 232 1 57 1 161 1 213 3 186 1 294 1 114 5 296 8 136 1 318 2 279 1 35 4 352 1 85 18 282 4 222 1 67 2 240 1 330 1 176 10 267 1 242 1 244 4 205 2 90 2 92 1 
284 7 179 3 336 1 155 4 111 1 248 3 232 1 25 1 161 1 213 3 294 1 114 6 296 8 136 1 318 3 35 4 85 16 282 4 222 2 67 3 330 1 176 9 267 1 242 1 244 4 205 2 90 2 
284 4 279 2 179 3 246 1 352 3 85 7 57 1 213 1 114 6 67 3 176 3 90 1 92 3 
284 8 179 3 336 1 155 4 111 1 246 1 248 2 232 1 25 1 57 1 161 1 213 3 186 1 294 1 114 4 296 8 136 1 318 2 279 1 35 4 352 1 85 18 282 4 222 1 67 1 330 1 176 10 267 1 242 1 244 4 205 2 90 2 92 1 
66 1 87 1 134 1 339 1 96 1 210 1 199 1 
288 1 1 1 339 1 2 1 249 1 96 1 210 1 199 1 66 1 87 1 134 1 152 1 
355 1 200 1 223 1 272 1 31 1 8 1 16 1 326 1 206 1 305 1 119 1 
207 1 131 1 258 1 96 1 327 1 326 1 64 1 45 1 199 2 66 1 134 2 355 1 223 1 200 1 272 1 8 1 206 1 119 1 
207 1 138 1 129 1 280 1 131 2 258 1 96 1 327 1 326 1 64 1 45 1 199 1 134 1 355 3 223 1 200 1 272 2 8 1 88 1 360 1 118 1 206 1 
348 1 138 1 129 1 280 1 131 2 258 1 96 1 327 1 326 1 64 1 45 1 199 1 134 1 355 3 223 1 200 1 272 2 8 1 88 1 360 1 118 1 206 1 
347 1 112 1 280 1 131 1 171 1 326 1 262 1 355 4 223 3 200 3 272 1 49 2 8 3 360 1 276 1 118 1 61 1 119 1 206 1 333 1 332 1 20 2 215 1 
347 1 112 1 280 1 131 1 326 1 262 1 355 4 223 3 200 3 272 1 49 2 8 3 50 1 360 1 276 1 118 1 119 1 206 1 333 1 332 1 20 2 215 1 
200 1 223 1 8 1 274 1 326 1 206 1 
197 1 131 1 12 1 208 1 209 1 340 1 159 1 326 2 160 1 4 1 355 3 223 7 200 7 272 2 8 6 274 1 117 1 119 2 206 3 217 1 283 1 
207 1 284 3 177 1 179 2 286 1 155 2 246 1 131 1 208 1 96 1 57 1 342 1 134 2 251 2 213 1 186 1 114 2 272 1 135 1 8 1 296 4 255 1 80 2 195 1 279 1 35 2 258 1 352 1 85 6 326 1 327 1 64 1 199 2 45 1 126 1 282 2 66 2 107 1 355 1 223 1 200 1 176 3 244 2 90 1 206 1 91 1 92 1 
307 1 158 1 73 2 295 1 8 1 77 2 276 1 119 1 215 2 319 1 347 1 320 2 63 1 174 1 261 1 262 1 355 2 223 1 200 1 265 1 49 3 203 2 128 1 50 1 361 1 333 1 20 3 332 1 
131 1 208 1 340 1 326 1 262 1 355 2 223 2 200 2 272 1 8 2 274 1 79 1 206 2 
112 1 208 1 326 1 343 1 355 1 223 4 200 4 272 1 8 4 16 1 206 1 119 1 305 1 
257 1 280 1 197 1 131 1 97 1 326 1 160 1 293 1 355 1 223 2 200 2 272 1 8 2 206 2 
145 1 290 1 84 1 200 1 223 1 8 1 326 1 221 1 206 1 119 1 
208 1 326 1 212 1 355 1 223 2 200 2 272 1 8 2 117 1 206 1 217 1 
280 1 208 1 209 1 326 2 343 1 355 3 223 5 200 5 272 2 8 4 16 1 305 1 119 1 206 2 283 1 217 1 
280 1 208 1 209 1 326 2 343 1 355 3 223 5 200 5 272 2 8 4 16 1 189 1 305 1 119 1 206 2 217 1 
348 1 131 1 258 1 96 1 327 1 326 1 64 1 45 1 199 2 66 1 134 2 355 1 223 1 200 1 272 1 8 1 206 1 119 1 
280 1 197 1 131 1 12 1 340 1 326 1 160 1 355 1 223 1 200 1 272 1 8 1 206 2 
66 1 153 1 172 1 48 1 3 1 
307 1 153 1 138 1 129 1 172 1 231 1 3 1 292 1 132 1 263 1 48 1 7 1 49 1 88 1 20 1 
134 1 168 1 184 1 48 1 172 1 96 1 199 1 334 1 3 1 
292 1 263 1 48 1 
22 1 31 1 266 1 260 1 
22 1 74 1 310 1 201 1 39 1 266 1 260 1 
74 1 89 1 235 1 
22 1 74 3 310 1 58 1 201 3 39 1 266 1 260 1 60 1 302 2 125 1 277 1 
22 1 74 2 175 1 11 1 310 1 201 2 39 1 266 1 260 1 
310 1 84 1 39 1 230 1 125 1 145 1 74 1 164 1 201 1 266 1 51 1 
74 1 310 1 201 1 39 1 266 1 260 1 125 1 
22 1 74 1 310 1 201 1 39 1 260 2 125 1 
310 2 218 1 39 2 338 1 260 1 125 1 74 2 201 2 266 1 268 1 
22 1 310 1 39 1 260 1 125 1 250 1 301 1 74 3 175 2 164 1 201 3 202 1 266 2 
22 1 84 2 310 1 39 1 230 1 260 1 125 1 221 1 145 1 74 2 175 1 201 2 99 1 188 1 266 1 
22 1 11 1 310 2 39 2 260 1 125 1 74 4 175 2 164 1 201 4 202 1 266 2 362 1 
22 1 74 1 310 1 201 1 39 1 266 1 260 1 125 1 
22 2 289 1 310 1 39 1 260 2 302 1 74 4 175 2 164 1 58 1 201 4 202 1 266 3 60 1 
22 1 310 1 39 1 260 1 125 1 143 1 74 2 175 1 201 2 266 1 275 1 167 1 
194 1 22 1 310 1 39 1 260 1 125 1 302 2 74 3 58 1 201 3 266 1 60 2 
26 1 55 1 266 2 299 2 
74 1 310 1 201 1 39 1 252 1 125 1 
22 1 74 2 175 1 310 1 201 2 39 1 266 1 260 1 301 1 125 1 
18 1 
22 1 74 1 310 1 201 1 39 1 266 1 260 1 125 1 
22 1 74 3 175 1 310 1 201 3 39 1 266 1 260 1 301 1 302 1 125 1 
289 1 164 1 202 1 266 1 
266 1 260 1 

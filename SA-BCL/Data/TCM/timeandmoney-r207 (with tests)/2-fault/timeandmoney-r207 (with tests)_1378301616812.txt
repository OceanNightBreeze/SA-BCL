#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V ERROR java.lang.NullPointerException 139 104 53 126 216 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V ERROR java.lang.NullPointerException 139 104 53 126 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z | ASSIGN | 8887 | = null
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint; | OPERATOR | 2906 | * -> >>
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
21 1 244 1 322 2 22 5 346 2 2 2 198 6 4 1 43 1 7 1 298 3 369 9 29 1 30 9 255 1 31 1 309 1 352 2 274 2 235 1 334 4 356 1 189 1 17 2 215 1 339 1 380 2 168 1 
21 1 244 1 322 2 22 5 346 2 2 2 198 6 4 1 43 1 7 1 298 3 369 9 29 1 30 9 255 1 31 1 309 1 352 2 274 2 235 1 334 4 356 1 189 1 17 2 215 1 339 1 380 2 168 1 
21 1 244 1 322 2 22 6 346 2 2 2 198 7 4 1 43 1 7 1 298 4 369 10 29 1 30 10 255 1 31 1 309 1 352 2 274 2 235 1 334 5 356 1 189 1 17 2 215 1 339 1 380 2 168 1 
21 1 244 1 322 2 22 4 346 2 2 2 198 4 43 1 7 1 298 2 369 7 29 1 30 7 255 1 31 1 309 1 352 2 274 2 235 1 334 3 356 1 189 1 17 2 215 1 339 1 380 1 168 1 
21 1 322 1 22 3 274 1 352 1 235 1 2 1 198 3 4 1 334 2 356 1 298 1 369 4 17 1 215 1 29 1 30 4 380 2 
21 1 22 1 292 1 274 1 352 1 235 1 346 1 2 1 356 1 7 1 369 2 263 1 17 1 30 2 176 1 168 1 
21 1 22 2 274 2 352 2 235 1 346 1 198 1 43 1 334 1 356 1 298 1 369 3 30 3 
21 1 244 1 322 1 22 5 346 1 198 7 2 1 43 1 4 1 298 3 369 9 29 1 30 9 309 1 157 1 232 1 352 2 274 2 235 1 334 4 356 1 17 1 215 1 380 2 
21 1 244 1 322 1 22 5 346 1 198 7 2 1 43 1 4 1 298 3 369 9 29 1 30 9 309 1 157 1 232 1 352 2 274 2 235 1 334 4 356 1 17 1 215 1 380 2 
331 1 220 1 145 1 
220 1 280 2 163 1 
190 2 135 2 84 2 136 2 159 1 328 1 20 2 127 2 
343 2 367 1 66 1 197 2 97 1 368 1 44 1 149 1 171 2 135 2 10 1 174 1 9 1 136 2 328 1 271 1 181 1 156 1 349 1 33 1 258 2 209 1 159 1 111 1 210 1 37 1 190 3 84 2 85 1 237 1 59 1 60 1 121 1 360 1 241 2 20 3 127 2 
190 1 135 1 84 1 136 1 159 1 306 1 54 1 20 1 91 1 127 1 
220 1 374 1 75 1 145 1 3 1 262 1 45 1 135 1 190 1 370 1 306 1 49 1 20 1 348 1 
220 1 374 1 145 1 3 2 45 1 135 1 190 1 370 1 84 1 136 1 306 1 49 2 20 1 348 1 127 1 
55 1 132 1 3 1 49 1 372 1 
220 1 145 1 132 1 378 1 3 2 49 2 372 1 70 1 
132 1 3 1 49 1 
183 1 159 1 3 1 54 1 135 1 190 1 84 1 136 1 306 1 49 1 372 1 20 1 91 1 127 1 
220 1 
350 1 220 1 145 1 132 1 378 1 3 2 49 2 372 1 
218 1 219 1 351 1 220 1 208 1 145 1 313 1 332 1 132 2 3 5 42 1 223 1 357 2 378 1 49 5 372 2 342 2 321 1 138 2 
331 1 328 1 
353 1 135 2 190 2 84 1 48 1 136 1 328 2 20 2 127 1 
207 1 217 1 147 1 
33 1 258 1 368 1 171 1 190 1 85 1 174 1 121 1 59 1 237 1 360 1 328 1 241 1 20 1 179 1 181 1 
353 1 94 1 67 1 262 1 135 5 190 5 84 4 202 1 136 4 328 1 379 2 20 5 182 1 127 1 
190 2 135 2 84 2 213 1 136 2 306 1 54 1 20 2 
33 1 94 1 258 1 368 1 171 1 135 1 190 2 84 1 85 1 174 1 237 1 59 1 121 1 360 1 217 1 136 1 379 1 241 1 20 2 181 1 
190 3 135 3 84 3 136 3 328 1 379 1 20 3 127 1 
190 1 135 1 84 1 136 1 306 1 54 1 20 1 
190 1 135 1 84 1 353 1 48 1 136 1 306 1 20 1 127 1 
343 1 367 1 94 1 66 1 197 2 97 1 368 1 3 1 170 1 149 1 171 1 45 1 135 3 370 1 10 1 174 1 136 3 328 1 271 1 306 1 49 1 181 1 348 1 156 1 349 1 353 1 374 1 33 1 258 1 159 1 111 1 190 4 84 3 85 1 358 1 237 1 59 1 121 1 60 1 360 1 379 1 241 1 20 4 127 2 
190 2 135 2 84 1 67 1 136 1 328 1 379 1 20 2 262 1 
353 1 220 1 64 1 374 1 94 1 3 1 45 1 135 3 190 3 370 1 84 3 358 1 136 3 306 1 49 1 379 2 20 3 348 1 127 1 
353 1 147 1 135 2 190 2 84 2 136 2 217 1 379 1 20 2 127 1 
33 1 258 1 368 1 171 1 190 1 85 1 174 1 121 1 59 1 237 1 360 1 328 1 241 1 20 1 181 1 
128 1 33 1 258 1 368 1 171 1 190 1 72 1 85 1 174 1 59 1 237 1 360 1 306 1 328 1 155 1 241 1 20 1 
291 1 343 4 249 1 197 2 97 1 66 2 147 2 44 2 149 1 25 1 10 1 51 1 180 1 308 1 156 1 349 1 207 2 312 1 139 1 111 1 285 1 217 2 124 1 240 1 
190 1 135 1 84 1 213 1 136 1 306 1 20 1 45 1 
205 1 151 1 
205 1 151 1 
204 1 161 1 
204 1 161 1 
204 1 161 1 
205 1 256 1 151 1 
205 1 256 1 151 1 
86 1 205 1 151 1 
286 1 333 1 204 1 205 2 161 1 151 2 
205 1 256 1 151 1 
362 1 205 1 151 1 
362 1 205 1 151 1 
362 1 205 1 151 1 
129 1 185 1 0 1 234 1 3 1 34 1 115 1 6 1 151 1 190 2 135 2 71 1 103 1 84 2 86 1 142 1 122 1 136 2 328 1 49 1 20 2 365 1 205 1 242 1 
40 1 129 1 63 1 185 2 221 1 220 1 333 1 3 2 34 2 16 2 6 2 151 2 287 1 327 1 122 3 49 2 307 1 205 2 242 2 
322 1 17 1 2 1 
263 1 17 1 2 1 
322 2 263 1 17 3 98 1 24 1 93 1 
266 1 322 1 263 1 17 2 98 1 93 1 
322 1 263 1 17 2 98 2 93 1 
291 1 218 1 366 1 220 2 146 2 132 1 145 1 3 5 42 3 8 1 153 1 103 1 173 1 104 1 49 5 51 1 372 4 308 1 138 1 14 1 208 2 139 1 280 3 115 1 163 1 357 1 87 2 142 1 88 2 378 1 342 1 194 1 
195 1 291 3 218 1 220 5 146 6 132 6 145 1 3 9 223 1 42 8 103 4 153 2 104 3 49 9 51 3 372 7 12 1 308 3 138 2 14 2 208 6 277 1 139 3 280 9 162 1 315 1 163 3 55 5 357 2 118 5 214 1 88 6 378 1 194 1 342 2 
291 1 220 3 145 1 146 2 3 3 223 1 42 3 8 1 153 1 103 1 173 1 104 1 49 3 51 1 372 2 308 1 138 1 14 1 208 2 139 1 280 4 163 2 357 1 87 1 88 2 342 1 
291 2 220 4 145 1 146 4 3 4 223 1 42 5 8 1 153 1 103 2 173 1 104 2 49 4 51 2 372 3 12 1 308 2 138 1 14 1 208 4 139 2 280 7 162 1 163 3 357 1 214 1 87 2 88 4 342 1 
331 1 174 1 18 1 
174 1 233 1 
120 1 
174 1 237 1 59 1 
246 1 174 1 
174 1 237 1 
18 2 174 3 237 1 59 1 275 1 90 1 
291 1 343 7 278 1 312 2 265 1 95 1 66 3 44 4 160 2 80 1 285 3 191 1 304 1 123 1 51 1 178 1 13 1 
291 1 343 7 278 1 312 2 265 1 95 1 66 3 44 4 160 2 80 1 285 3 191 1 304 1 123 1 51 1 178 1 13 1 
291 1 343 7 278 1 312 2 265 1 95 1 66 3 44 4 160 2 80 1 285 3 191 1 316 1 304 1 123 1 51 1 178 1 13 1 
291 2 343 11 312 1 265 2 95 1 53 1 139 2 66 4 345 1 44 7 160 1 188 2 80 1 285 2 104 2 216 1 203 1 51 1 106 2 308 1 126 1 
291 1 349 2 156 2 343 9 375 1 293 1 278 1 312 3 265 1 95 1 66 4 97 2 197 4 111 2 44 5 160 2 226 1 80 1 191 1 285 4 304 1 123 1 51 1 13 1 
21 1 322 1 22 1 346 1 198 1 2 1 24 1 171 1 26 1 369 2 326 1 371 1 30 2 109 1 352 1 274 1 258 1 110 1 279 1 235 1 354 1 356 1 114 1 85 1 263 1 17 2 359 1 360 1 89 1 241 1 
322 1 22 1 346 1 2 1 24 1 198 2 171 1 26 1 369 3 326 1 201 1 371 1 30 3 109 1 352 1 274 1 258 1 377 1 279 1 235 1 354 1 356 1 114 1 85 1 263 1 17 2 359 1 360 1 61 1 241 1 
322 1 22 1 346 1 198 2 24 1 2 1 171 1 26 1 369 2 326 1 201 1 371 1 30 2 109 1 258 1 279 1 235 1 354 1 356 1 85 1 263 1 17 2 360 1 61 1 241 1 
109 2 184 1 274 1 352 1 33 1 276 1 377 1 258 1 346 2 77 1 171 1 26 2 79 1 369 1 85 1 174 1 237 1 371 2 303 1 360 1 193 1 30 1 241 1 
21 1 322 1 346 1 2 1 24 1 171 1 26 1 369 1 326 1 371 1 30 1 109 1 352 1 274 1 258 1 279 1 354 1 114 1 85 1 263 1 17 2 359 1 360 1 61 1 89 1 241 1 
15 1 
344 1 143 2 247 1 145 1 3 5 42 2 296 1 252 1 45 1 105 1 306 1 49 5 52 2 348 1 158 1 14 1 258 2 208 2 262 1 163 2 212 1 117 1 357 1 116 1 166 2 360 1 20 1 62 2 218 1 220 2 131 2 132 6 171 2 135 1 267 4 370 1 174 1 138 1 231 2 33 2 374 1 276 1 75 1 280 2 77 1 282 1 190 1 85 1 140 1 237 1 378 3 288 1 241 2 289 2 342 1 
344 1 132 2 3 3 296 1 45 1 135 1 267 2 370 1 105 1 306 1 49 3 348 1 350 1 374 1 75 1 262 1 190 1 116 1 140 1 166 1 378 1 20 1 
344 1 220 1 132 1 145 1 3 3 296 1 45 1 135 1 267 3 370 1 105 1 306 1 49 3 348 1 350 1 374 1 75 1 262 1 190 1 116 1 140 1 378 1 20 1 289 1 
344 1 131 1 220 1 132 2 145 1 3 3 296 1 45 1 135 1 267 3 370 1 105 1 306 1 49 3 348 1 350 1 374 1 75 1 262 1 190 1 116 1 140 1 166 1 378 1 20 1 289 1 
245 1 344 1 143 2 145 5 3 5 42 1 296 1 45 1 254 1 306 1 105 1 49 5 52 2 348 1 350 1 158 1 259 1 208 1 261 1 262 1 212 1 163 2 116 1 357 1 166 4 20 1 62 2 218 1 131 4 220 5 132 7 267 6 135 1 370 1 228 1 138 1 231 2 374 1 75 1 190 1 140 1 378 3 289 4 342 1 
344 1 143 2 247 1 145 1 3 4 42 1 296 1 45 1 306 1 105 1 49 4 52 2 348 1 158 1 208 1 262 1 212 1 163 2 357 1 116 1 166 2 20 1 62 2 218 1 131 2 220 2 132 4 267 4 135 1 370 1 138 1 231 2 374 1 75 1 280 2 190 1 140 1 378 2 289 2 342 1 
218 1 344 1 143 2 220 1 131 2 145 1 132 4 3 4 42 1 296 1 45 1 135 1 267 4 370 1 254 1 228 1 105 1 306 1 49 4 52 2 348 1 138 1 231 2 158 1 374 1 75 1 208 1 259 1 262 1 163 2 212 1 190 1 357 1 116 1 140 1 166 2 378 2 289 2 20 1 342 1 62 2 
218 1 344 1 143 2 220 1 131 2 145 1 132 4 3 4 42 1 296 1 45 1 135 1 267 4 370 1 254 1 228 1 105 1 306 1 49 4 52 2 348 1 138 1 231 2 158 1 374 1 75 1 208 1 259 1 262 1 163 2 212 1 190 1 357 1 116 1 140 1 166 2 378 2 289 2 20 1 342 1 62 2 
218 1 344 1 220 1 131 2 145 1 132 4 324 1 3 4 325 1 42 1 41 1 296 1 45 1 135 1 267 4 268 2 370 1 254 1 105 1 306 1 49 4 52 2 348 1 138 1 374 1 75 1 208 1 280 2 113 2 262 1 212 1 190 1 357 1 116 1 140 1 166 2 378 2 289 2 20 1 342 1 62 2 
218 1 245 1 344 1 143 2 220 1 131 3 145 1 132 5 3 4 42 1 296 1 45 1 135 1 267 5 370 1 254 1 228 1 105 1 306 1 49 4 52 2 348 1 138 1 231 2 158 1 374 1 75 1 208 1 259 1 262 1 163 2 212 1 190 1 357 1 116 1 140 1 166 3 378 2 20 1 289 3 342 1 62 2 
218 1 245 1 344 1 143 2 220 1 131 3 145 1 132 5 3 4 42 1 296 1 45 1 135 1 267 5 370 1 254 1 228 1 105 1 306 1 49 4 52 2 348 1 138 1 231 2 158 1 374 1 75 1 208 1 259 1 262 1 163 2 212 1 190 1 357 1 116 1 140 1 166 3 378 2 20 1 289 3 342 1 62 2 
344 1 247 1 145 1 3 4 42 1 296 1 45 1 306 1 105 1 49 4 52 2 348 1 208 1 113 2 262 1 212 1 357 1 116 1 166 2 20 1 62 2 218 1 131 2 220 1 132 4 324 1 267 4 135 1 370 1 268 2 138 1 374 1 75 1 280 2 190 1 140 1 378 2 289 2 342 1 
291 1 343 6 197 2 97 1 66 3 147 1 149 1 44 3 10 1 304 1 328 2 51 1 13 1 156 1 349 1 331 1 207 1 312 2 278 1 111 1 160 1 191 1 285 2 217 1 123 1 124 1 
291 2 343 14 248 1 66 6 197 4 97 2 345 1 295 1 147 4 149 2 44 8 10 1 104 2 203 1 328 1 271 1 272 1 51 1 137 1 106 3 308 1 156 2 349 2 207 11 312 1 139 2 111 2 210 1 188 3 80 1 285 2 217 11 317 1 
343 2 94 1 169 1 97 1 197 2 66 1 368 1 147 1 295 1 171 1 149 1 44 1 27 1 135 1 174 1 10 1 136 1 328 1 271 1 50 1 179 1 181 1 349 1 156 1 33 1 258 1 111 1 210 1 190 2 84 1 85 1 237 1 59 1 121 1 360 1 241 1 379 1 20 2 
291 3 343 20 94 1 197 6 97 3 99 1 295 1 147 7 149 3 44 10 10 3 104 2 304 1 51 3 308 2 13 1 108 2 156 3 349 3 207 7 258 3 312 4 111 3 160 1 210 1 60 2 121 2 59 2 360 2 61 1 217 7 123 1 20 3 66 10 368 2 171 3 135 1 174 2 269 1 136 1 328 2 271 1 229 2 329 2 181 2 376 1 33 1 278 1 139 2 36 2 80 4 190 3 84 1 85 2 191 1 285 8 237 2 241 3 379 1 
343 2 197 4 97 2 66 1 171 8 149 2 44 1 200 1 135 1 174 3 10 2 136 1 271 1 156 2 349 2 32 1 33 2 258 8 276 1 110 1 260 1 111 2 77 1 210 1 211 1 336 1 37 2 190 1 84 1 85 2 58 1 38 1 237 2 360 2 61 1 124 1 379 1 241 7 20 1 
291 1 343 3 197 2 97 1 66 2 147 1 295 1 149 1 44 1 135 1 10 1 104 1 136 1 51 1 308 1 156 1 349 1 207 1 353 1 312 1 139 1 111 1 190 1 84 1 285 1 19 1 217 1 20 1 127 1 
291 1 349 1 156 1 343 2 207 1 97 1 197 2 139 1 147 1 111 1 149 1 44 2 80 1 285 1 10 1 217 1 124 1 240 1 
349 1 156 1 343 2 207 1 249 1 312 1 97 1 197 2 66 2 147 1 111 1 149 1 285 1 10 1 217 1 124 1 51 1 308 1 
291 1 343 4 197 2 97 1 66 2 147 2 44 2 149 1 10 1 104 1 51 1 308 1 156 1 349 1 207 2 312 1 139 1 111 1 80 1 285 2 217 2 124 1 
291 1 349 1 156 1 343 2 32 1 207 1 97 1 197 2 139 1 147 1 111 1 149 1 44 2 80 1 285 1 10 1 217 1 240 1 
349 1 156 1 343 2 32 1 207 1 249 1 312 1 97 1 197 2 66 2 147 1 111 1 149 1 285 1 10 1 217 1 51 1 308 1 
291 1 343 4 197 2 97 1 66 2 147 2 44 2 149 1 10 1 104 1 51 1 308 1 156 1 349 1 32 1 207 2 312 1 139 1 111 1 80 1 285 2 217 2 
291 1 343 4 197 2 97 1 66 2 147 2 44 2 149 1 10 1 104 1 51 1 308 1 156 1 349 1 207 2 312 1 139 1 111 1 80 1 285 2 217 2 
343 2 97 1 197 2 66 1 368 1 44 1 171 1 149 1 174 1 10 1 328 1 271 1 181 1 349 1 156 1 33 1 258 1 111 1 210 1 190 1 85 1 237 1 59 1 121 1 60 1 360 1 241 1 20 1 
128 1 343 1 97 1 197 2 66 1 368 1 171 1 149 1 72 1 174 1 10 1 253 1 306 1 328 1 271 1 155 1 349 1 156 1 33 1 258 1 111 1 190 1 85 1 237 1 59 1 360 1 241 1 20 1 
291 1 343 4 197 2 97 1 66 2 295 1 147 2 44 2 149 1 10 1 104 1 51 1 308 1 156 1 349 1 207 2 312 1 139 1 111 1 80 1 285 2 217 2 
291 1 343 4 66 2 97 1 197 2 147 2 368 1 44 2 171 1 149 1 174 1 10 1 104 1 51 1 308 1 181 1 108 1 349 1 156 1 207 2 258 1 312 1 110 1 139 1 111 1 80 1 190 1 85 1 285 2 59 1 121 1 60 1 237 1 360 1 217 2 241 1 20 1 
291 1 343 3 66 1 197 2 97 1 295 1 147 1 149 1 44 2 135 1 10 1 104 1 136 1 51 1 308 1 156 1 349 1 353 1 207 1 139 1 111 1 283 1 80 1 190 1 84 1 285 1 217 1 20 1 127 1 
291 3 343 19 197 4 97 2 66 10 345 1 44 9 5 1 100 2 226 1 104 3 203 1 51 3 106 1 308 3 156 2 349 2 76 1 312 3 139 3 236 1 187 1 111 2 355 2 188 2 337 1 80 3 285 6 141 1 92 1 
291 3 343 26 293 2 66 12 197 6 97 3 44 14 5 2 100 1 226 1 47 1 104 3 11 1 203 2 177 1 51 2 106 2 308 2 156 3 349 3 312 2 139 3 187 2 111 3 355 4 188 2 80 2 337 1 285 4 57 1 141 1 361 1 39 1 92 1 
291 5 343 41 293 1 345 1 97 3 197 6 1 1 44 20 5 2 100 1 47 1 104 4 11 1 304 1 203 3 51 5 106 3 308 4 13 1 349 3 156 3 312 4 111 3 355 4 160 1 57 1 361 1 123 1 66 21 226 1 177 1 76 1 278 1 139 4 187 1 188 4 80 4 337 1 285 8 191 1 141 1 39 1 92 1 
291 5 343 38 293 2 197 8 97 4 66 18 345 1 1 1 44 20 5 2 100 1 226 1 47 1 104 4 11 1 304 1 203 3 177 1 51 4 106 3 308 3 13 1 156 4 349 4 76 1 278 1 312 4 139 4 187 1 111 4 160 1 355 4 188 4 337 1 80 3 191 1 57 1 285 7 141 1 361 1 123 1 39 1 92 1 
291 8 343 52 293 1 197 4 97 2 66 25 345 2 44 27 5 1 100 1 226 1 47 1 104 7 11 1 304 1 203 2 177 1 272 2 51 8 106 4 308 7 13 1 156 2 349 2 278 1 312 7 139 7 187 1 111 2 160 1 355 4 188 4 337 1 80 7 191 1 57 1 285 14 141 1 361 1 123 1 39 1 92 1 
40 1 63 1 185 1 333 1 68 1 34 1 6 1 242 1 205 1 151 1 
86 1 234 1 
196 1 185 1 34 1 340 1 6 1 242 1 205 1 243 1 151 1 
82 1 256 1 
286 1 362 1 297 1 
40 1 129 1 63 1 185 1 220 1 333 1 3 1 34 1 16 1 6 1 151 1 287 1 327 1 122 2 49 1 307 1 205 1 242 1 
40 1 129 1 63 1 185 1 220 1 333 1 3 1 34 1 16 1 6 1 151 1 287 1 327 1 122 2 49 1 307 1 205 1 242 1 
40 1 129 1 63 1 185 1 220 1 333 1 3 1 34 1 16 1 6 1 151 1 287 1 327 1 122 2 49 1 307 1 205 1 242 1 
82 1 286 1 256 1 
82 1 286 1 256 1 
362 1 297 1 
286 1 362 1 297 1 
0 1 365 1 
0 1 3 1 6 1 151 1 135 2 71 1 103 1 327 1 136 2 328 1 49 1 372 1 205 1 185 1 234 1 16 1 34 1 115 1 190 2 84 2 86 1 142 1 122 1 167 1 20 2 242 1 365 1 
343 2 23 1 97 1 197 2 66 1 295 1 148 1 171 2 149 1 44 1 135 2 174 1 10 1 271 1 347 1 349 1 156 1 258 2 260 1 111 1 210 1 336 1 37 2 190 2 85 1 56 1 237 1 360 1 241 2 20 2 320 1 
322 1 109 1 258 2 110 1 279 1 2 1 24 1 171 2 354 1 114 1 199 1 263 1 85 1 165 1 17 2 360 1 61 1 239 1 241 2 
322 1 109 1 258 1 279 1 2 1 24 1 171 1 354 1 114 1 152 1 263 1 165 1 85 1 17 2 360 1 61 1 241 1 
109 1 184 1 33 1 258 1 276 1 77 1 171 1 199 1 85 1 174 1 237 1 360 1 241 1 364 1 
322 1 109 1 258 1 279 1 2 1 24 1 171 1 354 1 114 1 199 1 263 1 165 1 85 1 17 2 360 1 61 1 239 1 241 1 
134 1 
331 1 351 1 220 1 208 1 145 1 42 1 321 1 
218 1 143 1 220 2 132 1 145 1 3 1 42 1 49 1 138 1 231 1 158 1 208 1 280 1 163 1 357 1 378 1 342 1 
291 2 246 2 145 2 146 6 294 1 3 5 42 9 150 2 301 1 104 2 49 5 51 2 206 2 348 2 308 2 257 1 351 1 14 2 258 3 110 1 208 8 163 6 117 1 357 4 18 2 59 3 360 4 319 2 321 1 218 4 220 8 222 2 132 5 171 3 73 2 227 2 174 10 175 2 74 1 229 2 138 4 33 1 233 3 275 1 139 2 280 12 281 2 85 3 237 3 88 6 378 3 241 3 342 4 290 1 
218 2 291 2 220 5 132 1 222 2 146 5 145 2 3 1 42 8 47 1 104 2 11 1 203 1 177 1 49 1 51 2 206 1 106 1 308 2 138 2 14 1 208 5 139 2 280 6 188 1 163 3 284 1 117 1 357 2 119 1 57 1 88 5 378 1 39 1 342 2 
218 1 291 2 222 2 3 1 42 2 135 1 228 1 136 1 306 1 49 1 51 1 206 1 13 1 330 1 138 1 183 1 278 1 208 2 159 1 54 1 190 1 357 1 84 1 123 1 20 1 342 1 91 1 127 1 
218 1 351 1 220 1 208 1 145 1 42 1 357 1 342 1 321 1 138 1 
291 2 220 5 208 5 222 2 139 2 146 5 280 10 42 5 163 5 104 2 88 5 229 1 51 2 206 1 308 2 
220 1 145 1 132 1 378 1 3 1 49 1 
218 1 132 4 3 3 223 1 42 2 171 4 252 1 174 1 301 2 49 3 154 1 138 2 257 1 14 2 33 2 258 4 276 1 208 2 77 1 357 2 117 2 85 1 237 1 238 1 360 1 288 1 378 2 241 4 342 2 
343 1 367 1 66 1 197 2 97 1 368 1 171 1 149 1 135 2 174 1 10 1 136 2 328 1 271 1 181 1 156 1 349 1 33 1 258 1 159 1 111 1 190 3 84 2 85 1 60 1 121 1 59 1 237 1 360 1 241 1 20 3 127 2 
218 1 14 1 220 4 208 2 146 2 145 2 280 4 42 1 160 1 163 2 357 1 117 1 88 2 342 1 138 1 
96 1 6 1 242 1 
96 1 6 1 242 1 
63 1 250 1 365 1 6 1 242 1 
96 1 6 1 242 1 
35 1 6 1 242 1 
35 1 6 1 242 1 
35 1 6 1 242 1 
6 1 242 1 
205 1 151 1 
291 1 349 2 156 2 343 8 293 1 278 1 312 2 66 4 97 2 197 4 111 2 44 4 160 1 80 1 285 3 191 1 304 1 123 1 51 1 13 1 
291 1 331 1 343 6 312 2 278 1 66 3 44 3 160 1 191 1 285 2 304 1 123 1 51 1 13 1 
291 1 349 1 156 1 343 4 312 1 66 2 97 1 197 2 139 1 111 1 69 1 44 2 80 1 285 2 104 1 51 1 308 1 
291 1 343 7 312 1 66 4 345 1 139 1 44 3 188 2 80 1 285 2 104 1 203 1 51 1 106 1 308 1 
291 3 343 23 293 2 345 1 66 12 97 2 197 4 44 11 300 1 104 2 304 1 51 3 272 1 106 2 308 2 13 2 349 2 156 2 278 1 312 5 139 2 111 2 160 1 188 2 80 4 191 1 285 9 123 2 317 1 
343 1 66 1 188 1 
343 1 44 1 106 1 
291 1 156 1 349 1 343 6 312 2 197 2 97 1 66 3 139 1 111 1 69 1 44 3 80 1 285 3 104 1 229 1 51 1 308 1 
291 2 343 12 66 6 197 2 97 1 44 6 226 1 47 1 104 2 11 1 203 1 177 1 51 2 106 1 308 2 156 1 349 1 312 1 139 2 111 1 188 1 80 1 57 1 285 2 39 1 
291 1 343 6 278 1 312 1 66 3 44 3 80 1 285 2 123 1 51 1 13 1 
349 1 156 1 343 3 293 1 312 1 66 2 97 1 197 2 111 1 44 1 80 1 300 1 285 2 191 1 304 1 123 1 13 1 
291 2 156 1 349 1 343 10 312 3 278 1 197 2 97 1 66 5 111 1 44 5 226 1 80 2 285 5 123 2 51 2 330 1 13 2 
291 1 349 1 156 1 343 2 97 1 197 2 139 1 111 1 44 2 226 1 80 1 285 1 
291 1 349 1 156 1 343 4 312 1 66 2 97 1 197 2 139 1 111 1 44 2 226 1 80 1 285 2 104 1 51 1 308 1 
349 3 156 3 343 3 293 1 76 1 312 1 66 2 97 3 197 6 111 3 44 1 226 1 80 1 300 1 285 2 123 1 13 1 
291 1 349 3 156 3 343 5 76 1 139 1 53 1 97 3 197 6 66 1 111 3 44 4 69 1 226 1 188 1 104 1 203 1 106 2 126 1 
291 1 349 1 156 1 343 8 278 1 312 2 97 1 197 2 66 4 111 1 44 4 160 1 226 1 188 1 285 2 191 1 304 1 123 1 203 1 51 1 39 1 106 1 13 1 
291 2 343 11 66 5 197 4 97 2 345 1 69 1 44 6 226 1 104 1 304 1 203 1 51 1 106 1 13 1 156 2 349 2 278 1 312 2 139 1 111 2 160 1 188 2 80 1 191 1 285 3 123 1 39 1 
291 3 343 19 293 1 66 10 197 6 97 3 69 1 44 9 226 1 47 1 104 2 11 1 304 1 203 1 177 1 51 3 106 1 308 2 13 1 156 3 349 3 278 1 312 3 139 2 111 3 160 1 188 1 80 1 191 1 57 1 285 4 123 1 39 1 
291 3 343 17 293 1 66 7 197 6 97 3 69 1 44 10 226 1 47 1 104 2 11 1 304 1 203 1 177 1 51 2 106 1 308 1 13 1 156 3 349 3 278 1 312 3 139 2 111 3 160 1 188 1 80 2 191 1 57 1 285 5 123 1 39 1 
291 1 349 1 156 1 343 8 278 1 312 2 97 1 197 2 66 4 111 1 44 4 160 1 226 1 188 1 285 2 191 1 304 1 123 1 203 1 51 1 39 1 106 1 13 1 
291 2 343 12 66 6 197 2 97 1 44 6 226 1 47 1 104 2 11 1 203 1 177 1 51 2 106 1 308 2 156 1 349 1 312 1 139 2 111 1 188 1 80 1 57 1 285 2 39 1 
291 3 343 18 293 2 66 8 197 8 97 4 69 1 44 10 226 1 47 1 104 2 11 1 304 1 203 1 177 1 51 2 106 1 308 1 13 1 156 4 349 4 278 1 312 3 139 2 111 4 160 1 188 1 80 2 191 1 57 1 285 5 123 1 39 1 
291 3 343 16 293 2 66 7 197 8 97 4 44 9 226 1 47 1 104 3 11 1 203 1 177 1 51 2 106 1 308 2 156 4 349 4 76 1 312 3 139 3 111 4 188 1 80 3 57 1 285 6 39 1 
291 1 343 7 312 3 278 1 66 4 44 3 80 3 191 2 285 6 304 1 123 3 51 1 13 3 
291 3 343 18 293 2 66 8 197 8 97 4 44 10 226 1 47 1 104 2 11 1 304 1 203 1 177 1 51 2 106 1 308 1 13 1 156 4 349 4 76 1 278 1 312 3 139 2 111 4 160 1 188 1 80 1 191 1 57 1 285 4 123 1 39 1 
190 1 135 1 67 1 270 1 328 1 20 1 262 1 
310 1 311 1 67 1 262 1 101 1 135 1 190 1 270 1 328 1 363 1 20 1 341 1 
331 1 85 1 174 1 33 1 237 1 276 1 258 1 360 1 77 1 171 1 241 1 
33 1 258 1 368 1 171 1 135 1 190 2 84 1 85 1 174 1 237 1 59 1 360 1 136 1 328 1 379 1 241 1 20 2 181 1 
246 1 368 1 171 1 45 1 135 2 174 3 301 1 136 2 175 1 328 1 306 1 181 1 374 1 258 1 190 2 84 1 85 1 59 2 237 2 360 1 241 1 379 1 20 2 
128 1 246 1 368 1 171 1 45 1 135 2 174 3 301 1 136 2 175 1 328 1 306 2 155 1 374 1 258 1 190 2 84 1 85 1 59 2 237 2 360 1 241 1 379 1 20 2 
246 1 33 1 220 1 258 3 323 1 233 1 145 1 132 1 314 1 3 2 171 3 81 1 85 1 174 4 18 1 237 1 59 1 301 1 360 1 175 1 49 2 241 3 348 1 
246 1 33 1 220 1 258 3 233 1 145 1 132 1 314 1 3 2 171 3 227 1 85 1 174 4 18 1 237 1 59 1 301 1 360 1 175 1 49 2 241 3 348 1 
85 1 258 1 360 1 171 1 241 1 211 1 
33 2 258 7 275 1 110 1 260 1 171 7 225 1 211 1 37 1 200 1 172 1 85 2 58 1 174 3 38 1 59 1 237 2 338 1 360 3 61 1 241 6 
291 1 343 6 197 4 97 2 147 1 295 1 149 2 44 3 10 2 304 1 51 1 108 1 13 1 156 2 349 2 207 1 258 1 110 1 312 2 111 2 160 1 121 1 60 1 59 1 360 1 217 1 123 1 20 2 320 1 66 3 368 1 171 1 135 1 174 1 136 1 328 2 181 1 278 1 36 1 190 2 84 1 85 1 191 1 285 2 237 1 241 1 379 1 
218 2 220 1 145 1 132 2 3 3 42 1 171 1 150 1 73 1 227 1 174 2 49 3 372 1 348 1 138 2 257 1 351 1 33 1 258 1 233 1 208 1 357 2 18 1 378 1 319 1 241 1 342 2 321 1 
258 2 275 1 110 1 171 2 211 1 85 1 18 1 174 2 59 1 237 1 360 2 74 1 241 2 
33 1 258 4 276 1 110 1 314 1 77 1 171 4 85 1 174 1 237 1 360 1 373 1 241 4 
258 2 171 2 225 1 172 1 164 1 85 1 174 1 301 1 269 1 59 1 237 1 305 1 360 2 241 2 
263 1 85 1 17 1 33 1 258 1 360 1 279 1 2 1 171 1 241 1 
258 2 110 1 260 1 171 2 85 1 174 1 237 1 360 1 61 1 347 1 241 2 
33 1 276 1 258 5 110 1 260 1 77 1 171 5 85 2 58 1 174 3 301 1 237 2 38 1 360 2 373 1 241 4 
33 1 276 1 258 5 110 1 260 1 77 1 171 5 83 1 85 2 174 3 301 1 237 2 38 1 360 2 373 1 241 4 
128 1 368 1 171 1 135 1 174 1 136 1 328 1 306 1 155 1 33 1 258 1 190 2 84 1 85 1 59 1 237 1 360 1 241 1 379 1 20 2 
258 1 275 1 171 1 225 1 172 1 85 1 174 1 301 1 59 1 237 1 338 1 360 2 241 1 
299 1 46 1 192 1 328 1 251 1 
273 1 220 1 374 1 145 1 3 2 133 1 251 2 45 1 370 1 299 1 46 2 358 1 192 2 328 1 306 1 318 1 49 2 372 1 348 1 
190 1 135 1 299 1 56 1 192 1 23 1 148 1 20 1 251 1 
273 1 299 1 133 1 
22 1 331 1 235 1 356 1 
369 1 22 1 352 1 274 1 235 1 30 1 356 1 
369 1 371 1 346 1 
21 1 22 1 274 1 352 1 186 1 235 1 335 1 356 1 7 2 369 3 30 3 230 1 
369 2 22 1 352 1 274 1 235 1 198 1 30 2 356 1 380 1 
369 1 21 1 322 1 22 1 17 1 352 1 274 1 215 1 2 1 30 1 334 1 
369 1 21 1 22 1 352 1 274 1 30 1 356 1 
369 1 21 1 352 1 274 1 235 1 30 1 356 2 
21 1 22 1 274 2 352 2 224 1 356 1 112 1 369 2 302 1 30 2 
21 1 244 1 309 1 22 2 274 1 352 1 235 1 198 2 334 1 356 1 298 1 369 3 30 3 
369 2 21 1 322 1 22 1 263 1 352 1 274 1 17 2 144 1 235 1 198 1 2 1 24 1 30 2 356 1 
21 1 22 2 274 2 352 2 235 1 198 2 4 1 334 1 356 1 298 1 369 4 30 4 380 1 
369 1 21 1 22 1 352 1 274 1 235 1 30 1 356 1 
22 3 264 1 274 1 352 1 235 2 198 2 335 1 334 1 356 2 7 1 298 1 369 4 30 4 230 1 
21 1 157 1 22 1 274 1 352 1 235 1 198 1 356 1 369 2 102 1 28 1 30 2 
369 3 21 1 22 1 130 1 352 1 274 1 235 1 30 3 335 1 356 1 230 2 7 2 
22 2 65 1 107 2 381 1 
369 1 21 1 352 1 274 1 30 1 125 1 
309 1 369 2 21 1 22 1 352 1 274 1 235 1 198 1 30 2 356 1 
78 1 
369 1 21 1 22 1 352 1 274 1 235 1 30 1 356 1 
21 1 309 1 22 1 274 1 352 1 235 1 198 1 356 1 7 1 369 3 30 3 
22 1 264 1 334 1 298 1 
22 1 356 1 

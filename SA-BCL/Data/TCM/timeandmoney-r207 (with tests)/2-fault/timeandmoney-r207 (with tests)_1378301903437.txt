#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z | OPERATOR | 4574 | == -> <=
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval; | CONSTANT | 1159 | 1 -> 0
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
2 1 4 1 359 1 316 1 262 1 162 2 106 1 164 3 228 1 119 2 377 3 165 1 235 2 
127 2 258 1 2 3 4 1 359 6 316 1 103 1 212 1 262 2 106 1 32 2 345 1 302 1 301 1 185 1 270 2 350 1 17 1 304 2 162 2 95 1 47 1 164 9 228 4 119 5 377 9 165 1 235 2 
127 2 258 1 2 3 4 1 359 6 316 1 103 1 212 1 262 2 106 1 32 2 345 1 302 1 301 1 185 1 270 2 350 1 17 1 304 2 162 2 95 1 47 1 164 9 228 4 119 5 377 9 165 1 235 2 
127 2 258 1 2 4 4 1 359 7 316 1 103 1 212 1 262 2 106 1 32 2 345 1 302 1 301 1 185 1 270 2 350 1 17 1 304 2 162 2 95 1 47 1 164 10 228 5 119 6 377 10 165 1 235 2 
127 2 258 1 2 2 4 1 359 4 316 1 103 1 212 1 262 2 106 1 32 2 345 1 302 1 301 1 270 1 350 1 17 1 304 2 162 2 95 1 47 1 164 7 228 3 119 4 377 7 165 1 235 2 
127 1 2 1 301 1 185 1 270 2 4 1 359 3 316 1 304 1 162 1 32 1 95 1 164 4 228 2 119 3 377 4 165 1 235 1 
258 1 4 1 6 1 316 1 304 1 212 1 31 1 262 1 162 1 32 1 119 1 164 2 377 2 165 1 23 1 235 1 
127 1 2 3 4 1 359 7 316 1 262 1 106 1 32 1 302 1 301 1 185 1 270 2 350 1 304 1 162 2 95 1 228 4 164 9 119 5 377 9 326 1 165 1 357 1 235 2 
127 1 2 3 4 1 359 7 316 1 262 1 106 1 32 1 302 1 301 1 185 1 270 2 350 1 304 1 162 2 95 1 228 4 164 9 119 5 377 9 326 1 165 1 357 1 235 2 
257 1 201 1 12 1 92 1 53 1 324 1 205 1 173 1 54 1 240 1 364 1 117 1 378 1 300 1 
85 1 
131 1 201 1 184 1 85 1 7 1 299 1 173 2 300 2 
283 1 170 2 257 1 285 1 53 1 7 2 54 1 173 5 197 2 240 1 317 1 364 1 131 1 264 1 216 2 219 1 85 2 11 1 200 4 322 1 60 2 300 5 36 2 201 2 12 1 184 2 92 1 324 1 205 1 68 1 117 1 93 1 351 1 189 5 70 2 378 1 167 1 24 1 
79 1 184 1 85 1 
85 1 146 1 367 2 
195 1 12 2 92 2 324 2 378 1 205 2 54 2 240 2 
193 2 332 1 195 1 286 1 315 1 172 1 335 1 54 3 240 2 292 1 82 1 81 1 149 1 241 1 295 1 344 1 267 1 246 1 12 2 159 1 247 1 92 2 65 2 324 3 16 1 205 2 225 1 112 1 141 1 253 1 94 2 307 1 277 1 354 2 378 1 312 2 76 1 
364 1 117 1 257 1 12 1 92 1 324 1 378 1 205 1 54 1 240 1 
257 1 184 1 12 1 40 1 25 1 186 1 41 1 324 1 54 1 173 1 44 1 85 1 22 1 300 1 
257 1 184 1 12 1 92 1 40 1 186 1 324 1 205 1 173 2 54 1 44 1 240 1 85 1 22 1 300 2 
284 1 201 1 7 1 173 1 300 1 
131 1 201 1 184 1 85 1 7 1 173 2 380 1 300 2 
7 1 173 1 300 1 
12 2 195 2 224 1 92 1 324 2 205 1 54 2 240 1 71 1 
91 1 223 1 289 1 
246 1 332 1 195 1 286 1 247 1 65 1 324 1 225 1 54 1 112 1 292 1 94 1 241 1 295 1 312 1 145 1 
246 1 332 1 12 1 247 1 92 1 286 1 65 1 324 2 225 1 54 2 289 1 104 1 112 1 240 1 292 1 94 1 241 1 295 1 329 1 312 1 
79 1 195 1 
12 5 195 1 92 4 248 1 25 1 324 5 205 1 54 5 104 1 69 1 240 4 132 1 71 1 329 2 
364 1 257 1 137 1 12 2 92 2 324 2 54 2 240 2 
195 1 12 3 92 3 324 3 205 1 329 1 54 3 240 3 
364 1 257 1 12 1 92 1 324 1 54 1 240 1 
257 1 12 1 224 1 92 1 71 1 324 1 205 1 54 1 240 1 
257 1 193 1 332 1 195 1 286 1 315 1 172 1 335 1 54 4 173 1 104 1 240 3 292 1 81 1 149 1 241 1 295 1 300 1 267 1 246 1 221 1 12 3 247 1 92 3 40 1 186 1 65 1 324 4 225 1 205 2 112 1 44 1 141 1 94 1 307 1 277 1 71 1 354 2 378 1 73 1 329 1 312 1 22 1 76 1 
132 1 195 1 12 2 92 1 25 1 324 2 329 1 54 2 240 1 
257 1 12 3 92 3 40 1 186 1 324 3 205 1 173 1 54 3 104 1 44 1 240 3 85 1 71 1 329 2 73 1 22 1 300 1 369 1 
223 1 12 2 92 2 324 2 205 1 54 2 289 1 240 2 71 1 329 1 
246 1 332 1 195 1 286 1 247 1 65 1 324 1 225 1 54 1 112 1 292 1 94 1 241 1 295 1 312 1 
246 1 332 1 195 1 286 1 313 1 247 1 65 1 324 1 225 1 54 1 112 1 292 1 94 1 353 1 312 1 
170 1 1 1 193 4 315 1 172 1 335 1 289 2 105 1 82 2 81 1 149 1 366 1 296 1 179 1 36 1 245 1 90 1 91 2 223 2 303 1 274 1 307 1 354 2 76 2 
257 1 137 1 12 1 40 1 92 1 324 1 54 1 240 1 
372 1 14 1 27 1 
136 1 372 2 190 1 14 2 144 1 35 1 
372 1 14 1 
372 1 14 1 
136 1 35 1 
136 1 35 1 
136 1 35 1 
372 1 153 1 14 1 
372 1 153 1 14 1 
372 1 153 1 14 1 
337 1 372 1 14 1 
337 1 372 1 14 1 
337 1 372 1 14 1 
237 1 194 1 195 1 173 1 54 2 27 1 240 2 263 1 363 1 293 1 300 1 222 1 135 1 372 1 12 2 269 1 14 1 92 2 324 2 187 1 305 1 272 1 19 1 232 1 
237 2 202 1 372 2 14 2 269 2 43 1 305 2 173 2 272 1 113 1 19 3 293 2 338 1 242 1 85 1 297 1 328 2 144 1 300 2 
127 1 183 1 143 2 6 1 304 2 
32 1 127 1 304 1 
32 1 6 1 304 1 
127 2 183 1 143 1 6 1 42 1 304 3 
78 1 127 1 183 1 143 1 6 1 304 2 
170 1 1 1 285 1 146 1 7 1 173 5 10 1 131 1 216 1 85 2 367 3 200 3 60 1 108 1 300 5 36 1 370 1 135 1 201 4 157 2 184 1 303 1 187 1 189 2 70 1 327 1 51 1 232 1 355 2 381 2 191 1 236 1 
170 3 284 5 1 3 285 1 146 3 7 6 173 9 291 1 131 1 83 1 216 2 219 1 85 5 59 1 86 1 243 1 367 9 200 8 60 2 300 9 155 1 36 3 370 2 201 7 184 1 303 3 187 4 139 5 189 6 70 2 327 2 51 3 355 6 381 6 191 1 
170 1 1 1 146 2 173 3 216 1 85 3 219 1 367 4 200 3 60 1 108 1 300 3 36 1 370 1 201 2 157 1 184 1 303 1 187 1 189 2 70 1 327 1 51 1 381 2 355 2 236 1 
170 2 1 2 146 3 173 4 216 1 85 4 219 1 59 1 86 1 367 7 200 5 60 1 108 1 300 4 155 1 36 2 370 1 157 2 201 3 184 1 303 2 187 2 189 4 70 1 327 1 51 2 355 4 381 4 236 1 
74 1 
79 1 371 1 292 1 
111 1 292 1 
332 1 247 1 292 1 
110 1 292 1 
332 1 292 1 
306 1 371 2 332 1 247 1 254 1 292 3 
90 2 170 1 238 1 193 7 314 1 105 3 336 1 114 1 317 1 375 1 82 4 93 1 264 1 20 1 342 1 256 2 76 3 36 1 
100 3 170 4 1 3 193 31 314 1 315 1 105 10 30 1 336 5 317 2 81 1 82 16 149 1 264 2 342 2 36 4 90 5 303 3 250 1 66 1 273 1 226 1 114 1 227 4 375 2 93 1 20 1 307 1 354 2 121 1 51 3 125 1 256 3 76 15 
170 1 193 9 314 1 315 2 105 4 336 1 317 1 81 2 82 5 149 2 264 1 342 1 36 1 90 3 140 1 273 1 375 1 93 1 307 2 20 1 352 1 354 4 256 2 76 4 
90 2 170 1 193 7 314 1 105 3 336 1 114 1 317 1 375 1 82 4 93 1 264 1 20 1 342 1 256 2 76 3 36 1 
90 2 170 1 193 7 314 1 105 3 336 1 114 1 317 1 375 1 82 4 93 1 264 1 20 1 342 1 256 2 76 3 36 1 
126 2 332 1 171 1 286 1 262 2 292 1 341 1 346 1 246 1 204 1 65 1 112 1 18 2 206 1 162 1 115 2 94 1 164 1 163 1 377 1 72 1 312 1 235 1 
126 1 127 1 6 1 260 1 262 1 361 1 32 1 368 1 246 1 64 1 65 1 42 1 304 2 18 1 112 1 275 1 162 1 115 1 94 1 96 1 164 1 377 1 165 1 310 1 312 1 235 1 
126 1 127 1 4 1 359 1 6 1 316 1 260 1 261 1 262 1 361 1 32 1 368 1 246 1 65 1 42 1 304 2 18 1 112 1 275 1 162 1 115 1 94 1 96 1 119 1 164 2 377 2 165 1 310 1 312 1 235 1 
126 1 127 1 4 1 359 2 6 1 316 1 26 1 260 1 262 1 361 1 32 1 368 1 246 1 64 1 65 1 42 1 304 2 18 1 112 1 162 1 115 1 94 1 96 1 119 1 164 3 163 1 377 3 310 1 312 1 235 1 
126 1 127 1 4 1 359 2 6 1 316 1 26 1 260 1 262 1 361 1 32 1 368 1 246 1 64 1 65 1 42 1 304 2 18 1 112 1 115 1 94 1 119 1 164 2 377 2 312 1 
271 1 
332 1 285 1 333 2 146 2 286 2 7 6 54 1 55 1 292 1 150 1 200 2 60 1 300 5 346 1 244 1 246 1 203 2 12 1 65 2 112 1 206 1 207 2 21 1 70 1 312 2 209 2 22 1 257 1 358 1 259 2 25 1 173 5 213 1 318 1 131 3 216 1 85 2 218 1 367 2 220 4 134 2 180 1 37 1 184 1 40 1 186 1 41 1 324 1 44 1 94 2 188 1 48 2 189 2 327 1 52 1 
257 1 25 1 7 2 54 1 173 3 213 1 131 1 150 1 218 1 220 2 299 1 300 3 180 1 134 1 37 1 12 1 40 1 186 1 324 1 41 1 44 1 22 1 
257 1 25 1 7 1 54 1 173 3 213 1 131 1 150 1 218 1 85 1 220 3 299 1 300 3 180 1 37 1 12 1 184 1 40 1 186 1 324 1 41 1 44 1 48 1 22 1 
257 1 25 1 7 2 54 1 173 3 213 1 131 1 150 1 218 1 85 1 220 3 299 1 300 3 180 1 134 1 37 1 12 1 203 1 184 1 40 1 186 1 324 1 41 1 44 1 48 1 22 1 
285 1 146 2 333 2 7 7 54 1 150 1 200 1 299 1 60 1 300 5 244 1 203 4 12 1 207 2 70 1 22 1 209 2 210 1 257 1 259 2 25 1 173 5 28 1 213 1 318 1 131 3 216 1 218 1 85 5 34 1 220 6 134 4 180 1 37 1 184 5 40 1 186 1 324 1 41 1 44 1 48 4 189 1 231 1 330 1 
285 1 146 2 333 2 7 4 54 1 150 1 200 1 60 1 300 4 244 1 12 1 203 2 207 2 21 1 70 1 22 1 209 2 257 1 259 2 25 1 173 4 213 1 318 1 131 2 216 1 218 1 85 2 367 2 220 4 180 1 134 2 37 1 184 1 40 1 186 1 324 1 41 1 44 1 189 1 48 2 
257 1 285 1 333 2 146 2 259 2 25 1 7 4 54 1 173 4 28 1 213 1 318 1 131 2 150 1 216 1 85 1 218 1 34 1 200 1 220 4 60 1 300 4 134 2 180 1 244 1 37 1 184 1 203 2 12 1 40 1 186 1 324 1 41 1 44 1 48 2 207 2 189 1 70 1 231 1 209 2 22 1 
257 1 285 1 333 2 146 2 259 2 25 1 7 4 54 1 173 4 28 1 213 1 318 1 131 2 150 1 216 1 85 1 218 1 34 1 200 1 220 4 60 1 300 4 134 2 180 1 244 1 37 1 184 1 203 2 12 1 40 1 186 1 324 1 41 1 44 1 48 2 207 2 189 1 70 1 231 1 209 2 22 1 
257 1 285 1 25 1 7 4 288 1 54 1 173 4 28 1 213 1 318 1 131 2 215 2 150 1 216 1 85 1 218 1 367 2 200 1 220 4 60 1 300 4 134 2 180 1 37 1 181 1 184 1 203 2 12 1 40 1 186 1 324 1 41 1 67 1 44 1 48 2 207 2 189 1 70 1 99 2 209 2 22 1 
257 1 285 1 333 2 146 2 259 2 25 1 7 5 54 1 173 4 28 1 213 1 318 1 131 2 150 1 216 1 85 1 218 1 34 1 200 1 220 5 60 1 300 4 180 1 134 3 244 1 37 1 184 1 12 1 203 3 40 1 186 1 324 1 41 1 44 1 207 2 189 1 48 3 70 1 231 1 330 1 209 2 22 1 
257 1 285 1 333 2 146 2 259 2 25 1 7 5 54 1 173 4 28 1 213 1 318 1 131 2 150 1 216 1 85 1 218 1 34 1 200 1 220 5 60 1 300 4 180 1 134 3 244 1 37 1 184 1 12 1 203 3 40 1 186 1 324 1 41 1 44 1 207 2 189 1 48 3 70 1 231 1 330 1 209 2 22 1 
285 1 7 4 288 1 54 1 150 1 200 1 60 1 300 4 12 1 203 2 207 2 21 1 70 1 22 1 209 2 257 1 25 1 173 4 213 1 318 1 215 2 131 2 216 1 218 1 85 1 367 2 220 4 180 1 134 2 37 1 184 1 40 1 186 1 324 1 41 1 44 1 189 1 48 2 99 2 
101 1 193 2 332 2 286 2 315 2 172 2 335 2 54 1 128 1 129 1 29 1 261 1 240 1 292 3 81 2 82 1 149 2 179 1 133 1 346 1 246 2 347 1 12 1 268 1 64 1 92 1 159 1 65 7 324 1 16 2 112 2 206 1 94 8 307 2 277 1 354 4 329 1 312 8 76 1 
170 1 0 1 1 1 193 3 315 1 172 1 335 1 54 1 289 1 105 1 240 1 81 1 82 1 149 1 33 1 36 1 90 1 91 1 223 1 12 1 92 1 303 1 324 1 205 1 307 1 71 1 354 2 51 1 76 2 
79 1 170 1 193 6 195 2 314 1 315 1 172 1 335 1 289 1 105 2 317 1 81 1 82 3 149 1 264 1 179 1 36 1 90 2 91 1 223 1 93 1 20 1 307 1 354 2 256 1 76 3 
100 3 170 1 0 1 1 1 193 14 195 1 102 1 315 2 172 1 335 2 289 11 105 2 336 1 81 2 82 8 149 2 152 1 36 2 90 1 38 1 91 11 223 4 159 1 303 2 66 1 227 3 307 2 277 1 308 1 354 4 121 1 51 2 76 6 
0 1 332 1 193 2 195 1 286 1 315 1 172 1 335 1 54 2 104 1 240 1 292 1 81 1 82 1 149 1 241 1 295 1 88 1 246 1 348 1 223 1 12 1 247 1 92 1 159 1 65 1 324 2 225 1 112 1 94 1 307 1 277 1 354 2 329 1 168 1 312 1 145 1 76 1 
0 1 1 2 193 20 332 2 195 2 286 1 335 3 54 3 104 1 289 7 105 5 147 2 336 1 240 1 292 2 57 1 149 3 241 2 295 2 61 1 246 2 12 1 159 1 247 2 65 1 303 2 112 2 118 2 20 1 307 3 354 6 312 1 256 1 76 10 170 3 314 1 172 3 315 3 317 1 81 3 82 10 264 1 87 2 36 3 90 4 91 7 223 7 92 1 324 3 225 2 141 2 93 1 94 1 142 2 277 1 329 1 51 2 
91 1 223 1 193 2 303 1 172 1 315 1 335 1 289 1 105 1 274 1 336 1 81 1 82 2 149 1 307 1 354 2 179 1 36 1 
90 1 170 1 91 1 1 1 223 1 193 2 172 1 315 1 335 1 289 1 105 1 81 1 149 1 307 1 296 1 354 2 179 1 76 2 
170 1 1 1 193 4 315 1 172 1 335 1 289 2 105 2 336 1 82 2 81 1 149 1 179 1 36 1 90 1 91 2 223 2 303 1 307 1 354 2 51 1 76 2 
91 1 223 1 193 2 268 1 303 1 172 1 315 1 335 1 289 1 105 1 274 1 336 1 81 1 82 2 149 1 307 1 354 2 36 1 
90 1 170 1 91 1 1 1 223 1 193 2 268 1 172 1 315 1 335 1 289 1 105 1 81 1 149 1 307 1 296 1 354 2 76 2 
170 1 1 1 193 4 315 1 172 1 335 1 289 2 105 2 336 1 82 2 81 1 149 1 36 1 90 1 91 2 223 2 268 1 303 1 307 1 354 2 51 1 76 2 
170 1 1 1 193 4 315 1 172 1 335 1 289 2 105 2 336 1 82 2 81 1 149 1 36 1 90 1 91 2 223 2 303 1 307 1 354 2 51 1 76 2 
193 2 332 1 195 1 286 1 172 1 315 1 335 1 54 1 292 1 82 1 81 1 149 1 241 1 295 1 246 1 159 1 247 1 65 1 324 1 225 1 112 1 141 1 94 1 307 1 277 1 354 2 312 1 76 1 
193 2 332 1 195 1 313 1 286 1 172 1 315 1 335 1 54 1 292 1 82 1 81 1 149 1 246 1 159 1 247 1 65 1 324 1 225 1 112 1 94 1 307 1 98 1 277 1 353 1 354 2 312 1 76 1 
170 1 0 1 1 1 193 4 315 1 172 1 335 1 289 2 105 2 336 1 82 2 81 1 149 1 36 1 90 1 91 2 223 2 303 1 307 1 354 2 51 1 76 2 
170 1 1 1 193 4 332 1 172 1 315 1 335 1 54 1 289 2 105 2 147 1 261 1 336 1 292 1 82 2 81 1 149 1 241 1 295 1 36 1 90 1 246 1 91 2 223 2 247 1 303 1 65 1 324 1 225 1 112 1 141 1 94 1 307 1 354 2 51 1 312 1 76 2 
170 1 169 1 1 1 0 1 193 3 315 1 172 1 335 1 54 1 289 1 105 1 336 1 240 1 81 1 82 2 149 1 36 1 91 1 223 1 12 1 92 1 303 1 324 1 205 1 307 1 71 1 354 2 51 1 76 1 
100 1 170 3 1 3 193 19 315 2 287 1 105 6 336 3 81 2 82 9 149 2 320 1 339 1 154 1 323 2 36 3 90 3 249 1 303 3 66 1 227 2 116 1 307 2 120 2 352 1 354 4 166 1 121 1 51 3 76 10 
100 2 170 2 331 1 1 2 193 26 315 3 239 1 287 1 105 4 336 2 81 3 82 14 149 3 320 1 339 2 265 1 323 4 62 1 36 3 90 2 249 1 303 3 66 2 273 2 227 2 45 1 116 2 307 3 120 1 352 1 279 1 354 6 51 3 76 12 
100 3 170 5 331 1 1 4 193 41 314 1 315 3 239 1 287 1 105 8 336 4 317 1 81 3 82 20 149 3 264 1 320 1 339 1 265 1 323 4 62 1 36 5 90 4 158 1 249 1 303 4 66 3 273 1 45 1 227 4 116 2 93 1 20 1 307 3 120 1 352 1 279 1 354 6 166 1 121 1 51 4 256 1 76 21 
100 3 170 4 331 1 1 3 193 38 314 1 315 4 239 1 287 1 105 7 336 3 317 1 81 4 82 20 149 4 264 1 320 1 339 1 265 1 323 4 62 1 36 5 90 4 158 1 249 1 303 4 66 3 273 2 45 1 227 4 116 2 93 1 20 1 307 4 120 1 352 1 279 1 354 8 166 1 121 1 51 4 256 1 76 18 
100 4 170 8 331 1 1 7 193 52 314 1 102 2 315 2 239 1 287 1 105 14 336 7 317 1 81 2 82 27 149 2 264 1 320 1 339 1 265 1 323 4 62 1 36 8 90 7 249 1 303 7 66 2 273 1 45 1 227 4 116 1 93 1 20 1 307 2 120 1 352 1 279 1 354 4 121 2 51 7 256 1 76 25 
237 1 293 1 338 1 372 1 229 1 269 1 14 1 43 1 305 1 144 1 
222 1 27 1 
276 1 237 1 293 1 372 1 278 1 269 1 14 1 298 1 305 1 
153 1 321 1 
337 1 365 1 190 1 
237 1 202 1 372 1 14 1 269 1 43 1 272 1 173 1 305 1 19 2 293 1 338 1 242 1 85 1 297 1 328 1 144 1 300 1 
237 1 202 1 372 1 14 1 269 1 43 1 272 1 173 1 305 1 19 2 293 1 338 1 242 1 85 1 297 1 328 1 144 1 300 1 
237 1 202 1 372 1 14 1 269 1 43 1 272 1 173 1 305 1 19 2 293 1 338 1 242 1 85 1 297 1 328 1 144 1 300 1 
190 1 153 1 321 1 
190 1 153 1 321 1 
337 1 365 1 
337 1 365 1 190 1 
194 1 263 1 
237 1 194 1 195 1 54 2 173 1 27 1 263 1 240 2 363 1 293 1 242 1 300 1 222 1 201 1 135 1 372 1 12 2 269 1 14 1 92 2 324 2 187 1 305 1 19 1 309 1 328 1 232 1 
77 1 0 1 332 1 193 2 315 1 172 1 335 1 54 2 128 1 29 1 292 1 81 1 82 1 176 1 149 1 343 1 246 1 12 2 159 1 65 2 324 2 16 2 112 1 376 1 94 2 307 1 277 1 230 1 354 2 312 2 76 1 
126 1 246 1 332 1 171 1 286 1 65 1 112 1 292 1 206 1 148 1 214 1 94 1 312 1 346 1 
126 1 246 1 127 1 64 1 6 1 65 1 42 1 304 2 260 1 112 1 361 1 148 1 32 1 94 1 96 1 294 1 280 1 312 1 
126 1 246 1 127 1 64 1 6 1 65 2 42 1 304 2 260 1 112 1 261 1 361 1 148 1 32 1 94 2 96 1 294 1 280 1 312 2 
126 1 246 1 127 1 64 1 6 1 65 1 42 1 304 2 260 1 112 1 361 1 32 1 94 1 96 1 280 1 312 1 124 1 
282 1 
285 1 184 1 189 1 216 1 70 1 85 1 200 1 322 1 60 1 24 1 
170 2 1 2 146 5 303 2 68 1 197 2 142 1 189 5 85 5 367 10 200 5 51 2 381 5 355 5 36 2 
131 1 184 1 85 1 7 1 173 1 300 1 
192 1 332 1 285 1 286 2 7 4 173 3 55 2 292 1 107 1 131 2 216 2 219 1 200 2 60 2 300 3 346 1 246 1 65 4 112 1 206 1 94 4 188 1 189 2 70 2 327 2 122 2 52 1 312 4 356 1 
79 1 189 1 184 1 85 1 200 1 322 1 24 1 
285 1 146 1 333 1 259 1 7 1 173 1 131 1 216 1 85 2 367 1 200 1 60 1 300 1 244 1 184 1 189 1 70 1 
192 1 1 2 332 3 285 4 146 6 286 1 7 5 197 2 55 1 292 10 58 1 151 2 200 9 60 4 300 5 246 3 349 2 247 3 65 3 303 2 251 1 111 3 110 2 68 3 112 4 306 1 70 4 122 1 312 3 255 2 22 2 355 6 24 1 170 2 173 5 261 1 130 1 131 3 319 2 216 4 85 8 367 12 322 1 36 2 371 2 184 2 94 3 142 2 97 2 189 8 327 2 51 2 379 2 381 6 
100 1 170 2 1 2 285 2 146 3 239 1 7 1 173 1 197 2 55 1 131 1 216 2 85 5 367 6 265 1 200 8 60 2 62 1 300 1 36 2 39 1 184 2 138 1 303 2 66 1 68 1 227 1 45 1 189 5 70 2 327 1 279 1 51 2 355 5 381 5 
283 1 170 1 257 1 285 1 53 1 54 1 173 1 197 2 240 1 317 1 364 1 264 1 216 1 200 2 60 1 300 1 36 2 12 1 92 1 324 1 205 1 68 1 93 1 117 1 189 2 70 1 378 1 231 1 
193 1 332 1 195 1 286 1 172 1 315 1 335 1 54 3 240 2 292 1 81 1 149 1 241 1 295 1 267 1 246 1 12 2 92 2 247 1 65 1 324 3 205 2 225 1 112 1 141 1 94 1 307 1 277 1 354 2 378 1 312 1 76 1 
285 1 184 2 146 2 55 1 189 2 216 1 70 1 85 4 327 1 367 4 200 1 60 1 256 1 381 2 355 2 
252 1 338 1 269 1 305 1 263 1 
269 1 305 1 75 1 
269 1 305 1 75 1 
269 1 305 1 75 1 
269 1 305 1 233 1 
269 1 305 1 233 1 
269 1 305 1 233 1 
269 1 305 1 
372 1 14 1 
90 3 283 1 170 2 193 10 315 1 105 5 336 2 317 2 81 1 82 5 149 1 93 1 307 1 264 2 352 1 354 2 76 5 36 2 
193 2 303 1 315 1 105 1 336 1 81 1 82 2 149 1 307 1 352 1 354 2 36 1 
90 1 170 1 1 1 193 4 303 1 315 1 105 2 336 1 81 1 82 2 149 1 307 1 352 1 354 2 51 1 76 2 36 1 
90 1 193 3 315 3 273 1 105 2 336 1 374 1 317 1 81 3 82 1 149 3 307 3 264 1 352 1 354 6 166 1 76 2 
100 3 170 5 1 3 193 34 314 1 315 5 196 1 30 1 105 12 336 5 317 3 81 5 82 16 149 5 264 3 36 5 90 7 303 3 250 1 66 1 273 2 226 1 227 4 374 1 93 2 20 1 307 5 352 1 354 10 166 1 121 1 51 3 256 1 76 18 
100 1 170 1 193 8 314 1 315 1 105 2 317 1 81 1 82 4 149 1 264 1 62 1 36 1 90 2 66 1 227 1 93 1 307 1 20 1 352 1 354 2 256 1 76 4 
100 1 170 1 193 11 314 1 315 2 196 1 105 3 336 1 317 1 81 2 82 6 149 2 264 1 62 1 36 2 90 2 303 1 66 1 227 2 93 1 20 1 307 2 352 1 354 4 121 1 51 1 256 1 76 5 
100 1 170 3 1 2 193 19 314 1 315 3 239 1 196 1 105 4 336 1 317 1 81 3 82 9 149 3 264 1 265 1 62 1 36 3 90 3 303 2 66 1 273 1 227 1 45 1 93 1 20 1 307 3 352 1 279 1 354 6 51 2 256 1 76 10 
100 1 170 2 1 1 193 17 314 1 315 3 239 1 196 1 105 5 336 2 317 1 81 3 82 10 149 3 264 1 265 1 62 1 36 3 90 3 303 2 66 1 273 1 227 1 45 1 93 1 20 1 307 3 352 1 279 1 354 6 51 2 256 1 76 7 
100 1 170 1 193 8 314 1 315 1 105 2 317 1 81 1 82 4 149 1 264 1 62 1 36 1 90 2 66 1 227 1 93 1 307 1 20 1 352 1 354 2 256 1 76 4 
100 1 170 2 1 2 193 12 315 1 239 1 105 2 336 1 81 1 82 6 149 1 265 1 62 1 36 2 90 1 303 2 66 1 227 1 45 1 307 1 352 1 279 1 354 2 51 2 76 6 
100 1 170 2 1 1 193 18 314 1 315 4 239 1 196 1 105 5 336 2 317 1 81 4 82 10 149 4 264 1 265 1 62 1 36 3 90 3 303 2 66 1 273 2 227 1 45 1 93 1 20 1 307 4 352 1 279 1 354 8 51 2 256 1 76 8 
100 1 170 2 1 2 193 16 315 4 239 1 105 6 336 3 81 4 82 9 149 4 265 1 62 1 36 3 90 3 303 3 66 1 273 2 227 1 45 1 307 4 352 1 279 1 354 8 166 1 51 3 76 7 
90 3 170 1 193 7 314 2 105 6 336 3 317 3 82 3 93 1 20 1 264 3 76 4 36 1 
100 1 170 2 1 1 193 18 314 1 315 4 239 1 105 4 336 1 317 1 81 4 82 10 149 4 264 1 265 1 62 1 36 3 90 3 303 2 66 1 273 2 227 1 45 1 93 1 20 1 307 4 352 1 279 1 354 8 166 1 51 2 256 1 76 8 
90 2 170 1 193 8 314 1 315 2 273 1 105 3 336 1 317 1 82 4 81 2 93 1 149 2 307 2 20 1 264 1 354 4 256 1 36 1 76 4 
90 2 79 1 170 1 193 6 314 1 105 2 317 1 82 3 93 1 20 1 264 1 256 1 76 3 36 1 
90 1 170 1 1 1 193 4 303 1 315 1 196 1 105 2 336 1 81 1 82 2 149 1 307 1 354 2 51 1 76 2 36 1 
90 1 100 1 170 1 1 1 193 7 303 1 66 1 105 2 227 2 336 1 82 3 121 1 51 1 76 4 36 1 
100 2 170 3 1 2 193 23 314 1 102 1 315 2 105 9 336 4 317 2 82 11 81 2 149 2 264 2 36 3 90 5 303 2 273 2 227 2 374 1 93 1 20 1 307 2 308 1 354 4 51 2 121 1 256 1 76 12 
193 1 227 1 76 1 
82 1 100 1 193 1 
90 2 170 1 1 1 193 6 303 1 315 1 196 1 105 4 336 2 81 1 82 3 149 1 307 1 142 1 354 2 51 1 76 3 36 1 
100 1 170 2 1 2 193 12 315 1 239 1 105 2 336 1 81 1 82 6 149 1 265 1 62 1 36 2 90 1 303 2 66 1 227 1 45 1 307 1 352 1 279 1 354 2 51 2 76 6 
90 1 170 1 193 6 105 2 336 1 317 1 82 3 93 1 264 1 36 1 76 3 
90 1 193 3 314 1 315 1 273 1 105 2 336 1 374 1 317 1 82 1 81 1 149 1 264 1 307 1 20 1 354 2 76 2 
132 1 195 1 12 1 25 1 324 1 54 1 8 1 
195 1 12 1 25 1 324 1 54 1 8 1 362 1 9 1 132 1 49 1 89 1 63 1 
246 1 332 1 286 1 65 4 15 1 290 1 112 1 261 1 206 1 292 1 94 4 312 4 346 1 
246 1 332 1 109 1 247 1 334 1 65 2 112 2 292 1 46 1 175 1 94 2 122 1 312 2 281 1 
246 1 32 1 94 1 286 1 6 1 65 1 304 1 260 1 312 1 112 1 
246 1 332 1 64 1 65 2 261 1 29 1 112 1 292 1 94 2 376 1 312 2 
246 2 347 1 332 2 286 1 65 4 15 1 261 1 29 1 112 2 206 1 292 3 94 5 122 1 312 5 133 1 346 1 
246 2 332 2 286 1 5 1 65 4 15 1 261 1 29 1 112 2 206 1 292 3 94 5 122 1 312 5 133 1 346 1 
246 1 79 1 94 1 332 1 286 1 65 1 312 1 112 1 292 1 346 1 206 1 
246 1 332 1 195 1 12 1 247 1 92 1 286 1 65 1 324 2 225 1 54 2 112 1 240 1 292 1 94 1 241 1 329 1 312 1 
257 1 332 2 195 1 54 2 240 2 292 3 241 1 319 1 246 1 12 2 92 1 247 2 40 1 65 1 186 1 324 2 225 1 110 1 112 1 94 1 329 1 122 1 312 1 
257 1 332 2 195 1 313 1 54 2 290 1 240 2 292 3 319 1 246 1 12 2 92 1 247 2 40 1 65 2 186 1 324 2 225 1 110 1 112 1 94 2 329 1 122 1 312 2 
332 1 286 1 7 1 173 2 290 1 198 1 292 4 319 1 85 1 300 2 246 1 371 1 184 1 13 1 247 1 65 3 111 1 110 1 112 1 94 3 122 1 312 3 22 1 
246 1 332 1 371 1 184 1 286 1 247 1 65 3 110 1 111 1 7 1 173 2 290 1 112 1 292 4 94 3 319 1 151 1 85 1 122 1 312 3 22 1 300 2 
246 1 94 1 101 1 65 1 312 1 112 1 
246 2 101 1 347 1 332 2 64 1 286 2 247 1 65 6 80 1 16 1 129 1 29 1 261 1 112 3 292 3 46 1 94 7 306 1 133 1 312 7 281 1 
170 1 0 1 193 6 332 1 195 2 314 1 315 2 172 2 335 2 54 2 289 1 105 2 261 1 147 1 240 1 292 1 317 1 82 3 81 2 149 2 264 1 241 1 87 1 295 1 343 1 36 1 90 2 246 1 91 1 223 1 12 1 247 1 92 1 65 1 324 2 225 1 112 1 141 1 93 1 94 1 20 1 307 2 354 4 329 1 312 1 256 1 76 3 
192 1 285 2 286 1 7 2 173 3 292 2 131 1 151 1 216 2 85 1 200 1 322 1 60 2 300 3 201 1 371 1 184 1 65 1 111 1 94 1 189 1 97 1 70 2 312 1 255 1 22 1 379 1 24 1 
246 1 101 1 371 1 332 1 247 1 65 2 251 1 261 1 112 2 292 2 94 2 306 1 312 2 
246 1 332 1 195 1 12 1 247 1 92 1 286 1 313 1 65 1 324 2 225 1 54 2 112 1 240 1 292 1 94 1 329 1 312 1 
246 1 332 1 247 1 65 1 80 1 112 2 292 1 46 1 94 1 306 1 122 1 312 1 281 1 
84 1 195 1 311 1 266 1 325 1 
257 1 201 1 195 1 184 1 40 1 186 1 160 1 173 2 325 1 44 1 84 2 340 1 85 1 217 1 73 1 311 2 266 2 22 1 300 2 
77 1 12 1 324 1 54 1 325 1 176 1 230 1 311 1 266 1 
340 1 217 1 325 1 
162 1 119 1 164 1 377 1 165 1 4 1 316 1 235 1 
2 1 4 2 3 1 359 2 316 2 161 1 212 1 162 1 164 4 228 1 119 3 377 4 199 1 235 1 
211 1 4 1 359 1 316 1 162 1 119 1 164 2 377 2 165 1 50 1 235 1 357 1 
4 1 316 1 161 2 212 2 162 1 119 1 164 3 377 3 199 1 165 1 177 1 235 1 
119 2 174 1 360 2 56 1 
162 1 164 1 377 1 165 1 373 1 235 1 
162 1 119 1 164 2 302 1 377 2 165 1 4 1 359 1 316 1 235 1 
234 1 
162 1 119 1 164 1 377 1 165 1 4 1 316 1 235 1 
79 1 119 1 4 1 316 1 
162 1 119 1 164 1 377 1 4 1 316 1 235 1 
115 1 164 1 262 1 
182 1 4 1 316 1 161 1 212 2 162 1 119 1 164 3 377 3 199 1 165 1 235 1 
162 1 119 1 164 2 377 2 270 1 4 1 359 1 316 1 235 1 
162 1 32 1 95 1 127 1 119 1 228 1 164 1 377 1 165 1 304 1 235 1 
162 1 119 1 164 1 377 1 165 1 4 1 235 1 
162 1 164 1 377 1 165 1 4 2 316 1 235 1 
4 1 162 2 119 1 164 2 377 2 165 1 208 1 178 1 123 1 235 2 
302 1 2 1 4 1 359 2 316 1 350 1 162 1 164 3 228 1 119 2 377 3 165 1 235 1 
156 1 127 1 4 1 6 1 359 1 316 1 42 1 304 2 162 1 32 1 119 1 164 2 377 2 165 1 235 1 
162 2 119 2 228 1 164 4 2 1 377 4 185 1 270 1 165 1 4 1 359 2 316 1 235 2 
162 1 119 1 164 3 302 1 377 3 165 1 4 1 359 1 316 1 212 1 235 1 
119 1 228 1 2 1 3 1 
119 1 4 1 

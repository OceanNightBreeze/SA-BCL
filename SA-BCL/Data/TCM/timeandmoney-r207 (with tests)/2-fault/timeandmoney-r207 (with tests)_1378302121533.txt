#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 239 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 4786 | = null
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit; | CONSTANT | 3831 | 1 -> -1
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
92 2 94 2 187 6 249 2 130 1 354 9 56 1 157 9 102 2 131 1 303 1 235 1 305 1 81 1 107 5 240 1 180 1 372 2 200 1 202 1 10 2 12 2 266 1 138 1 269 1 315 4 230 3 19 1 
92 2 94 2 187 6 249 2 130 1 354 9 56 1 157 9 102 2 131 1 303 1 235 1 305 1 81 1 107 5 240 1 180 1 372 2 200 1 202 1 12 2 10 2 266 1 138 1 269 1 315 4 230 3 19 1 
92 2 94 2 187 7 249 2 130 1 354 10 56 1 157 10 102 2 131 1 303 1 235 1 305 1 81 1 107 6 240 1 180 1 372 2 200 1 202 1 12 2 10 2 266 1 138 1 269 1 315 5 230 4 19 1 
92 1 94 2 187 4 249 2 130 1 354 7 56 1 157 7 102 2 131 1 303 1 235 1 305 1 81 1 107 4 240 1 180 1 372 2 200 1 202 1 12 2 10 2 266 1 138 1 269 1 315 3 230 2 
92 2 240 1 94 1 187 3 249 1 372 1 130 1 354 4 157 4 12 1 102 1 266 1 131 1 235 1 315 2 230 1 107 3 19 1 
240 1 94 1 249 1 114 1 180 1 372 1 130 1 354 2 157 2 10 1 102 1 131 1 303 1 104 1 107 1 160 1 
240 1 94 2 187 1 372 2 202 1 130 1 354 3 157 3 10 1 131 1 315 1 230 1 107 2 
92 2 240 1 94 2 187 7 249 1 200 1 372 2 202 1 130 1 354 9 12 1 157 9 356 1 10 1 102 1 266 1 131 1 235 1 315 4 81 1 230 3 107 5 321 1 19 1 
92 2 240 1 94 2 187 7 249 1 200 1 372 2 202 1 130 1 354 9 12 1 157 9 356 1 10 1 102 1 266 1 131 1 235 1 315 4 81 1 230 3 107 5 321 1 19 1 
362 1 250 1 233 1 
328 1 233 1 147 2 
11 2 76 1 360 2 127 1 34 2 248 2 264 2 145 2 
127 1 299 1 300 1 248 3 350 2 24 2 128 2 191 1 27 1 30 1 76 1 361 1 360 3 213 1 34 2 80 1 4 1 62 1 371 1 112 1 115 1 134 1 262 1 264 2 337 1 45 1 11 2 137 2 14 1 89 1 16 1 184 1 346 1 294 2 275 1 349 1 145 2 
11 1 360 1 127 1 34 1 248 1 133 1 98 1 209 1 264 1 145 1 
161 1 176 1 41 1 248 1 250 1 233 1 155 1 11 1 360 1 287 1 77 1 364 1 209 1 367 1 
161 1 176 1 41 2 248 1 250 1 233 1 264 1 155 1 11 1 360 1 287 1 77 2 34 1 209 1 145 1 
41 1 77 1 42 1 289 1 108 1 
177 1 41 2 77 2 42 1 289 1 250 1 233 1 154 1 
41 1 77 1 289 1 
41 1 127 1 42 1 248 1 133 1 98 1 264 1 11 1 360 1 77 1 34 1 2 1 209 1 145 1 
233 1 
41 2 77 2 42 1 289 1 214 1 250 1 233 1 154 1 
41 5 42 2 190 1 162 1 311 1 250 1 233 1 154 1 101 1 66 1 77 5 1 1 289 2 343 1 167 2 293 2 91 2 49 1 124 1 
76 1 362 1 
296 1 248 2 264 1 11 2 76 2 360 2 207 1 34 1 145 1 
113 1 263 1 0 1 
300 1 248 1 350 1 24 1 128 1 191 1 134 1 30 1 45 1 76 1 360 1 14 1 80 1 346 1 275 1 146 1 
300 1 248 2 350 1 24 1 128 1 191 1 134 1 163 1 30 1 0 1 45 1 11 1 14 1 360 2 34 1 80 1 346 1 121 1 275 1 145 1 
11 3 76 1 360 3 34 3 248 3 121 1 264 1 145 3 
11 1 360 1 34 1 248 1 133 1 209 1 145 1 
11 1 360 1 296 1 34 1 207 1 248 1 209 1 264 1 145 1 
127 1 300 1 248 4 350 1 24 1 128 1 191 1 27 1 30 1 155 1 355 1 76 1 360 4 77 1 213 1 34 3 80 1 4 1 161 1 176 1 41 1 62 1 371 1 134 1 163 1 262 1 264 2 337 1 45 1 11 3 137 1 14 1 287 1 89 1 207 1 119 1 184 1 346 1 121 1 294 2 275 1 209 1 349 1 145 3 
11 2 76 1 360 2 34 1 364 1 248 2 121 1 335 1 145 1 
161 1 176 1 41 1 248 3 163 1 264 1 233 1 155 1 11 3 355 1 287 1 360 3 77 1 207 1 34 3 267 1 121 2 209 1 145 3 
248 2 263 1 264 1 0 1 11 2 360 2 207 1 34 2 121 1 145 2 
300 1 248 1 350 1 24 1 128 1 191 1 134 1 30 1 45 1 76 1 360 1 14 1 80 1 346 1 275 1 
172 1 300 1 248 1 350 1 24 1 128 1 191 1 134 1 30 1 75 1 76 1 360 1 14 1 346 1 275 1 
277 1 28 1 27 1 0 2 358 1 256 1 282 1 329 1 4 2 62 1 331 1 113 2 262 1 263 2 337 1 137 4 89 1 16 2 272 1 345 1 294 2 50 1 169 1 349 1 
176 1 11 1 360 1 34 1 139 1 248 1 209 1 145 1 
258 1 231 1 248 5 163 1 264 1 335 1 11 5 76 1 360 5 34 4 207 1 364 1 121 2 145 4 
11 2 360 2 34 2 139 1 248 2 133 1 209 1 145 2 
148 1 237 1 
148 1 237 1 
61 1 55 1 
61 1 55 1 
61 1 55 1 
148 1 237 1 219 1 
148 1 237 1 219 1 
148 1 237 1 246 1 
61 1 148 2 237 2 35 1 55 1 83 1 
148 1 237 1 219 1 
148 1 237 1 25 1 
148 1 237 1 25 1 
148 1 237 1 25 1 
241 2 41 2 148 2 111 1 373 1 233 1 286 3 251 1 357 2 175 2 205 2 77 2 237 2 35 1 36 1 220 1 198 1 283 2 125 1 
148 1 22 1 248 2 73 1 76 1 175 1 357 1 360 2 77 1 34 2 237 1 57 1 241 1 41 1 259 1 373 1 286 1 11 2 205 1 314 1 68 1 246 1 142 1 145 2 
12 1 102 1 249 1 
102 1 249 1 160 1 
324 1 12 2 249 3 260 1 160 1 322 1 
324 1 12 1 26 1 249 2 260 1 160 1 
12 1 324 2 249 2 260 1 160 1 
277 1 22 1 250 1 302 2 233 2 154 1 234 1 101 1 77 5 328 1 256 1 329 1 58 1 41 5 84 1 42 4 285 2 332 1 338 1 66 3 314 1 288 1 270 1 289 1 167 1 293 1 91 1 122 2 49 2 142 1 169 1 147 3 
186 5 277 3 190 1 351 1 250 1 302 6 233 5 154 1 101 1 77 9 328 3 256 3 329 3 58 2 366 1 108 5 41 9 84 3 42 7 332 2 374 1 338 1 227 1 66 8 289 6 48 1 318 1 167 2 293 2 91 2 122 6 49 6 142 4 169 3 147 9 
277 1 190 1 250 1 233 3 302 2 234 1 77 3 328 2 256 1 329 1 58 1 41 3 42 2 84 1 332 1 285 1 66 3 288 1 167 1 293 1 91 1 142 1 49 2 122 2 169 1 147 4 
277 2 190 1 351 1 250 1 233 4 302 4 234 1 77 4 328 3 256 2 329 2 58 1 41 4 42 3 84 2 332 1 285 2 227 1 66 5 288 1 48 1 167 1 293 1 91 1 122 4 142 2 49 4 169 2 147 7 
362 1 275 1 203 1 
275 1 110 1 
253 1 
275 1 30 1 
300 1 244 1 30 1 203 2 253 1 275 3 348 1 
300 1 275 1 30 1 
276 1 275 1 
225 2 96 1 95 1 178 1 243 1 153 1 100 1 137 7 16 4 105 1 218 1 345 3 347 1 256 1 282 2 329 1 4 3 
225 2 96 1 95 1 178 1 243 1 153 1 100 1 137 7 16 4 105 1 218 1 345 3 347 1 256 1 282 2 329 1 4 3 
225 2 95 1 96 1 178 1 243 1 153 1 100 1 137 7 16 4 105 1 218 1 345 3 347 1 256 1 282 2 329 1 295 1 4 3 
277 3 95 1 96 2 188 1 151 3 27 1 153 1 174 1 100 2 218 1 105 2 217 1 195 1 256 4 282 5 329 4 4 15 222 1 225 3 84 3 178 1 243 2 337 1 339 4 137 31 89 1 208 1 317 1 16 16 345 10 294 2 347 5 349 1 169 3 
96 1 95 1 27 2 153 1 100 1 218 1 105 1 256 1 106 1 282 3 329 1 4 4 225 2 243 1 337 2 137 9 89 2 317 1 16 5 378 1 345 4 294 4 347 1 349 2 
52 1 94 1 187 1 212 1 350 1 128 1 24 1 191 1 249 2 130 1 354 2 156 1 157 2 102 1 131 1 107 1 160 1 240 1 60 1 310 1 242 1 372 1 86 1 12 1 136 1 10 1 274 1 346 1 319 1 322 1 
52 1 94 1 187 2 212 1 350 1 128 1 24 1 191 1 249 2 130 1 354 3 156 1 157 3 102 1 131 1 107 1 160 1 307 1 60 1 310 1 372 1 86 1 12 1 136 1 10 1 346 1 90 1 319 1 322 1 170 1 
52 1 187 2 212 1 350 1 128 1 24 1 191 1 249 2 130 1 354 2 156 1 157 2 102 1 131 1 107 1 160 1 60 1 10 1 136 1 12 1 346 1 90 1 319 1 322 1 170 1 
171 1 52 2 20 1 297 1 94 1 232 1 350 1 24 1 128 1 191 1 372 1 134 1 30 1 164 1 354 1 156 2 10 2 157 1 136 2 228 1 346 1 275 1 307 1 
52 1 94 1 212 1 350 1 128 1 24 1 191 1 249 2 354 1 156 1 157 1 102 1 160 1 240 1 60 1 310 1 242 1 372 1 86 1 12 1 136 1 10 1 346 1 319 1 322 1 170 1 
69 1 
191 1 99 1 233 2 280 1 154 3 54 1 155 1 101 1 328 2 58 1 161 1 284 2 333 1 164 1 11 1 65 2 66 2 287 1 289 6 17 1 118 4 167 1 292 2 293 1 346 1 209 1 23 1 248 1 350 2 24 2 128 2 250 1 30 1 353 2 31 2 359 1 360 1 77 5 364 1 367 1 176 1 41 5 224 1 134 2 265 1 375 2 228 1 183 2 91 1 275 1 140 1 49 2 141 1 147 2 323 1 
176 1 161 1 41 3 23 1 248 1 154 1 54 1 155 1 11 1 65 1 287 1 360 1 77 3 214 1 289 2 118 2 364 1 140 1 209 1 141 1 367 1 323 1 
23 1 248 1 250 1 233 1 54 1 154 1 155 1 360 1 77 3 364 1 214 1 367 1 161 1 176 1 41 3 11 1 287 1 375 1 289 1 118 3 140 1 141 1 209 1 323 1 
23 1 248 1 250 1 233 1 154 1 54 1 155 1 360 1 77 3 214 1 364 1 367 1 161 1 176 1 41 3 284 1 11 1 65 1 287 1 375 1 118 3 289 2 140 1 141 1 209 1 323 1 
99 1 233 5 154 3 54 1 155 1 101 1 328 2 197 1 161 1 284 4 11 1 65 4 287 1 66 1 118 6 289 7 167 1 293 1 292 2 209 1 23 1 248 1 250 5 353 2 31 2 33 1 360 1 359 1 77 5 214 1 364 1 216 1 367 1 176 1 370 1 41 5 375 4 183 2 91 1 140 1 141 1 49 1 143 1 323 1 
99 1 233 2 54 1 154 2 155 1 101 1 328 2 161 1 284 2 333 1 11 1 65 2 287 1 66 1 118 4 289 4 167 1 293 1 292 2 209 1 23 1 248 1 250 1 353 2 31 2 360 1 359 1 77 4 364 1 367 1 176 1 41 4 375 2 183 2 91 1 140 1 141 1 49 1 323 1 147 2 
23 1 248 1 250 1 99 1 233 1 154 2 353 2 54 1 31 2 155 1 33 1 101 1 359 1 360 1 77 4 364 1 328 2 367 1 197 1 161 1 176 1 41 4 284 2 11 1 65 2 66 1 287 1 375 2 289 4 183 2 118 4 167 1 292 2 293 1 91 1 140 1 49 1 141 1 209 1 143 1 323 1 
23 1 248 1 250 1 99 1 233 1 154 2 353 2 54 1 31 2 155 1 33 1 101 1 359 1 360 1 77 4 364 1 328 2 367 1 197 1 161 1 176 1 41 4 284 2 11 1 65 2 66 1 287 1 375 2 289 4 183 2 118 4 167 1 292 2 293 1 91 1 140 1 49 1 141 1 209 1 143 1 323 1 
72 2 298 1 23 1 248 1 250 1 233 1 154 2 54 1 31 2 155 1 101 1 359 1 360 1 158 2 77 4 364 1 221 1 367 1 161 1 176 1 41 4 284 2 5 1 11 1 65 2 66 1 287 1 375 2 289 4 118 4 167 1 292 2 293 1 91 1 140 1 49 1 141 1 209 1 143 1 147 2 323 1 
23 1 248 1 250 1 99 1 233 1 154 2 353 2 54 1 31 2 155 1 33 1 101 1 359 1 360 1 77 4 364 1 216 1 328 2 367 1 197 1 161 1 176 1 41 4 284 3 11 1 65 3 66 1 287 1 375 3 183 2 118 5 289 5 167 1 292 2 293 1 91 1 140 1 49 1 141 1 209 1 143 1 323 1 
23 1 248 1 250 1 99 1 233 1 154 2 353 2 54 1 31 2 155 1 33 1 101 1 359 1 360 1 77 4 364 1 216 1 328 2 367 1 197 1 161 1 176 1 41 4 284 3 11 1 65 3 66 1 287 1 375 3 183 2 118 5 289 5 167 1 292 2 293 1 91 1 140 1 49 1 141 1 209 1 143 1 323 1 
233 1 54 1 154 2 155 1 101 1 158 2 161 1 284 2 333 1 11 1 65 2 287 1 66 1 118 4 289 4 167 1 293 1 292 2 209 1 72 2 298 1 23 1 248 1 250 1 31 2 360 1 359 1 77 4 364 1 367 1 176 1 41 4 375 2 91 1 140 1 141 1 49 1 323 1 147 2 
95 1 27 1 153 1 0 1 76 2 362 1 105 1 218 1 282 2 256 1 329 1 4 3 225 1 62 1 243 1 113 1 263 1 262 1 337 1 137 6 89 1 16 3 272 1 345 2 294 2 349 1 
277 2 188 1 150 1 151 3 27 2 0 11 76 1 361 1 213 1 365 1 282 1 195 1 256 2 329 1 4 6 84 2 62 1 113 11 201 1 262 2 263 4 337 2 339 3 137 14 89 2 16 8 291 1 345 2 347 1 379 1 294 4 349 2 169 1 
300 1 248 2 350 1 150 1 128 1 24 1 191 1 27 1 30 1 76 1 360 2 361 1 78 1 34 1 213 1 80 1 4 1 330 1 62 1 134 1 163 1 263 1 262 1 45 1 337 1 11 1 14 1 137 2 89 1 47 1 16 1 346 1 121 1 294 2 275 1 349 1 145 1 146 1 
277 2 95 1 150 1 97 1 191 2 153 1 0 7 193 1 105 1 239 2 282 4 329 3 4 10 62 3 243 1 113 7 163 1 337 3 11 1 14 2 16 10 121 1 346 2 345 8 294 6 347 4 349 3 169 2 170 1 300 2 248 3 350 3 128 3 24 3 27 3 30 2 252 1 76 2 361 1 360 3 213 1 34 1 304 2 218 1 80 2 256 3 257 2 225 1 84 2 134 1 44 2 262 3 263 7 45 2 137 20 89 3 184 2 275 2 145 1 
299 2 278 1 248 1 350 8 128 8 24 7 301 1 191 2 27 2 30 2 360 1 361 1 34 1 213 1 39 1 4 1 62 2 85 1 179 1 134 2 262 2 164 1 337 2 135 1 11 1 137 2 89 2 228 1 16 1 272 1 274 1 121 1 346 2 294 4 70 1 275 3 349 2 145 1 170 1 
277 1 248 1 150 1 27 1 0 1 360 1 34 1 255 1 282 1 256 1 329 1 4 2 84 1 62 1 113 1 263 1 264 1 262 1 337 1 11 1 137 3 207 1 89 1 16 1 345 1 294 2 349 1 169 1 145 1 
277 1 62 1 331 1 113 1 27 1 263 1 262 1 0 1 337 1 137 2 89 1 16 2 272 1 345 1 347 1 294 2 256 1 349 1 
62 1 113 1 27 1 28 1 263 1 262 1 0 1 337 1 137 2 89 1 272 1 345 1 294 2 282 1 329 1 349 1 169 1 4 2 
277 1 27 1 0 2 256 1 282 1 329 1 4 2 84 1 62 1 113 2 262 1 263 2 337 1 137 4 89 1 16 2 272 1 345 2 294 2 347 1 349 1 169 1 
277 1 62 1 331 1 113 1 27 1 263 1 262 1 0 1 337 1 135 1 137 2 89 1 16 2 345 1 347 1 294 2 256 1 349 1 
62 1 113 1 27 1 28 1 263 1 262 1 0 1 337 1 135 1 137 2 89 1 345 1 294 2 282 1 329 1 349 1 169 1 4 2 
277 1 27 1 0 2 256 1 282 1 329 1 4 2 84 1 62 1 113 2 262 1 263 2 337 1 135 1 137 4 89 1 16 2 345 2 294 2 347 1 349 1 169 1 
277 1 84 1 62 1 113 2 27 1 263 2 262 1 0 2 337 1 137 4 89 1 16 2 345 2 347 1 294 2 282 1 256 1 329 1 169 1 349 1 4 2 
300 1 248 1 350 1 128 1 24 1 191 1 27 1 30 1 76 1 361 1 360 1 213 1 80 1 4 1 62 1 134 1 262 1 45 1 337 1 137 2 14 1 89 1 16 1 184 1 346 1 294 2 275 1 349 1 
172 1 300 1 248 1 350 1 128 1 24 1 191 1 27 1 30 1 75 1 76 1 361 1 360 1 213 1 4 1 62 1 134 1 262 1 337 1 137 2 14 1 89 1 16 1 67 1 346 1 294 2 275 1 349 1 
277 1 150 1 27 1 0 2 256 1 282 1 329 1 4 2 84 1 62 1 113 2 262 1 263 2 337 1 137 4 89 1 16 2 345 2 294 2 347 1 349 1 169 1 
277 1 300 1 248 1 350 1 128 1 24 1 191 1 27 1 30 1 0 2 360 1 304 1 80 1 282 1 256 1 329 1 4 2 84 1 62 1 113 2 263 2 262 1 45 1 337 1 137 4 14 1 89 1 16 2 184 1 345 2 346 1 274 1 347 1 294 2 275 1 169 1 349 1 
277 1 248 1 150 1 27 1 0 1 360 1 34 1 256 1 329 1 4 1 84 1 62 1 113 1 264 1 262 1 263 1 337 1 13 1 11 1 137 3 207 1 89 1 16 2 345 1 347 1 294 2 169 1 349 1 145 1 
277 3 188 1 151 1 27 2 281 2 254 2 236 1 363 1 282 3 106 1 195 1 256 3 329 3 4 10 84 3 261 1 337 2 339 2 313 1 137 19 316 1 89 2 342 1 16 9 377 1 345 6 294 4 347 3 349 2 169 3 
277 3 53 1 188 2 151 2 27 3 281 4 254 1 159 1 282 2 106 1 256 3 329 2 4 12 84 3 63 1 261 1 337 3 87 1 339 2 313 2 137 26 316 1 317 2 89 3 342 1 16 14 166 1 229 1 345 4 377 2 347 2 294 6 349 3 169 2 
277 4 95 1 53 1 188 3 151 3 27 3 153 1 281 4 254 1 236 1 159 1 105 1 218 1 282 4 106 1 195 1 256 5 329 5 4 21 225 1 84 4 63 1 243 1 261 1 87 1 337 3 339 4 313 2 137 41 182 1 316 1 317 1 89 3 342 1 16 20 166 1 229 1 377 1 345 8 294 6 347 4 349 3 169 4 
277 4 95 1 53 1 188 3 151 3 27 4 153 1 281 4 254 1 236 1 159 1 105 1 218 1 282 4 106 1 195 1 256 5 329 4 4 18 225 1 84 4 63 1 243 1 261 1 87 1 337 4 339 4 313 2 137 38 182 1 316 1 317 2 89 4 342 1 16 20 166 1 229 1 377 1 345 7 294 8 347 3 349 4 169 3 
277 7 95 1 53 1 188 2 151 4 27 2 153 1 281 4 254 1 159 1 105 1 218 1 282 7 106 1 195 2 256 8 329 8 4 25 225 1 84 7 63 1 243 1 261 1 87 1 337 2 339 4 313 1 137 52 316 1 317 1 89 2 342 1 16 27 166 1 291 2 229 1 377 1 345 14 294 4 347 7 349 2 169 7 
241 1 175 1 357 1 205 1 148 1 237 1 35 1 36 1 38 1 125 1 
246 1 57 1 
241 1 175 1 357 1 205 1 148 1 237 1 279 1 306 1 247 1 
41 1 241 1 148 1 373 1 233 1 286 2 251 1 357 1 175 1 77 1 205 1 237 1 35 1 36 1 220 1 198 1 283 1 125 1 
41 1 241 1 148 1 373 1 233 1 286 2 251 1 357 1 175 1 77 1 205 1 237 1 35 1 36 1 220 1 198 1 283 1 125 1 
41 1 241 1 148 1 373 1 233 1 286 2 251 1 357 1 175 1 77 1 205 1 237 1 35 1 36 1 220 1 198 1 283 1 125 1 
219 1 123 1 83 1 
219 1 123 1 83 1 
25 1 59 1 
25 1 83 1 59 1 
68 1 259 1 
148 1 22 1 248 2 73 1 76 1 175 1 357 1 360 2 77 1 34 2 237 1 57 1 283 1 198 1 308 1 41 1 241 1 42 1 259 1 286 1 11 2 205 1 314 1 68 1 246 1 142 1 145 2 
219 1 123 1 
25 1 83 1 59 1 
299 2 211 1 248 2 350 2 150 1 128 2 24 2 191 1 27 1 30 1 360 2 361 1 213 1 39 1 4 1 62 1 199 1 85 1 262 1 337 1 11 2 15 1 137 2 89 1 16 1 346 1 294 2 275 1 349 1 71 1 380 1 
52 1 132 1 212 1 350 2 24 2 128 2 249 2 191 1 86 1 116 1 12 1 102 1 185 1 346 1 274 1 160 1 319 1 322 1 170 1 
52 1 132 1 212 1 350 1 24 1 128 1 249 2 191 1 129 1 86 1 12 1 102 1 346 1 160 1 319 1 322 1 170 1 
52 1 297 1 350 1 24 1 128 1 191 1 134 1 30 1 116 1 164 1 228 1 346 1 275 1 51 1 
52 1 132 1 212 1 350 1 24 1 128 1 249 2 191 1 86 1 116 1 12 1 102 1 185 1 346 1 160 1 319 1 322 1 170 1 
88 1 
66 1 362 1 343 1 250 1 49 1 233 1 124 1 
250 1 99 1 233 2 353 1 154 1 101 1 77 1 328 1 41 1 66 1 183 1 289 1 167 1 293 1 91 1 49 1 147 1 
309 1 300 1 350 1 24 1 128 1 191 1 134 1 244 1 30 1 74 1 101 1 66 1 167 1 239 1 293 1 346 2 91 1 275 2 82 1 110 1 
277 2 189 1 53 1 188 1 151 1 250 2 302 5 233 5 154 1 101 2 77 1 159 1 238 1 3 1 328 3 256 2 58 1 329 2 41 1 224 1 84 2 87 1 339 1 66 8 289 1 167 2 166 1 344 2 293 2 229 1 91 2 122 5 49 5 169 2 147 6 
127 1 248 1 98 1 153 1 33 1 101 1 360 1 77 1 34 1 2 1 105 1 3 1 256 2 329 1 41 1 133 1 243 1 264 1 11 1 66 2 167 1 344 2 120 1 293 1 91 1 209 1 49 2 145 1 
250 1 233 1 101 1 66 1 167 1 343 1 293 1 91 1 49 1 124 1 
277 2 84 2 302 5 233 5 66 5 239 1 344 2 3 1 328 5 256 2 49 5 122 5 329 2 169 2 147 10 
41 1 77 1 289 1 250 1 233 1 154 1 
190 1 350 4 128 4 24 4 152 1 191 1 30 1 280 1 154 2 101 1 77 3 327 2 58 2 41 3 224 2 134 2 336 1 164 1 66 2 340 1 228 1 17 1 289 4 167 2 293 2 346 1 91 2 275 1 49 2 
127 1 300 1 248 3 350 1 128 1 24 1 191 1 27 1 30 1 76 1 360 3 213 1 34 2 80 1 4 1 371 1 62 1 134 1 264 2 262 1 45 1 337 1 11 2 137 1 14 1 89 1 184 1 346 1 294 2 275 1 349 1 145 2 
224 1 225 1 250 2 302 2 233 4 101 1 66 1 167 1 293 1 328 2 91 1 122 2 49 2 58 1 147 4 
241 1 175 1 43 1 
241 1 175 1 43 1 
241 1 175 1 126 1 68 1 125 1 
241 1 175 1 43 1 
241 1 175 1 173 1 
241 1 175 1 173 1 
241 1 175 1 173 1 
241 1 175 1 
148 1 237 1 
225 1 95 1 243 1 27 2 153 1 337 2 137 8 89 2 317 1 16 4 218 1 105 1 345 3 347 1 294 4 256 1 282 2 329 1 349 2 4 4 
137 6 225 1 95 1 362 1 16 3 105 1 218 1 345 2 243 1 256 1 282 2 329 1 153 1 4 3 
277 1 84 1 27 1 337 1 137 4 89 1 215 1 16 2 345 2 294 2 347 1 282 1 256 1 329 1 169 1 349 1 4 2 
277 1 84 1 188 1 151 1 339 2 137 7 16 3 345 2 347 1 282 1 195 1 256 1 329 1 169 1 4 4 
277 2 95 1 151 2 27 2 153 1 105 2 218 1 256 3 195 1 282 5 329 3 4 12 225 1 84 2 243 2 6 1 337 2 339 2 137 23 317 2 89 2 16 11 291 1 345 9 347 4 379 1 294 4 169 2 349 2 
137 1 4 1 339 1 
137 1 16 1 151 1 
277 1 84 1 27 1 337 1 137 6 89 1 215 1 16 3 239 1 345 3 294 2 347 1 256 1 282 2 329 1 349 1 169 1 4 3 
277 2 188 1 53 1 151 1 27 1 159 1 106 1 256 2 282 1 329 2 4 6 84 2 87 1 337 1 339 1 137 12 89 1 16 6 166 1 229 1 345 2 347 1 294 2 349 1 169 2 
243 1 153 1 137 6 16 3 105 1 345 2 347 1 256 1 282 1 329 1 4 3 
95 1 243 1 6 1 27 1 337 1 137 3 317 1 89 1 16 1 105 1 218 1 345 2 347 1 294 2 282 1 349 1 4 2 
243 2 27 1 153 1 337 1 137 10 89 1 16 5 120 1 105 2 345 5 294 2 347 2 106 1 282 3 256 2 329 2 349 1 4 5 
277 1 27 1 337 1 137 2 89 1 16 2 345 1 294 2 347 1 106 1 256 1 349 1 
277 1 84 1 27 1 337 1 137 4 89 1 16 2 345 2 294 2 347 1 282 1 106 1 256 1 329 1 169 1 349 1 4 2 
243 1 6 1 27 3 337 3 137 3 317 1 236 1 89 3 16 1 105 1 345 2 294 6 347 1 106 1 282 1 349 3 4 2 
277 3 95 1 188 1 151 3 27 5 153 2 174 1 236 1 215 1 105 3 218 1 217 1 106 1 195 1 256 5 282 7 329 5 4 18 225 1 84 3 243 3 6 1 337 5 339 4 137 34 317 2 208 1 89 5 16 16 345 12 294 10 347 5 349 5 169 3 
95 1 188 1 151 1 27 1 153 1 218 1 105 1 256 1 106 1 282 2 329 1 4 4 225 1 243 1 87 1 337 1 339 1 137 8 89 1 16 4 345 2 294 2 349 1 
277 1 95 1 188 1 151 1 27 2 153 1 215 1 105 1 218 1 282 2 106 1 195 1 256 2 329 1 4 5 225 1 84 1 243 1 87 1 337 2 339 2 137 11 89 2 16 6 345 3 294 4 347 1 349 2 
277 2 95 1 188 1 53 1 151 1 27 3 153 1 215 1 159 1 105 1 218 1 106 1 256 3 282 3 329 3 4 10 225 1 84 2 243 1 87 1 337 3 339 1 137 19 89 3 317 1 16 9 166 1 229 1 345 4 347 1 294 6 349 3 169 2 
277 2 95 1 188 1 53 1 151 1 27 3 153 1 215 1 159 1 105 1 218 1 106 1 256 3 282 3 329 2 4 7 225 1 84 2 243 1 87 1 337 3 339 1 137 17 317 1 89 3 16 10 166 1 229 1 345 5 347 2 294 6 349 3 169 1 
95 1 188 1 151 1 27 1 153 1 218 1 105 1 256 1 106 1 282 2 329 1 4 4 225 1 243 1 87 1 337 1 339 1 137 8 89 1 16 4 345 2 294 2 349 1 
277 2 188 1 53 1 151 1 27 1 159 1 106 1 256 2 282 1 329 2 4 6 84 2 87 1 337 1 339 1 137 12 89 1 16 6 166 1 229 1 345 2 347 1 294 2 349 1 169 2 
277 2 95 1 53 1 188 1 151 1 27 4 153 1 159 1 215 1 105 1 218 1 106 1 256 3 282 3 329 2 4 8 225 1 84 2 243 1 87 1 337 4 339 1 137 18 89 4 317 2 16 10 166 1 229 1 345 5 347 2 294 8 349 4 169 1 
277 3 53 1 188 1 151 1 27 4 236 1 159 1 106 1 256 3 282 3 329 2 4 7 84 3 87 1 337 4 339 1 137 16 89 4 317 2 16 9 166 1 229 1 345 6 347 3 294 8 349 4 169 2 
95 2 243 3 153 1 137 7 16 3 218 1 105 3 345 6 347 3 282 3 256 1 329 1 4 4 
277 2 95 1 53 1 188 1 151 1 27 4 153 1 236 1 159 1 105 1 218 1 106 1 256 3 282 3 329 2 4 8 225 1 84 2 243 1 87 1 337 4 339 1 137 18 89 4 317 2 16 10 166 1 229 1 345 4 347 1 294 8 349 4 169 1 
11 1 76 1 360 1 364 1 149 1 248 1 335 1 
210 1 149 1 248 1 335 1 11 1 76 1 326 1 360 1 103 1 364 1 196 1 144 1 
228 1 362 1 350 1 346 1 128 1 24 1 191 1 275 1 134 1 30 1 164 1 
300 1 248 2 350 1 24 1 128 1 191 1 134 1 30 1 11 1 76 1 14 1 360 2 34 1 80 1 346 1 121 1 275 1 145 1 
176 1 161 1 276 1 300 2 248 2 350 1 24 1 128 1 191 1 30 2 11 2 76 1 14 1 360 2 268 1 34 1 327 1 80 1 346 1 121 1 275 3 209 1 145 2 
172 1 276 1 300 2 248 2 350 2 128 2 24 2 191 1 30 2 76 1 360 2 34 1 327 1 161 1 176 1 11 2 14 1 376 1 268 1 121 1 346 1 275 3 209 1 145 2 
276 1 300 1 350 3 128 3 24 3 191 1 250 1 30 1 233 1 77 2 327 1 110 1 41 2 134 1 203 1 8 1 287 1 376 1 268 1 289 1 346 1 275 4 168 1 
41 2 276 1 300 1 350 3 24 3 128 3 250 1 191 1 134 1 233 1 30 1 203 1 32 1 287 1 77 2 376 1 268 1 327 1 289 1 346 1 275 4 110 1 
350 1 346 1 128 1 24 1 191 1 301 1 
299 1 300 1 278 1 350 7 24 6 128 7 301 1 85 1 179 1 191 2 134 2 244 1 30 2 7 1 181 1 274 1 346 3 70 1 275 3 368 1 170 1 
95 1 150 1 191 1 153 1 0 1 105 1 282 2 329 1 4 3 62 2 243 1 113 1 337 2 11 1 15 1 14 1 16 3 121 1 346 1 345 2 294 4 349 2 300 1 248 2 350 1 128 1 24 1 27 2 30 1 76 2 360 2 34 1 304 1 80 1 218 1 256 1 225 1 44 1 263 1 262 2 45 1 137 6 89 2 184 1 274 1 275 1 145 1 
350 1 24 1 128 1 250 1 233 1 154 1 32 1 101 2 77 3 37 1 110 1 41 3 42 1 226 1 134 1 334 1 203 1 66 1 287 1 340 1 289 2 343 1 167 2 293 2 91 2 275 2 49 1 124 1 
300 1 350 2 24 2 128 2 301 1 191 1 244 1 30 1 203 1 74 1 274 1 346 2 275 2 
350 4 24 4 128 4 191 1 134 1 30 1 164 1 376 1 228 1 194 1 346 1 274 1 275 1 
300 1 350 2 24 2 128 2 191 1 30 1 7 1 193 1 341 1 117 1 327 1 346 2 275 1 368 1 
102 1 350 1 346 1 128 1 24 1 249 1 191 1 134 1 160 1 319 1 
350 2 24 2 128 2 85 1 191 1 30 1 274 1 346 1 275 1 71 1 170 1 
350 5 24 4 128 5 179 1 85 1 191 2 134 1 30 2 164 1 228 1 327 1 194 1 274 1 346 2 275 3 70 1 
350 5 24 4 128 5 325 1 85 1 191 2 134 1 30 2 164 1 228 1 327 1 194 1 274 1 346 2 275 3 70 1 
172 1 300 1 248 2 350 1 24 1 128 1 191 1 134 1 30 1 11 1 76 1 14 1 360 2 34 1 346 1 121 1 275 1 145 1 
300 1 350 1 24 1 128 1 191 1 244 1 30 1 7 1 181 1 327 1 346 2 275 1 368 1 
369 1 223 1 76 1 206 1 165 1 
176 1 161 1 223 2 369 2 41 2 42 1 250 1 233 1 29 1 64 1 155 1 245 1 355 1 76 1 287 1 206 1 77 2 165 2 209 1 
11 1 223 1 360 1 206 1 211 1 165 1 248 1 199 1 380 1 
245 1 206 1 29 1 
131 1 362 1 107 1 130 1 
157 1 131 1 94 1 372 1 107 1 130 1 354 1 
10 1 354 1 156 1 
240 1 94 1 21 1 372 1 130 1 354 3 192 1 157 3 303 2 131 1 320 1 107 1 
92 1 157 2 131 1 94 1 187 1 372 1 107 1 130 1 354 2 
12 1 157 1 102 1 240 1 94 1 315 1 235 1 249 1 372 1 107 1 354 1 
157 1 240 1 94 1 372 1 107 1 130 1 354 1 
157 1 240 1 131 1 94 1 372 1 130 2 354 1 
240 1 94 2 372 2 130 1 354 2 204 1 157 2 271 1 273 1 107 1 
240 1 94 1 187 2 372 1 200 1 130 1 354 3 157 3 131 1 315 1 81 1 230 1 107 2 
240 1 94 1 187 1 249 2 372 1 130 1 354 2 157 2 12 1 102 1 131 1 79 1 107 1 160 1 322 1 
92 1 240 1 94 2 187 2 372 2 130 1 354 4 157 4 131 1 315 1 230 1 107 2 19 1 
157 1 240 1 131 1 94 1 372 1 107 1 130 1 354 1 
21 1 94 1 187 2 372 1 130 2 354 4 192 1 157 4 303 1 131 2 46 1 315 1 230 1 107 3 
240 1 93 1 94 1 187 1 372 1 130 1 354 2 157 2 131 1 107 1 18 1 321 1 
240 1 40 1 21 1 94 1 372 1 130 1 354 3 192 2 157 3 303 2 131 1 107 1 
352 1 107 2 109 1 9 2 
157 1 240 1 94 1 290 1 372 1 354 1 
157 2 240 1 131 1 94 1 187 1 200 1 372 1 107 1 130 1 354 2 
312 1 
157 1 240 1 131 1 94 1 372 1 107 1 130 1 354 1 
157 3 240 1 131 1 303 1 94 1 187 1 200 1 372 1 107 1 130 1 354 3 
46 1 315 1 230 1 107 1 
107 1 130 1 

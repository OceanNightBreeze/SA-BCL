#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testIntersection()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I | CONDITION | 867 | while (x) -> while (!x)
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | CONDITION | 7408 | if (x) -> if (!x)
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:toString()Ljava.lang.String;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
11 3 53 1 257 1 14 1 128 1 106 1 98 2 295 1 349 3 247 2 300 1 285 2 154 1 
229 1 53 1 257 3 54 2 331 2 128 1 106 2 57 1 295 6 237 1 314 2 60 1 134 1 11 9 14 4 242 1 42 1 98 2 195 1 349 9 247 2 300 1 283 2 352 1 285 5 150 1 252 1 154 1 
229 1 53 1 257 3 54 2 331 2 128 1 106 2 57 1 295 6 237 1 314 2 60 1 134 1 11 9 14 4 242 1 42 1 98 2 195 1 349 9 247 2 300 1 283 2 352 1 285 5 150 1 252 1 154 1 
229 1 53 1 257 4 54 2 331 2 128 1 106 2 57 1 295 7 237 1 314 2 60 1 134 1 11 10 14 5 242 1 42 1 98 2 195 1 349 10 247 2 300 1 283 2 352 1 285 6 150 1 252 1 154 1 
229 1 53 1 257 2 54 2 331 2 128 1 106 2 57 1 295 4 237 1 314 2 60 1 11 7 14 3 242 1 42 1 98 2 195 1 349 7 247 2 300 1 283 1 352 1 285 4 150 1 252 1 154 1 
11 4 53 1 257 1 331 1 54 1 14 2 128 1 57 1 98 1 295 3 349 4 314 1 247 1 283 2 285 3 252 1 134 1 154 1 
11 2 53 1 331 1 15 1 128 1 242 1 106 1 346 1 98 1 195 1 349 2 314 1 247 1 285 1 154 1 198 1 
156 1 53 1 257 3 54 1 331 1 128 1 106 1 57 1 295 7 314 1 60 1 91 1 134 1 11 9 14 4 98 2 349 9 300 1 247 2 283 2 285 5 150 1 252 1 154 1 
156 1 53 1 257 3 54 1 331 1 128 1 106 1 57 1 295 7 314 1 60 1 91 1 134 1 11 9 14 4 98 2 349 9 300 1 247 2 283 2 285 5 150 1 252 1 154 1 
157 1 166 1 116 1 192 1 23 1 56 1 359 1 109 1 122 1 124 1 26 1 113 1 330 1 32 1 
33 1 
33 1 296 1 157 1 336 1 301 1 192 2 210 1 113 2 
94 1 297 1 33 1 157 2 343 2 305 1 192 5 371 1 202 2 194 1 375 1 19 1 296 2 131 1 336 1 301 1 113 5 174 2 93 1 
33 1 336 1 163 1 
33 1 298 2 273 1 
104 1 109 2 166 2 122 2 116 2 330 2 359 1 32 2 
104 1 259 1 293 1 178 1 359 1 130 1 108 1 333 1 58 2 360 1 312 1 7 1 109 3 159 2 181 1 208 1 62 1 368 1 139 1 240 1 166 2 344 1 116 2 140 1 275 2 143 1 348 2 96 1 44 1 222 1 147 1 122 3 49 1 286 2 173 1 330 2 32 2 
109 1 166 1 122 1 116 1 23 1 26 1 56 1 330 1 359 1 32 1 
245 1 33 1 109 1 336 1 122 1 116 1 192 1 224 1 9 1 211 1 23 1 61 1 113 1 279 1 
33 1 166 1 116 1 192 2 23 1 279 1 109 1 336 1 122 1 224 1 211 1 61 1 113 2 330 1 32 1 
281 1 296 1 157 1 192 1 113 1 
33 1 296 1 157 1 336 1 301 1 192 2 113 2 38 1 
296 1 192 1 113 1 
104 2 166 1 116 2 231 1 109 2 122 2 337 1 330 1 32 1 
127 1 182 1 51 1 
104 1 293 1 178 1 348 1 58 1 96 1 246 1 44 1 109 1 159 1 312 1 122 1 208 1 49 1 62 1 368 1 
104 1 163 1 
116 1 293 1 178 1 348 1 58 1 96 1 44 1 310 1 312 1 109 2 159 1 122 2 208 1 49 1 123 1 330 1 62 1 51 1 368 1 32 1 
104 1 109 3 166 1 122 3 116 3 123 1 330 3 32 3 
109 1 122 1 116 1 23 1 56 1 330 1 32 1 
109 1 166 1 122 1 116 1 337 1 23 1 231 1 330 1 32 1 
104 1 259 1 293 1 178 1 23 1 359 1 108 1 333 1 58 1 360 1 310 1 312 1 109 4 159 1 181 1 208 1 337 1 211 1 61 1 113 1 62 1 368 1 139 1 240 1 166 2 116 3 192 1 275 1 18 1 279 1 143 1 348 1 96 1 44 1 100 1 222 1 147 1 122 4 224 1 49 1 286 2 123 1 330 3 32 3 
104 1 109 2 122 2 116 2 9 1 209 1 123 1 330 1 32 1 
33 1 166 1 116 3 192 1 23 1 18 1 279 1 310 1 109 3 122 3 248 1 224 1 337 1 211 1 123 2 61 1 113 1 330 3 32 3 
166 1 116 2 109 2 182 1 122 2 337 1 123 1 330 2 51 1 32 2 
104 1 293 1 178 1 348 1 58 1 96 1 44 1 109 1 159 1 312 1 122 1 208 1 49 1 62 1 368 1 
104 1 293 1 348 1 58 1 96 1 44 1 109 1 159 1 312 1 122 1 49 1 186 1 36 1 62 1 368 1 
200 1 127 2 259 1 358 1 309 1 5 1 333 1 108 2 334 1 360 1 235 1 182 2 213 1 190 1 64 1 240 1 275 4 99 1 222 1 147 1 250 1 286 2 173 2 51 2 
71 1 109 1 122 1 116 1 23 1 330 1 279 1 32 1 
104 1 166 1 116 5 40 1 243 1 310 1 109 5 122 5 9 1 209 1 337 1 123 2 330 4 32 4 
71 1 109 2 122 2 116 2 23 1 56 1 330 2 32 2 
70 1 160 1 219 1 
160 2 249 1 365 1 219 2 107 1 278 1 
160 1 219 1 
160 1 219 1 
249 1 278 1 
249 1 278 1 
249 1 278 1 
65 1 160 1 219 1 
65 1 160 1 219 1 
65 1 160 1 219 1 
160 1 219 1 354 1 
160 1 219 1 354 1 
160 1 219 1 354 1 
255 1 33 1 115 1 292 2 319 2 192 2 219 2 107 1 117 3 168 1 169 2 160 2 171 2 75 1 151 1 366 2 113 2 37 1 125 1 
104 1 292 1 201 1 116 2 319 1 192 1 82 1 219 1 66 1 117 1 374 1 168 1 169 1 70 1 109 2 160 1 122 2 92 1 366 1 113 1 330 2 253 1 318 1 32 2 
34 2 314 2 54 1 327 1 198 1 
314 1 331 1 54 1 
314 1 331 1 198 1 
34 1 363 1 314 3 54 2 327 1 198 1 
28 1 34 1 314 2 54 1 327 1 198 1 
33 2 157 4 82 1 309 1 202 1 334 1 296 1 336 1 131 3 316 1 90 1 264 1 92 1 113 5 213 1 265 2 93 1 298 3 273 1 343 1 192 5 274 1 371 2 66 1 68 2 280 1 301 1 250 1 50 1 287 1 288 2 174 1 
33 5 157 7 79 1 21 1 230 5 309 3 202 2 334 3 296 6 336 1 131 8 316 3 340 1 113 9 213 3 93 1 239 1 298 9 273 3 343 2 192 9 371 6 66 4 68 6 194 1 280 2 281 5 45 1 301 1 284 1 250 3 50 1 287 2 288 6 174 2 
33 3 157 2 309 1 202 1 334 1 336 1 131 3 90 1 316 1 113 3 265 1 213 1 298 4 273 2 343 1 192 3 274 1 66 1 371 2 68 2 194 1 280 1 250 1 287 1 288 2 174 1 
33 4 157 3 21 1 309 2 202 1 334 2 336 1 131 5 90 1 316 2 113 4 265 2 213 2 298 7 239 1 273 3 343 1 192 4 274 1 66 2 371 4 68 4 194 1 280 1 284 1 250 2 287 1 288 4 174 1 
136 1 
369 1 163 1 62 1 
74 1 62 1 
312 1 62 1 
369 2 312 1 185 1 167 1 62 3 368 1 
312 1 62 1 368 1 
306 1 62 1 
189 1 64 2 12 1 308 1 299 1 309 1 3 1 275 7 276 1 108 3 244 1 69 2 99 3 196 1 223 1 173 4 213 1 187 1 
126 1 259 1 308 1 108 3 360 1 341 1 187 2 164 1 189 1 64 1 217 1 345 1 275 6 276 1 220 1 244 1 69 1 99 2 222 1 324 1 147 1 223 1 286 2 173 3 
259 2 308 1 309 1 3 1 108 4 360 2 341 1 213 1 187 1 189 1 64 3 299 1 275 9 244 1 69 2 99 4 119 1 101 1 222 2 147 2 196 1 223 1 286 4 173 5 
189 1 64 2 308 1 299 1 309 1 3 1 275 7 276 1 108 3 244 1 69 2 99 3 196 1 223 1 173 4 213 1 187 1 
189 1 64 2 308 1 299 1 309 1 3 1 275 7 276 1 108 3 244 1 69 2 99 3 196 1 223 1 173 4 213 1 187 1 
269 1 11 1 356 1 218 2 293 1 106 2 17 1 348 1 58 1 96 1 98 1 234 1 322 1 282 2 349 1 312 1 159 1 120 2 247 1 59 1 49 1 225 1 62 1 
52 1 77 1 53 1 175 1 256 1 331 1 54 1 106 1 180 1 58 1 361 1 159 1 314 2 363 1 11 1 218 1 348 1 96 1 98 1 282 1 349 1 120 1 247 1 49 1 20 1 198 1 
52 1 77 1 53 1 175 1 256 1 331 1 54 1 128 1 106 1 180 1 58 1 295 1 361 1 159 1 314 2 363 1 367 1 11 2 218 1 348 1 96 1 98 1 282 1 349 2 120 1 247 1 285 1 49 1 154 1 198 1 
52 1 77 1 175 1 256 1 331 1 54 1 128 1 106 1 180 1 58 1 295 2 159 1 363 1 314 2 11 3 218 1 348 1 347 1 96 1 98 1 282 1 349 3 120 1 247 1 285 1 225 1 49 1 154 1 20 1 198 1 
77 1 256 1 54 1 331 1 128 1 106 1 180 1 58 1 295 2 159 1 314 2 363 1 11 2 218 1 348 1 347 1 96 1 282 1 349 2 120 1 285 1 49 1 154 1 20 1 198 1 
22 1 
293 2 1 1 177 1 85 1 296 4 131 2 9 1 39 1 93 1 298 1 343 1 192 4 16 1 17 1 193 1 348 2 95 3 96 1 245 1 301 2 49 1 197 1 23 1 202 1 58 2 262 1 312 1 159 2 109 1 211 1 112 1 61 1 113 4 62 1 214 1 63 1 269 1 271 1 27 1 216 1 273 1 116 1 371 2 373 1 279 1 325 1 122 1 224 1 287 1 379 1 174 1 380 1 290 1 
177 1 23 1 85 1 262 1 109 1 296 2 9 1 211 1 210 1 61 1 112 1 113 3 116 1 192 3 279 1 95 2 245 1 122 1 301 1 224 1 379 1 290 1 
33 1 177 1 23 1 85 1 262 1 296 1 109 1 336 1 9 1 211 1 210 1 61 1 113 3 271 1 116 1 192 3 279 1 95 3 245 1 122 1 301 1 224 1 379 1 290 1 
33 1 177 1 23 1 85 1 262 1 109 1 296 2 336 1 9 1 210 1 211 1 61 1 112 1 113 3 271 1 116 1 192 3 279 1 373 1 95 3 245 1 301 1 122 1 224 1 379 1 290 1 
33 5 177 1 85 1 296 7 336 5 131 1 9 1 39 2 93 1 238 1 343 1 192 5 16 2 95 6 145 1 245 1 301 3 23 1 202 1 262 1 109 1 315 1 211 1 210 1 112 4 61 1 162 1 113 5 63 1 271 4 215 1 216 2 273 2 116 1 371 1 373 4 279 1 325 2 122 1 224 1 379 1 174 1 380 1 290 1 
33 2 177 1 85 1 296 4 131 1 336 1 9 1 39 2 93 1 298 2 343 1 192 4 16 2 95 4 245 1 301 2 23 1 202 1 262 1 109 1 211 1 61 1 112 2 113 4 63 1 271 2 27 1 216 2 273 2 116 1 371 1 279 1 373 2 325 2 122 1 224 1 379 1 174 1 380 1 290 1 
33 1 177 1 23 1 85 1 202 1 262 1 296 4 109 1 336 1 315 1 131 1 9 1 211 1 112 2 61 1 162 1 113 4 39 2 93 1 238 1 63 1 271 2 216 2 273 2 343 1 116 1 192 4 371 1 16 2 373 2 279 1 95 4 245 1 325 2 301 2 122 1 224 1 379 1 174 1 380 1 290 1 
33 1 177 1 23 1 85 1 202 1 262 1 296 4 109 1 336 1 315 1 131 1 9 1 211 1 112 2 61 1 162 1 113 4 39 2 93 1 238 1 63 1 271 2 216 2 273 2 343 1 116 1 192 4 371 1 16 2 373 2 279 1 95 4 245 1 325 2 301 2 122 1 224 1 379 1 174 1 380 1 290 1 
291 1 33 1 177 1 23 1 85 1 202 1 262 1 296 4 8 2 109 1 336 1 315 1 131 1 9 1 211 1 112 2 61 1 113 4 93 1 114 2 63 1 271 2 298 2 191 1 216 2 343 1 116 1 192 4 371 1 373 2 279 1 95 4 245 1 325 2 301 2 122 1 326 1 224 1 379 1 174 1 290 1 
33 1 177 1 23 1 85 1 202 1 262 1 109 1 296 5 336 1 315 1 131 1 9 1 211 1 61 1 112 3 162 1 113 4 39 2 93 1 238 1 63 1 271 3 216 2 215 1 273 2 343 1 116 1 192 4 371 1 16 2 279 1 373 3 95 5 245 1 325 2 301 2 122 1 224 1 379 1 174 1 380 1 290 1 
33 1 177 1 23 1 85 1 202 1 262 1 109 1 296 5 336 1 315 1 131 1 9 1 211 1 61 1 112 3 162 1 113 4 39 2 93 1 238 1 63 1 271 3 216 2 215 1 273 2 343 1 116 1 192 4 371 1 16 2 279 1 373 3 95 5 245 1 325 2 301 2 122 1 224 1 379 1 174 1 380 1 290 1 
33 1 177 1 23 1 85 1 202 1 262 1 296 4 8 2 109 1 336 1 131 1 9 1 211 1 112 2 61 1 113 4 93 1 114 2 63 1 271 2 298 2 27 1 191 1 216 2 343 1 116 1 192 4 371 1 373 2 279 1 95 4 245 1 325 2 301 2 122 1 224 1 379 1 174 1 290 1 
303 1 259 2 293 2 179 1 58 8 333 2 108 1 360 2 235 1 109 1 159 8 7 2 312 2 263 1 338 1 212 1 367 1 62 3 269 1 240 2 139 1 116 1 344 1 275 2 17 1 348 7 144 1 96 2 376 1 222 2 147 2 122 1 49 2 286 4 123 1 330 1 173 1 20 1 32 1 
127 1 259 1 309 1 333 1 334 1 108 2 360 1 109 1 316 1 182 1 337 1 161 1 213 1 64 1 166 1 240 1 116 1 275 3 99 1 222 1 147 1 122 1 250 1 286 2 330 1 153 1 173 1 51 1 32 1 
104 2 127 1 259 1 308 1 3 1 309 1 333 1 108 3 360 1 235 1 182 1 163 1 213 1 64 2 240 1 299 1 275 6 69 1 99 2 222 1 147 1 196 1 223 1 286 2 173 3 51 1 
104 1 127 8 259 2 83 1 23 1 309 1 108 5 333 2 334 2 360 2 205 1 316 2 182 3 161 1 213 2 164 2 64 1 165 1 139 1 240 1 345 2 141 1 275 11 244 1 99 2 378 1 222 2 147 2 250 1 48 1 286 4 173 6 51 8 
104 1 259 1 293 1 178 1 84 1 58 1 333 1 108 1 360 1 310 1 312 1 159 1 109 2 236 1 207 1 182 1 208 1 161 1 62 1 368 1 240 1 139 1 116 1 344 1 275 2 348 1 96 1 44 1 246 1 222 1 147 1 122 2 49 1 286 2 123 1 330 1 173 1 32 1 
0 2 127 7 293 1 178 2 3 1 333 3 334 2 181 2 182 7 10 2 139 1 240 3 344 1 299 1 348 3 244 4 96 2 44 2 99 8 147 3 46 1 196 1 250 2 49 2 152 1 20 1 51 7 199 2 104 2 259 3 308 1 309 3 108 10 58 3 360 3 310 1 159 3 109 3 312 2 316 2 208 2 317 1 161 1 62 2 213 3 368 2 64 4 116 1 29 2 275 20 69 1 222 3 122 3 223 1 286 6 123 1 330 1 173 10 32 1 
240 1 127 1 259 1 358 1 275 2 244 1 333 1 334 1 360 1 99 1 235 1 222 1 147 1 182 1 286 2 173 2 213 1 51 1 
200 1 64 1 240 1 127 1 259 1 275 2 309 1 333 1 108 2 360 1 99 1 235 1 222 1 147 1 182 1 250 1 286 2 51 1 
127 2 259 1 309 1 334 1 333 1 108 2 360 1 235 1 316 1 182 2 213 1 64 1 240 1 275 4 244 1 99 2 222 1 147 1 250 1 286 2 173 2 51 2 
240 1 127 1 259 1 358 1 179 1 275 2 244 1 333 1 334 1 360 1 99 1 222 1 147 1 182 1 286 2 173 2 213 1 51 1 
200 1 64 1 240 1 127 1 259 1 179 1 275 2 309 1 333 1 108 2 360 1 99 1 222 1 147 1 182 1 250 1 286 2 51 1 
127 2 259 1 179 1 309 1 334 1 333 1 108 2 360 1 316 1 182 2 213 1 64 1 240 1 275 4 244 1 99 2 222 1 147 1 250 1 286 2 173 2 51 2 
127 2 259 1 309 1 334 1 333 1 108 2 360 1 316 1 182 2 213 1 64 1 240 1 275 4 244 1 99 2 222 1 147 1 250 1 286 2 173 2 51 2 
104 1 259 1 293 1 178 1 58 1 333 1 108 1 360 1 312 1 159 1 109 1 181 1 208 1 62 1 368 1 240 1 139 1 344 1 275 2 348 1 96 1 44 1 222 1 147 1 122 1 49 1 286 2 173 1 
104 1 259 1 293 1 58 1 333 1 108 1 360 1 312 1 159 1 109 1 36 1 186 1 62 1 368 1 240 1 139 1 344 1 275 2 67 1 348 1 96 1 44 1 222 1 147 1 122 1 49 1 286 2 173 1 
127 2 259 1 309 1 334 1 333 1 108 2 360 1 316 1 182 2 161 1 213 1 64 1 240 1 275 4 244 1 99 2 222 1 147 1 250 1 286 2 173 2 51 2 
0 1 127 2 259 1 178 1 309 1 108 2 334 1 58 1 333 1 360 1 159 1 312 1 109 1 181 1 316 1 182 2 208 1 367 1 213 1 62 1 368 1 64 1 240 1 275 4 244 1 348 1 96 1 99 2 44 1 222 1 147 1 122 1 250 1 49 1 286 2 173 2 51 2 
127 1 259 1 309 1 108 1 333 1 334 1 360 1 109 1 316 1 182 1 337 1 161 1 213 1 166 1 240 1 116 1 275 3 244 1 99 1 222 1 147 1 122 1 250 1 172 1 286 2 330 1 173 2 51 1 32 1 
259 4 308 1 260 1 3 1 309 4 108 16 334 3 360 4 87 1 206 1 316 3 341 2 266 1 213 4 137 1 164 2 64 3 370 1 217 2 320 1 345 2 299 1 275 33 372 1 244 3 69 1 99 6 146 1 119 1 72 3 222 4 351 1 147 4 196 1 223 1 250 3 286 8 329 1 173 17 155 1 289 1 
81 1 259 3 260 1 309 2 108 12 334 3 360 3 87 1 206 2 316 3 341 2 266 1 213 3 137 1 164 2 64 2 320 2 217 2 345 2 275 26 372 1 244 2 99 4 146 1 72 4 119 1 222 3 147 3 250 2 286 6 329 1 173 14 155 1 289 1 
81 1 259 4 308 1 260 1 3 1 309 4 108 18 334 3 360 4 87 1 206 2 316 3 132 1 341 2 266 1 213 4 137 1 164 3 64 3 217 3 320 1 345 3 299 1 275 37 372 1 244 4 69 1 99 7 146 1 119 1 72 4 222 4 351 1 147 4 196 1 223 1 250 3 286 8 329 1 173 19 155 1 289 1 
81 1 259 4 308 1 260 1 3 1 309 4 108 17 334 3 360 4 87 1 206 1 316 3 341 2 266 1 213 4 137 1 164 2 64 2 217 2 320 1 345 2 299 1 275 35 372 1 244 3 69 1 99 5 146 1 119 1 72 4 222 4 351 1 147 4 196 1 223 1 250 3 286 8 329 1 173 18 155 1 289 1 
81 1 259 3 260 1 309 3 108 14 334 3 360 3 87 1 206 1 316 3 341 2 266 1 213 3 137 1 164 2 64 3 217 2 320 1 345 2 275 28 372 1 244 3 99 6 146 1 119 1 72 4 222 3 147 3 250 3 286 6 329 1 173 14 155 1 289 1 
292 1 160 1 319 1 75 1 328 1 219 1 366 1 107 1 37 1 169 1 
70 1 253 1 
138 1 292 1 350 1 160 1 24 1 319 1 219 1 366 1 169 1 
33 1 115 1 292 1 319 1 192 1 219 1 107 1 117 2 168 1 169 1 160 1 171 1 75 1 151 1 366 1 113 1 37 1 125 1 
33 1 115 1 292 1 319 1 192 1 219 1 107 1 117 2 168 1 169 1 160 1 171 1 75 1 151 1 366 1 113 1 37 1 125 1 
33 1 115 1 292 1 319 1 192 1 219 1 107 1 117 2 168 1 169 1 160 1 171 1 75 1 151 1 366 1 113 1 37 1 125 1 
65 1 365 1 35 1 
65 1 365 1 35 1 
354 1 43 1 
365 1 354 1 43 1 
201 1 374 1 
104 1 157 1 292 1 201 1 82 1 86 1 109 2 160 1 366 1 92 1 113 1 318 1 319 1 116 2 192 1 219 1 66 1 117 1 374 1 169 1 70 1 122 2 171 1 151 1 330 2 253 1 32 2 
65 1 35 1 
365 1 354 1 43 1 
259 1 58 2 333 1 108 1 360 1 362 1 312 1 159 2 109 2 7 2 263 1 338 1 161 1 62 1 267 1 240 1 13 1 139 1 116 2 344 1 275 2 348 2 96 1 222 1 147 1 122 2 49 1 251 1 286 2 30 1 173 1 
269 1 356 1 293 1 241 1 17 1 348 1 58 1 96 1 282 1 312 1 159 1 148 1 49 1 62 1 
105 1 77 1 175 1 256 1 331 1 54 1 348 1 58 1 96 1 282 1 89 1 159 1 363 1 314 2 148 1 49 1 198 1 20 1 
105 1 77 1 175 1 256 1 331 1 54 1 348 2 58 2 96 1 282 1 89 1 159 2 363 1 314 2 148 1 49 1 367 1 198 1 20 1 
105 1 77 1 175 1 256 1 331 1 54 1 348 1 58 1 96 1 282 1 159 1 363 1 314 2 49 1 353 1 198 1 20 1 
377 1 
33 1 343 1 305 1 371 1 202 1 375 1 336 1 131 1 174 1 93 1 
270 2 298 10 33 5 273 5 304 1 29 1 371 5 309 2 334 2 68 5 131 5 316 2 250 2 288 5 213 2 
33 1 296 1 336 1 301 1 192 1 113 1 
227 1 158 1 293 2 202 2 261 2 58 4 110 1 312 1 159 4 296 4 131 2 113 3 62 1 93 1 214 2 269 1 343 2 192 3 371 2 193 1 17 1 348 4 194 1 96 1 301 2 49 1 287 2 197 1 174 2 
375 1 33 1 131 1 336 1 305 1 371 1 163 1 
33 2 202 1 296 1 131 1 336 1 113 1 39 1 93 1 298 1 273 1 343 1 192 1 371 1 16 1 301 1 174 1 380 1 
33 8 293 1 129 1 294 2 334 2 296 5 336 2 131 9 185 1 339 2 93 4 298 12 343 4 192 5 348 3 96 4 301 3 250 2 49 3 355 2 158 1 305 1 304 2 306 2 309 2 202 4 261 1 58 3 313 2 312 3 159 3 316 2 211 2 367 1 113 5 62 10 213 2 368 3 214 1 369 2 270 2 272 1 273 6 29 2 371 8 221 2 68 6 375 1 73 2 74 3 287 2 288 6 76 1 174 4 
33 5 304 1 307 1 260 1 309 2 202 2 334 2 296 1 131 8 336 2 316 2 113 1 213 2 93 2 214 1 164 1 270 2 298 6 343 2 273 3 192 1 217 1 345 1 371 5 372 1 68 5 146 1 301 1 250 2 287 1 102 1 288 5 329 1 174 2 289 1 
304 1 308 1 23 1 3 1 309 1 56 1 359 1 202 1 109 1 131 2 25 1 26 1 162 1 113 1 213 2 93 1 270 2 166 1 343 1 116 1 192 1 371 2 122 1 223 1 124 1 330 1 174 1 32 1 
104 1 259 1 293 1 178 1 359 1 108 1 58 1 333 1 360 1 159 1 109 3 312 1 181 1 208 1 62 1 368 1 139 1 166 2 240 1 116 2 275 1 143 1 348 1 96 1 44 1 222 1 147 1 122 3 49 1 286 2 330 2 32 2 
214 1 298 4 33 4 273 2 343 1 371 2 202 1 68 2 69 1 131 1 336 2 287 1 288 2 174 1 93 1 
292 1 183 1 201 1 319 1 75 1 
335 1 292 1 319 1 
335 1 292 1 319 1 
335 1 292 1 319 1 
204 1 292 1 319 1 
204 1 292 1 319 1 
204 1 292 1 319 1 
292 1 319 1 
160 1 219 1 
64 3 259 1 308 2 275 10 3 1 309 2 244 2 108 5 360 1 99 5 119 1 222 1 147 1 25 1 223 2 286 2 173 5 213 2 
259 1 275 2 334 1 244 1 360 1 99 1 119 1 222 1 147 1 286 2 173 2 213 1 
64 1 259 1 309 1 275 4 108 2 334 1 244 1 360 1 99 2 119 1 222 1 147 1 316 1 250 1 286 2 173 2 213 1 
64 1 259 3 308 1 275 3 220 1 108 2 244 1 360 3 99 2 119 1 222 3 351 1 147 3 223 1 286 6 341 1 173 1 
126 1 259 4 308 2 309 2 3 1 108 8 360 4 111 1 25 1 341 1 213 2 164 1 64 3 217 1 345 1 299 1 275 15 220 1 244 3 99 6 119 1 222 4 351 1 147 4 196 1 223 2 286 8 173 7 
259 2 308 2 260 1 3 2 309 4 108 10 334 2 360 2 316 2 25 1 341 1 213 5 164 1 64 5 217 1 345 1 299 1 275 24 372 1 244 4 69 1 99 9 119 1 146 1 222 2 147 2 196 1 223 2 250 1 286 4 329 1 173 14 289 1 
259 3 308 1 260 1 3 1 309 2 108 7 334 2 360 3 316 2 111 1 341 1 213 3 164 1 64 3 217 1 345 1 299 1 275 17 372 1 244 1 69 1 99 4 146 1 119 1 222 3 147 3 196 1 223 1 250 1 286 6 329 1 173 10 289 1 
259 3 308 1 260 1 3 1 309 3 108 10 334 2 360 3 316 2 111 1 341 1 213 3 164 1 64 3 217 1 345 1 299 1 275 19 372 1 244 1 69 1 99 4 146 1 119 1 222 3 147 3 196 1 223 1 250 2 286 6 329 1 173 9 289 1 
259 3 308 1 260 1 3 1 309 2 108 7 334 2 360 3 316 2 111 1 341 1 213 3 164 1 64 3 217 1 345 1 299 1 275 17 372 1 244 2 69 1 99 5 119 1 146 1 222 3 147 3 196 1 223 1 250 1 286 6 329 1 173 10 289 1 
259 2 308 2 260 1 3 2 309 4 108 10 334 2 360 2 316 2 25 1 341 1 213 5 164 1 64 5 217 1 345 1 299 1 275 24 372 1 244 4 69 1 99 9 119 1 146 1 222 2 147 2 196 1 223 2 250 1 286 4 329 1 173 14 289 1 
259 1 260 1 309 2 108 6 334 2 360 1 316 2 213 2 164 1 64 1 217 1 345 1 275 12 372 1 244 1 99 2 119 1 146 1 222 1 147 1 250 2 286 2 329 1 173 6 289 1 
259 4 308 1 260 1 3 1 309 2 108 8 334 2 360 4 316 2 111 1 341 2 213 3 164 1 64 3 217 1 345 1 299 1 275 18 372 1 244 2 69 1 99 5 146 1 119 1 222 4 147 4 196 1 223 1 250 1 286 8 329 1 173 10 289 1 
259 4 260 1 309 2 108 7 334 3 360 4 316 3 341 2 213 3 164 1 64 3 217 1 345 1 275 16 372 1 244 3 99 6 146 1 119 1 222 4 147 4 351 1 250 2 286 8 329 1 173 9 289 1 
64 3 299 1 308 3 309 1 275 7 3 1 108 4 244 3 99 6 196 2 223 3 173 3 213 1 
259 4 308 1 260 1 3 1 309 2 108 8 334 2 360 4 316 2 341 2 213 3 164 1 64 3 217 1 345 1 299 1 275 18 372 1 244 1 69 1 99 4 146 1 119 1 222 4 147 4 351 1 196 1 223 1 250 1 286 8 329 1 173 10 289 1 
64 2 259 2 299 1 308 1 309 1 3 1 275 8 108 4 244 1 69 1 360 2 99 3 222 2 147 2 196 1 223 1 286 4 341 1 173 4 213 1 
99 2 64 2 196 1 223 1 308 1 299 1 309 1 275 6 3 1 173 3 163 1 213 1 108 3 69 1 
64 1 259 1 309 1 275 4 108 2 334 1 244 1 360 1 99 2 222 1 147 1 316 1 111 1 250 1 286 2 173 2 213 1 
164 1 217 1 345 1 275 2 173 1 108 1 
259 1 308 2 3 2 309 5 334 2 108 12 360 1 316 2 25 1 341 1 213 5 164 2 64 4 165 1 345 2 299 1 275 25 244 4 69 1 99 8 378 1 222 1 147 1 196 1 223 2 250 2 48 1 286 2 173 13 
164 1 275 1 108 1 
345 1 275 1 173 1 
64 2 259 1 29 1 275 6 309 1 108 3 334 1 244 1 360 1 99 3 222 1 147 1 316 1 111 1 250 1 286 2 173 3 213 1 
259 1 260 1 309 2 108 6 334 2 360 1 316 2 213 2 164 1 64 1 217 1 345 1 275 12 372 1 244 1 99 2 119 1 146 1 222 1 147 1 250 2 286 2 329 1 173 6 289 1 
64 1 308 1 3 1 275 6 309 1 108 3 244 1 99 2 223 1 173 3 213 1 
64 1 259 1 308 1 299 1 275 3 220 1 244 1 108 2 360 1 99 2 222 1 147 1 196 1 223 1 286 2 341 1 173 1 
104 1 109 1 122 1 116 1 9 1 209 1 118 1 
104 1 109 1 170 1 47 1 122 1 116 1 121 1 9 1 209 1 133 1 4 1 118 1 
188 1 269 1 293 1 2 1 17 1 348 4 58 4 96 1 159 4 312 1 49 1 367 1 62 1 
103 1 78 1 261 1 348 2 58 2 96 2 159 2 312 1 46 1 49 1 62 1 31 1 368 1 254 1 
77 1 159 1 314 1 331 1 49 1 293 1 198 1 58 1 348 1 96 1 
362 1 312 1 159 2 49 1 338 1 367 1 62 1 20 1 58 2 348 2 96 1 
269 1 293 1 2 1 17 1 261 1 348 4 58 5 144 1 96 2 159 5 312 2 338 1 49 2 367 1 212 1 62 3 
269 1 293 1 2 1 17 1 261 1 348 4 58 5 96 2 159 5 312 2 338 1 49 2 367 1 212 1 342 1 62 3 
269 1 312 1 159 1 49 1 293 1 17 1 163 1 62 1 58 1 348 1 96 1 
104 1 116 1 293 1 348 1 58 1 96 1 44 1 312 1 109 2 159 1 122 2 208 1 49 1 123 1 330 1 62 1 368 1 32 1 
104 1 355 1 116 2 306 1 23 1 279 1 261 1 348 1 58 1 96 1 44 1 312 2 109 2 159 1 122 2 208 1 49 1 61 1 123 1 330 1 62 3 368 2 32 2 
104 1 355 1 306 1 23 1 58 2 261 1 159 2 109 2 312 2 36 1 61 1 62 3 368 2 188 1 116 2 279 1 348 2 96 1 44 1 122 2 49 1 123 1 330 1 32 2 
355 1 33 1 357 1 293 1 306 1 58 3 261 1 296 1 159 3 312 1 336 1 211 1 113 2 62 4 368 1 369 1 188 1 192 2 277 1 348 3 96 1 49 1 74 1 
369 1 188 1 355 1 33 1 192 2 293 1 306 1 261 1 348 3 58 3 294 1 96 1 312 1 159 3 296 1 336 1 211 1 74 1 49 1 113 2 62 4 368 1 
159 1 303 1 49 1 58 1 348 1 96 1 
303 1 293 2 348 6 58 7 144 1 96 3 376 1 7 1 159 7 6 1 312 2 185 1 338 1 49 2 212 1 367 1 62 3 31 1 20 1 368 1 254 1 
104 2 0 1 127 1 259 2 308 1 178 1 309 1 3 1 108 3 333 2 58 1 360 2 312 1 109 2 159 1 181 1 182 1 208 1 161 1 367 1 213 1 62 1 368 1 64 2 240 2 116 1 299 1 275 6 348 1 69 1 96 1 99 2 44 1 222 2 147 2 196 1 122 2 223 1 49 1 251 1 286 4 123 1 173 3 330 1 51 1 32 1 199 1 
33 1 157 1 305 1 158 1 293 1 202 2 58 1 294 1 159 1 313 1 296 2 131 1 336 1 211 1 113 3 62 2 93 2 369 1 343 2 192 3 371 1 348 1 221 1 375 1 73 1 301 1 74 1 174 2 
369 1 312 1 159 2 303 1 272 1 185 1 49 1 367 1 62 2 368 1 58 2 348 2 96 2 
104 1 116 1 293 1 348 1 58 1 96 1 44 1 312 1 109 2 159 1 122 2 49 1 123 1 36 1 330 1 62 1 368 1 32 1 
261 1 348 1 58 1 96 2 159 1 6 1 312 1 185 1 49 1 62 1 31 1 368 1 254 1 
104 1 364 1 332 1 232 1 226 1 
104 1 33 1 157 1 332 2 192 2 23 1 279 1 18 1 232 2 321 1 88 1 336 1 364 1 149 1 224 1 211 1 61 1 113 2 226 2 
13 1 332 1 116 1 232 1 109 1 364 1 122 1 30 1 267 1 
321 1 88 1 364 1 
98 1 11 1 349 1 53 1 247 1 285 1 128 1 154 1 
11 4 257 1 14 1 128 2 142 1 233 1 295 2 98 1 195 1 349 4 247 1 285 3 135 1 154 2 
295 1 98 1 228 1 11 2 311 1 349 2 53 1 247 1 285 1 91 1 128 1 154 1 
11 3 53 1 128 1 142 2 233 1 98 1 203 1 195 2 349 3 247 1 285 1 154 1 
323 1 285 2 55 1 41 2 
98 1 268 1 11 1 349 1 53 1 247 1 
295 1 98 1 11 2 349 2 53 1 247 1 285 1 60 1 128 1 154 1 
176 1 
98 1 11 1 349 1 53 1 247 1 285 1 128 1 154 1 
285 1 128 1 163 1 154 1 
98 1 11 1 349 1 247 1 285 1 128 1 154 1 
349 1 218 1 106 1 
98 1 195 2 11 3 349 3 53 1 247 1 184 1 285 1 128 1 142 1 154 1 233 1 
295 1 98 1 11 2 349 2 283 1 247 1 285 1 128 1 154 1 
98 1 11 1 349 1 53 1 314 1 331 1 54 1 247 1 285 1 14 1 57 1 
98 1 11 1 349 1 53 1 247 1 285 1 128 1 
98 1 11 1 349 1 53 1 247 1 128 2 154 1 
11 2 53 1 258 1 128 1 98 2 97 1 349 2 247 2 285 1 302 1 
295 2 98 1 11 3 349 3 53 1 257 1 247 1 285 2 14 1 60 1 150 1 128 1 154 1 
11 2 53 1 80 1 54 1 331 1 128 1 98 1 295 1 349 2 314 2 363 1 247 1 285 1 154 1 198 1 
295 2 98 2 11 4 349 4 53 1 257 1 283 1 247 2 285 2 14 1 128 1 134 1 154 1 
11 3 53 1 128 1 295 1 98 1 195 1 349 3 247 1 285 1 60 1 154 1 
257 1 285 1 14 1 135 1 
285 1 128 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V | OPERATOR | 478 | || -> &&
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator; | ASSIGN | 5081 | = null
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
328 2 130 4 212 2 194 1 238 1 174 1 19 6 340 3 243 9 300 1 49 2 217 1 143 2 83 1 345 1 268 5 118 1 117 1 347 2 273 1 202 1 149 2 73 1 59 2 34 1 170 1 74 1 100 9 
328 2 130 4 212 2 194 1 238 1 174 1 19 6 340 3 243 9 300 1 49 2 217 1 143 2 83 1 345 1 268 5 118 1 117 1 347 2 273 1 202 1 149 2 73 1 59 2 34 1 170 1 74 1 100 9 
328 2 130 5 212 2 194 1 238 1 174 1 19 7 340 4 243 10 300 1 49 2 217 1 143 2 83 1 345 1 268 6 118 1 117 1 347 2 273 1 202 1 149 2 73 1 59 2 34 1 170 1 74 1 100 10 
328 2 130 3 212 2 238 1 174 1 19 4 340 2 243 7 300 1 49 2 217 1 143 2 83 1 345 1 268 4 118 1 117 1 347 2 273 1 202 1 149 2 73 1 59 1 34 1 170 1 74 1 100 7 
328 1 130 2 212 1 202 1 194 1 59 2 19 3 170 1 340 1 243 4 49 1 100 4 83 1 143 1 345 1 268 3 347 1 118 1 
328 1 202 1 149 1 22 1 74 1 243 2 12 1 49 1 100 2 83 1 143 1 345 1 268 1 256 1 347 1 273 1 
130 1 202 1 149 1 19 1 340 1 243 3 300 1 49 2 100 3 83 1 143 2 345 1 268 2 
130 4 328 1 193 1 212 1 194 1 238 1 19 7 340 3 243 9 300 1 49 2 217 1 143 2 83 1 345 1 268 5 118 1 347 1 200 1 202 1 149 1 59 2 170 1 100 9 
130 4 328 1 193 1 212 1 194 1 238 1 19 7 340 3 243 9 300 1 49 2 217 1 143 2 83 1 345 1 268 5 118 1 347 1 200 1 202 1 149 1 59 2 170 1 100 9 
23 1 124 1 108 1 
351 1 108 1 262 2 
329 2 62 2 56 1 231 2 363 2 166 1 127 2 3 2 
39 1 210 1 329 2 15 1 236 1 62 3 79 1 332 1 157 1 361 1 80 1 131 1 363 2 106 1 3 2 161 2 107 1 293 1 112 1 176 1 6 1 344 1 24 1 27 1 166 1 270 2 88 2 56 1 184 1 127 2 249 1 284 2 230 1 231 3 253 1 192 1 381 2 
329 1 151 1 62 1 244 1 56 1 231 1 363 1 78 1 127 1 3 1 
274 1 62 1 331 1 91 1 92 1 169 1 186 1 124 1 127 1 108 1 151 1 231 1 86 1 235 1 
329 1 274 1 62 1 91 2 331 1 186 2 124 1 363 1 3 1 127 1 108 1 151 1 231 1 86 1 235 1 
5 1 113 1 91 1 186 1 14 1 
5 1 91 2 186 2 124 1 376 1 47 1 14 1 108 1 
5 1 91 1 186 1 
329 1 62 1 91 1 186 1 56 1 363 1 3 1 127 1 151 1 298 1 244 1 231 1 14 1 78 1 
108 1 
5 1 91 2 186 2 124 1 47 1 101 1 14 1 108 1 
199 1 40 2 122 1 91 5 186 5 124 1 47 1 279 1 108 1 137 2 5 2 140 1 81 2 216 1 321 1 85 1 232 1 14 2 50 1 
23 1 166 1 
329 1 62 2 44 1 363 1 127 2 3 1 231 2 166 2 372 1 
304 1 206 1 306 1 
39 1 210 1 88 1 236 1 62 1 184 1 107 1 161 1 293 1 356 1 284 1 112 1 230 1 231 1 192 1 166 1 
39 1 210 1 329 1 236 1 88 1 62 2 184 1 132 1 363 1 127 1 336 1 107 1 161 1 293 1 112 1 284 1 230 1 206 1 231 2 192 1 
329 4 350 1 62 5 92 1 226 1 132 1 363 4 127 5 3 1 336 2 322 1 231 5 166 1 372 1 
329 2 151 1 62 2 244 1 362 1 231 2 363 2 127 2 
329 3 62 3 231 3 363 3 3 1 166 1 127 3 336 1 
329 1 151 1 62 1 244 1 231 1 363 1 127 1 
329 1 151 1 62 1 44 1 231 1 363 1 127 1 3 1 372 1 
39 1 210 1 329 3 236 1 62 4 331 1 79 1 332 1 361 1 80 1 132 1 363 3 3 2 336 1 107 1 161 1 293 1 112 1 176 1 6 1 344 1 24 1 165 1 86 1 166 1 372 1 270 1 274 1 88 1 91 1 184 1 186 1 56 1 314 1 127 3 249 1 151 1 284 1 230 1 231 4 253 1 192 1 235 1 381 2 
329 1 62 2 92 1 226 1 231 2 363 1 166 1 127 2 336 1 
329 3 274 1 62 3 91 1 331 1 186 1 132 1 16 1 314 1 363 3 3 1 127 3 108 1 336 2 151 1 231 3 86 1 235 1 372 1 
329 2 62 2 363 2 3 1 127 2 336 1 304 1 206 1 231 2 372 1 
210 1 39 1 88 1 236 1 62 1 184 1 107 1 161 1 293 1 284 1 112 1 230 1 231 1 192 1 166 1 
210 1 39 1 88 1 62 1 184 1 107 1 161 1 284 1 112 1 230 1 231 1 192 1 166 1 257 1 61 1 
1 1 79 1 332 1 361 1 214 1 43 1 106 2 365 1 176 1 6 2 24 1 304 2 218 1 28 1 306 2 270 4 222 1 10 1 280 1 249 1 13 1 153 1 206 2 381 2 
329 1 151 1 62 1 86 1 231 1 362 1 363 1 127 1 
126 1 255 1 
126 1 255 1 
203 1 182 1 
203 1 182 1 
203 1 182 1 
220 1 126 1 255 1 
220 1 126 1 255 1 
111 1 126 1 255 1 
242 1 375 1 203 1 126 2 255 2 182 1 
220 1 126 1 255 1 
148 1 126 1 255 1 
148 1 126 1 255 1 
148 1 126 1 255 1 
329 2 62 2 363 2 337 1 111 1 296 1 8 1 25 1 9 1 166 1 89 1 91 1 247 1 146 1 277 1 94 1 186 1 353 1 311 1 126 1 127 2 171 1 231 2 255 1 
211 1 89 2 90 1 223 1 91 2 94 2 186 2 158 1 311 2 126 2 108 1 11 1 242 1 98 1 296 2 285 2 8 1 25 3 255 2 
328 1 212 1 347 1 
328 1 12 1 347 1 
328 3 212 2 12 1 17 1 288 1 135 1 
328 2 212 1 41 1 12 1 17 1 288 1 
328 2 212 1 12 1 17 1 288 2 
40 1 1 1 290 2 214 1 47 1 261 2 108 2 337 1 262 3 137 1 264 1 5 1 81 1 367 1 85 1 348 1 183 1 51 1 351 1 122 2 91 5 247 1 146 1 32 1 186 5 124 1 279 3 280 1 153 1 234 1 14 4 37 2 
40 2 1 3 290 6 104 1 214 3 47 1 108 5 262 9 137 2 264 3 5 6 113 5 140 1 81 2 367 2 368 1 85 1 29 1 183 1 51 2 351 3 122 6 247 4 91 9 33 1 186 9 124 1 279 8 95 1 280 3 128 1 153 3 14 7 37 6 102 5 
40 1 1 1 290 2 214 1 108 3 261 1 262 4 137 1 264 1 81 1 140 1 367 1 348 1 51 1 351 2 91 3 247 1 122 2 186 3 124 1 279 3 280 1 153 1 234 1 14 2 37 2 
40 1 1 2 290 4 104 1 214 2 108 4 261 2 262 7 137 1 264 2 81 1 140 1 367 1 368 1 348 1 51 1 351 3 91 4 247 2 122 4 186 4 124 1 279 5 95 1 280 2 153 2 234 1 14 3 37 4 
39 1 23 1 134 1 
39 1 267 1 
159 1 
39 1 210 1 192 1 
39 1 237 1 
39 1 210 1 
39 3 210 1 192 1 134 2 167 1 110 1 
103 1 10 2 71 1 63 2 65 1 106 4 280 1 187 1 355 1 97 1 263 1 6 3 153 1 245 1 28 3 346 1 270 7 
103 1 10 2 71 1 63 2 65 1 106 4 280 1 187 1 355 1 97 1 263 1 6 3 153 1 245 1 28 3 346 1 270 7 
103 1 10 2 71 1 63 2 65 1 106 4 280 1 187 1 355 1 97 1 263 1 6 3 153 1 164 1 245 1 28 3 346 1 270 7 
103 2 1 3 79 1 361 1 63 3 65 2 42 1 214 3 160 4 133 1 106 16 264 3 263 5 6 15 24 1 84 1 245 2 69 1 28 10 346 2 271 1 270 31 10 5 71 1 187 1 280 4 249 1 355 1 97 1 283 1 36 3 152 1 153 4 381 2 
103 1 79 2 361 2 63 2 65 1 20 1 106 5 263 1 6 4 24 2 245 1 370 1 28 4 346 1 270 9 10 3 280 1 187 1 249 2 355 1 97 1 152 1 153 1 381 4 
289 1 328 2 212 1 19 1 161 1 135 1 243 2 49 1 143 1 83 1 345 1 268 1 179 1 115 1 347 1 120 1 88 1 202 1 184 1 149 1 284 1 230 1 358 1 12 1 100 2 287 1 191 1 325 1 252 1 380 1 
289 1 328 2 212 1 19 2 135 1 161 1 243 3 177 1 49 1 143 1 345 1 268 1 115 1 347 1 272 1 120 1 88 1 202 1 184 1 149 1 229 1 284 1 230 1 358 1 12 1 100 3 191 1 325 1 252 1 380 1 
289 1 328 2 212 1 19 2 161 1 135 1 243 2 177 1 345 1 268 1 347 1 272 1 120 1 88 1 202 1 184 1 149 1 284 1 230 1 358 1 12 1 100 2 191 1 325 1 252 1 
289 2 210 1 39 1 105 1 161 1 107 1 243 1 49 1 143 1 180 1 144 1 31 1 201 1 88 1 184 1 149 2 229 1 284 1 230 1 100 1 252 2 325 2 209 1 
289 1 328 2 212 1 161 1 135 1 243 1 177 1 49 1 143 1 83 1 179 1 115 1 347 1 120 1 88 1 184 1 149 1 284 1 230 1 358 1 12 1 100 1 191 1 325 1 252 1 380 1 
364 1 
210 1 39 1 40 1 331 1 258 1 333 1 47 3 48 1 262 2 137 1 5 6 81 1 178 1 85 1 86 1 181 2 88 2 274 1 53 2 351 2 91 5 92 1 93 2 228 2 227 2 57 1 186 5 184 1 279 2 151 1 284 2 230 1 231 1 235 1 62 1 108 2 107 2 161 2 162 1 295 1 367 1 297 2 163 1 198 1 201 1 122 2 169 1 124 1 313 2 127 1 320 1 75 4 209 1 254 1 38 1 
274 1 62 1 331 1 91 3 92 1 169 1 186 3 333 1 313 1 47 1 127 1 5 2 162 1 151 1 178 1 163 1 198 1 75 2 101 1 86 1 231 1 235 1 
62 1 331 1 333 1 47 1 108 1 5 1 162 1 178 1 163 1 198 1 86 1 274 1 91 3 92 1 169 1 186 3 228 1 124 1 127 1 151 1 75 3 231 1 101 1 235 1 
62 1 331 1 333 1 47 1 108 1 162 1 5 2 178 1 163 1 198 1 86 1 274 1 91 3 92 1 169 1 186 3 227 1 228 1 313 1 124 1 127 1 151 1 75 3 101 1 231 1 235 1 
40 1 331 1 213 1 333 1 47 3 48 1 137 1 5 7 81 1 178 1 85 1 86 1 181 2 274 1 351 2 53 2 91 5 92 1 93 2 227 4 186 5 228 4 57 1 278 1 279 1 151 1 231 1 101 1 235 1 62 1 108 5 294 1 162 1 297 2 163 1 301 1 198 1 122 1 169 1 313 4 124 5 127 1 315 1 75 6 
40 1 62 1 331 1 333 1 47 2 48 1 108 2 262 2 137 1 5 4 162 1 295 1 81 1 297 2 178 1 163 1 198 1 85 1 86 1 181 2 274 1 53 2 351 2 122 1 91 4 92 1 93 2 169 1 228 2 227 2 57 1 186 4 124 1 313 2 279 1 127 1 151 1 75 4 231 1 235 1 
62 1 40 1 213 1 331 1 333 1 47 2 48 1 108 1 137 1 294 1 5 4 162 1 81 1 297 2 178 1 163 1 198 1 85 1 86 1 181 2 274 1 53 2 351 2 122 1 91 4 92 1 93 2 169 1 228 2 227 2 57 1 186 4 124 1 313 2 279 1 127 1 315 1 151 1 75 4 231 1 235 1 
62 1 40 1 213 1 331 1 333 1 47 2 48 1 108 1 137 1 294 1 5 4 162 1 81 1 297 2 178 1 163 1 198 1 85 1 86 1 181 2 274 1 53 2 351 2 122 1 91 4 92 1 93 2 169 1 228 2 227 2 57 1 186 4 124 1 313 2 279 1 127 1 315 1 151 1 75 4 231 1 235 1 
62 1 40 1 213 1 331 1 333 1 47 2 46 2 108 1 262 2 137 1 5 4 162 1 138 1 81 1 297 2 178 1 163 1 198 1 85 1 269 2 86 1 274 1 374 1 122 1 91 4 92 1 93 2 169 1 228 2 227 2 57 1 186 4 124 1 313 2 279 1 127 1 151 1 75 4 231 1 208 1 235 1 
40 1 62 1 213 1 331 1 333 1 47 2 48 1 108 1 137 1 294 1 162 1 5 5 81 1 297 2 178 1 163 1 301 1 198 1 85 1 86 1 181 2 274 1 53 2 351 2 122 1 91 4 92 1 93 2 169 1 57 1 186 4 227 3 228 3 124 1 313 3 279 1 127 1 315 1 151 1 75 5 231 1 235 1 
40 1 62 1 213 1 331 1 333 1 47 2 48 1 108 1 137 1 294 1 162 1 5 5 81 1 297 2 178 1 163 1 301 1 198 1 85 1 86 1 181 2 274 1 53 2 351 2 122 1 91 4 92 1 93 2 169 1 57 1 186 4 227 3 228 3 124 1 313 3 279 1 127 1 315 1 151 1 75 5 231 1 235 1 
40 1 62 1 331 1 333 1 47 2 46 2 108 1 262 2 137 1 5 4 162 1 295 1 138 1 81 1 297 2 178 1 163 1 198 1 85 1 269 2 86 1 274 1 122 1 91 4 92 1 93 2 169 1 228 2 227 2 57 1 186 4 124 1 313 2 279 1 127 1 151 1 75 4 231 1 235 1 
79 1 332 1 361 1 63 1 65 1 106 3 365 1 23 1 176 1 6 3 24 1 304 1 245 1 28 2 306 1 166 2 270 6 10 2 187 1 280 1 249 1 355 1 97 1 206 1 153 1 381 2 
1 2 79 2 332 1 361 2 291 1 42 1 214 1 160 3 106 8 66 1 263 1 264 2 176 2 6 6 344 1 24 2 304 4 27 1 69 1 28 2 306 11 166 1 270 14 10 1 58 1 280 2 249 2 317 1 36 3 206 11 153 1 76 1 381 4 
39 1 210 1 329 1 236 1 62 2 332 1 79 1 361 1 132 1 363 1 106 1 161 1 107 1 336 1 293 1 112 1 176 1 6 1 344 1 24 1 304 1 27 1 166 1 270 2 88 1 168 1 184 1 58 1 127 1 249 1 356 1 318 1 284 1 129 1 230 1 231 2 192 1 381 2 
329 1 210 2 39 2 1 2 79 3 332 3 214 2 132 1 335 1 336 1 264 2 263 4 176 3 177 1 6 10 7 2 344 1 270 20 88 3 10 4 224 1 184 2 58 1 187 1 280 3 189 2 355 1 97 1 284 3 230 2 153 3 231 3 192 2 236 2 62 3 63 1 361 3 65 1 239 1 363 1 106 10 161 3 107 1 293 2 112 2 24 3 304 7 245 1 27 1 26 2 28 8 306 7 166 2 123 2 127 1 249 3 206 7 253 2 381 6 
329 1 39 3 210 2 62 1 79 2 332 2 157 2 361 2 363 1 106 1 336 1 161 7 107 2 365 1 366 1 338 1 176 2 177 1 299 1 6 1 344 1 142 1 24 2 305 1 27 1 270 2 201 1 88 8 184 2 96 1 127 1 60 1 249 2 284 8 230 2 287 1 231 1 209 1 381 4 
329 1 62 1 1 1 79 1 332 1 361 1 214 1 363 1 3 1 106 1 109 1 264 1 176 1 6 2 24 1 304 1 28 1 306 1 372 1 270 3 10 1 58 1 127 1 280 1 249 1 206 1 153 1 231 1 381 2 
1 1 332 1 79 1 361 1 106 2 280 1 365 1 249 1 263 1 176 1 24 1 304 1 206 1 218 1 28 1 306 1 381 2 270 2 
222 1 10 1 332 1 79 1 361 1 214 1 365 1 249 1 176 1 6 2 24 1 304 1 206 1 153 1 28 1 306 1 381 2 270 2 
1 1 79 1 332 1 361 1 214 1 106 2 365 1 264 1 263 1 176 1 6 2 24 1 304 2 28 2 306 2 270 4 10 1 280 1 249 1 206 2 153 1 381 2 
1 1 332 1 79 1 361 1 106 2 280 1 249 1 263 1 176 1 299 1 24 1 304 1 206 1 218 1 28 1 306 1 381 2 270 2 
222 1 10 1 332 1 79 1 361 1 214 1 249 1 176 1 299 1 6 2 24 1 304 1 206 1 153 1 28 1 306 1 381 2 270 2 
1 1 79 1 332 1 361 1 214 1 106 2 264 1 263 1 176 1 299 1 6 2 24 1 304 2 28 2 306 2 270 4 10 1 280 1 249 1 206 2 153 1 381 2 
1 1 79 1 332 1 361 1 214 1 106 2 264 1 263 1 176 1 6 2 24 1 304 2 28 2 306 2 270 4 10 1 280 1 249 1 206 2 153 1 381 2 
210 1 39 1 236 1 62 1 332 1 79 1 361 1 106 1 161 1 107 1 293 1 112 1 176 1 6 1 344 1 24 1 27 1 166 1 270 2 88 1 184 1 249 1 284 1 230 1 231 1 253 1 192 1 381 2 
210 1 39 1 62 1 332 1 79 1 361 1 106 1 161 1 107 1 112 1 176 1 6 1 344 1 24 1 27 1 166 1 371 1 270 2 88 1 184 1 249 1 284 1 230 1 231 1 192 1 257 1 61 1 381 2 
1 1 79 1 332 1 361 1 214 1 106 2 264 1 263 1 176 1 6 2 24 1 304 2 28 2 306 2 270 4 10 1 58 1 280 1 249 1 206 2 153 1 381 2 
210 1 39 1 236 1 62 1 1 1 332 1 79 1 361 1 214 1 106 2 161 1 293 1 263 1 264 1 112 1 176 1 6 2 24 1 304 2 28 2 306 2 270 4 88 1 10 1 184 1 280 1 189 1 249 1 284 1 230 1 153 1 206 2 287 1 231 1 253 1 192 1 381 2 
329 1 62 1 1 1 79 1 332 1 361 1 214 1 175 1 363 1 3 1 106 2 263 1 264 1 176 1 6 1 24 1 304 1 28 1 306 1 372 1 270 3 58 1 127 1 280 1 249 1 153 1 206 1 231 1 381 2 
1 3 79 2 361 2 173 1 42 1 214 3 160 2 20 1 106 9 264 3 263 3 6 10 114 2 24 2 69 1 28 6 70 1 270 19 10 3 225 1 204 1 280 3 249 2 190 1 35 2 36 1 286 1 323 1 153 3 381 4 
1 3 79 3 361 3 214 2 160 2 20 1 106 14 263 2 264 3 6 12 114 4 24 3 28 4 69 2 70 2 270 26 10 2 275 1 225 1 248 1 280 3 316 1 249 3 190 2 35 1 357 1 152 2 36 2 286 1 153 2 323 1 233 1 381 6 155 1 
1 4 79 3 214 4 42 1 173 1 263 4 264 4 139 1 6 21 270 41 10 4 275 1 225 1 280 5 187 1 190 2 355 1 97 1 357 1 152 1 286 1 153 5 233 1 155 1 361 3 63 1 65 1 160 4 106 20 20 1 24 3 114 4 245 1 28 8 69 3 70 1 248 1 249 3 316 1 35 1 36 3 323 1 381 6 
1 4 79 4 63 1 361 4 173 1 65 1 42 1 214 3 160 4 20 1 106 20 264 4 263 3 139 1 6 18 114 4 24 4 245 1 69 3 28 7 70 1 270 38 275 1 10 4 225 1 248 1 187 1 280 5 316 1 249 4 355 1 190 2 97 1 35 1 357 1 152 2 36 3 286 1 323 1 153 4 233 1 381 8 155 1 
1 7 79 2 63 1 361 2 65 1 42 2 214 7 160 4 20 1 106 27 66 2 264 7 263 7 6 25 114 4 24 2 245 1 69 2 28 14 70 1 270 52 275 1 10 7 225 1 248 1 187 1 280 8 316 1 249 2 355 1 190 1 97 1 35 1 357 1 152 1 36 4 286 1 323 1 153 8 233 1 381 4 155 1 
242 1 296 1 89 1 223 1 197 1 94 1 311 1 126 1 255 1 11 1 
111 1 9 1 
296 1 89 1 341 1 94 1 311 1 126 1 116 1 255 1 21 1 
220 1 119 1 
375 1 378 1 148 1 
211 1 89 1 90 1 223 1 91 1 186 1 94 1 158 1 311 1 126 1 108 1 11 1 242 1 296 1 285 1 8 1 25 2 255 1 
211 1 89 1 90 1 223 1 91 1 186 1 94 1 158 1 311 1 126 1 108 1 11 1 242 1 296 1 285 1 8 1 25 2 255 1 
211 1 89 1 90 1 223 1 91 1 186 1 94 1 158 1 311 1 126 1 108 1 11 1 242 1 296 1 285 1 8 1 25 2 255 1 
220 1 119 1 375 1 
220 1 119 1 375 1 
378 1 148 1 
375 1 378 1 148 1 
277 1 171 1 
329 2 62 2 363 2 337 1 111 1 296 1 25 1 9 1 166 1 90 1 89 1 91 1 247 1 146 1 277 1 186 1 94 1 353 1 311 1 126 1 127 2 285 1 171 1 231 2 14 1 154 1 255 1 
39 1 210 1 62 2 332 1 79 1 157 2 64 1 361 1 106 1 215 1 161 2 338 1 176 1 6 1 344 1 24 1 305 1 27 1 145 1 270 2 88 2 54 1 184 1 58 1 125 1 127 2 249 1 284 2 230 1 231 2 381 2 
328 2 120 1 88 2 212 1 0 1 184 1 135 1 161 2 284 2 230 1 12 1 177 1 207 1 369 1 287 1 191 1 325 1 115 1 347 1 
328 2 120 1 88 1 212 1 184 1 18 1 135 1 161 1 284 1 230 1 12 1 177 1 369 1 191 1 325 1 115 1 347 1 
39 1 210 1 201 1 88 1 0 1 184 1 107 1 161 1 284 1 230 1 144 1 325 1 209 1 307 1 
328 2 120 1 88 1 212 1 0 1 184 1 135 1 161 1 284 1 230 1 12 1 177 1 207 1 369 1 191 1 325 1 115 1 347 1 
141 1 
23 1 122 1 321 1 124 1 232 1 279 1 108 1 
53 1 40 1 351 1 91 1 122 1 186 1 124 1 47 1 279 1 48 1 108 2 262 1 137 1 5 1 81 1 85 1 181 1 
210 1 39 6 40 3 1 2 331 2 290 6 214 2 2 2 47 3 134 2 108 6 161 1 107 1 262 12 137 3 136 2 264 2 5 5 339 2 81 3 367 1 267 3 85 3 26 2 167 1 349 1 88 1 351 6 122 7 91 5 147 2 352 2 309 1 186 5 184 1 279 7 280 2 150 2 284 1 230 2 251 1 320 1 153 2 192 1 37 6 
40 2 1 2 290 5 214 2 47 1 160 1 241 1 108 5 262 6 137 2 5 1 264 2 367 1 266 1 81 2 85 2 30 1 69 1 351 3 275 1 91 1 122 5 352 2 186 1 124 2 279 8 280 2 316 1 357 1 320 1 36 1 153 2 233 1 37 5 155 1 
329 1 62 1 40 1 65 1 363 1 3 1 137 1 294 1 266 1 81 1 298 1 244 1 85 1 245 1 91 1 122 2 352 2 186 1 56 1 279 2 127 1 280 2 281 1 151 1 97 1 153 1 231 1 78 1 
40 1 122 1 124 1 279 1 108 1 137 1 81 1 321 1 85 1 232 1 
351 5 1 2 122 5 352 2 290 5 214 2 279 5 280 2 108 5 262 10 264 2 266 1 153 2 26 1 37 5 
5 1 91 1 186 1 124 1 47 1 108 1 
39 1 210 1 40 2 258 1 47 2 161 4 107 2 137 2 5 4 140 1 81 2 367 2 302 1 85 1 201 1 88 4 122 2 91 3 185 1 184 1 186 3 312 2 279 2 282 1 284 4 230 1 320 2 209 1 38 1 
329 2 210 1 39 1 236 1 62 3 79 1 332 1 361 1 80 1 363 2 3 2 161 1 107 1 293 1 112 1 176 1 6 1 344 1 24 1 166 1 270 1 88 1 56 1 184 1 127 2 249 1 284 1 230 1 231 3 253 1 192 1 381 2 
351 2 40 1 122 2 63 1 290 2 124 2 279 1 108 4 262 4 137 1 81 1 367 1 320 1 85 1 37 2 
296 1 82 1 94 1 
296 1 82 1 94 1 
221 1 296 1 171 1 94 1 11 1 
296 1 82 1 94 1 
296 1 94 1 310 1 
296 1 94 1 310 1 
296 1 94 1 310 1 
296 1 94 1 
126 1 255 1 
10 2 79 2 63 1 361 2 65 1 106 4 280 1 187 1 249 2 355 1 97 1 263 1 6 4 152 1 24 2 153 1 245 1 28 3 381 4 270 8 
355 1 97 1 23 1 10 2 6 3 63 1 65 1 153 1 245 1 28 2 106 3 280 1 187 1 270 6 
10 1 1 1 79 1 361 1 214 1 106 2 280 1 249 1 264 1 263 1 6 2 24 1 153 1 28 2 77 1 381 2 270 4 
10 1 1 1 214 1 42 1 160 2 106 3 280 1 264 1 263 1 6 4 36 1 153 1 69 1 28 2 270 7 
1 2 79 2 63 1 361 2 65 2 42 1 214 2 160 2 106 11 66 1 263 4 264 2 6 12 24 2 245 2 28 9 270 23 10 5 187 1 280 3 249 2 355 1 97 1 379 1 36 2 152 2 153 3 76 1 381 4 
6 1 160 1 270 1 
36 1 106 1 270 1 
10 2 1 1 79 1 361 1 214 1 106 3 280 1 249 1 264 1 263 1 6 3 24 1 153 1 26 1 28 3 77 1 381 2 270 6 
1 2 79 1 361 1 214 2 160 1 20 1 106 6 263 1 264 2 6 6 24 1 69 1 28 2 270 12 275 1 10 1 280 2 249 1 316 1 357 1 36 1 153 2 233 1 381 2 155 1 
10 1 65 1 106 3 280 1 97 1 263 1 6 3 153 1 245 1 28 2 270 6 
10 1 79 1 361 1 65 1 106 1 187 1 249 1 355 1 263 1 379 1 6 2 152 1 24 1 245 1 28 2 381 2 270 3 
10 3 79 1 361 1 65 2 20 1 106 5 280 2 249 1 281 1 263 2 97 1 6 5 24 1 153 2 245 2 28 5 381 2 270 10 
1 1 79 1 361 1 20 1 106 2 280 1 249 1 263 1 24 1 28 1 381 2 270 2 
10 1 1 1 79 1 361 1 214 1 20 1 106 2 280 1 249 1 264 1 263 1 6 2 24 1 153 1 28 2 381 2 270 4 
10 1 79 3 361 3 173 1 65 1 20 1 106 1 249 3 263 1 379 1 6 2 152 1 24 3 245 1 28 2 381 6 270 3 
1 3 79 5 63 1 361 5 65 3 173 1 42 1 214 3 160 4 133 1 20 1 106 16 264 3 263 5 6 18 24 5 84 1 245 3 69 1 28 12 270 34 10 7 187 1 280 5 249 5 355 1 97 2 283 1 379 1 152 2 36 3 153 5 77 1 381 10 
79 1 63 1 361 1 65 1 160 1 20 1 106 4 6 4 24 1 245 1 69 1 28 2 270 8 10 2 280 1 187 1 249 1 355 1 97 1 36 1 153 1 381 2 155 1 
1 1 79 2 63 1 361 2 65 1 42 1 160 2 20 1 106 6 264 1 263 1 6 5 24 2 245 1 69 1 28 3 270 11 10 2 187 1 280 2 249 2 355 1 97 1 36 1 153 1 77 1 381 4 155 1 
1 2 79 3 63 1 361 3 65 1 214 2 160 1 20 1 106 9 263 1 264 2 6 10 24 3 245 1 69 1 28 4 270 19 275 1 10 3 187 1 280 3 249 3 316 1 355 1 97 1 357 1 36 1 152 1 153 3 233 1 77 1 381 6 155 1 
1 2 79 3 63 1 361 3 65 1 214 1 160 1 20 1 106 10 263 2 264 2 6 7 24 3 245 1 69 1 28 5 270 17 275 1 10 3 187 1 280 3 249 3 316 1 355 1 97 1 357 1 152 1 36 1 153 2 233 1 77 1 381 6 155 1 
79 1 63 1 361 1 65 1 160 1 20 1 106 4 6 4 24 1 245 1 69 1 28 2 270 8 10 2 280 1 187 1 249 1 355 1 97 1 36 1 153 1 381 2 155 1 
1 2 79 1 361 1 214 2 160 1 20 1 106 6 263 1 264 2 6 6 24 1 69 1 28 2 270 12 275 1 10 1 280 2 249 1 316 1 357 1 36 1 153 2 233 1 381 2 155 1 
1 2 79 4 63 1 361 4 65 1 214 1 160 1 20 1 106 10 263 2 264 2 6 8 24 4 245 1 69 1 28 5 270 18 275 1 10 3 187 1 280 3 316 1 249 4 355 1 97 1 357 1 36 1 152 2 153 2 233 1 77 1 381 8 155 1 
1 3 79 4 361 4 173 1 214 2 160 1 20 1 106 9 263 3 264 3 6 7 24 4 69 1 28 6 270 16 275 1 10 3 280 3 316 1 249 4 357 1 36 1 152 2 153 2 233 1 381 8 155 1 
10 3 65 3 106 3 187 1 280 1 355 2 263 3 97 1 6 4 153 1 245 3 28 6 270 7 
1 2 79 4 63 1 361 4 65 1 173 1 214 1 160 1 20 1 106 10 263 1 264 2 6 8 24 4 245 1 69 1 28 4 270 18 275 1 10 3 187 1 280 3 316 1 249 4 355 1 97 1 357 1 36 1 152 2 153 2 233 1 381 8 155 1 
62 1 92 1 226 1 231 1 292 1 166 1 127 1 
62 1 92 1 226 1 292 1 127 1 4 1 250 1 265 1 324 1 231 1 166 1 327 1 
39 1 210 1 201 1 23 1 88 1 284 1 230 1 184 1 209 1 161 1 107 1 
39 1 210 1 329 1 88 1 236 1 62 2 184 1 363 1 127 1 336 1 107 1 161 1 112 1 284 1 230 1 231 2 192 1 166 1 
329 2 210 2 39 3 236 1 62 2 237 1 45 1 363 1 161 1 336 1 112 1 86 1 166 1 88 1 184 1 312 1 127 2 151 1 284 1 230 1 231 2 192 2 235 1 
329 2 210 2 39 3 62 2 237 1 45 1 363 1 161 2 336 1 112 1 67 1 86 1 166 1 88 2 184 1 312 1 127 2 151 1 284 2 230 1 231 2 192 2 235 1 61 1 
39 4 210 1 237 1 331 1 45 1 134 1 161 3 108 1 107 1 5 1 67 1 267 1 342 1 88 3 91 2 184 1 186 2 312 1 124 1 188 1 284 3 230 1 192 1 
210 1 39 4 88 3 237 1 331 1 91 2 186 2 184 1 124 1 45 1 312 1 134 1 107 1 108 1 161 3 339 1 5 1 284 3 230 1 67 1 267 1 192 1 
88 1 284 1 230 1 142 1 184 1 161 1 
210 2 39 3 330 1 88 7 156 1 157 1 184 2 377 1 96 1 107 2 161 6 60 1 366 1 284 7 230 3 177 1 142 1 305 1 287 1 192 1 167 1 
39 1 210 1 329 1 236 1 62 2 332 2 79 2 63 1 361 2 65 1 363 1 106 3 336 1 161 1 293 1 112 1 176 2 6 3 7 1 24 2 304 1 245 1 28 2 306 1 166 2 270 6 88 1 10 2 184 1 58 1 125 1 127 1 280 1 187 1 249 2 189 1 355 1 97 1 284 1 230 1 206 1 153 1 287 1 231 2 253 1 192 1 381 4 
39 2 40 2 331 1 47 1 134 1 108 1 161 1 107 1 137 2 136 1 339 1 5 2 81 2 267 1 302 1 85 2 88 1 122 1 91 3 147 1 186 3 124 1 279 1 150 1 284 1 321 1 232 1 14 1 
39 2 210 1 88 2 284 2 230 2 309 1 142 1 184 1 287 1 192 1 134 1 167 1 161 2 
210 1 39 1 201 1 88 4 276 1 184 1 107 1 161 4 284 4 230 1 67 1 287 1 209 1 
210 1 39 1 88 2 156 1 224 1 55 1 184 1 312 1 377 1 161 2 284 2 230 2 192 1 326 1 
328 1 120 1 88 1 284 1 230 1 12 1 184 1 347 1 161 1 107 1 
210 1 39 1 88 2 54 1 184 1 161 2 284 2 230 1 177 1 287 1 305 1 
210 2 39 3 201 1 88 5 276 1 184 2 312 1 96 1 107 1 161 4 60 1 284 5 230 2 287 1 305 1 209 1 
210 2 39 3 201 1 88 5 276 1 260 1 184 2 312 1 107 1 161 4 60 1 284 5 230 2 287 1 305 1 209 1 
39 1 210 1 329 1 88 1 62 2 184 1 363 1 127 1 336 1 107 1 161 1 112 1 284 1 230 1 231 2 192 1 166 1 61 1 
210 1 39 1 330 1 88 1 156 1 184 1 312 1 377 1 161 1 284 1 230 2 192 1 167 1 
219 1 196 1 259 1 172 1 166 1 
219 2 274 1 331 1 91 2 259 2 186 2 124 1 314 1 108 1 240 1 196 1 151 1 343 1 303 1 86 1 172 2 14 1 166 1 235 1 
62 1 64 1 259 1 127 1 215 1 196 1 172 1 231 1 145 1 
196 1 343 1 240 1 
23 1 202 1 345 1 268 1 
243 1 202 1 100 1 49 1 143 1 345 1 268 1 
289 1 100 1 149 1 
52 1 202 1 72 1 74 2 243 3 359 1 49 1 100 3 83 1 143 1 345 1 268 1 
243 2 202 1 100 2 49 1 143 1 345 1 268 1 19 1 59 1 
328 1 130 1 212 1 243 1 100 1 49 1 143 1 83 1 268 1 347 1 118 1 
243 1 202 1 100 1 49 1 143 1 83 1 268 1 
243 1 202 2 100 1 49 1 143 1 83 1 345 1 
308 1 202 1 354 1 243 2 49 2 100 2 83 1 143 2 268 1 360 1 
130 1 202 1 238 1 19 2 340 1 243 3 49 1 100 3 217 1 83 1 143 1 345 1 268 2 
328 2 87 1 212 1 202 1 19 1 135 1 243 2 12 1 49 1 100 2 83 1 143 1 345 1 268 1 347 1 
130 1 202 1 194 1 59 1 19 2 340 1 243 4 49 2 100 4 83 1 143 2 345 1 268 2 
243 1 202 1 100 1 49 1 143 1 83 1 345 1 268 1 
130 1 202 2 121 1 72 1 19 2 74 1 340 1 243 4 359 1 100 4 49 1 143 1 345 2 268 3 
200 1 202 1 19 1 243 2 319 1 49 1 100 2 83 1 143 1 345 1 268 1 246 1 
202 1 72 1 74 2 243 3 359 2 49 1 100 3 68 1 83 1 143 1 345 1 268 1 
373 2 334 1 268 2 195 1 
243 1 100 1 49 1 143 1 83 1 205 1 
243 2 202 1 100 2 49 1 238 1 143 1 83 1 345 1 268 1 19 1 
99 1 
243 1 202 1 100 1 49 1 143 1 83 1 345 1 268 1 
74 1 243 3 202 1 100 3 49 1 238 1 143 1 83 1 345 1 268 1 19 1 
130 1 340 1 121 1 268 1 
202 1 268 1 

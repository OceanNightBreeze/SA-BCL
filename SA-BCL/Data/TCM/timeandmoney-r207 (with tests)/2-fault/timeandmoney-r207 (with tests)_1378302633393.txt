#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V ERROR java.lang.NullPointerException (123,239,288) 285 113 
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V ERROR java.lang.NullPointerException (123,239,288) 285 113 
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V ERROR java.lang.NullPointerException (123,239,288) 285 (51,152,155) 41 42 
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V ERROR java.lang.NullPointerException 
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V ERROR java.lang.NullPointerException (123,239,288) 285 113 224 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V ERROR java.lang.NullPointerException (123,239,288) 285 113 224 210 
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval; | RETURN | 1356 | return null
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint; | ASSIGN | 2778 | = null
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
0 2 291 1 3 1 192 1 251 4 226 1 29 3 157 2 100 9 282 1 234 1 183 2 184 1 165 2 238 1 205 2 206 2 132 1 35 2 167 1 87 1 358 1 13 1 177 9 219 1 44 5 22 6 362 1 
0 2 291 1 3 1 192 1 251 4 226 1 29 3 157 2 100 9 282 1 234 1 183 2 184 1 165 2 238 1 205 2 206 2 132 1 167 1 35 2 87 1 358 1 13 1 177 9 219 1 44 5 22 6 362 1 
0 2 291 1 3 1 192 1 251 5 226 1 29 4 157 2 100 10 282 1 234 1 183 2 184 1 165 2 238 1 205 2 206 2 132 1 167 1 35 2 87 1 358 1 13 1 177 10 219 1 44 6 22 7 362 1 
0 2 291 1 3 1 192 1 251 3 226 1 29 2 157 2 100 7 282 1 234 1 183 2 184 1 165 2 238 1 205 2 206 2 132 1 167 1 35 1 87 1 13 1 177 7 219 1 44 4 22 4 362 1 
205 1 206 1 132 1 0 1 35 2 87 1 251 2 226 1 29 1 358 1 157 1 177 4 100 4 44 3 183 1 184 1 362 1 22 3 
205 1 165 1 206 1 335 1 291 1 167 1 87 1 306 1 226 1 196 1 157 1 177 2 100 2 44 1 183 1 184 1 
165 1 206 2 87 1 251 1 226 1 29 1 157 2 177 3 100 3 219 1 44 2 184 1 22 1 
95 1 205 1 165 1 206 2 0 1 132 1 264 1 35 2 87 1 251 4 226 1 358 1 29 3 157 2 13 1 177 9 100 9 219 1 282 1 44 5 183 1 362 1 184 1 22 7 
95 1 205 1 165 1 206 2 0 1 132 1 264 1 35 2 87 1 251 4 226 1 358 1 29 3 157 2 13 1 177 9 100 9 219 1 282 1 44 5 183 1 362 1 184 1 22 7 
208 1 97 1 19 1 
19 1 332 2 235 1 
128 1 154 1 239 2 288 2 240 2 270 2 123 2 319 2 
279 1 180 2 49 1 181 2 154 1 121 1 123 2 254 1 28 2 156 1 319 2 227 1 142 2 128 1 322 1 79 1 144 1 283 1 261 1 6 1 349 1 166 1 304 1 209 1 265 1 327 1 239 3 240 2 353 1 270 3 134 1 37 1 109 1 288 2 331 2 244 1 333 1 
176 1 154 1 91 1 239 1 288 1 240 1 270 1 123 1 106 1 319 1 
285 1 155 1 123 1 
51 2 240 1 239 1 97 1 123 1 270 1 106 1 319 1 197 1 343 2 258 1 288 1 19 1 93 1 152 1 
257 1 51 1 229 1 343 1 293 1 
257 1 316 1 51 2 343 2 225 1 97 1 19 1 293 1 
257 1 51 1 343 1 
51 1 336 1 154 1 240 1 239 1 123 1 270 1 106 1 293 1 319 1 176 1 343 1 91 1 288 1 
19 1 
257 1 316 1 51 2 343 2 247 1 97 1 19 1 293 1 
316 1 51 5 1 2 73 1 97 1 84 2 65 1 293 2 187 1 169 1 173 1 90 1 257 2 198 1 343 5 19 1 323 2 63 1 146 1 
128 1 208 1 
222 1 239 2 240 1 123 2 270 2 294 1 319 1 128 2 288 1 
150 1 140 1 330 1 
180 1 166 1 327 1 265 1 239 1 270 1 134 1 156 1 28 1 142 1 128 1 109 1 149 1 79 1 244 1 333 1 
221 1 236 1 180 1 166 1 265 1 327 1 240 1 239 2 134 1 123 1 270 2 156 1 28 1 142 1 109 1 150 1 288 1 79 1 244 1 333 1 
236 2 222 1 221 1 285 1 240 4 239 4 123 5 270 4 340 1 319 1 128 1 113 1 161 1 288 4 
255 1 91 1 239 2 288 2 240 2 270 2 123 2 106 1 
236 1 128 1 239 3 288 3 240 3 270 3 123 3 319 1 
91 1 239 1 288 1 240 1 270 1 123 1 106 1 
222 1 239 1 288 1 240 1 270 1 123 1 106 1 294 1 319 1 
222 1 221 1 279 1 180 1 49 1 51 1 181 2 154 1 123 3 254 1 156 1 28 1 319 2 227 1 142 1 128 1 197 1 322 1 258 1 343 1 200 1 79 1 260 1 261 1 6 1 236 1 166 1 304 1 265 1 327 1 239 4 240 3 353 1 134 1 270 4 106 1 37 1 109 1 288 3 93 1 331 1 244 1 333 1 152 1 
236 1 113 1 285 1 239 1 288 1 240 1 270 1 123 2 
222 1 221 1 236 2 51 1 240 3 239 3 267 1 123 3 270 3 106 1 319 1 197 1 343 1 258 1 288 3 19 1 93 1 200 1 152 1 
236 1 222 1 240 2 239 2 140 1 123 2 270 2 319 1 150 1 288 2 
180 1 166 1 327 1 265 1 239 1 270 1 134 1 156 1 28 1 142 1 128 1 109 1 79 1 244 1 333 1 
180 1 327 1 265 1 239 1 269 1 270 1 134 1 156 1 28 1 142 1 128 1 109 1 79 1 244 1 324 1 
279 1 49 1 181 2 140 2 254 1 227 1 341 1 344 1 259 1 345 1 202 1 6 2 304 1 209 2 8 1 353 1 66 1 135 1 330 2 287 1 175 1 150 2 290 1 331 4 
255 1 197 1 239 1 288 1 240 1 270 1 123 1 106 1 
82 1 10 1 
82 1 10 1 
301 1 80 1 
301 1 80 1 
301 1 80 1 
153 1 82 1 10 1 
153 1 82 1 10 1 
82 1 10 1 171 1 
301 1 80 1 82 2 10 2 33 1 334 1 
153 1 82 1 10 1 
82 1 10 1 250 1 
82 1 10 1 250 1 
82 1 10 1 250 1 
24 1 51 1 48 1 82 1 72 1 239 2 10 1 240 2 270 2 123 2 171 1 194 1 98 1 360 1 128 1 310 1 343 1 17 1 288 2 289 1 281 1 233 1 101 1 23 1 
94 1 48 2 82 2 51 2 10 2 27 1 194 2 320 2 75 1 360 2 16 1 67 1 215 1 310 2 343 2 17 3 281 1 19 1 334 1 
205 1 0 1 183 1 
205 1 335 1 183 1 
205 3 335 1 0 2 85 1 126 1 116 1 
205 2 335 1 0 1 292 1 85 1 126 1 
205 2 335 1 0 1 85 2 126 1 
316 1 1 1 51 5 72 1 73 1 318 1 97 1 249 2 293 4 98 1 160 2 257 1 31 1 343 5 259 1 101 1 323 1 146 3 202 1 235 1 164 1 84 1 329 2 173 2 175 1 276 1 137 1 19 2 20 1 290 1 332 3 70 1 
316 1 51 9 1 2 52 1 73 1 97 1 318 1 249 6 293 7 160 6 257 6 198 1 229 5 343 9 163 1 259 3 101 4 62 1 348 1 323 2 146 8 202 3 235 3 7 1 84 2 308 5 173 6 175 3 276 3 243 1 19 5 20 2 290 3 332 9 70 2 
1 1 51 3 97 1 249 2 293 2 160 2 198 1 343 3 259 1 101 1 323 1 146 3 202 1 235 2 164 1 84 1 329 1 173 2 175 1 276 1 137 1 19 3 20 1 290 1 332 4 70 1 
1 1 51 4 97 1 249 4 293 3 160 4 198 1 343 4 259 2 101 2 348 1 323 1 146 5 202 2 235 3 164 1 7 1 84 1 329 2 173 4 175 2 276 2 137 1 243 1 19 4 20 1 290 2 332 7 70 1 
208 1 79 1 69 1 
34 1 79 1 
71 1 
109 1 265 1 79 1 
361 1 79 1 
265 1 79 1 
278 1 109 1 256 1 265 1 79 3 69 2 
131 1 350 1 83 1 96 2 209 4 141 1 54 1 252 1 341 2 111 1 230 1 259 1 345 3 290 1 32 1 331 7 6 3 
131 1 350 1 83 1 96 2 209 4 141 1 54 1 252 1 341 2 111 1 230 1 259 1 345 3 290 1 32 1 331 7 6 3 
131 1 350 1 83 1 96 2 209 4 337 1 141 1 54 1 252 1 341 2 111 1 230 1 259 1 345 3 290 1 32 1 331 7 6 3 
139 1 49 1 181 2 96 3 193 1 122 1 141 1 252 2 54 5 227 1 341 5 56 1 230 2 345 10 259 4 32 2 6 15 202 3 300 4 131 1 350 1 83 1 304 1 209 16 353 1 172 1 175 3 274 1 188 3 111 2 276 3 217 1 331 31 290 4 
49 2 181 4 96 2 141 1 252 1 54 1 227 2 341 3 298 1 230 1 99 1 259 1 345 4 32 1 6 4 131 1 83 1 304 2 209 5 353 2 111 1 217 1 290 1 331 9 
180 1 315 1 335 1 0 1 74 1 226 1 28 1 142 1 157 1 158 1 76 1 78 1 100 2 183 1 184 1 165 1 205 2 206 1 87 1 134 1 177 2 148 1 189 1 18 1 313 1 44 1 277 1 244 1 22 1 116 1 
180 1 335 1 0 1 50 1 74 1 226 1 28 1 142 1 157 1 158 1 76 1 78 1 100 3 183 1 165 1 205 2 206 1 87 1 134 1 15 1 177 3 148 1 189 1 313 1 44 1 21 1 277 1 244 1 116 1 22 2 
180 1 335 1 50 1 0 1 74 1 226 1 28 1 142 1 158 1 76 1 78 1 100 2 183 1 165 1 205 2 87 1 134 1 15 1 177 2 148 1 189 1 44 1 244 1 22 2 116 1 
302 1 165 2 180 1 118 1 206 1 265 1 53 1 74 2 134 1 156 1 28 1 357 1 142 1 157 1 114 1 177 1 143 1 189 2 100 1 78 2 79 1 244 1 21 1 
205 2 165 1 180 1 335 1 206 1 0 1 74 1 134 1 28 1 142 1 158 1 157 1 76 1 15 1 148 1 177 1 189 1 18 1 100 1 78 1 313 1 244 1 277 1 183 1 116 1 184 1 
104 1 
180 2 316 1 1 1 51 2 2 1 73 1 155 1 317 1 123 1 28 2 156 2 142 2 257 2 343 2 61 1 79 1 323 1 146 1 285 1 265 1 134 1 84 1 354 1 357 1 173 1 275 1 114 1 41 1 42 1 244 1 70 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
257 1 316 1 51 2 275 1 285 1 41 1 42 1 343 2 155 1 247 1 123 1 354 1 
51 1 1 1 285 1 73 1 155 1 123 1 84 1 354 1 275 1 343 1 42 1 41 1 323 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 275 1 285 1 41 1 42 1 343 1 155 1 123 1 354 1 
51 1 1 1 285 1 73 1 155 1 123 1 84 1 354 1 275 1 343 1 42 1 41 1 323 1 
131 1 279 1 49 1 83 1 304 1 208 1 96 1 209 3 181 2 353 1 140 1 141 1 66 1 254 1 330 1 341 2 227 1 128 2 111 1 150 1 259 1 345 2 331 6 290 1 32 1 6 3 
279 2 49 2 181 4 121 1 140 4 54 1 254 1 341 1 227 2 128 1 322 1 345 2 259 1 346 1 5 1 6 6 202 1 300 3 304 2 209 8 353 2 330 11 172 1 175 2 274 1 110 1 188 3 40 1 276 2 150 11 331 14 290 2 45 1 
221 1 180 1 279 1 49 1 181 2 140 1 123 1 121 1 254 1 28 1 156 1 142 1 227 1 128 1 322 1 129 1 79 1 5 1 6 1 236 1 166 1 304 1 265 1 327 1 209 1 239 2 240 1 353 1 134 1 270 2 170 1 174 1 109 1 149 1 288 1 331 2 244 1 333 1 
221 1 180 3 279 3 49 3 96 1 181 6 140 7 141 1 54 4 142 3 227 3 322 1 5 1 64 2 6 10 236 1 327 2 9 1 240 1 239 3 328 1 330 7 109 2 15 1 111 1 150 7 288 1 331 20 290 3 244 2 333 2 117 1 121 1 123 1 254 3 28 3 156 1 341 4 128 2 259 3 345 8 79 2 32 1 261 2 202 2 131 1 166 2 83 1 304 3 265 2 351 2 209 10 353 3 270 3 134 2 88 2 211 2 175 2 276 2 
315 1 180 8 279 2 49 2 181 4 123 1 121 1 339 1 253 1 254 2 28 7 156 2 342 1 142 8 227 2 322 1 299 1 79 3 283 2 6 1 236 1 304 2 209 1 265 2 239 1 240 1 266 1 353 2 270 1 134 2 89 1 66 1 357 1 15 1 114 1 288 1 331 2 151 1 244 2 
222 1 279 1 49 1 181 2 140 1 123 1 254 1 319 1 341 1 227 1 345 1 259 1 5 1 202 1 6 2 304 1 209 1 240 1 239 1 353 1 270 1 355 1 330 1 175 1 276 1 150 1 288 1 290 1 331 3 
279 1 49 1 304 1 181 2 209 2 353 1 140 1 54 1 66 1 254 1 330 1 227 1 175 1 150 1 344 1 345 1 331 2 290 1 
279 1 49 1 304 1 181 2 353 1 140 1 66 1 254 1 135 1 330 1 341 1 227 1 150 1 345 1 259 1 331 2 202 1 6 2 
279 1 49 1 304 1 181 2 209 2 353 1 140 2 54 1 66 1 254 1 330 2 341 1 227 1 175 1 276 1 150 2 259 1 345 2 331 4 290 1 6 2 202 1 
279 1 49 1 304 1 181 2 209 2 353 1 140 1 54 1 339 1 254 1 330 1 227 1 175 1 150 1 344 1 345 1 331 2 290 1 
279 1 49 1 304 1 181 2 353 1 140 1 339 1 254 1 135 1 330 1 341 1 227 1 150 1 345 1 259 1 331 2 202 1 6 2 
279 1 49 1 304 1 181 2 209 2 353 1 140 2 54 1 339 1 254 1 330 2 341 1 227 1 175 1 276 1 150 2 259 1 345 2 331 4 290 1 6 2 202 1 
279 1 49 1 304 1 181 2 209 2 353 1 140 2 54 1 254 1 330 2 341 1 227 1 175 1 276 1 150 2 259 1 345 2 290 1 331 4 6 2 202 1 
180 1 279 1 49 1 181 2 121 1 254 1 28 1 156 1 142 1 227 1 128 1 322 1 79 1 261 1 6 1 166 1 304 1 209 1 265 1 327 1 239 1 353 1 134 1 270 1 109 1 331 2 244 1 333 1 
180 1 327 1 265 1 239 1 269 1 270 1 134 1 156 1 28 1 142 1 109 1 60 1 79 1 244 1 324 1 
279 1 49 1 304 1 181 2 209 2 353 1 140 2 54 1 254 1 330 2 341 1 227 1 175 1 276 1 150 2 259 1 345 2 331 4 5 1 290 1 6 2 202 1 
180 1 315 1 279 1 49 1 181 2 140 2 54 1 254 1 28 1 341 1 142 1 227 1 259 1 345 2 79 1 261 1 6 2 202 1 166 1 304 1 209 2 327 1 265 1 239 1 353 1 134 1 270 1 211 1 330 2 175 1 109 1 276 1 150 2 331 4 290 1 244 1 333 1 
222 1 279 1 119 1 49 1 181 2 123 1 140 1 54 1 254 1 319 1 227 1 259 1 345 1 5 1 6 1 202 1 304 1 209 2 240 1 239 1 353 1 270 1 330 1 175 1 276 1 150 1 288 1 290 1 331 3 
245 1 49 2 181 4 338 1 54 3 341 3 227 2 297 2 77 1 298 1 345 6 259 3 6 10 202 3 300 2 303 1 304 2 133 1 209 9 353 2 172 1 175 3 38 1 274 1 188 1 276 3 312 2 115 1 331 19 290 3 
47 1 245 2 49 3 181 6 338 2 54 2 341 2 227 3 57 1 297 1 298 1 345 4 259 2 6 12 202 2 300 2 284 1 303 1 304 3 209 14 353 3 186 1 175 3 38 1 274 2 188 2 276 3 217 2 312 4 115 1 331 26 290 3 190 1 191 1 
47 1 245 1 49 3 96 1 181 6 338 2 141 1 54 4 341 4 227 3 57 1 297 1 298 1 345 8 259 5 32 1 6 21 202 4 237 1 300 4 131 1 284 1 83 1 303 1 304 3 133 1 209 20 353 3 186 1 172 1 175 4 38 1 274 3 188 3 111 1 276 4 217 1 312 4 115 1 331 41 290 5 190 1 191 1 
47 1 245 1 49 4 96 1 181 8 338 2 141 1 54 3 341 4 227 4 57 1 297 1 298 1 345 7 259 4 32 1 6 18 202 3 237 1 300 4 131 1 284 1 83 1 303 1 304 4 133 1 209 20 353 4 186 1 172 1 175 4 38 1 274 3 188 3 111 1 276 4 217 2 312 4 115 1 331 38 290 5 190 1 191 1 
47 1 245 1 49 2 96 1 181 4 338 1 141 1 54 7 341 7 227 2 57 1 297 1 298 1 345 14 259 8 32 1 6 25 202 7 300 4 131 1 284 1 83 1 303 1 304 2 209 27 353 2 186 1 172 2 175 7 38 1 274 2 188 4 111 1 40 2 276 7 217 1 312 4 115 1 331 52 290 8 190 1 191 1 
360 1 82 1 48 1 67 1 310 1 10 1 272 1 27 1 334 1 194 1 
233 1 171 1 
360 1 296 1 82 1 48 1 310 1 10 1 271 1 273 1 194 1 
153 1 178 1 
250 1 201 1 33 1 
94 1 51 1 48 1 82 1 10 1 27 1 194 1 320 1 75 1 360 1 67 1 215 1 310 1 343 1 17 2 281 1 19 1 334 1 
94 1 51 1 48 1 82 1 10 1 27 1 194 1 320 1 75 1 360 1 67 1 215 1 310 1 343 1 17 2 281 1 19 1 334 1 
94 1 51 1 48 1 82 1 10 1 27 1 194 1 320 1 75 1 360 1 67 1 215 1 310 1 343 1 17 2 281 1 19 1 334 1 
153 1 178 1 33 1 
153 1 178 1 33 1 
250 1 201 1 
250 1 201 1 33 1 
289 1 23 1 
94 1 24 1 51 1 48 1 72 1 123 2 293 1 320 1 194 1 98 1 128 1 343 1 233 1 101 1 82 1 239 2 10 1 240 2 270 2 171 1 360 1 310 1 17 1 288 2 289 1 138 1 23 1 
223 1 180 2 279 1 49 1 181 2 123 2 121 1 253 1 254 1 28 2 142 2 295 1 227 1 322 1 232 1 79 1 5 1 283 2 6 1 102 1 304 1 265 1 209 1 239 2 353 1 134 1 270 2 331 2 244 1 151 1 46 1 
205 2 180 2 315 1 335 1 0 1 74 1 134 1 28 2 142 2 213 1 158 1 15 1 148 1 244 1 347 1 277 1 183 1 116 1 203 1 
205 2 180 1 335 1 0 1 74 1 134 1 28 1 142 1 213 1 158 1 15 1 148 1 92 1 277 1 244 1 183 1 116 1 
180 1 265 1 74 1 248 1 134 1 156 1 28 1 357 1 142 1 114 1 143 1 79 1 244 1 347 1 
205 2 180 1 335 1 0 1 74 1 134 1 28 1 142 1 213 1 158 1 15 1 148 1 347 1 277 1 244 1 183 1 116 1 203 1 
4 1 
173 1 90 1 208 1 97 1 19 1 169 1 146 1 
316 1 1 1 51 1 73 1 97 1 257 1 343 1 323 1 146 1 235 1 207 1 84 1 173 1 108 1 19 2 220 1 332 1 
315 1 180 3 316 3 1 4 51 5 97 2 317 1 142 3 231 1 323 4 325 1 146 9 64 2 235 6 105 1 107 1 109 3 14 2 112 2 19 8 290 2 244 3 332 12 69 2 70 2 73 4 25 2 249 6 156 1 28 3 256 1 257 5 160 6 343 5 259 2 79 10 202 2 34 3 265 3 36 2 86 1 134 4 84 4 305 2 169 1 212 2 90 1 173 8 175 2 361 2 276 2 93 2 179 2 314 2 
47 1 316 1 51 1 1 2 73 2 317 1 97 2 249 5 57 1 257 1 160 5 228 1 343 1 259 2 323 2 146 8 235 3 202 2 300 1 284 1 185 1 36 2 84 2 186 1 173 5 175 2 274 1 188 1 112 1 276 2 19 5 290 2 332 6 70 1 191 1 
1 1 51 1 336 1 73 1 154 1 123 1 319 1 343 1 259 1 32 1 323 1 146 2 83 1 239 1 352 1 240 1 36 2 270 1 84 1 106 1 173 2 176 1 112 1 111 1 91 1 288 1 43 1 290 2 
1 1 73 1 97 1 84 1 169 1 90 1 173 1 19 1 323 1 146 1 
36 2 249 5 173 5 175 2 160 5 112 1 276 2 19 5 259 2 290 2 332 10 64 1 146 5 235 5 202 2 
257 1 316 1 51 1 343 1 97 1 19 1 
180 4 316 2 1 2 51 3 2 1 73 1 317 2 124 1 28 4 156 2 195 1 142 4 257 4 198 1 343 3 61 1 79 1 323 2 146 2 105 1 265 1 86 2 134 1 84 2 357 1 173 2 114 1 244 1 70 2 
180 1 279 1 49 1 181 2 154 1 123 2 254 1 28 1 156 1 319 2 227 1 142 1 128 1 322 1 79 1 261 1 6 1 166 1 304 1 327 1 265 1 239 3 240 2 353 1 270 3 134 1 37 1 109 1 288 2 331 1 244 1 333 1 
1 1 73 1 96 1 97 2 317 1 249 2 84 1 173 2 160 2 19 4 332 4 323 1 146 1 235 2 70 1 
103 1 310 1 194 1 
103 1 310 1 194 1 
246 1 310 1 289 1 27 1 194 1 
103 1 310 1 194 1 
310 1 162 1 194 1 
310 1 162 1 194 1 
310 1 162 1 194 1 
310 1 194 1 
82 1 10 1 
131 1 49 2 83 1 304 2 96 1 209 4 181 4 353 2 141 1 54 1 341 2 227 2 111 1 217 1 259 1 345 3 290 1 331 8 32 1 6 4 
131 1 83 1 208 1 96 1 209 3 141 1 341 2 111 1 345 2 259 1 32 1 290 1 331 6 6 3 
262 1 49 1 304 1 181 2 209 2 353 1 54 1 341 1 227 1 175 1 276 1 259 1 345 2 290 1 331 4 6 2 202 1 
300 2 209 3 54 1 341 1 172 1 175 1 274 1 188 1 276 1 259 1 345 2 331 7 290 1 202 1 6 4 
49 2 96 1 181 4 141 1 54 4 280 1 341 5 227 2 345 9 259 3 346 1 32 2 6 12 202 2 300 2 131 1 83 1 304 2 209 11 353 2 172 1 175 2 188 2 111 2 276 2 40 1 217 2 290 3 331 23 
300 1 331 1 6 1 
188 1 209 1 331 1 
262 1 49 1 304 1 181 2 209 3 353 1 54 1 227 1 341 2 175 1 276 1 345 3 259 1 331 6 290 1 64 1 6 3 202 1 
47 1 49 1 181 2 54 1 227 1 341 1 57 1 298 1 259 2 345 2 6 6 202 2 300 1 284 1 304 1 209 6 353 1 186 1 175 2 274 1 188 1 276 2 331 12 290 2 191 1 
83 1 209 3 54 1 341 1 111 1 259 1 345 2 290 1 331 6 32 1 6 3 
131 1 49 1 304 1 209 1 181 2 353 1 141 1 54 1 280 1 341 1 227 1 111 1 217 1 345 2 32 1 331 3 6 2 
49 1 83 1 304 1 181 2 209 5 352 1 353 1 54 2 227 1 341 3 111 2 298 1 345 5 259 2 32 2 331 10 290 2 6 5 
49 1 304 1 181 2 209 2 353 1 54 1 227 1 175 1 298 1 345 1 290 1 331 2 
49 1 304 1 181 2 209 2 353 1 54 1 341 1 227 1 175 1 298 1 276 1 259 1 345 2 290 1 331 4 6 2 202 1 
49 3 304 3 133 1 181 6 209 1 353 3 54 1 280 1 227 3 341 1 111 1 298 1 217 1 345 2 331 3 32 1 6 2 
139 1 49 5 96 1 181 10 122 1 141 1 54 5 280 1 56 1 227 5 341 7 298 1 345 12 259 5 32 3 6 18 202 3 300 4 131 1 262 1 83 2 304 5 133 1 209 16 353 5 172 1 175 3 274 1 188 3 111 3 276 3 217 2 331 34 290 5 
49 1 96 1 181 2 141 1 227 1 341 2 298 1 259 1 345 2 32 1 6 4 300 1 284 1 131 1 83 1 304 1 209 4 353 1 274 1 188 1 111 1 290 1 331 8 
49 2 96 1 181 4 141 1 54 1 341 2 227 2 298 1 259 1 345 3 32 1 6 5 300 2 131 1 284 1 262 1 83 1 304 2 209 6 353 2 172 1 175 1 274 1 188 1 111 1 276 1 331 11 290 2 
47 1 49 3 96 1 181 6 141 1 54 1 227 3 341 3 57 1 298 1 259 3 345 4 32 1 6 10 202 2 300 1 131 1 284 1 262 1 83 1 304 3 209 9 353 3 186 1 175 2 274 1 188 1 111 1 276 2 217 1 331 19 290 3 191 1 
47 1 49 3 96 1 181 6 141 1 54 2 227 3 341 3 57 1 298 1 259 2 345 5 32 1 6 7 202 1 300 1 131 1 284 1 262 1 83 1 304 3 209 10 353 3 186 1 175 2 274 1 188 1 111 1 276 2 217 1 331 17 290 3 191 1 
49 1 96 1 181 2 141 1 227 1 341 2 298 1 259 1 345 2 32 1 6 4 300 1 284 1 131 1 83 1 304 1 209 4 353 1 274 1 188 1 111 1 290 1 331 8 
47 1 49 1 181 2 54 1 227 1 341 1 57 1 298 1 259 2 345 2 6 6 202 2 300 1 284 1 304 1 209 6 353 1 186 1 175 2 274 1 188 1 276 2 331 12 290 2 191 1 
47 1 49 4 96 1 181 8 141 1 54 2 227 4 341 3 57 1 298 1 259 2 345 5 32 1 6 8 202 1 300 1 131 1 284 1 262 1 83 1 304 4 209 10 353 4 186 1 175 2 274 1 188 1 111 1 276 2 217 2 331 18 290 3 191 1 
47 1 49 4 181 8 54 3 227 4 341 3 57 1 298 1 259 2 345 6 6 7 202 2 300 1 284 1 304 4 133 1 209 9 353 4 186 1 175 3 274 1 188 1 276 3 217 2 331 16 290 3 191 1 
131 2 83 1 209 3 141 1 54 3 341 3 111 3 259 1 345 6 331 7 32 3 290 1 6 4 
47 1 49 4 96 1 181 8 141 1 54 1 227 4 341 3 57 1 298 1 259 2 345 4 32 1 6 8 202 1 300 1 131 1 284 1 83 1 304 4 133 1 209 10 353 4 186 1 175 2 274 1 188 1 111 1 276 2 217 2 331 18 290 3 191 1 
224 1 113 1 285 1 123 1 
224 1 113 1 285 1 147 1 199 1 123 1 210 1 125 1 55 1 
142 1 180 1 114 1 208 1 265 1 134 1 79 1 244 1 28 1 156 1 357 1 
236 1 180 1 265 1 327 1 240 1 239 2 134 1 123 1 270 2 156 1 28 1 142 1 128 1 109 1 288 1 79 1 244 1 333 1 
180 1 123 2 28 1 142 1 128 1 197 1 258 1 79 3 236 1 327 1 265 2 239 2 240 1 86 1 270 2 134 1 106 1 109 2 361 1 288 2 244 1 333 1 314 1 
180 2 123 2 28 2 142 2 128 1 197 1 258 1 79 3 236 1 327 1 265 2 239 2 240 1 269 1 86 1 270 2 134 1 106 1 307 1 109 2 361 1 288 2 244 1 314 1 
180 3 51 2 97 1 28 3 156 1 142 3 257 1 343 2 79 4 34 1 265 1 86 1 134 1 11 1 307 1 109 1 361 1 214 1 93 1 19 1 244 1 69 1 314 1 
180 3 51 2 34 1 265 1 97 1 25 1 134 1 86 1 307 1 156 1 28 3 142 3 361 1 109 1 257 1 343 2 19 1 93 1 79 4 244 1 314 1 69 1 
142 1 180 1 299 1 134 1 244 1 28 1 
315 1 180 7 265 2 266 1 134 3 89 1 156 2 28 6 342 1 142 7 30 1 159 1 256 1 109 1 15 1 59 1 299 1 79 3 283 1 151 1 244 2 
180 1 315 1 279 2 49 2 181 4 96 1 140 1 141 1 142 1 227 2 232 1 5 1 6 3 236 1 327 1 240 1 239 2 330 1 109 1 111 1 150 1 288 1 290 1 331 6 244 1 333 1 123 1 254 2 28 1 341 2 128 2 345 2 259 1 79 1 32 1 261 1 131 1 166 1 83 1 304 2 265 1 209 3 353 2 270 2 134 1 211 1 88 1 
180 1 316 1 1 2 51 3 73 2 97 1 25 1 293 1 28 1 156 1 142 1 257 2 343 3 79 2 323 2 146 1 105 1 34 1 84 2 305 1 169 1 173 1 90 1 14 1 19 1 93 1 179 1 69 1 
315 1 180 2 265 1 134 2 28 2 142 2 107 1 256 1 109 1 299 1 79 2 244 1 69 1 
180 4 315 1 265 1 134 1 307 1 156 1 28 4 357 1 142 4 309 1 114 1 79 1 244 1 
180 2 120 1 265 1 9 1 86 1 134 2 28 2 142 2 30 1 159 1 109 1 136 1 79 1 244 1 
142 1 205 1 180 1 335 1 148 1 134 1 244 1 183 1 28 1 156 1 
142 2 223 1 180 2 315 1 15 1 265 1 134 1 79 1 244 1 151 1 28 2 
180 5 315 1 265 2 266 1 86 1 134 2 89 1 156 1 28 4 357 1 142 5 309 1 114 1 79 3 151 1 244 2 
180 5 315 1 265 2 86 1 134 2 89 1 156 1 28 4 357 1 142 5 309 1 114 1 242 1 79 3 151 1 244 2 
236 1 180 1 265 1 327 1 240 1 239 2 269 1 134 1 123 1 270 2 156 1 28 1 142 1 128 1 109 1 288 1 79 1 244 1 
180 1 265 1 86 1 134 2 28 1 142 1 30 1 159 1 256 1 109 1 59 1 79 1 244 1 
204 1 128 1 81 1 311 1 326 1 
204 2 81 2 263 1 51 2 97 1 106 1 293 1 128 1 197 1 258 1 311 1 343 2 216 1 19 1 93 1 200 1 130 1 326 2 152 1 
204 1 102 1 239 1 123 1 270 1 295 1 311 1 46 1 326 1 
216 1 311 1 130 1 
208 1 87 1 44 1 226 1 
157 1 206 1 177 1 100 1 87 1 44 1 226 1 
165 1 177 1 189 1 
206 1 167 2 26 1 87 1 226 1 321 1 359 1 157 1 177 3 100 3 44 1 184 1 
157 1 206 1 177 2 35 1 100 2 87 1 44 1 226 1 22 1 
205 1 206 1 132 1 0 1 251 1 157 1 177 1 100 1 44 1 183 1 184 1 
157 1 206 1 177 1 100 1 87 1 44 1 184 1 
157 1 206 1 177 1 100 1 87 2 226 1 184 1 
206 2 87 1 168 1 12 1 157 2 177 2 100 2 68 1 44 1 184 1 
206 1 87 1 251 1 226 1 29 1 157 1 13 1 177 3 100 3 282 1 44 2 184 1 22 2 
205 2 335 1 206 1 0 1 87 1 226 1 157 1 58 1 177 2 100 2 44 1 183 1 184 1 116 1 22 1 
206 2 35 1 87 1 251 1 226 1 358 1 29 1 157 2 177 4 100 4 44 2 184 1 22 2 
157 1 206 1 177 1 100 1 87 1 44 1 226 1 184 1 
206 1 167 1 268 1 26 1 87 2 251 1 226 2 359 1 29 1 157 1 177 4 100 4 44 3 22 2 
206 1 286 1 264 1 87 1 226 1 157 1 127 1 177 2 100 2 44 1 184 1 22 1 
206 1 167 2 26 2 87 1 226 1 359 1 157 1 177 3 100 3 44 1 145 1 184 1 
218 1 241 1 182 2 44 2 
157 1 206 1 39 1 177 1 100 1 184 1 
157 1 206 1 177 2 100 2 87 1 282 1 44 1 226 1 22 1 184 1 
356 1 
157 1 206 1 177 1 100 1 87 1 44 1 226 1 184 1 
206 1 167 1 87 1 226 1 157 1 177 3 100 3 282 1 44 1 22 1 184 1 
29 1 268 1 44 1 251 1 
87 1 44 1 

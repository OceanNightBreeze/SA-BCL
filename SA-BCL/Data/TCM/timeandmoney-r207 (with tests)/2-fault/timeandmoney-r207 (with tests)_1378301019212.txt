#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V ERROR java.lang.NullPointerException 364 376 2 369 230 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V ERROR java.lang.NullPointerException 364 376 2 369 230 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V ERROR java.lang.NullPointerException 364 376 2 369 230 322 
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V ERROR java.lang.NullPointerException 364 376 2 369 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V ERROR java.lang.NullPointerException 364 376 2 369 
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V ERROR java.lang.NullPointerException 364 376 2 369 
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable; | RETURN | 7152 | return null
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
352 9 272 4 157 1 69 1 326 1 303 1 109 1 273 2 26 9 204 1 236 2 284 1 80 1 58 1 290 2 315 3 14 1 148 7 321 1 375 1 173 1 323 5 377 1 64 1 
272 4 352 9 157 1 69 1 326 1 303 1 109 1 273 2 26 9 204 1 236 2 284 1 80 1 58 1 290 2 315 3 14 1 148 7 321 1 375 1 173 1 323 5 377 1 64 1 
227 1 352 9 272 4 69 2 157 1 326 1 303 2 109 1 273 2 202 1 26 9 204 1 332 1 236 2 80 1 58 2 290 2 315 3 83 1 14 1 148 6 321 1 375 1 222 1 173 1 323 5 378 1 64 2 
227 1 352 9 272 4 69 2 157 1 326 1 303 2 109 1 273 2 202 1 26 9 204 1 332 1 236 2 80 1 58 2 290 2 315 3 83 1 14 1 148 6 321 1 375 1 222 1 173 1 323 5 378 1 64 2 
227 1 352 10 272 5 69 2 157 1 326 1 303 2 109 1 273 2 202 1 26 10 204 1 332 1 236 2 80 1 58 2 290 2 315 4 83 1 14 1 148 7 321 1 375 1 222 1 173 1 323 6 378 1 64 2 
227 1 352 7 272 3 69 2 157 1 326 1 303 2 273 2 202 1 26 7 204 1 332 1 236 2 80 1 58 2 290 1 315 2 83 1 14 1 148 4 321 1 375 1 222 1 173 1 323 4 378 1 64 2 
352 4 80 1 272 2 58 1 69 1 290 2 326 1 315 1 109 1 148 3 273 1 321 1 26 4 204 1 236 1 173 1 323 3 64 1 
211 1 352 2 69 1 326 1 303 1 273 1 321 1 26 2 345 1 332 1 236 1 173 1 222 1 323 1 54 1 64 1 
352 3 272 1 326 1 315 1 14 1 303 1 148 1 273 2 321 1 26 3 236 2 173 1 323 2 
110 1 319 1 235 1 
319 1 247 1 183 2 
179 2 171 2 98 2 351 1 221 2 281 1 255 2 90 2 
228 1 123 1 269 1 156 1 351 1 158 1 302 1 255 2 256 1 94 1 179 2 98 2 51 1 76 2 281 1 310 1 30 1 336 2 337 2 312 1 79 1 287 1 288 1 99 1 263 1 171 3 150 1 149 1 35 1 191 1 61 1 192 2 36 1 63 2 221 2 224 1 90 3 
179 1 171 1 320 1 98 1 351 1 221 1 28 1 261 1 255 1 90 1 
67 1 10 1 289 1 131 1 245 1 171 1 373 1 319 1 320 1 74 1 235 1 98 1 90 1 78 1 
67 2 255 1 131 1 245 1 179 1 171 1 373 1 319 1 320 1 74 1 235 1 98 1 221 1 78 2 90 1 
265 1 233 1 67 1 78 1 379 1 
319 1 233 1 67 2 235 1 42 1 177 1 78 2 379 1 
233 1 67 1 78 1 
67 1 351 1 261 1 255 1 179 1 171 1 320 1 98 1 193 1 221 1 28 1 78 1 90 1 379 1 
319 1 
319 1 233 1 67 2 235 1 42 1 78 2 371 1 379 1 
67 5 252 2 125 1 42 1 82 1 95 2 319 1 119 1 233 2 182 1 47 2 276 1 219 1 235 1 7 1 238 1 78 5 18 1 379 2 
269 1 337 1 312 1 353 1 255 1 256 1 263 1 94 1 372 1 171 2 149 1 150 1 61 1 192 1 98 1 221 1 76 1 53 1 224 1 90 2 
110 1 281 1 
255 1 179 1 171 2 152 1 98 2 221 1 281 2 185 1 90 2 
241 1 187 1 53 1 
269 1 337 1 312 1 256 1 263 1 94 1 171 1 150 1 149 1 61 1 192 1 86 1 76 1 281 1 90 1 224 1 
311 1 253 1 10 1 353 2 255 4 179 1 372 1 171 5 111 1 98 5 221 4 281 1 185 1 90 5 
171 2 320 1 98 2 221 2 28 1 255 2 90 2 249 1 
179 1 171 3 98 3 221 3 281 1 353 1 255 3 90 3 
171 1 320 1 98 1 221 1 28 1 255 1 90 1 
179 1 171 1 320 1 152 1 98 1 221 1 255 1 185 1 90 1 
123 1 269 1 67 1 68 1 156 1 351 1 353 1 302 1 255 3 131 1 256 1 94 1 179 2 74 1 98 3 51 1 76 1 281 1 185 1 78 1 336 1 312 1 337 1 79 1 287 1 288 1 169 1 245 1 263 1 372 1 171 4 373 1 149 1 150 1 320 1 35 1 61 1 191 1 192 1 36 1 63 2 221 3 224 1 90 4 
171 2 111 1 98 2 10 1 221 1 281 1 353 1 255 1 90 2 
106 1 67 1 353 2 255 3 131 1 169 1 245 1 179 1 372 1 171 3 373 1 319 1 320 1 74 1 98 3 221 3 185 1 78 1 90 3 
187 1 353 1 255 2 179 1 171 2 98 2 221 2 53 1 185 1 90 2 
269 1 337 1 312 1 256 1 94 1 263 1 171 1 150 1 149 1 61 1 192 1 76 1 281 1 90 1 224 1 
269 1 337 1 285 1 256 1 94 1 263 1 171 1 149 1 181 1 61 1 192 1 76 1 281 1 90 1 224 1 
267 1 123 1 156 1 43 1 158 2 302 1 304 1 51 1 53 2 363 1 336 4 56 1 364 1 241 2 187 2 340 1 288 2 262 1 12 1 32 1 35 1 36 1 63 2 295 1 
171 1 320 1 98 1 221 1 255 1 90 1 245 1 249 1 
305 1 355 1 
305 1 355 1 
348 1 333 1 
348 1 333 1 
348 1 333 1 
305 1 178 1 355 1 
305 1 178 1 355 1 
305 1 75 1 355 1 
348 1 328 1 305 2 87 1 333 1 355 2 
305 1 178 1 355 1 
143 1 305 1 355 1 
143 1 305 1 355 1 
143 1 305 1 355 1 
91 1 67 1 254 1 255 2 355 1 180 1 305 1 306 1 330 1 75 1 132 1 98 2 360 1 207 1 281 1 78 1 113 1 341 1 171 2 120 1 221 2 153 1 90 2 225 1 
113 1 67 2 93 1 341 2 115 1 21 2 254 2 13 1 355 2 292 1 151 1 319 1 305 2 306 2 132 2 87 1 89 1 78 2 225 3 
58 1 69 1 64 1 
345 1 69 1 64 1 
266 1 97 1 345 1 58 2 69 3 44 1 
266 1 240 1 97 1 345 1 58 1 69 2 
266 1 97 2 345 1 58 1 69 2 
91 1 267 1 67 5 175 2 252 1 42 1 160 2 159 1 304 1 95 1 161 1 233 1 47 1 330 1 277 1 276 3 183 3 235 1 360 1 238 1 78 5 55 1 364 1 367 1 262 1 217 2 319 2 247 1 194 1 376 1 18 2 379 4 
265 5 267 3 67 9 252 2 42 1 354 1 160 6 200 5 304 3 95 2 73 1 161 2 233 6 47 2 277 2 276 8 183 9 235 1 360 4 238 1 78 9 364 3 283 1 262 3 116 1 82 1 318 1 217 6 319 5 121 1 247 3 194 1 376 3 18 6 379 7 
267 1 67 3 175 1 252 1 159 1 160 2 304 1 95 1 161 1 47 1 277 1 276 3 235 1 183 4 360 1 78 3 55 1 364 1 262 1 82 1 319 3 217 2 247 2 376 1 379 2 18 2 
267 2 67 4 175 2 252 1 354 1 160 4 159 1 304 2 95 1 161 1 47 1 277 1 276 5 235 1 183 7 360 2 78 4 55 1 364 2 262 2 116 1 82 1 318 1 319 4 217 4 247 3 376 2 379 3 18 4 
263 1 110 1 362 1 
263 1 231 1 
206 1 
263 1 94 1 224 1 
263 1 214 1 
263 1 224 1 
263 3 94 1 167 1 155 1 362 2 224 1 
336 7 267 1 288 3 81 1 43 3 244 2 368 1 158 4 71 1 3 1 23 1 304 1 32 2 104 1 105 1 27 1 237 1 
336 7 267 1 288 3 81 1 43 3 244 2 368 1 158 4 71 1 3 1 23 1 304 1 32 2 104 1 105 1 27 1 237 1 
336 7 267 1 288 3 81 1 43 3 244 2 368 1 129 1 158 4 71 1 3 1 23 1 304 1 32 2 104 1 105 1 27 1 237 1 
267 4 123 1 66 1 43 10 302 1 158 16 71 1 3 1 23 2 304 4 307 1 184 1 27 1 51 1 237 2 139 4 336 31 364 3 212 1 81 2 288 15 244 3 368 5 262 3 100 1 32 5 104 1 35 1 63 2 17 3 105 2 376 3 38 1 347 1 
267 1 19 1 123 2 43 4 302 2 158 5 71 1 23 1 304 1 51 2 27 1 237 1 336 9 145 1 288 4 81 1 244 2 368 1 100 1 32 3 35 2 104 1 63 4 105 1 
250 1 269 1 229 1 352 2 69 2 198 1 44 1 326 1 130 1 303 1 273 1 201 1 26 2 236 1 76 1 335 1 29 1 337 1 259 1 58 1 103 1 148 1 149 1 321 1 345 1 192 1 173 1 223 1 323 1 64 1 
250 1 269 1 352 3 197 1 69 2 44 1 198 1 326 1 130 1 303 1 273 1 201 1 26 3 236 1 76 1 29 1 337 1 365 1 259 1 58 1 103 1 148 2 149 1 321 1 345 1 192 1 346 1 223 1 323 1 64 1 
269 1 352 2 197 1 69 2 198 1 44 1 326 1 130 1 303 1 201 1 26 2 76 1 337 1 259 1 58 1 103 1 148 2 149 1 321 1 345 1 192 1 346 1 223 1 323 1 64 1 
264 1 269 1 271 1 337 1 365 1 352 1 198 2 130 2 303 2 256 1 263 1 103 2 149 1 118 1 273 1 25 1 26 1 192 1 236 1 76 1 77 1 224 1 65 1 
250 1 269 1 352 1 69 2 198 1 44 1 130 1 303 1 273 1 201 1 26 1 236 1 76 1 335 1 29 1 337 1 259 1 58 1 103 1 149 1 345 1 192 1 346 1 173 1 223 1 64 1 
137 1 
297 2 67 4 252 1 42 2 128 1 46 1 131 1 327 3 356 2 199 1 96 2 95 1 233 5 47 1 74 1 276 1 275 1 359 2 234 1 235 1 98 1 238 1 112 1 78 4 9 1 338 5 10 1 289 1 313 1 245 1 216 1 344 1 171 1 84 1 373 1 319 1 320 1 247 2 172 3 90 1 174 3 18 1 
297 2 67 4 252 1 42 2 128 1 46 1 131 1 327 3 356 2 199 1 96 2 95 1 233 5 47 1 74 1 276 1 275 1 359 2 234 1 235 1 98 1 238 1 78 4 112 1 9 1 338 5 10 1 289 1 313 1 245 1 216 1 344 1 171 1 84 1 373 1 319 1 320 1 247 2 172 3 90 1 174 3 18 1 
226 2 297 2 41 2 67 4 252 1 42 2 46 1 327 2 131 1 199 1 95 1 233 4 47 1 74 1 276 1 275 1 359 2 235 1 183 2 98 1 238 1 8 1 78 4 9 1 338 4 10 1 289 1 313 1 245 1 84 1 171 1 373 1 319 1 320 1 34 1 172 2 174 2 90 1 18 1 
269 1 324 1 42 3 46 1 327 2 131 1 96 2 95 1 274 1 233 6 47 1 276 2 275 1 235 1 183 2 98 1 135 1 238 1 9 1 337 2 338 4 10 1 289 1 245 1 149 1 192 2 247 2 65 1 18 2 297 2 67 5 252 1 20 1 256 2 356 2 199 1 161 1 74 1 359 2 76 2 78 5 313 1 263 1 216 1 84 1 171 1 373 1 319 2 118 1 320 1 34 1 172 2 174 2 224 1 90 1 
9 1 67 3 338 2 42 1 10 1 313 1 289 1 46 1 131 1 371 1 245 1 373 1 84 1 171 1 233 2 320 1 74 1 275 1 98 1 172 1 78 3 90 1 
67 3 42 1 46 1 131 1 233 1 74 1 275 1 98 1 235 1 78 3 9 1 338 3 10 1 289 1 313 1 245 1 371 1 171 1 84 1 373 1 319 1 320 1 90 1 174 1 
67 3 42 1 46 1 131 1 327 1 233 2 74 1 275 1 98 1 235 1 78 3 9 1 338 3 10 1 289 1 313 1 371 1 245 1 171 1 84 1 373 1 319 1 320 1 172 1 90 1 174 1 
42 3 128 1 46 1 327 4 131 1 95 1 96 2 233 7 47 1 275 1 276 1 5 1 234 1 98 1 235 5 238 1 9 1 338 6 10 1 289 1 245 1 344 1 247 2 18 1 297 2 67 5 252 1 199 1 356 2 74 1 359 2 78 5 112 1 313 1 371 1 216 1 373 1 171 1 84 1 319 5 320 1 172 4 90 1 174 4 
42 2 46 1 131 1 327 2 95 1 96 2 233 4 47 1 275 1 276 1 98 1 183 2 235 1 238 1 9 1 338 4 10 1 289 1 245 1 247 2 18 1 297 2 67 4 252 1 199 1 356 2 74 1 359 2 78 4 313 1 216 1 373 1 171 1 84 1 319 2 320 1 34 1 172 2 90 1 174 2 
297 2 67 4 252 1 42 2 46 1 327 2 131 1 356 2 199 1 96 2 95 1 233 4 47 1 74 1 276 1 275 1 359 2 234 1 235 1 98 1 238 1 78 4 112 1 9 1 338 4 10 1 289 1 313 1 245 1 216 1 344 1 171 1 84 1 373 1 319 1 320 1 247 2 172 2 174 2 90 1 18 1 
297 2 67 4 252 1 42 2 46 1 327 2 131 1 356 2 199 1 96 2 95 1 233 4 47 1 74 1 276 1 275 1 359 2 234 1 235 1 98 1 238 1 78 4 112 1 9 1 338 4 10 1 289 1 313 1 245 1 216 1 344 1 171 1 84 1 373 1 319 1 320 1 247 2 172 2 174 2 90 1 18 1 
226 2 297 2 41 2 67 4 252 1 298 1 42 2 46 1 327 2 131 1 199 1 95 1 233 4 47 1 74 1 276 1 275 1 359 2 234 1 235 1 183 2 98 1 6 1 238 1 8 1 78 4 9 1 338 4 10 1 289 1 313 1 245 1 171 1 84 1 373 1 319 1 320 1 172 2 174 2 90 1 18 1 
267 1 123 1 156 1 43 2 302 1 158 3 71 1 110 1 304 1 27 1 51 1 281 2 53 1 237 1 336 6 241 1 187 1 81 1 288 3 244 1 12 1 32 2 104 1 35 1 36 1 63 2 
267 2 123 2 251 1 156 2 43 2 302 2 158 8 257 1 304 1 307 1 51 2 281 1 53 11 310 1 139 3 336 14 364 2 241 11 366 1 212 1 287 1 187 4 288 6 342 1 368 1 262 1 32 1 35 2 220 1 36 1 63 4 17 3 376 2 
269 1 123 1 156 1 353 1 302 1 255 1 158 1 256 1 94 1 98 1 76 1 51 1 281 1 52 1 310 1 336 2 312 1 337 1 339 1 187 1 287 1 288 1 263 1 372 1 171 2 149 1 150 1 35 1 61 1 192 1 220 1 36 1 63 2 86 1 221 1 224 1 90 2 296 1 
267 3 123 3 269 2 43 8 176 2 94 2 98 1 51 3 281 2 237 1 53 7 142 1 336 20 241 7 337 3 287 1 187 7 288 10 244 1 343 1 150 2 149 2 104 1 191 2 61 2 192 3 346 1 63 6 294 2 156 3 353 1 255 1 302 3 158 10 71 1 256 1 304 3 258 1 27 1 76 3 208 2 310 1 364 2 312 2 81 1 368 4 262 2 370 2 372 1 263 2 32 4 171 3 35 3 220 1 36 3 221 1 376 2 90 3 224 2 
269 2 123 2 229 1 156 2 325 1 126 1 353 1 255 1 302 2 158 1 256 2 4 1 279 1 98 1 76 8 51 2 164 1 138 1 310 1 30 2 336 2 186 1 337 7 287 1 288 1 12 1 263 3 171 1 149 2 118 1 35 2 192 8 36 2 346 1 63 4 221 1 90 1 224 2 65 1 
267 1 123 1 156 1 43 1 255 1 302 1 158 1 179 1 304 1 329 1 98 1 51 1 53 1 185 1 336 3 364 1 241 1 187 1 288 2 262 1 32 1 171 1 35 1 220 1 36 1 63 2 221 1 376 1 90 1 
336 2 364 1 267 1 241 1 123 1 187 1 156 1 340 1 43 1 368 1 302 1 158 2 12 1 35 1 36 1 63 2 51 1 53 1 
336 2 241 1 123 1 187 1 156 1 288 2 43 1 262 1 302 1 12 1 32 1 304 1 35 1 36 1 63 2 51 1 53 1 363 1 
267 1 123 1 156 1 43 2 158 2 302 1 304 1 51 1 53 2 336 4 364 1 241 2 187 2 288 2 368 1 262 1 12 1 32 1 35 1 36 1 63 2 376 1 
336 2 364 1 267 1 241 1 123 1 187 1 325 1 156 1 340 1 43 1 368 1 302 1 158 2 35 1 36 1 63 2 51 1 53 1 
336 2 241 1 123 1 187 1 325 1 156 1 288 2 43 1 262 1 302 1 32 1 304 1 35 1 36 1 63 2 51 1 53 1 363 1 
267 1 123 1 156 1 325 1 43 2 158 2 302 1 304 1 51 1 53 2 336 4 364 1 241 2 187 2 288 2 368 1 262 1 32 1 35 1 36 1 63 2 376 1 
267 1 123 1 156 1 43 2 158 2 302 1 304 1 51 1 53 2 336 4 364 1 241 2 187 2 288 2 368 1 262 1 32 1 35 1 36 1 63 2 376 1 
269 1 123 1 156 1 158 1 302 1 256 1 94 1 76 1 51 1 281 1 310 1 336 2 312 1 337 1 287 1 288 1 263 1 171 1 149 1 150 1 35 1 61 1 191 1 192 1 36 1 63 2 224 1 90 1 
269 1 123 1 156 1 158 1 302 1 256 1 94 1 181 1 49 1 76 1 51 1 281 1 310 1 336 2 337 1 285 1 287 1 288 1 263 1 171 1 149 1 35 1 61 1 192 1 36 1 63 2 224 1 90 1 
267 1 123 1 156 1 43 2 158 2 302 1 304 1 51 1 53 2 336 4 364 1 241 2 187 2 288 2 368 1 262 1 32 1 35 1 220 1 36 1 63 2 376 1 
267 1 269 1 123 1 229 1 156 1 43 2 158 2 302 1 94 1 304 1 76 1 51 1 53 2 208 1 336 4 364 1 241 2 312 1 337 1 187 2 288 2 368 1 262 1 263 1 32 1 171 1 149 1 150 1 35 1 61 1 191 1 192 1 36 1 63 2 376 1 224 1 90 1 
267 1 123 1 156 1 43 1 255 1 302 1 158 2 179 1 304 1 98 1 51 1 53 1 185 1 336 3 364 1 241 1 187 1 288 1 368 1 262 1 316 1 171 1 35 1 220 1 36 1 63 2 221 1 376 1 90 1 
19 1 267 3 92 1 123 2 43 6 302 2 158 9 230 1 304 3 307 1 308 1 51 2 139 2 336 19 364 3 212 1 288 10 188 1 368 3 189 2 262 3 11 2 117 1 32 3 35 2 322 1 63 4 374 1 17 1 376 3 
336 11 267 1 364 1 19 1 123 1 288 5 146 1 369 1 189 2 158 6 302 1 2 1 230 2 35 1 307 2 17 2 374 1 63 2 322 1 51 1 308 2 376 1 139 2 
19 1 267 3 92 1 123 2 43 3 302 2 158 12 2 1 230 1 304 2 307 3 308 2 51 2 139 4 336 24 364 3 212 1 144 1 288 12 188 1 146 1 368 2 369 1 189 3 262 2 11 1 32 1 35 2 322 1 63 4 374 1 17 3 376 3 
19 1 267 3 92 1 123 2 43 4 302 2 158 12 2 1 230 1 304 2 307 3 308 2 51 2 139 4 336 24 364 3 212 1 144 1 288 12 188 1 146 1 368 2 369 1 189 3 262 2 11 1 32 2 35 2 322 1 63 4 374 1 17 3 376 3 
19 1 267 8 123 2 43 14 302 2 158 27 71 1 2 1 230 1 304 8 357 1 307 2 27 1 308 1 51 2 237 1 165 1 139 4 336 52 364 7 366 2 212 2 81 1 288 25 188 1 244 1 146 1 368 7 369 1 189 4 262 7 100 1 11 1 32 7 104 1 35 2 322 1 63 4 374 1 17 4 376 7 88 1 
151 1 305 1 306 1 132 1 341 1 115 1 87 1 361 1 254 1 355 1 
120 1 75 1 
40 1 349 1 305 1 306 1 132 1 341 1 254 1 108 1 355 1 
48 1 178 1 
143 1 62 1 
113 1 67 1 93 1 341 1 115 1 21 1 254 1 355 1 292 1 151 1 319 1 305 1 306 1 132 1 87 1 89 1 78 1 225 2 
113 1 67 1 93 1 341 1 115 1 21 1 254 1 355 1 292 1 151 1 319 1 305 1 306 1 132 1 87 1 89 1 78 1 225 2 
113 1 67 1 93 1 341 1 115 1 21 1 254 1 355 1 292 1 151 1 319 1 305 1 306 1 132 1 87 1 89 1 78 1 225 2 
328 1 48 1 178 1 
328 1 48 1 178 1 
328 1 143 1 62 1 
143 1 62 1 
207 1 153 1 
91 1 268 1 67 1 93 1 21 1 254 1 255 2 355 1 180 1 305 1 306 1 330 1 75 1 132 1 98 2 360 1 207 1 281 1 78 1 341 1 171 2 120 1 153 1 221 2 90 2 379 1 225 1 
0 1 154 1 269 1 123 1 1 1 156 1 302 1 158 1 24 1 98 2 76 2 51 1 164 1 310 1 30 2 336 2 186 1 337 2 287 1 288 1 102 1 263 1 171 2 149 1 35 1 192 2 220 1 36 1 63 2 224 1 90 2 
269 1 337 2 114 1 229 1 259 1 58 1 69 2 44 1 198 1 59 1 149 1 201 1 345 1 278 1 192 2 346 1 76 2 64 1 29 1 
269 1 337 1 259 1 58 1 69 2 44 1 198 1 59 1 72 1 149 1 201 1 345 1 192 1 346 1 76 1 64 1 29 1 
264 1 269 1 337 1 198 1 256 1 263 1 149 1 118 1 278 1 85 1 192 1 76 1 224 1 65 1 
269 1 337 1 114 1 259 1 58 1 69 2 44 1 198 1 59 1 149 1 201 1 345 1 278 1 192 1 346 1 76 1 64 1 29 1 
280 1 
123 1 269 1 351 1 156 1 302 1 255 2 256 1 179 2 94 1 98 2 51 1 76 1 281 1 336 1 337 1 312 1 79 1 287 1 288 1 263 1 171 3 150 1 149 1 35 1 191 1 61 1 192 1 36 1 63 2 221 2 90 3 224 1 
252 1 244 1 160 2 95 1 217 2 161 1 319 4 47 1 276 1 247 2 183 4 235 2 135 1 238 1 18 2 
110 1 319 1 182 1 276 1 235 1 7 1 18 1 
67 1 252 1 42 1 216 1 356 1 96 1 95 1 319 2 233 1 47 1 276 1 235 1 183 1 247 1 238 1 78 1 18 1 
39 2 267 2 269 4 229 1 42 3 127 1 176 2 131 2 94 3 231 3 95 4 232 2 233 5 182 1 47 4 276 9 235 2 183 12 135 1 136 1 7 1 238 4 140 1 337 3 60 2 149 3 192 3 16 2 247 6 18 8 67 5 155 1 252 4 299 2 256 1 160 6 304 2 161 2 358 1 76 3 362 2 309 2 78 5 166 2 364 2 214 2 260 1 262 2 263 10 317 2 217 6 319 8 376 2 224 3 
267 2 252 1 2 1 160 5 95 1 304 2 357 1 47 1 276 6 307 1 183 4 238 1 139 1 364 2 146 1 369 1 262 2 217 5 319 2 247 2 17 1 376 2 88 1 18 4 
267 2 67 1 196 1 252 1 351 1 255 1 71 1 179 1 95 1 304 1 47 1 276 2 98 1 28 1 237 1 238 1 78 1 166 2 81 1 261 1 60 1 344 1 171 1 320 1 193 1 221 1 90 1 18 2 
252 1 95 1 319 1 47 1 182 1 276 1 235 1 7 1 238 1 18 1 
166 2 364 2 267 2 176 1 262 2 60 1 160 5 304 2 217 5 319 5 276 5 183 10 247 5 376 2 18 5 
319 1 233 1 67 1 235 1 42 1 78 1 
269 1 67 3 324 1 252 2 42 2 256 2 95 2 274 1 161 2 233 4 47 2 276 2 76 4 135 2 136 2 238 1 78 3 140 1 239 1 337 4 82 1 263 1 218 1 149 1 118 1 192 4 224 1 18 2 65 1 
306 1 168 1 254 1 
306 1 168 1 254 1 
306 1 50 1 115 1 207 1 254 1 
306 1 168 1 254 1 
306 1 254 1 190 1 
306 1 254 1 190 1 
306 1 254 1 190 1 
306 1 254 1 
305 1 355 1 
336 8 267 1 123 2 288 4 81 1 244 1 43 3 368 1 158 4 302 2 100 1 71 1 304 1 32 2 35 2 104 1 63 4 51 2 27 1 237 1 
336 6 267 1 288 3 81 1 244 1 43 2 158 3 71 1 110 1 32 2 304 1 104 1 27 1 237 1 
336 4 364 1 267 1 123 1 107 1 288 2 43 2 368 1 262 1 302 1 158 2 32 1 304 1 35 1 63 2 51 1 376 1 
336 7 364 1 267 1 212 1 288 4 43 2 368 1 262 1 158 3 32 1 304 1 307 1 17 1 376 1 139 2 
267 3 123 2 251 1 43 9 158 11 302 2 71 1 304 3 27 1 51 2 237 2 209 1 139 2 336 23 364 2 212 1 366 1 81 2 288 12 244 1 368 4 262 2 100 2 32 5 104 1 35 2 17 2 63 4 376 2 
336 1 288 1 139 1 
336 1 17 1 158 1 
336 6 364 1 267 1 123 1 107 1 288 3 43 3 368 1 176 1 262 1 302 1 158 3 304 1 32 2 35 1 63 2 51 1 376 1 
336 12 267 2 364 2 19 1 123 1 288 6 43 2 146 1 368 1 262 2 369 1 158 6 302 1 2 1 32 1 304 2 357 1 35 1 307 1 63 2 17 1 51 1 376 2 88 1 139 1 
336 6 267 1 288 3 81 1 43 2 368 1 158 3 71 1 304 1 32 1 237 1 
336 3 123 1 81 1 288 2 43 2 368 1 158 1 100 1 302 1 32 1 104 1 35 1 63 2 51 1 27 1 237 1 209 1 
336 10 19 1 267 2 123 1 196 1 81 2 288 5 43 5 368 2 302 1 158 5 71 1 32 3 304 2 35 1 63 2 51 1 237 2 
336 2 19 1 364 1 267 1 123 1 43 1 368 1 302 1 158 2 35 1 63 2 51 1 
336 4 19 1 364 1 267 1 123 1 288 2 43 2 368 1 262 1 302 1 158 2 32 1 304 1 35 1 63 2 51 1 376 1 
336 3 19 1 92 1 123 3 288 2 81 1 43 2 368 1 100 1 302 3 158 1 32 1 35 3 63 6 51 3 209 1 237 1 
19 1 267 5 66 1 92 1 123 5 107 1 43 12 302 5 158 16 71 2 304 5 307 1 27 1 51 5 237 3 209 1 139 4 336 34 364 3 212 1 81 3 288 18 244 1 368 5 262 3 100 2 32 7 104 1 35 5 63 10 17 3 376 3 347 1 38 1 
267 1 19 1 123 1 43 2 302 1 158 4 71 1 304 1 307 1 51 1 27 1 237 1 139 1 336 8 288 4 81 1 244 1 369 1 32 2 35 1 104 1 17 1 63 2 
19 1 267 2 123 2 107 1 43 3 302 2 158 6 71 1 304 1 307 1 27 1 51 2 237 1 139 2 336 11 364 1 212 1 81 1 288 5 244 1 368 1 369 1 32 2 104 1 35 2 63 4 17 1 376 1 
336 5 267 1 364 1 19 1 123 1 288 2 146 1 369 1 158 3 302 1 2 1 35 1 307 1 63 2 17 1 51 1 376 1 139 1 
19 1 267 3 123 3 107 1 43 5 302 3 158 10 71 1 2 1 304 2 357 1 307 1 27 1 51 3 237 1 139 1 336 17 364 2 81 1 288 7 244 1 146 1 368 2 369 1 262 1 100 1 32 3 104 1 35 3 17 1 63 6 376 2 88 1 
267 1 19 1 123 1 43 2 302 1 158 4 71 1 304 1 307 1 51 1 27 1 237 1 139 1 336 8 288 4 81 1 244 1 369 1 32 2 35 1 104 1 17 1 63 2 
336 12 267 2 364 2 19 1 123 1 288 6 43 2 146 1 368 1 262 2 369 1 158 6 302 1 2 1 32 1 304 2 357 1 35 1 307 1 63 2 17 1 51 1 376 2 88 1 139 1 
336 5 267 1 364 1 19 1 123 2 107 1 288 2 146 1 369 1 158 3 302 2 2 1 35 2 307 1 17 1 63 4 51 2 376 1 139 1 
336 16 267 3 364 3 19 1 92 1 123 4 288 7 43 6 146 1 368 3 262 2 369 1 100 2 158 9 302 4 2 1 32 3 304 2 357 1 35 4 307 1 17 1 63 8 51 4 376 3 88 1 139 1 
336 7 267 1 288 4 81 3 43 6 368 3 158 3 71 1 304 1 32 3 104 2 27 1 237 3 
336 5 267 1 364 1 19 1 92 1 123 2 288 2 146 1 369 1 158 3 302 2 2 1 35 2 307 1 17 1 63 4 51 2 376 1 139 1 
171 1 270 1 98 1 111 1 10 1 281 1 90 1 
270 1 124 1 57 1 10 1 101 1 171 1 203 1 111 1 98 1 281 1 37 1 90 1 
263 1 110 1 149 1 118 1 269 1 337 1 192 1 76 1 224 1 65 1 256 1 
269 1 337 1 353 1 255 1 256 1 263 1 94 1 171 2 150 1 149 1 61 1 192 1 98 1 221 1 76 1 281 1 224 1 90 2 
269 1 353 1 255 1 94 2 98 2 76 1 281 1 136 1 309 1 337 1 214 1 245 1 263 3 171 2 373 1 149 1 150 1 320 1 61 1 192 1 221 2 90 2 224 2 
269 1 353 1 255 1 94 2 181 1 133 1 98 2 76 2 281 1 136 1 309 1 337 2 214 1 245 1 263 3 171 2 373 1 149 1 320 1 61 1 192 2 221 2 90 2 224 2 
269 1 67 2 22 1 301 1 131 1 256 1 94 1 231 1 233 1 133 1 235 1 76 3 136 1 362 1 309 1 78 2 337 3 214 1 263 4 149 1 319 1 192 3 224 1 
269 1 67 2 337 3 214 1 131 1 256 1 94 1 263 4 231 1 319 1 232 1 149 1 233 1 133 1 192 3 235 1 76 3 136 1 362 1 309 1 224 1 78 2 
149 1 269 1 337 1 192 1 76 1 138 1 
210 1 269 3 186 1 31 1 337 6 229 1 155 1 126 1 256 2 94 1 263 3 149 2 4 1 279 1 192 7 346 1 76 7 248 1 138 1 224 2 30 1 
267 1 154 1 269 1 123 2 229 1 156 2 43 2 353 1 158 3 302 2 255 1 71 1 94 1 304 1 98 1 27 1 51 2 76 1 281 2 53 1 237 1 208 1 336 6 241 1 337 1 312 1 187 1 288 3 81 1 244 1 370 1 263 1 32 2 171 2 149 1 150 1 104 1 35 2 61 1 191 1 220 1 192 1 36 2 63 4 221 1 224 1 90 2 
39 1 67 3 252 2 299 1 42 1 131 1 256 1 95 2 231 1 232 1 233 2 182 1 47 2 276 1 235 1 76 1 7 1 238 2 362 1 78 3 140 1 337 1 263 2 317 1 319 1 192 1 18 1 379 1 
269 2 337 2 229 1 155 1 127 1 94 1 263 2 149 1 192 2 76 2 362 1 138 1 224 1 
269 1 337 4 229 1 256 1 263 1 118 1 149 1 133 1 192 4 76 4 282 1 224 1 65 1 
142 1 122 1 210 1 269 2 31 1 337 2 70 1 94 1 263 1 149 1 192 2 76 2 136 1 224 1 
149 1 269 1 201 1 337 1 345 1 192 1 69 1 76 1 64 1 256 1 
263 1 0 1 149 1 269 1 186 1 337 2 229 1 192 2 346 1 76 2 224 1 
269 2 337 4 186 1 229 1 256 1 263 3 118 1 149 2 4 1 279 1 192 5 76 5 136 1 282 1 224 2 65 1 
269 2 337 4 186 1 229 1 256 1 263 3 118 1 149 2 4 1 192 5 134 1 76 5 136 1 282 1 224 2 65 1 
269 1 337 1 353 1 255 1 256 1 263 1 94 1 171 2 149 1 181 1 61 1 192 1 98 1 221 1 76 1 281 1 224 1 90 2 
210 1 269 2 31 1 337 1 155 1 94 1 263 1 149 1 192 1 76 1 136 1 248 1 224 1 
242 1 350 1 286 1 300 1 281 1 
242 1 67 2 350 2 286 2 300 2 45 1 131 1 245 1 169 1 373 1 319 1 33 1 320 1 74 1 235 1 281 1 163 1 78 2 379 1 
171 1 24 1 242 1 350 1 1 1 98 1 300 1 90 1 102 1 
242 1 163 1 45 1 
352 3 157 1 326 1 148 1 273 1 26 3 321 1 332 1 236 1 173 1 323 1 
147 1 272 1 323 1 315 1 
326 1 323 1 
110 1 321 1 326 1 323 1 
273 1 321 1 26 1 352 1 236 1 326 1 323 1 
103 1 26 1 303 1 
141 1 273 1 321 1 26 3 332 2 352 3 236 1 291 1 173 1 326 1 323 1 15 1 
148 1 273 1 321 1 26 2 352 2 236 1 290 1 326 1 323 1 
352 1 80 1 272 1 58 1 69 1 273 1 26 1 236 1 173 1 323 1 64 1 
273 1 26 1 352 1 236 1 173 1 326 1 323 1 
273 1 321 1 26 1 352 1 236 1 173 1 326 2 
352 2 243 1 326 1 273 2 26 2 236 2 173 1 162 1 334 1 323 1 
352 3 272 1 157 1 326 1 315 1 148 2 273 1 321 1 26 3 236 1 375 1 173 1 323 2 
352 2 58 1 69 2 44 1 326 1 148 1 273 1 321 1 26 2 345 1 331 1 236 1 173 1 323 1 64 1 
352 4 272 1 290 1 326 1 315 1 109 1 148 2 273 2 321 1 26 4 236 2 173 1 323 2 
273 1 321 1 26 1 352 1 236 1 173 1 326 1 323 1 
141 1 352 4 272 1 291 1 326 2 315 1 147 1 148 2 273 1 321 2 26 4 332 1 236 1 323 3 
148 1 273 1 321 1 284 1 26 2 205 1 352 2 215 1 236 1 173 1 326 1 323 1 
141 1 352 3 291 2 326 1 170 1 273 1 26 3 321 1 332 2 236 1 173 1 323 1 
293 1 213 1 314 2 323 2 
273 1 26 1 352 1 195 1 236 1 173 1 
148 1 273 1 321 1 26 2 352 2 157 1 236 1 173 1 326 1 323 1 
246 1 
273 1 321 1 26 1 352 1 236 1 173 1 326 1 323 1 

#tests: test_name, ' ', status(PASSED | FAILED | ERROR), ' ', [exception, { trace_mut_index | '(', { alternative_trace_mut_index, ',' }, ')' }]
com.domainlanguage.money.ProrationTest:testAllocate1()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver2()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOver10()V PASSED
com.domainlanguage.money.ProrationTest:testProrateZeroTotal()V PASSED
com.domainlanguage.money.ProrationTest:testDistributeRemainder()V PASSED
com.domainlanguage.money.ProrationTest:testPartOfWhole()V PASSED
com.domainlanguage.money.ProrationTest:testSumMoney()V PASSED
com.domainlanguage.money.ProrationTest:testProrateTotalIndivisibleBy3()V PASSED
com.domainlanguage.money.ProrationTest:testProrateOnlyOneShortOfEven()V PASSED
com.domainlanguage.time.CalendarDateTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarDateTest:testComparison()V PASSED
com.domainlanguage.time.CalendarDateTest:testStartAsTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testAsTimeInterval()V PASSED
com.domainlanguage.time.CalendarDateTest:testFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromFormattedString()V PASSED
com.domainlanguage.time.CalendarDateTest:testFromTimePoint()V PASSED
com.domainlanguage.time.CalendarDateTest:testDayOfWeek()V PASSED
com.domainlanguage.time.CalendarDateTest:testPreviousDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testConversionToJavaUtil()V PASSED
com.domainlanguage.time.CalendarDateTest:testToString()V PASSED
com.domainlanguage.time.CalendarDateTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarDateTest:testNextDay()V PASSED
com.domainlanguage.time.CalendarDateTest:testMonth()V PASSED
com.domainlanguage.time.TimePointTest:testSerialization()V PASSED
com.domainlanguage.time.TimePointTest:testEquals()V PASSED
com.domainlanguage.time.TimePointTest:testCompare()V PASSED
com.domainlanguage.time.TimePointTest:testNextDay()V PASSED
com.domainlanguage.time.TimePointTest:testPotentialProblemDueToOldUsageOf_Duration_toBaseUnitsUsage()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testStringFormat()V PASSED
com.domainlanguage.time.TimePointTest:testAsJavaUtilDate()V PASSED
com.domainlanguage.time.TimePointTest:testBackToMidnight()V PASSED
com.domainlanguage.time.TimePointTest:testFromString()V PASSED
com.domainlanguage.time.TimePointTest:testEqualsOverYearMonthDay()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfter()V PASSED
com.domainlanguage.time.TimePointTest:testIncrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testDecrementDuration()V PASSED
com.domainlanguage.time.TimePointTest:testBeforeAfterPeriod()V PASSED
com.domainlanguage.time.TimePointTest:testAtWithTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testCreationWithDefaultTimeZone()V PASSED
com.domainlanguage.time.TimePointTest:testNotIgnoringMinuteParameter()V PASSED
com.domainlanguage.time.HourOfDayTest:test24IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test24GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12IllegalLessThanZero()V PASSED
com.domainlanguage.time.HourOfDayTest:test12GreaterThan()V PASSED
com.domainlanguage.time.HourOfDayTest:test12BadAmPm()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.HourOfDayTest:test24Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:test12Simple()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.HourOfDayTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.HourOfDayTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.HourOfDayTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.NominalTimeTest:testCombineNominalTimes()V PASSED
com.domainlanguage.time.NominalTimeTest:testConvertNominalTimeToTimePoint()V PASSED
com.domainlanguage.base.RatioTest:testBigDecimalRatio()V PASSED
com.domainlanguage.base.RatioTest:testLongRatio()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyNumerator()V PASSED
com.domainlanguage.base.RatioTest:testMultiplyByRatio()V PASSED
com.domainlanguage.base.RatioTest:testEquals()V PASSED
com.domainlanguage.time.DateSpecificationTest:testFixedDate()V PASSED
com.domainlanguage.time.DateSpecificationTest:testNthWeekdayInMonth()V PASSED
com.domainlanguage.time.DateSpecificationTest:testSelectFirstFromInterval()V PASSED
com.domainlanguage.time.DateSpecificationTest:testIterateThroughInterval()V PASSED
com.domainlanguage.time.TimeUnitTest:testSerialization()V PASSED
com.domainlanguage.time.TimeUnitTest:testComparison()V PASSED
com.domainlanguage.time.TimeUnitTest:testToString()V PASSED
com.domainlanguage.time.TimeUnitTest:testIsConvertableTo()V PASSED
com.domainlanguage.time.TimeUnitTest:testNextFinerUnit()V PASSED
com.domainlanguage.time.TimeUnitTest:testConvertibleToMilliseconds()V PASSED
com.domainlanguage.time.TimeUnitTest:testJavaCalendarConstantForBaseType()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testInsertedOutOfOrder()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testOverlapping()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testIterate()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testGaps()V PASSED
com.domainlanguage.intervals.IntervalSequenceTest:testExtent()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRoundingScalingRate()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTimeRateTest:testRounding()V PASSED
com.domainlanguage.util.ImmutableIteratorTest:testRemove()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testElapsedBusinessDays()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsHoliday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testIsBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNearestBusinessDay()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDaysIterator()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testPlusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testMinusNonBusinessDayZero()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekend()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testNextBusinessDayOverWeekday()V PASSED
com.domainlanguage.time.BusinessCalendarTest:testBusinessDayReverseIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIntersection()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.TimeIntervalTest:testLength()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesClosed()V PASSED
com.domainlanguage.time.TimeIntervalTest:testBeforeOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testAfterOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testIncludesHalfOpen()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationFrom()V PASSED
com.domainlanguage.time.TimeIntervalTest:testCreateWithDurationUntil()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromPoints()V PASSED
com.domainlanguage.time.TimeIntervalTest:testDefaultFromDuration()V PASSED
com.domainlanguage.time.TimeIntervalTest:testEverUntil()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testLookup()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testRemove()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteOverlap()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMiddle()V PASSED
com.domainlanguage.intervals.IntervalMapTest:testConstructionOverwriteMultiple()V PASSED
com.domainlanguage.time.TimeOfDayTest:testEquals()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetHour()V PASSED
com.domainlanguage.time.TimeOfDayTest:testHashCode()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnStartOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnMiddleOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testOnEndOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithLaterTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithLaterTimeOfDay()V FAILED junit.framework.AssertionFailedError 
com.domainlanguage.time.TimeOfDayTest:testBeforeWithSameTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testGetMinute()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAsTimePoint()V PASSED
com.domainlanguage.time.TimeOfDayTest:testAfterWithEarlierTimeOfDay()V PASSED
com.domainlanguage.time.TimeOfDayTest:testBeforeWithEarlierTimeOfDay()V PASSED
com.domainlanguage.timeutil.SystemClockTest:testSystemClockTimeSource()V PASSED
com.domainlanguage.time.TimeRateTest:testSimpleRate()V PASSED
com.domainlanguage.time.TimeRateTest:testRoundingRate()V PASSED
com.domainlanguage.time.TimeRateTest:testEquals()V PASSED
com.domainlanguage.time.TimeRateTest:testRounding()V PASSED
com.domainlanguage.util.VerifyPersistentMappingTest:test()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSerialization()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSubintervalIterator()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testComplements()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEverFromToString()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testEquals()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testIncludes()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testDaysAdd()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testLength()V ERROR java.lang.NullPointerException 57 51 
com.domainlanguage.time.CalendarIntervalTest:testTranslationToTimeInterval()V PASSED
com.domainlanguage.time.CalendarIntervalTest:testSingleDateCalendarIntervalCompare()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterAfterEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierAfterLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testSimple()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualAfterEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testLaterBeforeEarlier()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEarlierBeforeLater()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testEqualBeforeEqual()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testIllegalLessThanZero()V PASSED
com.domainlanguage.time.MinuteOfHourTest:testGreaterThan()V PASSED
com.domainlanguage.intervals.IntervalTest:testAbstractCreation()V PASSED
com.domainlanguage.intervals.IntervalTest:testSerialization()V PASSED
com.domainlanguage.intervals.IntervalTest:testOpenInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersects()V PASSED
com.domainlanguage.intervals.IntervalTest:testIntersection()V PASSED
com.domainlanguage.intervals.IntervalTest:testGreaterOfLowerLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testLesserOfUpperLimits()V PASSED
com.domainlanguage.intervals.IntervalTest:testCoversInterval()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEqual()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsSingleElement()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForEmptyIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testToString()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsBelow()V PASSED
com.domainlanguage.intervals.IntervalTest:testIncludes()V PASSED
com.domainlanguage.intervals.IntervalTest:testIsEmpty()V PASSED
com.domainlanguage.intervals.IntervalTest:testGap()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementDisjointAdjacentOpen()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapLeft()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementOverlapRight()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementAdjacentClosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosing()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosed()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedEndPoint()V PASSED
com.domainlanguage.intervals.IntervalTest:testEqualsForOnePointIntervals()V PASSED
com.domainlanguage.intervals.IntervalTest:testRelativeComplementEnclosedOpen()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testAsTimePoint()V PASSED
com.domainlanguage.timeutil.NISTServerTimeSourceTest:testNISTTimeSource()V PASSED
com.domainlanguage.time.DurationTest:testSerialization()V PASSED
com.domainlanguage.time.DurationTest:testAddMillisecondsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testAddMonthsToPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMonthsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testSubtractFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testAddToCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testConversionToBaseUnits()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedString()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromTimePoint()V PASSED
com.domainlanguage.time.DurationTest:testStartingFromCalendarDate()V PASSED
com.domainlanguage.time.DurationTest:testNormalizedUnit()V PASSED
com.domainlanguage.time.DurationTest:testEquals()V PASSED
com.domainlanguage.time.DurationTest:testToString()V PASSED
com.domainlanguage.time.DurationTest:testDivide()V PASSED
com.domainlanguage.time.DurationTest:testCompare()V PASSED
com.domainlanguage.time.DurationTest:testAdd()V PASSED
com.domainlanguage.time.DurationTest:testSubtract()V PASSED
com.domainlanguage.time.DurationTest:testSubtractMillisecondsFromPoint()V PASSED
com.domainlanguage.time.DurationTest:testToNormalizedStringMonthBased()V PASSED
com.domainlanguage.timeutil.ClockTest:testNowDoesntBreak()V PASSED
com.domainlanguage.timeutil.ClockTest:testTodayWithoutTimeZone()V PASSED
com.domainlanguage.timeutil.ClockTest:testNow()V PASSED
com.domainlanguage.timeutil.ClockTest:testToday()V PASSED
com.domainlanguage.money.MoneyTest:testSerialization()V PASSED
com.domainlanguage.money.MoneyTest:testCreationFromDouble()V PASSED
com.domainlanguage.money.MoneyTest:testConstructor()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplyRounding()V PASSED
com.domainlanguage.money.MoneyTest:testMinimumIncrement()V PASSED
com.domainlanguage.money.MoneyTest:testDivisionByMoney()V PASSED
com.domainlanguage.money.MoneyTest:testCloseNumbersNotEqual()V PASSED
com.domainlanguage.money.MoneyTest:testEqualsNull()V PASSED
com.domainlanguage.money.MoneyTest:testPositiveNegative()V PASSED
com.domainlanguage.money.MoneyTest:testSubtraction()V PASSED
com.domainlanguage.money.MoneyTest:testApplyRatio()V PASSED
com.domainlanguage.money.MoneyTest:testIncremented()V PASSED
com.domainlanguage.money.MoneyTest:testEquals()V PASSED
com.domainlanguage.money.MoneyTest:testYen()V PASSED
com.domainlanguage.money.MoneyTest:testDivide()V PASSED
com.domainlanguage.money.MoneyTest:testMultiply()V PASSED
com.domainlanguage.money.MoneyTest:testCompare()V PASSED
com.domainlanguage.money.MoneyTest:testHash()V PASSED
com.domainlanguage.money.MoneyTest:testNegation()V PASSED
com.domainlanguage.money.MoneyTest:testPrint()V PASSED
com.domainlanguage.money.MoneyTest:testRound()V PASSED
com.domainlanguage.money.MoneyTest:testMultiplicationWithExplicitRounding()V PASSED
com.domainlanguage.money.MoneyTest:testAdditionOfDifferentCurrencies()V PASSED
com.domainlanguage.money.MoneyTest:testDifferentCurrencyNotEqual()V PASSED

#uuts: uut_name, [ '|', mutator_class, '|', change_position_in_file_buffer, '|', change ]
com.domainlanguage.time.CalendarDate:from(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;)Ljava.math.BigDecimal;
com.domainlanguage.time.TimeUnit:baseUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.money.Money:assertHasSameCurrencyAs(Lcom.domainlanguage.money.Money;)V
com.domainlanguage.time.CalendarDate:plusMonths(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.SystemClock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.FloatingDateSpecification:FloatingDateSpecification(III)V
com.domainlanguage.time.CalendarInterval:includesLowerLimit()Z
com.domainlanguage.time.CalendarDate:previousDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:at(IIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Money:euros(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:hours(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.base.Ratio:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:minus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.FixedDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarDate:toString(Ljava.lang.String;)Ljava.lang.String;
com.domainlanguage.intervals.Interval:Interval()V
com.domainlanguage.intervals.Interval:intersect(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.MoneyTimeRate:MoneyTimeRate(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.money.MoneyTimeRate:equals(Lcom.domainlanguage.money.MoneyTimeRate;)Z
com.domainlanguage.time.HourOfDay:convertTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.Duration:days(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.Duration:milliseconds(J)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeUnit:descendingUnitsForDisplay()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.Duration:years(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[J)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:closed(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeRate:TimeRate(Ljava.math.BigDecimal;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.HourOfDay:equals(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeUnit.Type:equals(Lcom.domainlanguage.time.TimeUnit.Type;)Z
com.domainlanguage.money.Money:times(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:getElapsedBusinessDays(Lcom.domainlanguage.time.CalendarInterval;)I
com.domainlanguage.intervals.Interval:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.IntervalSequence:IntervalSequence()V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:daysHoursMinutesSecondsMilliseconds(IIIIJ)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.FloatingDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval:lengthInDaysInt()I
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_month()I
com.domainlanguage.money.Money:isZero()Z
com.domainlanguage.time.CalendarInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.TimeOfDay:getHour()I
com.domainlanguage.time.TimeOfDay:hourAndMinute(II)Lcom.domainlanguage.time.TimeOfDay;
com.domainlanguage.intervals.Interval:complementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.time.CalendarDate:compareTo(Lcom.domainlanguage.time.CalendarDate;)I
com.domainlanguage.time.CalendarInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:intersect(Lcom.domainlanguage.time.TimeInterval;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.intervals.Interval:isBelow(Ljava.lang.Comparable;)Z
com.domainlanguage.time.TimePoint:parseFrom(Ljava.lang.String;Ljava.lang.String;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:minusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonths()Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimeRate:equals(Lcom.domainlanguage.time.TimeRate;)Z
com.domainlanguage.time.CalendarInterval:month(II)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:compareTo(Ljava.lang.Object;)I
com.domainlanguage.intervals.Interval:includes(Ljava.lang.Comparable;)Z
com.domainlanguage.time.CalendarDate:nextDay()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:lengthInMonthsInt()I | ASSIGN | 3514 | = null
com.domainlanguage.time.Duration:normalizedUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeOfDay:isBefore(Lcom.domainlanguage.time.TimeOfDay;)Z | OPERATOR | 1612 | || -> &&
com.domainlanguage.time.TimePoint:atMidnightGMT(III)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.DateSpecification:nthOccuranceOfWeekdayInMonth(III)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.time.CalendarInterval:inclusive(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dividedBy(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.HourOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.base.Ratio:equals(Lcom.domainlanguage.base.Ratio;)Z
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeUnit:javaCalendarConstantForBaseType()I
com.domainlanguage.time.AnnualDateSpecification.1:hasNext()Z
com.domainlanguage.time.TimeInterval.2:hasNext()Z
com.domainlanguage.money.Money:equals(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarInterval:equals(Ljava.lang.Object;)Z
com.domainlanguage.tests.CannedResponseServer:getPort()I
com.domainlanguage.intervals.Interval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:end()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:isSameDayAs(Lcom.domainlanguage.time.TimePoint;Ljava.util.TimeZone;)Z
com.domainlanguage.time.ConcreteCalendarInterval:from(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.ConcreteCalendarInterval;
com.domainlanguage.timeutil.Clock:timeSource()Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.time.HourOfDay:value()I
com.domainlanguage.time.CalendarDate:isAfter(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:emptyOfSameType()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:over(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeOfDay:hashCode()I
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:hashCode()I
com.domainlanguage.money.Money:times(DI)Lcom.domainlanguage.money.Money;
com.domainlanguage.timeutil.Clock:defaultTimeZone()Ljava.util.TimeZone;
com.domainlanguage.money.MoneyTimeRate:equals(Ljava.lang.Object;)Z
com.domainlanguage.timeutil.NISTClient:timeSource(Ljava.lang.String;I)Lcom.domainlanguage.time.TimeSource;
com.domainlanguage.intervals.LinearIntervalMap:containsIntersectingKey(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.MinuteOfHour:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:hasSameCurrencyAs(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeRate:scale()I
com.domainlanguage.time.CalendarDate:plusDays(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.HourOfDay:hashCode()I
com.domainlanguage.time.CalendarDate:CalendarDate(III)V
com.domainlanguage.time.Duration:addedTo(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendar:plusBusinessDays(Lcom.domainlanguage.time.CalendarDate;I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.CalendarInterval:everFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.timeutil.Clock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeOfDay:TimeOfDay(II)V
com.domainlanguage.intervals.Interval:includesLowerLimit()Z
com.domainlanguage.time.TimeUnit:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:at(IIIIIIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:asTimeInterval(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimePoint:atMidnight(IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.tests.CannedResponseServer:getHostName()Ljava.lang.String;
com.domainlanguage.time.Duration:minutes(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.timeutil.Clock:setDefaultTimeZone(Ljava.util.TimeZone;)V
com.domainlanguage.time.TimePoint:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.money.Proration:sum([Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.AnnualDateSpecification:firstOccurrenceIn(Lcom.domainlanguage.time.CalendarInterval;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeOfDay:isAfter(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.time.HourOfDay:isBefore(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.time.TimeOfDay:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:dollars(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertNotConvertible(Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.Duration:months(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.TimePoint:atGMT(IIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:isConvertibleTo(Lcom.domainlanguage.time.Duration;)Z
com.domainlanguage.time.CalendarInterval.3:next()Ljava.lang.Object;
com.domainlanguage.util.ImmutableIterator:remove()V
com.domainlanguage.time.FixedDateSpecification:FixedDateSpecification(II)V
com.domainlanguage.time.FloatingDateSpecification:ofYear(I)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit:toString()Ljava.lang.String;
com.domainlanguage.time.TimeInterval:TimeInterval(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)V
com.domainlanguage.time.CalendarInterval:start()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:isClosed()Z
com.domainlanguage.intervals.Interval:leftComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Proration:defaultScaleForIntermediateCalculations(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.TimePoint:calendarDate(Ljava.util.TimeZone;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:open(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.BusinessCalendar:defaultHolidays()Ljava.util.Set;
com.domainlanguage.time.CalendarInterval:includesUpperLimit()Z
com.domainlanguage.intervals.Interval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarMinute:dateAndTimeOfDay(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:until(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.timeutil.Clock:setTimeSource(Lcom.domainlanguage.time.TimeSource;)V
com.domainlanguage.time.TimeUnit:isConvertibleToMilliseconds()Z
com.domainlanguage.intervals.LinearIntervalMap:containsKey(Ljava.lang.Comparable;)Z
com.domainlanguage.money.Money:isPositive()Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_year()I
com.domainlanguage.intervals.IntervalSequence:isEmpty()Z
com.domainlanguage.time.CalendarInterval:startingFrom(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.Duration:startingFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimePoint:from(Ljava.util.Calendar;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:asJavaCalendar()Ljava.util.Calendar;
com.domainlanguage.timeutil.NISTClient:now(Ljava.lang.String;I)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:from(Ljava.util.Date;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.MinuteOfHour:isBefore(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.base.Ratio:times(Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeInterval:subintervalIterator(Lcom.domainlanguage.time.Duration;)Ljava.util.Iterator;
com.domainlanguage.time.Duration:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.intervals.IntervalLimit:lower(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Proration:ratios([Ljava.math.BigDecimal;)[Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:asTimePointGiven(Lcom.domainlanguage.time.CalendarDate;Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarMinute:CalendarMinute(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.TimeOfDay;)V
com.domainlanguage.time.CalendarInterval:year(I)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.AnnualDateSpecification:iterateOver(Lcom.domainlanguage.time.CalendarInterval;)Ljava.util.Iterator;
com.domainlanguage.time.MinuteOfHour:value()I
com.domainlanguage.money.Proration:proratedOver(Lcom.domainlanguage.money.Money;[Ljava.math.BigDecimal;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:quarters(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.HourOfDay:HourOfDay(I)V
com.domainlanguage.time.TimePoint:convertedTo24hour(ILjava.lang.String;)I
com.domainlanguage.time.CalendarMinute:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.CalendarDate:dayOfWeek()I
com.domainlanguage.time.CalendarDate:at(Lcom.domainlanguage.time.TimeOfDay;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.ClockTest.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:backToMidnight(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:daysIterator()Ljava.util.Iterator;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.LinearIntervalMap:LinearIntervalMap()V
com.domainlanguage.time.TimeRate:TimeRate(Ljava.lang.String;Lcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.CalendarInterval:inclusive(IIIIII)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;II)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Ljava.lang.Object;)Z
com.domainlanguage.time.BusinessCalendar.1:nextBusinessDate()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.timeutil.NISTClient.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:lesserOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.TimePoint:toString(Ljava.lang.String;Ljava.util.TimeZone;)Ljava.lang.String;
com.domainlanguage.money.Money:toString()Ljava.lang.String;
com.domainlanguage.timeutil.NISTClient:asTimePoint(Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:from(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:Interval(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)V
com.domainlanguage.time.TimePoint:nextDay()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.IntervalLimit:upper(ZLjava.lang.Comparable;)Lcom.domainlanguage.intervals.IntervalLimit;
com.domainlanguage.base.Ratio:decimalValue(II)Ljava.math.BigDecimal;
com.domainlanguage.time.ConcreteCalendarInterval:ConcreteCalendarInterval(Lcom.domainlanguage.time.CalendarDate;Lcom.domainlanguage.time.CalendarDate;)V
com.domainlanguage.time.BusinessCalendar:isHoliday(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.CalendarInterval.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimePoint:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.intervals.Interval:isEmpty()Z
com.domainlanguage.intervals.LinearIntervalMap:remove(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.money.Money:valueOf(DLjava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:IntervalLimit(ZZLjava.lang.Comparable;)V
com.domainlanguage.time.FixedDateSpecification:isSatisfiedBy(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getAmount()Ljava.math.BigDecimal;
com.domainlanguage.money.Money:hashCode()I
com.domainlanguage.money.Money:isNegative()Z
com.domainlanguage.intervals.IntervalLimit:isClosed()Z
com.domainlanguage.intervals.Interval:covers(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:hasLowerLimit()Z
com.domainlanguage.time.Duration:inBaseUnits()J
com.domainlanguage.time.TimeInterval:everFrom(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.Duration:seconds(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.Duration:subtractedFrom(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:includesUpperLimit()Z
com.domainlanguage.timeutil.Clock:today()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.money.Money:euros(Ljava.math.BigDecimal;)Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:equals(Ljava.lang.Object;)Z
com.domainlanguage.intervals.Interval:closed(Ljava.lang.Comparable;Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.Duration:toNormalizedString([Lcom.domainlanguage.time.TimeUnit;)Ljava.lang.String;
com.domainlanguage.time.CalendarDate:_from(Ljava.util.Calendar;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:atGMT(IIIIIII)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.BusinessCalendarTest:businessCalendar()Lcom.domainlanguage.time.BusinessCalendar;
com.domainlanguage.time.CalendarDate:isBefore(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.intervals.LinearIntervalMap:intersectingKeys(Lcom.domainlanguage.intervals.Interval;)Ljava.util.List;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(Ljava.math.BigDecimal;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.Duration:assertQuantityPositiveOrZero(J)V
com.domainlanguage.time.CalendarMinute:dateHourAndMinute(IIIII)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.timeutil.SystemClock.1:now()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:isAbove(Ljava.lang.Comparable;)Z
com.domainlanguage.time.ConcreteCalendarInterval:lowerLimit()Ljava.lang.Comparable;
com.domainlanguage.intervals.Interval:lesserOfUpperIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:rightComplementRelativeTo(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.CalendarDate:through(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.money.Money:dividedBy(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:subtractAmountFromCalendar(JLjava.util.Calendar;)V
com.domainlanguage.time.BusinessCalendar:nextNumberOfBusinessDays(ILjava.util.Iterator;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimePoint:minus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:MinuteOfHour(I)V
com.domainlanguage.time.CalendarMinute:equals(Lcom.domainlanguage.time.CalendarMinute;)Z
com.domainlanguage.time.TimeUnit:isConvertibleTo(Lcom.domainlanguage.time.TimeUnit;)Z
com.domainlanguage.intervals.LinearIntervalMap:findKeyIntervalContaining(Ljava.lang.Comparable;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.money.Money:isGreaterThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.CalendarDate:date(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.Duration:addAmountToCalendar(JLjava.util.Calendar;)V
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval:equals(Lcom.domainlanguage.time.CalendarInterval;)Z
com.domainlanguage.time.TimeUnit:TimeUnit(Lcom.domainlanguage.time.TimeUnit.Type;Lcom.domainlanguage.time.TimeUnit.Type;I)V
com.domainlanguage.time.Duration:toString()Ljava.lang.String;
com.domainlanguage.util.ClassGenerator:ClassGenerator(Lcom.domainlanguage.util.ClassFilter;)V
com.domainlanguage.money.Money:per(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.money.MoneyTimeRate;
com.domainlanguage.time.CalendarDate:asJavaCalendarUniversalZoneMidnight()Ljava.util.Calendar;
com.domainlanguage.time.TimePoint:equals(Ljava.lang.Object;)Z
com.domainlanguage.money.Money:negated()Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:addHolidays(Ljava.util.Set;)V
com.domainlanguage.intervals.IntervalSequence:gaps()Lcom.domainlanguage.intervals.IntervalSequence;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.CalendarInterval.3:hasNext()Z
com.domainlanguage.time.TimeInterval:newOfSameType(Ljava.lang.Comparable;ZLjava.lang.Comparable;Z)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.TimePoint:from(J)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.MinuteOfHour:hashCode()I
com.domainlanguage.base.Ratio:times(Lcom.domainlanguage.base.Ratio;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.money.Money:compareTo(Lcom.domainlanguage.money.Money;)I
com.domainlanguage.time.CalendarInterval:daysInReverseIterator()Ljava.util.Iterator;
com.domainlanguage.time.AnnualDateSpecification.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:plus(Lcom.domainlanguage.money.Money;)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:toString()Ljava.lang.String;
com.domainlanguage.intervals.Interval:hashCode()I
com.domainlanguage.time.BusinessCalendar.1:hasNext()Z
com.domainlanguage.money.Proration:partOfWhole(Lcom.domainlanguage.money.Money;JJ)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:nextBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInUnion(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:times(I)Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.Interval:hasUpperLimit()Z
com.domainlanguage.time.CalendarInterval.1:hasNext()Z
com.domainlanguage.time.TimeUnit:nextFinerUnit()Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimeUnit:descendingUnits()[Lcom.domainlanguage.time.TimeUnit;
com.domainlanguage.time.TimePoint:isBefore(Lcom.domainlanguage.time.TimeInterval;)Z
com.domainlanguage.time.TimeInterval:isAfter(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.CalendarInterval:everPreceding(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.TimeInterval.2:next()Ljava.lang.Object;
com.domainlanguage.time.TimeInterval:over(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.TimePoint;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeInterval:everPreceding(Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.TimeOfDay:equals(Lcom.domainlanguage.time.TimeOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:extent()Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.intervals.Interval:intersects(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.time.Duration:addAmountToTimePoint(JLcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.CalendarDate:month()Lcom.domainlanguage.time.CalendarInterval;
com.domainlanguage.time.CalendarDate:equals(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.intervals.Interval:lesserOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.money.Money:dividedBy(D)Lcom.domainlanguage.money.Money;
com.domainlanguage.time._HolidayDates:defaultHolidays()Ljava.util.Set;
com.domainlanguage.intervals.Interval:isOpen()Z
com.domainlanguage.time.BusinessCalendar:nearestBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.tests.SerializationTester:assertCanBeSerialized(Ljava.lang.Object;)V
com.domainlanguage.money.Proration:sum([Ljava.math.BigDecimal;)Ljava.math.BigDecimal;
com.domainlanguage.intervals.Interval:equals(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.money.Money:isLessThan(Lcom.domainlanguage.money.Money;)Z
com.domainlanguage.time.TimeUnit:toString(J)Ljava.lang.String;
com.domainlanguage.time.BusinessCalendar:businessDaysOnly(Ljava.util.Iterator;)Ljava.util.Iterator;
com.domainlanguage.money.MoneyTimeRate:over(Lcom.domainlanguage.time.Duration;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.TimeInterval:open(Lcom.domainlanguage.time.TimePoint;Lcom.domainlanguage.time.TimePoint;)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarDate:from(III)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeInterval.1:next()Ljava.lang.Object;
com.domainlanguage.intervals.Interval:greaterOfLowerIncludedInIntersection(Lcom.domainlanguage.intervals.Interval;)Z
com.domainlanguage.intervals.Interval:isSingleElement()Z
com.domainlanguage.time.MinuteOfHour:equals(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.time.CalendarDate:breachEncapsulationOf_day()I
com.domainlanguage.time.Duration:of(JLcom.domainlanguage.time.TimeUnit;)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.MinuteOfHour:isAfter(Lcom.domainlanguage.time.MinuteOfHour;)Z
com.domainlanguage.intervals.Interval:greaterOfLowerLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.BusinessCalendar:isWeekend(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.time.Duration:Duration(JLcom.domainlanguage.time.TimeUnit;)V
com.domainlanguage.time.ConcreteCalendarInterval:upperLimit()Ljava.lang.Comparable;
com.domainlanguage.time.TimeInterval:startingFrom(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.base.Ratio:of(JJ)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.TimeOfDay:on(Lcom.domainlanguage.time.CalendarDate;)Lcom.domainlanguage.time.CalendarMinute;
com.domainlanguage.time.TimePoint:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:toString(Ljava.util.Locale;)Ljava.lang.String;
com.domainlanguage.time.TimePoint:TimePoint(J)V
com.domainlanguage.base.Ratio:of(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.Duration:dividedBy(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.base.Ratio;
com.domainlanguage.time.HourOfDay:isAfter(Lcom.domainlanguage.time.HourOfDay;)Z
com.domainlanguage.intervals.IntervalSequence:iterator()Ljava.util.Iterator;
com.domainlanguage.intervals.LinearIntervalMap:directPut(Ljava.util.List;Ljava.lang.Object;)V
com.domainlanguage.time.BusinessCalendar:BusinessCalendar()V
com.domainlanguage.time.TimeRate:TimeRate(DLcom.domainlanguage.time.Duration;)V
com.domainlanguage.time.TimeInterval.1:hasNext()Z
com.domainlanguage.intervals.IntervalSequence:add(Lcom.domainlanguage.intervals.Interval;)V
com.domainlanguage.time.CalendarMinute:asTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:Interval(Lcom.domainlanguage.intervals.IntervalLimit;Lcom.domainlanguage.intervals.IntervalLimit;)V
com.domainlanguage.time.TimeInterval:start()Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.intervals.Interval:greaterOfUpperLimits(Lcom.domainlanguage.intervals.Interval;)Ljava.lang.Comparable;
com.domainlanguage.time.CalendarDate:plus(Lcom.domainlanguage.time.Duration;)Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.time.TimeUnit.Type:Type(Ljava.lang.String;)V
com.domainlanguage.time.HourOfDay:value(I)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.time.TimeInterval:isBefore(Lcom.domainlanguage.time.TimePoint;)Z
com.domainlanguage.time.TimePoint:asJavaCalendar(Ljava.util.TimeZone;)Ljava.util.Calendar;
com.domainlanguage.time.DateSpecification:fixed(II)Lcom.domainlanguage.time.DateSpecification;
com.domainlanguage.money.Money:applying(Lcom.domainlanguage.base.Ratio;II)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar.1:next()Ljava.lang.Object;
com.domainlanguage.time.TimeUnit:getFactor()I
com.domainlanguage.time.TimePointTest:javaUtilDateDec20_2003()Ljava.util.Date;
com.domainlanguage.time.TimePoint:asJavaUtilDate()Ljava.util.Date;
com.domainlanguage.time.CalendarDate:startAsTimePoint(Ljava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimePoint:at12hr(IIIILjava.lang.String;IIILjava.util.TimeZone;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeRate:over(Lcom.domainlanguage.time.Duration;I)Ljava.math.BigDecimal;
com.domainlanguage.time.TimePoint:parseGMTFrom(Ljava.lang.String;Ljava.lang.String;)Lcom.domainlanguage.time.TimePoint;
com.domainlanguage.time.TimeInterval:length()Lcom.domainlanguage.time.Duration;
com.domainlanguage.money.Money:incremented()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:valueOf(Ljava.math.BigDecimal;Ljava.util.Currency;I)Lcom.domainlanguage.money.Money;
com.domainlanguage.time.BusinessCalendar:isBusinessDay(Lcom.domainlanguage.time.CalendarDate;)Z
com.domainlanguage.money.Money:getCurrency()Ljava.util.Currency;
com.domainlanguage.time.Duration:compareTo(Ljava.lang.Object;)I
com.domainlanguage.money.Money:Money(Ljava.math.BigDecimal;Ljava.util.Currency;)V
com.domainlanguage.time.TimeOfDay:getMinute()I
com.domainlanguage.time.MinuteOfHour:value(I)Lcom.domainlanguage.time.MinuteOfHour;
com.domainlanguage.time.TimeInterval:preceding(Lcom.domainlanguage.time.TimePoint;ZLcom.domainlanguage.time.Duration;Z)Lcom.domainlanguage.time.TimeInterval;
com.domainlanguage.time.CalendarInterval.2:hasNext()Z
com.domainlanguage.time.CalendarInterval:end()Lcom.domainlanguage.time.CalendarDate;
com.domainlanguage.intervals.LinearIntervalMap:put(Lcom.domainlanguage.intervals.Interval;Ljava.lang.Object;)V
com.domainlanguage.intervals.LinearIntervalMap:get(Ljava.lang.Comparable;)Ljava.lang.Object;
com.domainlanguage.base.Ratio:Ratio(Ljava.math.BigDecimal;Ljava.math.BigDecimal;)V
com.domainlanguage.intervals.Interval:gap(Lcom.domainlanguage.intervals.Interval;)Lcom.domainlanguage.intervals.Interval;
com.domainlanguage.time.HourOfDay:value(ILjava.lang.String;)Lcom.domainlanguage.time.HourOfDay;
com.domainlanguage.money.Proration:distributeRemainderOver([Lcom.domainlanguage.money.Money;Lcom.domainlanguage.money.Money;)[Lcom.domainlanguage.money.Money;
com.domainlanguage.intervals.IntervalLimit:getValue()Ljava.lang.Comparable;
com.domainlanguage.time.Duration:toNormalizedString()Ljava.lang.String;
com.domainlanguage.time.Duration:weeks(I)Lcom.domainlanguage.time.Duration;
com.domainlanguage.time.CalendarDate:toString()Ljava.lang.String;
com.domainlanguage.money.Proration:dividedEvenlyIntoParts(Lcom.domainlanguage.money.Money;I)[Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:minimumIncrement()Lcom.domainlanguage.money.Money;
com.domainlanguage.money.Money:dividedBy(DI)Lcom.domainlanguage.money.Money;

#matrix (1 line per test, in order of tests): { mut_index, ' ', mut_call_count, ' ' }
112 1 67 2 233 1 3 4 26 1 167 1 261 1 92 5 264 6 71 1 117 1 199 2 242 1 329 2 13 1 173 1 274 3 304 1 223 1 371 2 206 2 374 1 132 1 358 1 359 9 361 2 380 2 363 9 
112 1 67 2 233 1 3 4 26 1 167 1 261 1 92 5 264 6 71 1 117 1 199 2 242 1 329 2 13 1 173 1 274 3 304 1 223 1 371 2 206 2 374 1 132 1 358 1 359 9 361 2 363 9 380 2 
112 1 67 2 233 1 3 5 26 1 167 1 261 1 92 6 264 7 71 1 117 1 199 2 242 1 329 2 13 1 173 1 274 4 304 1 223 1 371 2 206 2 374 1 132 1 358 1 359 10 361 2 363 10 380 2 
112 1 67 2 233 1 3 3 26 1 167 1 261 1 92 4 264 4 71 1 117 1 199 2 242 1 329 2 13 1 173 1 274 2 304 1 223 1 371 2 206 2 374 1 132 1 359 7 361 2 363 7 380 1 
274 1 223 1 371 1 67 1 3 2 206 1 374 1 92 3 264 3 71 1 117 1 358 1 359 4 199 1 242 1 363 4 380 2 329 1 
223 1 371 1 233 1 67 1 278 1 206 1 92 1 93 1 71 1 324 1 132 1 117 1 359 2 199 1 361 1 363 2 
264 1 274 1 71 1 223 1 112 1 117 1 3 1 359 3 67 2 361 1 206 2 363 3 92 2 
112 1 3 4 67 2 261 1 92 5 264 7 71 1 117 1 199 1 242 1 13 1 329 1 274 3 223 1 371 1 206 2 374 1 358 1 359 9 361 1 379 1 363 9 380 2 64 1 
112 1 3 4 67 2 261 1 92 5 264 7 71 1 117 1 199 1 242 1 13 1 329 1 274 3 223 1 371 1 206 2 374 1 358 1 359 9 361 1 379 1 363 9 380 2 64 1 
303 1 297 1 63 1 
297 1 229 2 80 1 
154 2 105 2 157 2 107 2 267 2 260 1 328 2 353 1 
111 1 23 1 290 1 255 1 139 1 164 1 234 2 215 1 260 1 321 2 295 1 323 1 196 1 30 1 198 1 350 1 267 3 328 3 353 1 98 1 75 1 147 1 207 2 128 1 154 2 21 1 105 2 375 2 106 1 157 2 158 1 339 1 107 2 340 1 248 1 343 1 317 2 
154 1 105 1 15 1 157 1 107 1 267 1 192 1 328 1 352 1 353 1 
0 1 49 1 346 1 226 1 311 1 297 1 155 1 195 1 157 1 267 1 97 1 63 1 328 1 352 1 
0 1 346 1 226 1 311 2 297 1 154 1 105 1 155 1 157 1 107 1 267 1 97 2 63 1 328 1 352 1 
251 1 259 1 178 1 97 1 311 1 
251 1 297 1 95 1 259 1 97 2 63 1 8 1 311 2 
259 1 97 1 311 1 
251 1 15 1 192 1 311 1 154 1 105 1 157 1 107 1 378 1 267 1 97 1 328 1 352 1 353 1 
297 1 
251 1 297 1 56 1 95 1 259 1 97 2 63 1 311 2 
251 2 53 1 254 1 16 2 186 1 77 2 4 1 259 2 311 5 322 1 296 1 297 1 62 1 238 1 95 1 72 1 200 2 97 5 63 1 
303 1 260 1 
260 2 154 1 60 1 105 1 157 2 107 1 267 2 351 1 328 2 
183 1 203 1 326 1 
98 1 111 1 147 1 234 1 215 1 260 1 321 1 295 1 21 1 30 1 197 1 350 1 267 1 248 1 328 1 317 1 
98 1 183 1 147 1 111 1 234 1 215 1 295 1 227 1 321 1 154 1 21 1 105 1 157 1 30 1 350 1 267 2 248 1 120 1 328 2 317 1 
154 3 105 3 157 3 107 1 267 3 260 1 328 3 227 1 
154 1 105 1 157 1 267 1 192 1 328 1 352 1 
154 1 105 1 60 1 157 1 107 1 267 1 351 1 328 1 352 1 
0 1 181 1 111 1 290 1 139 1 164 1 234 1 215 1 260 1 346 1 295 1 321 1 323 1 196 1 30 1 198 1 350 1 267 4 120 1 97 1 328 4 352 1 353 1 98 1 147 1 207 2 226 1 128 1 311 1 227 1 154 3 21 1 60 1 105 3 155 1 375 1 106 1 157 3 339 1 133 1 107 2 340 1 248 1 317 1 
154 1 105 1 157 2 267 2 260 1 49 1 328 2 356 1 227 1 
0 1 76 1 346 1 226 1 311 1 227 2 297 1 154 3 60 1 105 3 155 1 157 3 133 1 107 1 267 3 97 1 120 1 328 3 352 1 
183 1 203 1 227 1 154 2 60 1 105 2 157 2 107 1 267 2 328 2 
98 1 111 1 147 1 234 1 215 1 260 1 321 1 295 1 21 1 30 1 350 1 267 1 248 1 328 1 317 1 
147 1 234 1 165 1 215 1 260 1 245 1 321 1 295 1 21 1 30 1 350 1 267 1 248 1 328 1 317 1 
183 2 48 1 290 1 212 1 163 1 214 1 164 1 139 2 345 1 27 1 237 1 196 1 326 2 198 1 203 2 103 1 207 2 128 1 282 1 375 4 158 2 286 1 339 1 287 1 
154 1 105 1 9 1 157 1 267 1 346 1 328 1 352 1 
354 1 260 1 49 1 356 1 227 2 154 4 105 4 60 1 176 1 157 5 107 1 267 5 120 1 328 5 
154 2 105 2 9 1 157 2 267 2 192 1 328 2 352 1 
344 1 175 1 
344 1 175 1 
20 1 373 1 
20 1 373 1 
20 1 373 1 
344 1 331 1 175 1 
344 1 331 1 175 1 
79 1 344 1 175 1 
29 1 65 1 344 2 20 1 373 1 175 2 
344 1 331 1 175 1 
344 1 115 1 175 1 
344 1 115 1 175 1 
344 1 115 1 175 1 
102 2 344 2 235 1 292 1 142 2 246 2 311 2 175 2 297 1 169 3 365 2 29 1 325 1 177 1 43 2 315 1 247 1 97 2 179 1 
344 1 235 1 260 1 364 1 169 1 365 1 267 2 172 1 97 1 328 2 150 1 102 1 79 1 39 1 246 1 311 1 175 1 154 2 105 2 157 2 338 1 43 1 42 1 316 1 
371 1 199 1 329 1 
371 1 324 1 199 1 
371 3 324 1 66 1 160 1 12 1 329 2 
371 2 324 1 66 1 12 1 329 1 269 1 
371 2 324 1 66 2 329 1 12 1 
251 4 48 1 113 1 214 1 259 1 347 1 322 2 297 2 237 1 170 1 238 3 95 1 200 1 97 5 14 2 16 1 54 2 55 1 150 1 77 1 125 1 80 1 208 1 39 1 311 5 129 1 282 1 229 3 62 1 316 1 45 2 63 1 
251 7 48 3 186 1 113 2 214 3 259 6 6 1 69 1 322 6 297 5 237 3 170 1 238 8 171 1 95 1 200 2 97 9 272 1 16 2 54 6 55 3 150 4 37 1 77 2 126 5 80 3 311 9 129 2 282 3 61 1 229 9 62 1 45 6 178 5 63 1 
251 2 48 1 186 1 113 1 214 1 347 1 322 2 297 3 237 1 238 3 200 1 97 3 14 1 16 1 54 2 150 1 55 1 125 1 77 1 80 2 311 3 129 1 282 1 229 4 45 2 63 1 
251 3 48 2 186 1 113 1 214 2 347 1 69 1 322 4 297 4 237 2 238 5 171 1 200 1 97 4 272 1 14 2 16 1 54 4 150 2 55 2 77 1 125 1 80 3 311 4 129 1 282 2 229 7 45 4 63 1 
303 1 30 1 104 1 
273 1 30 1 
127 1 
30 1 248 1 
147 1 284 1 285 1 30 3 248 1 104 2 
147 1 30 1 248 1 
30 1 68 1 
34 1 212 3 332 1 188 1 204 1 139 3 214 1 103 2 305 1 282 1 337 1 375 7 158 4 301 1 314 1 33 2 220 1 
34 1 212 3 332 1 188 1 204 1 139 3 214 1 103 2 305 1 282 1 337 1 375 7 158 4 301 1 314 1 33 2 220 1 
34 1 212 3 332 1 188 1 204 1 139 3 214 1 103 2 305 1 151 1 282 1 337 1 375 7 158 4 301 1 314 1 33 2 220 1 
48 3 212 10 188 1 191 3 319 4 164 1 139 15 214 4 294 1 263 1 237 3 196 1 198 1 301 2 33 3 220 5 34 2 74 1 332 1 372 1 55 3 204 2 305 1 103 5 207 2 280 1 282 4 337 2 375 31 158 16 339 1 314 1 313 1 232 1 
212 4 188 1 214 1 164 2 139 4 293 1 196 2 198 2 301 1 33 2 220 1 34 1 74 1 204 1 224 1 103 3 305 1 207 4 282 1 337 1 375 9 158 5 339 2 314 1 
253 1 187 1 67 1 234 1 215 1 92 1 321 1 28 1 264 1 71 1 324 1 117 1 94 1 199 1 219 1 350 1 11 1 329 1 330 1 223 1 371 2 18 1 206 1 309 1 359 2 209 1 160 1 361 1 363 2 317 1 
187 1 67 1 234 1 215 1 92 1 321 1 28 1 264 2 71 1 324 1 10 1 94 1 199 1 219 1 350 1 329 1 330 1 222 1 223 1 371 2 18 1 206 1 309 1 359 3 160 1 209 1 361 1 109 1 363 3 317 1 
187 1 234 1 215 1 92 1 321 1 28 1 264 2 71 1 324 1 199 1 350 1 329 1 330 1 222 1 223 1 371 2 18 1 309 1 359 2 209 1 160 1 361 1 109 1 363 2 317 1 
88 1 67 1 234 1 258 1 215 1 321 1 28 2 52 1 10 1 30 1 350 1 122 1 18 2 19 1 206 1 21 1 359 1 209 2 361 2 162 1 248 1 363 1 317 1 
253 1 187 1 67 1 234 1 215 1 321 1 28 1 324 1 117 1 94 1 199 1 219 1 350 1 329 1 330 1 371 2 18 1 206 1 309 1 359 1 209 1 160 1 361 1 109 1 363 1 317 1 
124 1 
0 1 137 1 189 2 234 2 49 1 346 1 297 2 195 1 300 1 349 2 238 2 145 1 95 3 350 1 200 1 201 2 97 5 352 1 16 1 308 1 311 5 21 2 155 1 62 1 157 1 360 2 162 1 248 1 63 1 317 2 215 1 320 2 259 6 166 1 321 2 322 2 262 1 30 1 367 2 267 1 32 1 328 1 122 1 368 1 77 1 277 1 334 1 80 2 38 1 226 1 129 1 228 1 229 2 85 4 46 2 
0 1 137 1 320 1 259 2 49 1 346 1 262 1 195 1 300 1 95 1 267 1 97 3 328 1 352 1 56 1 334 1 226 1 311 3 155 1 228 1 157 1 85 2 
0 1 137 1 259 1 49 1 346 1 262 1 297 1 195 1 300 1 95 1 267 1 97 3 201 1 328 1 352 1 56 1 334 1 226 1 311 3 155 1 228 1 157 1 85 3 63 1 
0 1 137 1 320 1 259 2 49 1 346 1 262 1 297 1 195 1 300 1 95 1 267 1 97 3 201 1 328 1 352 1 56 1 334 1 226 1 311 3 155 1 228 1 157 1 85 3 360 1 63 1 
0 1 137 1 189 2 346 1 49 1 297 5 195 1 300 1 145 1 238 1 349 2 95 3 200 1 97 5 201 4 302 1 352 1 244 1 99 1 100 1 16 1 56 1 308 1 311 5 155 1 157 1 62 1 360 4 63 5 320 4 259 7 262 1 322 1 367 2 267 1 328 1 77 1 334 1 80 2 279 1 226 1 228 1 85 6 46 2 
0 1 137 1 189 2 346 1 49 1 297 2 195 1 300 1 145 1 238 1 349 2 95 2 200 1 97 4 201 2 352 1 16 1 308 1 311 4 155 1 157 1 62 1 360 2 63 1 259 4 320 2 262 1 322 1 367 2 267 1 328 1 77 1 334 1 277 1 80 2 226 1 228 1 229 2 85 4 46 2 
0 1 137 1 189 2 320 2 259 4 49 1 346 1 322 1 262 1 297 1 195 1 300 1 349 2 238 1 145 1 367 2 95 2 267 1 200 1 201 2 97 4 328 1 352 1 244 1 16 1 99 1 100 1 77 1 334 1 80 2 308 1 226 1 311 4 155 1 228 1 157 1 62 1 360 2 85 4 63 1 46 2 
0 1 137 1 189 2 320 2 259 4 49 1 346 1 322 1 262 1 297 1 195 1 300 1 349 2 238 1 145 1 367 2 95 2 267 1 200 1 201 2 97 4 328 1 352 1 244 1 16 1 99 1 100 1 77 1 334 1 80 2 308 1 226 1 311 4 155 1 228 1 157 1 62 1 360 2 85 4 63 1 46 2 
0 1 288 1 137 1 189 2 320 2 259 4 49 1 346 1 322 1 262 1 50 1 297 1 265 2 195 1 300 1 349 2 238 1 95 2 267 1 200 1 201 2 97 4 328 1 123 2 352 1 271 1 244 1 16 1 77 1 334 1 308 1 226 1 311 4 155 1 228 1 229 2 157 1 62 1 360 2 85 4 63 1 
0 1 137 1 189 2 320 3 259 5 49 1 346 1 322 1 262 1 297 1 195 1 300 1 349 2 238 1 145 1 367 2 95 2 267 1 200 1 97 4 201 3 328 1 352 1 244 1 16 1 100 1 99 1 77 1 334 1 80 2 308 1 279 1 226 1 311 4 155 1 228 1 62 1 157 1 85 5 360 3 63 1 46 2 
0 1 137 1 189 2 320 3 259 5 49 1 346 1 322 1 262 1 297 1 195 1 300 1 349 2 238 1 145 1 367 2 95 2 267 1 200 1 97 4 201 3 328 1 352 1 244 1 16 1 100 1 99 1 77 1 334 1 80 2 308 1 279 1 226 1 311 4 155 1 228 1 62 1 157 1 85 5 360 3 63 1 46 2 
0 1 137 1 189 2 346 1 49 1 297 1 195 1 300 1 238 1 349 2 95 2 200 1 97 4 201 2 352 1 16 1 308 1 311 4 155 1 157 1 62 1 360 2 63 1 259 4 320 2 262 1 322 1 265 2 267 1 328 1 123 2 271 1 77 1 334 1 277 1 226 1 228 1 229 2 85 4 
303 1 183 1 203 1 212 2 290 1 188 1 204 1 139 3 214 1 164 1 103 2 305 1 260 2 207 2 27 1 128 1 282 1 375 6 326 1 158 3 196 1 198 1 339 1 301 1 314 1 33 1 
47 1 183 11 48 2 212 2 290 1 319 3 191 3 139 6 164 2 214 1 260 1 294 1 237 1 266 1 196 2 326 11 198 2 239 1 220 1 121 1 75 1 203 4 17 1 55 2 103 1 207 4 128 2 282 2 375 14 158 8 339 2 340 1 313 1 
182 1 111 1 290 1 234 1 164 1 139 1 215 1 260 1 295 1 321 1 30 1 197 1 196 1 198 1 350 1 267 2 120 1 121 1 328 2 98 1 75 1 147 1 203 1 207 2 128 1 227 1 336 1 21 1 154 1 105 1 375 2 312 1 157 1 158 1 339 1 340 1 248 1 317 1 
135 2 183 7 48 2 289 1 290 3 188 1 139 10 234 3 295 2 237 2 196 3 198 3 301 1 350 2 98 2 147 2 203 7 55 2 204 1 305 1 103 4 207 6 21 1 154 1 105 1 157 1 158 10 161 1 314 1 248 2 109 1 317 3 111 2 212 8 214 3 164 3 213 2 215 2 260 2 321 3 70 2 323 2 30 2 326 7 267 3 33 1 120 1 220 4 328 3 121 1 75 1 128 3 227 1 282 3 375 20 84 2 339 3 377 1 340 1 
2 1 23 2 290 2 234 8 164 2 139 1 215 2 140 1 27 1 217 1 321 8 30 3 196 2 198 2 118 1 350 2 267 1 11 1 328 1 122 1 75 1 36 1 207 4 310 1 128 2 227 1 154 1 21 2 357 1 105 1 375 2 157 1 158 1 339 2 340 1 162 1 248 2 109 1 317 7 
183 1 48 1 212 1 290 1 164 1 214 1 139 2 216 1 237 1 326 1 196 1 198 1 267 1 121 1 328 1 203 1 55 1 103 1 207 2 128 1 154 1 282 1 105 1 60 1 375 3 157 1 158 1 339 1 107 1 
183 1 48 1 203 1 212 1 290 1 164 1 207 2 345 1 27 1 128 1 282 1 375 2 326 1 196 1 158 2 198 1 339 1 220 1 
183 1 203 1 212 1 290 1 164 1 214 1 139 2 103 1 207 2 27 1 128 1 237 1 375 2 326 1 196 1 198 1 339 1 287 1 
183 2 48 1 290 1 212 2 164 1 214 1 139 2 27 1 237 1 196 1 326 2 198 1 220 1 203 2 55 1 103 1 207 2 128 1 282 1 375 4 158 2 339 1 
183 1 48 1 203 1 212 1 290 1 164 1 207 2 345 1 310 1 128 1 282 1 375 2 326 1 196 1 158 2 198 1 339 1 220 1 
183 1 203 1 212 1 290 1 164 1 214 1 139 2 103 1 207 2 310 1 128 1 237 1 375 2 326 1 196 1 198 1 339 1 287 1 
183 2 48 1 290 1 212 2 164 1 214 1 139 2 237 1 196 1 326 2 198 1 220 1 203 2 55 1 103 1 207 2 310 1 128 1 282 1 375 4 158 2 339 1 
183 2 48 1 203 2 212 2 290 1 55 1 139 2 214 1 164 1 103 1 207 2 128 1 237 1 282 1 375 4 326 2 196 1 158 2 198 1 339 1 220 1 
111 1 290 1 234 1 164 1 139 1 215 1 260 1 295 1 321 1 323 1 30 1 196 1 198 1 350 1 267 1 328 1 98 1 75 1 147 1 207 2 128 1 21 1 375 2 158 1 339 1 340 1 248 1 317 1 
290 1 234 1 164 1 139 1 215 1 165 1 260 1 295 1 321 1 366 1 30 1 196 1 198 1 350 1 267 1 328 1 75 1 147 1 245 1 207 2 128 1 21 1 375 2 158 1 339 1 340 1 248 1 317 1 
183 2 48 1 290 1 212 2 164 1 214 1 139 2 237 1 196 1 326 2 198 1 220 1 121 1 203 2 55 1 103 1 207 2 128 1 282 1 375 4 158 2 339 1 
135 1 183 2 111 1 48 1 212 2 290 1 139 2 214 1 234 1 164 1 215 1 295 1 321 1 237 1 323 1 326 2 30 1 196 1 198 1 350 1 267 1 11 1 220 1 328 1 98 1 147 1 203 2 55 1 103 1 207 2 128 1 282 1 375 4 158 2 339 1 248 1 317 1 
183 1 48 1 212 1 290 1 291 1 139 1 214 1 164 1 237 1 196 1 326 1 198 1 267 1 220 1 121 1 328 1 203 1 55 1 207 2 128 1 154 1 282 1 105 1 60 1 375 3 157 1 158 2 339 1 107 1 
184 1 48 3 212 6 319 2 191 1 164 2 139 10 214 3 294 1 237 3 196 2 198 2 220 3 369 1 370 1 148 1 55 3 276 2 205 1 224 1 103 3 207 4 282 3 375 19 231 1 158 9 339 2 134 1 313 1 249 2 
184 1 48 3 212 4 319 2 191 2 214 2 139 12 164 3 294 2 298 1 237 2 196 3 198 3 240 1 220 2 74 2 369 1 370 1 55 3 333 1 276 4 205 2 224 1 103 2 207 6 282 3 131 1 375 26 231 2 158 14 339 3 341 1 44 1 249 1 
184 1 48 4 188 1 191 3 139 21 90 1 294 3 298 1 237 4 196 3 198 3 301 1 240 1 55 4 204 1 205 1 103 4 305 1 207 6 158 20 313 1 314 1 249 1 212 8 319 4 214 5 164 3 33 1 220 4 74 1 369 1 370 1 276 4 333 1 224 1 282 5 131 1 375 41 231 2 339 3 134 1 341 1 44 1 
184 1 48 4 212 7 188 1 319 4 191 3 164 4 139 18 214 4 90 1 294 3 298 1 237 3 196 4 198 4 301 1 240 1 33 1 220 3 74 2 369 1 370 1 55 4 333 1 276 4 204 1 205 1 224 1 305 1 103 4 207 8 282 5 131 1 375 38 231 2 158 20 339 4 134 1 314 1 341 1 313 1 44 1 249 1 
184 1 48 7 212 14 188 1 319 4 191 4 164 2 139 25 214 8 294 2 298 1 237 7 196 2 198 2 301 1 240 1 239 2 33 1 220 7 74 1 369 1 370 1 55 7 333 1 276 4 204 1 205 1 224 1 305 1 103 7 207 4 282 8 131 1 375 52 231 1 158 27 339 2 314 1 341 1 313 2 44 1 249 1 
116 1 365 1 29 1 102 1 43 1 315 1 344 1 292 1 246 1 175 1 
79 1 42 1 
365 1 83 1 102 1 43 1 96 1 344 1 268 1 246 1 175 1 
102 1 235 1 344 1 292 1 142 1 311 1 246 1 175 1 297 1 169 2 365 1 29 1 325 1 177 1 43 1 315 1 247 1 97 1 
102 1 235 1 344 1 292 1 142 1 311 1 246 1 175 1 297 1 169 2 365 1 29 1 325 1 177 1 43 1 315 1 247 1 97 1 
102 1 235 1 344 1 292 1 142 1 311 1 246 1 175 1 297 1 169 2 365 1 29 1 325 1 177 1 43 1 315 1 247 1 97 1 
65 1 114 1 331 1 
65 1 114 1 331 1 
59 1 65 1 115 1 
59 1 115 1 
172 1 364 1 
251 1 344 1 260 1 142 1 364 1 168 1 169 1 365 1 325 1 267 2 172 1 97 1 328 2 150 1 102 1 79 1 39 1 311 1 246 1 175 1 154 2 105 2 157 2 338 1 43 1 42 1 316 1 
114 1 331 1 
59 1 115 1 
23 2 290 1 234 2 164 1 139 1 215 1 5 1 236 1 321 2 143 1 30 1 196 1 144 1 198 1 118 1 350 1 267 2 121 1 328 2 75 1 207 2 128 1 357 1 375 2 157 2 158 1 339 1 340 1 248 1 362 1 317 2 
371 2 1 1 187 1 355 1 234 2 215 1 321 2 335 1 28 1 324 1 94 1 199 1 160 1 350 1 11 1 329 1 109 1 317 2 330 1 
371 2 185 1 187 1 355 1 234 1 215 1 321 1 28 1 324 1 94 1 199 1 160 1 350 1 329 1 109 1 317 1 330 1 
22 1 234 1 215 1 321 1 335 1 21 1 28 1 52 1 30 1 350 1 162 1 248 1 122 1 317 1 
371 2 1 1 187 1 355 1 234 1 215 1 321 1 335 1 28 1 324 1 94 1 199 1 160 1 350 1 329 1 109 1 317 1 330 1 
257 1 
322 1 303 1 297 1 254 1 238 1 72 1 63 1 
259 1 322 1 297 2 238 1 145 1 367 1 95 1 200 1 97 1 16 1 77 1 80 1 311 1 62 1 229 1 46 1 63 1 
48 2 138 2 234 3 7 2 297 8 237 2 238 9 350 4 95 3 11 1 200 4 241 1 97 5 147 3 202 1 16 4 54 6 55 2 152 2 104 2 311 5 58 1 153 2 21 1 62 4 248 3 63 2 317 3 252 2 254 1 213 2 214 2 215 3 68 2 259 5 321 3 322 8 30 10 119 1 72 1 368 1 273 3 35 2 77 4 80 6 226 2 129 2 282 2 283 2 285 1 229 12 41 1 342 2 45 6 
136 1 48 2 138 1 319 1 191 1 214 2 259 1 7 2 294 1 322 5 297 5 298 1 237 2 238 8 95 1 240 1 200 2 97 1 368 1 16 2 54 5 55 2 77 2 80 3 311 1 129 1 130 1 282 2 131 1 229 6 62 2 341 1 44 1 45 5 63 2 
138 1 214 1 7 2 192 1 322 2 238 2 301 1 267 1 200 1 97 1 328 1 352 1 353 1 15 1 275 1 16 1 100 1 77 1 204 1 311 1 154 1 282 2 105 1 62 1 157 1 107 1 378 1 314 1 
16 1 254 1 77 1 322 1 297 1 62 1 238 1 72 1 200 1 63 1 
48 2 54 5 55 2 138 1 213 1 214 2 80 5 7 2 322 5 297 5 282 2 237 2 229 10 238 5 45 5 
297 1 95 1 259 1 97 1 63 1 311 1 
186 1 234 3 215 1 259 4 166 1 321 3 51 1 322 2 30 1 238 1 119 1 350 1 95 2 200 2 241 1 97 3 368 2 122 1 16 2 77 2 57 1 38 1 311 3 129 1 21 2 62 1 162 1 248 1 317 3 
111 1 290 1 139 1 164 1 234 1 215 1 260 1 321 1 295 1 323 1 30 1 196 1 198 1 350 1 267 3 328 3 353 1 98 1 147 1 207 2 128 1 21 1 154 2 105 2 375 1 106 1 157 2 339 1 107 2 340 1 248 1 317 1 
16 1 54 2 77 1 80 2 129 1 322 2 297 4 229 4 62 1 238 1 33 1 200 1 45 2 63 2 368 1 
318 1 365 1 246 1 
318 1 365 1 246 1 
365 1 315 1 172 1 91 1 246 1 
318 1 365 1 246 1 
365 1 159 1 246 1 
365 1 159 1 246 1 
365 1 159 1 246 1 
365 1 246 1 
344 1 175 1 
74 1 212 3 188 1 204 1 214 1 139 4 164 2 103 2 305 1 207 4 282 1 375 8 158 4 196 2 198 2 339 2 301 1 314 1 33 1 220 1 
303 1 212 2 188 1 204 1 139 3 214 1 305 1 103 2 282 1 375 6 158 3 301 1 314 1 33 1 
48 1 212 2 55 1 139 2 214 1 164 1 103 1 207 2 82 1 237 1 282 1 375 4 196 1 158 2 198 1 339 1 220 1 
48 1 55 1 212 2 319 2 191 1 214 1 139 4 103 1 294 1 237 1 282 1 375 7 158 3 313 1 220 1 
48 2 212 9 188 1 191 2 319 2 139 12 214 3 164 2 237 2 196 2 198 2 301 2 239 1 33 1 220 4 74 2 55 2 17 1 204 2 305 1 103 5 207 4 81 1 282 3 375 23 158 11 339 2 314 1 313 1 
375 1 319 1 139 1 
375 1 158 1 191 1 
48 1 55 1 212 3 164 1 213 1 139 3 214 1 103 2 207 2 82 1 282 1 237 1 375 6 196 1 158 3 339 1 198 1 220 1 
48 2 212 2 191 1 319 1 139 6 164 1 214 2 294 1 298 1 237 2 196 1 198 1 240 1 220 1 55 2 224 1 103 1 207 2 282 2 131 1 375 12 158 6 339 1 341 1 44 1 
212 2 204 1 214 1 139 3 103 1 282 1 375 6 158 3 301 1 314 1 220 1 
74 1 212 2 188 1 204 1 139 2 164 1 103 1 305 1 207 2 81 1 375 3 158 1 196 1 198 1 339 1 301 1 220 1 
275 1 212 5 204 2 164 1 224 1 139 5 214 2 103 3 207 2 282 2 375 10 196 1 158 5 339 1 198 1 301 2 314 1 220 2 
48 1 212 1 224 1 164 1 207 2 282 1 375 2 196 1 158 2 198 1 339 1 220 1 
48 1 212 2 55 1 139 2 214 1 224 1 164 1 103 1 207 2 237 1 282 1 375 4 196 1 158 2 198 1 339 1 220 1 
74 1 212 2 204 1 139 2 224 1 164 3 103 1 207 6 81 1 375 3 196 3 158 1 198 3 339 3 301 1 134 1 220 1 
48 3 212 12 188 1 319 4 191 3 139 18 164 5 214 5 294 1 237 3 196 5 198 5 301 3 33 1 220 5 74 2 372 1 55 3 204 3 224 1 305 1 103 7 207 10 81 1 82 1 280 1 282 5 375 34 158 16 339 5 134 1 314 2 313 1 232 1 
212 2 188 1 191 1 319 1 214 1 139 4 164 1 294 1 196 1 198 1 301 1 33 1 204 1 224 1 305 1 103 2 207 2 282 1 375 8 158 4 339 1 314 1 44 1 
48 1 212 3 188 1 319 2 191 1 214 1 139 5 164 2 294 1 196 2 198 2 301 1 33 1 220 1 55 1 204 1 224 1 103 2 305 1 207 4 82 1 282 2 375 11 158 6 339 2 314 1 313 1 44 1 
48 2 212 4 188 1 191 1 319 1 139 10 164 3 214 3 294 1 298 1 237 2 196 3 198 3 301 1 240 1 33 1 220 1 74 1 55 2 204 1 224 1 305 1 103 3 207 6 82 1 282 3 131 1 375 19 158 9 339 3 314 1 341 1 44 1 
48 2 212 5 188 1 191 1 319 1 139 7 164 3 214 2 294 1 298 1 237 1 196 3 198 3 301 1 240 1 33 1 220 2 74 1 55 2 204 1 224 1 305 1 103 3 207 6 82 1 282 3 131 1 375 17 158 10 339 3 314 1 341 1 44 1 
212 2 188 1 191 1 319 1 214 1 139 4 164 1 294 1 196 1 198 1 301 1 33 1 204 1 224 1 305 1 103 2 207 2 282 1 375 8 158 4 339 1 314 1 44 1 
48 2 212 2 191 1 319 1 139 6 164 1 214 2 294 1 298 1 237 2 196 1 198 1 240 1 220 1 55 2 224 1 103 1 207 2 282 2 131 1 375 12 158 6 339 1 341 1 44 1 
48 2 212 5 188 1 319 1 191 1 139 8 164 4 214 2 294 1 298 1 237 1 196 4 198 4 301 1 240 1 33 1 220 2 74 2 55 2 204 1 224 1 305 1 103 3 207 8 82 1 282 3 131 1 375 18 158 10 339 4 314 1 341 1 44 1 
48 3 212 6 319 1 191 1 139 7 164 4 214 2 294 1 298 1 237 2 196 4 198 4 240 1 220 3 74 2 55 3 224 1 103 3 207 8 282 3 131 1 375 16 158 9 339 4 134 1 341 1 44 1 
212 6 188 1 204 3 139 4 214 1 305 2 103 3 282 1 375 7 158 3 301 3 314 1 220 3 
48 2 212 4 188 1 319 1 191 1 139 8 164 4 214 2 294 1 298 1 237 1 196 4 198 4 301 1 240 1 33 1 220 1 74 2 55 2 204 1 224 1 305 1 103 3 207 8 282 3 131 1 375 18 158 10 339 4 134 1 314 1 341 1 44 1 
194 1 157 1 267 1 260 1 49 1 328 1 356 1 
190 1 260 1 89 1 49 1 356 1 194 1 156 1 157 1 108 1 267 1 328 1 73 1 
303 1 21 1 30 1 350 1 234 1 215 1 162 1 248 1 122 1 321 1 317 1 
98 1 147 1 234 1 215 1 260 1 295 1 227 1 321 1 154 1 21 1 105 1 157 1 30 1 350 1 267 2 248 1 328 2 317 1 
252 1 98 1 147 2 234 1 68 1 215 1 260 1 346 1 295 1 227 1 321 1 154 2 155 1 105 1 157 2 30 3 350 1 119 1 267 2 248 2 328 2 352 1 317 1 
252 1 234 2 215 1 165 1 68 1 260 1 25 1 346 1 321 2 295 1 30 3 119 1 350 1 267 2 328 2 352 1 147 2 227 1 154 2 105 1 155 1 157 2 248 2 317 2 
252 1 273 1 147 1 234 3 68 1 215 1 259 1 25 1 226 1 311 2 104 1 321 3 21 1 297 1 30 4 218 1 350 1 119 1 248 1 97 2 63 1 243 1 317 3 
252 1 273 1 147 1 35 1 234 3 68 1 215 1 259 1 25 1 226 1 311 2 104 1 321 3 21 1 297 1 30 4 350 1 119 1 248 1 97 2 63 1 317 3 
350 1 234 1 215 1 321 1 317 1 217 1 
147 1 23 1 2 1 36 1 234 7 307 1 215 2 140 1 225 1 217 1 321 7 21 2 285 1 376 1 30 3 118 1 350 3 11 1 248 2 109 1 317 6 
135 1 183 1 111 1 212 2 290 2 188 1 139 3 214 1 164 2 234 1 215 1 260 2 295 1 321 1 323 1 326 1 30 1 196 2 144 1 198 2 301 1 350 1 267 2 33 1 11 1 121 1 328 2 98 1 147 1 203 1 204 1 103 2 305 1 207 4 128 2 227 1 154 1 282 1 105 1 375 6 84 1 157 1 158 3 339 2 314 1 248 1 317 1 
251 1 254 1 234 1 259 2 321 1 322 1 297 1 30 2 238 1 95 1 72 1 200 2 241 1 97 3 273 1 35 1 16 2 77 2 152 1 226 1 311 3 104 1 21 1 153 1 62 2 342 1 63 1 317 1 
147 1 234 2 215 1 104 1 217 1 321 2 58 1 285 1 30 2 350 2 11 1 248 1 317 2 
174 1 234 4 215 1 25 1 321 4 21 1 30 1 350 1 162 1 11 1 248 1 122 1 317 4 
147 1 256 1 234 2 307 1 24 1 215 1 225 1 321 2 30 1 119 1 377 1 350 2 248 1 317 2 
21 1 371 1 324 1 199 1 350 1 234 1 215 1 330 1 321 1 317 1 
234 2 215 1 321 2 30 1 118 1 350 1 11 1 362 1 248 1 109 1 317 2 
2 1 174 1 234 5 215 2 140 1 321 5 21 1 30 3 118 1 119 1 350 2 162 1 11 1 248 2 122 1 317 4 
2 1 174 1 234 5 215 2 321 5 21 1 230 1 30 3 118 1 119 1 350 2 162 1 11 1 248 2 122 1 317 4 
147 1 234 1 165 1 215 1 260 1 295 1 227 1 321 1 154 1 21 1 105 1 157 1 30 1 350 1 267 2 248 1 328 2 317 1 
147 1 234 1 307 1 215 1 225 1 321 1 285 1 376 1 30 1 119 1 350 2 248 1 317 1 
146 1 157 1 101 1 78 1 267 1 5 1 328 1 236 1 143 1 
221 1 146 1 87 1 
180 1 146 1 101 1 78 1 260 1 
251 1 180 2 0 1 146 1 110 1 221 1 87 1 101 2 78 2 260 1 346 1 226 1 311 2 297 1 155 1 133 1 97 2 63 1 352 1 
303 1 71 1 223 1 92 1 
71 1 223 1 359 1 67 1 206 1 363 1 92 1 
209 1 361 1 363 1 
86 1 71 1 223 1 117 1 233 2 359 3 67 1 31 1 206 1 141 1 363 3 92 1 
264 1 71 1 223 1 359 2 67 1 206 1 380 1 363 2 92 1 
371 1 117 1 3 1 359 1 67 1 199 1 206 1 242 1 329 1 363 1 92 1 
71 1 117 1 359 1 67 1 206 1 363 1 92 1 
71 2 223 1 117 1 359 1 67 1 206 1 363 1 
211 1 149 1 67 2 206 2 92 1 71 1 117 1 359 2 40 1 363 2 
274 1 264 2 71 1 223 1 117 1 3 1 359 3 67 1 206 1 13 1 363 3 261 1 92 2 
223 1 371 2 67 1 206 1 348 1 92 1 264 1 71 1 324 1 117 1 359 2 199 1 160 1 363 2 329 1 
274 1 264 2 71 1 223 1 117 1 358 1 3 1 359 4 67 2 206 2 380 1 363 4 92 2 
71 1 223 1 117 1 359 1 67 1 206 1 363 1 92 1 
274 1 223 2 233 1 67 1 3 1 206 1 141 1 193 1 92 3 264 2 71 2 359 4 31 1 363 4 
264 1 71 1 223 1 299 1 117 1 359 2 67 1 206 1 363 2 64 1 381 1 92 1 
223 1 67 1 233 2 206 1 141 2 92 1 281 1 71 1 117 1 359 3 31 1 363 3 
306 1 250 1 92 2 270 2 
210 1 117 1 359 1 67 1 206 1 363 1 
264 1 71 1 223 1 117 1 359 2 67 1 206 1 363 2 261 1 92 1 
327 1 
71 1 223 1 117 1 359 1 67 1 206 1 363 1 92 1 
264 1 71 1 223 1 117 1 233 1 359 3 67 1 206 1 363 3 261 1 92 1 
274 1 3 1 193 1 92 1 
71 1 92 1 
